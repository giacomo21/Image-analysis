// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkRobustAutomaticThresholdImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkRobustAutomaticThresholdImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkRobustAutomaticThresholdImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkRobustAutomaticThresholdImageFilterJava
#endif
#ifdef SWIGLUA
%module itkRobustAutomaticThresholdImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkRobustAutomaticThresholdImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkRobustAutomaticThresholdImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkRobustAutomaticThresholdImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkRobustAutomaticThresholdImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkRobustAutomaticThresholdImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkRobustAutomaticThresholdImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkRobustAutomaticThresholdImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkRobustAutomaticThresholdImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkRobustAutomaticThresholdImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkRobustAutomaticThresholdImageFilterPython
#endif
#ifdef SWIGR
%module itkRobustAutomaticThresholdImageFilterR
#endif
#ifdef SWIGRUBY
%module itkRobustAutomaticThresholdImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkRobustAutomaticThresholdImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkRobustAutomaticThresholdImageFilterTcl
#endif
#ifdef SWIGXML
%module itkRobustAutomaticThresholdImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Review.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImage.i
%import wrap_itkImageToImageFilterA.i


%include itk.i
%include wrap_itkRobustAutomaticThresholdImageFilter_ext.i


 class itkRobustAutomaticThresholdImageFilterID2ID2IUC2 : public itkImageToImageFilterID2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkRobustAutomaticThresholdImageFilterID2ID2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char GetInsideValue() const;
     virtual double GetThreshold() const;
     virtual void SetPow(double const _arg);
     virtual double GetPow() const;
     void SetGradientImage(itkImageD2 * input);
     itkImageD2 * GetGradientImage();
     void SetInput1(itkImageD2 * input);
     void SetInput2(itkImageD2 * input);
   private:
     itkRobustAutomaticThresholdImageFilterID2ID2IUC2(itkRobustAutomaticThresholdImageFilterID2ID2IUC2 const & arg0);
     void operator=(itkRobustAutomaticThresholdImageFilterID2ID2IUC2 const & arg0);
   protected:
     itkRobustAutomaticThresholdImageFilterID2ID2IUC2();
     ~itkRobustAutomaticThresholdImageFilterID2ID2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkRobustAutomaticThresholdImageFilterID2ID2IUC2_Pointer {
   public:
     itkRobustAutomaticThresholdImageFilterID2ID2IUC2_Pointer();
     itkRobustAutomaticThresholdImageFilterID2ID2IUC2_Pointer(itkRobustAutomaticThresholdImageFilterID2ID2IUC2_Pointer const & p);
     itkRobustAutomaticThresholdImageFilterID2ID2IUC2_Pointer(itkRobustAutomaticThresholdImageFilterID2ID2IUC2 * p);
     ~itkRobustAutomaticThresholdImageFilterID2ID2IUC2_Pointer();
     itkRobustAutomaticThresholdImageFilterID2ID2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRobustAutomaticThresholdImageFilterID2ID2IUC2 * GetPointer() const;
     bool operator<(itkRobustAutomaticThresholdImageFilterID2ID2IUC2_Pointer const & r) const;
     bool operator>(itkRobustAutomaticThresholdImageFilterID2ID2IUC2_Pointer const & r) const;
     bool operator<=(itkRobustAutomaticThresholdImageFilterID2ID2IUC2_Pointer const & r) const;
     bool operator>=(itkRobustAutomaticThresholdImageFilterID2ID2IUC2_Pointer const & r) const;
     itkRobustAutomaticThresholdImageFilterID2ID2IUC2_Pointer & operator=(itkRobustAutomaticThresholdImageFilterID2ID2IUC2_Pointer const & r);
     itkRobustAutomaticThresholdImageFilterID2ID2IUC2_Pointer & operator=(itkRobustAutomaticThresholdImageFilterID2ID2IUC2 * r);
     itkRobustAutomaticThresholdImageFilterID2ID2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRobustAutomaticThresholdImageFilterID2ID2IUL2 : public itkImageToImageFilterID2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkRobustAutomaticThresholdImageFilterID2ID2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long GetOutsideValue() const;
     virtual void SetInsideValue(unsigned long const _arg);
     virtual unsigned long GetInsideValue() const;
     virtual double GetThreshold() const;
     virtual void SetPow(double const _arg);
     virtual double GetPow() const;
     void SetGradientImage(itkImageD2 * input);
     itkImageD2 * GetGradientImage();
     void SetInput1(itkImageD2 * input);
     void SetInput2(itkImageD2 * input);
   private:
     itkRobustAutomaticThresholdImageFilterID2ID2IUL2(itkRobustAutomaticThresholdImageFilterID2ID2IUL2 const & arg0);
     void operator=(itkRobustAutomaticThresholdImageFilterID2ID2IUL2 const & arg0);
   protected:
     itkRobustAutomaticThresholdImageFilterID2ID2IUL2();
     ~itkRobustAutomaticThresholdImageFilterID2ID2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkRobustAutomaticThresholdImageFilterID2ID2IUL2_Pointer {
   public:
     itkRobustAutomaticThresholdImageFilterID2ID2IUL2_Pointer();
     itkRobustAutomaticThresholdImageFilterID2ID2IUL2_Pointer(itkRobustAutomaticThresholdImageFilterID2ID2IUL2_Pointer const & p);
     itkRobustAutomaticThresholdImageFilterID2ID2IUL2_Pointer(itkRobustAutomaticThresholdImageFilterID2ID2IUL2 * p);
     ~itkRobustAutomaticThresholdImageFilterID2ID2IUL2_Pointer();
     itkRobustAutomaticThresholdImageFilterID2ID2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRobustAutomaticThresholdImageFilterID2ID2IUL2 * GetPointer() const;
     bool operator<(itkRobustAutomaticThresholdImageFilterID2ID2IUL2_Pointer const & r) const;
     bool operator>(itkRobustAutomaticThresholdImageFilterID2ID2IUL2_Pointer const & r) const;
     bool operator<=(itkRobustAutomaticThresholdImageFilterID2ID2IUL2_Pointer const & r) const;
     bool operator>=(itkRobustAutomaticThresholdImageFilterID2ID2IUL2_Pointer const & r) const;
     itkRobustAutomaticThresholdImageFilterID2ID2IUL2_Pointer & operator=(itkRobustAutomaticThresholdImageFilterID2ID2IUL2_Pointer const & r);
     itkRobustAutomaticThresholdImageFilterID2ID2IUL2_Pointer & operator=(itkRobustAutomaticThresholdImageFilterID2ID2IUL2 * r);
     itkRobustAutomaticThresholdImageFilterID2ID2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRobustAutomaticThresholdImageFilterID2ID2IUS2 : public itkImageToImageFilterID2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkRobustAutomaticThresholdImageFilterID2ID2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short GetOutsideValue() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short GetInsideValue() const;
     virtual double GetThreshold() const;
     virtual void SetPow(double const _arg);
     virtual double GetPow() const;
     void SetGradientImage(itkImageD2 * input);
     itkImageD2 * GetGradientImage();
     void SetInput1(itkImageD2 * input);
     void SetInput2(itkImageD2 * input);
   private:
     itkRobustAutomaticThresholdImageFilterID2ID2IUS2(itkRobustAutomaticThresholdImageFilterID2ID2IUS2 const & arg0);
     void operator=(itkRobustAutomaticThresholdImageFilterID2ID2IUS2 const & arg0);
   protected:
     itkRobustAutomaticThresholdImageFilterID2ID2IUS2();
     ~itkRobustAutomaticThresholdImageFilterID2ID2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkRobustAutomaticThresholdImageFilterID2ID2IUS2_Pointer {
   public:
     itkRobustAutomaticThresholdImageFilterID2ID2IUS2_Pointer();
     itkRobustAutomaticThresholdImageFilterID2ID2IUS2_Pointer(itkRobustAutomaticThresholdImageFilterID2ID2IUS2_Pointer const & p);
     itkRobustAutomaticThresholdImageFilterID2ID2IUS2_Pointer(itkRobustAutomaticThresholdImageFilterID2ID2IUS2 * p);
     ~itkRobustAutomaticThresholdImageFilterID2ID2IUS2_Pointer();
     itkRobustAutomaticThresholdImageFilterID2ID2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRobustAutomaticThresholdImageFilterID2ID2IUS2 * GetPointer() const;
     bool operator<(itkRobustAutomaticThresholdImageFilterID2ID2IUS2_Pointer const & r) const;
     bool operator>(itkRobustAutomaticThresholdImageFilterID2ID2IUS2_Pointer const & r) const;
     bool operator<=(itkRobustAutomaticThresholdImageFilterID2ID2IUS2_Pointer const & r) const;
     bool operator>=(itkRobustAutomaticThresholdImageFilterID2ID2IUS2_Pointer const & r) const;
     itkRobustAutomaticThresholdImageFilterID2ID2IUS2_Pointer & operator=(itkRobustAutomaticThresholdImageFilterID2ID2IUS2_Pointer const & r);
     itkRobustAutomaticThresholdImageFilterID2ID2IUS2_Pointer & operator=(itkRobustAutomaticThresholdImageFilterID2ID2IUS2 * r);
     itkRobustAutomaticThresholdImageFilterID2ID2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRobustAutomaticThresholdImageFilterID3ID3IUC3 : public itkImageToImageFilterID3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkRobustAutomaticThresholdImageFilterID3ID3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char GetInsideValue() const;
     virtual double GetThreshold() const;
     virtual void SetPow(double const _arg);
     virtual double GetPow() const;
     void SetGradientImage(itkImageD3 * input);
     itkImageD3 * GetGradientImage();
     void SetInput1(itkImageD3 * input);
     void SetInput2(itkImageD3 * input);
   private:
     itkRobustAutomaticThresholdImageFilterID3ID3IUC3(itkRobustAutomaticThresholdImageFilterID3ID3IUC3 const & arg0);
     void operator=(itkRobustAutomaticThresholdImageFilterID3ID3IUC3 const & arg0);
   protected:
     itkRobustAutomaticThresholdImageFilterID3ID3IUC3();
     ~itkRobustAutomaticThresholdImageFilterID3ID3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkRobustAutomaticThresholdImageFilterID3ID3IUC3_Pointer {
   public:
     itkRobustAutomaticThresholdImageFilterID3ID3IUC3_Pointer();
     itkRobustAutomaticThresholdImageFilterID3ID3IUC3_Pointer(itkRobustAutomaticThresholdImageFilterID3ID3IUC3_Pointer const & p);
     itkRobustAutomaticThresholdImageFilterID3ID3IUC3_Pointer(itkRobustAutomaticThresholdImageFilterID3ID3IUC3 * p);
     ~itkRobustAutomaticThresholdImageFilterID3ID3IUC3_Pointer();
     itkRobustAutomaticThresholdImageFilterID3ID3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRobustAutomaticThresholdImageFilterID3ID3IUC3 * GetPointer() const;
     bool operator<(itkRobustAutomaticThresholdImageFilterID3ID3IUC3_Pointer const & r) const;
     bool operator>(itkRobustAutomaticThresholdImageFilterID3ID3IUC3_Pointer const & r) const;
     bool operator<=(itkRobustAutomaticThresholdImageFilterID3ID3IUC3_Pointer const & r) const;
     bool operator>=(itkRobustAutomaticThresholdImageFilterID3ID3IUC3_Pointer const & r) const;
     itkRobustAutomaticThresholdImageFilterID3ID3IUC3_Pointer & operator=(itkRobustAutomaticThresholdImageFilterID3ID3IUC3_Pointer const & r);
     itkRobustAutomaticThresholdImageFilterID3ID3IUC3_Pointer & operator=(itkRobustAutomaticThresholdImageFilterID3ID3IUC3 * r);
     itkRobustAutomaticThresholdImageFilterID3ID3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRobustAutomaticThresholdImageFilterID3ID3IUL3 : public itkImageToImageFilterID3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkRobustAutomaticThresholdImageFilterID3ID3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long GetOutsideValue() const;
     virtual void SetInsideValue(unsigned long const _arg);
     virtual unsigned long GetInsideValue() const;
     virtual double GetThreshold() const;
     virtual void SetPow(double const _arg);
     virtual double GetPow() const;
     void SetGradientImage(itkImageD3 * input);
     itkImageD3 * GetGradientImage();
     void SetInput1(itkImageD3 * input);
     void SetInput2(itkImageD3 * input);
   private:
     itkRobustAutomaticThresholdImageFilterID3ID3IUL3(itkRobustAutomaticThresholdImageFilterID3ID3IUL3 const & arg0);
     void operator=(itkRobustAutomaticThresholdImageFilterID3ID3IUL3 const & arg0);
   protected:
     itkRobustAutomaticThresholdImageFilterID3ID3IUL3();
     ~itkRobustAutomaticThresholdImageFilterID3ID3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkRobustAutomaticThresholdImageFilterID3ID3IUL3_Pointer {
   public:
     itkRobustAutomaticThresholdImageFilterID3ID3IUL3_Pointer();
     itkRobustAutomaticThresholdImageFilterID3ID3IUL3_Pointer(itkRobustAutomaticThresholdImageFilterID3ID3IUL3_Pointer const & p);
     itkRobustAutomaticThresholdImageFilterID3ID3IUL3_Pointer(itkRobustAutomaticThresholdImageFilterID3ID3IUL3 * p);
     ~itkRobustAutomaticThresholdImageFilterID3ID3IUL3_Pointer();
     itkRobustAutomaticThresholdImageFilterID3ID3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRobustAutomaticThresholdImageFilterID3ID3IUL3 * GetPointer() const;
     bool operator<(itkRobustAutomaticThresholdImageFilterID3ID3IUL3_Pointer const & r) const;
     bool operator>(itkRobustAutomaticThresholdImageFilterID3ID3IUL3_Pointer const & r) const;
     bool operator<=(itkRobustAutomaticThresholdImageFilterID3ID3IUL3_Pointer const & r) const;
     bool operator>=(itkRobustAutomaticThresholdImageFilterID3ID3IUL3_Pointer const & r) const;
     itkRobustAutomaticThresholdImageFilterID3ID3IUL3_Pointer & operator=(itkRobustAutomaticThresholdImageFilterID3ID3IUL3_Pointer const & r);
     itkRobustAutomaticThresholdImageFilterID3ID3IUL3_Pointer & operator=(itkRobustAutomaticThresholdImageFilterID3ID3IUL3 * r);
     itkRobustAutomaticThresholdImageFilterID3ID3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRobustAutomaticThresholdImageFilterID3ID3IUS3 : public itkImageToImageFilterID3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkRobustAutomaticThresholdImageFilterID3ID3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short GetOutsideValue() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short GetInsideValue() const;
     virtual double GetThreshold() const;
     virtual void SetPow(double const _arg);
     virtual double GetPow() const;
     void SetGradientImage(itkImageD3 * input);
     itkImageD3 * GetGradientImage();
     void SetInput1(itkImageD3 * input);
     void SetInput2(itkImageD3 * input);
   private:
     itkRobustAutomaticThresholdImageFilterID3ID3IUS3(itkRobustAutomaticThresholdImageFilterID3ID3IUS3 const & arg0);
     void operator=(itkRobustAutomaticThresholdImageFilterID3ID3IUS3 const & arg0);
   protected:
     itkRobustAutomaticThresholdImageFilterID3ID3IUS3();
     ~itkRobustAutomaticThresholdImageFilterID3ID3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkRobustAutomaticThresholdImageFilterID3ID3IUS3_Pointer {
   public:
     itkRobustAutomaticThresholdImageFilterID3ID3IUS3_Pointer();
     itkRobustAutomaticThresholdImageFilterID3ID3IUS3_Pointer(itkRobustAutomaticThresholdImageFilterID3ID3IUS3_Pointer const & p);
     itkRobustAutomaticThresholdImageFilterID3ID3IUS3_Pointer(itkRobustAutomaticThresholdImageFilterID3ID3IUS3 * p);
     ~itkRobustAutomaticThresholdImageFilterID3ID3IUS3_Pointer();
     itkRobustAutomaticThresholdImageFilterID3ID3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRobustAutomaticThresholdImageFilterID3ID3IUS3 * GetPointer() const;
     bool operator<(itkRobustAutomaticThresholdImageFilterID3ID3IUS3_Pointer const & r) const;
     bool operator>(itkRobustAutomaticThresholdImageFilterID3ID3IUS3_Pointer const & r) const;
     bool operator<=(itkRobustAutomaticThresholdImageFilterID3ID3IUS3_Pointer const & r) const;
     bool operator>=(itkRobustAutomaticThresholdImageFilterID3ID3IUS3_Pointer const & r) const;
     itkRobustAutomaticThresholdImageFilterID3ID3IUS3_Pointer & operator=(itkRobustAutomaticThresholdImageFilterID3ID3IUS3_Pointer const & r);
     itkRobustAutomaticThresholdImageFilterID3ID3IUS3_Pointer & operator=(itkRobustAutomaticThresholdImageFilterID3ID3IUS3 * r);
     itkRobustAutomaticThresholdImageFilterID3ID3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRobustAutomaticThresholdImageFilterIF2IF2IUC2 : public itkImageToImageFilterIF2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkRobustAutomaticThresholdImageFilterIF2IF2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char GetInsideValue() const;
     virtual float GetThreshold() const;
     virtual void SetPow(double const _arg);
     virtual double GetPow() const;
     void SetGradientImage(itkImageF2 * input);
     itkImageF2 * GetGradientImage();
     void SetInput1(itkImageF2 * input);
     void SetInput2(itkImageF2 * input);
   private:
     itkRobustAutomaticThresholdImageFilterIF2IF2IUC2(itkRobustAutomaticThresholdImageFilterIF2IF2IUC2 const & arg0);
     void operator=(itkRobustAutomaticThresholdImageFilterIF2IF2IUC2 const & arg0);
   protected:
     itkRobustAutomaticThresholdImageFilterIF2IF2IUC2();
     ~itkRobustAutomaticThresholdImageFilterIF2IF2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkRobustAutomaticThresholdImageFilterIF2IF2IUC2_Pointer {
   public:
     itkRobustAutomaticThresholdImageFilterIF2IF2IUC2_Pointer();
     itkRobustAutomaticThresholdImageFilterIF2IF2IUC2_Pointer(itkRobustAutomaticThresholdImageFilterIF2IF2IUC2_Pointer const & p);
     itkRobustAutomaticThresholdImageFilterIF2IF2IUC2_Pointer(itkRobustAutomaticThresholdImageFilterIF2IF2IUC2 * p);
     ~itkRobustAutomaticThresholdImageFilterIF2IF2IUC2_Pointer();
     itkRobustAutomaticThresholdImageFilterIF2IF2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRobustAutomaticThresholdImageFilterIF2IF2IUC2 * GetPointer() const;
     bool operator<(itkRobustAutomaticThresholdImageFilterIF2IF2IUC2_Pointer const & r) const;
     bool operator>(itkRobustAutomaticThresholdImageFilterIF2IF2IUC2_Pointer const & r) const;
     bool operator<=(itkRobustAutomaticThresholdImageFilterIF2IF2IUC2_Pointer const & r) const;
     bool operator>=(itkRobustAutomaticThresholdImageFilterIF2IF2IUC2_Pointer const & r) const;
     itkRobustAutomaticThresholdImageFilterIF2IF2IUC2_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIF2IF2IUC2_Pointer const & r);
     itkRobustAutomaticThresholdImageFilterIF2IF2IUC2_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIF2IF2IUC2 * r);
     itkRobustAutomaticThresholdImageFilterIF2IF2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRobustAutomaticThresholdImageFilterIF2IF2IUL2 : public itkImageToImageFilterIF2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkRobustAutomaticThresholdImageFilterIF2IF2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long GetOutsideValue() const;
     virtual void SetInsideValue(unsigned long const _arg);
     virtual unsigned long GetInsideValue() const;
     virtual float GetThreshold() const;
     virtual void SetPow(double const _arg);
     virtual double GetPow() const;
     void SetGradientImage(itkImageF2 * input);
     itkImageF2 * GetGradientImage();
     void SetInput1(itkImageF2 * input);
     void SetInput2(itkImageF2 * input);
   private:
     itkRobustAutomaticThresholdImageFilterIF2IF2IUL2(itkRobustAutomaticThresholdImageFilterIF2IF2IUL2 const & arg0);
     void operator=(itkRobustAutomaticThresholdImageFilterIF2IF2IUL2 const & arg0);
   protected:
     itkRobustAutomaticThresholdImageFilterIF2IF2IUL2();
     ~itkRobustAutomaticThresholdImageFilterIF2IF2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkRobustAutomaticThresholdImageFilterIF2IF2IUL2_Pointer {
   public:
     itkRobustAutomaticThresholdImageFilterIF2IF2IUL2_Pointer();
     itkRobustAutomaticThresholdImageFilterIF2IF2IUL2_Pointer(itkRobustAutomaticThresholdImageFilterIF2IF2IUL2_Pointer const & p);
     itkRobustAutomaticThresholdImageFilterIF2IF2IUL2_Pointer(itkRobustAutomaticThresholdImageFilterIF2IF2IUL2 * p);
     ~itkRobustAutomaticThresholdImageFilterIF2IF2IUL2_Pointer();
     itkRobustAutomaticThresholdImageFilterIF2IF2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRobustAutomaticThresholdImageFilterIF2IF2IUL2 * GetPointer() const;
     bool operator<(itkRobustAutomaticThresholdImageFilterIF2IF2IUL2_Pointer const & r) const;
     bool operator>(itkRobustAutomaticThresholdImageFilterIF2IF2IUL2_Pointer const & r) const;
     bool operator<=(itkRobustAutomaticThresholdImageFilterIF2IF2IUL2_Pointer const & r) const;
     bool operator>=(itkRobustAutomaticThresholdImageFilterIF2IF2IUL2_Pointer const & r) const;
     itkRobustAutomaticThresholdImageFilterIF2IF2IUL2_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIF2IF2IUL2_Pointer const & r);
     itkRobustAutomaticThresholdImageFilterIF2IF2IUL2_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIF2IF2IUL2 * r);
     itkRobustAutomaticThresholdImageFilterIF2IF2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRobustAutomaticThresholdImageFilterIF2IF2IUS2 : public itkImageToImageFilterIF2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkRobustAutomaticThresholdImageFilterIF2IF2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short GetOutsideValue() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short GetInsideValue() const;
     virtual float GetThreshold() const;
     virtual void SetPow(double const _arg);
     virtual double GetPow() const;
     void SetGradientImage(itkImageF2 * input);
     itkImageF2 * GetGradientImage();
     void SetInput1(itkImageF2 * input);
     void SetInput2(itkImageF2 * input);
   private:
     itkRobustAutomaticThresholdImageFilterIF2IF2IUS2(itkRobustAutomaticThresholdImageFilterIF2IF2IUS2 const & arg0);
     void operator=(itkRobustAutomaticThresholdImageFilterIF2IF2IUS2 const & arg0);
   protected:
     itkRobustAutomaticThresholdImageFilterIF2IF2IUS2();
     ~itkRobustAutomaticThresholdImageFilterIF2IF2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkRobustAutomaticThresholdImageFilterIF2IF2IUS2_Pointer {
   public:
     itkRobustAutomaticThresholdImageFilterIF2IF2IUS2_Pointer();
     itkRobustAutomaticThresholdImageFilterIF2IF2IUS2_Pointer(itkRobustAutomaticThresholdImageFilterIF2IF2IUS2_Pointer const & p);
     itkRobustAutomaticThresholdImageFilterIF2IF2IUS2_Pointer(itkRobustAutomaticThresholdImageFilterIF2IF2IUS2 * p);
     ~itkRobustAutomaticThresholdImageFilterIF2IF2IUS2_Pointer();
     itkRobustAutomaticThresholdImageFilterIF2IF2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRobustAutomaticThresholdImageFilterIF2IF2IUS2 * GetPointer() const;
     bool operator<(itkRobustAutomaticThresholdImageFilterIF2IF2IUS2_Pointer const & r) const;
     bool operator>(itkRobustAutomaticThresholdImageFilterIF2IF2IUS2_Pointer const & r) const;
     bool operator<=(itkRobustAutomaticThresholdImageFilterIF2IF2IUS2_Pointer const & r) const;
     bool operator>=(itkRobustAutomaticThresholdImageFilterIF2IF2IUS2_Pointer const & r) const;
     itkRobustAutomaticThresholdImageFilterIF2IF2IUS2_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIF2IF2IUS2_Pointer const & r);
     itkRobustAutomaticThresholdImageFilterIF2IF2IUS2_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIF2IF2IUS2 * r);
     itkRobustAutomaticThresholdImageFilterIF2IF2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRobustAutomaticThresholdImageFilterIF3IF3IUC3 : public itkImageToImageFilterIF3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkRobustAutomaticThresholdImageFilterIF3IF3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char GetInsideValue() const;
     virtual float GetThreshold() const;
     virtual void SetPow(double const _arg);
     virtual double GetPow() const;
     void SetGradientImage(itkImageF3 * input);
     itkImageF3 * GetGradientImage();
     void SetInput1(itkImageF3 * input);
     void SetInput2(itkImageF3 * input);
   private:
     itkRobustAutomaticThresholdImageFilterIF3IF3IUC3(itkRobustAutomaticThresholdImageFilterIF3IF3IUC3 const & arg0);
     void operator=(itkRobustAutomaticThresholdImageFilterIF3IF3IUC3 const & arg0);
   protected:
     itkRobustAutomaticThresholdImageFilterIF3IF3IUC3();
     ~itkRobustAutomaticThresholdImageFilterIF3IF3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkRobustAutomaticThresholdImageFilterIF3IF3IUC3_Pointer {
   public:
     itkRobustAutomaticThresholdImageFilterIF3IF3IUC3_Pointer();
     itkRobustAutomaticThresholdImageFilterIF3IF3IUC3_Pointer(itkRobustAutomaticThresholdImageFilterIF3IF3IUC3_Pointer const & p);
     itkRobustAutomaticThresholdImageFilterIF3IF3IUC3_Pointer(itkRobustAutomaticThresholdImageFilterIF3IF3IUC3 * p);
     ~itkRobustAutomaticThresholdImageFilterIF3IF3IUC3_Pointer();
     itkRobustAutomaticThresholdImageFilterIF3IF3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRobustAutomaticThresholdImageFilterIF3IF3IUC3 * GetPointer() const;
     bool operator<(itkRobustAutomaticThresholdImageFilterIF3IF3IUC3_Pointer const & r) const;
     bool operator>(itkRobustAutomaticThresholdImageFilterIF3IF3IUC3_Pointer const & r) const;
     bool operator<=(itkRobustAutomaticThresholdImageFilterIF3IF3IUC3_Pointer const & r) const;
     bool operator>=(itkRobustAutomaticThresholdImageFilterIF3IF3IUC3_Pointer const & r) const;
     itkRobustAutomaticThresholdImageFilterIF3IF3IUC3_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIF3IF3IUC3_Pointer const & r);
     itkRobustAutomaticThresholdImageFilterIF3IF3IUC3_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIF3IF3IUC3 * r);
     itkRobustAutomaticThresholdImageFilterIF3IF3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRobustAutomaticThresholdImageFilterIF3IF3IUL3 : public itkImageToImageFilterIF3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkRobustAutomaticThresholdImageFilterIF3IF3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long GetOutsideValue() const;
     virtual void SetInsideValue(unsigned long const _arg);
     virtual unsigned long GetInsideValue() const;
     virtual float GetThreshold() const;
     virtual void SetPow(double const _arg);
     virtual double GetPow() const;
     void SetGradientImage(itkImageF3 * input);
     itkImageF3 * GetGradientImage();
     void SetInput1(itkImageF3 * input);
     void SetInput2(itkImageF3 * input);
   private:
     itkRobustAutomaticThresholdImageFilterIF3IF3IUL3(itkRobustAutomaticThresholdImageFilterIF3IF3IUL3 const & arg0);
     void operator=(itkRobustAutomaticThresholdImageFilterIF3IF3IUL3 const & arg0);
   protected:
     itkRobustAutomaticThresholdImageFilterIF3IF3IUL3();
     ~itkRobustAutomaticThresholdImageFilterIF3IF3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkRobustAutomaticThresholdImageFilterIF3IF3IUL3_Pointer {
   public:
     itkRobustAutomaticThresholdImageFilterIF3IF3IUL3_Pointer();
     itkRobustAutomaticThresholdImageFilterIF3IF3IUL3_Pointer(itkRobustAutomaticThresholdImageFilterIF3IF3IUL3_Pointer const & p);
     itkRobustAutomaticThresholdImageFilterIF3IF3IUL3_Pointer(itkRobustAutomaticThresholdImageFilterIF3IF3IUL3 * p);
     ~itkRobustAutomaticThresholdImageFilterIF3IF3IUL3_Pointer();
     itkRobustAutomaticThresholdImageFilterIF3IF3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRobustAutomaticThresholdImageFilterIF3IF3IUL3 * GetPointer() const;
     bool operator<(itkRobustAutomaticThresholdImageFilterIF3IF3IUL3_Pointer const & r) const;
     bool operator>(itkRobustAutomaticThresholdImageFilterIF3IF3IUL3_Pointer const & r) const;
     bool operator<=(itkRobustAutomaticThresholdImageFilterIF3IF3IUL3_Pointer const & r) const;
     bool operator>=(itkRobustAutomaticThresholdImageFilterIF3IF3IUL3_Pointer const & r) const;
     itkRobustAutomaticThresholdImageFilterIF3IF3IUL3_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIF3IF3IUL3_Pointer const & r);
     itkRobustAutomaticThresholdImageFilterIF3IF3IUL3_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIF3IF3IUL3 * r);
     itkRobustAutomaticThresholdImageFilterIF3IF3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRobustAutomaticThresholdImageFilterIF3IF3IUS3 : public itkImageToImageFilterIF3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkRobustAutomaticThresholdImageFilterIF3IF3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short GetOutsideValue() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short GetInsideValue() const;
     virtual float GetThreshold() const;
     virtual void SetPow(double const _arg);
     virtual double GetPow() const;
     void SetGradientImage(itkImageF3 * input);
     itkImageF3 * GetGradientImage();
     void SetInput1(itkImageF3 * input);
     void SetInput2(itkImageF3 * input);
   private:
     itkRobustAutomaticThresholdImageFilterIF3IF3IUS3(itkRobustAutomaticThresholdImageFilterIF3IF3IUS3 const & arg0);
     void operator=(itkRobustAutomaticThresholdImageFilterIF3IF3IUS3 const & arg0);
   protected:
     itkRobustAutomaticThresholdImageFilterIF3IF3IUS3();
     ~itkRobustAutomaticThresholdImageFilterIF3IF3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkRobustAutomaticThresholdImageFilterIF3IF3IUS3_Pointer {
   public:
     itkRobustAutomaticThresholdImageFilterIF3IF3IUS3_Pointer();
     itkRobustAutomaticThresholdImageFilterIF3IF3IUS3_Pointer(itkRobustAutomaticThresholdImageFilterIF3IF3IUS3_Pointer const & p);
     itkRobustAutomaticThresholdImageFilterIF3IF3IUS3_Pointer(itkRobustAutomaticThresholdImageFilterIF3IF3IUS3 * p);
     ~itkRobustAutomaticThresholdImageFilterIF3IF3IUS3_Pointer();
     itkRobustAutomaticThresholdImageFilterIF3IF3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRobustAutomaticThresholdImageFilterIF3IF3IUS3 * GetPointer() const;
     bool operator<(itkRobustAutomaticThresholdImageFilterIF3IF3IUS3_Pointer const & r) const;
     bool operator>(itkRobustAutomaticThresholdImageFilterIF3IF3IUS3_Pointer const & r) const;
     bool operator<=(itkRobustAutomaticThresholdImageFilterIF3IF3IUS3_Pointer const & r) const;
     bool operator>=(itkRobustAutomaticThresholdImageFilterIF3IF3IUS3_Pointer const & r) const;
     itkRobustAutomaticThresholdImageFilterIF3IF3IUS3_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIF3IF3IUS3_Pointer const & r);
     itkRobustAutomaticThresholdImageFilterIF3IF3IUS3_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIF3IF3IUS3 * r);
     itkRobustAutomaticThresholdImageFilterIF3IF3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRobustAutomaticThresholdImageFilterIUC2IUC2IUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkRobustAutomaticThresholdImageFilterIUC2IUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char GetInsideValue() const;
     virtual unsigned char GetThreshold() const;
     virtual void SetPow(double const _arg);
     virtual double GetPow() const;
     void SetGradientImage(itkImageUC2 * input);
     itkImageUC2 * GetGradientImage();
     void SetInput1(itkImageUC2 * input);
     void SetInput2(itkImageUC2 * input);
   private:
     itkRobustAutomaticThresholdImageFilterIUC2IUC2IUC2(itkRobustAutomaticThresholdImageFilterIUC2IUC2IUC2 const & arg0);
     void operator=(itkRobustAutomaticThresholdImageFilterIUC2IUC2IUC2 const & arg0);
   protected:
     itkRobustAutomaticThresholdImageFilterIUC2IUC2IUC2();
     ~itkRobustAutomaticThresholdImageFilterIUC2IUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkRobustAutomaticThresholdImageFilterIUC2IUC2IUC2_Pointer {
   public:
     itkRobustAutomaticThresholdImageFilterIUC2IUC2IUC2_Pointer();
     itkRobustAutomaticThresholdImageFilterIUC2IUC2IUC2_Pointer(itkRobustAutomaticThresholdImageFilterIUC2IUC2IUC2_Pointer const & p);
     itkRobustAutomaticThresholdImageFilterIUC2IUC2IUC2_Pointer(itkRobustAutomaticThresholdImageFilterIUC2IUC2IUC2 * p);
     ~itkRobustAutomaticThresholdImageFilterIUC2IUC2IUC2_Pointer();
     itkRobustAutomaticThresholdImageFilterIUC2IUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRobustAutomaticThresholdImageFilterIUC2IUC2IUC2 * GetPointer() const;
     bool operator<(itkRobustAutomaticThresholdImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator>(itkRobustAutomaticThresholdImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator<=(itkRobustAutomaticThresholdImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator>=(itkRobustAutomaticThresholdImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     itkRobustAutomaticThresholdImageFilterIUC2IUC2IUC2_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUC2IUC2IUC2_Pointer const & r);
     itkRobustAutomaticThresholdImageFilterIUC2IUC2IUC2_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUC2IUC2IUC2 * r);
     itkRobustAutomaticThresholdImageFilterIUC2IUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRobustAutomaticThresholdImageFilterIUC2IUC2IUL2 : public itkImageToImageFilterIUC2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkRobustAutomaticThresholdImageFilterIUC2IUC2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long GetOutsideValue() const;
     virtual void SetInsideValue(unsigned long const _arg);
     virtual unsigned long GetInsideValue() const;
     virtual unsigned char GetThreshold() const;
     virtual void SetPow(double const _arg);
     virtual double GetPow() const;
     void SetGradientImage(itkImageUC2 * input);
     itkImageUC2 * GetGradientImage();
     void SetInput1(itkImageUC2 * input);
     void SetInput2(itkImageUC2 * input);
   private:
     itkRobustAutomaticThresholdImageFilterIUC2IUC2IUL2(itkRobustAutomaticThresholdImageFilterIUC2IUC2IUL2 const & arg0);
     void operator=(itkRobustAutomaticThresholdImageFilterIUC2IUC2IUL2 const & arg0);
   protected:
     itkRobustAutomaticThresholdImageFilterIUC2IUC2IUL2();
     ~itkRobustAutomaticThresholdImageFilterIUC2IUC2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkRobustAutomaticThresholdImageFilterIUC2IUC2IUL2_Pointer {
   public:
     itkRobustAutomaticThresholdImageFilterIUC2IUC2IUL2_Pointer();
     itkRobustAutomaticThresholdImageFilterIUC2IUC2IUL2_Pointer(itkRobustAutomaticThresholdImageFilterIUC2IUC2IUL2_Pointer const & p);
     itkRobustAutomaticThresholdImageFilterIUC2IUC2IUL2_Pointer(itkRobustAutomaticThresholdImageFilterIUC2IUC2IUL2 * p);
     ~itkRobustAutomaticThresholdImageFilterIUC2IUC2IUL2_Pointer();
     itkRobustAutomaticThresholdImageFilterIUC2IUC2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRobustAutomaticThresholdImageFilterIUC2IUC2IUL2 * GetPointer() const;
     bool operator<(itkRobustAutomaticThresholdImageFilterIUC2IUC2IUL2_Pointer const & r) const;
     bool operator>(itkRobustAutomaticThresholdImageFilterIUC2IUC2IUL2_Pointer const & r) const;
     bool operator<=(itkRobustAutomaticThresholdImageFilterIUC2IUC2IUL2_Pointer const & r) const;
     bool operator>=(itkRobustAutomaticThresholdImageFilterIUC2IUC2IUL2_Pointer const & r) const;
     itkRobustAutomaticThresholdImageFilterIUC2IUC2IUL2_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUC2IUC2IUL2_Pointer const & r);
     itkRobustAutomaticThresholdImageFilterIUC2IUC2IUL2_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUC2IUC2IUL2 * r);
     itkRobustAutomaticThresholdImageFilterIUC2IUC2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRobustAutomaticThresholdImageFilterIUC2IUC2IUS2 : public itkImageToImageFilterIUC2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkRobustAutomaticThresholdImageFilterIUC2IUC2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short GetOutsideValue() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short GetInsideValue() const;
     virtual unsigned char GetThreshold() const;
     virtual void SetPow(double const _arg);
     virtual double GetPow() const;
     void SetGradientImage(itkImageUC2 * input);
     itkImageUC2 * GetGradientImage();
     void SetInput1(itkImageUC2 * input);
     void SetInput2(itkImageUC2 * input);
   private:
     itkRobustAutomaticThresholdImageFilterIUC2IUC2IUS2(itkRobustAutomaticThresholdImageFilterIUC2IUC2IUS2 const & arg0);
     void operator=(itkRobustAutomaticThresholdImageFilterIUC2IUC2IUS2 const & arg0);
   protected:
     itkRobustAutomaticThresholdImageFilterIUC2IUC2IUS2();
     ~itkRobustAutomaticThresholdImageFilterIUC2IUC2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkRobustAutomaticThresholdImageFilterIUC2IUC2IUS2_Pointer {
   public:
     itkRobustAutomaticThresholdImageFilterIUC2IUC2IUS2_Pointer();
     itkRobustAutomaticThresholdImageFilterIUC2IUC2IUS2_Pointer(itkRobustAutomaticThresholdImageFilterIUC2IUC2IUS2_Pointer const & p);
     itkRobustAutomaticThresholdImageFilterIUC2IUC2IUS2_Pointer(itkRobustAutomaticThresholdImageFilterIUC2IUC2IUS2 * p);
     ~itkRobustAutomaticThresholdImageFilterIUC2IUC2IUS2_Pointer();
     itkRobustAutomaticThresholdImageFilterIUC2IUC2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRobustAutomaticThresholdImageFilterIUC2IUC2IUS2 * GetPointer() const;
     bool operator<(itkRobustAutomaticThresholdImageFilterIUC2IUC2IUS2_Pointer const & r) const;
     bool operator>(itkRobustAutomaticThresholdImageFilterIUC2IUC2IUS2_Pointer const & r) const;
     bool operator<=(itkRobustAutomaticThresholdImageFilterIUC2IUC2IUS2_Pointer const & r) const;
     bool operator>=(itkRobustAutomaticThresholdImageFilterIUC2IUC2IUS2_Pointer const & r) const;
     itkRobustAutomaticThresholdImageFilterIUC2IUC2IUS2_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUC2IUC2IUS2_Pointer const & r);
     itkRobustAutomaticThresholdImageFilterIUC2IUC2IUS2_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUC2IUC2IUS2 * r);
     itkRobustAutomaticThresholdImageFilterIUC2IUC2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRobustAutomaticThresholdImageFilterIUC3IUC3IUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkRobustAutomaticThresholdImageFilterIUC3IUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char GetInsideValue() const;
     virtual unsigned char GetThreshold() const;
     virtual void SetPow(double const _arg);
     virtual double GetPow() const;
     void SetGradientImage(itkImageUC3 * input);
     itkImageUC3 * GetGradientImage();
     void SetInput1(itkImageUC3 * input);
     void SetInput2(itkImageUC3 * input);
   private:
     itkRobustAutomaticThresholdImageFilterIUC3IUC3IUC3(itkRobustAutomaticThresholdImageFilterIUC3IUC3IUC3 const & arg0);
     void operator=(itkRobustAutomaticThresholdImageFilterIUC3IUC3IUC3 const & arg0);
   protected:
     itkRobustAutomaticThresholdImageFilterIUC3IUC3IUC3();
     ~itkRobustAutomaticThresholdImageFilterIUC3IUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkRobustAutomaticThresholdImageFilterIUC3IUC3IUC3_Pointer {
   public:
     itkRobustAutomaticThresholdImageFilterIUC3IUC3IUC3_Pointer();
     itkRobustAutomaticThresholdImageFilterIUC3IUC3IUC3_Pointer(itkRobustAutomaticThresholdImageFilterIUC3IUC3IUC3_Pointer const & p);
     itkRobustAutomaticThresholdImageFilterIUC3IUC3IUC3_Pointer(itkRobustAutomaticThresholdImageFilterIUC3IUC3IUC3 * p);
     ~itkRobustAutomaticThresholdImageFilterIUC3IUC3IUC3_Pointer();
     itkRobustAutomaticThresholdImageFilterIUC3IUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRobustAutomaticThresholdImageFilterIUC3IUC3IUC3 * GetPointer() const;
     bool operator<(itkRobustAutomaticThresholdImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     bool operator>(itkRobustAutomaticThresholdImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     bool operator<=(itkRobustAutomaticThresholdImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     bool operator>=(itkRobustAutomaticThresholdImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     itkRobustAutomaticThresholdImageFilterIUC3IUC3IUC3_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUC3IUC3IUC3_Pointer const & r);
     itkRobustAutomaticThresholdImageFilterIUC3IUC3IUC3_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUC3IUC3IUC3 * r);
     itkRobustAutomaticThresholdImageFilterIUC3IUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRobustAutomaticThresholdImageFilterIUC3IUC3IUL3 : public itkImageToImageFilterIUC3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkRobustAutomaticThresholdImageFilterIUC3IUC3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long GetOutsideValue() const;
     virtual void SetInsideValue(unsigned long const _arg);
     virtual unsigned long GetInsideValue() const;
     virtual unsigned char GetThreshold() const;
     virtual void SetPow(double const _arg);
     virtual double GetPow() const;
     void SetGradientImage(itkImageUC3 * input);
     itkImageUC3 * GetGradientImage();
     void SetInput1(itkImageUC3 * input);
     void SetInput2(itkImageUC3 * input);
   private:
     itkRobustAutomaticThresholdImageFilterIUC3IUC3IUL3(itkRobustAutomaticThresholdImageFilterIUC3IUC3IUL3 const & arg0);
     void operator=(itkRobustAutomaticThresholdImageFilterIUC3IUC3IUL3 const & arg0);
   protected:
     itkRobustAutomaticThresholdImageFilterIUC3IUC3IUL3();
     ~itkRobustAutomaticThresholdImageFilterIUC3IUC3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkRobustAutomaticThresholdImageFilterIUC3IUC3IUL3_Pointer {
   public:
     itkRobustAutomaticThresholdImageFilterIUC3IUC3IUL3_Pointer();
     itkRobustAutomaticThresholdImageFilterIUC3IUC3IUL3_Pointer(itkRobustAutomaticThresholdImageFilterIUC3IUC3IUL3_Pointer const & p);
     itkRobustAutomaticThresholdImageFilterIUC3IUC3IUL3_Pointer(itkRobustAutomaticThresholdImageFilterIUC3IUC3IUL3 * p);
     ~itkRobustAutomaticThresholdImageFilterIUC3IUC3IUL3_Pointer();
     itkRobustAutomaticThresholdImageFilterIUC3IUC3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRobustAutomaticThresholdImageFilterIUC3IUC3IUL3 * GetPointer() const;
     bool operator<(itkRobustAutomaticThresholdImageFilterIUC3IUC3IUL3_Pointer const & r) const;
     bool operator>(itkRobustAutomaticThresholdImageFilterIUC3IUC3IUL3_Pointer const & r) const;
     bool operator<=(itkRobustAutomaticThresholdImageFilterIUC3IUC3IUL3_Pointer const & r) const;
     bool operator>=(itkRobustAutomaticThresholdImageFilterIUC3IUC3IUL3_Pointer const & r) const;
     itkRobustAutomaticThresholdImageFilterIUC3IUC3IUL3_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUC3IUC3IUL3_Pointer const & r);
     itkRobustAutomaticThresholdImageFilterIUC3IUC3IUL3_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUC3IUC3IUL3 * r);
     itkRobustAutomaticThresholdImageFilterIUC3IUC3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRobustAutomaticThresholdImageFilterIUC3IUC3IUS3 : public itkImageToImageFilterIUC3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkRobustAutomaticThresholdImageFilterIUC3IUC3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short GetOutsideValue() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short GetInsideValue() const;
     virtual unsigned char GetThreshold() const;
     virtual void SetPow(double const _arg);
     virtual double GetPow() const;
     void SetGradientImage(itkImageUC3 * input);
     itkImageUC3 * GetGradientImage();
     void SetInput1(itkImageUC3 * input);
     void SetInput2(itkImageUC3 * input);
   private:
     itkRobustAutomaticThresholdImageFilterIUC3IUC3IUS3(itkRobustAutomaticThresholdImageFilterIUC3IUC3IUS3 const & arg0);
     void operator=(itkRobustAutomaticThresholdImageFilterIUC3IUC3IUS3 const & arg0);
   protected:
     itkRobustAutomaticThresholdImageFilterIUC3IUC3IUS3();
     ~itkRobustAutomaticThresholdImageFilterIUC3IUC3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkRobustAutomaticThresholdImageFilterIUC3IUC3IUS3_Pointer {
   public:
     itkRobustAutomaticThresholdImageFilterIUC3IUC3IUS3_Pointer();
     itkRobustAutomaticThresholdImageFilterIUC3IUC3IUS3_Pointer(itkRobustAutomaticThresholdImageFilterIUC3IUC3IUS3_Pointer const & p);
     itkRobustAutomaticThresholdImageFilterIUC3IUC3IUS3_Pointer(itkRobustAutomaticThresholdImageFilterIUC3IUC3IUS3 * p);
     ~itkRobustAutomaticThresholdImageFilterIUC3IUC3IUS3_Pointer();
     itkRobustAutomaticThresholdImageFilterIUC3IUC3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRobustAutomaticThresholdImageFilterIUC3IUC3IUS3 * GetPointer() const;
     bool operator<(itkRobustAutomaticThresholdImageFilterIUC3IUC3IUS3_Pointer const & r) const;
     bool operator>(itkRobustAutomaticThresholdImageFilterIUC3IUC3IUS3_Pointer const & r) const;
     bool operator<=(itkRobustAutomaticThresholdImageFilterIUC3IUC3IUS3_Pointer const & r) const;
     bool operator>=(itkRobustAutomaticThresholdImageFilterIUC3IUC3IUS3_Pointer const & r) const;
     itkRobustAutomaticThresholdImageFilterIUC3IUC3IUS3_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUC3IUC3IUS3_Pointer const & r);
     itkRobustAutomaticThresholdImageFilterIUC3IUC3IUS3_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUC3IUC3IUS3 * r);
     itkRobustAutomaticThresholdImageFilterIUC3IUC3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRobustAutomaticThresholdImageFilterIUL2IUL2IUC2 : public itkImageToImageFilterIUL2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkRobustAutomaticThresholdImageFilterIUL2IUL2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char GetInsideValue() const;
     virtual unsigned long GetThreshold() const;
     virtual void SetPow(double const _arg);
     virtual double GetPow() const;
     void SetGradientImage(itkImageUL2 * input);
     itkImageUL2 * GetGradientImage();
     void SetInput1(itkImageUL2 * input);
     void SetInput2(itkImageUL2 * input);
   private:
     itkRobustAutomaticThresholdImageFilterIUL2IUL2IUC2(itkRobustAutomaticThresholdImageFilterIUL2IUL2IUC2 const & arg0);
     void operator=(itkRobustAutomaticThresholdImageFilterIUL2IUL2IUC2 const & arg0);
   protected:
     itkRobustAutomaticThresholdImageFilterIUL2IUL2IUC2();
     ~itkRobustAutomaticThresholdImageFilterIUL2IUL2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkRobustAutomaticThresholdImageFilterIUL2IUL2IUC2_Pointer {
   public:
     itkRobustAutomaticThresholdImageFilterIUL2IUL2IUC2_Pointer();
     itkRobustAutomaticThresholdImageFilterIUL2IUL2IUC2_Pointer(itkRobustAutomaticThresholdImageFilterIUL2IUL2IUC2_Pointer const & p);
     itkRobustAutomaticThresholdImageFilterIUL2IUL2IUC2_Pointer(itkRobustAutomaticThresholdImageFilterIUL2IUL2IUC2 * p);
     ~itkRobustAutomaticThresholdImageFilterIUL2IUL2IUC2_Pointer();
     itkRobustAutomaticThresholdImageFilterIUL2IUL2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRobustAutomaticThresholdImageFilterIUL2IUL2IUC2 * GetPointer() const;
     bool operator<(itkRobustAutomaticThresholdImageFilterIUL2IUL2IUC2_Pointer const & r) const;
     bool operator>(itkRobustAutomaticThresholdImageFilterIUL2IUL2IUC2_Pointer const & r) const;
     bool operator<=(itkRobustAutomaticThresholdImageFilterIUL2IUL2IUC2_Pointer const & r) const;
     bool operator>=(itkRobustAutomaticThresholdImageFilterIUL2IUL2IUC2_Pointer const & r) const;
     itkRobustAutomaticThresholdImageFilterIUL2IUL2IUC2_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUL2IUL2IUC2_Pointer const & r);
     itkRobustAutomaticThresholdImageFilterIUL2IUL2IUC2_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUL2IUL2IUC2 * r);
     itkRobustAutomaticThresholdImageFilterIUL2IUL2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRobustAutomaticThresholdImageFilterIUL2IUL2IUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkRobustAutomaticThresholdImageFilterIUL2IUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long GetOutsideValue() const;
     virtual void SetInsideValue(unsigned long const _arg);
     virtual unsigned long GetInsideValue() const;
     virtual unsigned long GetThreshold() const;
     virtual void SetPow(double const _arg);
     virtual double GetPow() const;
     void SetGradientImage(itkImageUL2 * input);
     itkImageUL2 * GetGradientImage();
     void SetInput1(itkImageUL2 * input);
     void SetInput2(itkImageUL2 * input);
   private:
     itkRobustAutomaticThresholdImageFilterIUL2IUL2IUL2(itkRobustAutomaticThresholdImageFilterIUL2IUL2IUL2 const & arg0);
     void operator=(itkRobustAutomaticThresholdImageFilterIUL2IUL2IUL2 const & arg0);
   protected:
     itkRobustAutomaticThresholdImageFilterIUL2IUL2IUL2();
     ~itkRobustAutomaticThresholdImageFilterIUL2IUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkRobustAutomaticThresholdImageFilterIUL2IUL2IUL2_Pointer {
   public:
     itkRobustAutomaticThresholdImageFilterIUL2IUL2IUL2_Pointer();
     itkRobustAutomaticThresholdImageFilterIUL2IUL2IUL2_Pointer(itkRobustAutomaticThresholdImageFilterIUL2IUL2IUL2_Pointer const & p);
     itkRobustAutomaticThresholdImageFilterIUL2IUL2IUL2_Pointer(itkRobustAutomaticThresholdImageFilterIUL2IUL2IUL2 * p);
     ~itkRobustAutomaticThresholdImageFilterIUL2IUL2IUL2_Pointer();
     itkRobustAutomaticThresholdImageFilterIUL2IUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRobustAutomaticThresholdImageFilterIUL2IUL2IUL2 * GetPointer() const;
     bool operator<(itkRobustAutomaticThresholdImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator>(itkRobustAutomaticThresholdImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator<=(itkRobustAutomaticThresholdImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator>=(itkRobustAutomaticThresholdImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     itkRobustAutomaticThresholdImageFilterIUL2IUL2IUL2_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUL2IUL2IUL2_Pointer const & r);
     itkRobustAutomaticThresholdImageFilterIUL2IUL2IUL2_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUL2IUL2IUL2 * r);
     itkRobustAutomaticThresholdImageFilterIUL2IUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRobustAutomaticThresholdImageFilterIUL2IUL2IUS2 : public itkImageToImageFilterIUL2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkRobustAutomaticThresholdImageFilterIUL2IUL2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short GetOutsideValue() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short GetInsideValue() const;
     virtual unsigned long GetThreshold() const;
     virtual void SetPow(double const _arg);
     virtual double GetPow() const;
     void SetGradientImage(itkImageUL2 * input);
     itkImageUL2 * GetGradientImage();
     void SetInput1(itkImageUL2 * input);
     void SetInput2(itkImageUL2 * input);
   private:
     itkRobustAutomaticThresholdImageFilterIUL2IUL2IUS2(itkRobustAutomaticThresholdImageFilterIUL2IUL2IUS2 const & arg0);
     void operator=(itkRobustAutomaticThresholdImageFilterIUL2IUL2IUS2 const & arg0);
   protected:
     itkRobustAutomaticThresholdImageFilterIUL2IUL2IUS2();
     ~itkRobustAutomaticThresholdImageFilterIUL2IUL2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkRobustAutomaticThresholdImageFilterIUL2IUL2IUS2_Pointer {
   public:
     itkRobustAutomaticThresholdImageFilterIUL2IUL2IUS2_Pointer();
     itkRobustAutomaticThresholdImageFilterIUL2IUL2IUS2_Pointer(itkRobustAutomaticThresholdImageFilterIUL2IUL2IUS2_Pointer const & p);
     itkRobustAutomaticThresholdImageFilterIUL2IUL2IUS2_Pointer(itkRobustAutomaticThresholdImageFilterIUL2IUL2IUS2 * p);
     ~itkRobustAutomaticThresholdImageFilterIUL2IUL2IUS2_Pointer();
     itkRobustAutomaticThresholdImageFilterIUL2IUL2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRobustAutomaticThresholdImageFilterIUL2IUL2IUS2 * GetPointer() const;
     bool operator<(itkRobustAutomaticThresholdImageFilterIUL2IUL2IUS2_Pointer const & r) const;
     bool operator>(itkRobustAutomaticThresholdImageFilterIUL2IUL2IUS2_Pointer const & r) const;
     bool operator<=(itkRobustAutomaticThresholdImageFilterIUL2IUL2IUS2_Pointer const & r) const;
     bool operator>=(itkRobustAutomaticThresholdImageFilterIUL2IUL2IUS2_Pointer const & r) const;
     itkRobustAutomaticThresholdImageFilterIUL2IUL2IUS2_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUL2IUL2IUS2_Pointer const & r);
     itkRobustAutomaticThresholdImageFilterIUL2IUL2IUS2_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUL2IUL2IUS2 * r);
     itkRobustAutomaticThresholdImageFilterIUL2IUL2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRobustAutomaticThresholdImageFilterIUL3IUL3IUC3 : public itkImageToImageFilterIUL3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkRobustAutomaticThresholdImageFilterIUL3IUL3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char GetInsideValue() const;
     virtual unsigned long GetThreshold() const;
     virtual void SetPow(double const _arg);
     virtual double GetPow() const;
     void SetGradientImage(itkImageUL3 * input);
     itkImageUL3 * GetGradientImage();
     void SetInput1(itkImageUL3 * input);
     void SetInput2(itkImageUL3 * input);
   private:
     itkRobustAutomaticThresholdImageFilterIUL3IUL3IUC3(itkRobustAutomaticThresholdImageFilterIUL3IUL3IUC3 const & arg0);
     void operator=(itkRobustAutomaticThresholdImageFilterIUL3IUL3IUC3 const & arg0);
   protected:
     itkRobustAutomaticThresholdImageFilterIUL3IUL3IUC3();
     ~itkRobustAutomaticThresholdImageFilterIUL3IUL3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkRobustAutomaticThresholdImageFilterIUL3IUL3IUC3_Pointer {
   public:
     itkRobustAutomaticThresholdImageFilterIUL3IUL3IUC3_Pointer();
     itkRobustAutomaticThresholdImageFilterIUL3IUL3IUC3_Pointer(itkRobustAutomaticThresholdImageFilterIUL3IUL3IUC3_Pointer const & p);
     itkRobustAutomaticThresholdImageFilterIUL3IUL3IUC3_Pointer(itkRobustAutomaticThresholdImageFilterIUL3IUL3IUC3 * p);
     ~itkRobustAutomaticThresholdImageFilterIUL3IUL3IUC3_Pointer();
     itkRobustAutomaticThresholdImageFilterIUL3IUL3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRobustAutomaticThresholdImageFilterIUL3IUL3IUC3 * GetPointer() const;
     bool operator<(itkRobustAutomaticThresholdImageFilterIUL3IUL3IUC3_Pointer const & r) const;
     bool operator>(itkRobustAutomaticThresholdImageFilterIUL3IUL3IUC3_Pointer const & r) const;
     bool operator<=(itkRobustAutomaticThresholdImageFilterIUL3IUL3IUC3_Pointer const & r) const;
     bool operator>=(itkRobustAutomaticThresholdImageFilterIUL3IUL3IUC3_Pointer const & r) const;
     itkRobustAutomaticThresholdImageFilterIUL3IUL3IUC3_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUL3IUL3IUC3_Pointer const & r);
     itkRobustAutomaticThresholdImageFilterIUL3IUL3IUC3_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUL3IUL3IUC3 * r);
     itkRobustAutomaticThresholdImageFilterIUL3IUL3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRobustAutomaticThresholdImageFilterIUL3IUL3IUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkRobustAutomaticThresholdImageFilterIUL3IUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long GetOutsideValue() const;
     virtual void SetInsideValue(unsigned long const _arg);
     virtual unsigned long GetInsideValue() const;
     virtual unsigned long GetThreshold() const;
     virtual void SetPow(double const _arg);
     virtual double GetPow() const;
     void SetGradientImage(itkImageUL3 * input);
     itkImageUL3 * GetGradientImage();
     void SetInput1(itkImageUL3 * input);
     void SetInput2(itkImageUL3 * input);
   private:
     itkRobustAutomaticThresholdImageFilterIUL3IUL3IUL3(itkRobustAutomaticThresholdImageFilterIUL3IUL3IUL3 const & arg0);
     void operator=(itkRobustAutomaticThresholdImageFilterIUL3IUL3IUL3 const & arg0);
   protected:
     itkRobustAutomaticThresholdImageFilterIUL3IUL3IUL3();
     ~itkRobustAutomaticThresholdImageFilterIUL3IUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkRobustAutomaticThresholdImageFilterIUL3IUL3IUL3_Pointer {
   public:
     itkRobustAutomaticThresholdImageFilterIUL3IUL3IUL3_Pointer();
     itkRobustAutomaticThresholdImageFilterIUL3IUL3IUL3_Pointer(itkRobustAutomaticThresholdImageFilterIUL3IUL3IUL3_Pointer const & p);
     itkRobustAutomaticThresholdImageFilterIUL3IUL3IUL3_Pointer(itkRobustAutomaticThresholdImageFilterIUL3IUL3IUL3 * p);
     ~itkRobustAutomaticThresholdImageFilterIUL3IUL3IUL3_Pointer();
     itkRobustAutomaticThresholdImageFilterIUL3IUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRobustAutomaticThresholdImageFilterIUL3IUL3IUL3 * GetPointer() const;
     bool operator<(itkRobustAutomaticThresholdImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     bool operator>(itkRobustAutomaticThresholdImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     bool operator<=(itkRobustAutomaticThresholdImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     bool operator>=(itkRobustAutomaticThresholdImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     itkRobustAutomaticThresholdImageFilterIUL3IUL3IUL3_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUL3IUL3IUL3_Pointer const & r);
     itkRobustAutomaticThresholdImageFilterIUL3IUL3IUL3_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUL3IUL3IUL3 * r);
     itkRobustAutomaticThresholdImageFilterIUL3IUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRobustAutomaticThresholdImageFilterIUL3IUL3IUS3 : public itkImageToImageFilterIUL3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkRobustAutomaticThresholdImageFilterIUL3IUL3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short GetOutsideValue() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short GetInsideValue() const;
     virtual unsigned long GetThreshold() const;
     virtual void SetPow(double const _arg);
     virtual double GetPow() const;
     void SetGradientImage(itkImageUL3 * input);
     itkImageUL3 * GetGradientImage();
     void SetInput1(itkImageUL3 * input);
     void SetInput2(itkImageUL3 * input);
   private:
     itkRobustAutomaticThresholdImageFilterIUL3IUL3IUS3(itkRobustAutomaticThresholdImageFilterIUL3IUL3IUS3 const & arg0);
     void operator=(itkRobustAutomaticThresholdImageFilterIUL3IUL3IUS3 const & arg0);
   protected:
     itkRobustAutomaticThresholdImageFilterIUL3IUL3IUS3();
     ~itkRobustAutomaticThresholdImageFilterIUL3IUL3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkRobustAutomaticThresholdImageFilterIUL3IUL3IUS3_Pointer {
   public:
     itkRobustAutomaticThresholdImageFilterIUL3IUL3IUS3_Pointer();
     itkRobustAutomaticThresholdImageFilterIUL3IUL3IUS3_Pointer(itkRobustAutomaticThresholdImageFilterIUL3IUL3IUS3_Pointer const & p);
     itkRobustAutomaticThresholdImageFilterIUL3IUL3IUS3_Pointer(itkRobustAutomaticThresholdImageFilterIUL3IUL3IUS3 * p);
     ~itkRobustAutomaticThresholdImageFilterIUL3IUL3IUS3_Pointer();
     itkRobustAutomaticThresholdImageFilterIUL3IUL3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRobustAutomaticThresholdImageFilterIUL3IUL3IUS3 * GetPointer() const;
     bool operator<(itkRobustAutomaticThresholdImageFilterIUL3IUL3IUS3_Pointer const & r) const;
     bool operator>(itkRobustAutomaticThresholdImageFilterIUL3IUL3IUS3_Pointer const & r) const;
     bool operator<=(itkRobustAutomaticThresholdImageFilterIUL3IUL3IUS3_Pointer const & r) const;
     bool operator>=(itkRobustAutomaticThresholdImageFilterIUL3IUL3IUS3_Pointer const & r) const;
     itkRobustAutomaticThresholdImageFilterIUL3IUL3IUS3_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUL3IUL3IUS3_Pointer const & r);
     itkRobustAutomaticThresholdImageFilterIUL3IUL3IUS3_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUL3IUL3IUS3 * r);
     itkRobustAutomaticThresholdImageFilterIUL3IUL3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRobustAutomaticThresholdImageFilterIUS2IUS2IUC2 : public itkImageToImageFilterIUS2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkRobustAutomaticThresholdImageFilterIUS2IUS2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char GetInsideValue() const;
     virtual unsigned short GetThreshold() const;
     virtual void SetPow(double const _arg);
     virtual double GetPow() const;
     void SetGradientImage(itkImageUS2 * input);
     itkImageUS2 * GetGradientImage();
     void SetInput1(itkImageUS2 * input);
     void SetInput2(itkImageUS2 * input);
   private:
     itkRobustAutomaticThresholdImageFilterIUS2IUS2IUC2(itkRobustAutomaticThresholdImageFilterIUS2IUS2IUC2 const & arg0);
     void operator=(itkRobustAutomaticThresholdImageFilterIUS2IUS2IUC2 const & arg0);
   protected:
     itkRobustAutomaticThresholdImageFilterIUS2IUS2IUC2();
     ~itkRobustAutomaticThresholdImageFilterIUS2IUS2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkRobustAutomaticThresholdImageFilterIUS2IUS2IUC2_Pointer {
   public:
     itkRobustAutomaticThresholdImageFilterIUS2IUS2IUC2_Pointer();
     itkRobustAutomaticThresholdImageFilterIUS2IUS2IUC2_Pointer(itkRobustAutomaticThresholdImageFilterIUS2IUS2IUC2_Pointer const & p);
     itkRobustAutomaticThresholdImageFilterIUS2IUS2IUC2_Pointer(itkRobustAutomaticThresholdImageFilterIUS2IUS2IUC2 * p);
     ~itkRobustAutomaticThresholdImageFilterIUS2IUS2IUC2_Pointer();
     itkRobustAutomaticThresholdImageFilterIUS2IUS2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRobustAutomaticThresholdImageFilterIUS2IUS2IUC2 * GetPointer() const;
     bool operator<(itkRobustAutomaticThresholdImageFilterIUS2IUS2IUC2_Pointer const & r) const;
     bool operator>(itkRobustAutomaticThresholdImageFilterIUS2IUS2IUC2_Pointer const & r) const;
     bool operator<=(itkRobustAutomaticThresholdImageFilterIUS2IUS2IUC2_Pointer const & r) const;
     bool operator>=(itkRobustAutomaticThresholdImageFilterIUS2IUS2IUC2_Pointer const & r) const;
     itkRobustAutomaticThresholdImageFilterIUS2IUS2IUC2_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUS2IUS2IUC2_Pointer const & r);
     itkRobustAutomaticThresholdImageFilterIUS2IUS2IUC2_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUS2IUS2IUC2 * r);
     itkRobustAutomaticThresholdImageFilterIUS2IUS2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRobustAutomaticThresholdImageFilterIUS2IUS2IUL2 : public itkImageToImageFilterIUS2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkRobustAutomaticThresholdImageFilterIUS2IUS2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long GetOutsideValue() const;
     virtual void SetInsideValue(unsigned long const _arg);
     virtual unsigned long GetInsideValue() const;
     virtual unsigned short GetThreshold() const;
     virtual void SetPow(double const _arg);
     virtual double GetPow() const;
     void SetGradientImage(itkImageUS2 * input);
     itkImageUS2 * GetGradientImage();
     void SetInput1(itkImageUS2 * input);
     void SetInput2(itkImageUS2 * input);
   private:
     itkRobustAutomaticThresholdImageFilterIUS2IUS2IUL2(itkRobustAutomaticThresholdImageFilterIUS2IUS2IUL2 const & arg0);
     void operator=(itkRobustAutomaticThresholdImageFilterIUS2IUS2IUL2 const & arg0);
   protected:
     itkRobustAutomaticThresholdImageFilterIUS2IUS2IUL2();
     ~itkRobustAutomaticThresholdImageFilterIUS2IUS2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkRobustAutomaticThresholdImageFilterIUS2IUS2IUL2_Pointer {
   public:
     itkRobustAutomaticThresholdImageFilterIUS2IUS2IUL2_Pointer();
     itkRobustAutomaticThresholdImageFilterIUS2IUS2IUL2_Pointer(itkRobustAutomaticThresholdImageFilterIUS2IUS2IUL2_Pointer const & p);
     itkRobustAutomaticThresholdImageFilterIUS2IUS2IUL2_Pointer(itkRobustAutomaticThresholdImageFilterIUS2IUS2IUL2 * p);
     ~itkRobustAutomaticThresholdImageFilterIUS2IUS2IUL2_Pointer();
     itkRobustAutomaticThresholdImageFilterIUS2IUS2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRobustAutomaticThresholdImageFilterIUS2IUS2IUL2 * GetPointer() const;
     bool operator<(itkRobustAutomaticThresholdImageFilterIUS2IUS2IUL2_Pointer const & r) const;
     bool operator>(itkRobustAutomaticThresholdImageFilterIUS2IUS2IUL2_Pointer const & r) const;
     bool operator<=(itkRobustAutomaticThresholdImageFilterIUS2IUS2IUL2_Pointer const & r) const;
     bool operator>=(itkRobustAutomaticThresholdImageFilterIUS2IUS2IUL2_Pointer const & r) const;
     itkRobustAutomaticThresholdImageFilterIUS2IUS2IUL2_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUS2IUS2IUL2_Pointer const & r);
     itkRobustAutomaticThresholdImageFilterIUS2IUS2IUL2_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUS2IUS2IUL2 * r);
     itkRobustAutomaticThresholdImageFilterIUS2IUS2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRobustAutomaticThresholdImageFilterIUS2IUS2IUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkRobustAutomaticThresholdImageFilterIUS2IUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short GetOutsideValue() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short GetInsideValue() const;
     virtual unsigned short GetThreshold() const;
     virtual void SetPow(double const _arg);
     virtual double GetPow() const;
     void SetGradientImage(itkImageUS2 * input);
     itkImageUS2 * GetGradientImage();
     void SetInput1(itkImageUS2 * input);
     void SetInput2(itkImageUS2 * input);
   private:
     itkRobustAutomaticThresholdImageFilterIUS2IUS2IUS2(itkRobustAutomaticThresholdImageFilterIUS2IUS2IUS2 const & arg0);
     void operator=(itkRobustAutomaticThresholdImageFilterIUS2IUS2IUS2 const & arg0);
   protected:
     itkRobustAutomaticThresholdImageFilterIUS2IUS2IUS2();
     ~itkRobustAutomaticThresholdImageFilterIUS2IUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkRobustAutomaticThresholdImageFilterIUS2IUS2IUS2_Pointer {
   public:
     itkRobustAutomaticThresholdImageFilterIUS2IUS2IUS2_Pointer();
     itkRobustAutomaticThresholdImageFilterIUS2IUS2IUS2_Pointer(itkRobustAutomaticThresholdImageFilterIUS2IUS2IUS2_Pointer const & p);
     itkRobustAutomaticThresholdImageFilterIUS2IUS2IUS2_Pointer(itkRobustAutomaticThresholdImageFilterIUS2IUS2IUS2 * p);
     ~itkRobustAutomaticThresholdImageFilterIUS2IUS2IUS2_Pointer();
     itkRobustAutomaticThresholdImageFilterIUS2IUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRobustAutomaticThresholdImageFilterIUS2IUS2IUS2 * GetPointer() const;
     bool operator<(itkRobustAutomaticThresholdImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator>(itkRobustAutomaticThresholdImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator<=(itkRobustAutomaticThresholdImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator>=(itkRobustAutomaticThresholdImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     itkRobustAutomaticThresholdImageFilterIUS2IUS2IUS2_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUS2IUS2IUS2_Pointer const & r);
     itkRobustAutomaticThresholdImageFilterIUS2IUS2IUS2_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUS2IUS2IUS2 * r);
     itkRobustAutomaticThresholdImageFilterIUS2IUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRobustAutomaticThresholdImageFilterIUS3IUS3IUC3 : public itkImageToImageFilterIUS3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkRobustAutomaticThresholdImageFilterIUS3IUS3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char GetInsideValue() const;
     virtual unsigned short GetThreshold() const;
     virtual void SetPow(double const _arg);
     virtual double GetPow() const;
     void SetGradientImage(itkImageUS3 * input);
     itkImageUS3 * GetGradientImage();
     void SetInput1(itkImageUS3 * input);
     void SetInput2(itkImageUS3 * input);
   private:
     itkRobustAutomaticThresholdImageFilterIUS3IUS3IUC3(itkRobustAutomaticThresholdImageFilterIUS3IUS3IUC3 const & arg0);
     void operator=(itkRobustAutomaticThresholdImageFilterIUS3IUS3IUC3 const & arg0);
   protected:
     itkRobustAutomaticThresholdImageFilterIUS3IUS3IUC3();
     ~itkRobustAutomaticThresholdImageFilterIUS3IUS3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkRobustAutomaticThresholdImageFilterIUS3IUS3IUC3_Pointer {
   public:
     itkRobustAutomaticThresholdImageFilterIUS3IUS3IUC3_Pointer();
     itkRobustAutomaticThresholdImageFilterIUS3IUS3IUC3_Pointer(itkRobustAutomaticThresholdImageFilterIUS3IUS3IUC3_Pointer const & p);
     itkRobustAutomaticThresholdImageFilterIUS3IUS3IUC3_Pointer(itkRobustAutomaticThresholdImageFilterIUS3IUS3IUC3 * p);
     ~itkRobustAutomaticThresholdImageFilterIUS3IUS3IUC3_Pointer();
     itkRobustAutomaticThresholdImageFilterIUS3IUS3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRobustAutomaticThresholdImageFilterIUS3IUS3IUC3 * GetPointer() const;
     bool operator<(itkRobustAutomaticThresholdImageFilterIUS3IUS3IUC3_Pointer const & r) const;
     bool operator>(itkRobustAutomaticThresholdImageFilterIUS3IUS3IUC3_Pointer const & r) const;
     bool operator<=(itkRobustAutomaticThresholdImageFilterIUS3IUS3IUC3_Pointer const & r) const;
     bool operator>=(itkRobustAutomaticThresholdImageFilterIUS3IUS3IUC3_Pointer const & r) const;
     itkRobustAutomaticThresholdImageFilterIUS3IUS3IUC3_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUS3IUS3IUC3_Pointer const & r);
     itkRobustAutomaticThresholdImageFilterIUS3IUS3IUC3_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUS3IUS3IUC3 * r);
     itkRobustAutomaticThresholdImageFilterIUS3IUS3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRobustAutomaticThresholdImageFilterIUS3IUS3IUL3 : public itkImageToImageFilterIUS3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkRobustAutomaticThresholdImageFilterIUS3IUS3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long GetOutsideValue() const;
     virtual void SetInsideValue(unsigned long const _arg);
     virtual unsigned long GetInsideValue() const;
     virtual unsigned short GetThreshold() const;
     virtual void SetPow(double const _arg);
     virtual double GetPow() const;
     void SetGradientImage(itkImageUS3 * input);
     itkImageUS3 * GetGradientImage();
     void SetInput1(itkImageUS3 * input);
     void SetInput2(itkImageUS3 * input);
   private:
     itkRobustAutomaticThresholdImageFilterIUS3IUS3IUL3(itkRobustAutomaticThresholdImageFilterIUS3IUS3IUL3 const & arg0);
     void operator=(itkRobustAutomaticThresholdImageFilterIUS3IUS3IUL3 const & arg0);
   protected:
     itkRobustAutomaticThresholdImageFilterIUS3IUS3IUL3();
     ~itkRobustAutomaticThresholdImageFilterIUS3IUS3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkRobustAutomaticThresholdImageFilterIUS3IUS3IUL3_Pointer {
   public:
     itkRobustAutomaticThresholdImageFilterIUS3IUS3IUL3_Pointer();
     itkRobustAutomaticThresholdImageFilterIUS3IUS3IUL3_Pointer(itkRobustAutomaticThresholdImageFilterIUS3IUS3IUL3_Pointer const & p);
     itkRobustAutomaticThresholdImageFilterIUS3IUS3IUL3_Pointer(itkRobustAutomaticThresholdImageFilterIUS3IUS3IUL3 * p);
     ~itkRobustAutomaticThresholdImageFilterIUS3IUS3IUL3_Pointer();
     itkRobustAutomaticThresholdImageFilterIUS3IUS3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRobustAutomaticThresholdImageFilterIUS3IUS3IUL3 * GetPointer() const;
     bool operator<(itkRobustAutomaticThresholdImageFilterIUS3IUS3IUL3_Pointer const & r) const;
     bool operator>(itkRobustAutomaticThresholdImageFilterIUS3IUS3IUL3_Pointer const & r) const;
     bool operator<=(itkRobustAutomaticThresholdImageFilterIUS3IUS3IUL3_Pointer const & r) const;
     bool operator>=(itkRobustAutomaticThresholdImageFilterIUS3IUS3IUL3_Pointer const & r) const;
     itkRobustAutomaticThresholdImageFilterIUS3IUS3IUL3_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUS3IUS3IUL3_Pointer const & r);
     itkRobustAutomaticThresholdImageFilterIUS3IUS3IUL3_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUS3IUS3IUL3 * r);
     itkRobustAutomaticThresholdImageFilterIUS3IUS3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRobustAutomaticThresholdImageFilterIUS3IUS3IUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkRobustAutomaticThresholdImageFilterIUS3IUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short GetOutsideValue() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short GetInsideValue() const;
     virtual unsigned short GetThreshold() const;
     virtual void SetPow(double const _arg);
     virtual double GetPow() const;
     void SetGradientImage(itkImageUS3 * input);
     itkImageUS3 * GetGradientImage();
     void SetInput1(itkImageUS3 * input);
     void SetInput2(itkImageUS3 * input);
   private:
     itkRobustAutomaticThresholdImageFilterIUS3IUS3IUS3(itkRobustAutomaticThresholdImageFilterIUS3IUS3IUS3 const & arg0);
     void operator=(itkRobustAutomaticThresholdImageFilterIUS3IUS3IUS3 const & arg0);
   protected:
     itkRobustAutomaticThresholdImageFilterIUS3IUS3IUS3();
     ~itkRobustAutomaticThresholdImageFilterIUS3IUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkRobustAutomaticThresholdImageFilterIUS3IUS3IUS3_Pointer {
   public:
     itkRobustAutomaticThresholdImageFilterIUS3IUS3IUS3_Pointer();
     itkRobustAutomaticThresholdImageFilterIUS3IUS3IUS3_Pointer(itkRobustAutomaticThresholdImageFilterIUS3IUS3IUS3_Pointer const & p);
     itkRobustAutomaticThresholdImageFilterIUS3IUS3IUS3_Pointer(itkRobustAutomaticThresholdImageFilterIUS3IUS3IUS3 * p);
     ~itkRobustAutomaticThresholdImageFilterIUS3IUS3IUS3_Pointer();
     itkRobustAutomaticThresholdImageFilterIUS3IUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRobustAutomaticThresholdImageFilterIUS3IUS3IUS3 * GetPointer() const;
     bool operator<(itkRobustAutomaticThresholdImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     bool operator>(itkRobustAutomaticThresholdImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     bool operator<=(itkRobustAutomaticThresholdImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     bool operator>=(itkRobustAutomaticThresholdImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     itkRobustAutomaticThresholdImageFilterIUS3IUS3IUS3_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUS3IUS3IUS3_Pointer const & r);
     itkRobustAutomaticThresholdImageFilterIUS3IUS3IUS3_Pointer & operator=(itkRobustAutomaticThresholdImageFilterIUS3IUS3IUS3 * r);
     itkRobustAutomaticThresholdImageFilterIUS3IUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


