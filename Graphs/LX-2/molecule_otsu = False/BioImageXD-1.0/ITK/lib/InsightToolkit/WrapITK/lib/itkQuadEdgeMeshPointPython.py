# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkQuadEdgeMeshPointPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkQuadEdgeMeshPointPython', [dirname(__file__)])
        except ImportError:
            import _itkQuadEdgeMeshPointPython
            return _itkQuadEdgeMeshPointPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkQuadEdgeMeshPointPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkQuadEdgeMeshPointPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkQuadEdgeMeshPointPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkGeometricalQuadEdgePython
import itkQuadEdgePython
import pyBasePython
import itkPointPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkFixedArrayPython
import itkVectorPython
import vnl_vector_refPython
class itkQuadEdgeMeshPointF2(itkPointPython.itkPointF2):
    """Proxy of C++ itkQuadEdgeMeshPointF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    PointDimension = _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF2_PointDimension
    __swig_destroy__ = _itkQuadEdgeMeshPointPython.delete_itkQuadEdgeMeshPointF2
    def __init__(self, *args): 
        """
        __init__(self) -> itkQuadEdgeMeshPointF2
        __init__(self, itkQuadEdgeMeshPointF2 r) -> itkQuadEdgeMeshPointF2
        __init__(self, itkPointF2 r) -> itkQuadEdgeMeshPointF2
        __init__(self, float r) -> itkQuadEdgeMeshPointF2
        """
        _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF2_swiginit(self,_itkQuadEdgeMeshPointPython.new_itkQuadEdgeMeshPointF2(*args))
    def SetEdge(self, *args):
        """SetEdge(self, itkGeometricalQuadEdgeULULBBF inputEdge)"""
        return _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF2_SetEdge(self, *args)

    def SetPoint(self, *args):
        """SetPoint(self, itkPointF2 point)"""
        return _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF2_SetPoint(self, *args)

    def GetEdge(self, *args):
        """
        GetEdge(self) -> itkGeometricalQuadEdgeULULBBF
        GetEdge(self) -> itkGeometricalQuadEdgeULULBBF
        """
        return _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF2_GetEdge(self, *args)

    def IsInternal(self):
        """IsInternal(self) -> bool"""
        return _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF2_IsInternal(self)

    def GetValence(self):
        """GetValence(self) -> int"""
        return _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF2_GetValence(self)

itkQuadEdgeMeshPointF2.SetEdge = new_instancemethod(_itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF2_SetEdge,None,itkQuadEdgeMeshPointF2)
itkQuadEdgeMeshPointF2.SetPoint = new_instancemethod(_itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF2_SetPoint,None,itkQuadEdgeMeshPointF2)
itkQuadEdgeMeshPointF2.GetEdge = new_instancemethod(_itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF2_GetEdge,None,itkQuadEdgeMeshPointF2)
itkQuadEdgeMeshPointF2.IsInternal = new_instancemethod(_itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF2_IsInternal,None,itkQuadEdgeMeshPointF2)
itkQuadEdgeMeshPointF2.GetValence = new_instancemethod(_itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF2_GetValence,None,itkQuadEdgeMeshPointF2)
itkQuadEdgeMeshPointF2_swigregister = _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF2_swigregister
itkQuadEdgeMeshPointF2_swigregister(itkQuadEdgeMeshPointF2)

class itkQuadEdgeMeshPointF3(itkPointPython.itkPointF3):
    """Proxy of C++ itkQuadEdgeMeshPointF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    PointDimension = _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF3_PointDimension
    __swig_destroy__ = _itkQuadEdgeMeshPointPython.delete_itkQuadEdgeMeshPointF3
    def __init__(self, *args): 
        """
        __init__(self) -> itkQuadEdgeMeshPointF3
        __init__(self, itkQuadEdgeMeshPointF3 r) -> itkQuadEdgeMeshPointF3
        __init__(self, itkPointF3 r) -> itkQuadEdgeMeshPointF3
        __init__(self, float r) -> itkQuadEdgeMeshPointF3
        """
        _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF3_swiginit(self,_itkQuadEdgeMeshPointPython.new_itkQuadEdgeMeshPointF3(*args))
    def SetEdge(self, *args):
        """SetEdge(self, itkGeometricalQuadEdgeULULBBF inputEdge)"""
        return _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF3_SetEdge(self, *args)

    def SetPoint(self, *args):
        """SetPoint(self, itkPointF3 point)"""
        return _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF3_SetPoint(self, *args)

    def GetEdge(self, *args):
        """
        GetEdge(self) -> itkGeometricalQuadEdgeULULBBF
        GetEdge(self) -> itkGeometricalQuadEdgeULULBBF
        """
        return _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF3_GetEdge(self, *args)

    def IsInternal(self):
        """IsInternal(self) -> bool"""
        return _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF3_IsInternal(self)

    def GetValence(self):
        """GetValence(self) -> int"""
        return _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF3_GetValence(self)

itkQuadEdgeMeshPointF3.SetEdge = new_instancemethod(_itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF3_SetEdge,None,itkQuadEdgeMeshPointF3)
itkQuadEdgeMeshPointF3.SetPoint = new_instancemethod(_itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF3_SetPoint,None,itkQuadEdgeMeshPointF3)
itkQuadEdgeMeshPointF3.GetEdge = new_instancemethod(_itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF3_GetEdge,None,itkQuadEdgeMeshPointF3)
itkQuadEdgeMeshPointF3.IsInternal = new_instancemethod(_itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF3_IsInternal,None,itkQuadEdgeMeshPointF3)
itkQuadEdgeMeshPointF3.GetValence = new_instancemethod(_itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF3_GetValence,None,itkQuadEdgeMeshPointF3)
itkQuadEdgeMeshPointF3_swigregister = _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF3_swigregister
itkQuadEdgeMeshPointF3_swigregister(itkQuadEdgeMeshPointF3)



