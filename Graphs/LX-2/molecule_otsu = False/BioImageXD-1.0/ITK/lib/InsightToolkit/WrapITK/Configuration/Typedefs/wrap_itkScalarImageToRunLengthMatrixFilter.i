// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkScalarImageToRunLengthMatrixFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkScalarImageToRunLengthMatrixFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkScalarImageToRunLengthMatrixFilterGuile
#endif
#ifdef SWIGJAVA
%module itkScalarImageToRunLengthMatrixFilterJava
#endif
#ifdef SWIGLUA
%module itkScalarImageToRunLengthMatrixFilterLua
#endif
#ifdef SWIGMODULA3
%module itkScalarImageToRunLengthMatrixFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkScalarImageToRunLengthMatrixFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkScalarImageToRunLengthMatrixFilterOcaml
#endif
#ifdef SWIGPERL
%module itkScalarImageToRunLengthMatrixFilterPerl
#endif
#ifdef SWIGPERL5
%module itkScalarImageToRunLengthMatrixFilterPerl5
#endif
#ifdef SWIGPHP
%module itkScalarImageToRunLengthMatrixFilterPhp
#endif
#ifdef SWIGPHP4
%module itkScalarImageToRunLengthMatrixFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkScalarImageToRunLengthMatrixFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkScalarImageToRunLengthMatrixFilterPike
#endif
#ifdef SWIGPYTHON
%module itkScalarImageToRunLengthMatrixFilterPython
#endif
#ifdef SWIGR
%module itkScalarImageToRunLengthMatrixFilterR
#endif
#ifdef SWIGRUBY
%module itkScalarImageToRunLengthMatrixFilterRuby
#endif
#ifdef SWIGSEXP
%module itkScalarImageToRunLengthMatrixFilterSexp
#endif
#ifdef SWIGTCL
%module itkScalarImageToRunLengthMatrixFilterTcl
#endif
#ifdef SWIGXML
%module itkScalarImageToRunLengthMatrixFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "itkBXD.includes"
%}


%{
%}




%import wrap_ITKRegions.i
%import wrap_itkOffset.i
%import wrap_itkImage.i
%import wrap_itkVectorContainer.i
%import wrap_ITKCommonBase.i
%import wrap_itkSize.i


%include itk.i
%include wrap_itkScalarImageToRunLengthMatrixFilter_ext.i


 class itkScalarImageToRunLengthMatrixFilterID2 : public itkProcessObject {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  DefaultBinsPerAxis = 256 };
     virtual char const * GetNameOfClass() const;
     static itkScalarImageToRunLengthMatrixFilterID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetInput(itkImageD2 const * image);
     itkImageD2 const * GetInput() const;
     void SetMaskImage(itkImageD2 const * image);
     itkImageD2 const * GetMaskImage() const;
     itk::Statistics::Histogram< double, itk::Statistics::DenseFrequencyContainer2 > const * GetOutput() const;
     virtual void SetInsidePixelValue(double const _arg);
     virtual double GetInsidePixelValue() const;
     virtual void SetNumberOfBinsPerAxis(unsigned int const _arg);
     virtual unsigned int GetNumberOfBinsPerAxis() const;
     void SetPixelValueMinMax(double min, double max);
     virtual double GetMin() const;
     virtual double GetMax() const;
     void SetDistanceValueMinMax(double min, double max);
     virtual double GetMinDistance() const;
     virtual double GetMaxDistance() const;
     virtual void SetOffsets(itkVectorContainerUCO2 * _arg);
     virtual itkVectorContainerUCO2 const * GetOffsets() const;
     void SetOffset(itkOffset2 const offset);
     void AddOffset(itkOffset2 const offset);
   private:
     itkScalarImageToRunLengthMatrixFilterID2(itkScalarImageToRunLengthMatrixFilterID2 const & arg0);
     void operator=(itkScalarImageToRunLengthMatrixFilterID2 const & arg0);
   protected:
     itkScalarImageToRunLengthMatrixFilterID2();
     ~itkScalarImageToRunLengthMatrixFilterID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void FillHistogram(itkSize2 radius, itkImageRegion2 region);
     virtual void FillHistogramWithMask(itkSize2 radius, itkImageRegion2 region, itkImageD2 const * maskImage);
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void GenerateData();
 };


 class itkScalarImageToRunLengthMatrixFilterID2_Pointer {
   public:
     itkScalarImageToRunLengthMatrixFilterID2_Pointer();
     itkScalarImageToRunLengthMatrixFilterID2_Pointer(itkScalarImageToRunLengthMatrixFilterID2_Pointer const & p);
     itkScalarImageToRunLengthMatrixFilterID2_Pointer(itkScalarImageToRunLengthMatrixFilterID2 * p);
     ~itkScalarImageToRunLengthMatrixFilterID2_Pointer();
     itkScalarImageToRunLengthMatrixFilterID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageToRunLengthMatrixFilterID2 * GetPointer() const;
     bool operator<(itkScalarImageToRunLengthMatrixFilterID2_Pointer const & r) const;
     bool operator>(itkScalarImageToRunLengthMatrixFilterID2_Pointer const & r) const;
     bool operator<=(itkScalarImageToRunLengthMatrixFilterID2_Pointer const & r) const;
     bool operator>=(itkScalarImageToRunLengthMatrixFilterID2_Pointer const & r) const;
     itkScalarImageToRunLengthMatrixFilterID2_Pointer & operator=(itkScalarImageToRunLengthMatrixFilterID2_Pointer const & r);
     itkScalarImageToRunLengthMatrixFilterID2_Pointer & operator=(itkScalarImageToRunLengthMatrixFilterID2 * r);
     itkScalarImageToRunLengthMatrixFilterID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageToRunLengthMatrixFilterID3 : public itkProcessObject {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  DefaultBinsPerAxis = 256 };
     virtual char const * GetNameOfClass() const;
     static itkScalarImageToRunLengthMatrixFilterID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetInput(itkImageD3 const * image);
     itkImageD3 const * GetInput() const;
     void SetMaskImage(itkImageD3 const * image);
     itkImageD3 const * GetMaskImage() const;
     itk::Statistics::Histogram< double, itk::Statistics::DenseFrequencyContainer2 > const * GetOutput() const;
     virtual void SetInsidePixelValue(double const _arg);
     virtual double GetInsidePixelValue() const;
     virtual void SetNumberOfBinsPerAxis(unsigned int const _arg);
     virtual unsigned int GetNumberOfBinsPerAxis() const;
     void SetPixelValueMinMax(double min, double max);
     virtual double GetMin() const;
     virtual double GetMax() const;
     void SetDistanceValueMinMax(double min, double max);
     virtual double GetMinDistance() const;
     virtual double GetMaxDistance() const;
     virtual void SetOffsets(itkVectorContainerUCO3 * _arg);
     virtual itkVectorContainerUCO3 const * GetOffsets() const;
     void SetOffset(itkOffset3 const offset);
     void AddOffset(itkOffset3 const offset);
   private:
     itkScalarImageToRunLengthMatrixFilterID3(itkScalarImageToRunLengthMatrixFilterID3 const & arg0);
     void operator=(itkScalarImageToRunLengthMatrixFilterID3 const & arg0);
   protected:
     itkScalarImageToRunLengthMatrixFilterID3();
     ~itkScalarImageToRunLengthMatrixFilterID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void FillHistogram(itkSize3 radius, itkImageRegion3 region);
     virtual void FillHistogramWithMask(itkSize3 radius, itkImageRegion3 region, itkImageD3 const * maskImage);
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void GenerateData();
 };


 class itkScalarImageToRunLengthMatrixFilterID3_Pointer {
   public:
     itkScalarImageToRunLengthMatrixFilterID3_Pointer();
     itkScalarImageToRunLengthMatrixFilterID3_Pointer(itkScalarImageToRunLengthMatrixFilterID3_Pointer const & p);
     itkScalarImageToRunLengthMatrixFilterID3_Pointer(itkScalarImageToRunLengthMatrixFilterID3 * p);
     ~itkScalarImageToRunLengthMatrixFilterID3_Pointer();
     itkScalarImageToRunLengthMatrixFilterID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageToRunLengthMatrixFilterID3 * GetPointer() const;
     bool operator<(itkScalarImageToRunLengthMatrixFilterID3_Pointer const & r) const;
     bool operator>(itkScalarImageToRunLengthMatrixFilterID3_Pointer const & r) const;
     bool operator<=(itkScalarImageToRunLengthMatrixFilterID3_Pointer const & r) const;
     bool operator>=(itkScalarImageToRunLengthMatrixFilterID3_Pointer const & r) const;
     itkScalarImageToRunLengthMatrixFilterID3_Pointer & operator=(itkScalarImageToRunLengthMatrixFilterID3_Pointer const & r);
     itkScalarImageToRunLengthMatrixFilterID3_Pointer & operator=(itkScalarImageToRunLengthMatrixFilterID3 * r);
     itkScalarImageToRunLengthMatrixFilterID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageToRunLengthMatrixFilterIF2 : public itkProcessObject {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  DefaultBinsPerAxis = 256 };
     virtual char const * GetNameOfClass() const;
     static itkScalarImageToRunLengthMatrixFilterIF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetInput(itkImageF2 const * image);
     itkImageF2 const * GetInput() const;
     void SetMaskImage(itkImageF2 const * image);
     itkImageF2 const * GetMaskImage() const;
     itk::Statistics::Histogram< double, itk::Statistics::DenseFrequencyContainer2 > const * GetOutput() const;
     virtual void SetInsidePixelValue(float const _arg);
     virtual float GetInsidePixelValue() const;
     virtual void SetNumberOfBinsPerAxis(unsigned int const _arg);
     virtual unsigned int GetNumberOfBinsPerAxis() const;
     void SetPixelValueMinMax(float min, float max);
     virtual float GetMin() const;
     virtual float GetMax() const;
     void SetDistanceValueMinMax(double min, double max);
     virtual double GetMinDistance() const;
     virtual double GetMaxDistance() const;
     virtual void SetOffsets(itkVectorContainerUCO2 * _arg);
     virtual itkVectorContainerUCO2 const * GetOffsets() const;
     void SetOffset(itkOffset2 const offset);
     void AddOffset(itkOffset2 const offset);
   private:
     itkScalarImageToRunLengthMatrixFilterIF2(itkScalarImageToRunLengthMatrixFilterIF2 const & arg0);
     void operator=(itkScalarImageToRunLengthMatrixFilterIF2 const & arg0);
   protected:
     itkScalarImageToRunLengthMatrixFilterIF2();
     ~itkScalarImageToRunLengthMatrixFilterIF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void FillHistogram(itkSize2 radius, itkImageRegion2 region);
     virtual void FillHistogramWithMask(itkSize2 radius, itkImageRegion2 region, itkImageF2 const * maskImage);
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void GenerateData();
 };


 class itkScalarImageToRunLengthMatrixFilterIF2_Pointer {
   public:
     itkScalarImageToRunLengthMatrixFilterIF2_Pointer();
     itkScalarImageToRunLengthMatrixFilterIF2_Pointer(itkScalarImageToRunLengthMatrixFilterIF2_Pointer const & p);
     itkScalarImageToRunLengthMatrixFilterIF2_Pointer(itkScalarImageToRunLengthMatrixFilterIF2 * p);
     ~itkScalarImageToRunLengthMatrixFilterIF2_Pointer();
     itkScalarImageToRunLengthMatrixFilterIF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageToRunLengthMatrixFilterIF2 * GetPointer() const;
     bool operator<(itkScalarImageToRunLengthMatrixFilterIF2_Pointer const & r) const;
     bool operator>(itkScalarImageToRunLengthMatrixFilterIF2_Pointer const & r) const;
     bool operator<=(itkScalarImageToRunLengthMatrixFilterIF2_Pointer const & r) const;
     bool operator>=(itkScalarImageToRunLengthMatrixFilterIF2_Pointer const & r) const;
     itkScalarImageToRunLengthMatrixFilterIF2_Pointer & operator=(itkScalarImageToRunLengthMatrixFilterIF2_Pointer const & r);
     itkScalarImageToRunLengthMatrixFilterIF2_Pointer & operator=(itkScalarImageToRunLengthMatrixFilterIF2 * r);
     itkScalarImageToRunLengthMatrixFilterIF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageToRunLengthMatrixFilterIF3 : public itkProcessObject {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  DefaultBinsPerAxis = 256 };
     virtual char const * GetNameOfClass() const;
     static itkScalarImageToRunLengthMatrixFilterIF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetInput(itkImageF3 const * image);
     itkImageF3 const * GetInput() const;
     void SetMaskImage(itkImageF3 const * image);
     itkImageF3 const * GetMaskImage() const;
     itk::Statistics::Histogram< double, itk::Statistics::DenseFrequencyContainer2 > const * GetOutput() const;
     virtual void SetInsidePixelValue(float const _arg);
     virtual float GetInsidePixelValue() const;
     virtual void SetNumberOfBinsPerAxis(unsigned int const _arg);
     virtual unsigned int GetNumberOfBinsPerAxis() const;
     void SetPixelValueMinMax(float min, float max);
     virtual float GetMin() const;
     virtual float GetMax() const;
     void SetDistanceValueMinMax(double min, double max);
     virtual double GetMinDistance() const;
     virtual double GetMaxDistance() const;
     virtual void SetOffsets(itkVectorContainerUCO3 * _arg);
     virtual itkVectorContainerUCO3 const * GetOffsets() const;
     void SetOffset(itkOffset3 const offset);
     void AddOffset(itkOffset3 const offset);
   private:
     itkScalarImageToRunLengthMatrixFilterIF3(itkScalarImageToRunLengthMatrixFilterIF3 const & arg0);
     void operator=(itkScalarImageToRunLengthMatrixFilterIF3 const & arg0);
   protected:
     itkScalarImageToRunLengthMatrixFilterIF3();
     ~itkScalarImageToRunLengthMatrixFilterIF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void FillHistogram(itkSize3 radius, itkImageRegion3 region);
     virtual void FillHistogramWithMask(itkSize3 radius, itkImageRegion3 region, itkImageF3 const * maskImage);
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void GenerateData();
 };


 class itkScalarImageToRunLengthMatrixFilterIF3_Pointer {
   public:
     itkScalarImageToRunLengthMatrixFilterIF3_Pointer();
     itkScalarImageToRunLengthMatrixFilterIF3_Pointer(itkScalarImageToRunLengthMatrixFilterIF3_Pointer const & p);
     itkScalarImageToRunLengthMatrixFilterIF3_Pointer(itkScalarImageToRunLengthMatrixFilterIF3 * p);
     ~itkScalarImageToRunLengthMatrixFilterIF3_Pointer();
     itkScalarImageToRunLengthMatrixFilterIF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageToRunLengthMatrixFilterIF3 * GetPointer() const;
     bool operator<(itkScalarImageToRunLengthMatrixFilterIF3_Pointer const & r) const;
     bool operator>(itkScalarImageToRunLengthMatrixFilterIF3_Pointer const & r) const;
     bool operator<=(itkScalarImageToRunLengthMatrixFilterIF3_Pointer const & r) const;
     bool operator>=(itkScalarImageToRunLengthMatrixFilterIF3_Pointer const & r) const;
     itkScalarImageToRunLengthMatrixFilterIF3_Pointer & operator=(itkScalarImageToRunLengthMatrixFilterIF3_Pointer const & r);
     itkScalarImageToRunLengthMatrixFilterIF3_Pointer & operator=(itkScalarImageToRunLengthMatrixFilterIF3 * r);
     itkScalarImageToRunLengthMatrixFilterIF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageToRunLengthMatrixFilterIUC2 : public itkProcessObject {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  DefaultBinsPerAxis = 256 };
     virtual char const * GetNameOfClass() const;
     static itkScalarImageToRunLengthMatrixFilterIUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetInput(itkImageUC2 const * image);
     itkImageUC2 const * GetInput() const;
     void SetMaskImage(itkImageUC2 const * image);
     itkImageUC2 const * GetMaskImage() const;
     itk::Statistics::Histogram< double, itk::Statistics::DenseFrequencyContainer2 > const * GetOutput() const;
     virtual void SetInsidePixelValue(unsigned char const _arg);
     virtual unsigned char GetInsidePixelValue() const;
     virtual void SetNumberOfBinsPerAxis(unsigned int const _arg);
     virtual unsigned int GetNumberOfBinsPerAxis() const;
     void SetPixelValueMinMax(unsigned char min, unsigned char max);
     virtual unsigned char GetMin() const;
     virtual unsigned char GetMax() const;
     void SetDistanceValueMinMax(double min, double max);
     virtual double GetMinDistance() const;
     virtual double GetMaxDistance() const;
     virtual void SetOffsets(itkVectorContainerUCO2 * _arg);
     virtual itkVectorContainerUCO2 const * GetOffsets() const;
     void SetOffset(itkOffset2 const offset);
     void AddOffset(itkOffset2 const offset);
   private:
     itkScalarImageToRunLengthMatrixFilterIUC2(itkScalarImageToRunLengthMatrixFilterIUC2 const & arg0);
     void operator=(itkScalarImageToRunLengthMatrixFilterIUC2 const & arg0);
   protected:
     itkScalarImageToRunLengthMatrixFilterIUC2();
     ~itkScalarImageToRunLengthMatrixFilterIUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void FillHistogram(itkSize2 radius, itkImageRegion2 region);
     virtual void FillHistogramWithMask(itkSize2 radius, itkImageRegion2 region, itkImageUC2 const * maskImage);
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void GenerateData();
 };


 class itkScalarImageToRunLengthMatrixFilterIUC2_Pointer {
   public:
     itkScalarImageToRunLengthMatrixFilterIUC2_Pointer();
     itkScalarImageToRunLengthMatrixFilterIUC2_Pointer(itkScalarImageToRunLengthMatrixFilterIUC2_Pointer const & p);
     itkScalarImageToRunLengthMatrixFilterIUC2_Pointer(itkScalarImageToRunLengthMatrixFilterIUC2 * p);
     ~itkScalarImageToRunLengthMatrixFilterIUC2_Pointer();
     itkScalarImageToRunLengthMatrixFilterIUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageToRunLengthMatrixFilterIUC2 * GetPointer() const;
     bool operator<(itkScalarImageToRunLengthMatrixFilterIUC2_Pointer const & r) const;
     bool operator>(itkScalarImageToRunLengthMatrixFilterIUC2_Pointer const & r) const;
     bool operator<=(itkScalarImageToRunLengthMatrixFilterIUC2_Pointer const & r) const;
     bool operator>=(itkScalarImageToRunLengthMatrixFilterIUC2_Pointer const & r) const;
     itkScalarImageToRunLengthMatrixFilterIUC2_Pointer & operator=(itkScalarImageToRunLengthMatrixFilterIUC2_Pointer const & r);
     itkScalarImageToRunLengthMatrixFilterIUC2_Pointer & operator=(itkScalarImageToRunLengthMatrixFilterIUC2 * r);
     itkScalarImageToRunLengthMatrixFilterIUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageToRunLengthMatrixFilterIUC3 : public itkProcessObject {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  DefaultBinsPerAxis = 256 };
     virtual char const * GetNameOfClass() const;
     static itkScalarImageToRunLengthMatrixFilterIUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetInput(itkImageUC3 const * image);
     itkImageUC3 const * GetInput() const;
     void SetMaskImage(itkImageUC3 const * image);
     itkImageUC3 const * GetMaskImage() const;
     itk::Statistics::Histogram< double, itk::Statistics::DenseFrequencyContainer2 > const * GetOutput() const;
     virtual void SetInsidePixelValue(unsigned char const _arg);
     virtual unsigned char GetInsidePixelValue() const;
     virtual void SetNumberOfBinsPerAxis(unsigned int const _arg);
     virtual unsigned int GetNumberOfBinsPerAxis() const;
     void SetPixelValueMinMax(unsigned char min, unsigned char max);
     virtual unsigned char GetMin() const;
     virtual unsigned char GetMax() const;
     void SetDistanceValueMinMax(double min, double max);
     virtual double GetMinDistance() const;
     virtual double GetMaxDistance() const;
     virtual void SetOffsets(itkVectorContainerUCO3 * _arg);
     virtual itkVectorContainerUCO3 const * GetOffsets() const;
     void SetOffset(itkOffset3 const offset);
     void AddOffset(itkOffset3 const offset);
   private:
     itkScalarImageToRunLengthMatrixFilterIUC3(itkScalarImageToRunLengthMatrixFilterIUC3 const & arg0);
     void operator=(itkScalarImageToRunLengthMatrixFilterIUC3 const & arg0);
   protected:
     itkScalarImageToRunLengthMatrixFilterIUC3();
     ~itkScalarImageToRunLengthMatrixFilterIUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void FillHistogram(itkSize3 radius, itkImageRegion3 region);
     virtual void FillHistogramWithMask(itkSize3 radius, itkImageRegion3 region, itkImageUC3 const * maskImage);
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void GenerateData();
 };


 class itkScalarImageToRunLengthMatrixFilterIUC3_Pointer {
   public:
     itkScalarImageToRunLengthMatrixFilterIUC3_Pointer();
     itkScalarImageToRunLengthMatrixFilterIUC3_Pointer(itkScalarImageToRunLengthMatrixFilterIUC3_Pointer const & p);
     itkScalarImageToRunLengthMatrixFilterIUC3_Pointer(itkScalarImageToRunLengthMatrixFilterIUC3 * p);
     ~itkScalarImageToRunLengthMatrixFilterIUC3_Pointer();
     itkScalarImageToRunLengthMatrixFilterIUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageToRunLengthMatrixFilterIUC3 * GetPointer() const;
     bool operator<(itkScalarImageToRunLengthMatrixFilterIUC3_Pointer const & r) const;
     bool operator>(itkScalarImageToRunLengthMatrixFilterIUC3_Pointer const & r) const;
     bool operator<=(itkScalarImageToRunLengthMatrixFilterIUC3_Pointer const & r) const;
     bool operator>=(itkScalarImageToRunLengthMatrixFilterIUC3_Pointer const & r) const;
     itkScalarImageToRunLengthMatrixFilterIUC3_Pointer & operator=(itkScalarImageToRunLengthMatrixFilterIUC3_Pointer const & r);
     itkScalarImageToRunLengthMatrixFilterIUC3_Pointer & operator=(itkScalarImageToRunLengthMatrixFilterIUC3 * r);
     itkScalarImageToRunLengthMatrixFilterIUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageToRunLengthMatrixFilterIUL2 : public itkProcessObject {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  DefaultBinsPerAxis = 256 };
     virtual char const * GetNameOfClass() const;
     static itkScalarImageToRunLengthMatrixFilterIUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetInput(itkImageUL2 const * image);
     itkImageUL2 const * GetInput() const;
     void SetMaskImage(itkImageUL2 const * image);
     itkImageUL2 const * GetMaskImage() const;
     itk::Statistics::Histogram< double, itk::Statistics::DenseFrequencyContainer2 > const * GetOutput() const;
     virtual void SetInsidePixelValue(unsigned long const _arg);
     virtual unsigned long GetInsidePixelValue() const;
     virtual void SetNumberOfBinsPerAxis(unsigned int const _arg);
     virtual unsigned int GetNumberOfBinsPerAxis() const;
     void SetPixelValueMinMax(unsigned long min, unsigned long max);
     virtual unsigned long GetMin() const;
     virtual unsigned long GetMax() const;
     void SetDistanceValueMinMax(double min, double max);
     virtual double GetMinDistance() const;
     virtual double GetMaxDistance() const;
     virtual void SetOffsets(itkVectorContainerUCO2 * _arg);
     virtual itkVectorContainerUCO2 const * GetOffsets() const;
     void SetOffset(itkOffset2 const offset);
     void AddOffset(itkOffset2 const offset);
   private:
     itkScalarImageToRunLengthMatrixFilterIUL2(itkScalarImageToRunLengthMatrixFilterIUL2 const & arg0);
     void operator=(itkScalarImageToRunLengthMatrixFilterIUL2 const & arg0);
   protected:
     itkScalarImageToRunLengthMatrixFilterIUL2();
     ~itkScalarImageToRunLengthMatrixFilterIUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void FillHistogram(itkSize2 radius, itkImageRegion2 region);
     virtual void FillHistogramWithMask(itkSize2 radius, itkImageRegion2 region, itkImageUL2 const * maskImage);
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void GenerateData();
 };


 class itkScalarImageToRunLengthMatrixFilterIUL2_Pointer {
   public:
     itkScalarImageToRunLengthMatrixFilterIUL2_Pointer();
     itkScalarImageToRunLengthMatrixFilterIUL2_Pointer(itkScalarImageToRunLengthMatrixFilterIUL2_Pointer const & p);
     itkScalarImageToRunLengthMatrixFilterIUL2_Pointer(itkScalarImageToRunLengthMatrixFilterIUL2 * p);
     ~itkScalarImageToRunLengthMatrixFilterIUL2_Pointer();
     itkScalarImageToRunLengthMatrixFilterIUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageToRunLengthMatrixFilterIUL2 * GetPointer() const;
     bool operator<(itkScalarImageToRunLengthMatrixFilterIUL2_Pointer const & r) const;
     bool operator>(itkScalarImageToRunLengthMatrixFilterIUL2_Pointer const & r) const;
     bool operator<=(itkScalarImageToRunLengthMatrixFilterIUL2_Pointer const & r) const;
     bool operator>=(itkScalarImageToRunLengthMatrixFilterIUL2_Pointer const & r) const;
     itkScalarImageToRunLengthMatrixFilterIUL2_Pointer & operator=(itkScalarImageToRunLengthMatrixFilterIUL2_Pointer const & r);
     itkScalarImageToRunLengthMatrixFilterIUL2_Pointer & operator=(itkScalarImageToRunLengthMatrixFilterIUL2 * r);
     itkScalarImageToRunLengthMatrixFilterIUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageToRunLengthMatrixFilterIUL3 : public itkProcessObject {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  DefaultBinsPerAxis = 256 };
     virtual char const * GetNameOfClass() const;
     static itkScalarImageToRunLengthMatrixFilterIUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetInput(itkImageUL3 const * image);
     itkImageUL3 const * GetInput() const;
     void SetMaskImage(itkImageUL3 const * image);
     itkImageUL3 const * GetMaskImage() const;
     itk::Statistics::Histogram< double, itk::Statistics::DenseFrequencyContainer2 > const * GetOutput() const;
     virtual void SetInsidePixelValue(unsigned long const _arg);
     virtual unsigned long GetInsidePixelValue() const;
     virtual void SetNumberOfBinsPerAxis(unsigned int const _arg);
     virtual unsigned int GetNumberOfBinsPerAxis() const;
     void SetPixelValueMinMax(unsigned long min, unsigned long max);
     virtual unsigned long GetMin() const;
     virtual unsigned long GetMax() const;
     void SetDistanceValueMinMax(double min, double max);
     virtual double GetMinDistance() const;
     virtual double GetMaxDistance() const;
     virtual void SetOffsets(itkVectorContainerUCO3 * _arg);
     virtual itkVectorContainerUCO3 const * GetOffsets() const;
     void SetOffset(itkOffset3 const offset);
     void AddOffset(itkOffset3 const offset);
   private:
     itkScalarImageToRunLengthMatrixFilterIUL3(itkScalarImageToRunLengthMatrixFilterIUL3 const & arg0);
     void operator=(itkScalarImageToRunLengthMatrixFilterIUL3 const & arg0);
   protected:
     itkScalarImageToRunLengthMatrixFilterIUL3();
     ~itkScalarImageToRunLengthMatrixFilterIUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void FillHistogram(itkSize3 radius, itkImageRegion3 region);
     virtual void FillHistogramWithMask(itkSize3 radius, itkImageRegion3 region, itkImageUL3 const * maskImage);
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void GenerateData();
 };


 class itkScalarImageToRunLengthMatrixFilterIUL3_Pointer {
   public:
     itkScalarImageToRunLengthMatrixFilterIUL3_Pointer();
     itkScalarImageToRunLengthMatrixFilterIUL3_Pointer(itkScalarImageToRunLengthMatrixFilterIUL3_Pointer const & p);
     itkScalarImageToRunLengthMatrixFilterIUL3_Pointer(itkScalarImageToRunLengthMatrixFilterIUL3 * p);
     ~itkScalarImageToRunLengthMatrixFilterIUL3_Pointer();
     itkScalarImageToRunLengthMatrixFilterIUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageToRunLengthMatrixFilterIUL3 * GetPointer() const;
     bool operator<(itkScalarImageToRunLengthMatrixFilterIUL3_Pointer const & r) const;
     bool operator>(itkScalarImageToRunLengthMatrixFilterIUL3_Pointer const & r) const;
     bool operator<=(itkScalarImageToRunLengthMatrixFilterIUL3_Pointer const & r) const;
     bool operator>=(itkScalarImageToRunLengthMatrixFilterIUL3_Pointer const & r) const;
     itkScalarImageToRunLengthMatrixFilterIUL3_Pointer & operator=(itkScalarImageToRunLengthMatrixFilterIUL3_Pointer const & r);
     itkScalarImageToRunLengthMatrixFilterIUL3_Pointer & operator=(itkScalarImageToRunLengthMatrixFilterIUL3 * r);
     itkScalarImageToRunLengthMatrixFilterIUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageToRunLengthMatrixFilterIUS2 : public itkProcessObject {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  DefaultBinsPerAxis = 256 };
     virtual char const * GetNameOfClass() const;
     static itkScalarImageToRunLengthMatrixFilterIUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetInput(itkImageUS2 const * image);
     itkImageUS2 const * GetInput() const;
     void SetMaskImage(itkImageUS2 const * image);
     itkImageUS2 const * GetMaskImage() const;
     itk::Statistics::Histogram< double, itk::Statistics::DenseFrequencyContainer2 > const * GetOutput() const;
     virtual void SetInsidePixelValue(unsigned short const _arg);
     virtual unsigned short GetInsidePixelValue() const;
     virtual void SetNumberOfBinsPerAxis(unsigned int const _arg);
     virtual unsigned int GetNumberOfBinsPerAxis() const;
     void SetPixelValueMinMax(unsigned short min, unsigned short max);
     virtual unsigned short GetMin() const;
     virtual unsigned short GetMax() const;
     void SetDistanceValueMinMax(double min, double max);
     virtual double GetMinDistance() const;
     virtual double GetMaxDistance() const;
     virtual void SetOffsets(itkVectorContainerUCO2 * _arg);
     virtual itkVectorContainerUCO2 const * GetOffsets() const;
     void SetOffset(itkOffset2 const offset);
     void AddOffset(itkOffset2 const offset);
   private:
     itkScalarImageToRunLengthMatrixFilterIUS2(itkScalarImageToRunLengthMatrixFilterIUS2 const & arg0);
     void operator=(itkScalarImageToRunLengthMatrixFilterIUS2 const & arg0);
   protected:
     itkScalarImageToRunLengthMatrixFilterIUS2();
     ~itkScalarImageToRunLengthMatrixFilterIUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void FillHistogram(itkSize2 radius, itkImageRegion2 region);
     virtual void FillHistogramWithMask(itkSize2 radius, itkImageRegion2 region, itkImageUS2 const * maskImage);
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void GenerateData();
 };


 class itkScalarImageToRunLengthMatrixFilterIUS2_Pointer {
   public:
     itkScalarImageToRunLengthMatrixFilterIUS2_Pointer();
     itkScalarImageToRunLengthMatrixFilterIUS2_Pointer(itkScalarImageToRunLengthMatrixFilterIUS2_Pointer const & p);
     itkScalarImageToRunLengthMatrixFilterIUS2_Pointer(itkScalarImageToRunLengthMatrixFilterIUS2 * p);
     ~itkScalarImageToRunLengthMatrixFilterIUS2_Pointer();
     itkScalarImageToRunLengthMatrixFilterIUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageToRunLengthMatrixFilterIUS2 * GetPointer() const;
     bool operator<(itkScalarImageToRunLengthMatrixFilterIUS2_Pointer const & r) const;
     bool operator>(itkScalarImageToRunLengthMatrixFilterIUS2_Pointer const & r) const;
     bool operator<=(itkScalarImageToRunLengthMatrixFilterIUS2_Pointer const & r) const;
     bool operator>=(itkScalarImageToRunLengthMatrixFilterIUS2_Pointer const & r) const;
     itkScalarImageToRunLengthMatrixFilterIUS2_Pointer & operator=(itkScalarImageToRunLengthMatrixFilterIUS2_Pointer const & r);
     itkScalarImageToRunLengthMatrixFilterIUS2_Pointer & operator=(itkScalarImageToRunLengthMatrixFilterIUS2 * r);
     itkScalarImageToRunLengthMatrixFilterIUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageToRunLengthMatrixFilterIUS3 : public itkProcessObject {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  DefaultBinsPerAxis = 256 };
     virtual char const * GetNameOfClass() const;
     static itkScalarImageToRunLengthMatrixFilterIUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetInput(itkImageUS3 const * image);
     itkImageUS3 const * GetInput() const;
     void SetMaskImage(itkImageUS3 const * image);
     itkImageUS3 const * GetMaskImage() const;
     itk::Statistics::Histogram< double, itk::Statistics::DenseFrequencyContainer2 > const * GetOutput() const;
     virtual void SetInsidePixelValue(unsigned short const _arg);
     virtual unsigned short GetInsidePixelValue() const;
     virtual void SetNumberOfBinsPerAxis(unsigned int const _arg);
     virtual unsigned int GetNumberOfBinsPerAxis() const;
     void SetPixelValueMinMax(unsigned short min, unsigned short max);
     virtual unsigned short GetMin() const;
     virtual unsigned short GetMax() const;
     void SetDistanceValueMinMax(double min, double max);
     virtual double GetMinDistance() const;
     virtual double GetMaxDistance() const;
     virtual void SetOffsets(itkVectorContainerUCO3 * _arg);
     virtual itkVectorContainerUCO3 const * GetOffsets() const;
     void SetOffset(itkOffset3 const offset);
     void AddOffset(itkOffset3 const offset);
   private:
     itkScalarImageToRunLengthMatrixFilterIUS3(itkScalarImageToRunLengthMatrixFilterIUS3 const & arg0);
     void operator=(itkScalarImageToRunLengthMatrixFilterIUS3 const & arg0);
   protected:
     itkScalarImageToRunLengthMatrixFilterIUS3();
     ~itkScalarImageToRunLengthMatrixFilterIUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void FillHistogram(itkSize3 radius, itkImageRegion3 region);
     virtual void FillHistogramWithMask(itkSize3 radius, itkImageRegion3 region, itkImageUS3 const * maskImage);
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void GenerateData();
 };


 class itkScalarImageToRunLengthMatrixFilterIUS3_Pointer {
   public:
     itkScalarImageToRunLengthMatrixFilterIUS3_Pointer();
     itkScalarImageToRunLengthMatrixFilterIUS3_Pointer(itkScalarImageToRunLengthMatrixFilterIUS3_Pointer const & p);
     itkScalarImageToRunLengthMatrixFilterIUS3_Pointer(itkScalarImageToRunLengthMatrixFilterIUS3 * p);
     ~itkScalarImageToRunLengthMatrixFilterIUS3_Pointer();
     itkScalarImageToRunLengthMatrixFilterIUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageToRunLengthMatrixFilterIUS3 * GetPointer() const;
     bool operator<(itkScalarImageToRunLengthMatrixFilterIUS3_Pointer const & r) const;
     bool operator>(itkScalarImageToRunLengthMatrixFilterIUS3_Pointer const & r) const;
     bool operator<=(itkScalarImageToRunLengthMatrixFilterIUS3_Pointer const & r) const;
     bool operator>=(itkScalarImageToRunLengthMatrixFilterIUS3_Pointer const & r) const;
     itkScalarImageToRunLengthMatrixFilterIUS3_Pointer & operator=(itkScalarImageToRunLengthMatrixFilterIUS3_Pointer const & r);
     itkScalarImageToRunLengthMatrixFilterIUS3_Pointer & operator=(itkScalarImageToRunLengthMatrixFilterIUS3 * r);
     itkScalarImageToRunLengthMatrixFilterIUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


