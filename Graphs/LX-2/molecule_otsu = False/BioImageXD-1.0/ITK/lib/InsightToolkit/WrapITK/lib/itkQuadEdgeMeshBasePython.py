# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkQuadEdgeMeshBasePython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkQuadEdgeMeshBasePython', [dirname(__file__)])
        except ImportError:
            import _itkQuadEdgeMeshBasePython
            return _itkQuadEdgeMeshBasePython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkQuadEdgeMeshBasePython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkQuadEdgeMeshBasePython = swig_import_helper()
    del swig_import_helper
else:
    import _itkQuadEdgeMeshBasePython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkFixedArrayPython
import pyBasePython
import itkPointPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkCellInterfacePython
import itkArrayPython
import ITKCommonBasePython
import itkEventObjectsPython
import itkQuadEdgeMeshPointPython
import itkGeometricalQuadEdgePython
import itkQuadEdgePython
def itkBoundingBoxUL3FMCULQEMPF3_New():
  return itkBoundingBoxUL3FMCULQEMPF3.New()

def itkBoundingBoxUL2FMCULQEMPF2_New():
  return itkBoundingBoxUL2FMCULQEMPF2.New()

def itkMapContainerULCIDQEMCTI3_New():
  return itkMapContainerULCIDQEMCTI3.New()

def itkMapContainerULQEMPF3_New():
  return itkMapContainerULQEMPF3.New()

def itkMapContainerULCIDQEMCTI2_New():
  return itkMapContainerULCIDQEMCTI2.New()

def itkMapContainerULQEMPF2_New():
  return itkMapContainerULQEMPF2.New()

class mapULitkQuadEdgeMeshPointF2(object):
    """Proxy of C++ std::map<(unsigned long,itkQuadEdgeMeshPointF2,std::less<(unsigned long)>)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def iterator(self):
        """iterator(self) -> SwigPyIterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_iterator(self)

    def __iter__(self): return self.iterator()
    def __nonzero__(self):
        """__nonzero__(self) -> bool"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2___nonzero__(self)

    def __bool__(self):
        """__bool__(self) -> bool"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2___bool__(self)

    def __len__(self):
        """__len__(self) -> size_type"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2___len__(self)

    def __getitem__(self, *args):
        """__getitem__(self, key_type key) -> mapped_type"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2___getitem__(self, *args)

    def __delitem__(self, *args):
        """__delitem__(self, key_type key)"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2___delitem__(self, *args)

    def has_key(self, *args):
        """has_key(self, key_type key) -> bool"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_has_key(self, *args)

    def keys(self):
        """keys(self) -> PyObject"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_keys(self)

    def values(self):
        """values(self) -> PyObject"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_values(self)

    def items(self):
        """items(self) -> PyObject"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_items(self)

    def __contains__(self, *args):
        """__contains__(self, key_type key) -> bool"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2___contains__(self, *args)

    def key_iterator(self):
        """key_iterator(self) -> SwigPyIterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_key_iterator(self)

    def value_iterator(self):
        """value_iterator(self) -> SwigPyIterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_value_iterator(self)

    def __iter__(self): return self.key_iterator()
    def iterkeys(self): return self.key_iterator()
    def itervalues(self): return self.value_iterator()
    def iteritems(self): return self.iterator()
    def __setitem__(self, *args):
        """__setitem__(self, key_type key, mapped_type x)"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2___setitem__(self, *args)

    def __init__(self, *args): 
        """
        __init__(self, std::less<(unsigned long)> arg0) -> mapULitkQuadEdgeMeshPointF2
        __init__(self) -> mapULitkQuadEdgeMeshPointF2
        __init__(self, mapULitkQuadEdgeMeshPointF2 arg0) -> mapULitkQuadEdgeMeshPointF2
        """
        _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_swiginit(self,_itkQuadEdgeMeshBasePython.new_mapULitkQuadEdgeMeshPointF2(*args))
    def empty(self):
        """empty(self) -> bool"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_empty(self)

    def size(self):
        """size(self) -> size_type"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_size(self)

    def clear(self):
        """clear(self)"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_clear(self)

    def swap(self, *args):
        """swap(self, mapULitkQuadEdgeMeshPointF2 v)"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_swap(self, *args)

    def get_allocator(self):
        """get_allocator(self) -> allocator_type"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_get_allocator(self)

    def begin(self):
        """begin(self) -> const_iterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_begin(self)

    def end(self):
        """end(self) -> const_iterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_end(self)

    def rbegin(self):
        """rbegin(self) -> const_reverse_iterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_rbegin(self)

    def rend(self):
        """rend(self) -> const_reverse_iterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_rend(self)

    def count(self, *args):
        """count(self, key_type x) -> size_type"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_count(self, *args)

    def erase(self, *args):
        """
        erase(self, key_type x) -> size_type
        erase(self, iterator position)
        erase(self, iterator first, iterator last)
        """
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_erase(self, *args)

    def find(self, *args):
        """find(self, key_type x) -> iterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_find(self, *args)

    def lower_bound(self, *args):
        """lower_bound(self, key_type x) -> iterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_lower_bound(self, *args)

    def upper_bound(self, *args):
        """upper_bound(self, key_type x) -> iterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_upper_bound(self, *args)

    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_mapULitkQuadEdgeMeshPointF2
mapULitkQuadEdgeMeshPointF2.iterator = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_iterator,None,mapULitkQuadEdgeMeshPointF2)
mapULitkQuadEdgeMeshPointF2.__nonzero__ = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2___nonzero__,None,mapULitkQuadEdgeMeshPointF2)
mapULitkQuadEdgeMeshPointF2.__bool__ = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2___bool__,None,mapULitkQuadEdgeMeshPointF2)
mapULitkQuadEdgeMeshPointF2.__len__ = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2___len__,None,mapULitkQuadEdgeMeshPointF2)
mapULitkQuadEdgeMeshPointF2.__getitem__ = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2___getitem__,None,mapULitkQuadEdgeMeshPointF2)
mapULitkQuadEdgeMeshPointF2.__delitem__ = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2___delitem__,None,mapULitkQuadEdgeMeshPointF2)
mapULitkQuadEdgeMeshPointF2.has_key = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_has_key,None,mapULitkQuadEdgeMeshPointF2)
mapULitkQuadEdgeMeshPointF2.keys = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_keys,None,mapULitkQuadEdgeMeshPointF2)
mapULitkQuadEdgeMeshPointF2.values = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_values,None,mapULitkQuadEdgeMeshPointF2)
mapULitkQuadEdgeMeshPointF2.items = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_items,None,mapULitkQuadEdgeMeshPointF2)
mapULitkQuadEdgeMeshPointF2.__contains__ = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2___contains__,None,mapULitkQuadEdgeMeshPointF2)
mapULitkQuadEdgeMeshPointF2.key_iterator = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_key_iterator,None,mapULitkQuadEdgeMeshPointF2)
mapULitkQuadEdgeMeshPointF2.value_iterator = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_value_iterator,None,mapULitkQuadEdgeMeshPointF2)
mapULitkQuadEdgeMeshPointF2.__setitem__ = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2___setitem__,None,mapULitkQuadEdgeMeshPointF2)
mapULitkQuadEdgeMeshPointF2.empty = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_empty,None,mapULitkQuadEdgeMeshPointF2)
mapULitkQuadEdgeMeshPointF2.size = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_size,None,mapULitkQuadEdgeMeshPointF2)
mapULitkQuadEdgeMeshPointF2.clear = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_clear,None,mapULitkQuadEdgeMeshPointF2)
mapULitkQuadEdgeMeshPointF2.swap = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_swap,None,mapULitkQuadEdgeMeshPointF2)
mapULitkQuadEdgeMeshPointF2.get_allocator = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_get_allocator,None,mapULitkQuadEdgeMeshPointF2)
mapULitkQuadEdgeMeshPointF2.begin = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_begin,None,mapULitkQuadEdgeMeshPointF2)
mapULitkQuadEdgeMeshPointF2.end = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_end,None,mapULitkQuadEdgeMeshPointF2)
mapULitkQuadEdgeMeshPointF2.rbegin = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_rbegin,None,mapULitkQuadEdgeMeshPointF2)
mapULitkQuadEdgeMeshPointF2.rend = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_rend,None,mapULitkQuadEdgeMeshPointF2)
mapULitkQuadEdgeMeshPointF2.count = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_count,None,mapULitkQuadEdgeMeshPointF2)
mapULitkQuadEdgeMeshPointF2.erase = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_erase,None,mapULitkQuadEdgeMeshPointF2)
mapULitkQuadEdgeMeshPointF2.find = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_find,None,mapULitkQuadEdgeMeshPointF2)
mapULitkQuadEdgeMeshPointF2.lower_bound = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_lower_bound,None,mapULitkQuadEdgeMeshPointF2)
mapULitkQuadEdgeMeshPointF2.upper_bound = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_upper_bound,None,mapULitkQuadEdgeMeshPointF2)
mapULitkQuadEdgeMeshPointF2_swigregister = _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF2_swigregister
mapULitkQuadEdgeMeshPointF2_swigregister(mapULitkQuadEdgeMeshPointF2)

class mapULitkCellInterfaceDQEMCTI2(object):
    """Proxy of C++ std::map<(unsigned long,p.itkCellInterfaceDQEMCTI2,std::less<(unsigned long)>)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def iterator(self):
        """iterator(self) -> SwigPyIterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_iterator(self)

    def __iter__(self): return self.iterator()
    def __nonzero__(self):
        """__nonzero__(self) -> bool"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2___nonzero__(self)

    def __bool__(self):
        """__bool__(self) -> bool"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2___bool__(self)

    def __len__(self):
        """__len__(self) -> size_type"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2___len__(self)

    def __getitem__(self, *args):
        """__getitem__(self, key_type key) -> mapped_type"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2___getitem__(self, *args)

    def __delitem__(self, *args):
        """__delitem__(self, key_type key)"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2___delitem__(self, *args)

    def has_key(self, *args):
        """has_key(self, key_type key) -> bool"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_has_key(self, *args)

    def keys(self):
        """keys(self) -> PyObject"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_keys(self)

    def values(self):
        """values(self) -> PyObject"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_values(self)

    def items(self):
        """items(self) -> PyObject"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_items(self)

    def __contains__(self, *args):
        """__contains__(self, key_type key) -> bool"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2___contains__(self, *args)

    def key_iterator(self):
        """key_iterator(self) -> SwigPyIterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_key_iterator(self)

    def value_iterator(self):
        """value_iterator(self) -> SwigPyIterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_value_iterator(self)

    def __iter__(self): return self.key_iterator()
    def iterkeys(self): return self.key_iterator()
    def itervalues(self): return self.value_iterator()
    def iteritems(self): return self.iterator()
    def __setitem__(self, *args):
        """__setitem__(self, key_type key, mapped_type x)"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2___setitem__(self, *args)

    def __init__(self, *args): 
        """
        __init__(self, std::less<(unsigned long)> arg0) -> mapULitkCellInterfaceDQEMCTI2
        __init__(self) -> mapULitkCellInterfaceDQEMCTI2
        __init__(self, mapULitkCellInterfaceDQEMCTI2 arg0) -> mapULitkCellInterfaceDQEMCTI2
        """
        _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_swiginit(self,_itkQuadEdgeMeshBasePython.new_mapULitkCellInterfaceDQEMCTI2(*args))
    def empty(self):
        """empty(self) -> bool"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_empty(self)

    def size(self):
        """size(self) -> size_type"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_size(self)

    def clear(self):
        """clear(self)"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_clear(self)

    def swap(self, *args):
        """swap(self, mapULitkCellInterfaceDQEMCTI2 v)"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_swap(self, *args)

    def get_allocator(self):
        """get_allocator(self) -> allocator_type"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_get_allocator(self)

    def begin(self):
        """begin(self) -> const_iterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_begin(self)

    def end(self):
        """end(self) -> const_iterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_end(self)

    def rbegin(self):
        """rbegin(self) -> const_reverse_iterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_rbegin(self)

    def rend(self):
        """rend(self) -> const_reverse_iterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_rend(self)

    def count(self, *args):
        """count(self, key_type x) -> size_type"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_count(self, *args)

    def erase(self, *args):
        """
        erase(self, key_type x) -> size_type
        erase(self, iterator position)
        erase(self, iterator first, iterator last)
        """
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_erase(self, *args)

    def find(self, *args):
        """find(self, key_type x) -> iterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_find(self, *args)

    def lower_bound(self, *args):
        """lower_bound(self, key_type x) -> iterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_lower_bound(self, *args)

    def upper_bound(self, *args):
        """upper_bound(self, key_type x) -> iterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_upper_bound(self, *args)

    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_mapULitkCellInterfaceDQEMCTI2
mapULitkCellInterfaceDQEMCTI2.iterator = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_iterator,None,mapULitkCellInterfaceDQEMCTI2)
mapULitkCellInterfaceDQEMCTI2.__nonzero__ = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2___nonzero__,None,mapULitkCellInterfaceDQEMCTI2)
mapULitkCellInterfaceDQEMCTI2.__bool__ = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2___bool__,None,mapULitkCellInterfaceDQEMCTI2)
mapULitkCellInterfaceDQEMCTI2.__len__ = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2___len__,None,mapULitkCellInterfaceDQEMCTI2)
mapULitkCellInterfaceDQEMCTI2.__getitem__ = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2___getitem__,None,mapULitkCellInterfaceDQEMCTI2)
mapULitkCellInterfaceDQEMCTI2.__delitem__ = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2___delitem__,None,mapULitkCellInterfaceDQEMCTI2)
mapULitkCellInterfaceDQEMCTI2.has_key = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_has_key,None,mapULitkCellInterfaceDQEMCTI2)
mapULitkCellInterfaceDQEMCTI2.keys = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_keys,None,mapULitkCellInterfaceDQEMCTI2)
mapULitkCellInterfaceDQEMCTI2.values = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_values,None,mapULitkCellInterfaceDQEMCTI2)
mapULitkCellInterfaceDQEMCTI2.items = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_items,None,mapULitkCellInterfaceDQEMCTI2)
mapULitkCellInterfaceDQEMCTI2.__contains__ = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2___contains__,None,mapULitkCellInterfaceDQEMCTI2)
mapULitkCellInterfaceDQEMCTI2.key_iterator = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_key_iterator,None,mapULitkCellInterfaceDQEMCTI2)
mapULitkCellInterfaceDQEMCTI2.value_iterator = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_value_iterator,None,mapULitkCellInterfaceDQEMCTI2)
mapULitkCellInterfaceDQEMCTI2.__setitem__ = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2___setitem__,None,mapULitkCellInterfaceDQEMCTI2)
mapULitkCellInterfaceDQEMCTI2.empty = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_empty,None,mapULitkCellInterfaceDQEMCTI2)
mapULitkCellInterfaceDQEMCTI2.size = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_size,None,mapULitkCellInterfaceDQEMCTI2)
mapULitkCellInterfaceDQEMCTI2.clear = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_clear,None,mapULitkCellInterfaceDQEMCTI2)
mapULitkCellInterfaceDQEMCTI2.swap = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_swap,None,mapULitkCellInterfaceDQEMCTI2)
mapULitkCellInterfaceDQEMCTI2.get_allocator = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_get_allocator,None,mapULitkCellInterfaceDQEMCTI2)
mapULitkCellInterfaceDQEMCTI2.begin = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_begin,None,mapULitkCellInterfaceDQEMCTI2)
mapULitkCellInterfaceDQEMCTI2.end = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_end,None,mapULitkCellInterfaceDQEMCTI2)
mapULitkCellInterfaceDQEMCTI2.rbegin = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_rbegin,None,mapULitkCellInterfaceDQEMCTI2)
mapULitkCellInterfaceDQEMCTI2.rend = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_rend,None,mapULitkCellInterfaceDQEMCTI2)
mapULitkCellInterfaceDQEMCTI2.count = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_count,None,mapULitkCellInterfaceDQEMCTI2)
mapULitkCellInterfaceDQEMCTI2.erase = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_erase,None,mapULitkCellInterfaceDQEMCTI2)
mapULitkCellInterfaceDQEMCTI2.find = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_find,None,mapULitkCellInterfaceDQEMCTI2)
mapULitkCellInterfaceDQEMCTI2.lower_bound = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_lower_bound,None,mapULitkCellInterfaceDQEMCTI2)
mapULitkCellInterfaceDQEMCTI2.upper_bound = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_upper_bound,None,mapULitkCellInterfaceDQEMCTI2)
mapULitkCellInterfaceDQEMCTI2_swigregister = _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI2_swigregister
mapULitkCellInterfaceDQEMCTI2_swigregister(mapULitkCellInterfaceDQEMCTI2)

class mapULitkQuadEdgeMeshPointF3(object):
    """Proxy of C++ std::map<(unsigned long,itkQuadEdgeMeshPointF3,std::less<(unsigned long)>)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def iterator(self):
        """iterator(self) -> SwigPyIterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_iterator(self)

    def __iter__(self): return self.iterator()
    def __nonzero__(self):
        """__nonzero__(self) -> bool"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3___nonzero__(self)

    def __bool__(self):
        """__bool__(self) -> bool"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3___bool__(self)

    def __len__(self):
        """__len__(self) -> size_type"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3___len__(self)

    def __getitem__(self, *args):
        """__getitem__(self, key_type key) -> mapped_type"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3___getitem__(self, *args)

    def __delitem__(self, *args):
        """__delitem__(self, key_type key)"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3___delitem__(self, *args)

    def has_key(self, *args):
        """has_key(self, key_type key) -> bool"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_has_key(self, *args)

    def keys(self):
        """keys(self) -> PyObject"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_keys(self)

    def values(self):
        """values(self) -> PyObject"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_values(self)

    def items(self):
        """items(self) -> PyObject"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_items(self)

    def __contains__(self, *args):
        """__contains__(self, key_type key) -> bool"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3___contains__(self, *args)

    def key_iterator(self):
        """key_iterator(self) -> SwigPyIterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_key_iterator(self)

    def value_iterator(self):
        """value_iterator(self) -> SwigPyIterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_value_iterator(self)

    def __iter__(self): return self.key_iterator()
    def iterkeys(self): return self.key_iterator()
    def itervalues(self): return self.value_iterator()
    def iteritems(self): return self.iterator()
    def __setitem__(self, *args):
        """__setitem__(self, key_type key, mapped_type x)"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3___setitem__(self, *args)

    def __init__(self, *args): 
        """
        __init__(self, std::less<(unsigned long)> arg0) -> mapULitkQuadEdgeMeshPointF3
        __init__(self) -> mapULitkQuadEdgeMeshPointF3
        __init__(self, mapULitkQuadEdgeMeshPointF3 arg0) -> mapULitkQuadEdgeMeshPointF3
        """
        _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_swiginit(self,_itkQuadEdgeMeshBasePython.new_mapULitkQuadEdgeMeshPointF3(*args))
    def empty(self):
        """empty(self) -> bool"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_empty(self)

    def size(self):
        """size(self) -> size_type"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_size(self)

    def clear(self):
        """clear(self)"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_clear(self)

    def swap(self, *args):
        """swap(self, mapULitkQuadEdgeMeshPointF3 v)"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_swap(self, *args)

    def get_allocator(self):
        """get_allocator(self) -> allocator_type"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_get_allocator(self)

    def begin(self):
        """begin(self) -> const_iterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_begin(self)

    def end(self):
        """end(self) -> const_iterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_end(self)

    def rbegin(self):
        """rbegin(self) -> const_reverse_iterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_rbegin(self)

    def rend(self):
        """rend(self) -> const_reverse_iterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_rend(self)

    def count(self, *args):
        """count(self, key_type x) -> size_type"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_count(self, *args)

    def erase(self, *args):
        """
        erase(self, key_type x) -> size_type
        erase(self, iterator position)
        erase(self, iterator first, iterator last)
        """
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_erase(self, *args)

    def find(self, *args):
        """find(self, key_type x) -> iterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_find(self, *args)

    def lower_bound(self, *args):
        """lower_bound(self, key_type x) -> iterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_lower_bound(self, *args)

    def upper_bound(self, *args):
        """upper_bound(self, key_type x) -> iterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_upper_bound(self, *args)

    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_mapULitkQuadEdgeMeshPointF3
mapULitkQuadEdgeMeshPointF3.iterator = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_iterator,None,mapULitkQuadEdgeMeshPointF3)
mapULitkQuadEdgeMeshPointF3.__nonzero__ = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3___nonzero__,None,mapULitkQuadEdgeMeshPointF3)
mapULitkQuadEdgeMeshPointF3.__bool__ = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3___bool__,None,mapULitkQuadEdgeMeshPointF3)
mapULitkQuadEdgeMeshPointF3.__len__ = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3___len__,None,mapULitkQuadEdgeMeshPointF3)
mapULitkQuadEdgeMeshPointF3.__getitem__ = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3___getitem__,None,mapULitkQuadEdgeMeshPointF3)
mapULitkQuadEdgeMeshPointF3.__delitem__ = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3___delitem__,None,mapULitkQuadEdgeMeshPointF3)
mapULitkQuadEdgeMeshPointF3.has_key = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_has_key,None,mapULitkQuadEdgeMeshPointF3)
mapULitkQuadEdgeMeshPointF3.keys = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_keys,None,mapULitkQuadEdgeMeshPointF3)
mapULitkQuadEdgeMeshPointF3.values = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_values,None,mapULitkQuadEdgeMeshPointF3)
mapULitkQuadEdgeMeshPointF3.items = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_items,None,mapULitkQuadEdgeMeshPointF3)
mapULitkQuadEdgeMeshPointF3.__contains__ = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3___contains__,None,mapULitkQuadEdgeMeshPointF3)
mapULitkQuadEdgeMeshPointF3.key_iterator = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_key_iterator,None,mapULitkQuadEdgeMeshPointF3)
mapULitkQuadEdgeMeshPointF3.value_iterator = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_value_iterator,None,mapULitkQuadEdgeMeshPointF3)
mapULitkQuadEdgeMeshPointF3.__setitem__ = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3___setitem__,None,mapULitkQuadEdgeMeshPointF3)
mapULitkQuadEdgeMeshPointF3.empty = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_empty,None,mapULitkQuadEdgeMeshPointF3)
mapULitkQuadEdgeMeshPointF3.size = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_size,None,mapULitkQuadEdgeMeshPointF3)
mapULitkQuadEdgeMeshPointF3.clear = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_clear,None,mapULitkQuadEdgeMeshPointF3)
mapULitkQuadEdgeMeshPointF3.swap = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_swap,None,mapULitkQuadEdgeMeshPointF3)
mapULitkQuadEdgeMeshPointF3.get_allocator = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_get_allocator,None,mapULitkQuadEdgeMeshPointF3)
mapULitkQuadEdgeMeshPointF3.begin = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_begin,None,mapULitkQuadEdgeMeshPointF3)
mapULitkQuadEdgeMeshPointF3.end = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_end,None,mapULitkQuadEdgeMeshPointF3)
mapULitkQuadEdgeMeshPointF3.rbegin = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_rbegin,None,mapULitkQuadEdgeMeshPointF3)
mapULitkQuadEdgeMeshPointF3.rend = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_rend,None,mapULitkQuadEdgeMeshPointF3)
mapULitkQuadEdgeMeshPointF3.count = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_count,None,mapULitkQuadEdgeMeshPointF3)
mapULitkQuadEdgeMeshPointF3.erase = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_erase,None,mapULitkQuadEdgeMeshPointF3)
mapULitkQuadEdgeMeshPointF3.find = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_find,None,mapULitkQuadEdgeMeshPointF3)
mapULitkQuadEdgeMeshPointF3.lower_bound = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_lower_bound,None,mapULitkQuadEdgeMeshPointF3)
mapULitkQuadEdgeMeshPointF3.upper_bound = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_upper_bound,None,mapULitkQuadEdgeMeshPointF3)
mapULitkQuadEdgeMeshPointF3_swigregister = _itkQuadEdgeMeshBasePython.mapULitkQuadEdgeMeshPointF3_swigregister
mapULitkQuadEdgeMeshPointF3_swigregister(mapULitkQuadEdgeMeshPointF3)

class mapULitkCellInterfaceDQEMCTI3(object):
    """Proxy of C++ std::map<(unsigned long,p.itkCellInterfaceDQEMCTI3,std::less<(unsigned long)>)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def iterator(self):
        """iterator(self) -> SwigPyIterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_iterator(self)

    def __iter__(self): return self.iterator()
    def __nonzero__(self):
        """__nonzero__(self) -> bool"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3___nonzero__(self)

    def __bool__(self):
        """__bool__(self) -> bool"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3___bool__(self)

    def __len__(self):
        """__len__(self) -> size_type"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3___len__(self)

    def __getitem__(self, *args):
        """__getitem__(self, key_type key) -> mapped_type"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3___getitem__(self, *args)

    def __delitem__(self, *args):
        """__delitem__(self, key_type key)"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3___delitem__(self, *args)

    def has_key(self, *args):
        """has_key(self, key_type key) -> bool"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_has_key(self, *args)

    def keys(self):
        """keys(self) -> PyObject"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_keys(self)

    def values(self):
        """values(self) -> PyObject"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_values(self)

    def items(self):
        """items(self) -> PyObject"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_items(self)

    def __contains__(self, *args):
        """__contains__(self, key_type key) -> bool"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3___contains__(self, *args)

    def key_iterator(self):
        """key_iterator(self) -> SwigPyIterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_key_iterator(self)

    def value_iterator(self):
        """value_iterator(self) -> SwigPyIterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_value_iterator(self)

    def __iter__(self): return self.key_iterator()
    def iterkeys(self): return self.key_iterator()
    def itervalues(self): return self.value_iterator()
    def iteritems(self): return self.iterator()
    def __setitem__(self, *args):
        """__setitem__(self, key_type key, mapped_type x)"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3___setitem__(self, *args)

    def __init__(self, *args): 
        """
        __init__(self, std::less<(unsigned long)> arg0) -> mapULitkCellInterfaceDQEMCTI3
        __init__(self) -> mapULitkCellInterfaceDQEMCTI3
        __init__(self, mapULitkCellInterfaceDQEMCTI3 arg0) -> mapULitkCellInterfaceDQEMCTI3
        """
        _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_swiginit(self,_itkQuadEdgeMeshBasePython.new_mapULitkCellInterfaceDQEMCTI3(*args))
    def empty(self):
        """empty(self) -> bool"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_empty(self)

    def size(self):
        """size(self) -> size_type"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_size(self)

    def clear(self):
        """clear(self)"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_clear(self)

    def swap(self, *args):
        """swap(self, mapULitkCellInterfaceDQEMCTI3 v)"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_swap(self, *args)

    def get_allocator(self):
        """get_allocator(self) -> allocator_type"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_get_allocator(self)

    def begin(self):
        """begin(self) -> const_iterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_begin(self)

    def end(self):
        """end(self) -> const_iterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_end(self)

    def rbegin(self):
        """rbegin(self) -> const_reverse_iterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_rbegin(self)

    def rend(self):
        """rend(self) -> const_reverse_iterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_rend(self)

    def count(self, *args):
        """count(self, key_type x) -> size_type"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_count(self, *args)

    def erase(self, *args):
        """
        erase(self, key_type x) -> size_type
        erase(self, iterator position)
        erase(self, iterator first, iterator last)
        """
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_erase(self, *args)

    def find(self, *args):
        """find(self, key_type x) -> iterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_find(self, *args)

    def lower_bound(self, *args):
        """lower_bound(self, key_type x) -> iterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_lower_bound(self, *args)

    def upper_bound(self, *args):
        """upper_bound(self, key_type x) -> iterator"""
        return _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_upper_bound(self, *args)

    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_mapULitkCellInterfaceDQEMCTI3
mapULitkCellInterfaceDQEMCTI3.iterator = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_iterator,None,mapULitkCellInterfaceDQEMCTI3)
mapULitkCellInterfaceDQEMCTI3.__nonzero__ = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3___nonzero__,None,mapULitkCellInterfaceDQEMCTI3)
mapULitkCellInterfaceDQEMCTI3.__bool__ = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3___bool__,None,mapULitkCellInterfaceDQEMCTI3)
mapULitkCellInterfaceDQEMCTI3.__len__ = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3___len__,None,mapULitkCellInterfaceDQEMCTI3)
mapULitkCellInterfaceDQEMCTI3.__getitem__ = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3___getitem__,None,mapULitkCellInterfaceDQEMCTI3)
mapULitkCellInterfaceDQEMCTI3.__delitem__ = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3___delitem__,None,mapULitkCellInterfaceDQEMCTI3)
mapULitkCellInterfaceDQEMCTI3.has_key = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_has_key,None,mapULitkCellInterfaceDQEMCTI3)
mapULitkCellInterfaceDQEMCTI3.keys = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_keys,None,mapULitkCellInterfaceDQEMCTI3)
mapULitkCellInterfaceDQEMCTI3.values = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_values,None,mapULitkCellInterfaceDQEMCTI3)
mapULitkCellInterfaceDQEMCTI3.items = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_items,None,mapULitkCellInterfaceDQEMCTI3)
mapULitkCellInterfaceDQEMCTI3.__contains__ = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3___contains__,None,mapULitkCellInterfaceDQEMCTI3)
mapULitkCellInterfaceDQEMCTI3.key_iterator = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_key_iterator,None,mapULitkCellInterfaceDQEMCTI3)
mapULitkCellInterfaceDQEMCTI3.value_iterator = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_value_iterator,None,mapULitkCellInterfaceDQEMCTI3)
mapULitkCellInterfaceDQEMCTI3.__setitem__ = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3___setitem__,None,mapULitkCellInterfaceDQEMCTI3)
mapULitkCellInterfaceDQEMCTI3.empty = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_empty,None,mapULitkCellInterfaceDQEMCTI3)
mapULitkCellInterfaceDQEMCTI3.size = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_size,None,mapULitkCellInterfaceDQEMCTI3)
mapULitkCellInterfaceDQEMCTI3.clear = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_clear,None,mapULitkCellInterfaceDQEMCTI3)
mapULitkCellInterfaceDQEMCTI3.swap = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_swap,None,mapULitkCellInterfaceDQEMCTI3)
mapULitkCellInterfaceDQEMCTI3.get_allocator = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_get_allocator,None,mapULitkCellInterfaceDQEMCTI3)
mapULitkCellInterfaceDQEMCTI3.begin = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_begin,None,mapULitkCellInterfaceDQEMCTI3)
mapULitkCellInterfaceDQEMCTI3.end = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_end,None,mapULitkCellInterfaceDQEMCTI3)
mapULitkCellInterfaceDQEMCTI3.rbegin = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_rbegin,None,mapULitkCellInterfaceDQEMCTI3)
mapULitkCellInterfaceDQEMCTI3.rend = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_rend,None,mapULitkCellInterfaceDQEMCTI3)
mapULitkCellInterfaceDQEMCTI3.count = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_count,None,mapULitkCellInterfaceDQEMCTI3)
mapULitkCellInterfaceDQEMCTI3.erase = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_erase,None,mapULitkCellInterfaceDQEMCTI3)
mapULitkCellInterfaceDQEMCTI3.find = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_find,None,mapULitkCellInterfaceDQEMCTI3)
mapULitkCellInterfaceDQEMCTI3.lower_bound = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_lower_bound,None,mapULitkCellInterfaceDQEMCTI3)
mapULitkCellInterfaceDQEMCTI3.upper_bound = new_instancemethod(_itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_upper_bound,None,mapULitkCellInterfaceDQEMCTI3)
mapULitkCellInterfaceDQEMCTI3_swigregister = _itkQuadEdgeMeshBasePython.mapULitkCellInterfaceDQEMCTI3_swigregister
mapULitkCellInterfaceDQEMCTI3_swigregister(mapULitkCellInterfaceDQEMCTI3)

class itkBoundingBoxUL2FMCULQEMPF2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkBoundingBoxUL2FMCULQEMPF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    PointDimension = _itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_PointDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetPoints(self, *args):
        """SetPoints(self, itkMapContainerULQEMPF2 arg0)"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_SetPoints(self, *args)

    def GetPoints(self):
        """GetPoints(self) -> itkMapContainerULQEMPF2"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_GetPoints(self)

    def GetCorners(self):
        """GetCorners(self) -> itkMapContainerULQEMPF2"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_GetCorners(self)

    def ComputeBoundingBox(self):
        """ComputeBoundingBox(self) -> bool"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_ComputeBoundingBox(self)

    def GetBounds(self):
        """GetBounds(self) -> itkFixedArrayF4"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_GetBounds(self)

    def GetCenter(self):
        """GetCenter(self) -> itkPointF2"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_GetCenter(self)

    def GetMinimum(self):
        """GetMinimum(self) -> itkPointF2"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_GetMinimum(self)

    def SetMinimum(self, *args):
        """SetMinimum(self, itkPointF2 arg0)"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_SetMinimum(self, *args)

    def GetMaximum(self):
        """GetMaximum(self) -> itkPointF2"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_GetMaximum(self)

    def SetMaximum(self, *args):
        """SetMaximum(self, itkPointF2 arg0)"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_SetMaximum(self, *args)

    def ConsiderPoint(self, *args):
        """ConsiderPoint(self, itkPointF2 arg0)"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_ConsiderPoint(self, *args)

    def GetDiagonalLength2(self):
        """GetDiagonalLength2(self) -> double"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_GetDiagonalLength2(self)

    def IsInside(self, *args):
        """IsInside(self, itkPointF2 arg0) -> bool"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_IsInside(self, *args)

    def DeepCopy(self):
        """DeepCopy(self)"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_DeepCopy(self)

    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkBoundingBoxUL2FMCULQEMPF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkBoundingBoxUL2FMCULQEMPF2"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBoundingBoxUL2FMCULQEMPF2"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBoundingBoxUL2FMCULQEMPF2
        
        Create a new object of the class itkBoundingBoxUL2FMCULQEMPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBoundingBoxUL2FMCULQEMPF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBoundingBoxUL2FMCULQEMPF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBoundingBoxUL2FMCULQEMPF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBoundingBoxUL2FMCULQEMPF2.SetPoints = new_instancemethod(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_SetPoints,None,itkBoundingBoxUL2FMCULQEMPF2)
itkBoundingBoxUL2FMCULQEMPF2.GetPoints = new_instancemethod(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_GetPoints,None,itkBoundingBoxUL2FMCULQEMPF2)
itkBoundingBoxUL2FMCULQEMPF2.GetCorners = new_instancemethod(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_GetCorners,None,itkBoundingBoxUL2FMCULQEMPF2)
itkBoundingBoxUL2FMCULQEMPF2.ComputeBoundingBox = new_instancemethod(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_ComputeBoundingBox,None,itkBoundingBoxUL2FMCULQEMPF2)
itkBoundingBoxUL2FMCULQEMPF2.GetBounds = new_instancemethod(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_GetBounds,None,itkBoundingBoxUL2FMCULQEMPF2)
itkBoundingBoxUL2FMCULQEMPF2.GetCenter = new_instancemethod(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_GetCenter,None,itkBoundingBoxUL2FMCULQEMPF2)
itkBoundingBoxUL2FMCULQEMPF2.GetMinimum = new_instancemethod(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_GetMinimum,None,itkBoundingBoxUL2FMCULQEMPF2)
itkBoundingBoxUL2FMCULQEMPF2.SetMinimum = new_instancemethod(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_SetMinimum,None,itkBoundingBoxUL2FMCULQEMPF2)
itkBoundingBoxUL2FMCULQEMPF2.GetMaximum = new_instancemethod(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_GetMaximum,None,itkBoundingBoxUL2FMCULQEMPF2)
itkBoundingBoxUL2FMCULQEMPF2.SetMaximum = new_instancemethod(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_SetMaximum,None,itkBoundingBoxUL2FMCULQEMPF2)
itkBoundingBoxUL2FMCULQEMPF2.ConsiderPoint = new_instancemethod(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_ConsiderPoint,None,itkBoundingBoxUL2FMCULQEMPF2)
itkBoundingBoxUL2FMCULQEMPF2.GetDiagonalLength2 = new_instancemethod(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_GetDiagonalLength2,None,itkBoundingBoxUL2FMCULQEMPF2)
itkBoundingBoxUL2FMCULQEMPF2.IsInside = new_instancemethod(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_IsInside,None,itkBoundingBoxUL2FMCULQEMPF2)
itkBoundingBoxUL2FMCULQEMPF2.DeepCopy = new_instancemethod(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_DeepCopy,None,itkBoundingBoxUL2FMCULQEMPF2)
itkBoundingBoxUL2FMCULQEMPF2.GetPointer = new_instancemethod(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_GetPointer,None,itkBoundingBoxUL2FMCULQEMPF2)
itkBoundingBoxUL2FMCULQEMPF2_swigregister = _itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_swigregister
itkBoundingBoxUL2FMCULQEMPF2_swigregister(itkBoundingBoxUL2FMCULQEMPF2)

def itkBoundingBoxUL2FMCULQEMPF2___New_orig__():
  """itkBoundingBoxUL2FMCULQEMPF2___New_orig__()"""
  return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2___New_orig__()

def itkBoundingBoxUL2FMCULQEMPF2_cast(*args):
  """itkBoundingBoxUL2FMCULQEMPF2_cast(itkLightObject obj) -> itkBoundingBoxUL2FMCULQEMPF2"""
  return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_cast(*args)

class itkBoundingBoxUL3FMCULQEMPF3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkBoundingBoxUL3FMCULQEMPF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    PointDimension = _itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_PointDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetPoints(self, *args):
        """SetPoints(self, itkMapContainerULQEMPF3 arg0)"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_SetPoints(self, *args)

    def GetPoints(self):
        """GetPoints(self) -> itkMapContainerULQEMPF3"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_GetPoints(self)

    def GetCorners(self):
        """GetCorners(self) -> itkMapContainerULQEMPF3"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_GetCorners(self)

    def ComputeBoundingBox(self):
        """ComputeBoundingBox(self) -> bool"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_ComputeBoundingBox(self)

    def GetBounds(self):
        """GetBounds(self) -> itkFixedArrayF6"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_GetBounds(self)

    def GetCenter(self):
        """GetCenter(self) -> itkPointF3"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_GetCenter(self)

    def GetMinimum(self):
        """GetMinimum(self) -> itkPointF3"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_GetMinimum(self)

    def SetMinimum(self, *args):
        """SetMinimum(self, itkPointF3 arg0)"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_SetMinimum(self, *args)

    def GetMaximum(self):
        """GetMaximum(self) -> itkPointF3"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_GetMaximum(self)

    def SetMaximum(self, *args):
        """SetMaximum(self, itkPointF3 arg0)"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_SetMaximum(self, *args)

    def ConsiderPoint(self, *args):
        """ConsiderPoint(self, itkPointF3 arg0)"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_ConsiderPoint(self, *args)

    def GetDiagonalLength2(self):
        """GetDiagonalLength2(self) -> double"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_GetDiagonalLength2(self)

    def IsInside(self, *args):
        """IsInside(self, itkPointF3 arg0) -> bool"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_IsInside(self, *args)

    def DeepCopy(self):
        """DeepCopy(self)"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_DeepCopy(self)

    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkBoundingBoxUL3FMCULQEMPF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkBoundingBoxUL3FMCULQEMPF3"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBoundingBoxUL3FMCULQEMPF3"""
        return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBoundingBoxUL3FMCULQEMPF3
        
        Create a new object of the class itkBoundingBoxUL3FMCULQEMPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBoundingBoxUL3FMCULQEMPF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBoundingBoxUL3FMCULQEMPF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBoundingBoxUL3FMCULQEMPF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBoundingBoxUL3FMCULQEMPF3.SetPoints = new_instancemethod(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_SetPoints,None,itkBoundingBoxUL3FMCULQEMPF3)
itkBoundingBoxUL3FMCULQEMPF3.GetPoints = new_instancemethod(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_GetPoints,None,itkBoundingBoxUL3FMCULQEMPF3)
itkBoundingBoxUL3FMCULQEMPF3.GetCorners = new_instancemethod(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_GetCorners,None,itkBoundingBoxUL3FMCULQEMPF3)
itkBoundingBoxUL3FMCULQEMPF3.ComputeBoundingBox = new_instancemethod(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_ComputeBoundingBox,None,itkBoundingBoxUL3FMCULQEMPF3)
itkBoundingBoxUL3FMCULQEMPF3.GetBounds = new_instancemethod(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_GetBounds,None,itkBoundingBoxUL3FMCULQEMPF3)
itkBoundingBoxUL3FMCULQEMPF3.GetCenter = new_instancemethod(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_GetCenter,None,itkBoundingBoxUL3FMCULQEMPF3)
itkBoundingBoxUL3FMCULQEMPF3.GetMinimum = new_instancemethod(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_GetMinimum,None,itkBoundingBoxUL3FMCULQEMPF3)
itkBoundingBoxUL3FMCULQEMPF3.SetMinimum = new_instancemethod(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_SetMinimum,None,itkBoundingBoxUL3FMCULQEMPF3)
itkBoundingBoxUL3FMCULQEMPF3.GetMaximum = new_instancemethod(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_GetMaximum,None,itkBoundingBoxUL3FMCULQEMPF3)
itkBoundingBoxUL3FMCULQEMPF3.SetMaximum = new_instancemethod(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_SetMaximum,None,itkBoundingBoxUL3FMCULQEMPF3)
itkBoundingBoxUL3FMCULQEMPF3.ConsiderPoint = new_instancemethod(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_ConsiderPoint,None,itkBoundingBoxUL3FMCULQEMPF3)
itkBoundingBoxUL3FMCULQEMPF3.GetDiagonalLength2 = new_instancemethod(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_GetDiagonalLength2,None,itkBoundingBoxUL3FMCULQEMPF3)
itkBoundingBoxUL3FMCULQEMPF3.IsInside = new_instancemethod(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_IsInside,None,itkBoundingBoxUL3FMCULQEMPF3)
itkBoundingBoxUL3FMCULQEMPF3.DeepCopy = new_instancemethod(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_DeepCopy,None,itkBoundingBoxUL3FMCULQEMPF3)
itkBoundingBoxUL3FMCULQEMPF3.GetPointer = new_instancemethod(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_GetPointer,None,itkBoundingBoxUL3FMCULQEMPF3)
itkBoundingBoxUL3FMCULQEMPF3_swigregister = _itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_swigregister
itkBoundingBoxUL3FMCULQEMPF3_swigregister(itkBoundingBoxUL3FMCULQEMPF3)

def itkBoundingBoxUL3FMCULQEMPF3___New_orig__():
  """itkBoundingBoxUL3FMCULQEMPF3___New_orig__()"""
  return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3___New_orig__()

def itkBoundingBoxUL3FMCULQEMPF3_cast(*args):
  """itkBoundingBoxUL3FMCULQEMPF3_cast(itkLightObject obj) -> itkBoundingBoxUL3FMCULQEMPF3"""
  return _itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_cast(*args)

class itkMapContainerULCIDQEMCTI2(ITKCommonBasePython.itkObject,mapULitkCellInterfaceDQEMCTI2):
    """Proxy of C++ itkMapContainerULCIDQEMCTI2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> itkMapContainerULCIDQEMCTI2
        __init__(self, std::less<(unsigned long)> comp) -> itkMapContainerULCIDQEMCTI2
        """
        _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_swiginit(self,_itkQuadEdgeMeshBasePython.new_itkMapContainerULCIDQEMCTI2(*args))
    def __New_orig__():
        """__New_orig__()"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def CastToSTLContainer(self):
        """CastToSTLContainer(self) -> mapULitkCellInterfaceDQEMCTI2"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        """CastToSTLConstContainer(self) -> mapULitkCellInterfaceDQEMCTI2"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        """
        ElementAt(self, unsigned long arg0) -> itkCellInterfaceDQEMCTI2
        ElementAt(self, unsigned long arg0) -> itkCellInterfaceDQEMCTI2
        """
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_ElementAt(self, *args)

    def CreateElementAt(self, *args):
        """CreateElementAt(self, unsigned long arg0) -> itkCellInterfaceDQEMCTI2"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_CreateElementAt(self, *args)

    def GetElement(self, *args):
        """GetElement(self, unsigned long arg0) -> itkCellInterfaceDQEMCTI2"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_GetElement(self, *args)

    def SetElement(self, *args):
        """SetElement(self, unsigned long arg0, itkCellInterfaceDQEMCTI2 arg1)"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_SetElement(self, *args)

    def InsertElement(self, *args):
        """InsertElement(self, unsigned long arg0, itkCellInterfaceDQEMCTI2 arg1)"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_InsertElement(self, *args)

    def IndexExists(self, *args):
        """IndexExists(self, unsigned long arg0) -> bool"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_IndexExists(self, *args)

    def GetElementIfIndexExists(self, *args):
        """GetElementIfIndexExists(self, unsigned long arg0, itkCellInterfaceDQEMCTI2 arg1) -> bool"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_GetElementIfIndexExists(self, *args)

    def CreateIndex(self, *args):
        """CreateIndex(self, unsigned long arg0)"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_CreateIndex(self, *args)

    def DeleteIndex(self, *args):
        """DeleteIndex(self, unsigned long arg0)"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_DeleteIndex(self, *args)

    def Size(self):
        """Size(self) -> unsigned long"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_Size(self)

    def Reserve(self, *args):
        """Reserve(self, unsigned long arg0)"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_Reserve(self, *args)

    def Squeeze(self):
        """Squeeze(self)"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_Squeeze(self)

    def Initialize(self):
        """Initialize(self)"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_Initialize(self)

    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkMapContainerULCIDQEMCTI2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMapContainerULCIDQEMCTI2"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMapContainerULCIDQEMCTI2"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIDQEMCTI2
        
        Create a new object of the class itkMapContainerULCIDQEMCTI2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMapContainerULCIDQEMCTI2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMapContainerULCIDQEMCTI2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMapContainerULCIDQEMCTI2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMapContainerULCIDQEMCTI2.CastToSTLContainer = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_CastToSTLContainer,None,itkMapContainerULCIDQEMCTI2)
itkMapContainerULCIDQEMCTI2.CastToSTLConstContainer = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_CastToSTLConstContainer,None,itkMapContainerULCIDQEMCTI2)
itkMapContainerULCIDQEMCTI2.ElementAt = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_ElementAt,None,itkMapContainerULCIDQEMCTI2)
itkMapContainerULCIDQEMCTI2.CreateElementAt = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_CreateElementAt,None,itkMapContainerULCIDQEMCTI2)
itkMapContainerULCIDQEMCTI2.GetElement = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_GetElement,None,itkMapContainerULCIDQEMCTI2)
itkMapContainerULCIDQEMCTI2.SetElement = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_SetElement,None,itkMapContainerULCIDQEMCTI2)
itkMapContainerULCIDQEMCTI2.InsertElement = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_InsertElement,None,itkMapContainerULCIDQEMCTI2)
itkMapContainerULCIDQEMCTI2.IndexExists = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_IndexExists,None,itkMapContainerULCIDQEMCTI2)
itkMapContainerULCIDQEMCTI2.GetElementIfIndexExists = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_GetElementIfIndexExists,None,itkMapContainerULCIDQEMCTI2)
itkMapContainerULCIDQEMCTI2.CreateIndex = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_CreateIndex,None,itkMapContainerULCIDQEMCTI2)
itkMapContainerULCIDQEMCTI2.DeleteIndex = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_DeleteIndex,None,itkMapContainerULCIDQEMCTI2)
itkMapContainerULCIDQEMCTI2.Size = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_Size,None,itkMapContainerULCIDQEMCTI2)
itkMapContainerULCIDQEMCTI2.Reserve = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_Reserve,None,itkMapContainerULCIDQEMCTI2)
itkMapContainerULCIDQEMCTI2.Squeeze = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_Squeeze,None,itkMapContainerULCIDQEMCTI2)
itkMapContainerULCIDQEMCTI2.Initialize = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_Initialize,None,itkMapContainerULCIDQEMCTI2)
itkMapContainerULCIDQEMCTI2.GetPointer = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_GetPointer,None,itkMapContainerULCIDQEMCTI2)
itkMapContainerULCIDQEMCTI2_swigregister = _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_swigregister
itkMapContainerULCIDQEMCTI2_swigregister(itkMapContainerULCIDQEMCTI2)

def itkMapContainerULCIDQEMCTI2___New_orig__():
  """itkMapContainerULCIDQEMCTI2___New_orig__()"""
  return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2___New_orig__()

def itkMapContainerULCIDQEMCTI2_cast(*args):
  """itkMapContainerULCIDQEMCTI2_cast(itkLightObject obj) -> itkMapContainerULCIDQEMCTI2"""
  return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_cast(*args)

class itkMapContainerULCIDQEMCTI3(ITKCommonBasePython.itkObject,mapULitkCellInterfaceDQEMCTI3):
    """Proxy of C++ itkMapContainerULCIDQEMCTI3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> itkMapContainerULCIDQEMCTI3
        __init__(self, std::less<(unsigned long)> comp) -> itkMapContainerULCIDQEMCTI3
        """
        _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_swiginit(self,_itkQuadEdgeMeshBasePython.new_itkMapContainerULCIDQEMCTI3(*args))
    def __New_orig__():
        """__New_orig__()"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def CastToSTLContainer(self):
        """CastToSTLContainer(self) -> mapULitkCellInterfaceDQEMCTI3"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        """CastToSTLConstContainer(self) -> mapULitkCellInterfaceDQEMCTI3"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        """
        ElementAt(self, unsigned long arg0) -> itkCellInterfaceDQEMCTI3
        ElementAt(self, unsigned long arg0) -> itkCellInterfaceDQEMCTI3
        """
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_ElementAt(self, *args)

    def CreateElementAt(self, *args):
        """CreateElementAt(self, unsigned long arg0) -> itkCellInterfaceDQEMCTI3"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_CreateElementAt(self, *args)

    def GetElement(self, *args):
        """GetElement(self, unsigned long arg0) -> itkCellInterfaceDQEMCTI3"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_GetElement(self, *args)

    def SetElement(self, *args):
        """SetElement(self, unsigned long arg0, itkCellInterfaceDQEMCTI3 arg1)"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_SetElement(self, *args)

    def InsertElement(self, *args):
        """InsertElement(self, unsigned long arg0, itkCellInterfaceDQEMCTI3 arg1)"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_InsertElement(self, *args)

    def IndexExists(self, *args):
        """IndexExists(self, unsigned long arg0) -> bool"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_IndexExists(self, *args)

    def GetElementIfIndexExists(self, *args):
        """GetElementIfIndexExists(self, unsigned long arg0, itkCellInterfaceDQEMCTI3 arg1) -> bool"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_GetElementIfIndexExists(self, *args)

    def CreateIndex(self, *args):
        """CreateIndex(self, unsigned long arg0)"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_CreateIndex(self, *args)

    def DeleteIndex(self, *args):
        """DeleteIndex(self, unsigned long arg0)"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_DeleteIndex(self, *args)

    def Size(self):
        """Size(self) -> unsigned long"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_Size(self)

    def Reserve(self, *args):
        """Reserve(self, unsigned long arg0)"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_Reserve(self, *args)

    def Squeeze(self):
        """Squeeze(self)"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_Squeeze(self)

    def Initialize(self):
        """Initialize(self)"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_Initialize(self)

    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkMapContainerULCIDQEMCTI3
    def cast(*args):
        """cast(itkLightObject obj) -> itkMapContainerULCIDQEMCTI3"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMapContainerULCIDQEMCTI3"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIDQEMCTI3
        
        Create a new object of the class itkMapContainerULCIDQEMCTI3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMapContainerULCIDQEMCTI3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMapContainerULCIDQEMCTI3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMapContainerULCIDQEMCTI3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMapContainerULCIDQEMCTI3.CastToSTLContainer = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_CastToSTLContainer,None,itkMapContainerULCIDQEMCTI3)
itkMapContainerULCIDQEMCTI3.CastToSTLConstContainer = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_CastToSTLConstContainer,None,itkMapContainerULCIDQEMCTI3)
itkMapContainerULCIDQEMCTI3.ElementAt = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_ElementAt,None,itkMapContainerULCIDQEMCTI3)
itkMapContainerULCIDQEMCTI3.CreateElementAt = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_CreateElementAt,None,itkMapContainerULCIDQEMCTI3)
itkMapContainerULCIDQEMCTI3.GetElement = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_GetElement,None,itkMapContainerULCIDQEMCTI3)
itkMapContainerULCIDQEMCTI3.SetElement = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_SetElement,None,itkMapContainerULCIDQEMCTI3)
itkMapContainerULCIDQEMCTI3.InsertElement = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_InsertElement,None,itkMapContainerULCIDQEMCTI3)
itkMapContainerULCIDQEMCTI3.IndexExists = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_IndexExists,None,itkMapContainerULCIDQEMCTI3)
itkMapContainerULCIDQEMCTI3.GetElementIfIndexExists = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_GetElementIfIndexExists,None,itkMapContainerULCIDQEMCTI3)
itkMapContainerULCIDQEMCTI3.CreateIndex = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_CreateIndex,None,itkMapContainerULCIDQEMCTI3)
itkMapContainerULCIDQEMCTI3.DeleteIndex = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_DeleteIndex,None,itkMapContainerULCIDQEMCTI3)
itkMapContainerULCIDQEMCTI3.Size = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_Size,None,itkMapContainerULCIDQEMCTI3)
itkMapContainerULCIDQEMCTI3.Reserve = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_Reserve,None,itkMapContainerULCIDQEMCTI3)
itkMapContainerULCIDQEMCTI3.Squeeze = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_Squeeze,None,itkMapContainerULCIDQEMCTI3)
itkMapContainerULCIDQEMCTI3.Initialize = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_Initialize,None,itkMapContainerULCIDQEMCTI3)
itkMapContainerULCIDQEMCTI3.GetPointer = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_GetPointer,None,itkMapContainerULCIDQEMCTI3)
itkMapContainerULCIDQEMCTI3_swigregister = _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_swigregister
itkMapContainerULCIDQEMCTI3_swigregister(itkMapContainerULCIDQEMCTI3)

def itkMapContainerULCIDQEMCTI3___New_orig__():
  """itkMapContainerULCIDQEMCTI3___New_orig__()"""
  return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3___New_orig__()

def itkMapContainerULCIDQEMCTI3_cast(*args):
  """itkMapContainerULCIDQEMCTI3_cast(itkLightObject obj) -> itkMapContainerULCIDQEMCTI3"""
  return _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_cast(*args)

class itkMapContainerULQEMPF2(ITKCommonBasePython.itkObject,mapULitkQuadEdgeMeshPointF2):
    """Proxy of C++ itkMapContainerULQEMPF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> itkMapContainerULQEMPF2
        __init__(self, std::less<(unsigned long)> comp) -> itkMapContainerULQEMPF2
        """
        _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_swiginit(self,_itkQuadEdgeMeshBasePython.new_itkMapContainerULQEMPF2(*args))
    def __New_orig__():
        """__New_orig__()"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def CastToSTLContainer(self):
        """CastToSTLContainer(self) -> mapULitkQuadEdgeMeshPointF2"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        """CastToSTLConstContainer(self) -> mapULitkQuadEdgeMeshPointF2"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        """
        ElementAt(self, unsigned long arg0) -> itkQuadEdgeMeshPointF2
        ElementAt(self, unsigned long arg0) -> itkQuadEdgeMeshPointF2
        """
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_ElementAt(self, *args)

    def CreateElementAt(self, *args):
        """CreateElementAt(self, unsigned long arg0) -> itkQuadEdgeMeshPointF2"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_CreateElementAt(self, *args)

    def GetElement(self, *args):
        """GetElement(self, unsigned long arg0) -> itkQuadEdgeMeshPointF2"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_GetElement(self, *args)

    def SetElement(self, *args):
        """SetElement(self, unsigned long arg0, itkQuadEdgeMeshPointF2 arg1)"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_SetElement(self, *args)

    def InsertElement(self, *args):
        """InsertElement(self, unsigned long arg0, itkQuadEdgeMeshPointF2 arg1)"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_InsertElement(self, *args)

    def IndexExists(self, *args):
        """IndexExists(self, unsigned long arg0) -> bool"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_IndexExists(self, *args)

    def GetElementIfIndexExists(self, *args):
        """GetElementIfIndexExists(self, unsigned long arg0, itkQuadEdgeMeshPointF2 arg1) -> bool"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_GetElementIfIndexExists(self, *args)

    def CreateIndex(self, *args):
        """CreateIndex(self, unsigned long arg0)"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_CreateIndex(self, *args)

    def DeleteIndex(self, *args):
        """DeleteIndex(self, unsigned long arg0)"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_DeleteIndex(self, *args)

    def Size(self):
        """Size(self) -> unsigned long"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_Size(self)

    def Reserve(self, *args):
        """Reserve(self, unsigned long arg0)"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_Reserve(self, *args)

    def Squeeze(self):
        """Squeeze(self)"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_Squeeze(self)

    def Initialize(self):
        """Initialize(self)"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_Initialize(self)

    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkMapContainerULQEMPF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMapContainerULQEMPF2"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMapContainerULQEMPF2"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMapContainerULQEMPF2
        
        Create a new object of the class itkMapContainerULQEMPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMapContainerULQEMPF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMapContainerULQEMPF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMapContainerULQEMPF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMapContainerULQEMPF2.CastToSTLContainer = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_CastToSTLContainer,None,itkMapContainerULQEMPF2)
itkMapContainerULQEMPF2.CastToSTLConstContainer = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_CastToSTLConstContainer,None,itkMapContainerULQEMPF2)
itkMapContainerULQEMPF2.ElementAt = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_ElementAt,None,itkMapContainerULQEMPF2)
itkMapContainerULQEMPF2.CreateElementAt = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_CreateElementAt,None,itkMapContainerULQEMPF2)
itkMapContainerULQEMPF2.GetElement = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_GetElement,None,itkMapContainerULQEMPF2)
itkMapContainerULQEMPF2.SetElement = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_SetElement,None,itkMapContainerULQEMPF2)
itkMapContainerULQEMPF2.InsertElement = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_InsertElement,None,itkMapContainerULQEMPF2)
itkMapContainerULQEMPF2.IndexExists = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_IndexExists,None,itkMapContainerULQEMPF2)
itkMapContainerULQEMPF2.GetElementIfIndexExists = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_GetElementIfIndexExists,None,itkMapContainerULQEMPF2)
itkMapContainerULQEMPF2.CreateIndex = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_CreateIndex,None,itkMapContainerULQEMPF2)
itkMapContainerULQEMPF2.DeleteIndex = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_DeleteIndex,None,itkMapContainerULQEMPF2)
itkMapContainerULQEMPF2.Size = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_Size,None,itkMapContainerULQEMPF2)
itkMapContainerULQEMPF2.Reserve = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_Reserve,None,itkMapContainerULQEMPF2)
itkMapContainerULQEMPF2.Squeeze = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_Squeeze,None,itkMapContainerULQEMPF2)
itkMapContainerULQEMPF2.Initialize = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_Initialize,None,itkMapContainerULQEMPF2)
itkMapContainerULQEMPF2.GetPointer = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_GetPointer,None,itkMapContainerULQEMPF2)
itkMapContainerULQEMPF2_swigregister = _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_swigregister
itkMapContainerULQEMPF2_swigregister(itkMapContainerULQEMPF2)

def itkMapContainerULQEMPF2___New_orig__():
  """itkMapContainerULQEMPF2___New_orig__()"""
  return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2___New_orig__()

def itkMapContainerULQEMPF2_cast(*args):
  """itkMapContainerULQEMPF2_cast(itkLightObject obj) -> itkMapContainerULQEMPF2"""
  return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF2_cast(*args)

class itkMapContainerULQEMPF3(ITKCommonBasePython.itkObject,mapULitkQuadEdgeMeshPointF3):
    """Proxy of C++ itkMapContainerULQEMPF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> itkMapContainerULQEMPF3
        __init__(self, std::less<(unsigned long)> comp) -> itkMapContainerULQEMPF3
        """
        _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_swiginit(self,_itkQuadEdgeMeshBasePython.new_itkMapContainerULQEMPF3(*args))
    def __New_orig__():
        """__New_orig__()"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def CastToSTLContainer(self):
        """CastToSTLContainer(self) -> mapULitkQuadEdgeMeshPointF3"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        """CastToSTLConstContainer(self) -> mapULitkQuadEdgeMeshPointF3"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        """
        ElementAt(self, unsigned long arg0) -> itkQuadEdgeMeshPointF3
        ElementAt(self, unsigned long arg0) -> itkQuadEdgeMeshPointF3
        """
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_ElementAt(self, *args)

    def CreateElementAt(self, *args):
        """CreateElementAt(self, unsigned long arg0) -> itkQuadEdgeMeshPointF3"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_CreateElementAt(self, *args)

    def GetElement(self, *args):
        """GetElement(self, unsigned long arg0) -> itkQuadEdgeMeshPointF3"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_GetElement(self, *args)

    def SetElement(self, *args):
        """SetElement(self, unsigned long arg0, itkQuadEdgeMeshPointF3 arg1)"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_SetElement(self, *args)

    def InsertElement(self, *args):
        """InsertElement(self, unsigned long arg0, itkQuadEdgeMeshPointF3 arg1)"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_InsertElement(self, *args)

    def IndexExists(self, *args):
        """IndexExists(self, unsigned long arg0) -> bool"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_IndexExists(self, *args)

    def GetElementIfIndexExists(self, *args):
        """GetElementIfIndexExists(self, unsigned long arg0, itkQuadEdgeMeshPointF3 arg1) -> bool"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_GetElementIfIndexExists(self, *args)

    def CreateIndex(self, *args):
        """CreateIndex(self, unsigned long arg0)"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_CreateIndex(self, *args)

    def DeleteIndex(self, *args):
        """DeleteIndex(self, unsigned long arg0)"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_DeleteIndex(self, *args)

    def Size(self):
        """Size(self) -> unsigned long"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_Size(self)

    def Reserve(self, *args):
        """Reserve(self, unsigned long arg0)"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_Reserve(self, *args)

    def Squeeze(self):
        """Squeeze(self)"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_Squeeze(self)

    def Initialize(self):
        """Initialize(self)"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_Initialize(self)

    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkMapContainerULQEMPF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkMapContainerULQEMPF3"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMapContainerULQEMPF3"""
        return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMapContainerULQEMPF3
        
        Create a new object of the class itkMapContainerULQEMPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMapContainerULQEMPF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMapContainerULQEMPF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMapContainerULQEMPF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMapContainerULQEMPF3.CastToSTLContainer = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_CastToSTLContainer,None,itkMapContainerULQEMPF3)
itkMapContainerULQEMPF3.CastToSTLConstContainer = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_CastToSTLConstContainer,None,itkMapContainerULQEMPF3)
itkMapContainerULQEMPF3.ElementAt = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_ElementAt,None,itkMapContainerULQEMPF3)
itkMapContainerULQEMPF3.CreateElementAt = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_CreateElementAt,None,itkMapContainerULQEMPF3)
itkMapContainerULQEMPF3.GetElement = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_GetElement,None,itkMapContainerULQEMPF3)
itkMapContainerULQEMPF3.SetElement = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_SetElement,None,itkMapContainerULQEMPF3)
itkMapContainerULQEMPF3.InsertElement = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_InsertElement,None,itkMapContainerULQEMPF3)
itkMapContainerULQEMPF3.IndexExists = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_IndexExists,None,itkMapContainerULQEMPF3)
itkMapContainerULQEMPF3.GetElementIfIndexExists = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_GetElementIfIndexExists,None,itkMapContainerULQEMPF3)
itkMapContainerULQEMPF3.CreateIndex = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_CreateIndex,None,itkMapContainerULQEMPF3)
itkMapContainerULQEMPF3.DeleteIndex = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_DeleteIndex,None,itkMapContainerULQEMPF3)
itkMapContainerULQEMPF3.Size = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_Size,None,itkMapContainerULQEMPF3)
itkMapContainerULQEMPF3.Reserve = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_Reserve,None,itkMapContainerULQEMPF3)
itkMapContainerULQEMPF3.Squeeze = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_Squeeze,None,itkMapContainerULQEMPF3)
itkMapContainerULQEMPF3.Initialize = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_Initialize,None,itkMapContainerULQEMPF3)
itkMapContainerULQEMPF3.GetPointer = new_instancemethod(_itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_GetPointer,None,itkMapContainerULQEMPF3)
itkMapContainerULQEMPF3_swigregister = _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_swigregister
itkMapContainerULQEMPF3_swigregister(itkMapContainerULQEMPF3)

def itkMapContainerULQEMPF3___New_orig__():
  """itkMapContainerULQEMPF3___New_orig__()"""
  return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3___New_orig__()

def itkMapContainerULQEMPF3_cast(*args):
  """itkMapContainerULQEMPF3_cast(itkLightObject obj) -> itkMapContainerULQEMPF3"""
  return _itkQuadEdgeMeshBasePython.itkMapContainerULQEMPF3_cast(*args)



