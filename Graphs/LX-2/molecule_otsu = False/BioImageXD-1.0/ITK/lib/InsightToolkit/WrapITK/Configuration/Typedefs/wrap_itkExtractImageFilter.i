// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkExtractImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkExtractImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkExtractImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkExtractImageFilterJava
#endif
#ifdef SWIGLUA
%module itkExtractImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkExtractImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkExtractImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkExtractImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkExtractImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkExtractImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkExtractImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkExtractImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkExtractImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkExtractImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkExtractImageFilterPython
#endif
#ifdef SWIGR
%module itkExtractImageFilterR
#endif
#ifdef SWIGRUBY
%module itkExtractImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkExtractImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkExtractImageFilterTcl
#endif
#ifdef SWIGXML
%module itkExtractImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Resize.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_ITKRegions.i
%import wrap_itkImageToImageFilterB.i
%import wrap_itkImageToImageFilterA.i


%include itk.i
%include wrap_itkExtractImageFilter_ext.i


 class itkExtractImageFilterICF2ICF2 : public itkImageToImageFilterICF2ICF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputCovertibleToOutputCheck = 1 };
     static itkExtractImageFilterICF2ICF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetExtractionRegion(itkImageRegion2 extractRegion);
     virtual itkImageRegion2 GetExtractionRegion() const;
   private:
     itkExtractImageFilterICF2ICF2(itkExtractImageFilterICF2ICF2 const & arg0);
     void operator=(itkExtractImageFilterICF2ICF2 const & arg0);
   protected:
     itkExtractImageFilterICF2ICF2();
     ~itkExtractImageFilterICF2ICF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkExtractImageFilterICF2ICF2_Pointer {
   public:
     itkExtractImageFilterICF2ICF2_Pointer();
     itkExtractImageFilterICF2ICF2_Pointer(itkExtractImageFilterICF2ICF2_Pointer const & p);
     itkExtractImageFilterICF2ICF2_Pointer(itkExtractImageFilterICF2ICF2 * p);
     ~itkExtractImageFilterICF2ICF2_Pointer();
     itkExtractImageFilterICF2ICF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkExtractImageFilterICF2ICF2 * GetPointer() const;
     bool operator<(itkExtractImageFilterICF2ICF2_Pointer const & r) const;
     bool operator>(itkExtractImageFilterICF2ICF2_Pointer const & r) const;
     bool operator<=(itkExtractImageFilterICF2ICF2_Pointer const & r) const;
     bool operator>=(itkExtractImageFilterICF2ICF2_Pointer const & r) const;
     itkExtractImageFilterICF2ICF2_Pointer & operator=(itkExtractImageFilterICF2ICF2_Pointer const & r);
     itkExtractImageFilterICF2ICF2_Pointer & operator=(itkExtractImageFilterICF2ICF2 * r);
     itkExtractImageFilterICF2ICF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkExtractImageFilterICF3ICF2 : public itkImageToImageFilterICF3ICF2 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputCovertibleToOutputCheck = 1 };
     static itkExtractImageFilterICF3ICF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetExtractionRegion(itkImageRegion3 extractRegion);
     virtual itkImageRegion3 GetExtractionRegion() const;
   private:
     itkExtractImageFilterICF3ICF2(itkExtractImageFilterICF3ICF2 const & arg0);
     void operator=(itkExtractImageFilterICF3ICF2 const & arg0);
   protected:
     itkExtractImageFilterICF3ICF2();
     ~itkExtractImageFilterICF3ICF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkExtractImageFilterICF3ICF2_Pointer {
   public:
     itkExtractImageFilterICF3ICF2_Pointer();
     itkExtractImageFilterICF3ICF2_Pointer(itkExtractImageFilterICF3ICF2_Pointer const & p);
     itkExtractImageFilterICF3ICF2_Pointer(itkExtractImageFilterICF3ICF2 * p);
     ~itkExtractImageFilterICF3ICF2_Pointer();
     itkExtractImageFilterICF3ICF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkExtractImageFilterICF3ICF2 * GetPointer() const;
     bool operator<(itkExtractImageFilterICF3ICF2_Pointer const & r) const;
     bool operator>(itkExtractImageFilterICF3ICF2_Pointer const & r) const;
     bool operator<=(itkExtractImageFilterICF3ICF2_Pointer const & r) const;
     bool operator>=(itkExtractImageFilterICF3ICF2_Pointer const & r) const;
     itkExtractImageFilterICF3ICF2_Pointer & operator=(itkExtractImageFilterICF3ICF2_Pointer const & r);
     itkExtractImageFilterICF3ICF2_Pointer & operator=(itkExtractImageFilterICF3ICF2 * r);
     itkExtractImageFilterICF3ICF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkExtractImageFilterICF3ICF3 : public itkImageToImageFilterICF3ICF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputCovertibleToOutputCheck = 1 };
     static itkExtractImageFilterICF3ICF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetExtractionRegion(itkImageRegion3 extractRegion);
     virtual itkImageRegion3 GetExtractionRegion() const;
   private:
     itkExtractImageFilterICF3ICF3(itkExtractImageFilterICF3ICF3 const & arg0);
     void operator=(itkExtractImageFilterICF3ICF3 const & arg0);
   protected:
     itkExtractImageFilterICF3ICF3();
     ~itkExtractImageFilterICF3ICF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkExtractImageFilterICF3ICF3_Pointer {
   public:
     itkExtractImageFilterICF3ICF3_Pointer();
     itkExtractImageFilterICF3ICF3_Pointer(itkExtractImageFilterICF3ICF3_Pointer const & p);
     itkExtractImageFilterICF3ICF3_Pointer(itkExtractImageFilterICF3ICF3 * p);
     ~itkExtractImageFilterICF3ICF3_Pointer();
     itkExtractImageFilterICF3ICF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkExtractImageFilterICF3ICF3 * GetPointer() const;
     bool operator<(itkExtractImageFilterICF3ICF3_Pointer const & r) const;
     bool operator>(itkExtractImageFilterICF3ICF3_Pointer const & r) const;
     bool operator<=(itkExtractImageFilterICF3ICF3_Pointer const & r) const;
     bool operator>=(itkExtractImageFilterICF3ICF3_Pointer const & r) const;
     itkExtractImageFilterICF3ICF3_Pointer & operator=(itkExtractImageFilterICF3ICF3_Pointer const & r);
     itkExtractImageFilterICF3ICF3_Pointer & operator=(itkExtractImageFilterICF3ICF3 * r);
     itkExtractImageFilterICF3ICF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkExtractImageFilterICVF22ICVF22 : public itkImageToImageFilterICVF22ICVF22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputCovertibleToOutputCheck = 1 };
     static itkExtractImageFilterICVF22ICVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetExtractionRegion(itkImageRegion2 extractRegion);
     virtual itkImageRegion2 GetExtractionRegion() const;
   private:
     itkExtractImageFilterICVF22ICVF22(itkExtractImageFilterICVF22ICVF22 const & arg0);
     void operator=(itkExtractImageFilterICVF22ICVF22 const & arg0);
   protected:
     itkExtractImageFilterICVF22ICVF22();
     ~itkExtractImageFilterICVF22ICVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkExtractImageFilterICVF22ICVF22_Pointer {
   public:
     itkExtractImageFilterICVF22ICVF22_Pointer();
     itkExtractImageFilterICVF22ICVF22_Pointer(itkExtractImageFilterICVF22ICVF22_Pointer const & p);
     itkExtractImageFilterICVF22ICVF22_Pointer(itkExtractImageFilterICVF22ICVF22 * p);
     ~itkExtractImageFilterICVF22ICVF22_Pointer();
     itkExtractImageFilterICVF22ICVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkExtractImageFilterICVF22ICVF22 * GetPointer() const;
     bool operator<(itkExtractImageFilterICVF22ICVF22_Pointer const & r) const;
     bool operator>(itkExtractImageFilterICVF22ICVF22_Pointer const & r) const;
     bool operator<=(itkExtractImageFilterICVF22ICVF22_Pointer const & r) const;
     bool operator>=(itkExtractImageFilterICVF22ICVF22_Pointer const & r) const;
     itkExtractImageFilterICVF22ICVF22_Pointer & operator=(itkExtractImageFilterICVF22ICVF22_Pointer const & r);
     itkExtractImageFilterICVF22ICVF22_Pointer & operator=(itkExtractImageFilterICVF22ICVF22 * r);
     itkExtractImageFilterICVF22ICVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkExtractImageFilterICVF33ICVF33 : public itkImageToImageFilterICVF33ICVF33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputCovertibleToOutputCheck = 1 };
     static itkExtractImageFilterICVF33ICVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetExtractionRegion(itkImageRegion3 extractRegion);
     virtual itkImageRegion3 GetExtractionRegion() const;
   private:
     itkExtractImageFilterICVF33ICVF33(itkExtractImageFilterICVF33ICVF33 const & arg0);
     void operator=(itkExtractImageFilterICVF33ICVF33 const & arg0);
   protected:
     itkExtractImageFilterICVF33ICVF33();
     ~itkExtractImageFilterICVF33ICVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkExtractImageFilterICVF33ICVF33_Pointer {
   public:
     itkExtractImageFilterICVF33ICVF33_Pointer();
     itkExtractImageFilterICVF33ICVF33_Pointer(itkExtractImageFilterICVF33ICVF33_Pointer const & p);
     itkExtractImageFilterICVF33ICVF33_Pointer(itkExtractImageFilterICVF33ICVF33 * p);
     ~itkExtractImageFilterICVF33ICVF33_Pointer();
     itkExtractImageFilterICVF33ICVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkExtractImageFilterICVF33ICVF33 * GetPointer() const;
     bool operator<(itkExtractImageFilterICVF33ICVF33_Pointer const & r) const;
     bool operator>(itkExtractImageFilterICVF33ICVF33_Pointer const & r) const;
     bool operator<=(itkExtractImageFilterICVF33ICVF33_Pointer const & r) const;
     bool operator>=(itkExtractImageFilterICVF33ICVF33_Pointer const & r) const;
     itkExtractImageFilterICVF33ICVF33_Pointer & operator=(itkExtractImageFilterICVF33ICVF33_Pointer const & r);
     itkExtractImageFilterICVF33ICVF33_Pointer & operator=(itkExtractImageFilterICVF33ICVF33 * r);
     itkExtractImageFilterICVF33ICVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkExtractImageFilterID2ID2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputCovertibleToOutputCheck = 1 };
     static itkExtractImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetExtractionRegion(itkImageRegion2 extractRegion);
     virtual itkImageRegion2 GetExtractionRegion() const;
   private:
     itkExtractImageFilterID2ID2(itkExtractImageFilterID2ID2 const & arg0);
     void operator=(itkExtractImageFilterID2ID2 const & arg0);
   protected:
     itkExtractImageFilterID2ID2();
     ~itkExtractImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkExtractImageFilterID2ID2_Pointer {
   public:
     itkExtractImageFilterID2ID2_Pointer();
     itkExtractImageFilterID2ID2_Pointer(itkExtractImageFilterID2ID2_Pointer const & p);
     itkExtractImageFilterID2ID2_Pointer(itkExtractImageFilterID2ID2 * p);
     ~itkExtractImageFilterID2ID2_Pointer();
     itkExtractImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkExtractImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkExtractImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkExtractImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkExtractImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkExtractImageFilterID2ID2_Pointer const & r) const;
     itkExtractImageFilterID2ID2_Pointer & operator=(itkExtractImageFilterID2ID2_Pointer const & r);
     itkExtractImageFilterID2ID2_Pointer & operator=(itkExtractImageFilterID2ID2 * r);
     itkExtractImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkExtractImageFilterID3ID2 : public itkImageToImageFilterID3ID2 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputCovertibleToOutputCheck = 1 };
     static itkExtractImageFilterID3ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetExtractionRegion(itkImageRegion3 extractRegion);
     virtual itkImageRegion3 GetExtractionRegion() const;
   private:
     itkExtractImageFilterID3ID2(itkExtractImageFilterID3ID2 const & arg0);
     void operator=(itkExtractImageFilterID3ID2 const & arg0);
   protected:
     itkExtractImageFilterID3ID2();
     ~itkExtractImageFilterID3ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkExtractImageFilterID3ID2_Pointer {
   public:
     itkExtractImageFilterID3ID2_Pointer();
     itkExtractImageFilterID3ID2_Pointer(itkExtractImageFilterID3ID2_Pointer const & p);
     itkExtractImageFilterID3ID2_Pointer(itkExtractImageFilterID3ID2 * p);
     ~itkExtractImageFilterID3ID2_Pointer();
     itkExtractImageFilterID3ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkExtractImageFilterID3ID2 * GetPointer() const;
     bool operator<(itkExtractImageFilterID3ID2_Pointer const & r) const;
     bool operator>(itkExtractImageFilterID3ID2_Pointer const & r) const;
     bool operator<=(itkExtractImageFilterID3ID2_Pointer const & r) const;
     bool operator>=(itkExtractImageFilterID3ID2_Pointer const & r) const;
     itkExtractImageFilterID3ID2_Pointer & operator=(itkExtractImageFilterID3ID2_Pointer const & r);
     itkExtractImageFilterID3ID2_Pointer & operator=(itkExtractImageFilterID3ID2 * r);
     itkExtractImageFilterID3ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkExtractImageFilterID3ID3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputCovertibleToOutputCheck = 1 };
     static itkExtractImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetExtractionRegion(itkImageRegion3 extractRegion);
     virtual itkImageRegion3 GetExtractionRegion() const;
   private:
     itkExtractImageFilterID3ID3(itkExtractImageFilterID3ID3 const & arg0);
     void operator=(itkExtractImageFilterID3ID3 const & arg0);
   protected:
     itkExtractImageFilterID3ID3();
     ~itkExtractImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkExtractImageFilterID3ID3_Pointer {
   public:
     itkExtractImageFilterID3ID3_Pointer();
     itkExtractImageFilterID3ID3_Pointer(itkExtractImageFilterID3ID3_Pointer const & p);
     itkExtractImageFilterID3ID3_Pointer(itkExtractImageFilterID3ID3 * p);
     ~itkExtractImageFilterID3ID3_Pointer();
     itkExtractImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkExtractImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkExtractImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkExtractImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkExtractImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkExtractImageFilterID3ID3_Pointer const & r) const;
     itkExtractImageFilterID3ID3_Pointer & operator=(itkExtractImageFilterID3ID3_Pointer const & r);
     itkExtractImageFilterID3ID3_Pointer & operator=(itkExtractImageFilterID3ID3 * r);
     itkExtractImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkExtractImageFilterIF2IF2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputCovertibleToOutputCheck = 1 };
     static itkExtractImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetExtractionRegion(itkImageRegion2 extractRegion);
     virtual itkImageRegion2 GetExtractionRegion() const;
   private:
     itkExtractImageFilterIF2IF2(itkExtractImageFilterIF2IF2 const & arg0);
     void operator=(itkExtractImageFilterIF2IF2 const & arg0);
   protected:
     itkExtractImageFilterIF2IF2();
     ~itkExtractImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkExtractImageFilterIF2IF2_Pointer {
   public:
     itkExtractImageFilterIF2IF2_Pointer();
     itkExtractImageFilterIF2IF2_Pointer(itkExtractImageFilterIF2IF2_Pointer const & p);
     itkExtractImageFilterIF2IF2_Pointer(itkExtractImageFilterIF2IF2 * p);
     ~itkExtractImageFilterIF2IF2_Pointer();
     itkExtractImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkExtractImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkExtractImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkExtractImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkExtractImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkExtractImageFilterIF2IF2_Pointer const & r) const;
     itkExtractImageFilterIF2IF2_Pointer & operator=(itkExtractImageFilterIF2IF2_Pointer const & r);
     itkExtractImageFilterIF2IF2_Pointer & operator=(itkExtractImageFilterIF2IF2 * r);
     itkExtractImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkExtractImageFilterIF3IF2 : public itkImageToImageFilterIF3IF2 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputCovertibleToOutputCheck = 1 };
     static itkExtractImageFilterIF3IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetExtractionRegion(itkImageRegion3 extractRegion);
     virtual itkImageRegion3 GetExtractionRegion() const;
   private:
     itkExtractImageFilterIF3IF2(itkExtractImageFilterIF3IF2 const & arg0);
     void operator=(itkExtractImageFilterIF3IF2 const & arg0);
   protected:
     itkExtractImageFilterIF3IF2();
     ~itkExtractImageFilterIF3IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkExtractImageFilterIF3IF2_Pointer {
   public:
     itkExtractImageFilterIF3IF2_Pointer();
     itkExtractImageFilterIF3IF2_Pointer(itkExtractImageFilterIF3IF2_Pointer const & p);
     itkExtractImageFilterIF3IF2_Pointer(itkExtractImageFilterIF3IF2 * p);
     ~itkExtractImageFilterIF3IF2_Pointer();
     itkExtractImageFilterIF3IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkExtractImageFilterIF3IF2 * GetPointer() const;
     bool operator<(itkExtractImageFilterIF3IF2_Pointer const & r) const;
     bool operator>(itkExtractImageFilterIF3IF2_Pointer const & r) const;
     bool operator<=(itkExtractImageFilterIF3IF2_Pointer const & r) const;
     bool operator>=(itkExtractImageFilterIF3IF2_Pointer const & r) const;
     itkExtractImageFilterIF3IF2_Pointer & operator=(itkExtractImageFilterIF3IF2_Pointer const & r);
     itkExtractImageFilterIF3IF2_Pointer & operator=(itkExtractImageFilterIF3IF2 * r);
     itkExtractImageFilterIF3IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkExtractImageFilterIF3IF3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputCovertibleToOutputCheck = 1 };
     static itkExtractImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetExtractionRegion(itkImageRegion3 extractRegion);
     virtual itkImageRegion3 GetExtractionRegion() const;
   private:
     itkExtractImageFilterIF3IF3(itkExtractImageFilterIF3IF3 const & arg0);
     void operator=(itkExtractImageFilterIF3IF3 const & arg0);
   protected:
     itkExtractImageFilterIF3IF3();
     ~itkExtractImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkExtractImageFilterIF3IF3_Pointer {
   public:
     itkExtractImageFilterIF3IF3_Pointer();
     itkExtractImageFilterIF3IF3_Pointer(itkExtractImageFilterIF3IF3_Pointer const & p);
     itkExtractImageFilterIF3IF3_Pointer(itkExtractImageFilterIF3IF3 * p);
     ~itkExtractImageFilterIF3IF3_Pointer();
     itkExtractImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkExtractImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkExtractImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkExtractImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkExtractImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkExtractImageFilterIF3IF3_Pointer const & r) const;
     itkExtractImageFilterIF3IF3_Pointer & operator=(itkExtractImageFilterIF3IF3_Pointer const & r);
     itkExtractImageFilterIF3IF3_Pointer & operator=(itkExtractImageFilterIF3IF3 * r);
     itkExtractImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkExtractImageFilterIRGBAUS2IRGBAUS2 : public itkImageToImageFilterIRGBAUS2IRGBAUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputCovertibleToOutputCheck = 1 };
     static itkExtractImageFilterIRGBAUS2IRGBAUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetExtractionRegion(itkImageRegion2 extractRegion);
     virtual itkImageRegion2 GetExtractionRegion() const;
   private:
     itkExtractImageFilterIRGBAUS2IRGBAUS2(itkExtractImageFilterIRGBAUS2IRGBAUS2 const & arg0);
     void operator=(itkExtractImageFilterIRGBAUS2IRGBAUS2 const & arg0);
   protected:
     itkExtractImageFilterIRGBAUS2IRGBAUS2();
     ~itkExtractImageFilterIRGBAUS2IRGBAUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkExtractImageFilterIRGBAUS2IRGBAUS2_Pointer {
   public:
     itkExtractImageFilterIRGBAUS2IRGBAUS2_Pointer();
     itkExtractImageFilterIRGBAUS2IRGBAUS2_Pointer(itkExtractImageFilterIRGBAUS2IRGBAUS2_Pointer const & p);
     itkExtractImageFilterIRGBAUS2IRGBAUS2_Pointer(itkExtractImageFilterIRGBAUS2IRGBAUS2 * p);
     ~itkExtractImageFilterIRGBAUS2IRGBAUS2_Pointer();
     itkExtractImageFilterIRGBAUS2IRGBAUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkExtractImageFilterIRGBAUS2IRGBAUS2 * GetPointer() const;
     bool operator<(itkExtractImageFilterIRGBAUS2IRGBAUS2_Pointer const & r) const;
     bool operator>(itkExtractImageFilterIRGBAUS2IRGBAUS2_Pointer const & r) const;
     bool operator<=(itkExtractImageFilterIRGBAUS2IRGBAUS2_Pointer const & r) const;
     bool operator>=(itkExtractImageFilterIRGBAUS2IRGBAUS2_Pointer const & r) const;
     itkExtractImageFilterIRGBAUS2IRGBAUS2_Pointer & operator=(itkExtractImageFilterIRGBAUS2IRGBAUS2_Pointer const & r);
     itkExtractImageFilterIRGBAUS2IRGBAUS2_Pointer & operator=(itkExtractImageFilterIRGBAUS2IRGBAUS2 * r);
     itkExtractImageFilterIRGBAUS2IRGBAUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkExtractImageFilterIRGBAUS3IRGBAUS3 : public itkImageToImageFilterIRGBAUS3IRGBAUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputCovertibleToOutputCheck = 1 };
     static itkExtractImageFilterIRGBAUS3IRGBAUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetExtractionRegion(itkImageRegion3 extractRegion);
     virtual itkImageRegion3 GetExtractionRegion() const;
   private:
     itkExtractImageFilterIRGBAUS3IRGBAUS3(itkExtractImageFilterIRGBAUS3IRGBAUS3 const & arg0);
     void operator=(itkExtractImageFilterIRGBAUS3IRGBAUS3 const & arg0);
   protected:
     itkExtractImageFilterIRGBAUS3IRGBAUS3();
     ~itkExtractImageFilterIRGBAUS3IRGBAUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkExtractImageFilterIRGBAUS3IRGBAUS3_Pointer {
   public:
     itkExtractImageFilterIRGBAUS3IRGBAUS3_Pointer();
     itkExtractImageFilterIRGBAUS3IRGBAUS3_Pointer(itkExtractImageFilterIRGBAUS3IRGBAUS3_Pointer const & p);
     itkExtractImageFilterIRGBAUS3IRGBAUS3_Pointer(itkExtractImageFilterIRGBAUS3IRGBAUS3 * p);
     ~itkExtractImageFilterIRGBAUS3IRGBAUS3_Pointer();
     itkExtractImageFilterIRGBAUS3IRGBAUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkExtractImageFilterIRGBAUS3IRGBAUS3 * GetPointer() const;
     bool operator<(itkExtractImageFilterIRGBAUS3IRGBAUS3_Pointer const & r) const;
     bool operator>(itkExtractImageFilterIRGBAUS3IRGBAUS3_Pointer const & r) const;
     bool operator<=(itkExtractImageFilterIRGBAUS3IRGBAUS3_Pointer const & r) const;
     bool operator>=(itkExtractImageFilterIRGBAUS3IRGBAUS3_Pointer const & r) const;
     itkExtractImageFilterIRGBAUS3IRGBAUS3_Pointer & operator=(itkExtractImageFilterIRGBAUS3IRGBAUS3_Pointer const & r);
     itkExtractImageFilterIRGBAUS3IRGBAUS3_Pointer & operator=(itkExtractImageFilterIRGBAUS3IRGBAUS3 * r);
     itkExtractImageFilterIRGBAUS3IRGBAUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkExtractImageFilterIRGBUS2IRGBUS2 : public itkImageToImageFilterIRGBUS2IRGBUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputCovertibleToOutputCheck = 1 };
     static itkExtractImageFilterIRGBUS2IRGBUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetExtractionRegion(itkImageRegion2 extractRegion);
     virtual itkImageRegion2 GetExtractionRegion() const;
   private:
     itkExtractImageFilterIRGBUS2IRGBUS2(itkExtractImageFilterIRGBUS2IRGBUS2 const & arg0);
     void operator=(itkExtractImageFilterIRGBUS2IRGBUS2 const & arg0);
   protected:
     itkExtractImageFilterIRGBUS2IRGBUS2();
     ~itkExtractImageFilterIRGBUS2IRGBUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkExtractImageFilterIRGBUS2IRGBUS2_Pointer {
   public:
     itkExtractImageFilterIRGBUS2IRGBUS2_Pointer();
     itkExtractImageFilterIRGBUS2IRGBUS2_Pointer(itkExtractImageFilterIRGBUS2IRGBUS2_Pointer const & p);
     itkExtractImageFilterIRGBUS2IRGBUS2_Pointer(itkExtractImageFilterIRGBUS2IRGBUS2 * p);
     ~itkExtractImageFilterIRGBUS2IRGBUS2_Pointer();
     itkExtractImageFilterIRGBUS2IRGBUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkExtractImageFilterIRGBUS2IRGBUS2 * GetPointer() const;
     bool operator<(itkExtractImageFilterIRGBUS2IRGBUS2_Pointer const & r) const;
     bool operator>(itkExtractImageFilterIRGBUS2IRGBUS2_Pointer const & r) const;
     bool operator<=(itkExtractImageFilterIRGBUS2IRGBUS2_Pointer const & r) const;
     bool operator>=(itkExtractImageFilterIRGBUS2IRGBUS2_Pointer const & r) const;
     itkExtractImageFilterIRGBUS2IRGBUS2_Pointer & operator=(itkExtractImageFilterIRGBUS2IRGBUS2_Pointer const & r);
     itkExtractImageFilterIRGBUS2IRGBUS2_Pointer & operator=(itkExtractImageFilterIRGBUS2IRGBUS2 * r);
     itkExtractImageFilterIRGBUS2IRGBUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkExtractImageFilterIRGBUS3IRGBUS2 : public itkImageToImageFilterIRGBUS3IRGBUS2 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputCovertibleToOutputCheck = 1 };
     static itkExtractImageFilterIRGBUS3IRGBUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetExtractionRegion(itkImageRegion3 extractRegion);
     virtual itkImageRegion3 GetExtractionRegion() const;
   private:
     itkExtractImageFilterIRGBUS3IRGBUS2(itkExtractImageFilterIRGBUS3IRGBUS2 const & arg0);
     void operator=(itkExtractImageFilterIRGBUS3IRGBUS2 const & arg0);
   protected:
     itkExtractImageFilterIRGBUS3IRGBUS2();
     ~itkExtractImageFilterIRGBUS3IRGBUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkExtractImageFilterIRGBUS3IRGBUS2_Pointer {
   public:
     itkExtractImageFilterIRGBUS3IRGBUS2_Pointer();
     itkExtractImageFilterIRGBUS3IRGBUS2_Pointer(itkExtractImageFilterIRGBUS3IRGBUS2_Pointer const & p);
     itkExtractImageFilterIRGBUS3IRGBUS2_Pointer(itkExtractImageFilterIRGBUS3IRGBUS2 * p);
     ~itkExtractImageFilterIRGBUS3IRGBUS2_Pointer();
     itkExtractImageFilterIRGBUS3IRGBUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkExtractImageFilterIRGBUS3IRGBUS2 * GetPointer() const;
     bool operator<(itkExtractImageFilterIRGBUS3IRGBUS2_Pointer const & r) const;
     bool operator>(itkExtractImageFilterIRGBUS3IRGBUS2_Pointer const & r) const;
     bool operator<=(itkExtractImageFilterIRGBUS3IRGBUS2_Pointer const & r) const;
     bool operator>=(itkExtractImageFilterIRGBUS3IRGBUS2_Pointer const & r) const;
     itkExtractImageFilterIRGBUS3IRGBUS2_Pointer & operator=(itkExtractImageFilterIRGBUS3IRGBUS2_Pointer const & r);
     itkExtractImageFilterIRGBUS3IRGBUS2_Pointer & operator=(itkExtractImageFilterIRGBUS3IRGBUS2 * r);
     itkExtractImageFilterIRGBUS3IRGBUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkExtractImageFilterIRGBUS3IRGBUS3 : public itkImageToImageFilterIRGBUS3IRGBUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputCovertibleToOutputCheck = 1 };
     static itkExtractImageFilterIRGBUS3IRGBUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetExtractionRegion(itkImageRegion3 extractRegion);
     virtual itkImageRegion3 GetExtractionRegion() const;
   private:
     itkExtractImageFilterIRGBUS3IRGBUS3(itkExtractImageFilterIRGBUS3IRGBUS3 const & arg0);
     void operator=(itkExtractImageFilterIRGBUS3IRGBUS3 const & arg0);
   protected:
     itkExtractImageFilterIRGBUS3IRGBUS3();
     ~itkExtractImageFilterIRGBUS3IRGBUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkExtractImageFilterIRGBUS3IRGBUS3_Pointer {
   public:
     itkExtractImageFilterIRGBUS3IRGBUS3_Pointer();
     itkExtractImageFilterIRGBUS3IRGBUS3_Pointer(itkExtractImageFilterIRGBUS3IRGBUS3_Pointer const & p);
     itkExtractImageFilterIRGBUS3IRGBUS3_Pointer(itkExtractImageFilterIRGBUS3IRGBUS3 * p);
     ~itkExtractImageFilterIRGBUS3IRGBUS3_Pointer();
     itkExtractImageFilterIRGBUS3IRGBUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkExtractImageFilterIRGBUS3IRGBUS3 * GetPointer() const;
     bool operator<(itkExtractImageFilterIRGBUS3IRGBUS3_Pointer const & r) const;
     bool operator>(itkExtractImageFilterIRGBUS3IRGBUS3_Pointer const & r) const;
     bool operator<=(itkExtractImageFilterIRGBUS3IRGBUS3_Pointer const & r) const;
     bool operator>=(itkExtractImageFilterIRGBUS3IRGBUS3_Pointer const & r) const;
     itkExtractImageFilterIRGBUS3IRGBUS3_Pointer & operator=(itkExtractImageFilterIRGBUS3IRGBUS3_Pointer const & r);
     itkExtractImageFilterIRGBUS3IRGBUS3_Pointer & operator=(itkExtractImageFilterIRGBUS3IRGBUS3 * r);
     itkExtractImageFilterIRGBUS3IRGBUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkExtractImageFilterIUC2IUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputCovertibleToOutputCheck = 1 };
     static itkExtractImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetExtractionRegion(itkImageRegion2 extractRegion);
     virtual itkImageRegion2 GetExtractionRegion() const;
   private:
     itkExtractImageFilterIUC2IUC2(itkExtractImageFilterIUC2IUC2 const & arg0);
     void operator=(itkExtractImageFilterIUC2IUC2 const & arg0);
   protected:
     itkExtractImageFilterIUC2IUC2();
     ~itkExtractImageFilterIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkExtractImageFilterIUC2IUC2_Pointer {
   public:
     itkExtractImageFilterIUC2IUC2_Pointer();
     itkExtractImageFilterIUC2IUC2_Pointer(itkExtractImageFilterIUC2IUC2_Pointer const & p);
     itkExtractImageFilterIUC2IUC2_Pointer(itkExtractImageFilterIUC2IUC2 * p);
     ~itkExtractImageFilterIUC2IUC2_Pointer();
     itkExtractImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkExtractImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkExtractImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkExtractImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkExtractImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkExtractImageFilterIUC2IUC2_Pointer const & r) const;
     itkExtractImageFilterIUC2IUC2_Pointer & operator=(itkExtractImageFilterIUC2IUC2_Pointer const & r);
     itkExtractImageFilterIUC2IUC2_Pointer & operator=(itkExtractImageFilterIUC2IUC2 * r);
     itkExtractImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkExtractImageFilterIUC3IUC2 : public itkImageToImageFilterIUC3IUC2 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputCovertibleToOutputCheck = 1 };
     static itkExtractImageFilterIUC3IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetExtractionRegion(itkImageRegion3 extractRegion);
     virtual itkImageRegion3 GetExtractionRegion() const;
   private:
     itkExtractImageFilterIUC3IUC2(itkExtractImageFilterIUC3IUC2 const & arg0);
     void operator=(itkExtractImageFilterIUC3IUC2 const & arg0);
   protected:
     itkExtractImageFilterIUC3IUC2();
     ~itkExtractImageFilterIUC3IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkExtractImageFilterIUC3IUC2_Pointer {
   public:
     itkExtractImageFilterIUC3IUC2_Pointer();
     itkExtractImageFilterIUC3IUC2_Pointer(itkExtractImageFilterIUC3IUC2_Pointer const & p);
     itkExtractImageFilterIUC3IUC2_Pointer(itkExtractImageFilterIUC3IUC2 * p);
     ~itkExtractImageFilterIUC3IUC2_Pointer();
     itkExtractImageFilterIUC3IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkExtractImageFilterIUC3IUC2 * GetPointer() const;
     bool operator<(itkExtractImageFilterIUC3IUC2_Pointer const & r) const;
     bool operator>(itkExtractImageFilterIUC3IUC2_Pointer const & r) const;
     bool operator<=(itkExtractImageFilterIUC3IUC2_Pointer const & r) const;
     bool operator>=(itkExtractImageFilterIUC3IUC2_Pointer const & r) const;
     itkExtractImageFilterIUC3IUC2_Pointer & operator=(itkExtractImageFilterIUC3IUC2_Pointer const & r);
     itkExtractImageFilterIUC3IUC2_Pointer & operator=(itkExtractImageFilterIUC3IUC2 * r);
     itkExtractImageFilterIUC3IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkExtractImageFilterIUC3IUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputCovertibleToOutputCheck = 1 };
     static itkExtractImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetExtractionRegion(itkImageRegion3 extractRegion);
     virtual itkImageRegion3 GetExtractionRegion() const;
   private:
     itkExtractImageFilterIUC3IUC3(itkExtractImageFilterIUC3IUC3 const & arg0);
     void operator=(itkExtractImageFilterIUC3IUC3 const & arg0);
   protected:
     itkExtractImageFilterIUC3IUC3();
     ~itkExtractImageFilterIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkExtractImageFilterIUC3IUC3_Pointer {
   public:
     itkExtractImageFilterIUC3IUC3_Pointer();
     itkExtractImageFilterIUC3IUC3_Pointer(itkExtractImageFilterIUC3IUC3_Pointer const & p);
     itkExtractImageFilterIUC3IUC3_Pointer(itkExtractImageFilterIUC3IUC3 * p);
     ~itkExtractImageFilterIUC3IUC3_Pointer();
     itkExtractImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkExtractImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkExtractImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkExtractImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkExtractImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkExtractImageFilterIUC3IUC3_Pointer const & r) const;
     itkExtractImageFilterIUC3IUC3_Pointer & operator=(itkExtractImageFilterIUC3IUC3_Pointer const & r);
     itkExtractImageFilterIUC3IUC3_Pointer & operator=(itkExtractImageFilterIUC3IUC3 * r);
     itkExtractImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkExtractImageFilterIUL2IUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputCovertibleToOutputCheck = 1 };
     static itkExtractImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetExtractionRegion(itkImageRegion2 extractRegion);
     virtual itkImageRegion2 GetExtractionRegion() const;
   private:
     itkExtractImageFilterIUL2IUL2(itkExtractImageFilterIUL2IUL2 const & arg0);
     void operator=(itkExtractImageFilterIUL2IUL2 const & arg0);
   protected:
     itkExtractImageFilterIUL2IUL2();
     ~itkExtractImageFilterIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkExtractImageFilterIUL2IUL2_Pointer {
   public:
     itkExtractImageFilterIUL2IUL2_Pointer();
     itkExtractImageFilterIUL2IUL2_Pointer(itkExtractImageFilterIUL2IUL2_Pointer const & p);
     itkExtractImageFilterIUL2IUL2_Pointer(itkExtractImageFilterIUL2IUL2 * p);
     ~itkExtractImageFilterIUL2IUL2_Pointer();
     itkExtractImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkExtractImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkExtractImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkExtractImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkExtractImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkExtractImageFilterIUL2IUL2_Pointer const & r) const;
     itkExtractImageFilterIUL2IUL2_Pointer & operator=(itkExtractImageFilterIUL2IUL2_Pointer const & r);
     itkExtractImageFilterIUL2IUL2_Pointer & operator=(itkExtractImageFilterIUL2IUL2 * r);
     itkExtractImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkExtractImageFilterIUL3IUL2 : public itkImageToImageFilterIUL3IUL2 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputCovertibleToOutputCheck = 1 };
     static itkExtractImageFilterIUL3IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetExtractionRegion(itkImageRegion3 extractRegion);
     virtual itkImageRegion3 GetExtractionRegion() const;
   private:
     itkExtractImageFilterIUL3IUL2(itkExtractImageFilterIUL3IUL2 const & arg0);
     void operator=(itkExtractImageFilterIUL3IUL2 const & arg0);
   protected:
     itkExtractImageFilterIUL3IUL2();
     ~itkExtractImageFilterIUL3IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkExtractImageFilterIUL3IUL2_Pointer {
   public:
     itkExtractImageFilterIUL3IUL2_Pointer();
     itkExtractImageFilterIUL3IUL2_Pointer(itkExtractImageFilterIUL3IUL2_Pointer const & p);
     itkExtractImageFilterIUL3IUL2_Pointer(itkExtractImageFilterIUL3IUL2 * p);
     ~itkExtractImageFilterIUL3IUL2_Pointer();
     itkExtractImageFilterIUL3IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkExtractImageFilterIUL3IUL2 * GetPointer() const;
     bool operator<(itkExtractImageFilterIUL3IUL2_Pointer const & r) const;
     bool operator>(itkExtractImageFilterIUL3IUL2_Pointer const & r) const;
     bool operator<=(itkExtractImageFilterIUL3IUL2_Pointer const & r) const;
     bool operator>=(itkExtractImageFilterIUL3IUL2_Pointer const & r) const;
     itkExtractImageFilterIUL3IUL2_Pointer & operator=(itkExtractImageFilterIUL3IUL2_Pointer const & r);
     itkExtractImageFilterIUL3IUL2_Pointer & operator=(itkExtractImageFilterIUL3IUL2 * r);
     itkExtractImageFilterIUL3IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkExtractImageFilterIUL3IUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputCovertibleToOutputCheck = 1 };
     static itkExtractImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetExtractionRegion(itkImageRegion3 extractRegion);
     virtual itkImageRegion3 GetExtractionRegion() const;
   private:
     itkExtractImageFilterIUL3IUL3(itkExtractImageFilterIUL3IUL3 const & arg0);
     void operator=(itkExtractImageFilterIUL3IUL3 const & arg0);
   protected:
     itkExtractImageFilterIUL3IUL3();
     ~itkExtractImageFilterIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkExtractImageFilterIUL3IUL3_Pointer {
   public:
     itkExtractImageFilterIUL3IUL3_Pointer();
     itkExtractImageFilterIUL3IUL3_Pointer(itkExtractImageFilterIUL3IUL3_Pointer const & p);
     itkExtractImageFilterIUL3IUL3_Pointer(itkExtractImageFilterIUL3IUL3 * p);
     ~itkExtractImageFilterIUL3IUL3_Pointer();
     itkExtractImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkExtractImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkExtractImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkExtractImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkExtractImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkExtractImageFilterIUL3IUL3_Pointer const & r) const;
     itkExtractImageFilterIUL3IUL3_Pointer & operator=(itkExtractImageFilterIUL3IUL3_Pointer const & r);
     itkExtractImageFilterIUL3IUL3_Pointer & operator=(itkExtractImageFilterIUL3IUL3 * r);
     itkExtractImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkExtractImageFilterIUS2IUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputCovertibleToOutputCheck = 1 };
     static itkExtractImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetExtractionRegion(itkImageRegion2 extractRegion);
     virtual itkImageRegion2 GetExtractionRegion() const;
   private:
     itkExtractImageFilterIUS2IUS2(itkExtractImageFilterIUS2IUS2 const & arg0);
     void operator=(itkExtractImageFilterIUS2IUS2 const & arg0);
   protected:
     itkExtractImageFilterIUS2IUS2();
     ~itkExtractImageFilterIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkExtractImageFilterIUS2IUS2_Pointer {
   public:
     itkExtractImageFilterIUS2IUS2_Pointer();
     itkExtractImageFilterIUS2IUS2_Pointer(itkExtractImageFilterIUS2IUS2_Pointer const & p);
     itkExtractImageFilterIUS2IUS2_Pointer(itkExtractImageFilterIUS2IUS2 * p);
     ~itkExtractImageFilterIUS2IUS2_Pointer();
     itkExtractImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkExtractImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkExtractImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkExtractImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkExtractImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkExtractImageFilterIUS2IUS2_Pointer const & r) const;
     itkExtractImageFilterIUS2IUS2_Pointer & operator=(itkExtractImageFilterIUS2IUS2_Pointer const & r);
     itkExtractImageFilterIUS2IUS2_Pointer & operator=(itkExtractImageFilterIUS2IUS2 * r);
     itkExtractImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkExtractImageFilterIUS3IUS2 : public itkImageToImageFilterIUS3IUS2 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputCovertibleToOutputCheck = 1 };
     static itkExtractImageFilterIUS3IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetExtractionRegion(itkImageRegion3 extractRegion);
     virtual itkImageRegion3 GetExtractionRegion() const;
   private:
     itkExtractImageFilterIUS3IUS2(itkExtractImageFilterIUS3IUS2 const & arg0);
     void operator=(itkExtractImageFilterIUS3IUS2 const & arg0);
   protected:
     itkExtractImageFilterIUS3IUS2();
     ~itkExtractImageFilterIUS3IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkExtractImageFilterIUS3IUS2_Pointer {
   public:
     itkExtractImageFilterIUS3IUS2_Pointer();
     itkExtractImageFilterIUS3IUS2_Pointer(itkExtractImageFilterIUS3IUS2_Pointer const & p);
     itkExtractImageFilterIUS3IUS2_Pointer(itkExtractImageFilterIUS3IUS2 * p);
     ~itkExtractImageFilterIUS3IUS2_Pointer();
     itkExtractImageFilterIUS3IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkExtractImageFilterIUS3IUS2 * GetPointer() const;
     bool operator<(itkExtractImageFilterIUS3IUS2_Pointer const & r) const;
     bool operator>(itkExtractImageFilterIUS3IUS2_Pointer const & r) const;
     bool operator<=(itkExtractImageFilterIUS3IUS2_Pointer const & r) const;
     bool operator>=(itkExtractImageFilterIUS3IUS2_Pointer const & r) const;
     itkExtractImageFilterIUS3IUS2_Pointer & operator=(itkExtractImageFilterIUS3IUS2_Pointer const & r);
     itkExtractImageFilterIUS3IUS2_Pointer & operator=(itkExtractImageFilterIUS3IUS2 * r);
     itkExtractImageFilterIUS3IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkExtractImageFilterIUS3IUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputCovertibleToOutputCheck = 1 };
     static itkExtractImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetExtractionRegion(itkImageRegion3 extractRegion);
     virtual itkImageRegion3 GetExtractionRegion() const;
   private:
     itkExtractImageFilterIUS3IUS3(itkExtractImageFilterIUS3IUS3 const & arg0);
     void operator=(itkExtractImageFilterIUS3IUS3 const & arg0);
   protected:
     itkExtractImageFilterIUS3IUS3();
     ~itkExtractImageFilterIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkExtractImageFilterIUS3IUS3_Pointer {
   public:
     itkExtractImageFilterIUS3IUS3_Pointer();
     itkExtractImageFilterIUS3IUS3_Pointer(itkExtractImageFilterIUS3IUS3_Pointer const & p);
     itkExtractImageFilterIUS3IUS3_Pointer(itkExtractImageFilterIUS3IUS3 * p);
     ~itkExtractImageFilterIUS3IUS3_Pointer();
     itkExtractImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkExtractImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkExtractImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkExtractImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkExtractImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkExtractImageFilterIUS3IUS3_Pointer const & r) const;
     itkExtractImageFilterIUS3IUS3_Pointer & operator=(itkExtractImageFilterIUS3IUS3_Pointer const & r);
     itkExtractImageFilterIUS3IUS3_Pointer & operator=(itkExtractImageFilterIUS3IUS3 * r);
     itkExtractImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkExtractImageFilterIVF22IVF22 : public itkImageToImageFilterIVF22IVF22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputCovertibleToOutputCheck = 1 };
     static itkExtractImageFilterIVF22IVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetExtractionRegion(itkImageRegion2 extractRegion);
     virtual itkImageRegion2 GetExtractionRegion() const;
   private:
     itkExtractImageFilterIVF22IVF22(itkExtractImageFilterIVF22IVF22 const & arg0);
     void operator=(itkExtractImageFilterIVF22IVF22 const & arg0);
   protected:
     itkExtractImageFilterIVF22IVF22();
     ~itkExtractImageFilterIVF22IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkExtractImageFilterIVF22IVF22_Pointer {
   public:
     itkExtractImageFilterIVF22IVF22_Pointer();
     itkExtractImageFilterIVF22IVF22_Pointer(itkExtractImageFilterIVF22IVF22_Pointer const & p);
     itkExtractImageFilterIVF22IVF22_Pointer(itkExtractImageFilterIVF22IVF22 * p);
     ~itkExtractImageFilterIVF22IVF22_Pointer();
     itkExtractImageFilterIVF22IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkExtractImageFilterIVF22IVF22 * GetPointer() const;
     bool operator<(itkExtractImageFilterIVF22IVF22_Pointer const & r) const;
     bool operator>(itkExtractImageFilterIVF22IVF22_Pointer const & r) const;
     bool operator<=(itkExtractImageFilterIVF22IVF22_Pointer const & r) const;
     bool operator>=(itkExtractImageFilterIVF22IVF22_Pointer const & r) const;
     itkExtractImageFilterIVF22IVF22_Pointer & operator=(itkExtractImageFilterIVF22IVF22_Pointer const & r);
     itkExtractImageFilterIVF22IVF22_Pointer & operator=(itkExtractImageFilterIVF22IVF22 * r);
     itkExtractImageFilterIVF22IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkExtractImageFilterIVF33IVF33 : public itkImageToImageFilterIVF33IVF33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputCovertibleToOutputCheck = 1 };
     static itkExtractImageFilterIVF33IVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetExtractionRegion(itkImageRegion3 extractRegion);
     virtual itkImageRegion3 GetExtractionRegion() const;
   private:
     itkExtractImageFilterIVF33IVF33(itkExtractImageFilterIVF33IVF33 const & arg0);
     void operator=(itkExtractImageFilterIVF33IVF33 const & arg0);
   protected:
     itkExtractImageFilterIVF33IVF33();
     ~itkExtractImageFilterIVF33IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkExtractImageFilterIVF33IVF33_Pointer {
   public:
     itkExtractImageFilterIVF33IVF33_Pointer();
     itkExtractImageFilterIVF33IVF33_Pointer(itkExtractImageFilterIVF33IVF33_Pointer const & p);
     itkExtractImageFilterIVF33IVF33_Pointer(itkExtractImageFilterIVF33IVF33 * p);
     ~itkExtractImageFilterIVF33IVF33_Pointer();
     itkExtractImageFilterIVF33IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkExtractImageFilterIVF33IVF33 * GetPointer() const;
     bool operator<(itkExtractImageFilterIVF33IVF33_Pointer const & r) const;
     bool operator>(itkExtractImageFilterIVF33IVF33_Pointer const & r) const;
     bool operator<=(itkExtractImageFilterIVF33IVF33_Pointer const & r) const;
     bool operator>=(itkExtractImageFilterIVF33IVF33_Pointer const & r) const;
     itkExtractImageFilterIVF33IVF33_Pointer & operator=(itkExtractImageFilterIVF33IVF33_Pointer const & r);
     itkExtractImageFilterIVF33IVF33_Pointer & operator=(itkExtractImageFilterIVF33IVF33 * r);
     itkExtractImageFilterIVF33IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


