// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkBinaryMedianImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkBinaryMedianImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkBinaryMedianImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkBinaryMedianImageFilterJava
#endif
#ifdef SWIGLUA
%module itkBinaryMedianImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkBinaryMedianImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkBinaryMedianImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkBinaryMedianImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkBinaryMedianImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkBinaryMedianImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkBinaryMedianImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkBinaryMedianImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkBinaryMedianImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkBinaryMedianImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkBinaryMedianImageFilterPython
#endif
#ifdef SWIGR
%module itkBinaryMedianImageFilterR
#endif
#ifdef SWIGRUBY
%module itkBinaryMedianImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkBinaryMedianImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkBinaryMedianImageFilterTcl
#endif
#ifdef SWIGXML
%module itkBinaryMedianImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Denoising.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkSize.i
%import wrap_ITKRegions.i
%import wrap_itkImageToImageFilterA.i


%include itk.i
%include wrap_itkBinaryMedianImageFilter_ext.i


 class itkBinaryMedianImageFilterID2ID2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryMedianImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRadius(itkSize2 const _arg);
     virtual itkSize2 const & GetRadius() const;
     virtual void SetBackgroundValue(double const _arg);
     virtual void SetForegroundValue(double const _arg);
     virtual double const & GetBackgroundValue() const;
     virtual double const & GetForegroundValue() const;
     virtual void GenerateInputRequestedRegion();
   private:
     itkBinaryMedianImageFilterID2ID2(itkBinaryMedianImageFilterID2ID2 const & arg0);
     void operator=(itkBinaryMedianImageFilterID2ID2 const & arg0);
   protected:
     itkBinaryMedianImageFilterID2ID2();
     ~itkBinaryMedianImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkBinaryMedianImageFilterID2ID2_Pointer {
   public:
     itkBinaryMedianImageFilterID2ID2_Pointer();
     itkBinaryMedianImageFilterID2ID2_Pointer(itkBinaryMedianImageFilterID2ID2_Pointer const & p);
     itkBinaryMedianImageFilterID2ID2_Pointer(itkBinaryMedianImageFilterID2ID2 * p);
     ~itkBinaryMedianImageFilterID2ID2_Pointer();
     itkBinaryMedianImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryMedianImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkBinaryMedianImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkBinaryMedianImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkBinaryMedianImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkBinaryMedianImageFilterID2ID2_Pointer const & r) const;
     itkBinaryMedianImageFilterID2ID2_Pointer & operator=(itkBinaryMedianImageFilterID2ID2_Pointer const & r);
     itkBinaryMedianImageFilterID2ID2_Pointer & operator=(itkBinaryMedianImageFilterID2ID2 * r);
     itkBinaryMedianImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryMedianImageFilterID3ID3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryMedianImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRadius(itkSize3 const _arg);
     virtual itkSize3 const & GetRadius() const;
     virtual void SetBackgroundValue(double const _arg);
     virtual void SetForegroundValue(double const _arg);
     virtual double const & GetBackgroundValue() const;
     virtual double const & GetForegroundValue() const;
     virtual void GenerateInputRequestedRegion();
   private:
     itkBinaryMedianImageFilterID3ID3(itkBinaryMedianImageFilterID3ID3 const & arg0);
     void operator=(itkBinaryMedianImageFilterID3ID3 const & arg0);
   protected:
     itkBinaryMedianImageFilterID3ID3();
     ~itkBinaryMedianImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkBinaryMedianImageFilterID3ID3_Pointer {
   public:
     itkBinaryMedianImageFilterID3ID3_Pointer();
     itkBinaryMedianImageFilterID3ID3_Pointer(itkBinaryMedianImageFilterID3ID3_Pointer const & p);
     itkBinaryMedianImageFilterID3ID3_Pointer(itkBinaryMedianImageFilterID3ID3 * p);
     ~itkBinaryMedianImageFilterID3ID3_Pointer();
     itkBinaryMedianImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryMedianImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkBinaryMedianImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkBinaryMedianImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkBinaryMedianImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkBinaryMedianImageFilterID3ID3_Pointer const & r) const;
     itkBinaryMedianImageFilterID3ID3_Pointer & operator=(itkBinaryMedianImageFilterID3ID3_Pointer const & r);
     itkBinaryMedianImageFilterID3ID3_Pointer & operator=(itkBinaryMedianImageFilterID3ID3 * r);
     itkBinaryMedianImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryMedianImageFilterIF2IF2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryMedianImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRadius(itkSize2 const _arg);
     virtual itkSize2 const & GetRadius() const;
     virtual void SetBackgroundValue(float const _arg);
     virtual void SetForegroundValue(float const _arg);
     virtual float const & GetBackgroundValue() const;
     virtual float const & GetForegroundValue() const;
     virtual void GenerateInputRequestedRegion();
   private:
     itkBinaryMedianImageFilterIF2IF2(itkBinaryMedianImageFilterIF2IF2 const & arg0);
     void operator=(itkBinaryMedianImageFilterIF2IF2 const & arg0);
   protected:
     itkBinaryMedianImageFilterIF2IF2();
     ~itkBinaryMedianImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkBinaryMedianImageFilterIF2IF2_Pointer {
   public:
     itkBinaryMedianImageFilterIF2IF2_Pointer();
     itkBinaryMedianImageFilterIF2IF2_Pointer(itkBinaryMedianImageFilterIF2IF2_Pointer const & p);
     itkBinaryMedianImageFilterIF2IF2_Pointer(itkBinaryMedianImageFilterIF2IF2 * p);
     ~itkBinaryMedianImageFilterIF2IF2_Pointer();
     itkBinaryMedianImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryMedianImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkBinaryMedianImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkBinaryMedianImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkBinaryMedianImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkBinaryMedianImageFilterIF2IF2_Pointer const & r) const;
     itkBinaryMedianImageFilterIF2IF2_Pointer & operator=(itkBinaryMedianImageFilterIF2IF2_Pointer const & r);
     itkBinaryMedianImageFilterIF2IF2_Pointer & operator=(itkBinaryMedianImageFilterIF2IF2 * r);
     itkBinaryMedianImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryMedianImageFilterIF3IF3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryMedianImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRadius(itkSize3 const _arg);
     virtual itkSize3 const & GetRadius() const;
     virtual void SetBackgroundValue(float const _arg);
     virtual void SetForegroundValue(float const _arg);
     virtual float const & GetBackgroundValue() const;
     virtual float const & GetForegroundValue() const;
     virtual void GenerateInputRequestedRegion();
   private:
     itkBinaryMedianImageFilterIF3IF3(itkBinaryMedianImageFilterIF3IF3 const & arg0);
     void operator=(itkBinaryMedianImageFilterIF3IF3 const & arg0);
   protected:
     itkBinaryMedianImageFilterIF3IF3();
     ~itkBinaryMedianImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkBinaryMedianImageFilterIF3IF3_Pointer {
   public:
     itkBinaryMedianImageFilterIF3IF3_Pointer();
     itkBinaryMedianImageFilterIF3IF3_Pointer(itkBinaryMedianImageFilterIF3IF3_Pointer const & p);
     itkBinaryMedianImageFilterIF3IF3_Pointer(itkBinaryMedianImageFilterIF3IF3 * p);
     ~itkBinaryMedianImageFilterIF3IF3_Pointer();
     itkBinaryMedianImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryMedianImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkBinaryMedianImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkBinaryMedianImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkBinaryMedianImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkBinaryMedianImageFilterIF3IF3_Pointer const & r) const;
     itkBinaryMedianImageFilterIF3IF3_Pointer & operator=(itkBinaryMedianImageFilterIF3IF3_Pointer const & r);
     itkBinaryMedianImageFilterIF3IF3_Pointer & operator=(itkBinaryMedianImageFilterIF3IF3 * r);
     itkBinaryMedianImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryMedianImageFilterIUC2IUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryMedianImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRadius(itkSize2 const _arg);
     virtual itkSize2 const & GetRadius() const;
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual void SetForegroundValue(unsigned char const _arg);
     virtual unsigned char const & GetBackgroundValue() const;
     virtual unsigned char const & GetForegroundValue() const;
     virtual void GenerateInputRequestedRegion();
   private:
     itkBinaryMedianImageFilterIUC2IUC2(itkBinaryMedianImageFilterIUC2IUC2 const & arg0);
     void operator=(itkBinaryMedianImageFilterIUC2IUC2 const & arg0);
   protected:
     itkBinaryMedianImageFilterIUC2IUC2();
     ~itkBinaryMedianImageFilterIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkBinaryMedianImageFilterIUC2IUC2_Pointer {
   public:
     itkBinaryMedianImageFilterIUC2IUC2_Pointer();
     itkBinaryMedianImageFilterIUC2IUC2_Pointer(itkBinaryMedianImageFilterIUC2IUC2_Pointer const & p);
     itkBinaryMedianImageFilterIUC2IUC2_Pointer(itkBinaryMedianImageFilterIUC2IUC2 * p);
     ~itkBinaryMedianImageFilterIUC2IUC2_Pointer();
     itkBinaryMedianImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryMedianImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkBinaryMedianImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkBinaryMedianImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkBinaryMedianImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkBinaryMedianImageFilterIUC2IUC2_Pointer const & r) const;
     itkBinaryMedianImageFilterIUC2IUC2_Pointer & operator=(itkBinaryMedianImageFilterIUC2IUC2_Pointer const & r);
     itkBinaryMedianImageFilterIUC2IUC2_Pointer & operator=(itkBinaryMedianImageFilterIUC2IUC2 * r);
     itkBinaryMedianImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryMedianImageFilterIUC3IUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryMedianImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRadius(itkSize3 const _arg);
     virtual itkSize3 const & GetRadius() const;
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual void SetForegroundValue(unsigned char const _arg);
     virtual unsigned char const & GetBackgroundValue() const;
     virtual unsigned char const & GetForegroundValue() const;
     virtual void GenerateInputRequestedRegion();
   private:
     itkBinaryMedianImageFilterIUC3IUC3(itkBinaryMedianImageFilterIUC3IUC3 const & arg0);
     void operator=(itkBinaryMedianImageFilterIUC3IUC3 const & arg0);
   protected:
     itkBinaryMedianImageFilterIUC3IUC3();
     ~itkBinaryMedianImageFilterIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkBinaryMedianImageFilterIUC3IUC3_Pointer {
   public:
     itkBinaryMedianImageFilterIUC3IUC3_Pointer();
     itkBinaryMedianImageFilterIUC3IUC3_Pointer(itkBinaryMedianImageFilterIUC3IUC3_Pointer const & p);
     itkBinaryMedianImageFilterIUC3IUC3_Pointer(itkBinaryMedianImageFilterIUC3IUC3 * p);
     ~itkBinaryMedianImageFilterIUC3IUC3_Pointer();
     itkBinaryMedianImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryMedianImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkBinaryMedianImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkBinaryMedianImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkBinaryMedianImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkBinaryMedianImageFilterIUC3IUC3_Pointer const & r) const;
     itkBinaryMedianImageFilterIUC3IUC3_Pointer & operator=(itkBinaryMedianImageFilterIUC3IUC3_Pointer const & r);
     itkBinaryMedianImageFilterIUC3IUC3_Pointer & operator=(itkBinaryMedianImageFilterIUC3IUC3 * r);
     itkBinaryMedianImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryMedianImageFilterIUL2IUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryMedianImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRadius(itkSize2 const _arg);
     virtual itkSize2 const & GetRadius() const;
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual void SetForegroundValue(unsigned long const _arg);
     virtual unsigned long const & GetBackgroundValue() const;
     virtual unsigned long const & GetForegroundValue() const;
     virtual void GenerateInputRequestedRegion();
   private:
     itkBinaryMedianImageFilterIUL2IUL2(itkBinaryMedianImageFilterIUL2IUL2 const & arg0);
     void operator=(itkBinaryMedianImageFilterIUL2IUL2 const & arg0);
   protected:
     itkBinaryMedianImageFilterIUL2IUL2();
     ~itkBinaryMedianImageFilterIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkBinaryMedianImageFilterIUL2IUL2_Pointer {
   public:
     itkBinaryMedianImageFilterIUL2IUL2_Pointer();
     itkBinaryMedianImageFilterIUL2IUL2_Pointer(itkBinaryMedianImageFilterIUL2IUL2_Pointer const & p);
     itkBinaryMedianImageFilterIUL2IUL2_Pointer(itkBinaryMedianImageFilterIUL2IUL2 * p);
     ~itkBinaryMedianImageFilterIUL2IUL2_Pointer();
     itkBinaryMedianImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryMedianImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkBinaryMedianImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkBinaryMedianImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkBinaryMedianImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkBinaryMedianImageFilterIUL2IUL2_Pointer const & r) const;
     itkBinaryMedianImageFilterIUL2IUL2_Pointer & operator=(itkBinaryMedianImageFilterIUL2IUL2_Pointer const & r);
     itkBinaryMedianImageFilterIUL2IUL2_Pointer & operator=(itkBinaryMedianImageFilterIUL2IUL2 * r);
     itkBinaryMedianImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryMedianImageFilterIUL3IUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryMedianImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRadius(itkSize3 const _arg);
     virtual itkSize3 const & GetRadius() const;
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual void SetForegroundValue(unsigned long const _arg);
     virtual unsigned long const & GetBackgroundValue() const;
     virtual unsigned long const & GetForegroundValue() const;
     virtual void GenerateInputRequestedRegion();
   private:
     itkBinaryMedianImageFilterIUL3IUL3(itkBinaryMedianImageFilterIUL3IUL3 const & arg0);
     void operator=(itkBinaryMedianImageFilterIUL3IUL3 const & arg0);
   protected:
     itkBinaryMedianImageFilterIUL3IUL3();
     ~itkBinaryMedianImageFilterIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkBinaryMedianImageFilterIUL3IUL3_Pointer {
   public:
     itkBinaryMedianImageFilterIUL3IUL3_Pointer();
     itkBinaryMedianImageFilterIUL3IUL3_Pointer(itkBinaryMedianImageFilterIUL3IUL3_Pointer const & p);
     itkBinaryMedianImageFilterIUL3IUL3_Pointer(itkBinaryMedianImageFilterIUL3IUL3 * p);
     ~itkBinaryMedianImageFilterIUL3IUL3_Pointer();
     itkBinaryMedianImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryMedianImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkBinaryMedianImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkBinaryMedianImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkBinaryMedianImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkBinaryMedianImageFilterIUL3IUL3_Pointer const & r) const;
     itkBinaryMedianImageFilterIUL3IUL3_Pointer & operator=(itkBinaryMedianImageFilterIUL3IUL3_Pointer const & r);
     itkBinaryMedianImageFilterIUL3IUL3_Pointer & operator=(itkBinaryMedianImageFilterIUL3IUL3 * r);
     itkBinaryMedianImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryMedianImageFilterIUS2IUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryMedianImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRadius(itkSize2 const _arg);
     virtual itkSize2 const & GetRadius() const;
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual void SetForegroundValue(unsigned short const _arg);
     virtual unsigned short const & GetBackgroundValue() const;
     virtual unsigned short const & GetForegroundValue() const;
     virtual void GenerateInputRequestedRegion();
   private:
     itkBinaryMedianImageFilterIUS2IUS2(itkBinaryMedianImageFilterIUS2IUS2 const & arg0);
     void operator=(itkBinaryMedianImageFilterIUS2IUS2 const & arg0);
   protected:
     itkBinaryMedianImageFilterIUS2IUS2();
     ~itkBinaryMedianImageFilterIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkBinaryMedianImageFilterIUS2IUS2_Pointer {
   public:
     itkBinaryMedianImageFilterIUS2IUS2_Pointer();
     itkBinaryMedianImageFilterIUS2IUS2_Pointer(itkBinaryMedianImageFilterIUS2IUS2_Pointer const & p);
     itkBinaryMedianImageFilterIUS2IUS2_Pointer(itkBinaryMedianImageFilterIUS2IUS2 * p);
     ~itkBinaryMedianImageFilterIUS2IUS2_Pointer();
     itkBinaryMedianImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryMedianImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkBinaryMedianImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkBinaryMedianImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkBinaryMedianImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkBinaryMedianImageFilterIUS2IUS2_Pointer const & r) const;
     itkBinaryMedianImageFilterIUS2IUS2_Pointer & operator=(itkBinaryMedianImageFilterIUS2IUS2_Pointer const & r);
     itkBinaryMedianImageFilterIUS2IUS2_Pointer & operator=(itkBinaryMedianImageFilterIUS2IUS2 * r);
     itkBinaryMedianImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryMedianImageFilterIUS3IUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryMedianImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRadius(itkSize3 const _arg);
     virtual itkSize3 const & GetRadius() const;
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual void SetForegroundValue(unsigned short const _arg);
     virtual unsigned short const & GetBackgroundValue() const;
     virtual unsigned short const & GetForegroundValue() const;
     virtual void GenerateInputRequestedRegion();
   private:
     itkBinaryMedianImageFilterIUS3IUS3(itkBinaryMedianImageFilterIUS3IUS3 const & arg0);
     void operator=(itkBinaryMedianImageFilterIUS3IUS3 const & arg0);
   protected:
     itkBinaryMedianImageFilterIUS3IUS3();
     ~itkBinaryMedianImageFilterIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkBinaryMedianImageFilterIUS3IUS3_Pointer {
   public:
     itkBinaryMedianImageFilterIUS3IUS3_Pointer();
     itkBinaryMedianImageFilterIUS3IUS3_Pointer(itkBinaryMedianImageFilterIUS3IUS3_Pointer const & p);
     itkBinaryMedianImageFilterIUS3IUS3_Pointer(itkBinaryMedianImageFilterIUS3IUS3 * p);
     ~itkBinaryMedianImageFilterIUS3IUS3_Pointer();
     itkBinaryMedianImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryMedianImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkBinaryMedianImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkBinaryMedianImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkBinaryMedianImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkBinaryMedianImageFilterIUS3IUS3_Pointer const & r) const;
     itkBinaryMedianImageFilterIUS3IUS3_Pointer & operator=(itkBinaryMedianImageFilterIUS3IUS3_Pointer const & r);
     itkBinaryMedianImageFilterIUS3IUS3_Pointer & operator=(itkBinaryMedianImageFilterIUS3IUS3 * r);
     itkBinaryMedianImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


