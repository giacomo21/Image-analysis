# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkBayesianClassifierImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkBayesianClassifierImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkBayesianClassifierImageFilterPython
            return _itkBayesianClassifierImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkBayesianClassifierImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkBayesianClassifierImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkBayesianClassifierImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkImageToImageFilterBPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterAPython
def itkBayesianClassifierImageFilterVID3USDD_New():
  return itkBayesianClassifierImageFilterVID3USDD.New()

def itkBayesianClassifierImageFilterVID3USFF_New():
  return itkBayesianClassifierImageFilterVID3USFF.New()

def itkBayesianClassifierImageFilterVID3ULDD_New():
  return itkBayesianClassifierImageFilterVID3ULDD.New()

def itkBayesianClassifierImageFilterVID3ULFF_New():
  return itkBayesianClassifierImageFilterVID3ULFF.New()

def itkBayesianClassifierImageFilterVID3UCDD_New():
  return itkBayesianClassifierImageFilterVID3UCDD.New()

def itkBayesianClassifierImageFilterVID3UCFF_New():
  return itkBayesianClassifierImageFilterVID3UCFF.New()

def itkBayesianClassifierImageFilterVIF3USDD_New():
  return itkBayesianClassifierImageFilterVIF3USDD.New()

def itkBayesianClassifierImageFilterVIF3USFF_New():
  return itkBayesianClassifierImageFilterVIF3USFF.New()

def itkBayesianClassifierImageFilterVIF3ULDD_New():
  return itkBayesianClassifierImageFilterVIF3ULDD.New()

def itkBayesianClassifierImageFilterVIF3ULFF_New():
  return itkBayesianClassifierImageFilterVIF3ULFF.New()

def itkBayesianClassifierImageFilterVIF3UCDD_New():
  return itkBayesianClassifierImageFilterVIF3UCDD.New()

def itkBayesianClassifierImageFilterVIF3UCFF_New():
  return itkBayesianClassifierImageFilterVIF3UCFF.New()

def itkBayesianClassifierImageFilterVIUS3USDD_New():
  return itkBayesianClassifierImageFilterVIUS3USDD.New()

def itkBayesianClassifierImageFilterVIUS3USFF_New():
  return itkBayesianClassifierImageFilterVIUS3USFF.New()

def itkBayesianClassifierImageFilterVIUS3ULDD_New():
  return itkBayesianClassifierImageFilterVIUS3ULDD.New()

def itkBayesianClassifierImageFilterVIUS3ULFF_New():
  return itkBayesianClassifierImageFilterVIUS3ULFF.New()

def itkBayesianClassifierImageFilterVIUS3UCDD_New():
  return itkBayesianClassifierImageFilterVIUS3UCDD.New()

def itkBayesianClassifierImageFilterVIUS3UCFF_New():
  return itkBayesianClassifierImageFilterVIUS3UCFF.New()

def itkBayesianClassifierImageFilterVIUL3USDD_New():
  return itkBayesianClassifierImageFilterVIUL3USDD.New()

def itkBayesianClassifierImageFilterVIUL3USFF_New():
  return itkBayesianClassifierImageFilterVIUL3USFF.New()

def itkBayesianClassifierImageFilterVIUL3ULDD_New():
  return itkBayesianClassifierImageFilterVIUL3ULDD.New()

def itkBayesianClassifierImageFilterVIUL3ULFF_New():
  return itkBayesianClassifierImageFilterVIUL3ULFF.New()

def itkBayesianClassifierImageFilterVIUL3UCDD_New():
  return itkBayesianClassifierImageFilterVIUL3UCDD.New()

def itkBayesianClassifierImageFilterVIUL3UCFF_New():
  return itkBayesianClassifierImageFilterVIUL3UCFF.New()

def itkBayesianClassifierImageFilterVIUC3USDD_New():
  return itkBayesianClassifierImageFilterVIUC3USDD.New()

def itkBayesianClassifierImageFilterVIUC3USFF_New():
  return itkBayesianClassifierImageFilterVIUC3USFF.New()

def itkBayesianClassifierImageFilterVIUC3ULDD_New():
  return itkBayesianClassifierImageFilterVIUC3ULDD.New()

def itkBayesianClassifierImageFilterVIUC3ULFF_New():
  return itkBayesianClassifierImageFilterVIUC3ULFF.New()

def itkBayesianClassifierImageFilterVIUC3UCDD_New():
  return itkBayesianClassifierImageFilterVIUC3UCDD.New()

def itkBayesianClassifierImageFilterVIUC3UCFF_New():
  return itkBayesianClassifierImageFilterVIUC3UCFF.New()

def itkBayesianClassifierImageFilterVID2USDD_New():
  return itkBayesianClassifierImageFilterVID2USDD.New()

def itkBayesianClassifierImageFilterVID2USFF_New():
  return itkBayesianClassifierImageFilterVID2USFF.New()

def itkBayesianClassifierImageFilterVID2ULDD_New():
  return itkBayesianClassifierImageFilterVID2ULDD.New()

def itkBayesianClassifierImageFilterVID2ULFF_New():
  return itkBayesianClassifierImageFilterVID2ULFF.New()

def itkBayesianClassifierImageFilterVID2UCDD_New():
  return itkBayesianClassifierImageFilterVID2UCDD.New()

def itkBayesianClassifierImageFilterVID2UCFF_New():
  return itkBayesianClassifierImageFilterVID2UCFF.New()

def itkBayesianClassifierImageFilterVIF2USDD_New():
  return itkBayesianClassifierImageFilterVIF2USDD.New()

def itkBayesianClassifierImageFilterVIF2USFF_New():
  return itkBayesianClassifierImageFilterVIF2USFF.New()

def itkBayesianClassifierImageFilterVIF2ULDD_New():
  return itkBayesianClassifierImageFilterVIF2ULDD.New()

def itkBayesianClassifierImageFilterVIF2ULFF_New():
  return itkBayesianClassifierImageFilterVIF2ULFF.New()

def itkBayesianClassifierImageFilterVIF2UCDD_New():
  return itkBayesianClassifierImageFilterVIF2UCDD.New()

def itkBayesianClassifierImageFilterVIF2UCFF_New():
  return itkBayesianClassifierImageFilterVIF2UCFF.New()

def itkBayesianClassifierImageFilterVIUS2USDD_New():
  return itkBayesianClassifierImageFilterVIUS2USDD.New()

def itkBayesianClassifierImageFilterVIUS2USFF_New():
  return itkBayesianClassifierImageFilterVIUS2USFF.New()

def itkBayesianClassifierImageFilterVIUS2ULDD_New():
  return itkBayesianClassifierImageFilterVIUS2ULDD.New()

def itkBayesianClassifierImageFilterVIUS2ULFF_New():
  return itkBayesianClassifierImageFilterVIUS2ULFF.New()

def itkBayesianClassifierImageFilterVIUS2UCDD_New():
  return itkBayesianClassifierImageFilterVIUS2UCDD.New()

def itkBayesianClassifierImageFilterVIUS2UCFF_New():
  return itkBayesianClassifierImageFilterVIUS2UCFF.New()

def itkBayesianClassifierImageFilterVIUL2USDD_New():
  return itkBayesianClassifierImageFilterVIUL2USDD.New()

def itkBayesianClassifierImageFilterVIUL2USFF_New():
  return itkBayesianClassifierImageFilterVIUL2USFF.New()

def itkBayesianClassifierImageFilterVIUL2ULDD_New():
  return itkBayesianClassifierImageFilterVIUL2ULDD.New()

def itkBayesianClassifierImageFilterVIUL2ULFF_New():
  return itkBayesianClassifierImageFilterVIUL2ULFF.New()

def itkBayesianClassifierImageFilterVIUL2UCDD_New():
  return itkBayesianClassifierImageFilterVIUL2UCDD.New()

def itkBayesianClassifierImageFilterVIUL2UCFF_New():
  return itkBayesianClassifierImageFilterVIUL2UCFF.New()

def itkBayesianClassifierImageFilterVIUC2USDD_New():
  return itkBayesianClassifierImageFilterVIUC2USDD.New()

def itkBayesianClassifierImageFilterVIUC2USFF_New():
  return itkBayesianClassifierImageFilterVIUC2USFF.New()

def itkBayesianClassifierImageFilterVIUC2ULDD_New():
  return itkBayesianClassifierImageFilterVIUC2ULDD.New()

def itkBayesianClassifierImageFilterVIUC2ULFF_New():
  return itkBayesianClassifierImageFilterVIUC2ULFF.New()

def itkBayesianClassifierImageFilterVIUC2UCDD_New():
  return itkBayesianClassifierImageFilterVIUC2UCDD.New()

def itkBayesianClassifierImageFilterVIUC2UCFF_New():
  return itkBayesianClassifierImageFilterVIUC2UCFF.New()

class itkBayesianClassifierImageFilterVID2UCDD(itkImageToImageFilterBPython.itkImageToImageFilterVID2IUC2):
    """Proxy of C++ itkBayesianClassifierImageFilterVID2UCDD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCDD_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCDD_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCDD_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCDD_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCDD_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCDD_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCDD_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCDD_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCDD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterID2ID2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCDD_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCDD_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageD2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCDD_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCDD_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCDD_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVID2UCDD
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVID2UCDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCDD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVID2UCDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCDD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVID2UCDD
        
        Create a new object of the class itkBayesianClassifierImageFilterVID2UCDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVID2UCDD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVID2UCDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVID2UCDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVID2UCDD.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCDD_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVID2UCDD)
itkBayesianClassifierImageFilterVID2UCDD.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCDD_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVID2UCDD)
itkBayesianClassifierImageFilterVID2UCDD.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCDD_SetPriors,None,itkBayesianClassifierImageFilterVID2UCDD)
itkBayesianClassifierImageFilterVID2UCDD.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCDD_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVID2UCDD)
itkBayesianClassifierImageFilterVID2UCDD.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCDD_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVID2UCDD)
itkBayesianClassifierImageFilterVID2UCDD.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCDD_GetPointer,None,itkBayesianClassifierImageFilterVID2UCDD)
itkBayesianClassifierImageFilterVID2UCDD_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCDD_swigregister
itkBayesianClassifierImageFilterVID2UCDD_swigregister(itkBayesianClassifierImageFilterVID2UCDD)

def itkBayesianClassifierImageFilterVID2UCDD___New_orig__():
  """itkBayesianClassifierImageFilterVID2UCDD___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCDD___New_orig__()

def itkBayesianClassifierImageFilterVID2UCDD_cast(*args):
  """itkBayesianClassifierImageFilterVID2UCDD_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVID2UCDD"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCDD_cast(*args)

class itkBayesianClassifierImageFilterVID2UCFF(itkImageToImageFilterBPython.itkImageToImageFilterVID2IUC2):
    """Proxy of C++ itkBayesianClassifierImageFilterVID2UCFF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCFF_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCFF_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterIF2IF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCFF_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCFF_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCFF_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCFF_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCFF_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVID2UCFF
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVID2UCFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCFF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVID2UCFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCFF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVID2UCFF
        
        Create a new object of the class itkBayesianClassifierImageFilterVID2UCFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVID2UCFF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVID2UCFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVID2UCFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVID2UCFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCFF_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVID2UCFF)
itkBayesianClassifierImageFilterVID2UCFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCFF_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVID2UCFF)
itkBayesianClassifierImageFilterVID2UCFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCFF_SetPriors,None,itkBayesianClassifierImageFilterVID2UCFF)
itkBayesianClassifierImageFilterVID2UCFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCFF_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVID2UCFF)
itkBayesianClassifierImageFilterVID2UCFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCFF_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVID2UCFF)
itkBayesianClassifierImageFilterVID2UCFF.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCFF_GetPointer,None,itkBayesianClassifierImageFilterVID2UCFF)
itkBayesianClassifierImageFilterVID2UCFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCFF_swigregister
itkBayesianClassifierImageFilterVID2UCFF_swigregister(itkBayesianClassifierImageFilterVID2UCFF)

def itkBayesianClassifierImageFilterVID2UCFF___New_orig__():
  """itkBayesianClassifierImageFilterVID2UCFF___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCFF___New_orig__()

def itkBayesianClassifierImageFilterVID2UCFF_cast(*args):
  """itkBayesianClassifierImageFilterVID2UCFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVID2UCFF"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2UCFF_cast(*args)

class itkBayesianClassifierImageFilterVID2ULDD(itkImageToImageFilterBPython.itkImageToImageFilterVID2IUL2):
    """Proxy of C++ itkBayesianClassifierImageFilterVID2ULDD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULDD_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULDD_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULDD_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULDD_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULDD_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULDD_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULDD_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULDD_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULDD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterID2ID2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULDD_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULDD_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageD2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULDD_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULDD_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULDD_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVID2ULDD
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVID2ULDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULDD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVID2ULDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULDD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVID2ULDD
        
        Create a new object of the class itkBayesianClassifierImageFilterVID2ULDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVID2ULDD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVID2ULDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVID2ULDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVID2ULDD.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULDD_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVID2ULDD)
itkBayesianClassifierImageFilterVID2ULDD.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULDD_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVID2ULDD)
itkBayesianClassifierImageFilterVID2ULDD.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULDD_SetPriors,None,itkBayesianClassifierImageFilterVID2ULDD)
itkBayesianClassifierImageFilterVID2ULDD.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULDD_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVID2ULDD)
itkBayesianClassifierImageFilterVID2ULDD.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULDD_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVID2ULDD)
itkBayesianClassifierImageFilterVID2ULDD.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULDD_GetPointer,None,itkBayesianClassifierImageFilterVID2ULDD)
itkBayesianClassifierImageFilterVID2ULDD_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULDD_swigregister
itkBayesianClassifierImageFilterVID2ULDD_swigregister(itkBayesianClassifierImageFilterVID2ULDD)

def itkBayesianClassifierImageFilterVID2ULDD___New_orig__():
  """itkBayesianClassifierImageFilterVID2ULDD___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULDD___New_orig__()

def itkBayesianClassifierImageFilterVID2ULDD_cast(*args):
  """itkBayesianClassifierImageFilterVID2ULDD_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVID2ULDD"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULDD_cast(*args)

class itkBayesianClassifierImageFilterVID2ULFF(itkImageToImageFilterBPython.itkImageToImageFilterVID2IUL2):
    """Proxy of C++ itkBayesianClassifierImageFilterVID2ULFF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULFF_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULFF_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterIF2IF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULFF_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULFF_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULFF_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULFF_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULFF_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVID2ULFF
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVID2ULFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULFF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVID2ULFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULFF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVID2ULFF
        
        Create a new object of the class itkBayesianClassifierImageFilterVID2ULFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVID2ULFF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVID2ULFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVID2ULFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVID2ULFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULFF_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVID2ULFF)
itkBayesianClassifierImageFilterVID2ULFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULFF_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVID2ULFF)
itkBayesianClassifierImageFilterVID2ULFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULFF_SetPriors,None,itkBayesianClassifierImageFilterVID2ULFF)
itkBayesianClassifierImageFilterVID2ULFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULFF_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVID2ULFF)
itkBayesianClassifierImageFilterVID2ULFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULFF_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVID2ULFF)
itkBayesianClassifierImageFilterVID2ULFF.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULFF_GetPointer,None,itkBayesianClassifierImageFilterVID2ULFF)
itkBayesianClassifierImageFilterVID2ULFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULFF_swigregister
itkBayesianClassifierImageFilterVID2ULFF_swigregister(itkBayesianClassifierImageFilterVID2ULFF)

def itkBayesianClassifierImageFilterVID2ULFF___New_orig__():
  """itkBayesianClassifierImageFilterVID2ULFF___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULFF___New_orig__()

def itkBayesianClassifierImageFilterVID2ULFF_cast(*args):
  """itkBayesianClassifierImageFilterVID2ULFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVID2ULFF"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2ULFF_cast(*args)

class itkBayesianClassifierImageFilterVID2USDD(itkImageToImageFilterBPython.itkImageToImageFilterVID2IUS2):
    """Proxy of C++ itkBayesianClassifierImageFilterVID2USDD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USDD_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USDD_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USDD_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USDD_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USDD_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USDD_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USDD_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USDD_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USDD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterID2ID2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USDD_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USDD_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageD2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USDD_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USDD_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USDD_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVID2USDD
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVID2USDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USDD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVID2USDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USDD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVID2USDD
        
        Create a new object of the class itkBayesianClassifierImageFilterVID2USDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVID2USDD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVID2USDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVID2USDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVID2USDD.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USDD_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVID2USDD)
itkBayesianClassifierImageFilterVID2USDD.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USDD_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVID2USDD)
itkBayesianClassifierImageFilterVID2USDD.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USDD_SetPriors,None,itkBayesianClassifierImageFilterVID2USDD)
itkBayesianClassifierImageFilterVID2USDD.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USDD_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVID2USDD)
itkBayesianClassifierImageFilterVID2USDD.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USDD_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVID2USDD)
itkBayesianClassifierImageFilterVID2USDD.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USDD_GetPointer,None,itkBayesianClassifierImageFilterVID2USDD)
itkBayesianClassifierImageFilterVID2USDD_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USDD_swigregister
itkBayesianClassifierImageFilterVID2USDD_swigregister(itkBayesianClassifierImageFilterVID2USDD)

def itkBayesianClassifierImageFilterVID2USDD___New_orig__():
  """itkBayesianClassifierImageFilterVID2USDD___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USDD___New_orig__()

def itkBayesianClassifierImageFilterVID2USDD_cast(*args):
  """itkBayesianClassifierImageFilterVID2USDD_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVID2USDD"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USDD_cast(*args)

class itkBayesianClassifierImageFilterVID2USFF(itkImageToImageFilterBPython.itkImageToImageFilterVID2IUS2):
    """Proxy of C++ itkBayesianClassifierImageFilterVID2USFF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USFF_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USFF_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterIF2IF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USFF_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USFF_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USFF_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USFF_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USFF_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVID2USFF
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVID2USFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USFF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVID2USFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USFF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVID2USFF
        
        Create a new object of the class itkBayesianClassifierImageFilterVID2USFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVID2USFF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVID2USFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVID2USFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVID2USFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USFF_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVID2USFF)
itkBayesianClassifierImageFilterVID2USFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USFF_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVID2USFF)
itkBayesianClassifierImageFilterVID2USFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USFF_SetPriors,None,itkBayesianClassifierImageFilterVID2USFF)
itkBayesianClassifierImageFilterVID2USFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USFF_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVID2USFF)
itkBayesianClassifierImageFilterVID2USFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USFF_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVID2USFF)
itkBayesianClassifierImageFilterVID2USFF.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USFF_GetPointer,None,itkBayesianClassifierImageFilterVID2USFF)
itkBayesianClassifierImageFilterVID2USFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USFF_swigregister
itkBayesianClassifierImageFilterVID2USFF_swigregister(itkBayesianClassifierImageFilterVID2USFF)

def itkBayesianClassifierImageFilterVID2USFF___New_orig__():
  """itkBayesianClassifierImageFilterVID2USFF___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USFF___New_orig__()

def itkBayesianClassifierImageFilterVID2USFF_cast(*args):
  """itkBayesianClassifierImageFilterVID2USFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVID2USFF"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID2USFF_cast(*args)

class itkBayesianClassifierImageFilterVID3UCDD(itkImageToImageFilterBPython.itkImageToImageFilterVID3IUC3):
    """Proxy of C++ itkBayesianClassifierImageFilterVID3UCDD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCDD_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCDD_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCDD_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCDD_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCDD_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCDD_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCDD_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCDD_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCDD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterID3ID3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCDD_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCDD_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageD3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCDD_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCDD_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCDD_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVID3UCDD
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVID3UCDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCDD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVID3UCDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCDD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVID3UCDD
        
        Create a new object of the class itkBayesianClassifierImageFilterVID3UCDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVID3UCDD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVID3UCDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVID3UCDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVID3UCDD.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCDD_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVID3UCDD)
itkBayesianClassifierImageFilterVID3UCDD.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCDD_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVID3UCDD)
itkBayesianClassifierImageFilterVID3UCDD.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCDD_SetPriors,None,itkBayesianClassifierImageFilterVID3UCDD)
itkBayesianClassifierImageFilterVID3UCDD.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCDD_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVID3UCDD)
itkBayesianClassifierImageFilterVID3UCDD.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCDD_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVID3UCDD)
itkBayesianClassifierImageFilterVID3UCDD.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCDD_GetPointer,None,itkBayesianClassifierImageFilterVID3UCDD)
itkBayesianClassifierImageFilterVID3UCDD_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCDD_swigregister
itkBayesianClassifierImageFilterVID3UCDD_swigregister(itkBayesianClassifierImageFilterVID3UCDD)

def itkBayesianClassifierImageFilterVID3UCDD___New_orig__():
  """itkBayesianClassifierImageFilterVID3UCDD___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCDD___New_orig__()

def itkBayesianClassifierImageFilterVID3UCDD_cast(*args):
  """itkBayesianClassifierImageFilterVID3UCDD_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVID3UCDD"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCDD_cast(*args)

class itkBayesianClassifierImageFilterVID3UCFF(itkImageToImageFilterBPython.itkImageToImageFilterVID3IUC3):
    """Proxy of C++ itkBayesianClassifierImageFilterVID3UCFF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCFF_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCFF_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterIF3IF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCFF_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCFF_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCFF_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCFF_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCFF_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVID3UCFF
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVID3UCFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCFF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVID3UCFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCFF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVID3UCFF
        
        Create a new object of the class itkBayesianClassifierImageFilterVID3UCFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVID3UCFF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVID3UCFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVID3UCFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVID3UCFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCFF_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVID3UCFF)
itkBayesianClassifierImageFilterVID3UCFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCFF_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVID3UCFF)
itkBayesianClassifierImageFilterVID3UCFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCFF_SetPriors,None,itkBayesianClassifierImageFilterVID3UCFF)
itkBayesianClassifierImageFilterVID3UCFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCFF_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVID3UCFF)
itkBayesianClassifierImageFilterVID3UCFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCFF_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVID3UCFF)
itkBayesianClassifierImageFilterVID3UCFF.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCFF_GetPointer,None,itkBayesianClassifierImageFilterVID3UCFF)
itkBayesianClassifierImageFilterVID3UCFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCFF_swigregister
itkBayesianClassifierImageFilterVID3UCFF_swigregister(itkBayesianClassifierImageFilterVID3UCFF)

def itkBayesianClassifierImageFilterVID3UCFF___New_orig__():
  """itkBayesianClassifierImageFilterVID3UCFF___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCFF___New_orig__()

def itkBayesianClassifierImageFilterVID3UCFF_cast(*args):
  """itkBayesianClassifierImageFilterVID3UCFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVID3UCFF"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3UCFF_cast(*args)

class itkBayesianClassifierImageFilterVID3ULDD(itkImageToImageFilterBPython.itkImageToImageFilterVID3IUL3):
    """Proxy of C++ itkBayesianClassifierImageFilterVID3ULDD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULDD_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULDD_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULDD_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULDD_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULDD_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULDD_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULDD_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULDD_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULDD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterID3ID3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULDD_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULDD_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageD3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULDD_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULDD_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULDD_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVID3ULDD
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVID3ULDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULDD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVID3ULDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULDD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVID3ULDD
        
        Create a new object of the class itkBayesianClassifierImageFilterVID3ULDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVID3ULDD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVID3ULDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVID3ULDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVID3ULDD.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULDD_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVID3ULDD)
itkBayesianClassifierImageFilterVID3ULDD.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULDD_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVID3ULDD)
itkBayesianClassifierImageFilterVID3ULDD.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULDD_SetPriors,None,itkBayesianClassifierImageFilterVID3ULDD)
itkBayesianClassifierImageFilterVID3ULDD.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULDD_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVID3ULDD)
itkBayesianClassifierImageFilterVID3ULDD.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULDD_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVID3ULDD)
itkBayesianClassifierImageFilterVID3ULDD.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULDD_GetPointer,None,itkBayesianClassifierImageFilterVID3ULDD)
itkBayesianClassifierImageFilterVID3ULDD_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULDD_swigregister
itkBayesianClassifierImageFilterVID3ULDD_swigregister(itkBayesianClassifierImageFilterVID3ULDD)

def itkBayesianClassifierImageFilterVID3ULDD___New_orig__():
  """itkBayesianClassifierImageFilterVID3ULDD___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULDD___New_orig__()

def itkBayesianClassifierImageFilterVID3ULDD_cast(*args):
  """itkBayesianClassifierImageFilterVID3ULDD_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVID3ULDD"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULDD_cast(*args)

class itkBayesianClassifierImageFilterVID3ULFF(itkImageToImageFilterBPython.itkImageToImageFilterVID3IUL3):
    """Proxy of C++ itkBayesianClassifierImageFilterVID3ULFF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULFF_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULFF_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterIF3IF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULFF_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULFF_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULFF_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULFF_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULFF_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVID3ULFF
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVID3ULFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULFF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVID3ULFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULFF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVID3ULFF
        
        Create a new object of the class itkBayesianClassifierImageFilterVID3ULFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVID3ULFF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVID3ULFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVID3ULFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVID3ULFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULFF_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVID3ULFF)
itkBayesianClassifierImageFilterVID3ULFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULFF_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVID3ULFF)
itkBayesianClassifierImageFilterVID3ULFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULFF_SetPriors,None,itkBayesianClassifierImageFilterVID3ULFF)
itkBayesianClassifierImageFilterVID3ULFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULFF_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVID3ULFF)
itkBayesianClassifierImageFilterVID3ULFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULFF_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVID3ULFF)
itkBayesianClassifierImageFilterVID3ULFF.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULFF_GetPointer,None,itkBayesianClassifierImageFilterVID3ULFF)
itkBayesianClassifierImageFilterVID3ULFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULFF_swigregister
itkBayesianClassifierImageFilterVID3ULFF_swigregister(itkBayesianClassifierImageFilterVID3ULFF)

def itkBayesianClassifierImageFilterVID3ULFF___New_orig__():
  """itkBayesianClassifierImageFilterVID3ULFF___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULFF___New_orig__()

def itkBayesianClassifierImageFilterVID3ULFF_cast(*args):
  """itkBayesianClassifierImageFilterVID3ULFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVID3ULFF"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3ULFF_cast(*args)

class itkBayesianClassifierImageFilterVID3USDD(itkImageToImageFilterBPython.itkImageToImageFilterVID3IUS3):
    """Proxy of C++ itkBayesianClassifierImageFilterVID3USDD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USDD_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USDD_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USDD_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USDD_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USDD_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USDD_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USDD_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USDD_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USDD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterID3ID3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USDD_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USDD_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageD3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USDD_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USDD_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USDD_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVID3USDD
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVID3USDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USDD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVID3USDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USDD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVID3USDD
        
        Create a new object of the class itkBayesianClassifierImageFilterVID3USDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVID3USDD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVID3USDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVID3USDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVID3USDD.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USDD_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVID3USDD)
itkBayesianClassifierImageFilterVID3USDD.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USDD_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVID3USDD)
itkBayesianClassifierImageFilterVID3USDD.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USDD_SetPriors,None,itkBayesianClassifierImageFilterVID3USDD)
itkBayesianClassifierImageFilterVID3USDD.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USDD_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVID3USDD)
itkBayesianClassifierImageFilterVID3USDD.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USDD_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVID3USDD)
itkBayesianClassifierImageFilterVID3USDD.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USDD_GetPointer,None,itkBayesianClassifierImageFilterVID3USDD)
itkBayesianClassifierImageFilterVID3USDD_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USDD_swigregister
itkBayesianClassifierImageFilterVID3USDD_swigregister(itkBayesianClassifierImageFilterVID3USDD)

def itkBayesianClassifierImageFilterVID3USDD___New_orig__():
  """itkBayesianClassifierImageFilterVID3USDD___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USDD___New_orig__()

def itkBayesianClassifierImageFilterVID3USDD_cast(*args):
  """itkBayesianClassifierImageFilterVID3USDD_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVID3USDD"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USDD_cast(*args)

class itkBayesianClassifierImageFilterVID3USFF(itkImageToImageFilterBPython.itkImageToImageFilterVID3IUS3):
    """Proxy of C++ itkBayesianClassifierImageFilterVID3USFF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USFF_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USFF_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterIF3IF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USFF_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USFF_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USFF_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USFF_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USFF_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVID3USFF
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVID3USFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USFF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVID3USFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USFF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVID3USFF
        
        Create a new object of the class itkBayesianClassifierImageFilterVID3USFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVID3USFF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVID3USFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVID3USFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVID3USFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USFF_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVID3USFF)
itkBayesianClassifierImageFilterVID3USFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USFF_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVID3USFF)
itkBayesianClassifierImageFilterVID3USFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USFF_SetPriors,None,itkBayesianClassifierImageFilterVID3USFF)
itkBayesianClassifierImageFilterVID3USFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USFF_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVID3USFF)
itkBayesianClassifierImageFilterVID3USFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USFF_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVID3USFF)
itkBayesianClassifierImageFilterVID3USFF.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USFF_GetPointer,None,itkBayesianClassifierImageFilterVID3USFF)
itkBayesianClassifierImageFilterVID3USFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USFF_swigregister
itkBayesianClassifierImageFilterVID3USFF_swigregister(itkBayesianClassifierImageFilterVID3USFF)

def itkBayesianClassifierImageFilterVID3USFF___New_orig__():
  """itkBayesianClassifierImageFilterVID3USFF___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USFF___New_orig__()

def itkBayesianClassifierImageFilterVID3USFF_cast(*args):
  """itkBayesianClassifierImageFilterVID3USFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVID3USFF"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVID3USFF_cast(*args)

class itkBayesianClassifierImageFilterVIF2UCDD(itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUC2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIF2UCDD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCDD_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCDD_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCDD_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCDD_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCDD_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCDD_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCDD_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCDD_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCDD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterID2ID2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCDD_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCDD_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageD2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCDD_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCDD_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCDD_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIF2UCDD
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF2UCDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCDD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIF2UCDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCDD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIF2UCDD
        
        Create a new object of the class itkBayesianClassifierImageFilterVIF2UCDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIF2UCDD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIF2UCDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIF2UCDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIF2UCDD.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCDD_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIF2UCDD)
itkBayesianClassifierImageFilterVIF2UCDD.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCDD_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIF2UCDD)
itkBayesianClassifierImageFilterVIF2UCDD.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCDD_SetPriors,None,itkBayesianClassifierImageFilterVIF2UCDD)
itkBayesianClassifierImageFilterVIF2UCDD.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCDD_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIF2UCDD)
itkBayesianClassifierImageFilterVIF2UCDD.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCDD_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIF2UCDD)
itkBayesianClassifierImageFilterVIF2UCDD.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCDD_GetPointer,None,itkBayesianClassifierImageFilterVIF2UCDD)
itkBayesianClassifierImageFilterVIF2UCDD_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCDD_swigregister
itkBayesianClassifierImageFilterVIF2UCDD_swigregister(itkBayesianClassifierImageFilterVIF2UCDD)

def itkBayesianClassifierImageFilterVIF2UCDD___New_orig__():
  """itkBayesianClassifierImageFilterVIF2UCDD___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCDD___New_orig__()

def itkBayesianClassifierImageFilterVIF2UCDD_cast(*args):
  """itkBayesianClassifierImageFilterVIF2UCDD_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF2UCDD"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCDD_cast(*args)

class itkBayesianClassifierImageFilterVIF2UCFF(itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUC2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIF2UCFF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterIF2IF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIF2UCFF
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF2UCFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIF2UCFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIF2UCFF
        
        Create a new object of the class itkBayesianClassifierImageFilterVIF2UCFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIF2UCFF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIF2UCFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIF2UCFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIF2UCFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIF2UCFF)
itkBayesianClassifierImageFilterVIF2UCFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIF2UCFF)
itkBayesianClassifierImageFilterVIF2UCFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_SetPriors,None,itkBayesianClassifierImageFilterVIF2UCFF)
itkBayesianClassifierImageFilterVIF2UCFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIF2UCFF)
itkBayesianClassifierImageFilterVIF2UCFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIF2UCFF)
itkBayesianClassifierImageFilterVIF2UCFF.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_GetPointer,None,itkBayesianClassifierImageFilterVIF2UCFF)
itkBayesianClassifierImageFilterVIF2UCFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_swigregister
itkBayesianClassifierImageFilterVIF2UCFF_swigregister(itkBayesianClassifierImageFilterVIF2UCFF)

def itkBayesianClassifierImageFilterVIF2UCFF___New_orig__():
  """itkBayesianClassifierImageFilterVIF2UCFF___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF___New_orig__()

def itkBayesianClassifierImageFilterVIF2UCFF_cast(*args):
  """itkBayesianClassifierImageFilterVIF2UCFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF2UCFF"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2UCFF_cast(*args)

class itkBayesianClassifierImageFilterVIF2ULDD(itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUL2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIF2ULDD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULDD_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULDD_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULDD_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULDD_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULDD_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULDD_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULDD_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULDD_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULDD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterID2ID2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULDD_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULDD_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageD2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULDD_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULDD_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULDD_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIF2ULDD
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF2ULDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULDD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIF2ULDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULDD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIF2ULDD
        
        Create a new object of the class itkBayesianClassifierImageFilterVIF2ULDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIF2ULDD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIF2ULDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIF2ULDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIF2ULDD.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULDD_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIF2ULDD)
itkBayesianClassifierImageFilterVIF2ULDD.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULDD_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIF2ULDD)
itkBayesianClassifierImageFilterVIF2ULDD.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULDD_SetPriors,None,itkBayesianClassifierImageFilterVIF2ULDD)
itkBayesianClassifierImageFilterVIF2ULDD.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULDD_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIF2ULDD)
itkBayesianClassifierImageFilterVIF2ULDD.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULDD_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIF2ULDD)
itkBayesianClassifierImageFilterVIF2ULDD.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULDD_GetPointer,None,itkBayesianClassifierImageFilterVIF2ULDD)
itkBayesianClassifierImageFilterVIF2ULDD_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULDD_swigregister
itkBayesianClassifierImageFilterVIF2ULDD_swigregister(itkBayesianClassifierImageFilterVIF2ULDD)

def itkBayesianClassifierImageFilterVIF2ULDD___New_orig__():
  """itkBayesianClassifierImageFilterVIF2ULDD___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULDD___New_orig__()

def itkBayesianClassifierImageFilterVIF2ULDD_cast(*args):
  """itkBayesianClassifierImageFilterVIF2ULDD_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF2ULDD"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULDD_cast(*args)

class itkBayesianClassifierImageFilterVIF2ULFF(itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUL2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIF2ULFF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULFF_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULFF_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterIF2IF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULFF_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULFF_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULFF_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULFF_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULFF_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIF2ULFF
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF2ULFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULFF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIF2ULFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULFF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIF2ULFF
        
        Create a new object of the class itkBayesianClassifierImageFilterVIF2ULFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIF2ULFF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIF2ULFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIF2ULFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIF2ULFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULFF_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIF2ULFF)
itkBayesianClassifierImageFilterVIF2ULFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULFF_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIF2ULFF)
itkBayesianClassifierImageFilterVIF2ULFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULFF_SetPriors,None,itkBayesianClassifierImageFilterVIF2ULFF)
itkBayesianClassifierImageFilterVIF2ULFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULFF_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIF2ULFF)
itkBayesianClassifierImageFilterVIF2ULFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULFF_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIF2ULFF)
itkBayesianClassifierImageFilterVIF2ULFF.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULFF_GetPointer,None,itkBayesianClassifierImageFilterVIF2ULFF)
itkBayesianClassifierImageFilterVIF2ULFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULFF_swigregister
itkBayesianClassifierImageFilterVIF2ULFF_swigregister(itkBayesianClassifierImageFilterVIF2ULFF)

def itkBayesianClassifierImageFilterVIF2ULFF___New_orig__():
  """itkBayesianClassifierImageFilterVIF2ULFF___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULFF___New_orig__()

def itkBayesianClassifierImageFilterVIF2ULFF_cast(*args):
  """itkBayesianClassifierImageFilterVIF2ULFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF2ULFF"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2ULFF_cast(*args)

class itkBayesianClassifierImageFilterVIF2USDD(itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUS2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIF2USDD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USDD_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USDD_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USDD_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USDD_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USDD_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USDD_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USDD_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USDD_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USDD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterID2ID2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USDD_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USDD_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageD2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USDD_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USDD_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USDD_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIF2USDD
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF2USDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USDD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIF2USDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USDD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIF2USDD
        
        Create a new object of the class itkBayesianClassifierImageFilterVIF2USDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIF2USDD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIF2USDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIF2USDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIF2USDD.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USDD_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIF2USDD)
itkBayesianClassifierImageFilterVIF2USDD.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USDD_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIF2USDD)
itkBayesianClassifierImageFilterVIF2USDD.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USDD_SetPriors,None,itkBayesianClassifierImageFilterVIF2USDD)
itkBayesianClassifierImageFilterVIF2USDD.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USDD_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIF2USDD)
itkBayesianClassifierImageFilterVIF2USDD.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USDD_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIF2USDD)
itkBayesianClassifierImageFilterVIF2USDD.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USDD_GetPointer,None,itkBayesianClassifierImageFilterVIF2USDD)
itkBayesianClassifierImageFilterVIF2USDD_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USDD_swigregister
itkBayesianClassifierImageFilterVIF2USDD_swigregister(itkBayesianClassifierImageFilterVIF2USDD)

def itkBayesianClassifierImageFilterVIF2USDD___New_orig__():
  """itkBayesianClassifierImageFilterVIF2USDD___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USDD___New_orig__()

def itkBayesianClassifierImageFilterVIF2USDD_cast(*args):
  """itkBayesianClassifierImageFilterVIF2USDD_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF2USDD"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USDD_cast(*args)

class itkBayesianClassifierImageFilterVIF2USFF(itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUS2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIF2USFF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterIF2IF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIF2USFF
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF2USFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIF2USFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIF2USFF
        
        Create a new object of the class itkBayesianClassifierImageFilterVIF2USFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIF2USFF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIF2USFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIF2USFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIF2USFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIF2USFF)
itkBayesianClassifierImageFilterVIF2USFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIF2USFF)
itkBayesianClassifierImageFilterVIF2USFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_SetPriors,None,itkBayesianClassifierImageFilterVIF2USFF)
itkBayesianClassifierImageFilterVIF2USFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIF2USFF)
itkBayesianClassifierImageFilterVIF2USFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIF2USFF)
itkBayesianClassifierImageFilterVIF2USFF.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_GetPointer,None,itkBayesianClassifierImageFilterVIF2USFF)
itkBayesianClassifierImageFilterVIF2USFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_swigregister
itkBayesianClassifierImageFilterVIF2USFF_swigregister(itkBayesianClassifierImageFilterVIF2USFF)

def itkBayesianClassifierImageFilterVIF2USFF___New_orig__():
  """itkBayesianClassifierImageFilterVIF2USFF___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF___New_orig__()

def itkBayesianClassifierImageFilterVIF2USFF_cast(*args):
  """itkBayesianClassifierImageFilterVIF2USFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF2USFF"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF2USFF_cast(*args)

class itkBayesianClassifierImageFilterVIF3UCDD(itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUC3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIF3UCDD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCDD_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCDD_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCDD_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCDD_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCDD_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCDD_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCDD_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCDD_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCDD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterID3ID3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCDD_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCDD_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageD3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCDD_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCDD_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCDD_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIF3UCDD
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF3UCDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCDD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIF3UCDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCDD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIF3UCDD
        
        Create a new object of the class itkBayesianClassifierImageFilterVIF3UCDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIF3UCDD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIF3UCDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIF3UCDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIF3UCDD.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCDD_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIF3UCDD)
itkBayesianClassifierImageFilterVIF3UCDD.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCDD_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIF3UCDD)
itkBayesianClassifierImageFilterVIF3UCDD.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCDD_SetPriors,None,itkBayesianClassifierImageFilterVIF3UCDD)
itkBayesianClassifierImageFilterVIF3UCDD.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCDD_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIF3UCDD)
itkBayesianClassifierImageFilterVIF3UCDD.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCDD_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIF3UCDD)
itkBayesianClassifierImageFilterVIF3UCDD.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCDD_GetPointer,None,itkBayesianClassifierImageFilterVIF3UCDD)
itkBayesianClassifierImageFilterVIF3UCDD_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCDD_swigregister
itkBayesianClassifierImageFilterVIF3UCDD_swigregister(itkBayesianClassifierImageFilterVIF3UCDD)

def itkBayesianClassifierImageFilterVIF3UCDD___New_orig__():
  """itkBayesianClassifierImageFilterVIF3UCDD___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCDD___New_orig__()

def itkBayesianClassifierImageFilterVIF3UCDD_cast(*args):
  """itkBayesianClassifierImageFilterVIF3UCDD_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF3UCDD"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCDD_cast(*args)

class itkBayesianClassifierImageFilterVIF3UCFF(itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUC3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIF3UCFF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterIF3IF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIF3UCFF
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF3UCFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIF3UCFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIF3UCFF
        
        Create a new object of the class itkBayesianClassifierImageFilterVIF3UCFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIF3UCFF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIF3UCFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIF3UCFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIF3UCFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIF3UCFF)
itkBayesianClassifierImageFilterVIF3UCFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIF3UCFF)
itkBayesianClassifierImageFilterVIF3UCFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_SetPriors,None,itkBayesianClassifierImageFilterVIF3UCFF)
itkBayesianClassifierImageFilterVIF3UCFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIF3UCFF)
itkBayesianClassifierImageFilterVIF3UCFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIF3UCFF)
itkBayesianClassifierImageFilterVIF3UCFF.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_GetPointer,None,itkBayesianClassifierImageFilterVIF3UCFF)
itkBayesianClassifierImageFilterVIF3UCFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_swigregister
itkBayesianClassifierImageFilterVIF3UCFF_swigregister(itkBayesianClassifierImageFilterVIF3UCFF)

def itkBayesianClassifierImageFilterVIF3UCFF___New_orig__():
  """itkBayesianClassifierImageFilterVIF3UCFF___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF___New_orig__()

def itkBayesianClassifierImageFilterVIF3UCFF_cast(*args):
  """itkBayesianClassifierImageFilterVIF3UCFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF3UCFF"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3UCFF_cast(*args)

class itkBayesianClassifierImageFilterVIF3ULDD(itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUL3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIF3ULDD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULDD_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULDD_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULDD_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULDD_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULDD_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULDD_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULDD_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULDD_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULDD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterID3ID3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULDD_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULDD_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageD3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULDD_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULDD_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULDD_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIF3ULDD
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF3ULDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULDD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIF3ULDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULDD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIF3ULDD
        
        Create a new object of the class itkBayesianClassifierImageFilterVIF3ULDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIF3ULDD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIF3ULDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIF3ULDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIF3ULDD.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULDD_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIF3ULDD)
itkBayesianClassifierImageFilterVIF3ULDD.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULDD_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIF3ULDD)
itkBayesianClassifierImageFilterVIF3ULDD.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULDD_SetPriors,None,itkBayesianClassifierImageFilterVIF3ULDD)
itkBayesianClassifierImageFilterVIF3ULDD.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULDD_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIF3ULDD)
itkBayesianClassifierImageFilterVIF3ULDD.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULDD_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIF3ULDD)
itkBayesianClassifierImageFilterVIF3ULDD.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULDD_GetPointer,None,itkBayesianClassifierImageFilterVIF3ULDD)
itkBayesianClassifierImageFilterVIF3ULDD_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULDD_swigregister
itkBayesianClassifierImageFilterVIF3ULDD_swigregister(itkBayesianClassifierImageFilterVIF3ULDD)

def itkBayesianClassifierImageFilterVIF3ULDD___New_orig__():
  """itkBayesianClassifierImageFilterVIF3ULDD___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULDD___New_orig__()

def itkBayesianClassifierImageFilterVIF3ULDD_cast(*args):
  """itkBayesianClassifierImageFilterVIF3ULDD_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF3ULDD"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULDD_cast(*args)

class itkBayesianClassifierImageFilterVIF3ULFF(itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUL3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIF3ULFF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULFF_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULFF_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterIF3IF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULFF_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULFF_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULFF_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULFF_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULFF_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIF3ULFF
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF3ULFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULFF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIF3ULFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULFF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIF3ULFF
        
        Create a new object of the class itkBayesianClassifierImageFilterVIF3ULFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIF3ULFF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIF3ULFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIF3ULFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIF3ULFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULFF_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIF3ULFF)
itkBayesianClassifierImageFilterVIF3ULFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULFF_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIF3ULFF)
itkBayesianClassifierImageFilterVIF3ULFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULFF_SetPriors,None,itkBayesianClassifierImageFilterVIF3ULFF)
itkBayesianClassifierImageFilterVIF3ULFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULFF_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIF3ULFF)
itkBayesianClassifierImageFilterVIF3ULFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULFF_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIF3ULFF)
itkBayesianClassifierImageFilterVIF3ULFF.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULFF_GetPointer,None,itkBayesianClassifierImageFilterVIF3ULFF)
itkBayesianClassifierImageFilterVIF3ULFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULFF_swigregister
itkBayesianClassifierImageFilterVIF3ULFF_swigregister(itkBayesianClassifierImageFilterVIF3ULFF)

def itkBayesianClassifierImageFilterVIF3ULFF___New_orig__():
  """itkBayesianClassifierImageFilterVIF3ULFF___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULFF___New_orig__()

def itkBayesianClassifierImageFilterVIF3ULFF_cast(*args):
  """itkBayesianClassifierImageFilterVIF3ULFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF3ULFF"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3ULFF_cast(*args)

class itkBayesianClassifierImageFilterVIF3USDD(itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUS3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIF3USDD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USDD_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USDD_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USDD_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USDD_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USDD_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USDD_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USDD_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USDD_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USDD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterID3ID3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USDD_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USDD_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageD3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USDD_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USDD_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USDD_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIF3USDD
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF3USDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USDD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIF3USDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USDD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIF3USDD
        
        Create a new object of the class itkBayesianClassifierImageFilterVIF3USDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIF3USDD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIF3USDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIF3USDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIF3USDD.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USDD_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIF3USDD)
itkBayesianClassifierImageFilterVIF3USDD.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USDD_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIF3USDD)
itkBayesianClassifierImageFilterVIF3USDD.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USDD_SetPriors,None,itkBayesianClassifierImageFilterVIF3USDD)
itkBayesianClassifierImageFilterVIF3USDD.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USDD_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIF3USDD)
itkBayesianClassifierImageFilterVIF3USDD.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USDD_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIF3USDD)
itkBayesianClassifierImageFilterVIF3USDD.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USDD_GetPointer,None,itkBayesianClassifierImageFilterVIF3USDD)
itkBayesianClassifierImageFilterVIF3USDD_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USDD_swigregister
itkBayesianClassifierImageFilterVIF3USDD_swigregister(itkBayesianClassifierImageFilterVIF3USDD)

def itkBayesianClassifierImageFilterVIF3USDD___New_orig__():
  """itkBayesianClassifierImageFilterVIF3USDD___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USDD___New_orig__()

def itkBayesianClassifierImageFilterVIF3USDD_cast(*args):
  """itkBayesianClassifierImageFilterVIF3USDD_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF3USDD"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USDD_cast(*args)

class itkBayesianClassifierImageFilterVIF3USFF(itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUS3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIF3USFF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterIF3IF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIF3USFF
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF3USFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIF3USFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIF3USFF
        
        Create a new object of the class itkBayesianClassifierImageFilterVIF3USFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIF3USFF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIF3USFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIF3USFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIF3USFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIF3USFF)
itkBayesianClassifierImageFilterVIF3USFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIF3USFF)
itkBayesianClassifierImageFilterVIF3USFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_SetPriors,None,itkBayesianClassifierImageFilterVIF3USFF)
itkBayesianClassifierImageFilterVIF3USFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIF3USFF)
itkBayesianClassifierImageFilterVIF3USFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIF3USFF)
itkBayesianClassifierImageFilterVIF3USFF.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_GetPointer,None,itkBayesianClassifierImageFilterVIF3USFF)
itkBayesianClassifierImageFilterVIF3USFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_swigregister
itkBayesianClassifierImageFilterVIF3USFF_swigregister(itkBayesianClassifierImageFilterVIF3USFF)

def itkBayesianClassifierImageFilterVIF3USFF___New_orig__():
  """itkBayesianClassifierImageFilterVIF3USFF___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF___New_orig__()

def itkBayesianClassifierImageFilterVIF3USFF_cast(*args):
  """itkBayesianClassifierImageFilterVIF3USFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIF3USFF"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIF3USFF_cast(*args)

class itkBayesianClassifierImageFilterVIUC2UCDD(itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUC2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUC2UCDD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCDD_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCDD_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCDD_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCDD_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCDD_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCDD_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCDD_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCDD_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCDD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterID2ID2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCDD_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCDD_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageD2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCDD_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCDD_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCDD_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUC2UCDD
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC2UCDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCDD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUC2UCDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCDD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUC2UCDD
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUC2UCDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUC2UCDD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUC2UCDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUC2UCDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUC2UCDD.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCDD_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUC2UCDD)
itkBayesianClassifierImageFilterVIUC2UCDD.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCDD_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUC2UCDD)
itkBayesianClassifierImageFilterVIUC2UCDD.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCDD_SetPriors,None,itkBayesianClassifierImageFilterVIUC2UCDD)
itkBayesianClassifierImageFilterVIUC2UCDD.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCDD_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUC2UCDD)
itkBayesianClassifierImageFilterVIUC2UCDD.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCDD_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUC2UCDD)
itkBayesianClassifierImageFilterVIUC2UCDD.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCDD_GetPointer,None,itkBayesianClassifierImageFilterVIUC2UCDD)
itkBayesianClassifierImageFilterVIUC2UCDD_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCDD_swigregister
itkBayesianClassifierImageFilterVIUC2UCDD_swigregister(itkBayesianClassifierImageFilterVIUC2UCDD)

def itkBayesianClassifierImageFilterVIUC2UCDD___New_orig__():
  """itkBayesianClassifierImageFilterVIUC2UCDD___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCDD___New_orig__()

def itkBayesianClassifierImageFilterVIUC2UCDD_cast(*args):
  """itkBayesianClassifierImageFilterVIUC2UCDD_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC2UCDD"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCDD_cast(*args)

class itkBayesianClassifierImageFilterVIUC2UCFF(itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUC2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUC2UCFF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterIF2IF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUC2UCFF
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC2UCFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUC2UCFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUC2UCFF
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUC2UCFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUC2UCFF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUC2UCFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUC2UCFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUC2UCFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUC2UCFF)
itkBayesianClassifierImageFilterVIUC2UCFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUC2UCFF)
itkBayesianClassifierImageFilterVIUC2UCFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_SetPriors,None,itkBayesianClassifierImageFilterVIUC2UCFF)
itkBayesianClassifierImageFilterVIUC2UCFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUC2UCFF)
itkBayesianClassifierImageFilterVIUC2UCFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUC2UCFF)
itkBayesianClassifierImageFilterVIUC2UCFF.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_GetPointer,None,itkBayesianClassifierImageFilterVIUC2UCFF)
itkBayesianClassifierImageFilterVIUC2UCFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_swigregister
itkBayesianClassifierImageFilterVIUC2UCFF_swigregister(itkBayesianClassifierImageFilterVIUC2UCFF)

def itkBayesianClassifierImageFilterVIUC2UCFF___New_orig__():
  """itkBayesianClassifierImageFilterVIUC2UCFF___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF___New_orig__()

def itkBayesianClassifierImageFilterVIUC2UCFF_cast(*args):
  """itkBayesianClassifierImageFilterVIUC2UCFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC2UCFF"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2UCFF_cast(*args)

class itkBayesianClassifierImageFilterVIUC2ULDD(itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUL2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUC2ULDD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULDD_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULDD_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULDD_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULDD_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULDD_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULDD_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULDD_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULDD_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULDD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterID2ID2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULDD_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULDD_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageD2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULDD_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULDD_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULDD_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUC2ULDD
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC2ULDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULDD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUC2ULDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULDD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUC2ULDD
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUC2ULDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUC2ULDD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUC2ULDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUC2ULDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUC2ULDD.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULDD_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUC2ULDD)
itkBayesianClassifierImageFilterVIUC2ULDD.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULDD_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUC2ULDD)
itkBayesianClassifierImageFilterVIUC2ULDD.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULDD_SetPriors,None,itkBayesianClassifierImageFilterVIUC2ULDD)
itkBayesianClassifierImageFilterVIUC2ULDD.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULDD_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUC2ULDD)
itkBayesianClassifierImageFilterVIUC2ULDD.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULDD_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUC2ULDD)
itkBayesianClassifierImageFilterVIUC2ULDD.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULDD_GetPointer,None,itkBayesianClassifierImageFilterVIUC2ULDD)
itkBayesianClassifierImageFilterVIUC2ULDD_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULDD_swigregister
itkBayesianClassifierImageFilterVIUC2ULDD_swigregister(itkBayesianClassifierImageFilterVIUC2ULDD)

def itkBayesianClassifierImageFilterVIUC2ULDD___New_orig__():
  """itkBayesianClassifierImageFilterVIUC2ULDD___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULDD___New_orig__()

def itkBayesianClassifierImageFilterVIUC2ULDD_cast(*args):
  """itkBayesianClassifierImageFilterVIUC2ULDD_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC2ULDD"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULDD_cast(*args)

class itkBayesianClassifierImageFilterVIUC2ULFF(itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUL2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUC2ULFF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULFF_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULFF_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterIF2IF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULFF_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULFF_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULFF_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULFF_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULFF_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUC2ULFF
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC2ULFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULFF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUC2ULFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULFF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUC2ULFF
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUC2ULFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUC2ULFF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUC2ULFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUC2ULFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUC2ULFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULFF_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUC2ULFF)
itkBayesianClassifierImageFilterVIUC2ULFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULFF_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUC2ULFF)
itkBayesianClassifierImageFilterVIUC2ULFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULFF_SetPriors,None,itkBayesianClassifierImageFilterVIUC2ULFF)
itkBayesianClassifierImageFilterVIUC2ULFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULFF_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUC2ULFF)
itkBayesianClassifierImageFilterVIUC2ULFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULFF_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUC2ULFF)
itkBayesianClassifierImageFilterVIUC2ULFF.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULFF_GetPointer,None,itkBayesianClassifierImageFilterVIUC2ULFF)
itkBayesianClassifierImageFilterVIUC2ULFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULFF_swigregister
itkBayesianClassifierImageFilterVIUC2ULFF_swigregister(itkBayesianClassifierImageFilterVIUC2ULFF)

def itkBayesianClassifierImageFilterVIUC2ULFF___New_orig__():
  """itkBayesianClassifierImageFilterVIUC2ULFF___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULFF___New_orig__()

def itkBayesianClassifierImageFilterVIUC2ULFF_cast(*args):
  """itkBayesianClassifierImageFilterVIUC2ULFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC2ULFF"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2ULFF_cast(*args)

class itkBayesianClassifierImageFilterVIUC2USDD(itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUS2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUC2USDD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USDD_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USDD_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USDD_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USDD_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USDD_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USDD_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USDD_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USDD_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USDD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterID2ID2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USDD_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USDD_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageD2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USDD_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USDD_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USDD_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUC2USDD
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC2USDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USDD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUC2USDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USDD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUC2USDD
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUC2USDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUC2USDD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUC2USDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUC2USDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUC2USDD.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USDD_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUC2USDD)
itkBayesianClassifierImageFilterVIUC2USDD.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USDD_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUC2USDD)
itkBayesianClassifierImageFilterVIUC2USDD.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USDD_SetPriors,None,itkBayesianClassifierImageFilterVIUC2USDD)
itkBayesianClassifierImageFilterVIUC2USDD.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USDD_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUC2USDD)
itkBayesianClassifierImageFilterVIUC2USDD.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USDD_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUC2USDD)
itkBayesianClassifierImageFilterVIUC2USDD.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USDD_GetPointer,None,itkBayesianClassifierImageFilterVIUC2USDD)
itkBayesianClassifierImageFilterVIUC2USDD_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USDD_swigregister
itkBayesianClassifierImageFilterVIUC2USDD_swigregister(itkBayesianClassifierImageFilterVIUC2USDD)

def itkBayesianClassifierImageFilterVIUC2USDD___New_orig__():
  """itkBayesianClassifierImageFilterVIUC2USDD___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USDD___New_orig__()

def itkBayesianClassifierImageFilterVIUC2USDD_cast(*args):
  """itkBayesianClassifierImageFilterVIUC2USDD_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC2USDD"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USDD_cast(*args)

class itkBayesianClassifierImageFilterVIUC2USFF(itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUS2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUC2USFF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterIF2IF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUC2USFF
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC2USFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUC2USFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUC2USFF
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUC2USFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUC2USFF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUC2USFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUC2USFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUC2USFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUC2USFF)
itkBayesianClassifierImageFilterVIUC2USFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUC2USFF)
itkBayesianClassifierImageFilterVIUC2USFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_SetPriors,None,itkBayesianClassifierImageFilterVIUC2USFF)
itkBayesianClassifierImageFilterVIUC2USFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUC2USFF)
itkBayesianClassifierImageFilterVIUC2USFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUC2USFF)
itkBayesianClassifierImageFilterVIUC2USFF.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_GetPointer,None,itkBayesianClassifierImageFilterVIUC2USFF)
itkBayesianClassifierImageFilterVIUC2USFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_swigregister
itkBayesianClassifierImageFilterVIUC2USFF_swigregister(itkBayesianClassifierImageFilterVIUC2USFF)

def itkBayesianClassifierImageFilterVIUC2USFF___New_orig__():
  """itkBayesianClassifierImageFilterVIUC2USFF___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF___New_orig__()

def itkBayesianClassifierImageFilterVIUC2USFF_cast(*args):
  """itkBayesianClassifierImageFilterVIUC2USFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC2USFF"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC2USFF_cast(*args)

class itkBayesianClassifierImageFilterVIUC3UCDD(itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUC3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUC3UCDD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCDD_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCDD_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCDD_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCDD_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCDD_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCDD_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCDD_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCDD_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCDD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterID3ID3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCDD_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCDD_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageD3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCDD_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCDD_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCDD_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUC3UCDD
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC3UCDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCDD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUC3UCDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCDD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUC3UCDD
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUC3UCDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUC3UCDD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUC3UCDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUC3UCDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUC3UCDD.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCDD_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUC3UCDD)
itkBayesianClassifierImageFilterVIUC3UCDD.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCDD_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUC3UCDD)
itkBayesianClassifierImageFilterVIUC3UCDD.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCDD_SetPriors,None,itkBayesianClassifierImageFilterVIUC3UCDD)
itkBayesianClassifierImageFilterVIUC3UCDD.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCDD_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUC3UCDD)
itkBayesianClassifierImageFilterVIUC3UCDD.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCDD_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUC3UCDD)
itkBayesianClassifierImageFilterVIUC3UCDD.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCDD_GetPointer,None,itkBayesianClassifierImageFilterVIUC3UCDD)
itkBayesianClassifierImageFilterVIUC3UCDD_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCDD_swigregister
itkBayesianClassifierImageFilterVIUC3UCDD_swigregister(itkBayesianClassifierImageFilterVIUC3UCDD)

def itkBayesianClassifierImageFilterVIUC3UCDD___New_orig__():
  """itkBayesianClassifierImageFilterVIUC3UCDD___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCDD___New_orig__()

def itkBayesianClassifierImageFilterVIUC3UCDD_cast(*args):
  """itkBayesianClassifierImageFilterVIUC3UCDD_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC3UCDD"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCDD_cast(*args)

class itkBayesianClassifierImageFilterVIUC3UCFF(itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUC3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUC3UCFF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterIF3IF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUC3UCFF
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC3UCFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUC3UCFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUC3UCFF
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUC3UCFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUC3UCFF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUC3UCFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUC3UCFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUC3UCFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUC3UCFF)
itkBayesianClassifierImageFilterVIUC3UCFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUC3UCFF)
itkBayesianClassifierImageFilterVIUC3UCFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_SetPriors,None,itkBayesianClassifierImageFilterVIUC3UCFF)
itkBayesianClassifierImageFilterVIUC3UCFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUC3UCFF)
itkBayesianClassifierImageFilterVIUC3UCFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUC3UCFF)
itkBayesianClassifierImageFilterVIUC3UCFF.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_GetPointer,None,itkBayesianClassifierImageFilterVIUC3UCFF)
itkBayesianClassifierImageFilterVIUC3UCFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_swigregister
itkBayesianClassifierImageFilterVIUC3UCFF_swigregister(itkBayesianClassifierImageFilterVIUC3UCFF)

def itkBayesianClassifierImageFilterVIUC3UCFF___New_orig__():
  """itkBayesianClassifierImageFilterVIUC3UCFF___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF___New_orig__()

def itkBayesianClassifierImageFilterVIUC3UCFF_cast(*args):
  """itkBayesianClassifierImageFilterVIUC3UCFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC3UCFF"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3UCFF_cast(*args)

class itkBayesianClassifierImageFilterVIUC3ULDD(itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUL3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUC3ULDD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULDD_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULDD_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULDD_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULDD_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULDD_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULDD_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULDD_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULDD_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULDD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterID3ID3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULDD_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULDD_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageD3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULDD_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULDD_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULDD_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUC3ULDD
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC3ULDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULDD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUC3ULDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULDD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUC3ULDD
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUC3ULDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUC3ULDD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUC3ULDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUC3ULDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUC3ULDD.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULDD_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUC3ULDD)
itkBayesianClassifierImageFilterVIUC3ULDD.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULDD_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUC3ULDD)
itkBayesianClassifierImageFilterVIUC3ULDD.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULDD_SetPriors,None,itkBayesianClassifierImageFilterVIUC3ULDD)
itkBayesianClassifierImageFilterVIUC3ULDD.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULDD_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUC3ULDD)
itkBayesianClassifierImageFilterVIUC3ULDD.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULDD_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUC3ULDD)
itkBayesianClassifierImageFilterVIUC3ULDD.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULDD_GetPointer,None,itkBayesianClassifierImageFilterVIUC3ULDD)
itkBayesianClassifierImageFilterVIUC3ULDD_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULDD_swigregister
itkBayesianClassifierImageFilterVIUC3ULDD_swigregister(itkBayesianClassifierImageFilterVIUC3ULDD)

def itkBayesianClassifierImageFilterVIUC3ULDD___New_orig__():
  """itkBayesianClassifierImageFilterVIUC3ULDD___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULDD___New_orig__()

def itkBayesianClassifierImageFilterVIUC3ULDD_cast(*args):
  """itkBayesianClassifierImageFilterVIUC3ULDD_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC3ULDD"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULDD_cast(*args)

class itkBayesianClassifierImageFilterVIUC3ULFF(itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUL3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUC3ULFF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULFF_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULFF_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterIF3IF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULFF_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULFF_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULFF_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULFF_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULFF_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUC3ULFF
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC3ULFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULFF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUC3ULFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULFF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUC3ULFF
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUC3ULFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUC3ULFF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUC3ULFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUC3ULFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUC3ULFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULFF_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUC3ULFF)
itkBayesianClassifierImageFilterVIUC3ULFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULFF_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUC3ULFF)
itkBayesianClassifierImageFilterVIUC3ULFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULFF_SetPriors,None,itkBayesianClassifierImageFilterVIUC3ULFF)
itkBayesianClassifierImageFilterVIUC3ULFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULFF_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUC3ULFF)
itkBayesianClassifierImageFilterVIUC3ULFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULFF_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUC3ULFF)
itkBayesianClassifierImageFilterVIUC3ULFF.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULFF_GetPointer,None,itkBayesianClassifierImageFilterVIUC3ULFF)
itkBayesianClassifierImageFilterVIUC3ULFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULFF_swigregister
itkBayesianClassifierImageFilterVIUC3ULFF_swigregister(itkBayesianClassifierImageFilterVIUC3ULFF)

def itkBayesianClassifierImageFilterVIUC3ULFF___New_orig__():
  """itkBayesianClassifierImageFilterVIUC3ULFF___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULFF___New_orig__()

def itkBayesianClassifierImageFilterVIUC3ULFF_cast(*args):
  """itkBayesianClassifierImageFilterVIUC3ULFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC3ULFF"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3ULFF_cast(*args)

class itkBayesianClassifierImageFilterVIUC3USDD(itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUS3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUC3USDD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USDD_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USDD_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USDD_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USDD_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USDD_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USDD_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USDD_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USDD_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USDD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterID3ID3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USDD_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USDD_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageD3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USDD_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USDD_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USDD_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUC3USDD
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC3USDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USDD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUC3USDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USDD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUC3USDD
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUC3USDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUC3USDD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUC3USDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUC3USDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUC3USDD.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USDD_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUC3USDD)
itkBayesianClassifierImageFilterVIUC3USDD.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USDD_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUC3USDD)
itkBayesianClassifierImageFilterVIUC3USDD.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USDD_SetPriors,None,itkBayesianClassifierImageFilterVIUC3USDD)
itkBayesianClassifierImageFilterVIUC3USDD.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USDD_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUC3USDD)
itkBayesianClassifierImageFilterVIUC3USDD.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USDD_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUC3USDD)
itkBayesianClassifierImageFilterVIUC3USDD.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USDD_GetPointer,None,itkBayesianClassifierImageFilterVIUC3USDD)
itkBayesianClassifierImageFilterVIUC3USDD_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USDD_swigregister
itkBayesianClassifierImageFilterVIUC3USDD_swigregister(itkBayesianClassifierImageFilterVIUC3USDD)

def itkBayesianClassifierImageFilterVIUC3USDD___New_orig__():
  """itkBayesianClassifierImageFilterVIUC3USDD___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USDD___New_orig__()

def itkBayesianClassifierImageFilterVIUC3USDD_cast(*args):
  """itkBayesianClassifierImageFilterVIUC3USDD_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC3USDD"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USDD_cast(*args)

class itkBayesianClassifierImageFilterVIUC3USFF(itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUS3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUC3USFF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterIF3IF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUC3USFF
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC3USFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUC3USFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUC3USFF
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUC3USFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUC3USFF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUC3USFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUC3USFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUC3USFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUC3USFF)
itkBayesianClassifierImageFilterVIUC3USFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUC3USFF)
itkBayesianClassifierImageFilterVIUC3USFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_SetPriors,None,itkBayesianClassifierImageFilterVIUC3USFF)
itkBayesianClassifierImageFilterVIUC3USFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUC3USFF)
itkBayesianClassifierImageFilterVIUC3USFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUC3USFF)
itkBayesianClassifierImageFilterVIUC3USFF.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_GetPointer,None,itkBayesianClassifierImageFilterVIUC3USFF)
itkBayesianClassifierImageFilterVIUC3USFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_swigregister
itkBayesianClassifierImageFilterVIUC3USFF_swigregister(itkBayesianClassifierImageFilterVIUC3USFF)

def itkBayesianClassifierImageFilterVIUC3USFF___New_orig__():
  """itkBayesianClassifierImageFilterVIUC3USFF___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF___New_orig__()

def itkBayesianClassifierImageFilterVIUC3USFF_cast(*args):
  """itkBayesianClassifierImageFilterVIUC3USFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUC3USFF"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUC3USFF_cast(*args)

class itkBayesianClassifierImageFilterVIUL2UCDD(itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUC2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUL2UCDD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCDD_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCDD_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCDD_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCDD_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCDD_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCDD_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCDD_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCDD_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCDD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterID2ID2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCDD_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCDD_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageD2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCDD_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCDD_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCDD_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUL2UCDD
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUL2UCDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCDD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUL2UCDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCDD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUL2UCDD
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUL2UCDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUL2UCDD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUL2UCDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUL2UCDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUL2UCDD.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCDD_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUL2UCDD)
itkBayesianClassifierImageFilterVIUL2UCDD.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCDD_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUL2UCDD)
itkBayesianClassifierImageFilterVIUL2UCDD.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCDD_SetPriors,None,itkBayesianClassifierImageFilterVIUL2UCDD)
itkBayesianClassifierImageFilterVIUL2UCDD.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCDD_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUL2UCDD)
itkBayesianClassifierImageFilterVIUL2UCDD.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCDD_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUL2UCDD)
itkBayesianClassifierImageFilterVIUL2UCDD.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCDD_GetPointer,None,itkBayesianClassifierImageFilterVIUL2UCDD)
itkBayesianClassifierImageFilterVIUL2UCDD_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCDD_swigregister
itkBayesianClassifierImageFilterVIUL2UCDD_swigregister(itkBayesianClassifierImageFilterVIUL2UCDD)

def itkBayesianClassifierImageFilterVIUL2UCDD___New_orig__():
  """itkBayesianClassifierImageFilterVIUL2UCDD___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCDD___New_orig__()

def itkBayesianClassifierImageFilterVIUL2UCDD_cast(*args):
  """itkBayesianClassifierImageFilterVIUL2UCDD_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUL2UCDD"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCDD_cast(*args)

class itkBayesianClassifierImageFilterVIUL2UCFF(itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUC2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUL2UCFF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCFF_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCFF_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterIF2IF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCFF_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCFF_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCFF_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCFF_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCFF_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUL2UCFF
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUL2UCFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCFF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUL2UCFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCFF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUL2UCFF
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUL2UCFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUL2UCFF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUL2UCFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUL2UCFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUL2UCFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCFF_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUL2UCFF)
itkBayesianClassifierImageFilterVIUL2UCFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCFF_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUL2UCFF)
itkBayesianClassifierImageFilterVIUL2UCFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCFF_SetPriors,None,itkBayesianClassifierImageFilterVIUL2UCFF)
itkBayesianClassifierImageFilterVIUL2UCFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCFF_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUL2UCFF)
itkBayesianClassifierImageFilterVIUL2UCFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCFF_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUL2UCFF)
itkBayesianClassifierImageFilterVIUL2UCFF.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCFF_GetPointer,None,itkBayesianClassifierImageFilterVIUL2UCFF)
itkBayesianClassifierImageFilterVIUL2UCFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCFF_swigregister
itkBayesianClassifierImageFilterVIUL2UCFF_swigregister(itkBayesianClassifierImageFilterVIUL2UCFF)

def itkBayesianClassifierImageFilterVIUL2UCFF___New_orig__():
  """itkBayesianClassifierImageFilterVIUL2UCFF___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCFF___New_orig__()

def itkBayesianClassifierImageFilterVIUL2UCFF_cast(*args):
  """itkBayesianClassifierImageFilterVIUL2UCFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUL2UCFF"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2UCFF_cast(*args)

class itkBayesianClassifierImageFilterVIUL2ULDD(itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUL2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUL2ULDD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULDD_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULDD_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULDD_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULDD_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULDD_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULDD_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULDD_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULDD_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULDD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterID2ID2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULDD_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULDD_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageD2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULDD_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULDD_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULDD_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUL2ULDD
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUL2ULDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULDD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUL2ULDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULDD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUL2ULDD
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUL2ULDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUL2ULDD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUL2ULDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUL2ULDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUL2ULDD.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULDD_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUL2ULDD)
itkBayesianClassifierImageFilterVIUL2ULDD.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULDD_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUL2ULDD)
itkBayesianClassifierImageFilterVIUL2ULDD.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULDD_SetPriors,None,itkBayesianClassifierImageFilterVIUL2ULDD)
itkBayesianClassifierImageFilterVIUL2ULDD.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULDD_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUL2ULDD)
itkBayesianClassifierImageFilterVIUL2ULDD.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULDD_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUL2ULDD)
itkBayesianClassifierImageFilterVIUL2ULDD.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULDD_GetPointer,None,itkBayesianClassifierImageFilterVIUL2ULDD)
itkBayesianClassifierImageFilterVIUL2ULDD_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULDD_swigregister
itkBayesianClassifierImageFilterVIUL2ULDD_swigregister(itkBayesianClassifierImageFilterVIUL2ULDD)

def itkBayesianClassifierImageFilterVIUL2ULDD___New_orig__():
  """itkBayesianClassifierImageFilterVIUL2ULDD___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULDD___New_orig__()

def itkBayesianClassifierImageFilterVIUL2ULDD_cast(*args):
  """itkBayesianClassifierImageFilterVIUL2ULDD_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUL2ULDD"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULDD_cast(*args)

class itkBayesianClassifierImageFilterVIUL2ULFF(itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUL2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUL2ULFF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULFF_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULFF_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterIF2IF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULFF_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULFF_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULFF_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULFF_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULFF_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUL2ULFF
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUL2ULFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULFF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUL2ULFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULFF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUL2ULFF
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUL2ULFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUL2ULFF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUL2ULFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUL2ULFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUL2ULFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULFF_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUL2ULFF)
itkBayesianClassifierImageFilterVIUL2ULFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULFF_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUL2ULFF)
itkBayesianClassifierImageFilterVIUL2ULFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULFF_SetPriors,None,itkBayesianClassifierImageFilterVIUL2ULFF)
itkBayesianClassifierImageFilterVIUL2ULFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULFF_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUL2ULFF)
itkBayesianClassifierImageFilterVIUL2ULFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULFF_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUL2ULFF)
itkBayesianClassifierImageFilterVIUL2ULFF.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULFF_GetPointer,None,itkBayesianClassifierImageFilterVIUL2ULFF)
itkBayesianClassifierImageFilterVIUL2ULFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULFF_swigregister
itkBayesianClassifierImageFilterVIUL2ULFF_swigregister(itkBayesianClassifierImageFilterVIUL2ULFF)

def itkBayesianClassifierImageFilterVIUL2ULFF___New_orig__():
  """itkBayesianClassifierImageFilterVIUL2ULFF___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULFF___New_orig__()

def itkBayesianClassifierImageFilterVIUL2ULFF_cast(*args):
  """itkBayesianClassifierImageFilterVIUL2ULFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUL2ULFF"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2ULFF_cast(*args)

class itkBayesianClassifierImageFilterVIUL2USDD(itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUS2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUL2USDD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USDD_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USDD_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USDD_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USDD_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USDD_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USDD_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USDD_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USDD_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USDD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterID2ID2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USDD_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USDD_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageD2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USDD_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USDD_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USDD_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUL2USDD
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUL2USDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USDD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUL2USDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USDD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUL2USDD
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUL2USDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUL2USDD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUL2USDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUL2USDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUL2USDD.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USDD_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUL2USDD)
itkBayesianClassifierImageFilterVIUL2USDD.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USDD_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUL2USDD)
itkBayesianClassifierImageFilterVIUL2USDD.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USDD_SetPriors,None,itkBayesianClassifierImageFilterVIUL2USDD)
itkBayesianClassifierImageFilterVIUL2USDD.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USDD_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUL2USDD)
itkBayesianClassifierImageFilterVIUL2USDD.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USDD_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUL2USDD)
itkBayesianClassifierImageFilterVIUL2USDD.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USDD_GetPointer,None,itkBayesianClassifierImageFilterVIUL2USDD)
itkBayesianClassifierImageFilterVIUL2USDD_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USDD_swigregister
itkBayesianClassifierImageFilterVIUL2USDD_swigregister(itkBayesianClassifierImageFilterVIUL2USDD)

def itkBayesianClassifierImageFilterVIUL2USDD___New_orig__():
  """itkBayesianClassifierImageFilterVIUL2USDD___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USDD___New_orig__()

def itkBayesianClassifierImageFilterVIUL2USDD_cast(*args):
  """itkBayesianClassifierImageFilterVIUL2USDD_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUL2USDD"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USDD_cast(*args)

class itkBayesianClassifierImageFilterVIUL2USFF(itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUS2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUL2USFF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USFF_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USFF_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterIF2IF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USFF_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USFF_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USFF_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USFF_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USFF_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUL2USFF
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUL2USFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USFF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUL2USFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USFF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUL2USFF
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUL2USFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUL2USFF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUL2USFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUL2USFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUL2USFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USFF_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUL2USFF)
itkBayesianClassifierImageFilterVIUL2USFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USFF_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUL2USFF)
itkBayesianClassifierImageFilterVIUL2USFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USFF_SetPriors,None,itkBayesianClassifierImageFilterVIUL2USFF)
itkBayesianClassifierImageFilterVIUL2USFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USFF_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUL2USFF)
itkBayesianClassifierImageFilterVIUL2USFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USFF_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUL2USFF)
itkBayesianClassifierImageFilterVIUL2USFF.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USFF_GetPointer,None,itkBayesianClassifierImageFilterVIUL2USFF)
itkBayesianClassifierImageFilterVIUL2USFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USFF_swigregister
itkBayesianClassifierImageFilterVIUL2USFF_swigregister(itkBayesianClassifierImageFilterVIUL2USFF)

def itkBayesianClassifierImageFilterVIUL2USFF___New_orig__():
  """itkBayesianClassifierImageFilterVIUL2USFF___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USFF___New_orig__()

def itkBayesianClassifierImageFilterVIUL2USFF_cast(*args):
  """itkBayesianClassifierImageFilterVIUL2USFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUL2USFF"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL2USFF_cast(*args)

class itkBayesianClassifierImageFilterVIUL3UCDD(itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUC3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUL3UCDD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCDD_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCDD_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCDD_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCDD_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCDD_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCDD_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCDD_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCDD_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCDD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterID3ID3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCDD_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCDD_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageD3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCDD_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCDD_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCDD_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUL3UCDD
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUL3UCDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCDD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUL3UCDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCDD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUL3UCDD
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUL3UCDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUL3UCDD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUL3UCDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUL3UCDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUL3UCDD.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCDD_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUL3UCDD)
itkBayesianClassifierImageFilterVIUL3UCDD.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCDD_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUL3UCDD)
itkBayesianClassifierImageFilterVIUL3UCDD.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCDD_SetPriors,None,itkBayesianClassifierImageFilterVIUL3UCDD)
itkBayesianClassifierImageFilterVIUL3UCDD.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCDD_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUL3UCDD)
itkBayesianClassifierImageFilterVIUL3UCDD.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCDD_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUL3UCDD)
itkBayesianClassifierImageFilterVIUL3UCDD.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCDD_GetPointer,None,itkBayesianClassifierImageFilterVIUL3UCDD)
itkBayesianClassifierImageFilterVIUL3UCDD_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCDD_swigregister
itkBayesianClassifierImageFilterVIUL3UCDD_swigregister(itkBayesianClassifierImageFilterVIUL3UCDD)

def itkBayesianClassifierImageFilterVIUL3UCDD___New_orig__():
  """itkBayesianClassifierImageFilterVIUL3UCDD___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCDD___New_orig__()

def itkBayesianClassifierImageFilterVIUL3UCDD_cast(*args):
  """itkBayesianClassifierImageFilterVIUL3UCDD_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUL3UCDD"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCDD_cast(*args)

class itkBayesianClassifierImageFilterVIUL3UCFF(itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUC3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUL3UCFF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCFF_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCFF_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterIF3IF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCFF_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCFF_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCFF_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCFF_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCFF_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUL3UCFF
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUL3UCFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCFF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUL3UCFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCFF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUL3UCFF
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUL3UCFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUL3UCFF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUL3UCFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUL3UCFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUL3UCFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCFF_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUL3UCFF)
itkBayesianClassifierImageFilterVIUL3UCFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCFF_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUL3UCFF)
itkBayesianClassifierImageFilterVIUL3UCFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCFF_SetPriors,None,itkBayesianClassifierImageFilterVIUL3UCFF)
itkBayesianClassifierImageFilterVIUL3UCFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCFF_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUL3UCFF)
itkBayesianClassifierImageFilterVIUL3UCFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCFF_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUL3UCFF)
itkBayesianClassifierImageFilterVIUL3UCFF.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCFF_GetPointer,None,itkBayesianClassifierImageFilterVIUL3UCFF)
itkBayesianClassifierImageFilterVIUL3UCFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCFF_swigregister
itkBayesianClassifierImageFilterVIUL3UCFF_swigregister(itkBayesianClassifierImageFilterVIUL3UCFF)

def itkBayesianClassifierImageFilterVIUL3UCFF___New_orig__():
  """itkBayesianClassifierImageFilterVIUL3UCFF___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCFF___New_orig__()

def itkBayesianClassifierImageFilterVIUL3UCFF_cast(*args):
  """itkBayesianClassifierImageFilterVIUL3UCFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUL3UCFF"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3UCFF_cast(*args)

class itkBayesianClassifierImageFilterVIUL3ULDD(itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUL3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUL3ULDD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULDD_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULDD_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULDD_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULDD_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULDD_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULDD_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULDD_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULDD_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULDD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterID3ID3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULDD_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULDD_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageD3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULDD_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULDD_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULDD_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUL3ULDD
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUL3ULDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULDD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUL3ULDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULDD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUL3ULDD
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUL3ULDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUL3ULDD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUL3ULDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUL3ULDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUL3ULDD.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULDD_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUL3ULDD)
itkBayesianClassifierImageFilterVIUL3ULDD.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULDD_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUL3ULDD)
itkBayesianClassifierImageFilterVIUL3ULDD.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULDD_SetPriors,None,itkBayesianClassifierImageFilterVIUL3ULDD)
itkBayesianClassifierImageFilterVIUL3ULDD.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULDD_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUL3ULDD)
itkBayesianClassifierImageFilterVIUL3ULDD.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULDD_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUL3ULDD)
itkBayesianClassifierImageFilterVIUL3ULDD.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULDD_GetPointer,None,itkBayesianClassifierImageFilterVIUL3ULDD)
itkBayesianClassifierImageFilterVIUL3ULDD_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULDD_swigregister
itkBayesianClassifierImageFilterVIUL3ULDD_swigregister(itkBayesianClassifierImageFilterVIUL3ULDD)

def itkBayesianClassifierImageFilterVIUL3ULDD___New_orig__():
  """itkBayesianClassifierImageFilterVIUL3ULDD___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULDD___New_orig__()

def itkBayesianClassifierImageFilterVIUL3ULDD_cast(*args):
  """itkBayesianClassifierImageFilterVIUL3ULDD_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUL3ULDD"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULDD_cast(*args)

class itkBayesianClassifierImageFilterVIUL3ULFF(itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUL3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUL3ULFF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULFF_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULFF_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterIF3IF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULFF_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULFF_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULFF_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULFF_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULFF_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUL3ULFF
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUL3ULFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULFF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUL3ULFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULFF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUL3ULFF
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUL3ULFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUL3ULFF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUL3ULFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUL3ULFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUL3ULFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULFF_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUL3ULFF)
itkBayesianClassifierImageFilterVIUL3ULFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULFF_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUL3ULFF)
itkBayesianClassifierImageFilterVIUL3ULFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULFF_SetPriors,None,itkBayesianClassifierImageFilterVIUL3ULFF)
itkBayesianClassifierImageFilterVIUL3ULFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULFF_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUL3ULFF)
itkBayesianClassifierImageFilterVIUL3ULFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULFF_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUL3ULFF)
itkBayesianClassifierImageFilterVIUL3ULFF.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULFF_GetPointer,None,itkBayesianClassifierImageFilterVIUL3ULFF)
itkBayesianClassifierImageFilterVIUL3ULFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULFF_swigregister
itkBayesianClassifierImageFilterVIUL3ULFF_swigregister(itkBayesianClassifierImageFilterVIUL3ULFF)

def itkBayesianClassifierImageFilterVIUL3ULFF___New_orig__():
  """itkBayesianClassifierImageFilterVIUL3ULFF___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULFF___New_orig__()

def itkBayesianClassifierImageFilterVIUL3ULFF_cast(*args):
  """itkBayesianClassifierImageFilterVIUL3ULFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUL3ULFF"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3ULFF_cast(*args)

class itkBayesianClassifierImageFilterVIUL3USDD(itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUS3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUL3USDD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USDD_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USDD_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USDD_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USDD_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USDD_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USDD_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USDD_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USDD_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USDD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterID3ID3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USDD_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USDD_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageD3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USDD_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USDD_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USDD_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUL3USDD
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUL3USDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USDD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUL3USDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USDD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUL3USDD
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUL3USDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUL3USDD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUL3USDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUL3USDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUL3USDD.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USDD_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUL3USDD)
itkBayesianClassifierImageFilterVIUL3USDD.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USDD_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUL3USDD)
itkBayesianClassifierImageFilterVIUL3USDD.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USDD_SetPriors,None,itkBayesianClassifierImageFilterVIUL3USDD)
itkBayesianClassifierImageFilterVIUL3USDD.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USDD_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUL3USDD)
itkBayesianClassifierImageFilterVIUL3USDD.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USDD_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUL3USDD)
itkBayesianClassifierImageFilterVIUL3USDD.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USDD_GetPointer,None,itkBayesianClassifierImageFilterVIUL3USDD)
itkBayesianClassifierImageFilterVIUL3USDD_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USDD_swigregister
itkBayesianClassifierImageFilterVIUL3USDD_swigregister(itkBayesianClassifierImageFilterVIUL3USDD)

def itkBayesianClassifierImageFilterVIUL3USDD___New_orig__():
  """itkBayesianClassifierImageFilterVIUL3USDD___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USDD___New_orig__()

def itkBayesianClassifierImageFilterVIUL3USDD_cast(*args):
  """itkBayesianClassifierImageFilterVIUL3USDD_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUL3USDD"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USDD_cast(*args)

class itkBayesianClassifierImageFilterVIUL3USFF(itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUS3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUL3USFF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USFF_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USFF_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterIF3IF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USFF_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USFF_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USFF_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USFF_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USFF_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUL3USFF
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUL3USFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USFF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUL3USFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USFF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUL3USFF
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUL3USFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUL3USFF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUL3USFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUL3USFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUL3USFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USFF_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUL3USFF)
itkBayesianClassifierImageFilterVIUL3USFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USFF_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUL3USFF)
itkBayesianClassifierImageFilterVIUL3USFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USFF_SetPriors,None,itkBayesianClassifierImageFilterVIUL3USFF)
itkBayesianClassifierImageFilterVIUL3USFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USFF_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUL3USFF)
itkBayesianClassifierImageFilterVIUL3USFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USFF_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUL3USFF)
itkBayesianClassifierImageFilterVIUL3USFF.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USFF_GetPointer,None,itkBayesianClassifierImageFilterVIUL3USFF)
itkBayesianClassifierImageFilterVIUL3USFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USFF_swigregister
itkBayesianClassifierImageFilterVIUL3USFF_swigregister(itkBayesianClassifierImageFilterVIUL3USFF)

def itkBayesianClassifierImageFilterVIUL3USFF___New_orig__():
  """itkBayesianClassifierImageFilterVIUL3USFF___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USFF___New_orig__()

def itkBayesianClassifierImageFilterVIUL3USFF_cast(*args):
  """itkBayesianClassifierImageFilterVIUL3USFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUL3USFF"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUL3USFF_cast(*args)

class itkBayesianClassifierImageFilterVIUS2UCDD(itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUC2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUS2UCDD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCDD_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCDD_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCDD_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCDD_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCDD_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCDD_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCDD_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCDD_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCDD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterID2ID2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCDD_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCDD_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageD2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCDD_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCDD_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCDD_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUS2UCDD
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS2UCDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCDD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUS2UCDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCDD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUS2UCDD
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUS2UCDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUS2UCDD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUS2UCDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUS2UCDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUS2UCDD.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCDD_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUS2UCDD)
itkBayesianClassifierImageFilterVIUS2UCDD.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCDD_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUS2UCDD)
itkBayesianClassifierImageFilterVIUS2UCDD.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCDD_SetPriors,None,itkBayesianClassifierImageFilterVIUS2UCDD)
itkBayesianClassifierImageFilterVIUS2UCDD.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCDD_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUS2UCDD)
itkBayesianClassifierImageFilterVIUS2UCDD.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCDD_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUS2UCDD)
itkBayesianClassifierImageFilterVIUS2UCDD.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCDD_GetPointer,None,itkBayesianClassifierImageFilterVIUS2UCDD)
itkBayesianClassifierImageFilterVIUS2UCDD_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCDD_swigregister
itkBayesianClassifierImageFilterVIUS2UCDD_swigregister(itkBayesianClassifierImageFilterVIUS2UCDD)

def itkBayesianClassifierImageFilterVIUS2UCDD___New_orig__():
  """itkBayesianClassifierImageFilterVIUS2UCDD___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCDD___New_orig__()

def itkBayesianClassifierImageFilterVIUS2UCDD_cast(*args):
  """itkBayesianClassifierImageFilterVIUS2UCDD_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS2UCDD"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCDD_cast(*args)

class itkBayesianClassifierImageFilterVIUS2UCFF(itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUC2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUS2UCFF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterIF2IF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUS2UCFF
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS2UCFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUS2UCFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUS2UCFF
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUS2UCFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUS2UCFF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUS2UCFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUS2UCFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUS2UCFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUS2UCFF)
itkBayesianClassifierImageFilterVIUS2UCFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUS2UCFF)
itkBayesianClassifierImageFilterVIUS2UCFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_SetPriors,None,itkBayesianClassifierImageFilterVIUS2UCFF)
itkBayesianClassifierImageFilterVIUS2UCFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUS2UCFF)
itkBayesianClassifierImageFilterVIUS2UCFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUS2UCFF)
itkBayesianClassifierImageFilterVIUS2UCFF.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_GetPointer,None,itkBayesianClassifierImageFilterVIUS2UCFF)
itkBayesianClassifierImageFilterVIUS2UCFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_swigregister
itkBayesianClassifierImageFilterVIUS2UCFF_swigregister(itkBayesianClassifierImageFilterVIUS2UCFF)

def itkBayesianClassifierImageFilterVIUS2UCFF___New_orig__():
  """itkBayesianClassifierImageFilterVIUS2UCFF___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF___New_orig__()

def itkBayesianClassifierImageFilterVIUS2UCFF_cast(*args):
  """itkBayesianClassifierImageFilterVIUS2UCFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS2UCFF"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2UCFF_cast(*args)

class itkBayesianClassifierImageFilterVIUS2ULDD(itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUL2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUS2ULDD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULDD_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULDD_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULDD_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULDD_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULDD_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULDD_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULDD_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULDD_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULDD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterID2ID2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULDD_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULDD_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageD2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULDD_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULDD_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULDD_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUS2ULDD
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS2ULDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULDD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUS2ULDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULDD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUS2ULDD
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUS2ULDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUS2ULDD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUS2ULDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUS2ULDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUS2ULDD.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULDD_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUS2ULDD)
itkBayesianClassifierImageFilterVIUS2ULDD.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULDD_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUS2ULDD)
itkBayesianClassifierImageFilterVIUS2ULDD.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULDD_SetPriors,None,itkBayesianClassifierImageFilterVIUS2ULDD)
itkBayesianClassifierImageFilterVIUS2ULDD.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULDD_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUS2ULDD)
itkBayesianClassifierImageFilterVIUS2ULDD.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULDD_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUS2ULDD)
itkBayesianClassifierImageFilterVIUS2ULDD.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULDD_GetPointer,None,itkBayesianClassifierImageFilterVIUS2ULDD)
itkBayesianClassifierImageFilterVIUS2ULDD_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULDD_swigregister
itkBayesianClassifierImageFilterVIUS2ULDD_swigregister(itkBayesianClassifierImageFilterVIUS2ULDD)

def itkBayesianClassifierImageFilterVIUS2ULDD___New_orig__():
  """itkBayesianClassifierImageFilterVIUS2ULDD___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULDD___New_orig__()

def itkBayesianClassifierImageFilterVIUS2ULDD_cast(*args):
  """itkBayesianClassifierImageFilterVIUS2ULDD_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS2ULDD"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULDD_cast(*args)

class itkBayesianClassifierImageFilterVIUS2ULFF(itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUL2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUS2ULFF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULFF_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULFF_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterIF2IF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULFF_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULFF_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULFF_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULFF_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULFF_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUS2ULFF
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS2ULFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULFF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUS2ULFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULFF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUS2ULFF
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUS2ULFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUS2ULFF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUS2ULFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUS2ULFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUS2ULFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULFF_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUS2ULFF)
itkBayesianClassifierImageFilterVIUS2ULFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULFF_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUS2ULFF)
itkBayesianClassifierImageFilterVIUS2ULFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULFF_SetPriors,None,itkBayesianClassifierImageFilterVIUS2ULFF)
itkBayesianClassifierImageFilterVIUS2ULFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULFF_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUS2ULFF)
itkBayesianClassifierImageFilterVIUS2ULFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULFF_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUS2ULFF)
itkBayesianClassifierImageFilterVIUS2ULFF.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULFF_GetPointer,None,itkBayesianClassifierImageFilterVIUS2ULFF)
itkBayesianClassifierImageFilterVIUS2ULFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULFF_swigregister
itkBayesianClassifierImageFilterVIUS2ULFF_swigregister(itkBayesianClassifierImageFilterVIUS2ULFF)

def itkBayesianClassifierImageFilterVIUS2ULFF___New_orig__():
  """itkBayesianClassifierImageFilterVIUS2ULFF___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULFF___New_orig__()

def itkBayesianClassifierImageFilterVIUS2ULFF_cast(*args):
  """itkBayesianClassifierImageFilterVIUS2ULFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS2ULFF"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2ULFF_cast(*args)

class itkBayesianClassifierImageFilterVIUS2USDD(itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUS2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUS2USDD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USDD_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USDD_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USDD_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USDD_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USDD_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USDD_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USDD_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USDD_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USDD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterID2ID2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USDD_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USDD_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageD2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USDD_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USDD_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USDD_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUS2USDD
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS2USDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USDD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUS2USDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USDD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUS2USDD
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUS2USDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUS2USDD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUS2USDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUS2USDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUS2USDD.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USDD_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUS2USDD)
itkBayesianClassifierImageFilterVIUS2USDD.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USDD_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUS2USDD)
itkBayesianClassifierImageFilterVIUS2USDD.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USDD_SetPriors,None,itkBayesianClassifierImageFilterVIUS2USDD)
itkBayesianClassifierImageFilterVIUS2USDD.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USDD_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUS2USDD)
itkBayesianClassifierImageFilterVIUS2USDD.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USDD_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUS2USDD)
itkBayesianClassifierImageFilterVIUS2USDD.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USDD_GetPointer,None,itkBayesianClassifierImageFilterVIUS2USDD)
itkBayesianClassifierImageFilterVIUS2USDD_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USDD_swigregister
itkBayesianClassifierImageFilterVIUS2USDD_swigregister(itkBayesianClassifierImageFilterVIUS2USDD)

def itkBayesianClassifierImageFilterVIUS2USDD___New_orig__():
  """itkBayesianClassifierImageFilterVIUS2USDD___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USDD___New_orig__()

def itkBayesianClassifierImageFilterVIUS2USDD_cast(*args):
  """itkBayesianClassifierImageFilterVIUS2USDD_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS2USDD"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USDD_cast(*args)

class itkBayesianClassifierImageFilterVIUS2USFF(itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUS2):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUS2USFF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterIF2IF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageF2 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUS2USFF
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS2USFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUS2USFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUS2USFF
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUS2USFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUS2USFF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUS2USFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUS2USFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUS2USFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUS2USFF)
itkBayesianClassifierImageFilterVIUS2USFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUS2USFF)
itkBayesianClassifierImageFilterVIUS2USFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_SetPriors,None,itkBayesianClassifierImageFilterVIUS2USFF)
itkBayesianClassifierImageFilterVIUS2USFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUS2USFF)
itkBayesianClassifierImageFilterVIUS2USFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUS2USFF)
itkBayesianClassifierImageFilterVIUS2USFF.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_GetPointer,None,itkBayesianClassifierImageFilterVIUS2USFF)
itkBayesianClassifierImageFilterVIUS2USFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_swigregister
itkBayesianClassifierImageFilterVIUS2USFF_swigregister(itkBayesianClassifierImageFilterVIUS2USFF)

def itkBayesianClassifierImageFilterVIUS2USFF___New_orig__():
  """itkBayesianClassifierImageFilterVIUS2USFF___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF___New_orig__()

def itkBayesianClassifierImageFilterVIUS2USFF_cast(*args):
  """itkBayesianClassifierImageFilterVIUS2USFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS2USFF"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS2USFF_cast(*args)

class itkBayesianClassifierImageFilterVIUS3UCDD(itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUC3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUS3UCDD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCDD_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCDD_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCDD_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCDD_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCDD_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCDD_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCDD_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCDD_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCDD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterID3ID3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCDD_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCDD_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageD3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCDD_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCDD_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCDD_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUS3UCDD
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS3UCDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCDD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUS3UCDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCDD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUS3UCDD
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUS3UCDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUS3UCDD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUS3UCDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUS3UCDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUS3UCDD.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCDD_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUS3UCDD)
itkBayesianClassifierImageFilterVIUS3UCDD.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCDD_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUS3UCDD)
itkBayesianClassifierImageFilterVIUS3UCDD.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCDD_SetPriors,None,itkBayesianClassifierImageFilterVIUS3UCDD)
itkBayesianClassifierImageFilterVIUS3UCDD.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCDD_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUS3UCDD)
itkBayesianClassifierImageFilterVIUS3UCDD.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCDD_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUS3UCDD)
itkBayesianClassifierImageFilterVIUS3UCDD.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCDD_GetPointer,None,itkBayesianClassifierImageFilterVIUS3UCDD)
itkBayesianClassifierImageFilterVIUS3UCDD_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCDD_swigregister
itkBayesianClassifierImageFilterVIUS3UCDD_swigregister(itkBayesianClassifierImageFilterVIUS3UCDD)

def itkBayesianClassifierImageFilterVIUS3UCDD___New_orig__():
  """itkBayesianClassifierImageFilterVIUS3UCDD___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCDD___New_orig__()

def itkBayesianClassifierImageFilterVIUS3UCDD_cast(*args):
  """itkBayesianClassifierImageFilterVIUS3UCDD_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS3UCDD"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCDD_cast(*args)

class itkBayesianClassifierImageFilterVIUS3UCFF(itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUC3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUS3UCFF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterIF3IF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUS3UCFF
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS3UCFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUS3UCFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUS3UCFF
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUS3UCFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUS3UCFF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUS3UCFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUS3UCFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUS3UCFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUS3UCFF)
itkBayesianClassifierImageFilterVIUS3UCFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUS3UCFF)
itkBayesianClassifierImageFilterVIUS3UCFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_SetPriors,None,itkBayesianClassifierImageFilterVIUS3UCFF)
itkBayesianClassifierImageFilterVIUS3UCFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUS3UCFF)
itkBayesianClassifierImageFilterVIUS3UCFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUS3UCFF)
itkBayesianClassifierImageFilterVIUS3UCFF.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_GetPointer,None,itkBayesianClassifierImageFilterVIUS3UCFF)
itkBayesianClassifierImageFilterVIUS3UCFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_swigregister
itkBayesianClassifierImageFilterVIUS3UCFF_swigregister(itkBayesianClassifierImageFilterVIUS3UCFF)

def itkBayesianClassifierImageFilterVIUS3UCFF___New_orig__():
  """itkBayesianClassifierImageFilterVIUS3UCFF___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF___New_orig__()

def itkBayesianClassifierImageFilterVIUS3UCFF_cast(*args):
  """itkBayesianClassifierImageFilterVIUS3UCFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS3UCFF"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3UCFF_cast(*args)

class itkBayesianClassifierImageFilterVIUS3ULDD(itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUL3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUS3ULDD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULDD_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULDD_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULDD_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULDD_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULDD_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULDD_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULDD_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULDD_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULDD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterID3ID3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULDD_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULDD_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageD3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULDD_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULDD_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULDD_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUS3ULDD
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS3ULDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULDD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUS3ULDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULDD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUS3ULDD
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUS3ULDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUS3ULDD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUS3ULDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUS3ULDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUS3ULDD.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULDD_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUS3ULDD)
itkBayesianClassifierImageFilterVIUS3ULDD.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULDD_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUS3ULDD)
itkBayesianClassifierImageFilterVIUS3ULDD.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULDD_SetPriors,None,itkBayesianClassifierImageFilterVIUS3ULDD)
itkBayesianClassifierImageFilterVIUS3ULDD.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULDD_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUS3ULDD)
itkBayesianClassifierImageFilterVIUS3ULDD.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULDD_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUS3ULDD)
itkBayesianClassifierImageFilterVIUS3ULDD.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULDD_GetPointer,None,itkBayesianClassifierImageFilterVIUS3ULDD)
itkBayesianClassifierImageFilterVIUS3ULDD_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULDD_swigregister
itkBayesianClassifierImageFilterVIUS3ULDD_swigregister(itkBayesianClassifierImageFilterVIUS3ULDD)

def itkBayesianClassifierImageFilterVIUS3ULDD___New_orig__():
  """itkBayesianClassifierImageFilterVIUS3ULDD___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULDD___New_orig__()

def itkBayesianClassifierImageFilterVIUS3ULDD_cast(*args):
  """itkBayesianClassifierImageFilterVIUS3ULDD_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS3ULDD"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULDD_cast(*args)

class itkBayesianClassifierImageFilterVIUS3ULFF(itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUL3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUS3ULFF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULFF_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULFF_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterIF3IF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULFF_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULFF_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULFF_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULFF_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULFF_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUS3ULFF
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS3ULFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULFF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUS3ULFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULFF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUS3ULFF
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUS3ULFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUS3ULFF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUS3ULFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUS3ULFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUS3ULFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULFF_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUS3ULFF)
itkBayesianClassifierImageFilterVIUS3ULFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULFF_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUS3ULFF)
itkBayesianClassifierImageFilterVIUS3ULFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULFF_SetPriors,None,itkBayesianClassifierImageFilterVIUS3ULFF)
itkBayesianClassifierImageFilterVIUS3ULFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULFF_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUS3ULFF)
itkBayesianClassifierImageFilterVIUS3ULFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULFF_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUS3ULFF)
itkBayesianClassifierImageFilterVIUS3ULFF.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULFF_GetPointer,None,itkBayesianClassifierImageFilterVIUS3ULFF)
itkBayesianClassifierImageFilterVIUS3ULFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULFF_swigregister
itkBayesianClassifierImageFilterVIUS3ULFF_swigregister(itkBayesianClassifierImageFilterVIUS3ULFF)

def itkBayesianClassifierImageFilterVIUS3ULFF___New_orig__():
  """itkBayesianClassifierImageFilterVIUS3ULFF___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULFF___New_orig__()

def itkBayesianClassifierImageFilterVIUS3ULFF_cast(*args):
  """itkBayesianClassifierImageFilterVIUS3ULFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS3ULFF"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3ULFF_cast(*args)

class itkBayesianClassifierImageFilterVIUS3USDD(itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUS3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUS3USDD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USDD_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USDD_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USDD_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USDD_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USDD_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USDD_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USDD_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USDD_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USDD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterID3ID3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USDD_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USDD_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageD3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USDD_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USDD_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USDD_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUS3USDD
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS3USDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USDD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUS3USDD"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USDD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUS3USDD
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUS3USDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUS3USDD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUS3USDD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUS3USDD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUS3USDD.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USDD_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUS3USDD)
itkBayesianClassifierImageFilterVIUS3USDD.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USDD_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUS3USDD)
itkBayesianClassifierImageFilterVIUS3USDD.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USDD_SetPriors,None,itkBayesianClassifierImageFilterVIUS3USDD)
itkBayesianClassifierImageFilterVIUS3USDD.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USDD_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUS3USDD)
itkBayesianClassifierImageFilterVIUS3USDD.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USDD_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUS3USDD)
itkBayesianClassifierImageFilterVIUS3USDD.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USDD_GetPointer,None,itkBayesianClassifierImageFilterVIUS3USDD)
itkBayesianClassifierImageFilterVIUS3USDD_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USDD_swigregister
itkBayesianClassifierImageFilterVIUS3USDD_swigregister(itkBayesianClassifierImageFilterVIUS3USDD)

def itkBayesianClassifierImageFilterVIUS3USDD___New_orig__():
  """itkBayesianClassifierImageFilterVIUS3USDD___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USDD___New_orig__()

def itkBayesianClassifierImageFilterVIUS3USDD_cast(*args):
  """itkBayesianClassifierImageFilterVIUS3USDD_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS3USDD"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USDD_cast(*args)

class itkBayesianClassifierImageFilterVIUS3USFF(itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUS3):
    """Proxy of C++ itkBayesianClassifierImageFilterVIUS3USFF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Dimension = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_Dimension
    UnsignedIntConvertibleToLabelsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_UnsignedIntConvertibleToLabelsCheck
    PosteriorsAdditiveOperatorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_PosteriorsAdditiveOperatorsCheck
    IntConvertibleToPosteriorsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_IntConvertibleToPosteriorsCheck
    InputHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_InputHasNumericTraitsCheck
    PosteriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_PosteriorsHasNumericTraitsCheck
    PriorsHasNumericTraitsCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_PriorsHasNumericTraitsCheck
    InputPriorsPosteriorsMultiplyOperatorCheck = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_InputPriorsPosteriorsMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSmoothingFilter(self, *args):
        """SetSmoothingFilter(self, itkImageToImageFilterIF3IF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_SetSmoothingFilter(self, *args)

    def GetSmoothingFilter(self):
        """GetSmoothingFilter(self)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_GetSmoothingFilter(self)

    def SetPriors(self, *args):
        """SetPriors(self, itkVectorImageF3 arg0)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_SetPriors(self, *args)

    def SetNumberOfSmoothingIterations(self, *args):
        """SetNumberOfSmoothingIterations(self, unsigned int _arg)"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_SetNumberOfSmoothingIterations(self, *args)

    def GetNumberOfSmoothingIterations(self):
        """GetNumberOfSmoothingIterations(self) -> unsigned int"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_GetNumberOfSmoothingIterations(self)

    __swig_destroy__ = _itkBayesianClassifierImageFilterPython.delete_itkBayesianClassifierImageFilterVIUS3USFF
    def cast(*args):
        """cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS3USFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBayesianClassifierImageFilterVIUS3USFF"""
        return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierImageFilterVIUS3USFF
        
        Create a new object of the class itkBayesianClassifierImageFilterVIUS3USFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBayesianClassifierImageFilterVIUS3USFF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBayesianClassifierImageFilterVIUS3USFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBayesianClassifierImageFilterVIUS3USFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBayesianClassifierImageFilterVIUS3USFF.SetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_SetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUS3USFF)
itkBayesianClassifierImageFilterVIUS3USFF.GetSmoothingFilter = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_GetSmoothingFilter,None,itkBayesianClassifierImageFilterVIUS3USFF)
itkBayesianClassifierImageFilterVIUS3USFF.SetPriors = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_SetPriors,None,itkBayesianClassifierImageFilterVIUS3USFF)
itkBayesianClassifierImageFilterVIUS3USFF.SetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_SetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUS3USFF)
itkBayesianClassifierImageFilterVIUS3USFF.GetNumberOfSmoothingIterations = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_GetNumberOfSmoothingIterations,None,itkBayesianClassifierImageFilterVIUS3USFF)
itkBayesianClassifierImageFilterVIUS3USFF.GetPointer = new_instancemethod(_itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_GetPointer,None,itkBayesianClassifierImageFilterVIUS3USFF)
itkBayesianClassifierImageFilterVIUS3USFF_swigregister = _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_swigregister
itkBayesianClassifierImageFilterVIUS3USFF_swigregister(itkBayesianClassifierImageFilterVIUS3USFF)

def itkBayesianClassifierImageFilterVIUS3USFF___New_orig__():
  """itkBayesianClassifierImageFilterVIUS3USFF___New_orig__()"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF___New_orig__()

def itkBayesianClassifierImageFilterVIUS3USFF_cast(*args):
  """itkBayesianClassifierImageFilterVIUS3USFF_cast(itkLightObject obj) -> itkBayesianClassifierImageFilterVIUS3USFF"""
  return _itkBayesianClassifierImageFilterPython.itkBayesianClassifierImageFilterVIUS3USFF_cast(*args)



