# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkMeanSquaresImageToImageMetricPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkMeanSquaresImageToImageMetricPython', [dirname(__file__)])
        except ImportError:
            import _itkMeanSquaresImageToImageMetricPython
            return _itkMeanSquaresImageToImageMetricPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkMeanSquaresImageToImageMetricPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkMeanSquaresImageToImageMetricPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkMeanSquaresImageToImageMetricPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import pyBasePython
import vnl_matrixPython
import itkFixedArrayPython
import itkVectorPython
import vnl_vector_refPython
import itkImageToImageMetricPython
import itkPointPython
import ITKRegionsPython
import ITKCommonBasePython
import itkEventObjectsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkTransformPython
import itkArray2DPython
import itkArrayPython
import itkImagePython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkSpatialObjectBasePython
import itkSpatialObjectPropertyPython
import itkScalableAffineTransformPython
import itkAffineTransformPython
import itkMatrixOffsetTransformBasePython
import itkAffineGeometryFramePython
import itkBoundingBoxPython
import itkMapContainerPython
import itkVectorContainerPython
import itkContinuousIndexPython
import itkLevelSetPython
import ITKCostFunctionsPython
import vnl_least_squares_functionPython
import vnl_cost_functionPython
import vnl_unary_functionPython
import itkInterpolateImageFunctionPython
import itkImageFunctionPython
import itkFunctionBasePython
def itkMeanSquaresImageToImageMetricID3ID3_New():
  return itkMeanSquaresImageToImageMetricID3ID3.New()

def itkMeanSquaresImageToImageMetricID2ID2_New():
  return itkMeanSquaresImageToImageMetricID2ID2.New()

def itkMeanSquaresImageToImageMetricIF3IF3_New():
  return itkMeanSquaresImageToImageMetricIF3IF3.New()

def itkMeanSquaresImageToImageMetricIF2IF2_New():
  return itkMeanSquaresImageToImageMetricIF2IF2.New()

def itkMeanSquaresImageToImageMetricIUS3IUS3_New():
  return itkMeanSquaresImageToImageMetricIUS3IUS3.New()

def itkMeanSquaresImageToImageMetricIUS2IUS2_New():
  return itkMeanSquaresImageToImageMetricIUS2IUS2.New()

def itkMeanSquaresImageToImageMetricIUL3IUL3_New():
  return itkMeanSquaresImageToImageMetricIUL3IUL3.New()

def itkMeanSquaresImageToImageMetricIUL2IUL2_New():
  return itkMeanSquaresImageToImageMetricIUL2IUL2.New()

def itkMeanSquaresImageToImageMetricIUC3IUC3_New():
  return itkMeanSquaresImageToImageMetricIUC3IUC3.New()

def itkMeanSquaresImageToImageMetricIUC2IUC2_New():
  return itkMeanSquaresImageToImageMetricIUC2IUC2.New()

class itkMeanSquaresImageToImageMetricID2ID2(itkImageToImageMetricPython.itkImageToImageMetricID2ID2):
    """Proxy of C++ itkMeanSquaresImageToImageMetricID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    MovingImageDimension = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID2ID2_MovingImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricID2ID2"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMeanSquaresImageToImageMetricID2ID2"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricID2ID2
        
        Create a new object of the class itkMeanSquaresImageToImageMetricID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMeanSquaresImageToImageMetricID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMeanSquaresImageToImageMetricID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeanSquaresImageToImageMetricID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeanSquaresImageToImageMetricID2ID2.GetPointer = new_instancemethod(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID2ID2_GetPointer,None,itkMeanSquaresImageToImageMetricID2ID2)
itkMeanSquaresImageToImageMetricID2ID2_swigregister = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID2ID2_swigregister
itkMeanSquaresImageToImageMetricID2ID2_swigregister(itkMeanSquaresImageToImageMetricID2ID2)

def itkMeanSquaresImageToImageMetricID2ID2___New_orig__():
  """itkMeanSquaresImageToImageMetricID2ID2___New_orig__()"""
  return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID2ID2___New_orig__()

def itkMeanSquaresImageToImageMetricID2ID2_cast(*args):
  """itkMeanSquaresImageToImageMetricID2ID2_cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricID2ID2"""
  return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID2ID2_cast(*args)

class itkMeanSquaresImageToImageMetricID3ID3(itkImageToImageMetricPython.itkImageToImageMetricID3ID3):
    """Proxy of C++ itkMeanSquaresImageToImageMetricID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    MovingImageDimension = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID3ID3_MovingImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricID3ID3"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMeanSquaresImageToImageMetricID3ID3"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricID3ID3
        
        Create a new object of the class itkMeanSquaresImageToImageMetricID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMeanSquaresImageToImageMetricID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMeanSquaresImageToImageMetricID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeanSquaresImageToImageMetricID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeanSquaresImageToImageMetricID3ID3.GetPointer = new_instancemethod(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID3ID3_GetPointer,None,itkMeanSquaresImageToImageMetricID3ID3)
itkMeanSquaresImageToImageMetricID3ID3_swigregister = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID3ID3_swigregister
itkMeanSquaresImageToImageMetricID3ID3_swigregister(itkMeanSquaresImageToImageMetricID3ID3)

def itkMeanSquaresImageToImageMetricID3ID3___New_orig__():
  """itkMeanSquaresImageToImageMetricID3ID3___New_orig__()"""
  return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID3ID3___New_orig__()

def itkMeanSquaresImageToImageMetricID3ID3_cast(*args):
  """itkMeanSquaresImageToImageMetricID3ID3_cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricID3ID3"""
  return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID3ID3_cast(*args)

class itkMeanSquaresImageToImageMetricIF2IF2(itkImageToImageMetricPython.itkImageToImageMetricIF2IF2):
    """Proxy of C++ itkMeanSquaresImageToImageMetricIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    MovingImageDimension = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF2IF2_MovingImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricIF2IF2"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMeanSquaresImageToImageMetricIF2IF2"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricIF2IF2
        
        Create a new object of the class itkMeanSquaresImageToImageMetricIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMeanSquaresImageToImageMetricIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMeanSquaresImageToImageMetricIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeanSquaresImageToImageMetricIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeanSquaresImageToImageMetricIF2IF2.GetPointer = new_instancemethod(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF2IF2_GetPointer,None,itkMeanSquaresImageToImageMetricIF2IF2)
itkMeanSquaresImageToImageMetricIF2IF2_swigregister = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF2IF2_swigregister
itkMeanSquaresImageToImageMetricIF2IF2_swigregister(itkMeanSquaresImageToImageMetricIF2IF2)

def itkMeanSquaresImageToImageMetricIF2IF2___New_orig__():
  """itkMeanSquaresImageToImageMetricIF2IF2___New_orig__()"""
  return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF2IF2___New_orig__()

def itkMeanSquaresImageToImageMetricIF2IF2_cast(*args):
  """itkMeanSquaresImageToImageMetricIF2IF2_cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricIF2IF2"""
  return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF2IF2_cast(*args)

class itkMeanSquaresImageToImageMetricIF3IF3(itkImageToImageMetricPython.itkImageToImageMetricIF3IF3):
    """Proxy of C++ itkMeanSquaresImageToImageMetricIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    MovingImageDimension = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF3IF3_MovingImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricIF3IF3"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMeanSquaresImageToImageMetricIF3IF3"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricIF3IF3
        
        Create a new object of the class itkMeanSquaresImageToImageMetricIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMeanSquaresImageToImageMetricIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMeanSquaresImageToImageMetricIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeanSquaresImageToImageMetricIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeanSquaresImageToImageMetricIF3IF3.GetPointer = new_instancemethod(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF3IF3_GetPointer,None,itkMeanSquaresImageToImageMetricIF3IF3)
itkMeanSquaresImageToImageMetricIF3IF3_swigregister = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF3IF3_swigregister
itkMeanSquaresImageToImageMetricIF3IF3_swigregister(itkMeanSquaresImageToImageMetricIF3IF3)

def itkMeanSquaresImageToImageMetricIF3IF3___New_orig__():
  """itkMeanSquaresImageToImageMetricIF3IF3___New_orig__()"""
  return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF3IF3___New_orig__()

def itkMeanSquaresImageToImageMetricIF3IF3_cast(*args):
  """itkMeanSquaresImageToImageMetricIF3IF3_cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricIF3IF3"""
  return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF3IF3_cast(*args)

class itkMeanSquaresImageToImageMetricIUC2IUC2(itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2):
    """Proxy of C++ itkMeanSquaresImageToImageMetricIUC2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    MovingImageDimension = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC2IUC2_MovingImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricIUC2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricIUC2IUC2"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMeanSquaresImageToImageMetricIUC2IUC2"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricIUC2IUC2
        
        Create a new object of the class itkMeanSquaresImageToImageMetricIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMeanSquaresImageToImageMetricIUC2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMeanSquaresImageToImageMetricIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeanSquaresImageToImageMetricIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeanSquaresImageToImageMetricIUC2IUC2.GetPointer = new_instancemethod(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC2IUC2_GetPointer,None,itkMeanSquaresImageToImageMetricIUC2IUC2)
itkMeanSquaresImageToImageMetricIUC2IUC2_swigregister = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC2IUC2_swigregister
itkMeanSquaresImageToImageMetricIUC2IUC2_swigregister(itkMeanSquaresImageToImageMetricIUC2IUC2)

def itkMeanSquaresImageToImageMetricIUC2IUC2___New_orig__():
  """itkMeanSquaresImageToImageMetricIUC2IUC2___New_orig__()"""
  return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC2IUC2___New_orig__()

def itkMeanSquaresImageToImageMetricIUC2IUC2_cast(*args):
  """itkMeanSquaresImageToImageMetricIUC2IUC2_cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricIUC2IUC2"""
  return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC2IUC2_cast(*args)

class itkMeanSquaresImageToImageMetricIUC3IUC3(itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3):
    """Proxy of C++ itkMeanSquaresImageToImageMetricIUC3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    MovingImageDimension = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC3IUC3_MovingImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricIUC3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricIUC3IUC3"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMeanSquaresImageToImageMetricIUC3IUC3"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricIUC3IUC3
        
        Create a new object of the class itkMeanSquaresImageToImageMetricIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMeanSquaresImageToImageMetricIUC3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMeanSquaresImageToImageMetricIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeanSquaresImageToImageMetricIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeanSquaresImageToImageMetricIUC3IUC3.GetPointer = new_instancemethod(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC3IUC3_GetPointer,None,itkMeanSquaresImageToImageMetricIUC3IUC3)
itkMeanSquaresImageToImageMetricIUC3IUC3_swigregister = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC3IUC3_swigregister
itkMeanSquaresImageToImageMetricIUC3IUC3_swigregister(itkMeanSquaresImageToImageMetricIUC3IUC3)

def itkMeanSquaresImageToImageMetricIUC3IUC3___New_orig__():
  """itkMeanSquaresImageToImageMetricIUC3IUC3___New_orig__()"""
  return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC3IUC3___New_orig__()

def itkMeanSquaresImageToImageMetricIUC3IUC3_cast(*args):
  """itkMeanSquaresImageToImageMetricIUC3IUC3_cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricIUC3IUC3"""
  return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC3IUC3_cast(*args)

class itkMeanSquaresImageToImageMetricIUL2IUL2(itkImageToImageMetricPython.itkImageToImageMetricIUL2IUL2):
    """Proxy of C++ itkMeanSquaresImageToImageMetricIUL2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    MovingImageDimension = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUL2IUL2_MovingImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUL2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricIUL2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricIUL2IUL2"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUL2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMeanSquaresImageToImageMetricIUL2IUL2"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUL2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricIUL2IUL2
        
        Create a new object of the class itkMeanSquaresImageToImageMetricIUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMeanSquaresImageToImageMetricIUL2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMeanSquaresImageToImageMetricIUL2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeanSquaresImageToImageMetricIUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeanSquaresImageToImageMetricIUL2IUL2.GetPointer = new_instancemethod(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUL2IUL2_GetPointer,None,itkMeanSquaresImageToImageMetricIUL2IUL2)
itkMeanSquaresImageToImageMetricIUL2IUL2_swigregister = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUL2IUL2_swigregister
itkMeanSquaresImageToImageMetricIUL2IUL2_swigregister(itkMeanSquaresImageToImageMetricIUL2IUL2)

def itkMeanSquaresImageToImageMetricIUL2IUL2___New_orig__():
  """itkMeanSquaresImageToImageMetricIUL2IUL2___New_orig__()"""
  return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUL2IUL2___New_orig__()

def itkMeanSquaresImageToImageMetricIUL2IUL2_cast(*args):
  """itkMeanSquaresImageToImageMetricIUL2IUL2_cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricIUL2IUL2"""
  return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUL2IUL2_cast(*args)

class itkMeanSquaresImageToImageMetricIUL3IUL3(itkImageToImageMetricPython.itkImageToImageMetricIUL3IUL3):
    """Proxy of C++ itkMeanSquaresImageToImageMetricIUL3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    MovingImageDimension = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUL3IUL3_MovingImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUL3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricIUL3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricIUL3IUL3"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUL3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMeanSquaresImageToImageMetricIUL3IUL3"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUL3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricIUL3IUL3
        
        Create a new object of the class itkMeanSquaresImageToImageMetricIUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMeanSquaresImageToImageMetricIUL3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMeanSquaresImageToImageMetricIUL3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeanSquaresImageToImageMetricIUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeanSquaresImageToImageMetricIUL3IUL3.GetPointer = new_instancemethod(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUL3IUL3_GetPointer,None,itkMeanSquaresImageToImageMetricIUL3IUL3)
itkMeanSquaresImageToImageMetricIUL3IUL3_swigregister = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUL3IUL3_swigregister
itkMeanSquaresImageToImageMetricIUL3IUL3_swigregister(itkMeanSquaresImageToImageMetricIUL3IUL3)

def itkMeanSquaresImageToImageMetricIUL3IUL3___New_orig__():
  """itkMeanSquaresImageToImageMetricIUL3IUL3___New_orig__()"""
  return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUL3IUL3___New_orig__()

def itkMeanSquaresImageToImageMetricIUL3IUL3_cast(*args):
  """itkMeanSquaresImageToImageMetricIUL3IUL3_cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricIUL3IUL3"""
  return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUL3IUL3_cast(*args)

class itkMeanSquaresImageToImageMetricIUS2IUS2(itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2):
    """Proxy of C++ itkMeanSquaresImageToImageMetricIUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    MovingImageDimension = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS2IUS2_MovingImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricIUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricIUS2IUS2"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMeanSquaresImageToImageMetricIUS2IUS2"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricIUS2IUS2
        
        Create a new object of the class itkMeanSquaresImageToImageMetricIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMeanSquaresImageToImageMetricIUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMeanSquaresImageToImageMetricIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeanSquaresImageToImageMetricIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeanSquaresImageToImageMetricIUS2IUS2.GetPointer = new_instancemethod(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS2IUS2_GetPointer,None,itkMeanSquaresImageToImageMetricIUS2IUS2)
itkMeanSquaresImageToImageMetricIUS2IUS2_swigregister = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS2IUS2_swigregister
itkMeanSquaresImageToImageMetricIUS2IUS2_swigregister(itkMeanSquaresImageToImageMetricIUS2IUS2)

def itkMeanSquaresImageToImageMetricIUS2IUS2___New_orig__():
  """itkMeanSquaresImageToImageMetricIUS2IUS2___New_orig__()"""
  return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS2IUS2___New_orig__()

def itkMeanSquaresImageToImageMetricIUS2IUS2_cast(*args):
  """itkMeanSquaresImageToImageMetricIUS2IUS2_cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricIUS2IUS2"""
  return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS2IUS2_cast(*args)

class itkMeanSquaresImageToImageMetricIUS3IUS3(itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3):
    """Proxy of C++ itkMeanSquaresImageToImageMetricIUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    MovingImageDimension = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS3IUS3_MovingImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricIUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricIUS3IUS3"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMeanSquaresImageToImageMetricIUS3IUS3"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricIUS3IUS3
        
        Create a new object of the class itkMeanSquaresImageToImageMetricIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMeanSquaresImageToImageMetricIUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMeanSquaresImageToImageMetricIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeanSquaresImageToImageMetricIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeanSquaresImageToImageMetricIUS3IUS3.GetPointer = new_instancemethod(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS3IUS3_GetPointer,None,itkMeanSquaresImageToImageMetricIUS3IUS3)
itkMeanSquaresImageToImageMetricIUS3IUS3_swigregister = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS3IUS3_swigregister
itkMeanSquaresImageToImageMetricIUS3IUS3_swigregister(itkMeanSquaresImageToImageMetricIUS3IUS3)

def itkMeanSquaresImageToImageMetricIUS3IUS3___New_orig__():
  """itkMeanSquaresImageToImageMetricIUS3IUS3___New_orig__()"""
  return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS3IUS3___New_orig__()

def itkMeanSquaresImageToImageMetricIUS3IUS3_cast(*args):
  """itkMeanSquaresImageToImageMetricIUS3IUS3_cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricIUS3IUS3"""
  return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS3IUS3_cast(*args)



