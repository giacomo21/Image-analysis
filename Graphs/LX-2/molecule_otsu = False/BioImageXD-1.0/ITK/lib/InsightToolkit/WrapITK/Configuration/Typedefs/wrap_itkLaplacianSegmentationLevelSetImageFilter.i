// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkLaplacianSegmentationLevelSetImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkLaplacianSegmentationLevelSetImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkLaplacianSegmentationLevelSetImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkLaplacianSegmentationLevelSetImageFilterJava
#endif
#ifdef SWIGLUA
%module itkLaplacianSegmentationLevelSetImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkLaplacianSegmentationLevelSetImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkLaplacianSegmentationLevelSetImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkLaplacianSegmentationLevelSetImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkLaplacianSegmentationLevelSetImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkLaplacianSegmentationLevelSetImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkLaplacianSegmentationLevelSetImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkLaplacianSegmentationLevelSetImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkLaplacianSegmentationLevelSetImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkLaplacianSegmentationLevelSetImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkLaplacianSegmentationLevelSetImageFilterPython
#endif
#ifdef SWIGR
%module itkLaplacianSegmentationLevelSetImageFilterR
#endif
#ifdef SWIGRUBY
%module itkLaplacianSegmentationLevelSetImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkLaplacianSegmentationLevelSetImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkLaplacianSegmentationLevelSetImageFilterTcl
#endif
#ifdef SWIGXML
%module itkLaplacianSegmentationLevelSetImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Numerics.includes"
#include "LevelSet.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkSegmentationLevelSetImageFilter.i


%include itk.i
%include wrap_itkLaplacianSegmentationLevelSetImageFilter_ext.i


 class itkLaplacianSegmentationLevelSetImageFilterID2ID2D : public itkSegmentationLevelSetImageFilterID2ID2D {
   public:
     virtual char const * GetNameOfClass() const;
     static itkLaplacianSegmentationLevelSetImageFilterID2ID2D_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
   private:
     itkLaplacianSegmentationLevelSetImageFilterID2ID2D(itkLaplacianSegmentationLevelSetImageFilterID2ID2D const & arg0);
     void operator=(itkLaplacianSegmentationLevelSetImageFilterID2ID2D const & arg0);
   protected:
     ~itkLaplacianSegmentationLevelSetImageFilterID2ID2D();
     itkLaplacianSegmentationLevelSetImageFilterID2ID2D();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkLaplacianSegmentationLevelSetImageFilterID2ID2D_Pointer {
   public:
     itkLaplacianSegmentationLevelSetImageFilterID2ID2D_Pointer();
     itkLaplacianSegmentationLevelSetImageFilterID2ID2D_Pointer(itkLaplacianSegmentationLevelSetImageFilterID2ID2D_Pointer const & p);
     itkLaplacianSegmentationLevelSetImageFilterID2ID2D_Pointer(itkLaplacianSegmentationLevelSetImageFilterID2ID2D * p);
     ~itkLaplacianSegmentationLevelSetImageFilterID2ID2D_Pointer();
     itkLaplacianSegmentationLevelSetImageFilterID2ID2D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLaplacianSegmentationLevelSetImageFilterID2ID2D * GetPointer() const;
     bool operator<(itkLaplacianSegmentationLevelSetImageFilterID2ID2D_Pointer const & r) const;
     bool operator>(itkLaplacianSegmentationLevelSetImageFilterID2ID2D_Pointer const & r) const;
     bool operator<=(itkLaplacianSegmentationLevelSetImageFilterID2ID2D_Pointer const & r) const;
     bool operator>=(itkLaplacianSegmentationLevelSetImageFilterID2ID2D_Pointer const & r) const;
     itkLaplacianSegmentationLevelSetImageFilterID2ID2D_Pointer & operator=(itkLaplacianSegmentationLevelSetImageFilterID2ID2D_Pointer const & r);
     itkLaplacianSegmentationLevelSetImageFilterID2ID2D_Pointer & operator=(itkLaplacianSegmentationLevelSetImageFilterID2ID2D * r);
     itkLaplacianSegmentationLevelSetImageFilterID2ID2D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLaplacianSegmentationLevelSetImageFilterID3ID3D : public itkSegmentationLevelSetImageFilterID3ID3D {
   public:
     virtual char const * GetNameOfClass() const;
     static itkLaplacianSegmentationLevelSetImageFilterID3ID3D_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
   private:
     itkLaplacianSegmentationLevelSetImageFilterID3ID3D(itkLaplacianSegmentationLevelSetImageFilterID3ID3D const & arg0);
     void operator=(itkLaplacianSegmentationLevelSetImageFilterID3ID3D const & arg0);
   protected:
     ~itkLaplacianSegmentationLevelSetImageFilterID3ID3D();
     itkLaplacianSegmentationLevelSetImageFilterID3ID3D();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkLaplacianSegmentationLevelSetImageFilterID3ID3D_Pointer {
   public:
     itkLaplacianSegmentationLevelSetImageFilterID3ID3D_Pointer();
     itkLaplacianSegmentationLevelSetImageFilterID3ID3D_Pointer(itkLaplacianSegmentationLevelSetImageFilterID3ID3D_Pointer const & p);
     itkLaplacianSegmentationLevelSetImageFilterID3ID3D_Pointer(itkLaplacianSegmentationLevelSetImageFilterID3ID3D * p);
     ~itkLaplacianSegmentationLevelSetImageFilterID3ID3D_Pointer();
     itkLaplacianSegmentationLevelSetImageFilterID3ID3D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLaplacianSegmentationLevelSetImageFilterID3ID3D * GetPointer() const;
     bool operator<(itkLaplacianSegmentationLevelSetImageFilterID3ID3D_Pointer const & r) const;
     bool operator>(itkLaplacianSegmentationLevelSetImageFilterID3ID3D_Pointer const & r) const;
     bool operator<=(itkLaplacianSegmentationLevelSetImageFilterID3ID3D_Pointer const & r) const;
     bool operator>=(itkLaplacianSegmentationLevelSetImageFilterID3ID3D_Pointer const & r) const;
     itkLaplacianSegmentationLevelSetImageFilterID3ID3D_Pointer & operator=(itkLaplacianSegmentationLevelSetImageFilterID3ID3D_Pointer const & r);
     itkLaplacianSegmentationLevelSetImageFilterID3ID3D_Pointer & operator=(itkLaplacianSegmentationLevelSetImageFilterID3ID3D * r);
     itkLaplacianSegmentationLevelSetImageFilterID3ID3D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLaplacianSegmentationLevelSetImageFilterIF2IF2F : public itkSegmentationLevelSetImageFilterIF2IF2F {
   public:
     virtual char const * GetNameOfClass() const;
     static itkLaplacianSegmentationLevelSetImageFilterIF2IF2F_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
   private:
     itkLaplacianSegmentationLevelSetImageFilterIF2IF2F(itkLaplacianSegmentationLevelSetImageFilterIF2IF2F const & arg0);
     void operator=(itkLaplacianSegmentationLevelSetImageFilterIF2IF2F const & arg0);
   protected:
     ~itkLaplacianSegmentationLevelSetImageFilterIF2IF2F();
     itkLaplacianSegmentationLevelSetImageFilterIF2IF2F();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkLaplacianSegmentationLevelSetImageFilterIF2IF2F_Pointer {
   public:
     itkLaplacianSegmentationLevelSetImageFilterIF2IF2F_Pointer();
     itkLaplacianSegmentationLevelSetImageFilterIF2IF2F_Pointer(itkLaplacianSegmentationLevelSetImageFilterIF2IF2F_Pointer const & p);
     itkLaplacianSegmentationLevelSetImageFilterIF2IF2F_Pointer(itkLaplacianSegmentationLevelSetImageFilterIF2IF2F * p);
     ~itkLaplacianSegmentationLevelSetImageFilterIF2IF2F_Pointer();
     itkLaplacianSegmentationLevelSetImageFilterIF2IF2F * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLaplacianSegmentationLevelSetImageFilterIF2IF2F * GetPointer() const;
     bool operator<(itkLaplacianSegmentationLevelSetImageFilterIF2IF2F_Pointer const & r) const;
     bool operator>(itkLaplacianSegmentationLevelSetImageFilterIF2IF2F_Pointer const & r) const;
     bool operator<=(itkLaplacianSegmentationLevelSetImageFilterIF2IF2F_Pointer const & r) const;
     bool operator>=(itkLaplacianSegmentationLevelSetImageFilterIF2IF2F_Pointer const & r) const;
     itkLaplacianSegmentationLevelSetImageFilterIF2IF2F_Pointer & operator=(itkLaplacianSegmentationLevelSetImageFilterIF2IF2F_Pointer const & r);
     itkLaplacianSegmentationLevelSetImageFilterIF2IF2F_Pointer & operator=(itkLaplacianSegmentationLevelSetImageFilterIF2IF2F * r);
     itkLaplacianSegmentationLevelSetImageFilterIF2IF2F * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLaplacianSegmentationLevelSetImageFilterIF3IF3F : public itkSegmentationLevelSetImageFilterIF3IF3F {
   public:
     virtual char const * GetNameOfClass() const;
     static itkLaplacianSegmentationLevelSetImageFilterIF3IF3F_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
   private:
     itkLaplacianSegmentationLevelSetImageFilterIF3IF3F(itkLaplacianSegmentationLevelSetImageFilterIF3IF3F const & arg0);
     void operator=(itkLaplacianSegmentationLevelSetImageFilterIF3IF3F const & arg0);
   protected:
     ~itkLaplacianSegmentationLevelSetImageFilterIF3IF3F();
     itkLaplacianSegmentationLevelSetImageFilterIF3IF3F();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkLaplacianSegmentationLevelSetImageFilterIF3IF3F_Pointer {
   public:
     itkLaplacianSegmentationLevelSetImageFilterIF3IF3F_Pointer();
     itkLaplacianSegmentationLevelSetImageFilterIF3IF3F_Pointer(itkLaplacianSegmentationLevelSetImageFilterIF3IF3F_Pointer const & p);
     itkLaplacianSegmentationLevelSetImageFilterIF3IF3F_Pointer(itkLaplacianSegmentationLevelSetImageFilterIF3IF3F * p);
     ~itkLaplacianSegmentationLevelSetImageFilterIF3IF3F_Pointer();
     itkLaplacianSegmentationLevelSetImageFilterIF3IF3F * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLaplacianSegmentationLevelSetImageFilterIF3IF3F * GetPointer() const;
     bool operator<(itkLaplacianSegmentationLevelSetImageFilterIF3IF3F_Pointer const & r) const;
     bool operator>(itkLaplacianSegmentationLevelSetImageFilterIF3IF3F_Pointer const & r) const;
     bool operator<=(itkLaplacianSegmentationLevelSetImageFilterIF3IF3F_Pointer const & r) const;
     bool operator>=(itkLaplacianSegmentationLevelSetImageFilterIF3IF3F_Pointer const & r) const;
     itkLaplacianSegmentationLevelSetImageFilterIF3IF3F_Pointer & operator=(itkLaplacianSegmentationLevelSetImageFilterIF3IF3F_Pointer const & r);
     itkLaplacianSegmentationLevelSetImageFilterIF3IF3F_Pointer & operator=(itkLaplacianSegmentationLevelSetImageFilterIF3IF3F * r);
     itkLaplacianSegmentationLevelSetImageFilterIF3IF3F * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


