# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkImageToImageFilterBPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkImageToImageFilterBPython', [dirname(__file__)])
        except ImportError:
            import _itkImageToImageFilterBPython
            return _itkImageToImageFilterBPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkImageToImageFilterBPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkImageToImageFilterBPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkImageToImageFilterBPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKRegionsPython
import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
def itkImageToImageFilterICF3ICF2_New():
  return itkImageToImageFilterICF3ICF2.New()

def itkImageToImageFilterIRGBUS3IRGBUS2_New():
  return itkImageToImageFilterIRGBUS3IRGBUS2.New()

def itkImageToImageFilterID3ID2_New():
  return itkImageToImageFilterID3ID2.New()

def itkImageToImageFilterIF3IF2_New():
  return itkImageToImageFilterIF3IF2.New()

def itkImageToImageFilterIUS3IUS2_New():
  return itkImageToImageFilterIUS3IUS2.New()

def itkImageToImageFilterIUL3IUL2_New():
  return itkImageToImageFilterIUL3IUL2.New()

def itkImageToImageFilterIUC3IUC2_New():
  return itkImageToImageFilterIUC3IUC2.New()

def itkImageToImageFilterICF2ICF3_New():
  return itkImageToImageFilterICF2ICF3.New()

def itkImageToImageFilterIRGBUS2IRGBUS3_New():
  return itkImageToImageFilterIRGBUS2IRGBUS3.New()

def itkImageToImageFilterID2ID3_New():
  return itkImageToImageFilterID2ID3.New()

def itkImageToImageFilterIF2IF3_New():
  return itkImageToImageFilterIF2IF3.New()

def itkImageToImageFilterIUS2IUS3_New():
  return itkImageToImageFilterIUS2IUS3.New()

def itkImageToImageFilterIUL2IUL3_New():
  return itkImageToImageFilterIUL2IUL3.New()

def itkImageToImageFilterIUC2IUC3_New():
  return itkImageToImageFilterIUC2IUC3.New()

def itkImageToImageFilterISSRTD33ID3_New():
  return itkImageToImageFilterISSRTD33ID3.New()

def itkImageToImageFilterID3ISSRTD33_New():
  return itkImageToImageFilterID3ISSRTD33.New()

def itkImageToImageFilterISSRTD33IF3_New():
  return itkImageToImageFilterISSRTD33IF3.New()

def itkImageToImageFilterIF3ISSRTD33_New():
  return itkImageToImageFilterIF3ISSRTD33.New()

def itkImageToImageFilterISSRTD33IUS3_New():
  return itkImageToImageFilterISSRTD33IUS3.New()

def itkImageToImageFilterIUS3ISSRTD33_New():
  return itkImageToImageFilterIUS3ISSRTD33.New()

def itkImageToImageFilterISSRTD33IUL3_New():
  return itkImageToImageFilterISSRTD33IUL3.New()

def itkImageToImageFilterIUL3ISSRTD33_New():
  return itkImageToImageFilterIUL3ISSRTD33.New()

def itkImageToImageFilterISSRTD33IUC3_New():
  return itkImageToImageFilterISSRTD33IUC3.New()

def itkImageToImageFilterIUC3ISSRTD33_New():
  return itkImageToImageFilterIUC3ISSRTD33.New()

def itkImageToImageFilterISSRTD22ID2_New():
  return itkImageToImageFilterISSRTD22ID2.New()

def itkImageToImageFilterID2ISSRTD22_New():
  return itkImageToImageFilterID2ISSRTD22.New()

def itkImageToImageFilterISSRTD22IF2_New():
  return itkImageToImageFilterISSRTD22IF2.New()

def itkImageToImageFilterIF2ISSRTD22_New():
  return itkImageToImageFilterIF2ISSRTD22.New()

def itkImageToImageFilterISSRTD22IUS2_New():
  return itkImageToImageFilterISSRTD22IUS2.New()

def itkImageToImageFilterIUS2ISSRTD22_New():
  return itkImageToImageFilterIUS2ISSRTD22.New()

def itkImageToImageFilterISSRTD22IUL2_New():
  return itkImageToImageFilterISSRTD22IUL2.New()

def itkImageToImageFilterIUL2ISSRTD22_New():
  return itkImageToImageFilterIUL2ISSRTD22.New()

def itkImageToImageFilterISSRTD22IUC2_New():
  return itkImageToImageFilterISSRTD22IUC2.New()

def itkImageToImageFilterIUC2ISSRTD22_New():
  return itkImageToImageFilterIUC2ISSRTD22.New()

def itkImageToImageFilterICF3ID3_New():
  return itkImageToImageFilterICF3ID3.New()

def itkImageToImageFilterICF2ID2_New():
  return itkImageToImageFilterICF2ID2.New()

def itkImageToImageFilterICF3IF3_New():
  return itkImageToImageFilterICF3IF3.New()

def itkImageToImageFilterICF2IF2_New():
  return itkImageToImageFilterICF2IF2.New()

def itkImageToImageFilterID3ICF3_New():
  return itkImageToImageFilterID3ICF3.New()

def itkImageToImageFilterID2ICF2_New():
  return itkImageToImageFilterID2ICF2.New()

def itkImageToImageFilterIF3ICF3_New():
  return itkImageToImageFilterIF3ICF3.New()

def itkImageToImageFilterIF2ICF2_New():
  return itkImageToImageFilterIF2ICF2.New()

def itkImageToImageFilterID3ICVF33_New():
  return itkImageToImageFilterID3ICVF33.New()

def itkImageToImageFilterID2ICVF22_New():
  return itkImageToImageFilterID2ICVF22.New()

def itkImageToImageFilterID3IVF33_New():
  return itkImageToImageFilterID3IVF33.New()

def itkImageToImageFilterID2IVF22_New():
  return itkImageToImageFilterID2IVF22.New()

def itkImageToImageFilterIF3ICVF33_New():
  return itkImageToImageFilterIF3ICVF33.New()

def itkImageToImageFilterIF2ICVF22_New():
  return itkImageToImageFilterIF2ICVF22.New()

def itkImageToImageFilterIF3IVF33_New():
  return itkImageToImageFilterIF3IVF33.New()

def itkImageToImageFilterIF2IVF22_New():
  return itkImageToImageFilterIF2IVF22.New()

def itkImageToImageFilterIUS3ICVF33_New():
  return itkImageToImageFilterIUS3ICVF33.New()

def itkImageToImageFilterIUS2ICVF22_New():
  return itkImageToImageFilterIUS2ICVF22.New()

def itkImageToImageFilterIUS3IVF33_New():
  return itkImageToImageFilterIUS3IVF33.New()

def itkImageToImageFilterIUS2IVF22_New():
  return itkImageToImageFilterIUS2IVF22.New()

def itkImageToImageFilterIUL3ICVF33_New():
  return itkImageToImageFilterIUL3ICVF33.New()

def itkImageToImageFilterIUL2ICVF22_New():
  return itkImageToImageFilterIUL2ICVF22.New()

def itkImageToImageFilterIUL3IVF33_New():
  return itkImageToImageFilterIUL3IVF33.New()

def itkImageToImageFilterIUL2IVF22_New():
  return itkImageToImageFilterIUL2IVF22.New()

def itkImageToImageFilterIUC3ICVF33_New():
  return itkImageToImageFilterIUC3ICVF33.New()

def itkImageToImageFilterIUC2ICVF22_New():
  return itkImageToImageFilterIUC2ICVF22.New()

def itkImageToImageFilterIUC3IVF33_New():
  return itkImageToImageFilterIUC3IVF33.New()

def itkImageToImageFilterIUC2IVF22_New():
  return itkImageToImageFilterIUC2IVF22.New()

def itkImageToImageFilterICVF33ID3_New():
  return itkImageToImageFilterICVF33ID3.New()

def itkImageToImageFilterICVF22ID2_New():
  return itkImageToImageFilterICVF22ID2.New()

def itkImageToImageFilterICVF33IF3_New():
  return itkImageToImageFilterICVF33IF3.New()

def itkImageToImageFilterICVF22IF2_New():
  return itkImageToImageFilterICVF22IF2.New()

def itkImageToImageFilterICVF33IUS3_New():
  return itkImageToImageFilterICVF33IUS3.New()

def itkImageToImageFilterICVF22IUS2_New():
  return itkImageToImageFilterICVF22IUS2.New()

def itkImageToImageFilterICVF33IUL3_New():
  return itkImageToImageFilterICVF33IUL3.New()

def itkImageToImageFilterICVF22IUL2_New():
  return itkImageToImageFilterICVF22IUL2.New()

def itkImageToImageFilterICVF33IUC3_New():
  return itkImageToImageFilterICVF33IUC3.New()

def itkImageToImageFilterICVF22IUC2_New():
  return itkImageToImageFilterICVF22IUC2.New()

def itkImageToImageFilterIVF33ID3_New():
  return itkImageToImageFilterIVF33ID3.New()

def itkImageToImageFilterIVF22ID2_New():
  return itkImageToImageFilterIVF22ID2.New()

def itkImageToImageFilterIVF33IF3_New():
  return itkImageToImageFilterIVF33IF3.New()

def itkImageToImageFilterIVF22IF2_New():
  return itkImageToImageFilterIVF22IF2.New()

def itkImageToImageFilterIVF33IUS3_New():
  return itkImageToImageFilterIVF33IUS3.New()

def itkImageToImageFilterIVF22IUS2_New():
  return itkImageToImageFilterIVF22IUS2.New()

def itkImageToImageFilterIVF33IUL3_New():
  return itkImageToImageFilterIVF33IUL3.New()

def itkImageToImageFilterIVF22IUL2_New():
  return itkImageToImageFilterIVF22IUL2.New()

def itkImageToImageFilterIVF33IUC3_New():
  return itkImageToImageFilterIVF33IUC3.New()

def itkImageToImageFilterIVF22IUC2_New():
  return itkImageToImageFilterIVF22IUC2.New()

def itkImageToImageFilterID3VID3_New():
  return itkImageToImageFilterID3VID3.New()

def itkImageToImageFilterVID3ID3_New():
  return itkImageToImageFilterVID3ID3.New()

def itkImageToImageFilterIF3VID3_New():
  return itkImageToImageFilterIF3VID3.New()

def itkImageToImageFilterVID3IF3_New():
  return itkImageToImageFilterVID3IF3.New()

def itkImageToImageFilterIUS3VID3_New():
  return itkImageToImageFilterIUS3VID3.New()

def itkImageToImageFilterVID3IUS3_New():
  return itkImageToImageFilterVID3IUS3.New()

def itkImageToImageFilterIUL3VID3_New():
  return itkImageToImageFilterIUL3VID3.New()

def itkImageToImageFilterVID3IUL3_New():
  return itkImageToImageFilterVID3IUL3.New()

def itkImageToImageFilterIUC3VID3_New():
  return itkImageToImageFilterIUC3VID3.New()

def itkImageToImageFilterVID3IUC3_New():
  return itkImageToImageFilterVID3IUC3.New()

def itkImageToImageFilterID3VIF3_New():
  return itkImageToImageFilterID3VIF3.New()

def itkImageToImageFilterVIF3ID3_New():
  return itkImageToImageFilterVIF3ID3.New()

def itkImageToImageFilterIF3VIF3_New():
  return itkImageToImageFilterIF3VIF3.New()

def itkImageToImageFilterVIF3IF3_New():
  return itkImageToImageFilterVIF3IF3.New()

def itkImageToImageFilterIUS3VIF3_New():
  return itkImageToImageFilterIUS3VIF3.New()

def itkImageToImageFilterVIF3IUS3_New():
  return itkImageToImageFilterVIF3IUS3.New()

def itkImageToImageFilterIUL3VIF3_New():
  return itkImageToImageFilterIUL3VIF3.New()

def itkImageToImageFilterVIF3IUL3_New():
  return itkImageToImageFilterVIF3IUL3.New()

def itkImageToImageFilterIUC3VIF3_New():
  return itkImageToImageFilterIUC3VIF3.New()

def itkImageToImageFilterVIF3IUC3_New():
  return itkImageToImageFilterVIF3IUC3.New()

def itkImageToImageFilterID3VIUS3_New():
  return itkImageToImageFilterID3VIUS3.New()

def itkImageToImageFilterVIUS3ID3_New():
  return itkImageToImageFilterVIUS3ID3.New()

def itkImageToImageFilterIF3VIUS3_New():
  return itkImageToImageFilterIF3VIUS3.New()

def itkImageToImageFilterVIUS3IF3_New():
  return itkImageToImageFilterVIUS3IF3.New()

def itkImageToImageFilterIUS3VIUS3_New():
  return itkImageToImageFilterIUS3VIUS3.New()

def itkImageToImageFilterVIUS3IUS3_New():
  return itkImageToImageFilterVIUS3IUS3.New()

def itkImageToImageFilterIUL3VIUS3_New():
  return itkImageToImageFilterIUL3VIUS3.New()

def itkImageToImageFilterVIUS3IUL3_New():
  return itkImageToImageFilterVIUS3IUL3.New()

def itkImageToImageFilterIUC3VIUS3_New():
  return itkImageToImageFilterIUC3VIUS3.New()

def itkImageToImageFilterVIUS3IUC3_New():
  return itkImageToImageFilterVIUS3IUC3.New()

def itkImageToImageFilterID3VIUL3_New():
  return itkImageToImageFilterID3VIUL3.New()

def itkImageToImageFilterVIUL3ID3_New():
  return itkImageToImageFilterVIUL3ID3.New()

def itkImageToImageFilterIF3VIUL3_New():
  return itkImageToImageFilterIF3VIUL3.New()

def itkImageToImageFilterVIUL3IF3_New():
  return itkImageToImageFilterVIUL3IF3.New()

def itkImageToImageFilterIUS3VIUL3_New():
  return itkImageToImageFilterIUS3VIUL3.New()

def itkImageToImageFilterVIUL3IUS3_New():
  return itkImageToImageFilterVIUL3IUS3.New()

def itkImageToImageFilterIUL3VIUL3_New():
  return itkImageToImageFilterIUL3VIUL3.New()

def itkImageToImageFilterVIUL3IUL3_New():
  return itkImageToImageFilterVIUL3IUL3.New()

def itkImageToImageFilterIUC3VIUL3_New():
  return itkImageToImageFilterIUC3VIUL3.New()

def itkImageToImageFilterVIUL3IUC3_New():
  return itkImageToImageFilterVIUL3IUC3.New()

def itkImageToImageFilterID3VIUC3_New():
  return itkImageToImageFilterID3VIUC3.New()

def itkImageToImageFilterVIUC3ID3_New():
  return itkImageToImageFilterVIUC3ID3.New()

def itkImageToImageFilterIF3VIUC3_New():
  return itkImageToImageFilterIF3VIUC3.New()

def itkImageToImageFilterVIUC3IF3_New():
  return itkImageToImageFilterVIUC3IF3.New()

def itkImageToImageFilterIUS3VIUC3_New():
  return itkImageToImageFilterIUS3VIUC3.New()

def itkImageToImageFilterVIUC3IUS3_New():
  return itkImageToImageFilterVIUC3IUS3.New()

def itkImageToImageFilterIUL3VIUC3_New():
  return itkImageToImageFilterIUL3VIUC3.New()

def itkImageToImageFilterVIUC3IUL3_New():
  return itkImageToImageFilterVIUC3IUL3.New()

def itkImageToImageFilterIUC3VIUC3_New():
  return itkImageToImageFilterIUC3VIUC3.New()

def itkImageToImageFilterVIUC3IUC3_New():
  return itkImageToImageFilterVIUC3IUC3.New()

def itkImageToImageFilterID2VID2_New():
  return itkImageToImageFilterID2VID2.New()

def itkImageToImageFilterVID2ID2_New():
  return itkImageToImageFilterVID2ID2.New()

def itkImageToImageFilterIF2VID2_New():
  return itkImageToImageFilterIF2VID2.New()

def itkImageToImageFilterVID2IF2_New():
  return itkImageToImageFilterVID2IF2.New()

def itkImageToImageFilterIUS2VID2_New():
  return itkImageToImageFilterIUS2VID2.New()

def itkImageToImageFilterVID2IUS2_New():
  return itkImageToImageFilterVID2IUS2.New()

def itkImageToImageFilterIUL2VID2_New():
  return itkImageToImageFilterIUL2VID2.New()

def itkImageToImageFilterVID2IUL2_New():
  return itkImageToImageFilterVID2IUL2.New()

def itkImageToImageFilterIUC2VID2_New():
  return itkImageToImageFilterIUC2VID2.New()

def itkImageToImageFilterVID2IUC2_New():
  return itkImageToImageFilterVID2IUC2.New()

def itkImageToImageFilterID2VIF2_New():
  return itkImageToImageFilterID2VIF2.New()

def itkImageToImageFilterVIF2ID2_New():
  return itkImageToImageFilterVIF2ID2.New()

def itkImageToImageFilterIF2VIF2_New():
  return itkImageToImageFilterIF2VIF2.New()

def itkImageToImageFilterVIF2IF2_New():
  return itkImageToImageFilterVIF2IF2.New()

def itkImageToImageFilterIUS2VIF2_New():
  return itkImageToImageFilterIUS2VIF2.New()

def itkImageToImageFilterVIF2IUS2_New():
  return itkImageToImageFilterVIF2IUS2.New()

def itkImageToImageFilterIUL2VIF2_New():
  return itkImageToImageFilterIUL2VIF2.New()

def itkImageToImageFilterVIF2IUL2_New():
  return itkImageToImageFilterVIF2IUL2.New()

def itkImageToImageFilterIUC2VIF2_New():
  return itkImageToImageFilterIUC2VIF2.New()

def itkImageToImageFilterVIF2IUC2_New():
  return itkImageToImageFilterVIF2IUC2.New()

def itkImageToImageFilterID2VIUS2_New():
  return itkImageToImageFilterID2VIUS2.New()

def itkImageToImageFilterVIUS2ID2_New():
  return itkImageToImageFilterVIUS2ID2.New()

def itkImageToImageFilterIF2VIUS2_New():
  return itkImageToImageFilterIF2VIUS2.New()

def itkImageToImageFilterVIUS2IF2_New():
  return itkImageToImageFilterVIUS2IF2.New()

def itkImageToImageFilterIUS2VIUS2_New():
  return itkImageToImageFilterIUS2VIUS2.New()

def itkImageToImageFilterVIUS2IUS2_New():
  return itkImageToImageFilterVIUS2IUS2.New()

def itkImageToImageFilterIUL2VIUS2_New():
  return itkImageToImageFilterIUL2VIUS2.New()

def itkImageToImageFilterVIUS2IUL2_New():
  return itkImageToImageFilterVIUS2IUL2.New()

def itkImageToImageFilterIUC2VIUS2_New():
  return itkImageToImageFilterIUC2VIUS2.New()

def itkImageToImageFilterVIUS2IUC2_New():
  return itkImageToImageFilterVIUS2IUC2.New()

def itkImageToImageFilterID2VIUL2_New():
  return itkImageToImageFilterID2VIUL2.New()

def itkImageToImageFilterVIUL2ID2_New():
  return itkImageToImageFilterVIUL2ID2.New()

def itkImageToImageFilterIF2VIUL2_New():
  return itkImageToImageFilterIF2VIUL2.New()

def itkImageToImageFilterVIUL2IF2_New():
  return itkImageToImageFilterVIUL2IF2.New()

def itkImageToImageFilterIUS2VIUL2_New():
  return itkImageToImageFilterIUS2VIUL2.New()

def itkImageToImageFilterVIUL2IUS2_New():
  return itkImageToImageFilterVIUL2IUS2.New()

def itkImageToImageFilterIUL2VIUL2_New():
  return itkImageToImageFilterIUL2VIUL2.New()

def itkImageToImageFilterVIUL2IUL2_New():
  return itkImageToImageFilterVIUL2IUL2.New()

def itkImageToImageFilterIUC2VIUL2_New():
  return itkImageToImageFilterIUC2VIUL2.New()

def itkImageToImageFilterVIUL2IUC2_New():
  return itkImageToImageFilterVIUL2IUC2.New()

def itkImageToImageFilterID2VIUC2_New():
  return itkImageToImageFilterID2VIUC2.New()

def itkImageToImageFilterVIUC2ID2_New():
  return itkImageToImageFilterVIUC2ID2.New()

def itkImageToImageFilterIF2VIUC2_New():
  return itkImageToImageFilterIF2VIUC2.New()

def itkImageToImageFilterVIUC2IF2_New():
  return itkImageToImageFilterVIUC2IF2.New()

def itkImageToImageFilterIUS2VIUC2_New():
  return itkImageToImageFilterIUS2VIUC2.New()

def itkImageToImageFilterVIUC2IUS2_New():
  return itkImageToImageFilterVIUC2IUS2.New()

def itkImageToImageFilterIUL2VIUC2_New():
  return itkImageToImageFilterIUL2VIUC2.New()

def itkImageToImageFilterVIUC2IUL2_New():
  return itkImageToImageFilterVIUC2IUL2.New()

def itkImageToImageFilterIUC2VIUC2_New():
  return itkImageToImageFilterIUC2VIUC2.New()

def itkImageToImageFilterVIUC2IUC2_New():
  return itkImageToImageFilterVIUC2IUC2.New()

def itkImageToImageFilterIRGBAUS3ID3_New():
  return itkImageToImageFilterIRGBAUS3ID3.New()

def itkImageToImageFilterIRGBAUS2ID2_New():
  return itkImageToImageFilterIRGBAUS2ID2.New()

def itkImageToImageFilterIRGBAUS3IF3_New():
  return itkImageToImageFilterIRGBAUS3IF3.New()

def itkImageToImageFilterIRGBAUS2IF2_New():
  return itkImageToImageFilterIRGBAUS2IF2.New()

def itkImageToImageFilterIRGBAUS3IUS3_New():
  return itkImageToImageFilterIRGBAUS3IUS3.New()

def itkImageToImageFilterIRGBAUS2IUS2_New():
  return itkImageToImageFilterIRGBAUS2IUS2.New()

def itkImageToImageFilterIRGBAUS3IUC3_New():
  return itkImageToImageFilterIRGBAUS3IUC3.New()

def itkImageToImageFilterIRGBAUS2IUC2_New():
  return itkImageToImageFilterIRGBAUS2IUC2.New()

def itkImageToImageFilterIRGBAUS3IUL3_New():
  return itkImageToImageFilterIRGBAUS3IUL3.New()

def itkImageToImageFilterIRGBAUS2IUL2_New():
  return itkImageToImageFilterIRGBAUS2IUL2.New()

def itkImageToImageFilterID3IRGBAUS3_New():
  return itkImageToImageFilterID3IRGBAUS3.New()

def itkImageToImageFilterID2IRGBAUS2_New():
  return itkImageToImageFilterID2IRGBAUS2.New()

def itkImageToImageFilterIF3IRGBAUS3_New():
  return itkImageToImageFilterIF3IRGBAUS3.New()

def itkImageToImageFilterIF2IRGBAUS2_New():
  return itkImageToImageFilterIF2IRGBAUS2.New()

def itkImageToImageFilterIUS3IRGBAUS3_New():
  return itkImageToImageFilterIUS3IRGBAUS3.New()

def itkImageToImageFilterIUS2IRGBAUS2_New():
  return itkImageToImageFilterIUS2IRGBAUS2.New()

def itkImageToImageFilterIUC3IRGBAUS3_New():
  return itkImageToImageFilterIUC3IRGBAUS3.New()

def itkImageToImageFilterIUC2IRGBAUS2_New():
  return itkImageToImageFilterIUC2IRGBAUS2.New()

def itkImageToImageFilterIUL3IRGBAUS3_New():
  return itkImageToImageFilterIUL3IRGBAUS3.New()

def itkImageToImageFilterIUL2IRGBAUS2_New():
  return itkImageToImageFilterIUL2IRGBAUS2.New()

def itkImageToImageFilterIRGBUS3ID3_New():
  return itkImageToImageFilterIRGBUS3ID3.New()

def itkImageToImageFilterIRGBUS2ID2_New():
  return itkImageToImageFilterIRGBUS2ID2.New()

def itkImageToImageFilterIRGBUS3IF3_New():
  return itkImageToImageFilterIRGBUS3IF3.New()

def itkImageToImageFilterIRGBUS2IF2_New():
  return itkImageToImageFilterIRGBUS2IF2.New()

def itkImageToImageFilterIRGBUS3IUS3_New():
  return itkImageToImageFilterIRGBUS3IUS3.New()

def itkImageToImageFilterIRGBUS2IUS2_New():
  return itkImageToImageFilterIRGBUS2IUS2.New()

def itkImageToImageFilterIRGBUS3IUC3_New():
  return itkImageToImageFilterIRGBUS3IUC3.New()

def itkImageToImageFilterIRGBUS2IUC2_New():
  return itkImageToImageFilterIRGBUS2IUC2.New()

def itkImageToImageFilterIRGBUS3IUL3_New():
  return itkImageToImageFilterIRGBUS3IUL3.New()

def itkImageToImageFilterIRGBUS2IUL2_New():
  return itkImageToImageFilterIRGBUS2IUL2.New()

def itkImageToImageFilterID3IRGBUS3_New():
  return itkImageToImageFilterID3IRGBUS3.New()

def itkImageToImageFilterID2IRGBUS2_New():
  return itkImageToImageFilterID2IRGBUS2.New()

def itkImageToImageFilterIF3IRGBUS3_New():
  return itkImageToImageFilterIF3IRGBUS3.New()

def itkImageToImageFilterIF2IRGBUS2_New():
  return itkImageToImageFilterIF2IRGBUS2.New()

def itkImageToImageFilterIUS3IRGBUS3_New():
  return itkImageToImageFilterIUS3IRGBUS3.New()

def itkImageToImageFilterIUS2IRGBUS2_New():
  return itkImageToImageFilterIUS2IRGBUS2.New()

def itkImageToImageFilterIUC3IRGBUS3_New():
  return itkImageToImageFilterIUC3IRGBUS3.New()

def itkImageToImageFilterIUC2IRGBUS2_New():
  return itkImageToImageFilterIUC2IRGBUS2.New()

def itkImageToImageFilterIUL3IRGBUS3_New():
  return itkImageToImageFilterIUL3IRGBUS3.New()

def itkImageToImageFilterIUL2IRGBUS2_New():
  return itkImageToImageFilterIUL2IRGBUS2.New()

def itkImageToImageFilterICF3ICF3_New():
  return itkImageToImageFilterICF3ICF3.New()

def itkImageToImageFilterICF2ICF2_New():
  return itkImageToImageFilterICF2ICF2.New()

class itkImageToImageFilterICF2ICF2(itkImageSourcePython.itkImageSourceICF2):
    """Proxy of C++ itkImageToImageFilterICF2ICF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageCF2 image)
        SetInput(self, unsigned int arg0, itkImageCF2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageCF2
        GetInput(self, unsigned int idx) -> itkImageCF2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageCF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageCF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterICF2ICF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterICF2ICF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterICF2ICF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterICF2ICF2
        
        Create a new object of the class itkImageToImageFilterICF2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterICF2ICF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterICF2ICF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterICF2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterICF2ICF2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2_SetInput,None,itkImageToImageFilterICF2ICF2)
itkImageToImageFilterICF2ICF2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2_GetInput,None,itkImageToImageFilterICF2ICF2)
itkImageToImageFilterICF2ICF2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2_PushBackInput,None,itkImageToImageFilterICF2ICF2)
itkImageToImageFilterICF2ICF2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2_PopBackInput,None,itkImageToImageFilterICF2ICF2)
itkImageToImageFilterICF2ICF2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2_PushFrontInput,None,itkImageToImageFilterICF2ICF2)
itkImageToImageFilterICF2ICF2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2_PopFrontInput,None,itkImageToImageFilterICF2ICF2)
itkImageToImageFilterICF2ICF2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2_GetPointer,None,itkImageToImageFilterICF2ICF2)
itkImageToImageFilterICF2ICF2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2_swigregister
itkImageToImageFilterICF2ICF2_swigregister(itkImageToImageFilterICF2ICF2)

def itkImageToImageFilterICF2ICF2_cast(*args):
  """itkImageToImageFilterICF2ICF2_cast(itkLightObject obj) -> itkImageToImageFilterICF2ICF2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2_cast(*args)

class itkImageToImageFilterICF2ICF3(itkImageSourcePython.itkImageSourceICF3):
    """Proxy of C++ itkImageToImageFilterICF2ICF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageCF2 image)
        SetInput(self, unsigned int arg0, itkImageCF2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageCF2
        GetInput(self, unsigned int idx) -> itkImageCF2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageCF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageCF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterICF2ICF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterICF2ICF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterICF2ICF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterICF2ICF3
        
        Create a new object of the class itkImageToImageFilterICF2ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterICF2ICF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterICF2ICF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterICF2ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterICF2ICF3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF3_SetInput,None,itkImageToImageFilterICF2ICF3)
itkImageToImageFilterICF2ICF3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF3_GetInput,None,itkImageToImageFilterICF2ICF3)
itkImageToImageFilterICF2ICF3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF3_PushBackInput,None,itkImageToImageFilterICF2ICF3)
itkImageToImageFilterICF2ICF3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF3_PopBackInput,None,itkImageToImageFilterICF2ICF3)
itkImageToImageFilterICF2ICF3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF3_PushFrontInput,None,itkImageToImageFilterICF2ICF3)
itkImageToImageFilterICF2ICF3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF3_PopFrontInput,None,itkImageToImageFilterICF2ICF3)
itkImageToImageFilterICF2ICF3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF3_GetPointer,None,itkImageToImageFilterICF2ICF3)
itkImageToImageFilterICF2ICF3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF3_swigregister
itkImageToImageFilterICF2ICF3_swigregister(itkImageToImageFilterICF2ICF3)

def itkImageToImageFilterICF2ICF3_cast(*args):
  """itkImageToImageFilterICF2ICF3_cast(itkLightObject obj) -> itkImageToImageFilterICF2ICF3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF3_cast(*args)

class itkImageToImageFilterICF2ID2(itkImageSourcePython.itkImageSourceID2):
    """Proxy of C++ itkImageToImageFilterICF2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICF2ID2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICF2ID2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageCF2 image)
        SetInput(self, unsigned int arg0, itkImageCF2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2ID2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageCF2
        GetInput(self, unsigned int idx) -> itkImageCF2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2ID2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageCF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2ID2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2ID2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageCF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2ID2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2ID2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterICF2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterICF2ID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterICF2ID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterICF2ID2
        
        Create a new object of the class itkImageToImageFilterICF2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterICF2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterICF2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterICF2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterICF2ID2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF2ID2_SetInput,None,itkImageToImageFilterICF2ID2)
itkImageToImageFilterICF2ID2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF2ID2_GetInput,None,itkImageToImageFilterICF2ID2)
itkImageToImageFilterICF2ID2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF2ID2_PushBackInput,None,itkImageToImageFilterICF2ID2)
itkImageToImageFilterICF2ID2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF2ID2_PopBackInput,None,itkImageToImageFilterICF2ID2)
itkImageToImageFilterICF2ID2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF2ID2_PushFrontInput,None,itkImageToImageFilterICF2ID2)
itkImageToImageFilterICF2ID2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF2ID2_PopFrontInput,None,itkImageToImageFilterICF2ID2)
itkImageToImageFilterICF2ID2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF2ID2_GetPointer,None,itkImageToImageFilterICF2ID2)
itkImageToImageFilterICF2ID2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterICF2ID2_swigregister
itkImageToImageFilterICF2ID2_swigregister(itkImageToImageFilterICF2ID2)

def itkImageToImageFilterICF2ID2_cast(*args):
  """itkImageToImageFilterICF2ID2_cast(itkLightObject obj) -> itkImageToImageFilterICF2ID2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterICF2ID2_cast(*args)

class itkImageToImageFilterICF2IF2(itkImageSourcePython.itkImageSourceIF2):
    """Proxy of C++ itkImageToImageFilterICF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICF2IF2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICF2IF2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageCF2 image)
        SetInput(self, unsigned int arg0, itkImageCF2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2IF2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageCF2
        GetInput(self, unsigned int idx) -> itkImageCF2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2IF2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageCF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2IF2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2IF2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageCF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2IF2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2IF2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterICF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterICF2IF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterICF2IF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterICF2IF2
        
        Create a new object of the class itkImageToImageFilterICF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterICF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterICF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterICF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterICF2IF2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF2IF2_SetInput,None,itkImageToImageFilterICF2IF2)
itkImageToImageFilterICF2IF2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF2IF2_GetInput,None,itkImageToImageFilterICF2IF2)
itkImageToImageFilterICF2IF2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF2IF2_PushBackInput,None,itkImageToImageFilterICF2IF2)
itkImageToImageFilterICF2IF2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF2IF2_PopBackInput,None,itkImageToImageFilterICF2IF2)
itkImageToImageFilterICF2IF2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF2IF2_PushFrontInput,None,itkImageToImageFilterICF2IF2)
itkImageToImageFilterICF2IF2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF2IF2_PopFrontInput,None,itkImageToImageFilterICF2IF2)
itkImageToImageFilterICF2IF2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF2IF2_GetPointer,None,itkImageToImageFilterICF2IF2)
itkImageToImageFilterICF2IF2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterICF2IF2_swigregister
itkImageToImageFilterICF2IF2_swigregister(itkImageToImageFilterICF2IF2)

def itkImageToImageFilterICF2IF2_cast(*args):
  """itkImageToImageFilterICF2IF2_cast(itkLightObject obj) -> itkImageToImageFilterICF2IF2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterICF2IF2_cast(*args)

class itkImageToImageFilterICF3ICF2(itkImageSourcePython.itkImageSourceICF2):
    """Proxy of C++ itkImageToImageFilterICF3ICF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageCF3 image)
        SetInput(self, unsigned int arg0, itkImageCF3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageCF3
        GetInput(self, unsigned int idx) -> itkImageCF3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageCF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageCF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterICF3ICF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterICF3ICF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterICF3ICF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterICF3ICF2
        
        Create a new object of the class itkImageToImageFilterICF3ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterICF3ICF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterICF3ICF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterICF3ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterICF3ICF2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF2_SetInput,None,itkImageToImageFilterICF3ICF2)
itkImageToImageFilterICF3ICF2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF2_GetInput,None,itkImageToImageFilterICF3ICF2)
itkImageToImageFilterICF3ICF2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF2_PushBackInput,None,itkImageToImageFilterICF3ICF2)
itkImageToImageFilterICF3ICF2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF2_PopBackInput,None,itkImageToImageFilterICF3ICF2)
itkImageToImageFilterICF3ICF2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF2_PushFrontInput,None,itkImageToImageFilterICF3ICF2)
itkImageToImageFilterICF3ICF2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF2_PopFrontInput,None,itkImageToImageFilterICF3ICF2)
itkImageToImageFilterICF3ICF2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF2_GetPointer,None,itkImageToImageFilterICF3ICF2)
itkImageToImageFilterICF3ICF2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF2_swigregister
itkImageToImageFilterICF3ICF2_swigregister(itkImageToImageFilterICF3ICF2)

def itkImageToImageFilterICF3ICF2_cast(*args):
  """itkImageToImageFilterICF3ICF2_cast(itkLightObject obj) -> itkImageToImageFilterICF3ICF2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF2_cast(*args)

class itkImageToImageFilterICF3ICF3(itkImageSourcePython.itkImageSourceICF3):
    """Proxy of C++ itkImageToImageFilterICF3ICF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageCF3 image)
        SetInput(self, unsigned int arg0, itkImageCF3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageCF3
        GetInput(self, unsigned int idx) -> itkImageCF3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageCF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageCF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterICF3ICF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterICF3ICF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterICF3ICF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterICF3ICF3
        
        Create a new object of the class itkImageToImageFilterICF3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterICF3ICF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterICF3ICF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterICF3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterICF3ICF3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3_SetInput,None,itkImageToImageFilterICF3ICF3)
itkImageToImageFilterICF3ICF3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3_GetInput,None,itkImageToImageFilterICF3ICF3)
itkImageToImageFilterICF3ICF3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3_PushBackInput,None,itkImageToImageFilterICF3ICF3)
itkImageToImageFilterICF3ICF3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3_PopBackInput,None,itkImageToImageFilterICF3ICF3)
itkImageToImageFilterICF3ICF3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3_PushFrontInput,None,itkImageToImageFilterICF3ICF3)
itkImageToImageFilterICF3ICF3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3_PopFrontInput,None,itkImageToImageFilterICF3ICF3)
itkImageToImageFilterICF3ICF3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3_GetPointer,None,itkImageToImageFilterICF3ICF3)
itkImageToImageFilterICF3ICF3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3_swigregister
itkImageToImageFilterICF3ICF3_swigregister(itkImageToImageFilterICF3ICF3)

def itkImageToImageFilterICF3ICF3_cast(*args):
  """itkImageToImageFilterICF3ICF3_cast(itkLightObject obj) -> itkImageToImageFilterICF3ICF3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3_cast(*args)

class itkImageToImageFilterICF3ID3(itkImageSourcePython.itkImageSourceID3):
    """Proxy of C++ itkImageToImageFilterICF3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICF3ID3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICF3ID3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageCF3 image)
        SetInput(self, unsigned int arg0, itkImageCF3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3ID3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageCF3
        GetInput(self, unsigned int idx) -> itkImageCF3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3ID3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageCF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3ID3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3ID3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageCF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3ID3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3ID3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterICF3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterICF3ID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterICF3ID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterICF3ID3
        
        Create a new object of the class itkImageToImageFilterICF3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterICF3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterICF3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterICF3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterICF3ID3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF3ID3_SetInput,None,itkImageToImageFilterICF3ID3)
itkImageToImageFilterICF3ID3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF3ID3_GetInput,None,itkImageToImageFilterICF3ID3)
itkImageToImageFilterICF3ID3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF3ID3_PushBackInput,None,itkImageToImageFilterICF3ID3)
itkImageToImageFilterICF3ID3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF3ID3_PopBackInput,None,itkImageToImageFilterICF3ID3)
itkImageToImageFilterICF3ID3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF3ID3_PushFrontInput,None,itkImageToImageFilterICF3ID3)
itkImageToImageFilterICF3ID3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF3ID3_PopFrontInput,None,itkImageToImageFilterICF3ID3)
itkImageToImageFilterICF3ID3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF3ID3_GetPointer,None,itkImageToImageFilterICF3ID3)
itkImageToImageFilterICF3ID3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterICF3ID3_swigregister
itkImageToImageFilterICF3ID3_swigregister(itkImageToImageFilterICF3ID3)

def itkImageToImageFilterICF3ID3_cast(*args):
  """itkImageToImageFilterICF3ID3_cast(itkLightObject obj) -> itkImageToImageFilterICF3ID3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterICF3ID3_cast(*args)

class itkImageToImageFilterICF3IF3(itkImageSourcePython.itkImageSourceIF3):
    """Proxy of C++ itkImageToImageFilterICF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICF3IF3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICF3IF3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageCF3 image)
        SetInput(self, unsigned int arg0, itkImageCF3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3IF3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageCF3
        GetInput(self, unsigned int idx) -> itkImageCF3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3IF3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageCF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3IF3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3IF3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageCF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3IF3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3IF3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterICF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterICF3IF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterICF3IF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterICF3IF3
        
        Create a new object of the class itkImageToImageFilterICF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterICF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterICF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterICF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterICF3IF3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF3IF3_SetInput,None,itkImageToImageFilterICF3IF3)
itkImageToImageFilterICF3IF3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF3IF3_GetInput,None,itkImageToImageFilterICF3IF3)
itkImageToImageFilterICF3IF3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF3IF3_PushBackInput,None,itkImageToImageFilterICF3IF3)
itkImageToImageFilterICF3IF3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF3IF3_PopBackInput,None,itkImageToImageFilterICF3IF3)
itkImageToImageFilterICF3IF3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF3IF3_PushFrontInput,None,itkImageToImageFilterICF3IF3)
itkImageToImageFilterICF3IF3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF3IF3_PopFrontInput,None,itkImageToImageFilterICF3IF3)
itkImageToImageFilterICF3IF3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICF3IF3_GetPointer,None,itkImageToImageFilterICF3IF3)
itkImageToImageFilterICF3IF3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterICF3IF3_swigregister
itkImageToImageFilterICF3IF3_swigregister(itkImageToImageFilterICF3IF3)

def itkImageToImageFilterICF3IF3_cast(*args):
  """itkImageToImageFilterICF3IF3_cast(itkLightObject obj) -> itkImageToImageFilterICF3IF3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterICF3IF3_cast(*args)

class itkImageToImageFilterICVF22ID2(itkImageSourcePython.itkImageSourceID2):
    """Proxy of C++ itkImageToImageFilterICVF22ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICVF22ID2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICVF22ID2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageCVF22 image)
        SetInput(self, unsigned int arg0, itkImageCVF22 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22ID2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageCVF22
        GetInput(self, unsigned int idx) -> itkImageCVF22
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22ID2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageCVF22 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22ID2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22ID2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageCVF22 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22ID2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22ID2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterICVF22ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterICVF22ID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterICVF22ID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterICVF22ID2
        
        Create a new object of the class itkImageToImageFilterICVF22ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterICVF22ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterICVF22ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterICVF22ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterICVF22ID2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22ID2_SetInput,None,itkImageToImageFilterICVF22ID2)
itkImageToImageFilterICVF22ID2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22ID2_GetInput,None,itkImageToImageFilterICVF22ID2)
itkImageToImageFilterICVF22ID2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22ID2_PushBackInput,None,itkImageToImageFilterICVF22ID2)
itkImageToImageFilterICVF22ID2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22ID2_PopBackInput,None,itkImageToImageFilterICVF22ID2)
itkImageToImageFilterICVF22ID2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22ID2_PushFrontInput,None,itkImageToImageFilterICVF22ID2)
itkImageToImageFilterICVF22ID2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22ID2_PopFrontInput,None,itkImageToImageFilterICVF22ID2)
itkImageToImageFilterICVF22ID2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22ID2_GetPointer,None,itkImageToImageFilterICVF22ID2)
itkImageToImageFilterICVF22ID2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterICVF22ID2_swigregister
itkImageToImageFilterICVF22ID2_swigregister(itkImageToImageFilterICVF22ID2)

def itkImageToImageFilterICVF22ID2_cast(*args):
  """itkImageToImageFilterICVF22ID2_cast(itkLightObject obj) -> itkImageToImageFilterICVF22ID2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22ID2_cast(*args)

class itkImageToImageFilterICVF22IF2(itkImageSourcePython.itkImageSourceIF2):
    """Proxy of C++ itkImageToImageFilterICVF22IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IF2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IF2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageCVF22 image)
        SetInput(self, unsigned int arg0, itkImageCVF22 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IF2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageCVF22
        GetInput(self, unsigned int idx) -> itkImageCVF22
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IF2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageCVF22 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IF2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IF2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageCVF22 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IF2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IF2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterICVF22IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterICVF22IF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterICVF22IF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterICVF22IF2
        
        Create a new object of the class itkImageToImageFilterICVF22IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterICVF22IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterICVF22IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterICVF22IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterICVF22IF2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22IF2_SetInput,None,itkImageToImageFilterICVF22IF2)
itkImageToImageFilterICVF22IF2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22IF2_GetInput,None,itkImageToImageFilterICVF22IF2)
itkImageToImageFilterICVF22IF2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22IF2_PushBackInput,None,itkImageToImageFilterICVF22IF2)
itkImageToImageFilterICVF22IF2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22IF2_PopBackInput,None,itkImageToImageFilterICVF22IF2)
itkImageToImageFilterICVF22IF2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22IF2_PushFrontInput,None,itkImageToImageFilterICVF22IF2)
itkImageToImageFilterICVF22IF2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22IF2_PopFrontInput,None,itkImageToImageFilterICVF22IF2)
itkImageToImageFilterICVF22IF2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22IF2_GetPointer,None,itkImageToImageFilterICVF22IF2)
itkImageToImageFilterICVF22IF2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IF2_swigregister
itkImageToImageFilterICVF22IF2_swigregister(itkImageToImageFilterICVF22IF2)

def itkImageToImageFilterICVF22IF2_cast(*args):
  """itkImageToImageFilterICVF22IF2_cast(itkLightObject obj) -> itkImageToImageFilterICVF22IF2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IF2_cast(*args)

class itkImageToImageFilterICVF22IUC2(itkImageSourcePython.itkImageSourceIUC2):
    """Proxy of C++ itkImageToImageFilterICVF22IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUC2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUC2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageCVF22 image)
        SetInput(self, unsigned int arg0, itkImageCVF22 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUC2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageCVF22
        GetInput(self, unsigned int idx) -> itkImageCVF22
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUC2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageCVF22 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUC2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUC2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageCVF22 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUC2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUC2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterICVF22IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterICVF22IUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterICVF22IUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterICVF22IUC2
        
        Create a new object of the class itkImageToImageFilterICVF22IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterICVF22IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterICVF22IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterICVF22IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterICVF22IUC2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUC2_SetInput,None,itkImageToImageFilterICVF22IUC2)
itkImageToImageFilterICVF22IUC2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUC2_GetInput,None,itkImageToImageFilterICVF22IUC2)
itkImageToImageFilterICVF22IUC2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUC2_PushBackInput,None,itkImageToImageFilterICVF22IUC2)
itkImageToImageFilterICVF22IUC2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUC2_PopBackInput,None,itkImageToImageFilterICVF22IUC2)
itkImageToImageFilterICVF22IUC2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUC2_PushFrontInput,None,itkImageToImageFilterICVF22IUC2)
itkImageToImageFilterICVF22IUC2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUC2_PopFrontInput,None,itkImageToImageFilterICVF22IUC2)
itkImageToImageFilterICVF22IUC2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUC2_GetPointer,None,itkImageToImageFilterICVF22IUC2)
itkImageToImageFilterICVF22IUC2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUC2_swigregister
itkImageToImageFilterICVF22IUC2_swigregister(itkImageToImageFilterICVF22IUC2)

def itkImageToImageFilterICVF22IUC2_cast(*args):
  """itkImageToImageFilterICVF22IUC2_cast(itkLightObject obj) -> itkImageToImageFilterICVF22IUC2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUC2_cast(*args)

class itkImageToImageFilterICVF22IUL2(itkImageSourcePython.itkImageSourceIUL2):
    """Proxy of C++ itkImageToImageFilterICVF22IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUL2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUL2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageCVF22 image)
        SetInput(self, unsigned int arg0, itkImageCVF22 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUL2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageCVF22
        GetInput(self, unsigned int idx) -> itkImageCVF22
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUL2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageCVF22 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUL2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUL2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageCVF22 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUL2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUL2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterICVF22IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterICVF22IUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterICVF22IUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterICVF22IUL2
        
        Create a new object of the class itkImageToImageFilterICVF22IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterICVF22IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterICVF22IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterICVF22IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterICVF22IUL2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUL2_SetInput,None,itkImageToImageFilterICVF22IUL2)
itkImageToImageFilterICVF22IUL2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUL2_GetInput,None,itkImageToImageFilterICVF22IUL2)
itkImageToImageFilterICVF22IUL2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUL2_PushBackInput,None,itkImageToImageFilterICVF22IUL2)
itkImageToImageFilterICVF22IUL2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUL2_PopBackInput,None,itkImageToImageFilterICVF22IUL2)
itkImageToImageFilterICVF22IUL2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUL2_PushFrontInput,None,itkImageToImageFilterICVF22IUL2)
itkImageToImageFilterICVF22IUL2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUL2_PopFrontInput,None,itkImageToImageFilterICVF22IUL2)
itkImageToImageFilterICVF22IUL2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUL2_GetPointer,None,itkImageToImageFilterICVF22IUL2)
itkImageToImageFilterICVF22IUL2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUL2_swigregister
itkImageToImageFilterICVF22IUL2_swigregister(itkImageToImageFilterICVF22IUL2)

def itkImageToImageFilterICVF22IUL2_cast(*args):
  """itkImageToImageFilterICVF22IUL2_cast(itkLightObject obj) -> itkImageToImageFilterICVF22IUL2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUL2_cast(*args)

class itkImageToImageFilterICVF22IUS2(itkImageSourcePython.itkImageSourceIUS2):
    """Proxy of C++ itkImageToImageFilterICVF22IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageCVF22 image)
        SetInput(self, unsigned int arg0, itkImageCVF22 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageCVF22
        GetInput(self, unsigned int idx) -> itkImageCVF22
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageCVF22 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageCVF22 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterICVF22IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterICVF22IUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterICVF22IUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterICVF22IUS2
        
        Create a new object of the class itkImageToImageFilterICVF22IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterICVF22IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterICVF22IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterICVF22IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterICVF22IUS2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUS2_SetInput,None,itkImageToImageFilterICVF22IUS2)
itkImageToImageFilterICVF22IUS2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUS2_GetInput,None,itkImageToImageFilterICVF22IUS2)
itkImageToImageFilterICVF22IUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUS2_PushBackInput,None,itkImageToImageFilterICVF22IUS2)
itkImageToImageFilterICVF22IUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUS2_PopBackInput,None,itkImageToImageFilterICVF22IUS2)
itkImageToImageFilterICVF22IUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUS2_PushFrontInput,None,itkImageToImageFilterICVF22IUS2)
itkImageToImageFilterICVF22IUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUS2_PopFrontInput,None,itkImageToImageFilterICVF22IUS2)
itkImageToImageFilterICVF22IUS2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUS2_GetPointer,None,itkImageToImageFilterICVF22IUS2)
itkImageToImageFilterICVF22IUS2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUS2_swigregister
itkImageToImageFilterICVF22IUS2_swigregister(itkImageToImageFilterICVF22IUS2)

def itkImageToImageFilterICVF22IUS2_cast(*args):
  """itkImageToImageFilterICVF22IUS2_cast(itkLightObject obj) -> itkImageToImageFilterICVF22IUS2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUS2_cast(*args)

class itkImageToImageFilterICVF33ID3(itkImageSourcePython.itkImageSourceID3):
    """Proxy of C++ itkImageToImageFilterICVF33ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICVF33ID3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICVF33ID3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageCVF33 image)
        SetInput(self, unsigned int arg0, itkImageCVF33 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33ID3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageCVF33
        GetInput(self, unsigned int idx) -> itkImageCVF33
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33ID3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageCVF33 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33ID3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33ID3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageCVF33 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33ID3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33ID3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterICVF33ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterICVF33ID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterICVF33ID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterICVF33ID3
        
        Create a new object of the class itkImageToImageFilterICVF33ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterICVF33ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterICVF33ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterICVF33ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterICVF33ID3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33ID3_SetInput,None,itkImageToImageFilterICVF33ID3)
itkImageToImageFilterICVF33ID3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33ID3_GetInput,None,itkImageToImageFilterICVF33ID3)
itkImageToImageFilterICVF33ID3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33ID3_PushBackInput,None,itkImageToImageFilterICVF33ID3)
itkImageToImageFilterICVF33ID3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33ID3_PopBackInput,None,itkImageToImageFilterICVF33ID3)
itkImageToImageFilterICVF33ID3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33ID3_PushFrontInput,None,itkImageToImageFilterICVF33ID3)
itkImageToImageFilterICVF33ID3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33ID3_PopFrontInput,None,itkImageToImageFilterICVF33ID3)
itkImageToImageFilterICVF33ID3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33ID3_GetPointer,None,itkImageToImageFilterICVF33ID3)
itkImageToImageFilterICVF33ID3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterICVF33ID3_swigregister
itkImageToImageFilterICVF33ID3_swigregister(itkImageToImageFilterICVF33ID3)

def itkImageToImageFilterICVF33ID3_cast(*args):
  """itkImageToImageFilterICVF33ID3_cast(itkLightObject obj) -> itkImageToImageFilterICVF33ID3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33ID3_cast(*args)

class itkImageToImageFilterICVF33IF3(itkImageSourcePython.itkImageSourceIF3):
    """Proxy of C++ itkImageToImageFilterICVF33IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IF3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IF3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageCVF33 image)
        SetInput(self, unsigned int arg0, itkImageCVF33 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IF3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageCVF33
        GetInput(self, unsigned int idx) -> itkImageCVF33
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IF3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageCVF33 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IF3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IF3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageCVF33 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IF3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IF3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterICVF33IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterICVF33IF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterICVF33IF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterICVF33IF3
        
        Create a new object of the class itkImageToImageFilterICVF33IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterICVF33IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterICVF33IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterICVF33IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterICVF33IF3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33IF3_SetInput,None,itkImageToImageFilterICVF33IF3)
itkImageToImageFilterICVF33IF3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33IF3_GetInput,None,itkImageToImageFilterICVF33IF3)
itkImageToImageFilterICVF33IF3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33IF3_PushBackInput,None,itkImageToImageFilterICVF33IF3)
itkImageToImageFilterICVF33IF3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33IF3_PopBackInput,None,itkImageToImageFilterICVF33IF3)
itkImageToImageFilterICVF33IF3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33IF3_PushFrontInput,None,itkImageToImageFilterICVF33IF3)
itkImageToImageFilterICVF33IF3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33IF3_PopFrontInput,None,itkImageToImageFilterICVF33IF3)
itkImageToImageFilterICVF33IF3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33IF3_GetPointer,None,itkImageToImageFilterICVF33IF3)
itkImageToImageFilterICVF33IF3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IF3_swigregister
itkImageToImageFilterICVF33IF3_swigregister(itkImageToImageFilterICVF33IF3)

def itkImageToImageFilterICVF33IF3_cast(*args):
  """itkImageToImageFilterICVF33IF3_cast(itkLightObject obj) -> itkImageToImageFilterICVF33IF3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IF3_cast(*args)

class itkImageToImageFilterICVF33IUC3(itkImageSourcePython.itkImageSourceIUC3):
    """Proxy of C++ itkImageToImageFilterICVF33IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUC3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUC3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageCVF33 image)
        SetInput(self, unsigned int arg0, itkImageCVF33 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUC3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageCVF33
        GetInput(self, unsigned int idx) -> itkImageCVF33
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUC3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageCVF33 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUC3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUC3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageCVF33 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUC3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUC3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterICVF33IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterICVF33IUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterICVF33IUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterICVF33IUC3
        
        Create a new object of the class itkImageToImageFilterICVF33IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterICVF33IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterICVF33IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterICVF33IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterICVF33IUC3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUC3_SetInput,None,itkImageToImageFilterICVF33IUC3)
itkImageToImageFilterICVF33IUC3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUC3_GetInput,None,itkImageToImageFilterICVF33IUC3)
itkImageToImageFilterICVF33IUC3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUC3_PushBackInput,None,itkImageToImageFilterICVF33IUC3)
itkImageToImageFilterICVF33IUC3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUC3_PopBackInput,None,itkImageToImageFilterICVF33IUC3)
itkImageToImageFilterICVF33IUC3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUC3_PushFrontInput,None,itkImageToImageFilterICVF33IUC3)
itkImageToImageFilterICVF33IUC3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUC3_PopFrontInput,None,itkImageToImageFilterICVF33IUC3)
itkImageToImageFilterICVF33IUC3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUC3_GetPointer,None,itkImageToImageFilterICVF33IUC3)
itkImageToImageFilterICVF33IUC3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUC3_swigregister
itkImageToImageFilterICVF33IUC3_swigregister(itkImageToImageFilterICVF33IUC3)

def itkImageToImageFilterICVF33IUC3_cast(*args):
  """itkImageToImageFilterICVF33IUC3_cast(itkLightObject obj) -> itkImageToImageFilterICVF33IUC3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUC3_cast(*args)

class itkImageToImageFilterICVF33IUL3(itkImageSourcePython.itkImageSourceIUL3):
    """Proxy of C++ itkImageToImageFilterICVF33IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUL3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUL3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageCVF33 image)
        SetInput(self, unsigned int arg0, itkImageCVF33 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUL3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageCVF33
        GetInput(self, unsigned int idx) -> itkImageCVF33
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUL3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageCVF33 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUL3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUL3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageCVF33 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUL3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUL3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterICVF33IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterICVF33IUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterICVF33IUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterICVF33IUL3
        
        Create a new object of the class itkImageToImageFilterICVF33IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterICVF33IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterICVF33IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterICVF33IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterICVF33IUL3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUL3_SetInput,None,itkImageToImageFilterICVF33IUL3)
itkImageToImageFilterICVF33IUL3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUL3_GetInput,None,itkImageToImageFilterICVF33IUL3)
itkImageToImageFilterICVF33IUL3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUL3_PushBackInput,None,itkImageToImageFilterICVF33IUL3)
itkImageToImageFilterICVF33IUL3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUL3_PopBackInput,None,itkImageToImageFilterICVF33IUL3)
itkImageToImageFilterICVF33IUL3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUL3_PushFrontInput,None,itkImageToImageFilterICVF33IUL3)
itkImageToImageFilterICVF33IUL3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUL3_PopFrontInput,None,itkImageToImageFilterICVF33IUL3)
itkImageToImageFilterICVF33IUL3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUL3_GetPointer,None,itkImageToImageFilterICVF33IUL3)
itkImageToImageFilterICVF33IUL3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUL3_swigregister
itkImageToImageFilterICVF33IUL3_swigregister(itkImageToImageFilterICVF33IUL3)

def itkImageToImageFilterICVF33IUL3_cast(*args):
  """itkImageToImageFilterICVF33IUL3_cast(itkLightObject obj) -> itkImageToImageFilterICVF33IUL3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUL3_cast(*args)

class itkImageToImageFilterICVF33IUS3(itkImageSourcePython.itkImageSourceIUS3):
    """Proxy of C++ itkImageToImageFilterICVF33IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageCVF33 image)
        SetInput(self, unsigned int arg0, itkImageCVF33 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageCVF33
        GetInput(self, unsigned int idx) -> itkImageCVF33
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageCVF33 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageCVF33 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterICVF33IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterICVF33IUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterICVF33IUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterICVF33IUS3
        
        Create a new object of the class itkImageToImageFilterICVF33IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterICVF33IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterICVF33IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterICVF33IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterICVF33IUS3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUS3_SetInput,None,itkImageToImageFilterICVF33IUS3)
itkImageToImageFilterICVF33IUS3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUS3_GetInput,None,itkImageToImageFilterICVF33IUS3)
itkImageToImageFilterICVF33IUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUS3_PushBackInput,None,itkImageToImageFilterICVF33IUS3)
itkImageToImageFilterICVF33IUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUS3_PopBackInput,None,itkImageToImageFilterICVF33IUS3)
itkImageToImageFilterICVF33IUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUS3_PushFrontInput,None,itkImageToImageFilterICVF33IUS3)
itkImageToImageFilterICVF33IUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUS3_PopFrontInput,None,itkImageToImageFilterICVF33IUS3)
itkImageToImageFilterICVF33IUS3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUS3_GetPointer,None,itkImageToImageFilterICVF33IUS3)
itkImageToImageFilterICVF33IUS3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUS3_swigregister
itkImageToImageFilterICVF33IUS3_swigregister(itkImageToImageFilterICVF33IUS3)

def itkImageToImageFilterICVF33IUS3_cast(*args):
  """itkImageToImageFilterICVF33IUS3_cast(itkLightObject obj) -> itkImageToImageFilterICVF33IUS3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUS3_cast(*args)

class itkImageToImageFilterID2ICF2(itkImageSourcePython.itkImageSourceICF2):
    """Proxy of C++ itkImageToImageFilterID2ICF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID2ICF2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID2ICF2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD2 image)
        SetInput(self, unsigned int arg0, itkImageD2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ICF2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD2
        GetInput(self, unsigned int idx) -> itkImageD2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ICF2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ICF2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ICF2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ICF2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ICF2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterID2ICF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID2ICF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ICF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID2ICF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ICF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID2ICF2
        
        Create a new object of the class itkImageToImageFilterID2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID2ICF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID2ICF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID2ICF2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2ICF2_SetInput,None,itkImageToImageFilterID2ICF2)
itkImageToImageFilterID2ICF2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2ICF2_GetInput,None,itkImageToImageFilterID2ICF2)
itkImageToImageFilterID2ICF2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2ICF2_PushBackInput,None,itkImageToImageFilterID2ICF2)
itkImageToImageFilterID2ICF2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2ICF2_PopBackInput,None,itkImageToImageFilterID2ICF2)
itkImageToImageFilterID2ICF2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2ICF2_PushFrontInput,None,itkImageToImageFilterID2ICF2)
itkImageToImageFilterID2ICF2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2ICF2_PopFrontInput,None,itkImageToImageFilterID2ICF2)
itkImageToImageFilterID2ICF2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2ICF2_GetPointer,None,itkImageToImageFilterID2ICF2)
itkImageToImageFilterID2ICF2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterID2ICF2_swigregister
itkImageToImageFilterID2ICF2_swigregister(itkImageToImageFilterID2ICF2)

def itkImageToImageFilterID2ICF2_cast(*args):
  """itkImageToImageFilterID2ICF2_cast(itkLightObject obj) -> itkImageToImageFilterID2ICF2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterID2ICF2_cast(*args)

class itkImageToImageFilterID2ICVF22(itkImageSourcePython.itkImageSourceICVF22):
    """Proxy of C++ itkImageToImageFilterID2ICVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID2ICVF22_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID2ICVF22_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD2 image)
        SetInput(self, unsigned int arg0, itkImageD2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ICVF22_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD2
        GetInput(self, unsigned int idx) -> itkImageD2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ICVF22_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ICVF22_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ICVF22_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ICVF22_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ICVF22_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterID2ICVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID2ICVF22"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ICVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID2ICVF22"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ICVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID2ICVF22
        
        Create a new object of the class itkImageToImageFilterID2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID2ICVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID2ICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID2ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID2ICVF22.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2ICVF22_SetInput,None,itkImageToImageFilterID2ICVF22)
itkImageToImageFilterID2ICVF22.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2ICVF22_GetInput,None,itkImageToImageFilterID2ICVF22)
itkImageToImageFilterID2ICVF22.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2ICVF22_PushBackInput,None,itkImageToImageFilterID2ICVF22)
itkImageToImageFilterID2ICVF22.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2ICVF22_PopBackInput,None,itkImageToImageFilterID2ICVF22)
itkImageToImageFilterID2ICVF22.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2ICVF22_PushFrontInput,None,itkImageToImageFilterID2ICVF22)
itkImageToImageFilterID2ICVF22.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2ICVF22_PopFrontInput,None,itkImageToImageFilterID2ICVF22)
itkImageToImageFilterID2ICVF22.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2ICVF22_GetPointer,None,itkImageToImageFilterID2ICVF22)
itkImageToImageFilterID2ICVF22_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterID2ICVF22_swigregister
itkImageToImageFilterID2ICVF22_swigregister(itkImageToImageFilterID2ICVF22)

def itkImageToImageFilterID2ICVF22_cast(*args):
  """itkImageToImageFilterID2ICVF22_cast(itkLightObject obj) -> itkImageToImageFilterID2ICVF22"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterID2ICVF22_cast(*args)

class itkImageToImageFilterID2ID3(itkImageSourcePython.itkImageSourceID3):
    """Proxy of C++ itkImageToImageFilterID2ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID2ID3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID2ID3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD2 image)
        SetInput(self, unsigned int arg0, itkImageD2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ID3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD2
        GetInput(self, unsigned int idx) -> itkImageD2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ID3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ID3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ID3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ID3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ID3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterID2ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID2ID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID2ID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID2ID3
        
        Create a new object of the class itkImageToImageFilterID2ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID2ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID2ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID2ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID2ID3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2ID3_SetInput,None,itkImageToImageFilterID2ID3)
itkImageToImageFilterID2ID3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2ID3_GetInput,None,itkImageToImageFilterID2ID3)
itkImageToImageFilterID2ID3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2ID3_PushBackInput,None,itkImageToImageFilterID2ID3)
itkImageToImageFilterID2ID3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2ID3_PopBackInput,None,itkImageToImageFilterID2ID3)
itkImageToImageFilterID2ID3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2ID3_PushFrontInput,None,itkImageToImageFilterID2ID3)
itkImageToImageFilterID2ID3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2ID3_PopFrontInput,None,itkImageToImageFilterID2ID3)
itkImageToImageFilterID2ID3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2ID3_GetPointer,None,itkImageToImageFilterID2ID3)
itkImageToImageFilterID2ID3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterID2ID3_swigregister
itkImageToImageFilterID2ID3_swigregister(itkImageToImageFilterID2ID3)

def itkImageToImageFilterID2ID3_cast(*args):
  """itkImageToImageFilterID2ID3_cast(itkLightObject obj) -> itkImageToImageFilterID2ID3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterID2ID3_cast(*args)

class itkImageToImageFilterID2IRGBAUS2(itkImageSourcePython.itkImageSourceIRGBAUS2):
    """Proxy of C++ itkImageToImageFilterID2IRGBAUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBAUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBAUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD2 image)
        SetInput(self, unsigned int arg0, itkImageD2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBAUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD2
        GetInput(self, unsigned int idx) -> itkImageD2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBAUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBAUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBAUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBAUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBAUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterID2IRGBAUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID2IRGBAUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBAUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID2IRGBAUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBAUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID2IRGBAUS2
        
        Create a new object of the class itkImageToImageFilterID2IRGBAUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID2IRGBAUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID2IRGBAUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID2IRGBAUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID2IRGBAUS2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBAUS2_SetInput,None,itkImageToImageFilterID2IRGBAUS2)
itkImageToImageFilterID2IRGBAUS2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBAUS2_GetInput,None,itkImageToImageFilterID2IRGBAUS2)
itkImageToImageFilterID2IRGBAUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBAUS2_PushBackInput,None,itkImageToImageFilterID2IRGBAUS2)
itkImageToImageFilterID2IRGBAUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBAUS2_PopBackInput,None,itkImageToImageFilterID2IRGBAUS2)
itkImageToImageFilterID2IRGBAUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBAUS2_PushFrontInput,None,itkImageToImageFilterID2IRGBAUS2)
itkImageToImageFilterID2IRGBAUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBAUS2_PopFrontInput,None,itkImageToImageFilterID2IRGBAUS2)
itkImageToImageFilterID2IRGBAUS2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBAUS2_GetPointer,None,itkImageToImageFilterID2IRGBAUS2)
itkImageToImageFilterID2IRGBAUS2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBAUS2_swigregister
itkImageToImageFilterID2IRGBAUS2_swigregister(itkImageToImageFilterID2IRGBAUS2)

def itkImageToImageFilterID2IRGBAUS2_cast(*args):
  """itkImageToImageFilterID2IRGBAUS2_cast(itkLightObject obj) -> itkImageToImageFilterID2IRGBAUS2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBAUS2_cast(*args)

class itkImageToImageFilterID2IRGBUS2(itkImageSourcePython.itkImageSourceIRGBUS2):
    """Proxy of C++ itkImageToImageFilterID2IRGBUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD2 image)
        SetInput(self, unsigned int arg0, itkImageD2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD2
        GetInput(self, unsigned int idx) -> itkImageD2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterID2IRGBUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID2IRGBUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID2IRGBUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID2IRGBUS2
        
        Create a new object of the class itkImageToImageFilterID2IRGBUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID2IRGBUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID2IRGBUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID2IRGBUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID2IRGBUS2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBUS2_SetInput,None,itkImageToImageFilterID2IRGBUS2)
itkImageToImageFilterID2IRGBUS2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBUS2_GetInput,None,itkImageToImageFilterID2IRGBUS2)
itkImageToImageFilterID2IRGBUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBUS2_PushBackInput,None,itkImageToImageFilterID2IRGBUS2)
itkImageToImageFilterID2IRGBUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBUS2_PopBackInput,None,itkImageToImageFilterID2IRGBUS2)
itkImageToImageFilterID2IRGBUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBUS2_PushFrontInput,None,itkImageToImageFilterID2IRGBUS2)
itkImageToImageFilterID2IRGBUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBUS2_PopFrontInput,None,itkImageToImageFilterID2IRGBUS2)
itkImageToImageFilterID2IRGBUS2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBUS2_GetPointer,None,itkImageToImageFilterID2IRGBUS2)
itkImageToImageFilterID2IRGBUS2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBUS2_swigregister
itkImageToImageFilterID2IRGBUS2_swigregister(itkImageToImageFilterID2IRGBUS2)

def itkImageToImageFilterID2IRGBUS2_cast(*args):
  """itkImageToImageFilterID2IRGBUS2_cast(itkLightObject obj) -> itkImageToImageFilterID2IRGBUS2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBUS2_cast(*args)

class itkImageToImageFilterID2ISSRTD22(itkImageSourcePython.itkImageSourceISSRTD22):
    """Proxy of C++ itkImageToImageFilterID2ISSRTD22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID2ISSRTD22_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID2ISSRTD22_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD2 image)
        SetInput(self, unsigned int arg0, itkImageD2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ISSRTD22_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD2
        GetInput(self, unsigned int idx) -> itkImageD2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ISSRTD22_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ISSRTD22_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ISSRTD22_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ISSRTD22_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ISSRTD22_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterID2ISSRTD22
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID2ISSRTD22"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ISSRTD22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID2ISSRTD22"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2ISSRTD22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID2ISSRTD22
        
        Create a new object of the class itkImageToImageFilterID2ISSRTD22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID2ISSRTD22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID2ISSRTD22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID2ISSRTD22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID2ISSRTD22.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2ISSRTD22_SetInput,None,itkImageToImageFilterID2ISSRTD22)
itkImageToImageFilterID2ISSRTD22.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2ISSRTD22_GetInput,None,itkImageToImageFilterID2ISSRTD22)
itkImageToImageFilterID2ISSRTD22.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2ISSRTD22_PushBackInput,None,itkImageToImageFilterID2ISSRTD22)
itkImageToImageFilterID2ISSRTD22.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2ISSRTD22_PopBackInput,None,itkImageToImageFilterID2ISSRTD22)
itkImageToImageFilterID2ISSRTD22.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2ISSRTD22_PushFrontInput,None,itkImageToImageFilterID2ISSRTD22)
itkImageToImageFilterID2ISSRTD22.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2ISSRTD22_PopFrontInput,None,itkImageToImageFilterID2ISSRTD22)
itkImageToImageFilterID2ISSRTD22.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2ISSRTD22_GetPointer,None,itkImageToImageFilterID2ISSRTD22)
itkImageToImageFilterID2ISSRTD22_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterID2ISSRTD22_swigregister
itkImageToImageFilterID2ISSRTD22_swigregister(itkImageToImageFilterID2ISSRTD22)

def itkImageToImageFilterID2ISSRTD22_cast(*args):
  """itkImageToImageFilterID2ISSRTD22_cast(itkLightObject obj) -> itkImageToImageFilterID2ISSRTD22"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterID2ISSRTD22_cast(*args)

class itkImageToImageFilterID2IVF22(itkImageSourcePython.itkImageSourceIVF22):
    """Proxy of C++ itkImageToImageFilterID2IVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID2IVF22_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID2IVF22_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD2 image)
        SetInput(self, unsigned int arg0, itkImageD2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2IVF22_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD2
        GetInput(self, unsigned int idx) -> itkImageD2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2IVF22_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2IVF22_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2IVF22_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2IVF22_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2IVF22_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterID2IVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID2IVF22"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2IVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID2IVF22"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2IVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID2IVF22
        
        Create a new object of the class itkImageToImageFilterID2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID2IVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID2IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID2IVF22.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2IVF22_SetInput,None,itkImageToImageFilterID2IVF22)
itkImageToImageFilterID2IVF22.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2IVF22_GetInput,None,itkImageToImageFilterID2IVF22)
itkImageToImageFilterID2IVF22.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2IVF22_PushBackInput,None,itkImageToImageFilterID2IVF22)
itkImageToImageFilterID2IVF22.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2IVF22_PopBackInput,None,itkImageToImageFilterID2IVF22)
itkImageToImageFilterID2IVF22.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2IVF22_PushFrontInput,None,itkImageToImageFilterID2IVF22)
itkImageToImageFilterID2IVF22.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2IVF22_PopFrontInput,None,itkImageToImageFilterID2IVF22)
itkImageToImageFilterID2IVF22.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2IVF22_GetPointer,None,itkImageToImageFilterID2IVF22)
itkImageToImageFilterID2IVF22_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterID2IVF22_swigregister
itkImageToImageFilterID2IVF22_swigregister(itkImageToImageFilterID2IVF22)

def itkImageToImageFilterID2IVF22_cast(*args):
  """itkImageToImageFilterID2IVF22_cast(itkLightObject obj) -> itkImageToImageFilterID2IVF22"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterID2IVF22_cast(*args)

class itkImageToImageFilterID2VID2(itkImageSourcePython.itkImageSourceVID2):
    """Proxy of C++ itkImageToImageFilterID2VID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID2VID2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID2VID2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD2 image)
        SetInput(self, unsigned int arg0, itkImageD2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VID2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD2
        GetInput(self, unsigned int idx) -> itkImageD2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VID2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VID2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VID2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VID2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VID2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterID2VID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID2VID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID2VID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID2VID2
        
        Create a new object of the class itkImageToImageFilterID2VID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID2VID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID2VID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID2VID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID2VID2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VID2_SetInput,None,itkImageToImageFilterID2VID2)
itkImageToImageFilterID2VID2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VID2_GetInput,None,itkImageToImageFilterID2VID2)
itkImageToImageFilterID2VID2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VID2_PushBackInput,None,itkImageToImageFilterID2VID2)
itkImageToImageFilterID2VID2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VID2_PopBackInput,None,itkImageToImageFilterID2VID2)
itkImageToImageFilterID2VID2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VID2_PushFrontInput,None,itkImageToImageFilterID2VID2)
itkImageToImageFilterID2VID2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VID2_PopFrontInput,None,itkImageToImageFilterID2VID2)
itkImageToImageFilterID2VID2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VID2_GetPointer,None,itkImageToImageFilterID2VID2)
itkImageToImageFilterID2VID2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterID2VID2_swigregister
itkImageToImageFilterID2VID2_swigregister(itkImageToImageFilterID2VID2)

def itkImageToImageFilterID2VID2_cast(*args):
  """itkImageToImageFilterID2VID2_cast(itkLightObject obj) -> itkImageToImageFilterID2VID2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterID2VID2_cast(*args)

class itkImageToImageFilterID2VIF2(itkImageSourcePython.itkImageSourceVIF2):
    """Proxy of C++ itkImageToImageFilterID2VIF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID2VIF2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID2VIF2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD2 image)
        SetInput(self, unsigned int arg0, itkImageD2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIF2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD2
        GetInput(self, unsigned int idx) -> itkImageD2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIF2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIF2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIF2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIF2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIF2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterID2VIF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID2VIF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID2VIF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID2VIF2
        
        Create a new object of the class itkImageToImageFilterID2VIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID2VIF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID2VIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID2VIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID2VIF2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VIF2_SetInput,None,itkImageToImageFilterID2VIF2)
itkImageToImageFilterID2VIF2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VIF2_GetInput,None,itkImageToImageFilterID2VIF2)
itkImageToImageFilterID2VIF2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VIF2_PushBackInput,None,itkImageToImageFilterID2VIF2)
itkImageToImageFilterID2VIF2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VIF2_PopBackInput,None,itkImageToImageFilterID2VIF2)
itkImageToImageFilterID2VIF2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VIF2_PushFrontInput,None,itkImageToImageFilterID2VIF2)
itkImageToImageFilterID2VIF2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VIF2_PopFrontInput,None,itkImageToImageFilterID2VIF2)
itkImageToImageFilterID2VIF2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VIF2_GetPointer,None,itkImageToImageFilterID2VIF2)
itkImageToImageFilterID2VIF2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterID2VIF2_swigregister
itkImageToImageFilterID2VIF2_swigregister(itkImageToImageFilterID2VIF2)

def itkImageToImageFilterID2VIF2_cast(*args):
  """itkImageToImageFilterID2VIF2_cast(itkLightObject obj) -> itkImageToImageFilterID2VIF2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIF2_cast(*args)

class itkImageToImageFilterID2VIUC2(itkImageSourcePython.itkImageSourceVIUC2):
    """Proxy of C++ itkImageToImageFilterID2VIUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUC2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUC2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD2 image)
        SetInput(self, unsigned int arg0, itkImageD2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUC2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD2
        GetInput(self, unsigned int idx) -> itkImageD2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUC2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUC2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUC2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUC2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUC2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterID2VIUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID2VIUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID2VIUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID2VIUC2
        
        Create a new object of the class itkImageToImageFilterID2VIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID2VIUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID2VIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID2VIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID2VIUC2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VIUC2_SetInput,None,itkImageToImageFilterID2VIUC2)
itkImageToImageFilterID2VIUC2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VIUC2_GetInput,None,itkImageToImageFilterID2VIUC2)
itkImageToImageFilterID2VIUC2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VIUC2_PushBackInput,None,itkImageToImageFilterID2VIUC2)
itkImageToImageFilterID2VIUC2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VIUC2_PopBackInput,None,itkImageToImageFilterID2VIUC2)
itkImageToImageFilterID2VIUC2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VIUC2_PushFrontInput,None,itkImageToImageFilterID2VIUC2)
itkImageToImageFilterID2VIUC2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VIUC2_PopFrontInput,None,itkImageToImageFilterID2VIUC2)
itkImageToImageFilterID2VIUC2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VIUC2_GetPointer,None,itkImageToImageFilterID2VIUC2)
itkImageToImageFilterID2VIUC2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUC2_swigregister
itkImageToImageFilterID2VIUC2_swigregister(itkImageToImageFilterID2VIUC2)

def itkImageToImageFilterID2VIUC2_cast(*args):
  """itkImageToImageFilterID2VIUC2_cast(itkLightObject obj) -> itkImageToImageFilterID2VIUC2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUC2_cast(*args)

class itkImageToImageFilterID2VIUL2(itkImageSourcePython.itkImageSourceVIUL2):
    """Proxy of C++ itkImageToImageFilterID2VIUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUL2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUL2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD2 image)
        SetInput(self, unsigned int arg0, itkImageD2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUL2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD2
        GetInput(self, unsigned int idx) -> itkImageD2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUL2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUL2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUL2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUL2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUL2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterID2VIUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID2VIUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID2VIUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID2VIUL2
        
        Create a new object of the class itkImageToImageFilterID2VIUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID2VIUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID2VIUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID2VIUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID2VIUL2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VIUL2_SetInput,None,itkImageToImageFilterID2VIUL2)
itkImageToImageFilterID2VIUL2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VIUL2_GetInput,None,itkImageToImageFilterID2VIUL2)
itkImageToImageFilterID2VIUL2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VIUL2_PushBackInput,None,itkImageToImageFilterID2VIUL2)
itkImageToImageFilterID2VIUL2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VIUL2_PopBackInput,None,itkImageToImageFilterID2VIUL2)
itkImageToImageFilterID2VIUL2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VIUL2_PushFrontInput,None,itkImageToImageFilterID2VIUL2)
itkImageToImageFilterID2VIUL2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VIUL2_PopFrontInput,None,itkImageToImageFilterID2VIUL2)
itkImageToImageFilterID2VIUL2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VIUL2_GetPointer,None,itkImageToImageFilterID2VIUL2)
itkImageToImageFilterID2VIUL2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUL2_swigregister
itkImageToImageFilterID2VIUL2_swigregister(itkImageToImageFilterID2VIUL2)

def itkImageToImageFilterID2VIUL2_cast(*args):
  """itkImageToImageFilterID2VIUL2_cast(itkLightObject obj) -> itkImageToImageFilterID2VIUL2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUL2_cast(*args)

class itkImageToImageFilterID2VIUS2(itkImageSourcePython.itkImageSourceVIUS2):
    """Proxy of C++ itkImageToImageFilterID2VIUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD2 image)
        SetInput(self, unsigned int arg0, itkImageD2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD2
        GetInput(self, unsigned int idx) -> itkImageD2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterID2VIUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID2VIUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID2VIUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID2VIUS2
        
        Create a new object of the class itkImageToImageFilterID2VIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID2VIUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID2VIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID2VIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID2VIUS2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VIUS2_SetInput,None,itkImageToImageFilterID2VIUS2)
itkImageToImageFilterID2VIUS2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VIUS2_GetInput,None,itkImageToImageFilterID2VIUS2)
itkImageToImageFilterID2VIUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VIUS2_PushBackInput,None,itkImageToImageFilterID2VIUS2)
itkImageToImageFilterID2VIUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VIUS2_PopBackInput,None,itkImageToImageFilterID2VIUS2)
itkImageToImageFilterID2VIUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VIUS2_PushFrontInput,None,itkImageToImageFilterID2VIUS2)
itkImageToImageFilterID2VIUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VIUS2_PopFrontInput,None,itkImageToImageFilterID2VIUS2)
itkImageToImageFilterID2VIUS2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID2VIUS2_GetPointer,None,itkImageToImageFilterID2VIUS2)
itkImageToImageFilterID2VIUS2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUS2_swigregister
itkImageToImageFilterID2VIUS2_swigregister(itkImageToImageFilterID2VIUS2)

def itkImageToImageFilterID2VIUS2_cast(*args):
  """itkImageToImageFilterID2VIUS2_cast(itkLightObject obj) -> itkImageToImageFilterID2VIUS2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterID2VIUS2_cast(*args)

class itkImageToImageFilterID3ICF3(itkImageSourcePython.itkImageSourceICF3):
    """Proxy of C++ itkImageToImageFilterID3ICF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID3ICF3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID3ICF3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD3 image)
        SetInput(self, unsigned int arg0, itkImageD3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ICF3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD3
        GetInput(self, unsigned int idx) -> itkImageD3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ICF3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ICF3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ICF3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ICF3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ICF3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterID3ICF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID3ICF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ICF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID3ICF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ICF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID3ICF3
        
        Create a new object of the class itkImageToImageFilterID3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID3ICF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID3ICF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID3ICF3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3ICF3_SetInput,None,itkImageToImageFilterID3ICF3)
itkImageToImageFilterID3ICF3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3ICF3_GetInput,None,itkImageToImageFilterID3ICF3)
itkImageToImageFilterID3ICF3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3ICF3_PushBackInput,None,itkImageToImageFilterID3ICF3)
itkImageToImageFilterID3ICF3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3ICF3_PopBackInput,None,itkImageToImageFilterID3ICF3)
itkImageToImageFilterID3ICF3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3ICF3_PushFrontInput,None,itkImageToImageFilterID3ICF3)
itkImageToImageFilterID3ICF3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3ICF3_PopFrontInput,None,itkImageToImageFilterID3ICF3)
itkImageToImageFilterID3ICF3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3ICF3_GetPointer,None,itkImageToImageFilterID3ICF3)
itkImageToImageFilterID3ICF3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterID3ICF3_swigregister
itkImageToImageFilterID3ICF3_swigregister(itkImageToImageFilterID3ICF3)

def itkImageToImageFilterID3ICF3_cast(*args):
  """itkImageToImageFilterID3ICF3_cast(itkLightObject obj) -> itkImageToImageFilterID3ICF3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterID3ICF3_cast(*args)

class itkImageToImageFilterID3ICVF33(itkImageSourcePython.itkImageSourceICVF33):
    """Proxy of C++ itkImageToImageFilterID3ICVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID3ICVF33_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID3ICVF33_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD3 image)
        SetInput(self, unsigned int arg0, itkImageD3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ICVF33_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD3
        GetInput(self, unsigned int idx) -> itkImageD3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ICVF33_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ICVF33_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ICVF33_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ICVF33_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ICVF33_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterID3ICVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID3ICVF33"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ICVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID3ICVF33"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ICVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID3ICVF33
        
        Create a new object of the class itkImageToImageFilterID3ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID3ICVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID3ICVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID3ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID3ICVF33.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3ICVF33_SetInput,None,itkImageToImageFilterID3ICVF33)
itkImageToImageFilterID3ICVF33.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3ICVF33_GetInput,None,itkImageToImageFilterID3ICVF33)
itkImageToImageFilterID3ICVF33.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3ICVF33_PushBackInput,None,itkImageToImageFilterID3ICVF33)
itkImageToImageFilterID3ICVF33.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3ICVF33_PopBackInput,None,itkImageToImageFilterID3ICVF33)
itkImageToImageFilterID3ICVF33.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3ICVF33_PushFrontInput,None,itkImageToImageFilterID3ICVF33)
itkImageToImageFilterID3ICVF33.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3ICVF33_PopFrontInput,None,itkImageToImageFilterID3ICVF33)
itkImageToImageFilterID3ICVF33.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3ICVF33_GetPointer,None,itkImageToImageFilterID3ICVF33)
itkImageToImageFilterID3ICVF33_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterID3ICVF33_swigregister
itkImageToImageFilterID3ICVF33_swigregister(itkImageToImageFilterID3ICVF33)

def itkImageToImageFilterID3ICVF33_cast(*args):
  """itkImageToImageFilterID3ICVF33_cast(itkLightObject obj) -> itkImageToImageFilterID3ICVF33"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterID3ICVF33_cast(*args)

class itkImageToImageFilterID3ID2(itkImageSourcePython.itkImageSourceID2):
    """Proxy of C++ itkImageToImageFilterID3ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID3ID2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID3ID2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD3 image)
        SetInput(self, unsigned int arg0, itkImageD3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ID2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD3
        GetInput(self, unsigned int idx) -> itkImageD3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ID2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ID2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ID2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ID2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ID2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterID3ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID3ID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID3ID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID3ID2
        
        Create a new object of the class itkImageToImageFilterID3ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID3ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID3ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID3ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID3ID2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3ID2_SetInput,None,itkImageToImageFilterID3ID2)
itkImageToImageFilterID3ID2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3ID2_GetInput,None,itkImageToImageFilterID3ID2)
itkImageToImageFilterID3ID2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3ID2_PushBackInput,None,itkImageToImageFilterID3ID2)
itkImageToImageFilterID3ID2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3ID2_PopBackInput,None,itkImageToImageFilterID3ID2)
itkImageToImageFilterID3ID2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3ID2_PushFrontInput,None,itkImageToImageFilterID3ID2)
itkImageToImageFilterID3ID2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3ID2_PopFrontInput,None,itkImageToImageFilterID3ID2)
itkImageToImageFilterID3ID2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3ID2_GetPointer,None,itkImageToImageFilterID3ID2)
itkImageToImageFilterID3ID2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterID3ID2_swigregister
itkImageToImageFilterID3ID2_swigregister(itkImageToImageFilterID3ID2)

def itkImageToImageFilterID3ID2_cast(*args):
  """itkImageToImageFilterID3ID2_cast(itkLightObject obj) -> itkImageToImageFilterID3ID2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterID3ID2_cast(*args)

class itkImageToImageFilterID3IRGBAUS3(itkImageSourcePython.itkImageSourceIRGBAUS3):
    """Proxy of C++ itkImageToImageFilterID3IRGBAUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBAUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBAUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD3 image)
        SetInput(self, unsigned int arg0, itkImageD3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBAUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD3
        GetInput(self, unsigned int idx) -> itkImageD3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBAUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBAUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBAUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBAUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBAUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterID3IRGBAUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID3IRGBAUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBAUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID3IRGBAUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBAUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID3IRGBAUS3
        
        Create a new object of the class itkImageToImageFilterID3IRGBAUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID3IRGBAUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID3IRGBAUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID3IRGBAUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID3IRGBAUS3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBAUS3_SetInput,None,itkImageToImageFilterID3IRGBAUS3)
itkImageToImageFilterID3IRGBAUS3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBAUS3_GetInput,None,itkImageToImageFilterID3IRGBAUS3)
itkImageToImageFilterID3IRGBAUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBAUS3_PushBackInput,None,itkImageToImageFilterID3IRGBAUS3)
itkImageToImageFilterID3IRGBAUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBAUS3_PopBackInput,None,itkImageToImageFilterID3IRGBAUS3)
itkImageToImageFilterID3IRGBAUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBAUS3_PushFrontInput,None,itkImageToImageFilterID3IRGBAUS3)
itkImageToImageFilterID3IRGBAUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBAUS3_PopFrontInput,None,itkImageToImageFilterID3IRGBAUS3)
itkImageToImageFilterID3IRGBAUS3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBAUS3_GetPointer,None,itkImageToImageFilterID3IRGBAUS3)
itkImageToImageFilterID3IRGBAUS3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBAUS3_swigregister
itkImageToImageFilterID3IRGBAUS3_swigregister(itkImageToImageFilterID3IRGBAUS3)

def itkImageToImageFilterID3IRGBAUS3_cast(*args):
  """itkImageToImageFilterID3IRGBAUS3_cast(itkLightObject obj) -> itkImageToImageFilterID3IRGBAUS3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBAUS3_cast(*args)

class itkImageToImageFilterID3IRGBUS3(itkImageSourcePython.itkImageSourceIRGBUS3):
    """Proxy of C++ itkImageToImageFilterID3IRGBUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD3 image)
        SetInput(self, unsigned int arg0, itkImageD3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD3
        GetInput(self, unsigned int idx) -> itkImageD3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterID3IRGBUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID3IRGBUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID3IRGBUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID3IRGBUS3
        
        Create a new object of the class itkImageToImageFilterID3IRGBUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID3IRGBUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID3IRGBUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID3IRGBUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID3IRGBUS3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBUS3_SetInput,None,itkImageToImageFilterID3IRGBUS3)
itkImageToImageFilterID3IRGBUS3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBUS3_GetInput,None,itkImageToImageFilterID3IRGBUS3)
itkImageToImageFilterID3IRGBUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBUS3_PushBackInput,None,itkImageToImageFilterID3IRGBUS3)
itkImageToImageFilterID3IRGBUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBUS3_PopBackInput,None,itkImageToImageFilterID3IRGBUS3)
itkImageToImageFilterID3IRGBUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBUS3_PushFrontInput,None,itkImageToImageFilterID3IRGBUS3)
itkImageToImageFilterID3IRGBUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBUS3_PopFrontInput,None,itkImageToImageFilterID3IRGBUS3)
itkImageToImageFilterID3IRGBUS3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBUS3_GetPointer,None,itkImageToImageFilterID3IRGBUS3)
itkImageToImageFilterID3IRGBUS3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBUS3_swigregister
itkImageToImageFilterID3IRGBUS3_swigregister(itkImageToImageFilterID3IRGBUS3)

def itkImageToImageFilterID3IRGBUS3_cast(*args):
  """itkImageToImageFilterID3IRGBUS3_cast(itkLightObject obj) -> itkImageToImageFilterID3IRGBUS3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBUS3_cast(*args)

class itkImageToImageFilterID3ISSRTD33(itkImageSourcePython.itkImageSourceISSRTD33):
    """Proxy of C++ itkImageToImageFilterID3ISSRTD33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID3ISSRTD33_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID3ISSRTD33_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD3 image)
        SetInput(self, unsigned int arg0, itkImageD3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ISSRTD33_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD3
        GetInput(self, unsigned int idx) -> itkImageD3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ISSRTD33_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ISSRTD33_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ISSRTD33_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ISSRTD33_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ISSRTD33_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterID3ISSRTD33
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID3ISSRTD33"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ISSRTD33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID3ISSRTD33"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3ISSRTD33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID3ISSRTD33
        
        Create a new object of the class itkImageToImageFilterID3ISSRTD33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID3ISSRTD33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID3ISSRTD33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID3ISSRTD33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID3ISSRTD33.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3ISSRTD33_SetInput,None,itkImageToImageFilterID3ISSRTD33)
itkImageToImageFilterID3ISSRTD33.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3ISSRTD33_GetInput,None,itkImageToImageFilterID3ISSRTD33)
itkImageToImageFilterID3ISSRTD33.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3ISSRTD33_PushBackInput,None,itkImageToImageFilterID3ISSRTD33)
itkImageToImageFilterID3ISSRTD33.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3ISSRTD33_PopBackInput,None,itkImageToImageFilterID3ISSRTD33)
itkImageToImageFilterID3ISSRTD33.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3ISSRTD33_PushFrontInput,None,itkImageToImageFilterID3ISSRTD33)
itkImageToImageFilterID3ISSRTD33.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3ISSRTD33_PopFrontInput,None,itkImageToImageFilterID3ISSRTD33)
itkImageToImageFilterID3ISSRTD33.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3ISSRTD33_GetPointer,None,itkImageToImageFilterID3ISSRTD33)
itkImageToImageFilterID3ISSRTD33_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterID3ISSRTD33_swigregister
itkImageToImageFilterID3ISSRTD33_swigregister(itkImageToImageFilterID3ISSRTD33)

def itkImageToImageFilterID3ISSRTD33_cast(*args):
  """itkImageToImageFilterID3ISSRTD33_cast(itkLightObject obj) -> itkImageToImageFilterID3ISSRTD33"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterID3ISSRTD33_cast(*args)

class itkImageToImageFilterID3IVF33(itkImageSourcePython.itkImageSourceIVF33):
    """Proxy of C++ itkImageToImageFilterID3IVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID3IVF33_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID3IVF33_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD3 image)
        SetInput(self, unsigned int arg0, itkImageD3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3IVF33_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD3
        GetInput(self, unsigned int idx) -> itkImageD3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3IVF33_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3IVF33_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3IVF33_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3IVF33_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3IVF33_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterID3IVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID3IVF33"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3IVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID3IVF33"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3IVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID3IVF33
        
        Create a new object of the class itkImageToImageFilterID3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID3IVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID3IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID3IVF33.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3IVF33_SetInput,None,itkImageToImageFilterID3IVF33)
itkImageToImageFilterID3IVF33.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3IVF33_GetInput,None,itkImageToImageFilterID3IVF33)
itkImageToImageFilterID3IVF33.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3IVF33_PushBackInput,None,itkImageToImageFilterID3IVF33)
itkImageToImageFilterID3IVF33.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3IVF33_PopBackInput,None,itkImageToImageFilterID3IVF33)
itkImageToImageFilterID3IVF33.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3IVF33_PushFrontInput,None,itkImageToImageFilterID3IVF33)
itkImageToImageFilterID3IVF33.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3IVF33_PopFrontInput,None,itkImageToImageFilterID3IVF33)
itkImageToImageFilterID3IVF33.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3IVF33_GetPointer,None,itkImageToImageFilterID3IVF33)
itkImageToImageFilterID3IVF33_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterID3IVF33_swigregister
itkImageToImageFilterID3IVF33_swigregister(itkImageToImageFilterID3IVF33)

def itkImageToImageFilterID3IVF33_cast(*args):
  """itkImageToImageFilterID3IVF33_cast(itkLightObject obj) -> itkImageToImageFilterID3IVF33"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterID3IVF33_cast(*args)

class itkImageToImageFilterID3VID3(itkImageSourcePython.itkImageSourceVID3):
    """Proxy of C++ itkImageToImageFilterID3VID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID3VID3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID3VID3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD3 image)
        SetInput(self, unsigned int arg0, itkImageD3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VID3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD3
        GetInput(self, unsigned int idx) -> itkImageD3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VID3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VID3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VID3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VID3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VID3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterID3VID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID3VID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID3VID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID3VID3
        
        Create a new object of the class itkImageToImageFilterID3VID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID3VID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID3VID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID3VID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID3VID3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VID3_SetInput,None,itkImageToImageFilterID3VID3)
itkImageToImageFilterID3VID3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VID3_GetInput,None,itkImageToImageFilterID3VID3)
itkImageToImageFilterID3VID3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VID3_PushBackInput,None,itkImageToImageFilterID3VID3)
itkImageToImageFilterID3VID3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VID3_PopBackInput,None,itkImageToImageFilterID3VID3)
itkImageToImageFilterID3VID3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VID3_PushFrontInput,None,itkImageToImageFilterID3VID3)
itkImageToImageFilterID3VID3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VID3_PopFrontInput,None,itkImageToImageFilterID3VID3)
itkImageToImageFilterID3VID3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VID3_GetPointer,None,itkImageToImageFilterID3VID3)
itkImageToImageFilterID3VID3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterID3VID3_swigregister
itkImageToImageFilterID3VID3_swigregister(itkImageToImageFilterID3VID3)

def itkImageToImageFilterID3VID3_cast(*args):
  """itkImageToImageFilterID3VID3_cast(itkLightObject obj) -> itkImageToImageFilterID3VID3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterID3VID3_cast(*args)

class itkImageToImageFilterID3VIF3(itkImageSourcePython.itkImageSourceVIF3):
    """Proxy of C++ itkImageToImageFilterID3VIF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID3VIF3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID3VIF3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD3 image)
        SetInput(self, unsigned int arg0, itkImageD3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIF3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD3
        GetInput(self, unsigned int idx) -> itkImageD3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIF3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIF3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIF3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIF3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIF3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterID3VIF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID3VIF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID3VIF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID3VIF3
        
        Create a new object of the class itkImageToImageFilterID3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID3VIF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID3VIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID3VIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID3VIF3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VIF3_SetInput,None,itkImageToImageFilterID3VIF3)
itkImageToImageFilterID3VIF3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VIF3_GetInput,None,itkImageToImageFilterID3VIF3)
itkImageToImageFilterID3VIF3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VIF3_PushBackInput,None,itkImageToImageFilterID3VIF3)
itkImageToImageFilterID3VIF3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VIF3_PopBackInput,None,itkImageToImageFilterID3VIF3)
itkImageToImageFilterID3VIF3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VIF3_PushFrontInput,None,itkImageToImageFilterID3VIF3)
itkImageToImageFilterID3VIF3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VIF3_PopFrontInput,None,itkImageToImageFilterID3VIF3)
itkImageToImageFilterID3VIF3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VIF3_GetPointer,None,itkImageToImageFilterID3VIF3)
itkImageToImageFilterID3VIF3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterID3VIF3_swigregister
itkImageToImageFilterID3VIF3_swigregister(itkImageToImageFilterID3VIF3)

def itkImageToImageFilterID3VIF3_cast(*args):
  """itkImageToImageFilterID3VIF3_cast(itkLightObject obj) -> itkImageToImageFilterID3VIF3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIF3_cast(*args)

class itkImageToImageFilterID3VIUC3(itkImageSourcePython.itkImageSourceVIUC3):
    """Proxy of C++ itkImageToImageFilterID3VIUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUC3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUC3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD3 image)
        SetInput(self, unsigned int arg0, itkImageD3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUC3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD3
        GetInput(self, unsigned int idx) -> itkImageD3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUC3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUC3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUC3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUC3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUC3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterID3VIUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID3VIUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID3VIUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID3VIUC3
        
        Create a new object of the class itkImageToImageFilterID3VIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID3VIUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID3VIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID3VIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID3VIUC3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VIUC3_SetInput,None,itkImageToImageFilterID3VIUC3)
itkImageToImageFilterID3VIUC3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VIUC3_GetInput,None,itkImageToImageFilterID3VIUC3)
itkImageToImageFilterID3VIUC3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VIUC3_PushBackInput,None,itkImageToImageFilterID3VIUC3)
itkImageToImageFilterID3VIUC3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VIUC3_PopBackInput,None,itkImageToImageFilterID3VIUC3)
itkImageToImageFilterID3VIUC3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VIUC3_PushFrontInput,None,itkImageToImageFilterID3VIUC3)
itkImageToImageFilterID3VIUC3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VIUC3_PopFrontInput,None,itkImageToImageFilterID3VIUC3)
itkImageToImageFilterID3VIUC3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VIUC3_GetPointer,None,itkImageToImageFilterID3VIUC3)
itkImageToImageFilterID3VIUC3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUC3_swigregister
itkImageToImageFilterID3VIUC3_swigregister(itkImageToImageFilterID3VIUC3)

def itkImageToImageFilterID3VIUC3_cast(*args):
  """itkImageToImageFilterID3VIUC3_cast(itkLightObject obj) -> itkImageToImageFilterID3VIUC3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUC3_cast(*args)

class itkImageToImageFilterID3VIUL3(itkImageSourcePython.itkImageSourceVIUL3):
    """Proxy of C++ itkImageToImageFilterID3VIUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUL3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUL3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD3 image)
        SetInput(self, unsigned int arg0, itkImageD3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUL3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD3
        GetInput(self, unsigned int idx) -> itkImageD3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUL3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUL3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUL3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUL3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUL3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterID3VIUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID3VIUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID3VIUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID3VIUL3
        
        Create a new object of the class itkImageToImageFilterID3VIUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID3VIUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID3VIUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID3VIUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID3VIUL3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VIUL3_SetInput,None,itkImageToImageFilterID3VIUL3)
itkImageToImageFilterID3VIUL3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VIUL3_GetInput,None,itkImageToImageFilterID3VIUL3)
itkImageToImageFilterID3VIUL3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VIUL3_PushBackInput,None,itkImageToImageFilterID3VIUL3)
itkImageToImageFilterID3VIUL3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VIUL3_PopBackInput,None,itkImageToImageFilterID3VIUL3)
itkImageToImageFilterID3VIUL3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VIUL3_PushFrontInput,None,itkImageToImageFilterID3VIUL3)
itkImageToImageFilterID3VIUL3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VIUL3_PopFrontInput,None,itkImageToImageFilterID3VIUL3)
itkImageToImageFilterID3VIUL3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VIUL3_GetPointer,None,itkImageToImageFilterID3VIUL3)
itkImageToImageFilterID3VIUL3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUL3_swigregister
itkImageToImageFilterID3VIUL3_swigregister(itkImageToImageFilterID3VIUL3)

def itkImageToImageFilterID3VIUL3_cast(*args):
  """itkImageToImageFilterID3VIUL3_cast(itkLightObject obj) -> itkImageToImageFilterID3VIUL3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUL3_cast(*args)

class itkImageToImageFilterID3VIUS3(itkImageSourcePython.itkImageSourceVIUS3):
    """Proxy of C++ itkImageToImageFilterID3VIUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD3 image)
        SetInput(self, unsigned int arg0, itkImageD3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD3
        GetInput(self, unsigned int idx) -> itkImageD3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterID3VIUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID3VIUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID3VIUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID3VIUS3
        
        Create a new object of the class itkImageToImageFilterID3VIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID3VIUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID3VIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID3VIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID3VIUS3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VIUS3_SetInput,None,itkImageToImageFilterID3VIUS3)
itkImageToImageFilterID3VIUS3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VIUS3_GetInput,None,itkImageToImageFilterID3VIUS3)
itkImageToImageFilterID3VIUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VIUS3_PushBackInput,None,itkImageToImageFilterID3VIUS3)
itkImageToImageFilterID3VIUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VIUS3_PopBackInput,None,itkImageToImageFilterID3VIUS3)
itkImageToImageFilterID3VIUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VIUS3_PushFrontInput,None,itkImageToImageFilterID3VIUS3)
itkImageToImageFilterID3VIUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VIUS3_PopFrontInput,None,itkImageToImageFilterID3VIUS3)
itkImageToImageFilterID3VIUS3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterID3VIUS3_GetPointer,None,itkImageToImageFilterID3VIUS3)
itkImageToImageFilterID3VIUS3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUS3_swigregister
itkImageToImageFilterID3VIUS3_swigregister(itkImageToImageFilterID3VIUS3)

def itkImageToImageFilterID3VIUS3_cast(*args):
  """itkImageToImageFilterID3VIUS3_cast(itkLightObject obj) -> itkImageToImageFilterID3VIUS3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterID3VIUS3_cast(*args)

class itkImageToImageFilterIF2ICF2(itkImageSourcePython.itkImageSourceICF2):
    """Proxy of C++ itkImageToImageFilterIF2ICF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF2ICF2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF2ICF2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF2 image)
        SetInput(self, unsigned int arg0, itkImageF2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2ICF2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF2
        GetInput(self, unsigned int idx) -> itkImageF2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2ICF2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2ICF2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2ICF2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2ICF2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2ICF2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIF2ICF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF2ICF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2ICF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF2ICF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2ICF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF2ICF2
        
        Create a new object of the class itkImageToImageFilterIF2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF2ICF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF2ICF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF2ICF2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2ICF2_SetInput,None,itkImageToImageFilterIF2ICF2)
itkImageToImageFilterIF2ICF2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2ICF2_GetInput,None,itkImageToImageFilterIF2ICF2)
itkImageToImageFilterIF2ICF2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2ICF2_PushBackInput,None,itkImageToImageFilterIF2ICF2)
itkImageToImageFilterIF2ICF2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2ICF2_PopBackInput,None,itkImageToImageFilterIF2ICF2)
itkImageToImageFilterIF2ICF2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2ICF2_PushFrontInput,None,itkImageToImageFilterIF2ICF2)
itkImageToImageFilterIF2ICF2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2ICF2_PopFrontInput,None,itkImageToImageFilterIF2ICF2)
itkImageToImageFilterIF2ICF2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2ICF2_GetPointer,None,itkImageToImageFilterIF2ICF2)
itkImageToImageFilterIF2ICF2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIF2ICF2_swigregister
itkImageToImageFilterIF2ICF2_swigregister(itkImageToImageFilterIF2ICF2)

def itkImageToImageFilterIF2ICF2_cast(*args):
  """itkImageToImageFilterIF2ICF2_cast(itkLightObject obj) -> itkImageToImageFilterIF2ICF2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIF2ICF2_cast(*args)

class itkImageToImageFilterIF2ICVF22(itkImageSourcePython.itkImageSourceICVF22):
    """Proxy of C++ itkImageToImageFilterIF2ICVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF2ICVF22_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF2ICVF22_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF2 image)
        SetInput(self, unsigned int arg0, itkImageF2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2ICVF22_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF2
        GetInput(self, unsigned int idx) -> itkImageF2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2ICVF22_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2ICVF22_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2ICVF22_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2ICVF22_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2ICVF22_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIF2ICVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF2ICVF22"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2ICVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF2ICVF22"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2ICVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF2ICVF22
        
        Create a new object of the class itkImageToImageFilterIF2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF2ICVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF2ICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF2ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF2ICVF22.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2ICVF22_SetInput,None,itkImageToImageFilterIF2ICVF22)
itkImageToImageFilterIF2ICVF22.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2ICVF22_GetInput,None,itkImageToImageFilterIF2ICVF22)
itkImageToImageFilterIF2ICVF22.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2ICVF22_PushBackInput,None,itkImageToImageFilterIF2ICVF22)
itkImageToImageFilterIF2ICVF22.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2ICVF22_PopBackInput,None,itkImageToImageFilterIF2ICVF22)
itkImageToImageFilterIF2ICVF22.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2ICVF22_PushFrontInput,None,itkImageToImageFilterIF2ICVF22)
itkImageToImageFilterIF2ICVF22.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2ICVF22_PopFrontInput,None,itkImageToImageFilterIF2ICVF22)
itkImageToImageFilterIF2ICVF22.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2ICVF22_GetPointer,None,itkImageToImageFilterIF2ICVF22)
itkImageToImageFilterIF2ICVF22_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIF2ICVF22_swigregister
itkImageToImageFilterIF2ICVF22_swigregister(itkImageToImageFilterIF2ICVF22)

def itkImageToImageFilterIF2ICVF22_cast(*args):
  """itkImageToImageFilterIF2ICVF22_cast(itkLightObject obj) -> itkImageToImageFilterIF2ICVF22"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIF2ICVF22_cast(*args)

class itkImageToImageFilterIF2IF3(itkImageSourcePython.itkImageSourceIF3):
    """Proxy of C++ itkImageToImageFilterIF2IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF2IF3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF2IF3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF2 image)
        SetInput(self, unsigned int arg0, itkImageF2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IF3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF2
        GetInput(self, unsigned int idx) -> itkImageF2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IF3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IF3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IF3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IF3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IF3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIF2IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF2IF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF2IF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF2IF3
        
        Create a new object of the class itkImageToImageFilterIF2IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF2IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF2IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF2IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF2IF3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2IF3_SetInput,None,itkImageToImageFilterIF2IF3)
itkImageToImageFilterIF2IF3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2IF3_GetInput,None,itkImageToImageFilterIF2IF3)
itkImageToImageFilterIF2IF3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2IF3_PushBackInput,None,itkImageToImageFilterIF2IF3)
itkImageToImageFilterIF2IF3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2IF3_PopBackInput,None,itkImageToImageFilterIF2IF3)
itkImageToImageFilterIF2IF3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2IF3_PushFrontInput,None,itkImageToImageFilterIF2IF3)
itkImageToImageFilterIF2IF3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2IF3_PopFrontInput,None,itkImageToImageFilterIF2IF3)
itkImageToImageFilterIF2IF3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2IF3_GetPointer,None,itkImageToImageFilterIF2IF3)
itkImageToImageFilterIF2IF3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIF2IF3_swigregister
itkImageToImageFilterIF2IF3_swigregister(itkImageToImageFilterIF2IF3)

def itkImageToImageFilterIF2IF3_cast(*args):
  """itkImageToImageFilterIF2IF3_cast(itkLightObject obj) -> itkImageToImageFilterIF2IF3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IF3_cast(*args)

class itkImageToImageFilterIF2IRGBAUS2(itkImageSourcePython.itkImageSourceIRGBAUS2):
    """Proxy of C++ itkImageToImageFilterIF2IRGBAUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBAUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBAUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF2 image)
        SetInput(self, unsigned int arg0, itkImageF2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBAUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF2
        GetInput(self, unsigned int idx) -> itkImageF2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBAUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBAUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBAUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBAUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBAUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIF2IRGBAUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF2IRGBAUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBAUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF2IRGBAUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBAUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF2IRGBAUS2
        
        Create a new object of the class itkImageToImageFilterIF2IRGBAUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF2IRGBAUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF2IRGBAUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF2IRGBAUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF2IRGBAUS2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBAUS2_SetInput,None,itkImageToImageFilterIF2IRGBAUS2)
itkImageToImageFilterIF2IRGBAUS2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBAUS2_GetInput,None,itkImageToImageFilterIF2IRGBAUS2)
itkImageToImageFilterIF2IRGBAUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBAUS2_PushBackInput,None,itkImageToImageFilterIF2IRGBAUS2)
itkImageToImageFilterIF2IRGBAUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBAUS2_PopBackInput,None,itkImageToImageFilterIF2IRGBAUS2)
itkImageToImageFilterIF2IRGBAUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBAUS2_PushFrontInput,None,itkImageToImageFilterIF2IRGBAUS2)
itkImageToImageFilterIF2IRGBAUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBAUS2_PopFrontInput,None,itkImageToImageFilterIF2IRGBAUS2)
itkImageToImageFilterIF2IRGBAUS2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBAUS2_GetPointer,None,itkImageToImageFilterIF2IRGBAUS2)
itkImageToImageFilterIF2IRGBAUS2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBAUS2_swigregister
itkImageToImageFilterIF2IRGBAUS2_swigregister(itkImageToImageFilterIF2IRGBAUS2)

def itkImageToImageFilterIF2IRGBAUS2_cast(*args):
  """itkImageToImageFilterIF2IRGBAUS2_cast(itkLightObject obj) -> itkImageToImageFilterIF2IRGBAUS2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBAUS2_cast(*args)

class itkImageToImageFilterIF2IRGBUS2(itkImageSourcePython.itkImageSourceIRGBUS2):
    """Proxy of C++ itkImageToImageFilterIF2IRGBUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF2 image)
        SetInput(self, unsigned int arg0, itkImageF2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF2
        GetInput(self, unsigned int idx) -> itkImageF2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIF2IRGBUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF2IRGBUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF2IRGBUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF2IRGBUS2
        
        Create a new object of the class itkImageToImageFilterIF2IRGBUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF2IRGBUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF2IRGBUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF2IRGBUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF2IRGBUS2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBUS2_SetInput,None,itkImageToImageFilterIF2IRGBUS2)
itkImageToImageFilterIF2IRGBUS2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBUS2_GetInput,None,itkImageToImageFilterIF2IRGBUS2)
itkImageToImageFilterIF2IRGBUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBUS2_PushBackInput,None,itkImageToImageFilterIF2IRGBUS2)
itkImageToImageFilterIF2IRGBUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBUS2_PopBackInput,None,itkImageToImageFilterIF2IRGBUS2)
itkImageToImageFilterIF2IRGBUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBUS2_PushFrontInput,None,itkImageToImageFilterIF2IRGBUS2)
itkImageToImageFilterIF2IRGBUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBUS2_PopFrontInput,None,itkImageToImageFilterIF2IRGBUS2)
itkImageToImageFilterIF2IRGBUS2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBUS2_GetPointer,None,itkImageToImageFilterIF2IRGBUS2)
itkImageToImageFilterIF2IRGBUS2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBUS2_swigregister
itkImageToImageFilterIF2IRGBUS2_swigregister(itkImageToImageFilterIF2IRGBUS2)

def itkImageToImageFilterIF2IRGBUS2_cast(*args):
  """itkImageToImageFilterIF2IRGBUS2_cast(itkLightObject obj) -> itkImageToImageFilterIF2IRGBUS2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBUS2_cast(*args)

class itkImageToImageFilterIF2ISSRTD22(itkImageSourcePython.itkImageSourceISSRTD22):
    """Proxy of C++ itkImageToImageFilterIF2ISSRTD22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF2ISSRTD22_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF2ISSRTD22_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF2 image)
        SetInput(self, unsigned int arg0, itkImageF2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2ISSRTD22_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF2
        GetInput(self, unsigned int idx) -> itkImageF2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2ISSRTD22_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2ISSRTD22_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2ISSRTD22_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2ISSRTD22_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2ISSRTD22_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIF2ISSRTD22
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF2ISSRTD22"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2ISSRTD22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF2ISSRTD22"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2ISSRTD22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF2ISSRTD22
        
        Create a new object of the class itkImageToImageFilterIF2ISSRTD22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF2ISSRTD22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF2ISSRTD22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF2ISSRTD22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF2ISSRTD22.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2ISSRTD22_SetInput,None,itkImageToImageFilterIF2ISSRTD22)
itkImageToImageFilterIF2ISSRTD22.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2ISSRTD22_GetInput,None,itkImageToImageFilterIF2ISSRTD22)
itkImageToImageFilterIF2ISSRTD22.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2ISSRTD22_PushBackInput,None,itkImageToImageFilterIF2ISSRTD22)
itkImageToImageFilterIF2ISSRTD22.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2ISSRTD22_PopBackInput,None,itkImageToImageFilterIF2ISSRTD22)
itkImageToImageFilterIF2ISSRTD22.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2ISSRTD22_PushFrontInput,None,itkImageToImageFilterIF2ISSRTD22)
itkImageToImageFilterIF2ISSRTD22.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2ISSRTD22_PopFrontInput,None,itkImageToImageFilterIF2ISSRTD22)
itkImageToImageFilterIF2ISSRTD22.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2ISSRTD22_GetPointer,None,itkImageToImageFilterIF2ISSRTD22)
itkImageToImageFilterIF2ISSRTD22_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIF2ISSRTD22_swigregister
itkImageToImageFilterIF2ISSRTD22_swigregister(itkImageToImageFilterIF2ISSRTD22)

def itkImageToImageFilterIF2ISSRTD22_cast(*args):
  """itkImageToImageFilterIF2ISSRTD22_cast(itkLightObject obj) -> itkImageToImageFilterIF2ISSRTD22"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIF2ISSRTD22_cast(*args)

class itkImageToImageFilterIF2IVF22(itkImageSourcePython.itkImageSourceIVF22):
    """Proxy of C++ itkImageToImageFilterIF2IVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF2IVF22_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF2IVF22_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF2 image)
        SetInput(self, unsigned int arg0, itkImageF2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IVF22_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF2
        GetInput(self, unsigned int idx) -> itkImageF2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IVF22_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IVF22_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IVF22_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IVF22_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IVF22_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIF2IVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF2IVF22"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF2IVF22"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF2IVF22
        
        Create a new object of the class itkImageToImageFilterIF2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF2IVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF2IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF2IVF22.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2IVF22_SetInput,None,itkImageToImageFilterIF2IVF22)
itkImageToImageFilterIF2IVF22.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2IVF22_GetInput,None,itkImageToImageFilterIF2IVF22)
itkImageToImageFilterIF2IVF22.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2IVF22_PushBackInput,None,itkImageToImageFilterIF2IVF22)
itkImageToImageFilterIF2IVF22.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2IVF22_PopBackInput,None,itkImageToImageFilterIF2IVF22)
itkImageToImageFilterIF2IVF22.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2IVF22_PushFrontInput,None,itkImageToImageFilterIF2IVF22)
itkImageToImageFilterIF2IVF22.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2IVF22_PopFrontInput,None,itkImageToImageFilterIF2IVF22)
itkImageToImageFilterIF2IVF22.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2IVF22_GetPointer,None,itkImageToImageFilterIF2IVF22)
itkImageToImageFilterIF2IVF22_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIF2IVF22_swigregister
itkImageToImageFilterIF2IVF22_swigregister(itkImageToImageFilterIF2IVF22)

def itkImageToImageFilterIF2IVF22_cast(*args):
  """itkImageToImageFilterIF2IVF22_cast(itkLightObject obj) -> itkImageToImageFilterIF2IVF22"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIF2IVF22_cast(*args)

class itkImageToImageFilterIF2VID2(itkImageSourcePython.itkImageSourceVID2):
    """Proxy of C++ itkImageToImageFilterIF2VID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF2VID2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF2VID2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF2 image)
        SetInput(self, unsigned int arg0, itkImageF2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VID2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF2
        GetInput(self, unsigned int idx) -> itkImageF2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VID2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VID2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VID2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VID2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VID2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIF2VID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF2VID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF2VID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF2VID2
        
        Create a new object of the class itkImageToImageFilterIF2VID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF2VID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF2VID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF2VID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF2VID2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VID2_SetInput,None,itkImageToImageFilterIF2VID2)
itkImageToImageFilterIF2VID2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VID2_GetInput,None,itkImageToImageFilterIF2VID2)
itkImageToImageFilterIF2VID2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VID2_PushBackInput,None,itkImageToImageFilterIF2VID2)
itkImageToImageFilterIF2VID2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VID2_PopBackInput,None,itkImageToImageFilterIF2VID2)
itkImageToImageFilterIF2VID2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VID2_PushFrontInput,None,itkImageToImageFilterIF2VID2)
itkImageToImageFilterIF2VID2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VID2_PopFrontInput,None,itkImageToImageFilterIF2VID2)
itkImageToImageFilterIF2VID2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VID2_GetPointer,None,itkImageToImageFilterIF2VID2)
itkImageToImageFilterIF2VID2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIF2VID2_swigregister
itkImageToImageFilterIF2VID2_swigregister(itkImageToImageFilterIF2VID2)

def itkImageToImageFilterIF2VID2_cast(*args):
  """itkImageToImageFilterIF2VID2_cast(itkLightObject obj) -> itkImageToImageFilterIF2VID2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VID2_cast(*args)

class itkImageToImageFilterIF2VIF2(itkImageSourcePython.itkImageSourceVIF2):
    """Proxy of C++ itkImageToImageFilterIF2VIF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIF2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIF2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF2 image)
        SetInput(self, unsigned int arg0, itkImageF2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIF2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF2
        GetInput(self, unsigned int idx) -> itkImageF2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIF2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIF2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIF2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIF2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIF2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIF2VIF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF2VIF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF2VIF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF2VIF2
        
        Create a new object of the class itkImageToImageFilterIF2VIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF2VIF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF2VIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF2VIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF2VIF2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VIF2_SetInput,None,itkImageToImageFilterIF2VIF2)
itkImageToImageFilterIF2VIF2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VIF2_GetInput,None,itkImageToImageFilterIF2VIF2)
itkImageToImageFilterIF2VIF2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VIF2_PushBackInput,None,itkImageToImageFilterIF2VIF2)
itkImageToImageFilterIF2VIF2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VIF2_PopBackInput,None,itkImageToImageFilterIF2VIF2)
itkImageToImageFilterIF2VIF2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VIF2_PushFrontInput,None,itkImageToImageFilterIF2VIF2)
itkImageToImageFilterIF2VIF2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VIF2_PopFrontInput,None,itkImageToImageFilterIF2VIF2)
itkImageToImageFilterIF2VIF2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VIF2_GetPointer,None,itkImageToImageFilterIF2VIF2)
itkImageToImageFilterIF2VIF2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIF2_swigregister
itkImageToImageFilterIF2VIF2_swigregister(itkImageToImageFilterIF2VIF2)

def itkImageToImageFilterIF2VIF2_cast(*args):
  """itkImageToImageFilterIF2VIF2_cast(itkLightObject obj) -> itkImageToImageFilterIF2VIF2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIF2_cast(*args)

class itkImageToImageFilterIF2VIUC2(itkImageSourcePython.itkImageSourceVIUC2):
    """Proxy of C++ itkImageToImageFilterIF2VIUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUC2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUC2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF2 image)
        SetInput(self, unsigned int arg0, itkImageF2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUC2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF2
        GetInput(self, unsigned int idx) -> itkImageF2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUC2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUC2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUC2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUC2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUC2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIF2VIUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF2VIUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF2VIUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF2VIUC2
        
        Create a new object of the class itkImageToImageFilterIF2VIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF2VIUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF2VIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF2VIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF2VIUC2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUC2_SetInput,None,itkImageToImageFilterIF2VIUC2)
itkImageToImageFilterIF2VIUC2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUC2_GetInput,None,itkImageToImageFilterIF2VIUC2)
itkImageToImageFilterIF2VIUC2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUC2_PushBackInput,None,itkImageToImageFilterIF2VIUC2)
itkImageToImageFilterIF2VIUC2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUC2_PopBackInput,None,itkImageToImageFilterIF2VIUC2)
itkImageToImageFilterIF2VIUC2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUC2_PushFrontInput,None,itkImageToImageFilterIF2VIUC2)
itkImageToImageFilterIF2VIUC2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUC2_PopFrontInput,None,itkImageToImageFilterIF2VIUC2)
itkImageToImageFilterIF2VIUC2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUC2_GetPointer,None,itkImageToImageFilterIF2VIUC2)
itkImageToImageFilterIF2VIUC2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUC2_swigregister
itkImageToImageFilterIF2VIUC2_swigregister(itkImageToImageFilterIF2VIUC2)

def itkImageToImageFilterIF2VIUC2_cast(*args):
  """itkImageToImageFilterIF2VIUC2_cast(itkLightObject obj) -> itkImageToImageFilterIF2VIUC2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUC2_cast(*args)

class itkImageToImageFilterIF2VIUL2(itkImageSourcePython.itkImageSourceVIUL2):
    """Proxy of C++ itkImageToImageFilterIF2VIUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUL2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUL2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF2 image)
        SetInput(self, unsigned int arg0, itkImageF2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUL2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF2
        GetInput(self, unsigned int idx) -> itkImageF2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUL2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUL2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUL2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUL2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUL2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIF2VIUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF2VIUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF2VIUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF2VIUL2
        
        Create a new object of the class itkImageToImageFilterIF2VIUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF2VIUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF2VIUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF2VIUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF2VIUL2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUL2_SetInput,None,itkImageToImageFilterIF2VIUL2)
itkImageToImageFilterIF2VIUL2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUL2_GetInput,None,itkImageToImageFilterIF2VIUL2)
itkImageToImageFilterIF2VIUL2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUL2_PushBackInput,None,itkImageToImageFilterIF2VIUL2)
itkImageToImageFilterIF2VIUL2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUL2_PopBackInput,None,itkImageToImageFilterIF2VIUL2)
itkImageToImageFilterIF2VIUL2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUL2_PushFrontInput,None,itkImageToImageFilterIF2VIUL2)
itkImageToImageFilterIF2VIUL2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUL2_PopFrontInput,None,itkImageToImageFilterIF2VIUL2)
itkImageToImageFilterIF2VIUL2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUL2_GetPointer,None,itkImageToImageFilterIF2VIUL2)
itkImageToImageFilterIF2VIUL2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUL2_swigregister
itkImageToImageFilterIF2VIUL2_swigregister(itkImageToImageFilterIF2VIUL2)

def itkImageToImageFilterIF2VIUL2_cast(*args):
  """itkImageToImageFilterIF2VIUL2_cast(itkLightObject obj) -> itkImageToImageFilterIF2VIUL2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUL2_cast(*args)

class itkImageToImageFilterIF2VIUS2(itkImageSourcePython.itkImageSourceVIUS2):
    """Proxy of C++ itkImageToImageFilterIF2VIUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF2 image)
        SetInput(self, unsigned int arg0, itkImageF2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF2
        GetInput(self, unsigned int idx) -> itkImageF2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIF2VIUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF2VIUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF2VIUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF2VIUS2
        
        Create a new object of the class itkImageToImageFilterIF2VIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF2VIUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF2VIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF2VIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF2VIUS2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUS2_SetInput,None,itkImageToImageFilterIF2VIUS2)
itkImageToImageFilterIF2VIUS2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUS2_GetInput,None,itkImageToImageFilterIF2VIUS2)
itkImageToImageFilterIF2VIUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUS2_PushBackInput,None,itkImageToImageFilterIF2VIUS2)
itkImageToImageFilterIF2VIUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUS2_PopBackInput,None,itkImageToImageFilterIF2VIUS2)
itkImageToImageFilterIF2VIUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUS2_PushFrontInput,None,itkImageToImageFilterIF2VIUS2)
itkImageToImageFilterIF2VIUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUS2_PopFrontInput,None,itkImageToImageFilterIF2VIUS2)
itkImageToImageFilterIF2VIUS2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUS2_GetPointer,None,itkImageToImageFilterIF2VIUS2)
itkImageToImageFilterIF2VIUS2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUS2_swigregister
itkImageToImageFilterIF2VIUS2_swigregister(itkImageToImageFilterIF2VIUS2)

def itkImageToImageFilterIF2VIUS2_cast(*args):
  """itkImageToImageFilterIF2VIUS2_cast(itkLightObject obj) -> itkImageToImageFilterIF2VIUS2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIF2VIUS2_cast(*args)

class itkImageToImageFilterIF3ICF3(itkImageSourcePython.itkImageSourceICF3):
    """Proxy of C++ itkImageToImageFilterIF3ICF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF3ICF3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF3ICF3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF3 image)
        SetInput(self, unsigned int arg0, itkImageF3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3ICF3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF3
        GetInput(self, unsigned int idx) -> itkImageF3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3ICF3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3ICF3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3ICF3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3ICF3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3ICF3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIF3ICF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF3ICF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3ICF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF3ICF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3ICF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF3ICF3
        
        Create a new object of the class itkImageToImageFilterIF3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF3ICF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF3ICF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF3ICF3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3ICF3_SetInput,None,itkImageToImageFilterIF3ICF3)
itkImageToImageFilterIF3ICF3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3ICF3_GetInput,None,itkImageToImageFilterIF3ICF3)
itkImageToImageFilterIF3ICF3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3ICF3_PushBackInput,None,itkImageToImageFilterIF3ICF3)
itkImageToImageFilterIF3ICF3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3ICF3_PopBackInput,None,itkImageToImageFilterIF3ICF3)
itkImageToImageFilterIF3ICF3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3ICF3_PushFrontInput,None,itkImageToImageFilterIF3ICF3)
itkImageToImageFilterIF3ICF3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3ICF3_PopFrontInput,None,itkImageToImageFilterIF3ICF3)
itkImageToImageFilterIF3ICF3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3ICF3_GetPointer,None,itkImageToImageFilterIF3ICF3)
itkImageToImageFilterIF3ICF3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIF3ICF3_swigregister
itkImageToImageFilterIF3ICF3_swigregister(itkImageToImageFilterIF3ICF3)

def itkImageToImageFilterIF3ICF3_cast(*args):
  """itkImageToImageFilterIF3ICF3_cast(itkLightObject obj) -> itkImageToImageFilterIF3ICF3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIF3ICF3_cast(*args)

class itkImageToImageFilterIF3ICVF33(itkImageSourcePython.itkImageSourceICVF33):
    """Proxy of C++ itkImageToImageFilterIF3ICVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF3ICVF33_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF3ICVF33_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF3 image)
        SetInput(self, unsigned int arg0, itkImageF3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3ICVF33_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF3
        GetInput(self, unsigned int idx) -> itkImageF3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3ICVF33_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3ICVF33_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3ICVF33_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3ICVF33_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3ICVF33_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIF3ICVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF3ICVF33"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3ICVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF3ICVF33"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3ICVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF3ICVF33
        
        Create a new object of the class itkImageToImageFilterIF3ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF3ICVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF3ICVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF3ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF3ICVF33.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3ICVF33_SetInput,None,itkImageToImageFilterIF3ICVF33)
itkImageToImageFilterIF3ICVF33.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3ICVF33_GetInput,None,itkImageToImageFilterIF3ICVF33)
itkImageToImageFilterIF3ICVF33.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3ICVF33_PushBackInput,None,itkImageToImageFilterIF3ICVF33)
itkImageToImageFilterIF3ICVF33.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3ICVF33_PopBackInput,None,itkImageToImageFilterIF3ICVF33)
itkImageToImageFilterIF3ICVF33.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3ICVF33_PushFrontInput,None,itkImageToImageFilterIF3ICVF33)
itkImageToImageFilterIF3ICVF33.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3ICVF33_PopFrontInput,None,itkImageToImageFilterIF3ICVF33)
itkImageToImageFilterIF3ICVF33.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3ICVF33_GetPointer,None,itkImageToImageFilterIF3ICVF33)
itkImageToImageFilterIF3ICVF33_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIF3ICVF33_swigregister
itkImageToImageFilterIF3ICVF33_swigregister(itkImageToImageFilterIF3ICVF33)

def itkImageToImageFilterIF3ICVF33_cast(*args):
  """itkImageToImageFilterIF3ICVF33_cast(itkLightObject obj) -> itkImageToImageFilterIF3ICVF33"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIF3ICVF33_cast(*args)

class itkImageToImageFilterIF3IF2(itkImageSourcePython.itkImageSourceIF2):
    """Proxy of C++ itkImageToImageFilterIF3IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF3 image)
        SetInput(self, unsigned int arg0, itkImageF3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF3
        GetInput(self, unsigned int idx) -> itkImageF3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIF3IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF3IF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF3IF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF3IF2
        
        Create a new object of the class itkImageToImageFilterIF3IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF3IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF3IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF3IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF3IF2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2_SetInput,None,itkImageToImageFilterIF3IF2)
itkImageToImageFilterIF3IF2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2_GetInput,None,itkImageToImageFilterIF3IF2)
itkImageToImageFilterIF3IF2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2_PushBackInput,None,itkImageToImageFilterIF3IF2)
itkImageToImageFilterIF3IF2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2_PopBackInput,None,itkImageToImageFilterIF3IF2)
itkImageToImageFilterIF3IF2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2_PushFrontInput,None,itkImageToImageFilterIF3IF2)
itkImageToImageFilterIF3IF2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2_PopFrontInput,None,itkImageToImageFilterIF3IF2)
itkImageToImageFilterIF3IF2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2_GetPointer,None,itkImageToImageFilterIF3IF2)
itkImageToImageFilterIF3IF2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2_swigregister
itkImageToImageFilterIF3IF2_swigregister(itkImageToImageFilterIF3IF2)

def itkImageToImageFilterIF3IF2_cast(*args):
  """itkImageToImageFilterIF3IF2_cast(itkLightObject obj) -> itkImageToImageFilterIF3IF2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2_cast(*args)

class itkImageToImageFilterIF3IRGBAUS3(itkImageSourcePython.itkImageSourceIRGBAUS3):
    """Proxy of C++ itkImageToImageFilterIF3IRGBAUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBAUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBAUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF3 image)
        SetInput(self, unsigned int arg0, itkImageF3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBAUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF3
        GetInput(self, unsigned int idx) -> itkImageF3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBAUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBAUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBAUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBAUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBAUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIF3IRGBAUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF3IRGBAUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBAUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF3IRGBAUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBAUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF3IRGBAUS3
        
        Create a new object of the class itkImageToImageFilterIF3IRGBAUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF3IRGBAUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF3IRGBAUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF3IRGBAUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF3IRGBAUS3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBAUS3_SetInput,None,itkImageToImageFilterIF3IRGBAUS3)
itkImageToImageFilterIF3IRGBAUS3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBAUS3_GetInput,None,itkImageToImageFilterIF3IRGBAUS3)
itkImageToImageFilterIF3IRGBAUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBAUS3_PushBackInput,None,itkImageToImageFilterIF3IRGBAUS3)
itkImageToImageFilterIF3IRGBAUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBAUS3_PopBackInput,None,itkImageToImageFilterIF3IRGBAUS3)
itkImageToImageFilterIF3IRGBAUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBAUS3_PushFrontInput,None,itkImageToImageFilterIF3IRGBAUS3)
itkImageToImageFilterIF3IRGBAUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBAUS3_PopFrontInput,None,itkImageToImageFilterIF3IRGBAUS3)
itkImageToImageFilterIF3IRGBAUS3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBAUS3_GetPointer,None,itkImageToImageFilterIF3IRGBAUS3)
itkImageToImageFilterIF3IRGBAUS3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBAUS3_swigregister
itkImageToImageFilterIF3IRGBAUS3_swigregister(itkImageToImageFilterIF3IRGBAUS3)

def itkImageToImageFilterIF3IRGBAUS3_cast(*args):
  """itkImageToImageFilterIF3IRGBAUS3_cast(itkLightObject obj) -> itkImageToImageFilterIF3IRGBAUS3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBAUS3_cast(*args)

class itkImageToImageFilterIF3IRGBUS3(itkImageSourcePython.itkImageSourceIRGBUS3):
    """Proxy of C++ itkImageToImageFilterIF3IRGBUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF3 image)
        SetInput(self, unsigned int arg0, itkImageF3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF3
        GetInput(self, unsigned int idx) -> itkImageF3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIF3IRGBUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF3IRGBUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF3IRGBUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF3IRGBUS3
        
        Create a new object of the class itkImageToImageFilterIF3IRGBUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF3IRGBUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF3IRGBUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF3IRGBUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF3IRGBUS3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBUS3_SetInput,None,itkImageToImageFilterIF3IRGBUS3)
itkImageToImageFilterIF3IRGBUS3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBUS3_GetInput,None,itkImageToImageFilterIF3IRGBUS3)
itkImageToImageFilterIF3IRGBUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBUS3_PushBackInput,None,itkImageToImageFilterIF3IRGBUS3)
itkImageToImageFilterIF3IRGBUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBUS3_PopBackInput,None,itkImageToImageFilterIF3IRGBUS3)
itkImageToImageFilterIF3IRGBUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBUS3_PushFrontInput,None,itkImageToImageFilterIF3IRGBUS3)
itkImageToImageFilterIF3IRGBUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBUS3_PopFrontInput,None,itkImageToImageFilterIF3IRGBUS3)
itkImageToImageFilterIF3IRGBUS3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBUS3_GetPointer,None,itkImageToImageFilterIF3IRGBUS3)
itkImageToImageFilterIF3IRGBUS3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBUS3_swigregister
itkImageToImageFilterIF3IRGBUS3_swigregister(itkImageToImageFilterIF3IRGBUS3)

def itkImageToImageFilterIF3IRGBUS3_cast(*args):
  """itkImageToImageFilterIF3IRGBUS3_cast(itkLightObject obj) -> itkImageToImageFilterIF3IRGBUS3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBUS3_cast(*args)

class itkImageToImageFilterIF3ISSRTD33(itkImageSourcePython.itkImageSourceISSRTD33):
    """Proxy of C++ itkImageToImageFilterIF3ISSRTD33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF3ISSRTD33_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF3ISSRTD33_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF3 image)
        SetInput(self, unsigned int arg0, itkImageF3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3ISSRTD33_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF3
        GetInput(self, unsigned int idx) -> itkImageF3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3ISSRTD33_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3ISSRTD33_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3ISSRTD33_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3ISSRTD33_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3ISSRTD33_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIF3ISSRTD33
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF3ISSRTD33"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3ISSRTD33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF3ISSRTD33"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3ISSRTD33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF3ISSRTD33
        
        Create a new object of the class itkImageToImageFilterIF3ISSRTD33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF3ISSRTD33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF3ISSRTD33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF3ISSRTD33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF3ISSRTD33.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3ISSRTD33_SetInput,None,itkImageToImageFilterIF3ISSRTD33)
itkImageToImageFilterIF3ISSRTD33.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3ISSRTD33_GetInput,None,itkImageToImageFilterIF3ISSRTD33)
itkImageToImageFilterIF3ISSRTD33.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3ISSRTD33_PushBackInput,None,itkImageToImageFilterIF3ISSRTD33)
itkImageToImageFilterIF3ISSRTD33.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3ISSRTD33_PopBackInput,None,itkImageToImageFilterIF3ISSRTD33)
itkImageToImageFilterIF3ISSRTD33.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3ISSRTD33_PushFrontInput,None,itkImageToImageFilterIF3ISSRTD33)
itkImageToImageFilterIF3ISSRTD33.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3ISSRTD33_PopFrontInput,None,itkImageToImageFilterIF3ISSRTD33)
itkImageToImageFilterIF3ISSRTD33.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3ISSRTD33_GetPointer,None,itkImageToImageFilterIF3ISSRTD33)
itkImageToImageFilterIF3ISSRTD33_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIF3ISSRTD33_swigregister
itkImageToImageFilterIF3ISSRTD33_swigregister(itkImageToImageFilterIF3ISSRTD33)

def itkImageToImageFilterIF3ISSRTD33_cast(*args):
  """itkImageToImageFilterIF3ISSRTD33_cast(itkLightObject obj) -> itkImageToImageFilterIF3ISSRTD33"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIF3ISSRTD33_cast(*args)

class itkImageToImageFilterIF3IVF33(itkImageSourcePython.itkImageSourceIVF33):
    """Proxy of C++ itkImageToImageFilterIF3IVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF3IVF33_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF3IVF33_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF3 image)
        SetInput(self, unsigned int arg0, itkImageF3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IVF33_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF3
        GetInput(self, unsigned int idx) -> itkImageF3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IVF33_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IVF33_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IVF33_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IVF33_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IVF33_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIF3IVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF3IVF33"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF3IVF33"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF3IVF33
        
        Create a new object of the class itkImageToImageFilterIF3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF3IVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF3IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF3IVF33.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3IVF33_SetInput,None,itkImageToImageFilterIF3IVF33)
itkImageToImageFilterIF3IVF33.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3IVF33_GetInput,None,itkImageToImageFilterIF3IVF33)
itkImageToImageFilterIF3IVF33.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3IVF33_PushBackInput,None,itkImageToImageFilterIF3IVF33)
itkImageToImageFilterIF3IVF33.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3IVF33_PopBackInput,None,itkImageToImageFilterIF3IVF33)
itkImageToImageFilterIF3IVF33.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3IVF33_PushFrontInput,None,itkImageToImageFilterIF3IVF33)
itkImageToImageFilterIF3IVF33.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3IVF33_PopFrontInput,None,itkImageToImageFilterIF3IVF33)
itkImageToImageFilterIF3IVF33.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3IVF33_GetPointer,None,itkImageToImageFilterIF3IVF33)
itkImageToImageFilterIF3IVF33_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIF3IVF33_swigregister
itkImageToImageFilterIF3IVF33_swigregister(itkImageToImageFilterIF3IVF33)

def itkImageToImageFilterIF3IVF33_cast(*args):
  """itkImageToImageFilterIF3IVF33_cast(itkLightObject obj) -> itkImageToImageFilterIF3IVF33"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIF3IVF33_cast(*args)

class itkImageToImageFilterIF3VID3(itkImageSourcePython.itkImageSourceVID3):
    """Proxy of C++ itkImageToImageFilterIF3VID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF3VID3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF3VID3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF3 image)
        SetInput(self, unsigned int arg0, itkImageF3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VID3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF3
        GetInput(self, unsigned int idx) -> itkImageF3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VID3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VID3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VID3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VID3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VID3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIF3VID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF3VID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF3VID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF3VID3
        
        Create a new object of the class itkImageToImageFilterIF3VID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF3VID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF3VID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF3VID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF3VID3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VID3_SetInput,None,itkImageToImageFilterIF3VID3)
itkImageToImageFilterIF3VID3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VID3_GetInput,None,itkImageToImageFilterIF3VID3)
itkImageToImageFilterIF3VID3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VID3_PushBackInput,None,itkImageToImageFilterIF3VID3)
itkImageToImageFilterIF3VID3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VID3_PopBackInput,None,itkImageToImageFilterIF3VID3)
itkImageToImageFilterIF3VID3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VID3_PushFrontInput,None,itkImageToImageFilterIF3VID3)
itkImageToImageFilterIF3VID3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VID3_PopFrontInput,None,itkImageToImageFilterIF3VID3)
itkImageToImageFilterIF3VID3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VID3_GetPointer,None,itkImageToImageFilterIF3VID3)
itkImageToImageFilterIF3VID3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIF3VID3_swigregister
itkImageToImageFilterIF3VID3_swigregister(itkImageToImageFilterIF3VID3)

def itkImageToImageFilterIF3VID3_cast(*args):
  """itkImageToImageFilterIF3VID3_cast(itkLightObject obj) -> itkImageToImageFilterIF3VID3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VID3_cast(*args)

class itkImageToImageFilterIF3VIF3(itkImageSourcePython.itkImageSourceVIF3):
    """Proxy of C++ itkImageToImageFilterIF3VIF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIF3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIF3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF3 image)
        SetInput(self, unsigned int arg0, itkImageF3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIF3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF3
        GetInput(self, unsigned int idx) -> itkImageF3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIF3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIF3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIF3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIF3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIF3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIF3VIF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF3VIF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF3VIF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF3VIF3
        
        Create a new object of the class itkImageToImageFilterIF3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF3VIF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF3VIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF3VIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF3VIF3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VIF3_SetInput,None,itkImageToImageFilterIF3VIF3)
itkImageToImageFilterIF3VIF3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VIF3_GetInput,None,itkImageToImageFilterIF3VIF3)
itkImageToImageFilterIF3VIF3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VIF3_PushBackInput,None,itkImageToImageFilterIF3VIF3)
itkImageToImageFilterIF3VIF3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VIF3_PopBackInput,None,itkImageToImageFilterIF3VIF3)
itkImageToImageFilterIF3VIF3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VIF3_PushFrontInput,None,itkImageToImageFilterIF3VIF3)
itkImageToImageFilterIF3VIF3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VIF3_PopFrontInput,None,itkImageToImageFilterIF3VIF3)
itkImageToImageFilterIF3VIF3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VIF3_GetPointer,None,itkImageToImageFilterIF3VIF3)
itkImageToImageFilterIF3VIF3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIF3_swigregister
itkImageToImageFilterIF3VIF3_swigregister(itkImageToImageFilterIF3VIF3)

def itkImageToImageFilterIF3VIF3_cast(*args):
  """itkImageToImageFilterIF3VIF3_cast(itkLightObject obj) -> itkImageToImageFilterIF3VIF3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIF3_cast(*args)

class itkImageToImageFilterIF3VIUC3(itkImageSourcePython.itkImageSourceVIUC3):
    """Proxy of C++ itkImageToImageFilterIF3VIUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUC3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUC3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF3 image)
        SetInput(self, unsigned int arg0, itkImageF3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUC3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF3
        GetInput(self, unsigned int idx) -> itkImageF3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUC3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUC3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUC3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUC3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUC3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIF3VIUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF3VIUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF3VIUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF3VIUC3
        
        Create a new object of the class itkImageToImageFilterIF3VIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF3VIUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF3VIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF3VIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF3VIUC3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUC3_SetInput,None,itkImageToImageFilterIF3VIUC3)
itkImageToImageFilterIF3VIUC3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUC3_GetInput,None,itkImageToImageFilterIF3VIUC3)
itkImageToImageFilterIF3VIUC3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUC3_PushBackInput,None,itkImageToImageFilterIF3VIUC3)
itkImageToImageFilterIF3VIUC3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUC3_PopBackInput,None,itkImageToImageFilterIF3VIUC3)
itkImageToImageFilterIF3VIUC3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUC3_PushFrontInput,None,itkImageToImageFilterIF3VIUC3)
itkImageToImageFilterIF3VIUC3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUC3_PopFrontInput,None,itkImageToImageFilterIF3VIUC3)
itkImageToImageFilterIF3VIUC3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUC3_GetPointer,None,itkImageToImageFilterIF3VIUC3)
itkImageToImageFilterIF3VIUC3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUC3_swigregister
itkImageToImageFilterIF3VIUC3_swigregister(itkImageToImageFilterIF3VIUC3)

def itkImageToImageFilterIF3VIUC3_cast(*args):
  """itkImageToImageFilterIF3VIUC3_cast(itkLightObject obj) -> itkImageToImageFilterIF3VIUC3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUC3_cast(*args)

class itkImageToImageFilterIF3VIUL3(itkImageSourcePython.itkImageSourceVIUL3):
    """Proxy of C++ itkImageToImageFilterIF3VIUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUL3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUL3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF3 image)
        SetInput(self, unsigned int arg0, itkImageF3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUL3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF3
        GetInput(self, unsigned int idx) -> itkImageF3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUL3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUL3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUL3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUL3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUL3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIF3VIUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF3VIUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF3VIUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF3VIUL3
        
        Create a new object of the class itkImageToImageFilterIF3VIUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF3VIUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF3VIUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF3VIUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF3VIUL3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUL3_SetInput,None,itkImageToImageFilterIF3VIUL3)
itkImageToImageFilterIF3VIUL3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUL3_GetInput,None,itkImageToImageFilterIF3VIUL3)
itkImageToImageFilterIF3VIUL3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUL3_PushBackInput,None,itkImageToImageFilterIF3VIUL3)
itkImageToImageFilterIF3VIUL3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUL3_PopBackInput,None,itkImageToImageFilterIF3VIUL3)
itkImageToImageFilterIF3VIUL3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUL3_PushFrontInput,None,itkImageToImageFilterIF3VIUL3)
itkImageToImageFilterIF3VIUL3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUL3_PopFrontInput,None,itkImageToImageFilterIF3VIUL3)
itkImageToImageFilterIF3VIUL3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUL3_GetPointer,None,itkImageToImageFilterIF3VIUL3)
itkImageToImageFilterIF3VIUL3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUL3_swigregister
itkImageToImageFilterIF3VIUL3_swigregister(itkImageToImageFilterIF3VIUL3)

def itkImageToImageFilterIF3VIUL3_cast(*args):
  """itkImageToImageFilterIF3VIUL3_cast(itkLightObject obj) -> itkImageToImageFilterIF3VIUL3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUL3_cast(*args)

class itkImageToImageFilterIF3VIUS3(itkImageSourcePython.itkImageSourceVIUS3):
    """Proxy of C++ itkImageToImageFilterIF3VIUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF3 image)
        SetInput(self, unsigned int arg0, itkImageF3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF3
        GetInput(self, unsigned int idx) -> itkImageF3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIF3VIUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF3VIUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF3VIUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF3VIUS3
        
        Create a new object of the class itkImageToImageFilterIF3VIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF3VIUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF3VIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF3VIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF3VIUS3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUS3_SetInput,None,itkImageToImageFilterIF3VIUS3)
itkImageToImageFilterIF3VIUS3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUS3_GetInput,None,itkImageToImageFilterIF3VIUS3)
itkImageToImageFilterIF3VIUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUS3_PushBackInput,None,itkImageToImageFilterIF3VIUS3)
itkImageToImageFilterIF3VIUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUS3_PopBackInput,None,itkImageToImageFilterIF3VIUS3)
itkImageToImageFilterIF3VIUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUS3_PushFrontInput,None,itkImageToImageFilterIF3VIUS3)
itkImageToImageFilterIF3VIUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUS3_PopFrontInput,None,itkImageToImageFilterIF3VIUS3)
itkImageToImageFilterIF3VIUS3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUS3_GetPointer,None,itkImageToImageFilterIF3VIUS3)
itkImageToImageFilterIF3VIUS3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUS3_swigregister
itkImageToImageFilterIF3VIUS3_swigregister(itkImageToImageFilterIF3VIUS3)

def itkImageToImageFilterIF3VIUS3_cast(*args):
  """itkImageToImageFilterIF3VIUS3_cast(itkLightObject obj) -> itkImageToImageFilterIF3VIUS3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIF3VIUS3_cast(*args)

class itkImageToImageFilterIRGBAUS2ID2(itkImageSourcePython.itkImageSourceID2):
    """Proxy of C++ itkImageToImageFilterIRGBAUS2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2ID2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2ID2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBAUS2 image)
        SetInput(self, unsigned int arg0, itkImageRGBAUS2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2ID2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBAUS2
        GetInput(self, unsigned int idx) -> itkImageRGBAUS2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2ID2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBAUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2ID2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2ID2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBAUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2ID2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2ID2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIRGBAUS2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUS2ID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBAUS2ID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBAUS2ID2
        
        Create a new object of the class itkImageToImageFilterIRGBAUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBAUS2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBAUS2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBAUS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBAUS2ID2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2ID2_SetInput,None,itkImageToImageFilterIRGBAUS2ID2)
itkImageToImageFilterIRGBAUS2ID2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2ID2_GetInput,None,itkImageToImageFilterIRGBAUS2ID2)
itkImageToImageFilterIRGBAUS2ID2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2ID2_PushBackInput,None,itkImageToImageFilterIRGBAUS2ID2)
itkImageToImageFilterIRGBAUS2ID2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2ID2_PopBackInput,None,itkImageToImageFilterIRGBAUS2ID2)
itkImageToImageFilterIRGBAUS2ID2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2ID2_PushFrontInput,None,itkImageToImageFilterIRGBAUS2ID2)
itkImageToImageFilterIRGBAUS2ID2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2ID2_PopFrontInput,None,itkImageToImageFilterIRGBAUS2ID2)
itkImageToImageFilterIRGBAUS2ID2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2ID2_GetPointer,None,itkImageToImageFilterIRGBAUS2ID2)
itkImageToImageFilterIRGBAUS2ID2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2ID2_swigregister
itkImageToImageFilterIRGBAUS2ID2_swigregister(itkImageToImageFilterIRGBAUS2ID2)

def itkImageToImageFilterIRGBAUS2ID2_cast(*args):
  """itkImageToImageFilterIRGBAUS2ID2_cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUS2ID2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2ID2_cast(*args)

class itkImageToImageFilterIRGBAUS2IF2(itkImageSourcePython.itkImageSourceIF2):
    """Proxy of C++ itkImageToImageFilterIRGBAUS2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IF2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IF2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBAUS2 image)
        SetInput(self, unsigned int arg0, itkImageRGBAUS2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IF2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBAUS2
        GetInput(self, unsigned int idx) -> itkImageRGBAUS2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IF2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBAUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IF2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IF2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBAUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IF2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IF2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIRGBAUS2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUS2IF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBAUS2IF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBAUS2IF2
        
        Create a new object of the class itkImageToImageFilterIRGBAUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBAUS2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBAUS2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBAUS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBAUS2IF2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IF2_SetInput,None,itkImageToImageFilterIRGBAUS2IF2)
itkImageToImageFilterIRGBAUS2IF2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IF2_GetInput,None,itkImageToImageFilterIRGBAUS2IF2)
itkImageToImageFilterIRGBAUS2IF2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IF2_PushBackInput,None,itkImageToImageFilterIRGBAUS2IF2)
itkImageToImageFilterIRGBAUS2IF2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IF2_PopBackInput,None,itkImageToImageFilterIRGBAUS2IF2)
itkImageToImageFilterIRGBAUS2IF2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IF2_PushFrontInput,None,itkImageToImageFilterIRGBAUS2IF2)
itkImageToImageFilterIRGBAUS2IF2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IF2_PopFrontInput,None,itkImageToImageFilterIRGBAUS2IF2)
itkImageToImageFilterIRGBAUS2IF2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IF2_GetPointer,None,itkImageToImageFilterIRGBAUS2IF2)
itkImageToImageFilterIRGBAUS2IF2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IF2_swigregister
itkImageToImageFilterIRGBAUS2IF2_swigregister(itkImageToImageFilterIRGBAUS2IF2)

def itkImageToImageFilterIRGBAUS2IF2_cast(*args):
  """itkImageToImageFilterIRGBAUS2IF2_cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUS2IF2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IF2_cast(*args)

class itkImageToImageFilterIRGBAUS2IUC2(itkImageSourcePython.itkImageSourceIUC2):
    """Proxy of C++ itkImageToImageFilterIRGBAUS2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUC2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUC2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBAUS2 image)
        SetInput(self, unsigned int arg0, itkImageRGBAUS2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUC2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBAUS2
        GetInput(self, unsigned int idx) -> itkImageRGBAUS2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUC2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBAUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUC2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUC2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBAUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUC2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUC2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIRGBAUS2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUS2IUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBAUS2IUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBAUS2IUC2
        
        Create a new object of the class itkImageToImageFilterIRGBAUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBAUS2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBAUS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBAUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBAUS2IUC2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUC2_SetInput,None,itkImageToImageFilterIRGBAUS2IUC2)
itkImageToImageFilterIRGBAUS2IUC2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUC2_GetInput,None,itkImageToImageFilterIRGBAUS2IUC2)
itkImageToImageFilterIRGBAUS2IUC2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUC2_PushBackInput,None,itkImageToImageFilterIRGBAUS2IUC2)
itkImageToImageFilterIRGBAUS2IUC2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUC2_PopBackInput,None,itkImageToImageFilterIRGBAUS2IUC2)
itkImageToImageFilterIRGBAUS2IUC2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUC2_PushFrontInput,None,itkImageToImageFilterIRGBAUS2IUC2)
itkImageToImageFilterIRGBAUS2IUC2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUC2_PopFrontInput,None,itkImageToImageFilterIRGBAUS2IUC2)
itkImageToImageFilterIRGBAUS2IUC2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUC2_GetPointer,None,itkImageToImageFilterIRGBAUS2IUC2)
itkImageToImageFilterIRGBAUS2IUC2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUC2_swigregister
itkImageToImageFilterIRGBAUS2IUC2_swigregister(itkImageToImageFilterIRGBAUS2IUC2)

def itkImageToImageFilterIRGBAUS2IUC2_cast(*args):
  """itkImageToImageFilterIRGBAUS2IUC2_cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUS2IUC2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUC2_cast(*args)

class itkImageToImageFilterIRGBAUS2IUL2(itkImageSourcePython.itkImageSourceIUL2):
    """Proxy of C++ itkImageToImageFilterIRGBAUS2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUL2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUL2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBAUS2 image)
        SetInput(self, unsigned int arg0, itkImageRGBAUS2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUL2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBAUS2
        GetInput(self, unsigned int idx) -> itkImageRGBAUS2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUL2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBAUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUL2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUL2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBAUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUL2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUL2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIRGBAUS2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUS2IUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBAUS2IUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBAUS2IUL2
        
        Create a new object of the class itkImageToImageFilterIRGBAUS2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBAUS2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBAUS2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBAUS2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBAUS2IUL2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUL2_SetInput,None,itkImageToImageFilterIRGBAUS2IUL2)
itkImageToImageFilterIRGBAUS2IUL2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUL2_GetInput,None,itkImageToImageFilterIRGBAUS2IUL2)
itkImageToImageFilterIRGBAUS2IUL2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUL2_PushBackInput,None,itkImageToImageFilterIRGBAUS2IUL2)
itkImageToImageFilterIRGBAUS2IUL2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUL2_PopBackInput,None,itkImageToImageFilterIRGBAUS2IUL2)
itkImageToImageFilterIRGBAUS2IUL2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUL2_PushFrontInput,None,itkImageToImageFilterIRGBAUS2IUL2)
itkImageToImageFilterIRGBAUS2IUL2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUL2_PopFrontInput,None,itkImageToImageFilterIRGBAUS2IUL2)
itkImageToImageFilterIRGBAUS2IUL2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUL2_GetPointer,None,itkImageToImageFilterIRGBAUS2IUL2)
itkImageToImageFilterIRGBAUS2IUL2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUL2_swigregister
itkImageToImageFilterIRGBAUS2IUL2_swigregister(itkImageToImageFilterIRGBAUS2IUL2)

def itkImageToImageFilterIRGBAUS2IUL2_cast(*args):
  """itkImageToImageFilterIRGBAUS2IUL2_cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUS2IUL2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUL2_cast(*args)

class itkImageToImageFilterIRGBAUS2IUS2(itkImageSourcePython.itkImageSourceIUS2):
    """Proxy of C++ itkImageToImageFilterIRGBAUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBAUS2 image)
        SetInput(self, unsigned int arg0, itkImageRGBAUS2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBAUS2
        GetInput(self, unsigned int idx) -> itkImageRGBAUS2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBAUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBAUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIRGBAUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUS2IUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBAUS2IUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBAUS2IUS2
        
        Create a new object of the class itkImageToImageFilterIRGBAUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBAUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBAUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBAUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBAUS2IUS2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUS2_SetInput,None,itkImageToImageFilterIRGBAUS2IUS2)
itkImageToImageFilterIRGBAUS2IUS2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUS2_GetInput,None,itkImageToImageFilterIRGBAUS2IUS2)
itkImageToImageFilterIRGBAUS2IUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUS2_PushBackInput,None,itkImageToImageFilterIRGBAUS2IUS2)
itkImageToImageFilterIRGBAUS2IUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUS2_PopBackInput,None,itkImageToImageFilterIRGBAUS2IUS2)
itkImageToImageFilterIRGBAUS2IUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUS2_PushFrontInput,None,itkImageToImageFilterIRGBAUS2IUS2)
itkImageToImageFilterIRGBAUS2IUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUS2_PopFrontInput,None,itkImageToImageFilterIRGBAUS2IUS2)
itkImageToImageFilterIRGBAUS2IUS2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUS2_GetPointer,None,itkImageToImageFilterIRGBAUS2IUS2)
itkImageToImageFilterIRGBAUS2IUS2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUS2_swigregister
itkImageToImageFilterIRGBAUS2IUS2_swigregister(itkImageToImageFilterIRGBAUS2IUS2)

def itkImageToImageFilterIRGBAUS2IUS2_cast(*args):
  """itkImageToImageFilterIRGBAUS2IUS2_cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUS2IUS2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUS2_cast(*args)

class itkImageToImageFilterIRGBAUS3ID3(itkImageSourcePython.itkImageSourceID3):
    """Proxy of C++ itkImageToImageFilterIRGBAUS3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3ID3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3ID3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBAUS3 image)
        SetInput(self, unsigned int arg0, itkImageRGBAUS3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3ID3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBAUS3
        GetInput(self, unsigned int idx) -> itkImageRGBAUS3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3ID3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBAUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3ID3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3ID3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBAUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3ID3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3ID3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIRGBAUS3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUS3ID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBAUS3ID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBAUS3ID3
        
        Create a new object of the class itkImageToImageFilterIRGBAUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBAUS3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBAUS3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBAUS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBAUS3ID3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3ID3_SetInput,None,itkImageToImageFilterIRGBAUS3ID3)
itkImageToImageFilterIRGBAUS3ID3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3ID3_GetInput,None,itkImageToImageFilterIRGBAUS3ID3)
itkImageToImageFilterIRGBAUS3ID3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3ID3_PushBackInput,None,itkImageToImageFilterIRGBAUS3ID3)
itkImageToImageFilterIRGBAUS3ID3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3ID3_PopBackInput,None,itkImageToImageFilterIRGBAUS3ID3)
itkImageToImageFilterIRGBAUS3ID3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3ID3_PushFrontInput,None,itkImageToImageFilterIRGBAUS3ID3)
itkImageToImageFilterIRGBAUS3ID3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3ID3_PopFrontInput,None,itkImageToImageFilterIRGBAUS3ID3)
itkImageToImageFilterIRGBAUS3ID3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3ID3_GetPointer,None,itkImageToImageFilterIRGBAUS3ID3)
itkImageToImageFilterIRGBAUS3ID3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3ID3_swigregister
itkImageToImageFilterIRGBAUS3ID3_swigregister(itkImageToImageFilterIRGBAUS3ID3)

def itkImageToImageFilterIRGBAUS3ID3_cast(*args):
  """itkImageToImageFilterIRGBAUS3ID3_cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUS3ID3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3ID3_cast(*args)

class itkImageToImageFilterIRGBAUS3IF3(itkImageSourcePython.itkImageSourceIF3):
    """Proxy of C++ itkImageToImageFilterIRGBAUS3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IF3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IF3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBAUS3 image)
        SetInput(self, unsigned int arg0, itkImageRGBAUS3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IF3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBAUS3
        GetInput(self, unsigned int idx) -> itkImageRGBAUS3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IF3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBAUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IF3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IF3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBAUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IF3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IF3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIRGBAUS3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUS3IF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBAUS3IF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBAUS3IF3
        
        Create a new object of the class itkImageToImageFilterIRGBAUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBAUS3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBAUS3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBAUS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBAUS3IF3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IF3_SetInput,None,itkImageToImageFilterIRGBAUS3IF3)
itkImageToImageFilterIRGBAUS3IF3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IF3_GetInput,None,itkImageToImageFilterIRGBAUS3IF3)
itkImageToImageFilterIRGBAUS3IF3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IF3_PushBackInput,None,itkImageToImageFilterIRGBAUS3IF3)
itkImageToImageFilterIRGBAUS3IF3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IF3_PopBackInput,None,itkImageToImageFilterIRGBAUS3IF3)
itkImageToImageFilterIRGBAUS3IF3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IF3_PushFrontInput,None,itkImageToImageFilterIRGBAUS3IF3)
itkImageToImageFilterIRGBAUS3IF3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IF3_PopFrontInput,None,itkImageToImageFilterIRGBAUS3IF3)
itkImageToImageFilterIRGBAUS3IF3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IF3_GetPointer,None,itkImageToImageFilterIRGBAUS3IF3)
itkImageToImageFilterIRGBAUS3IF3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IF3_swigregister
itkImageToImageFilterIRGBAUS3IF3_swigregister(itkImageToImageFilterIRGBAUS3IF3)

def itkImageToImageFilterIRGBAUS3IF3_cast(*args):
  """itkImageToImageFilterIRGBAUS3IF3_cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUS3IF3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IF3_cast(*args)

class itkImageToImageFilterIRGBAUS3IUC3(itkImageSourcePython.itkImageSourceIUC3):
    """Proxy of C++ itkImageToImageFilterIRGBAUS3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUC3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUC3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBAUS3 image)
        SetInput(self, unsigned int arg0, itkImageRGBAUS3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUC3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBAUS3
        GetInput(self, unsigned int idx) -> itkImageRGBAUS3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUC3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBAUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUC3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUC3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBAUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUC3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUC3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIRGBAUS3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUS3IUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBAUS3IUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBAUS3IUC3
        
        Create a new object of the class itkImageToImageFilterIRGBAUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBAUS3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBAUS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBAUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBAUS3IUC3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUC3_SetInput,None,itkImageToImageFilterIRGBAUS3IUC3)
itkImageToImageFilterIRGBAUS3IUC3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUC3_GetInput,None,itkImageToImageFilterIRGBAUS3IUC3)
itkImageToImageFilterIRGBAUS3IUC3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUC3_PushBackInput,None,itkImageToImageFilterIRGBAUS3IUC3)
itkImageToImageFilterIRGBAUS3IUC3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUC3_PopBackInput,None,itkImageToImageFilterIRGBAUS3IUC3)
itkImageToImageFilterIRGBAUS3IUC3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUC3_PushFrontInput,None,itkImageToImageFilterIRGBAUS3IUC3)
itkImageToImageFilterIRGBAUS3IUC3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUC3_PopFrontInput,None,itkImageToImageFilterIRGBAUS3IUC3)
itkImageToImageFilterIRGBAUS3IUC3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUC3_GetPointer,None,itkImageToImageFilterIRGBAUS3IUC3)
itkImageToImageFilterIRGBAUS3IUC3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUC3_swigregister
itkImageToImageFilterIRGBAUS3IUC3_swigregister(itkImageToImageFilterIRGBAUS3IUC3)

def itkImageToImageFilterIRGBAUS3IUC3_cast(*args):
  """itkImageToImageFilterIRGBAUS3IUC3_cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUS3IUC3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUC3_cast(*args)

class itkImageToImageFilterIRGBAUS3IUL3(itkImageSourcePython.itkImageSourceIUL3):
    """Proxy of C++ itkImageToImageFilterIRGBAUS3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUL3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUL3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBAUS3 image)
        SetInput(self, unsigned int arg0, itkImageRGBAUS3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUL3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBAUS3
        GetInput(self, unsigned int idx) -> itkImageRGBAUS3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUL3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBAUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUL3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUL3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBAUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUL3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUL3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIRGBAUS3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUS3IUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBAUS3IUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBAUS3IUL3
        
        Create a new object of the class itkImageToImageFilterIRGBAUS3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBAUS3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBAUS3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBAUS3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBAUS3IUL3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUL3_SetInput,None,itkImageToImageFilterIRGBAUS3IUL3)
itkImageToImageFilterIRGBAUS3IUL3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUL3_GetInput,None,itkImageToImageFilterIRGBAUS3IUL3)
itkImageToImageFilterIRGBAUS3IUL3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUL3_PushBackInput,None,itkImageToImageFilterIRGBAUS3IUL3)
itkImageToImageFilterIRGBAUS3IUL3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUL3_PopBackInput,None,itkImageToImageFilterIRGBAUS3IUL3)
itkImageToImageFilterIRGBAUS3IUL3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUL3_PushFrontInput,None,itkImageToImageFilterIRGBAUS3IUL3)
itkImageToImageFilterIRGBAUS3IUL3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUL3_PopFrontInput,None,itkImageToImageFilterIRGBAUS3IUL3)
itkImageToImageFilterIRGBAUS3IUL3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUL3_GetPointer,None,itkImageToImageFilterIRGBAUS3IUL3)
itkImageToImageFilterIRGBAUS3IUL3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUL3_swigregister
itkImageToImageFilterIRGBAUS3IUL3_swigregister(itkImageToImageFilterIRGBAUS3IUL3)

def itkImageToImageFilterIRGBAUS3IUL3_cast(*args):
  """itkImageToImageFilterIRGBAUS3IUL3_cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUS3IUL3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUL3_cast(*args)

class itkImageToImageFilterIRGBAUS3IUS3(itkImageSourcePython.itkImageSourceIUS3):
    """Proxy of C++ itkImageToImageFilterIRGBAUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBAUS3 image)
        SetInput(self, unsigned int arg0, itkImageRGBAUS3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBAUS3
        GetInput(self, unsigned int idx) -> itkImageRGBAUS3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBAUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBAUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIRGBAUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUS3IUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBAUS3IUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBAUS3IUS3
        
        Create a new object of the class itkImageToImageFilterIRGBAUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBAUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBAUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBAUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBAUS3IUS3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUS3_SetInput,None,itkImageToImageFilterIRGBAUS3IUS3)
itkImageToImageFilterIRGBAUS3IUS3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUS3_GetInput,None,itkImageToImageFilterIRGBAUS3IUS3)
itkImageToImageFilterIRGBAUS3IUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUS3_PushBackInput,None,itkImageToImageFilterIRGBAUS3IUS3)
itkImageToImageFilterIRGBAUS3IUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUS3_PopBackInput,None,itkImageToImageFilterIRGBAUS3IUS3)
itkImageToImageFilterIRGBAUS3IUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUS3_PushFrontInput,None,itkImageToImageFilterIRGBAUS3IUS3)
itkImageToImageFilterIRGBAUS3IUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUS3_PopFrontInput,None,itkImageToImageFilterIRGBAUS3IUS3)
itkImageToImageFilterIRGBAUS3IUS3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUS3_GetPointer,None,itkImageToImageFilterIRGBAUS3IUS3)
itkImageToImageFilterIRGBAUS3IUS3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUS3_swigregister
itkImageToImageFilterIRGBAUS3IUS3_swigregister(itkImageToImageFilterIRGBAUS3IUS3)

def itkImageToImageFilterIRGBAUS3IUS3_cast(*args):
  """itkImageToImageFilterIRGBAUS3IUS3_cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUS3IUS3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUS3_cast(*args)

class itkImageToImageFilterIRGBUS2ID2(itkImageSourcePython.itkImageSourceID2):
    """Proxy of C++ itkImageToImageFilterIRGBUS2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2ID2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2ID2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBUS2 image)
        SetInput(self, unsigned int arg0, itkImageRGBUS2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2ID2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBUS2
        GetInput(self, unsigned int idx) -> itkImageRGBUS2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2ID2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2ID2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2ID2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2ID2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2ID2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIRGBUS2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS2ID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBUS2ID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBUS2ID2
        
        Create a new object of the class itkImageToImageFilterIRGBUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBUS2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBUS2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBUS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBUS2ID2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2ID2_SetInput,None,itkImageToImageFilterIRGBUS2ID2)
itkImageToImageFilterIRGBUS2ID2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2ID2_GetInput,None,itkImageToImageFilterIRGBUS2ID2)
itkImageToImageFilterIRGBUS2ID2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2ID2_PushBackInput,None,itkImageToImageFilterIRGBUS2ID2)
itkImageToImageFilterIRGBUS2ID2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2ID2_PopBackInput,None,itkImageToImageFilterIRGBUS2ID2)
itkImageToImageFilterIRGBUS2ID2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2ID2_PushFrontInput,None,itkImageToImageFilterIRGBUS2ID2)
itkImageToImageFilterIRGBUS2ID2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2ID2_PopFrontInput,None,itkImageToImageFilterIRGBUS2ID2)
itkImageToImageFilterIRGBUS2ID2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2ID2_GetPointer,None,itkImageToImageFilterIRGBUS2ID2)
itkImageToImageFilterIRGBUS2ID2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2ID2_swigregister
itkImageToImageFilterIRGBUS2ID2_swigregister(itkImageToImageFilterIRGBUS2ID2)

def itkImageToImageFilterIRGBUS2ID2_cast(*args):
  """itkImageToImageFilterIRGBUS2ID2_cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS2ID2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2ID2_cast(*args)

class itkImageToImageFilterIRGBUS2IF2(itkImageSourcePython.itkImageSourceIF2):
    """Proxy of C++ itkImageToImageFilterIRGBUS2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IF2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IF2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBUS2 image)
        SetInput(self, unsigned int arg0, itkImageRGBUS2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IF2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBUS2
        GetInput(self, unsigned int idx) -> itkImageRGBUS2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IF2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IF2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IF2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IF2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IF2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIRGBUS2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS2IF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBUS2IF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBUS2IF2
        
        Create a new object of the class itkImageToImageFilterIRGBUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBUS2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBUS2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBUS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBUS2IF2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IF2_SetInput,None,itkImageToImageFilterIRGBUS2IF2)
itkImageToImageFilterIRGBUS2IF2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IF2_GetInput,None,itkImageToImageFilterIRGBUS2IF2)
itkImageToImageFilterIRGBUS2IF2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IF2_PushBackInput,None,itkImageToImageFilterIRGBUS2IF2)
itkImageToImageFilterIRGBUS2IF2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IF2_PopBackInput,None,itkImageToImageFilterIRGBUS2IF2)
itkImageToImageFilterIRGBUS2IF2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IF2_PushFrontInput,None,itkImageToImageFilterIRGBUS2IF2)
itkImageToImageFilterIRGBUS2IF2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IF2_PopFrontInput,None,itkImageToImageFilterIRGBUS2IF2)
itkImageToImageFilterIRGBUS2IF2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IF2_GetPointer,None,itkImageToImageFilterIRGBUS2IF2)
itkImageToImageFilterIRGBUS2IF2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IF2_swigregister
itkImageToImageFilterIRGBUS2IF2_swigregister(itkImageToImageFilterIRGBUS2IF2)

def itkImageToImageFilterIRGBUS2IF2_cast(*args):
  """itkImageToImageFilterIRGBUS2IF2_cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS2IF2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IF2_cast(*args)

class itkImageToImageFilterIRGBUS2IRGBUS3(itkImageSourcePython.itkImageSourceIRGBUS3):
    """Proxy of C++ itkImageToImageFilterIRGBUS2IRGBUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IRGBUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IRGBUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBUS2 image)
        SetInput(self, unsigned int arg0, itkImageRGBUS2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IRGBUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBUS2
        GetInput(self, unsigned int idx) -> itkImageRGBUS2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IRGBUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IRGBUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IRGBUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IRGBUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IRGBUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIRGBUS2IRGBUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS2IRGBUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IRGBUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBUS2IRGBUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IRGBUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBUS2IRGBUS3
        
        Create a new object of the class itkImageToImageFilterIRGBUS2IRGBUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBUS2IRGBUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBUS2IRGBUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBUS2IRGBUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBUS2IRGBUS3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IRGBUS3_SetInput,None,itkImageToImageFilterIRGBUS2IRGBUS3)
itkImageToImageFilterIRGBUS2IRGBUS3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IRGBUS3_GetInput,None,itkImageToImageFilterIRGBUS2IRGBUS3)
itkImageToImageFilterIRGBUS2IRGBUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IRGBUS3_PushBackInput,None,itkImageToImageFilterIRGBUS2IRGBUS3)
itkImageToImageFilterIRGBUS2IRGBUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IRGBUS3_PopBackInput,None,itkImageToImageFilterIRGBUS2IRGBUS3)
itkImageToImageFilterIRGBUS2IRGBUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IRGBUS3_PushFrontInput,None,itkImageToImageFilterIRGBUS2IRGBUS3)
itkImageToImageFilterIRGBUS2IRGBUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IRGBUS3_PopFrontInput,None,itkImageToImageFilterIRGBUS2IRGBUS3)
itkImageToImageFilterIRGBUS2IRGBUS3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IRGBUS3_GetPointer,None,itkImageToImageFilterIRGBUS2IRGBUS3)
itkImageToImageFilterIRGBUS2IRGBUS3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IRGBUS3_swigregister
itkImageToImageFilterIRGBUS2IRGBUS3_swigregister(itkImageToImageFilterIRGBUS2IRGBUS3)

def itkImageToImageFilterIRGBUS2IRGBUS3_cast(*args):
  """itkImageToImageFilterIRGBUS2IRGBUS3_cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS2IRGBUS3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IRGBUS3_cast(*args)

class itkImageToImageFilterIRGBUS2IUC2(itkImageSourcePython.itkImageSourceIUC2):
    """Proxy of C++ itkImageToImageFilterIRGBUS2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUC2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUC2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBUS2 image)
        SetInput(self, unsigned int arg0, itkImageRGBUS2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUC2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBUS2
        GetInput(self, unsigned int idx) -> itkImageRGBUS2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUC2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUC2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUC2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUC2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUC2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIRGBUS2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS2IUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBUS2IUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBUS2IUC2
        
        Create a new object of the class itkImageToImageFilterIRGBUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBUS2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBUS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBUS2IUC2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUC2_SetInput,None,itkImageToImageFilterIRGBUS2IUC2)
itkImageToImageFilterIRGBUS2IUC2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUC2_GetInput,None,itkImageToImageFilterIRGBUS2IUC2)
itkImageToImageFilterIRGBUS2IUC2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUC2_PushBackInput,None,itkImageToImageFilterIRGBUS2IUC2)
itkImageToImageFilterIRGBUS2IUC2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUC2_PopBackInput,None,itkImageToImageFilterIRGBUS2IUC2)
itkImageToImageFilterIRGBUS2IUC2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUC2_PushFrontInput,None,itkImageToImageFilterIRGBUS2IUC2)
itkImageToImageFilterIRGBUS2IUC2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUC2_PopFrontInput,None,itkImageToImageFilterIRGBUS2IUC2)
itkImageToImageFilterIRGBUS2IUC2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUC2_GetPointer,None,itkImageToImageFilterIRGBUS2IUC2)
itkImageToImageFilterIRGBUS2IUC2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUC2_swigregister
itkImageToImageFilterIRGBUS2IUC2_swigregister(itkImageToImageFilterIRGBUS2IUC2)

def itkImageToImageFilterIRGBUS2IUC2_cast(*args):
  """itkImageToImageFilterIRGBUS2IUC2_cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS2IUC2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUC2_cast(*args)

class itkImageToImageFilterIRGBUS2IUL2(itkImageSourcePython.itkImageSourceIUL2):
    """Proxy of C++ itkImageToImageFilterIRGBUS2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUL2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUL2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBUS2 image)
        SetInput(self, unsigned int arg0, itkImageRGBUS2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUL2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBUS2
        GetInput(self, unsigned int idx) -> itkImageRGBUS2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUL2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUL2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUL2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUL2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUL2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIRGBUS2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS2IUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBUS2IUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBUS2IUL2
        
        Create a new object of the class itkImageToImageFilterIRGBUS2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBUS2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBUS2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBUS2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBUS2IUL2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUL2_SetInput,None,itkImageToImageFilterIRGBUS2IUL2)
itkImageToImageFilterIRGBUS2IUL2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUL2_GetInput,None,itkImageToImageFilterIRGBUS2IUL2)
itkImageToImageFilterIRGBUS2IUL2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUL2_PushBackInput,None,itkImageToImageFilterIRGBUS2IUL2)
itkImageToImageFilterIRGBUS2IUL2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUL2_PopBackInput,None,itkImageToImageFilterIRGBUS2IUL2)
itkImageToImageFilterIRGBUS2IUL2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUL2_PushFrontInput,None,itkImageToImageFilterIRGBUS2IUL2)
itkImageToImageFilterIRGBUS2IUL2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUL2_PopFrontInput,None,itkImageToImageFilterIRGBUS2IUL2)
itkImageToImageFilterIRGBUS2IUL2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUL2_GetPointer,None,itkImageToImageFilterIRGBUS2IUL2)
itkImageToImageFilterIRGBUS2IUL2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUL2_swigregister
itkImageToImageFilterIRGBUS2IUL2_swigregister(itkImageToImageFilterIRGBUS2IUL2)

def itkImageToImageFilterIRGBUS2IUL2_cast(*args):
  """itkImageToImageFilterIRGBUS2IUL2_cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS2IUL2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUL2_cast(*args)

class itkImageToImageFilterIRGBUS2IUS2(itkImageSourcePython.itkImageSourceIUS2):
    """Proxy of C++ itkImageToImageFilterIRGBUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBUS2 image)
        SetInput(self, unsigned int arg0, itkImageRGBUS2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBUS2
        GetInput(self, unsigned int idx) -> itkImageRGBUS2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIRGBUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS2IUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBUS2IUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBUS2IUS2
        
        Create a new object of the class itkImageToImageFilterIRGBUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBUS2IUS2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUS2_SetInput,None,itkImageToImageFilterIRGBUS2IUS2)
itkImageToImageFilterIRGBUS2IUS2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUS2_GetInput,None,itkImageToImageFilterIRGBUS2IUS2)
itkImageToImageFilterIRGBUS2IUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUS2_PushBackInput,None,itkImageToImageFilterIRGBUS2IUS2)
itkImageToImageFilterIRGBUS2IUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUS2_PopBackInput,None,itkImageToImageFilterIRGBUS2IUS2)
itkImageToImageFilterIRGBUS2IUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUS2_PushFrontInput,None,itkImageToImageFilterIRGBUS2IUS2)
itkImageToImageFilterIRGBUS2IUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUS2_PopFrontInput,None,itkImageToImageFilterIRGBUS2IUS2)
itkImageToImageFilterIRGBUS2IUS2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUS2_GetPointer,None,itkImageToImageFilterIRGBUS2IUS2)
itkImageToImageFilterIRGBUS2IUS2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUS2_swigregister
itkImageToImageFilterIRGBUS2IUS2_swigregister(itkImageToImageFilterIRGBUS2IUS2)

def itkImageToImageFilterIRGBUS2IUS2_cast(*args):
  """itkImageToImageFilterIRGBUS2IUS2_cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS2IUS2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUS2_cast(*args)

class itkImageToImageFilterIRGBUS3ID3(itkImageSourcePython.itkImageSourceID3):
    """Proxy of C++ itkImageToImageFilterIRGBUS3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3ID3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3ID3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBUS3 image)
        SetInput(self, unsigned int arg0, itkImageRGBUS3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3ID3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBUS3
        GetInput(self, unsigned int idx) -> itkImageRGBUS3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3ID3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3ID3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3ID3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3ID3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3ID3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIRGBUS3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS3ID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBUS3ID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBUS3ID3
        
        Create a new object of the class itkImageToImageFilterIRGBUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBUS3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBUS3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBUS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBUS3ID3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3ID3_SetInput,None,itkImageToImageFilterIRGBUS3ID3)
itkImageToImageFilterIRGBUS3ID3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3ID3_GetInput,None,itkImageToImageFilterIRGBUS3ID3)
itkImageToImageFilterIRGBUS3ID3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3ID3_PushBackInput,None,itkImageToImageFilterIRGBUS3ID3)
itkImageToImageFilterIRGBUS3ID3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3ID3_PopBackInput,None,itkImageToImageFilterIRGBUS3ID3)
itkImageToImageFilterIRGBUS3ID3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3ID3_PushFrontInput,None,itkImageToImageFilterIRGBUS3ID3)
itkImageToImageFilterIRGBUS3ID3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3ID3_PopFrontInput,None,itkImageToImageFilterIRGBUS3ID3)
itkImageToImageFilterIRGBUS3ID3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3ID3_GetPointer,None,itkImageToImageFilterIRGBUS3ID3)
itkImageToImageFilterIRGBUS3ID3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3ID3_swigregister
itkImageToImageFilterIRGBUS3ID3_swigregister(itkImageToImageFilterIRGBUS3ID3)

def itkImageToImageFilterIRGBUS3ID3_cast(*args):
  """itkImageToImageFilterIRGBUS3ID3_cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS3ID3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3ID3_cast(*args)

class itkImageToImageFilterIRGBUS3IF3(itkImageSourcePython.itkImageSourceIF3):
    """Proxy of C++ itkImageToImageFilterIRGBUS3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IF3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IF3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBUS3 image)
        SetInput(self, unsigned int arg0, itkImageRGBUS3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IF3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBUS3
        GetInput(self, unsigned int idx) -> itkImageRGBUS3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IF3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IF3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IF3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IF3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IF3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIRGBUS3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS3IF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBUS3IF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBUS3IF3
        
        Create a new object of the class itkImageToImageFilterIRGBUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBUS3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBUS3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBUS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBUS3IF3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IF3_SetInput,None,itkImageToImageFilterIRGBUS3IF3)
itkImageToImageFilterIRGBUS3IF3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IF3_GetInput,None,itkImageToImageFilterIRGBUS3IF3)
itkImageToImageFilterIRGBUS3IF3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IF3_PushBackInput,None,itkImageToImageFilterIRGBUS3IF3)
itkImageToImageFilterIRGBUS3IF3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IF3_PopBackInput,None,itkImageToImageFilterIRGBUS3IF3)
itkImageToImageFilterIRGBUS3IF3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IF3_PushFrontInput,None,itkImageToImageFilterIRGBUS3IF3)
itkImageToImageFilterIRGBUS3IF3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IF3_PopFrontInput,None,itkImageToImageFilterIRGBUS3IF3)
itkImageToImageFilterIRGBUS3IF3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IF3_GetPointer,None,itkImageToImageFilterIRGBUS3IF3)
itkImageToImageFilterIRGBUS3IF3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IF3_swigregister
itkImageToImageFilterIRGBUS3IF3_swigregister(itkImageToImageFilterIRGBUS3IF3)

def itkImageToImageFilterIRGBUS3IF3_cast(*args):
  """itkImageToImageFilterIRGBUS3IF3_cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS3IF3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IF3_cast(*args)

class itkImageToImageFilterIRGBUS3IRGBUS2(itkImageSourcePython.itkImageSourceIRGBUS2):
    """Proxy of C++ itkImageToImageFilterIRGBUS3IRGBUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IRGBUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IRGBUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBUS3 image)
        SetInput(self, unsigned int arg0, itkImageRGBUS3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IRGBUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBUS3
        GetInput(self, unsigned int idx) -> itkImageRGBUS3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IRGBUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IRGBUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IRGBUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IRGBUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IRGBUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIRGBUS3IRGBUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS3IRGBUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IRGBUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBUS3IRGBUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IRGBUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBUS3IRGBUS2
        
        Create a new object of the class itkImageToImageFilterIRGBUS3IRGBUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBUS3IRGBUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBUS3IRGBUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBUS3IRGBUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBUS3IRGBUS2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IRGBUS2_SetInput,None,itkImageToImageFilterIRGBUS3IRGBUS2)
itkImageToImageFilterIRGBUS3IRGBUS2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IRGBUS2_GetInput,None,itkImageToImageFilterIRGBUS3IRGBUS2)
itkImageToImageFilterIRGBUS3IRGBUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IRGBUS2_PushBackInput,None,itkImageToImageFilterIRGBUS3IRGBUS2)
itkImageToImageFilterIRGBUS3IRGBUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IRGBUS2_PopBackInput,None,itkImageToImageFilterIRGBUS3IRGBUS2)
itkImageToImageFilterIRGBUS3IRGBUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IRGBUS2_PushFrontInput,None,itkImageToImageFilterIRGBUS3IRGBUS2)
itkImageToImageFilterIRGBUS3IRGBUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IRGBUS2_PopFrontInput,None,itkImageToImageFilterIRGBUS3IRGBUS2)
itkImageToImageFilterIRGBUS3IRGBUS2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IRGBUS2_GetPointer,None,itkImageToImageFilterIRGBUS3IRGBUS2)
itkImageToImageFilterIRGBUS3IRGBUS2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IRGBUS2_swigregister
itkImageToImageFilterIRGBUS3IRGBUS2_swigregister(itkImageToImageFilterIRGBUS3IRGBUS2)

def itkImageToImageFilterIRGBUS3IRGBUS2_cast(*args):
  """itkImageToImageFilterIRGBUS3IRGBUS2_cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS3IRGBUS2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IRGBUS2_cast(*args)

class itkImageToImageFilterIRGBUS3IUC3(itkImageSourcePython.itkImageSourceIUC3):
    """Proxy of C++ itkImageToImageFilterIRGBUS3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUC3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUC3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBUS3 image)
        SetInput(self, unsigned int arg0, itkImageRGBUS3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUC3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBUS3
        GetInput(self, unsigned int idx) -> itkImageRGBUS3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUC3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUC3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUC3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUC3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUC3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIRGBUS3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS3IUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBUS3IUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBUS3IUC3
        
        Create a new object of the class itkImageToImageFilterIRGBUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBUS3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBUS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBUS3IUC3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUC3_SetInput,None,itkImageToImageFilterIRGBUS3IUC3)
itkImageToImageFilterIRGBUS3IUC3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUC3_GetInput,None,itkImageToImageFilterIRGBUS3IUC3)
itkImageToImageFilterIRGBUS3IUC3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUC3_PushBackInput,None,itkImageToImageFilterIRGBUS3IUC3)
itkImageToImageFilterIRGBUS3IUC3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUC3_PopBackInput,None,itkImageToImageFilterIRGBUS3IUC3)
itkImageToImageFilterIRGBUS3IUC3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUC3_PushFrontInput,None,itkImageToImageFilterIRGBUS3IUC3)
itkImageToImageFilterIRGBUS3IUC3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUC3_PopFrontInput,None,itkImageToImageFilterIRGBUS3IUC3)
itkImageToImageFilterIRGBUS3IUC3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUC3_GetPointer,None,itkImageToImageFilterIRGBUS3IUC3)
itkImageToImageFilterIRGBUS3IUC3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUC3_swigregister
itkImageToImageFilterIRGBUS3IUC3_swigregister(itkImageToImageFilterIRGBUS3IUC3)

def itkImageToImageFilterIRGBUS3IUC3_cast(*args):
  """itkImageToImageFilterIRGBUS3IUC3_cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS3IUC3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUC3_cast(*args)

class itkImageToImageFilterIRGBUS3IUL3(itkImageSourcePython.itkImageSourceIUL3):
    """Proxy of C++ itkImageToImageFilterIRGBUS3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUL3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUL3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBUS3 image)
        SetInput(self, unsigned int arg0, itkImageRGBUS3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUL3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBUS3
        GetInput(self, unsigned int idx) -> itkImageRGBUS3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUL3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUL3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUL3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUL3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUL3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIRGBUS3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS3IUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBUS3IUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBUS3IUL3
        
        Create a new object of the class itkImageToImageFilterIRGBUS3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBUS3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBUS3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBUS3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBUS3IUL3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUL3_SetInput,None,itkImageToImageFilterIRGBUS3IUL3)
itkImageToImageFilterIRGBUS3IUL3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUL3_GetInput,None,itkImageToImageFilterIRGBUS3IUL3)
itkImageToImageFilterIRGBUS3IUL3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUL3_PushBackInput,None,itkImageToImageFilterIRGBUS3IUL3)
itkImageToImageFilterIRGBUS3IUL3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUL3_PopBackInput,None,itkImageToImageFilterIRGBUS3IUL3)
itkImageToImageFilterIRGBUS3IUL3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUL3_PushFrontInput,None,itkImageToImageFilterIRGBUS3IUL3)
itkImageToImageFilterIRGBUS3IUL3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUL3_PopFrontInput,None,itkImageToImageFilterIRGBUS3IUL3)
itkImageToImageFilterIRGBUS3IUL3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUL3_GetPointer,None,itkImageToImageFilterIRGBUS3IUL3)
itkImageToImageFilterIRGBUS3IUL3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUL3_swigregister
itkImageToImageFilterIRGBUS3IUL3_swigregister(itkImageToImageFilterIRGBUS3IUL3)

def itkImageToImageFilterIRGBUS3IUL3_cast(*args):
  """itkImageToImageFilterIRGBUS3IUL3_cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS3IUL3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUL3_cast(*args)

class itkImageToImageFilterIRGBUS3IUS3(itkImageSourcePython.itkImageSourceIUS3):
    """Proxy of C++ itkImageToImageFilterIRGBUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBUS3 image)
        SetInput(self, unsigned int arg0, itkImageRGBUS3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBUS3
        GetInput(self, unsigned int idx) -> itkImageRGBUS3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIRGBUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS3IUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBUS3IUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBUS3IUS3
        
        Create a new object of the class itkImageToImageFilterIRGBUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBUS3IUS3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUS3_SetInput,None,itkImageToImageFilterIRGBUS3IUS3)
itkImageToImageFilterIRGBUS3IUS3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUS3_GetInput,None,itkImageToImageFilterIRGBUS3IUS3)
itkImageToImageFilterIRGBUS3IUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUS3_PushBackInput,None,itkImageToImageFilterIRGBUS3IUS3)
itkImageToImageFilterIRGBUS3IUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUS3_PopBackInput,None,itkImageToImageFilterIRGBUS3IUS3)
itkImageToImageFilterIRGBUS3IUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUS3_PushFrontInput,None,itkImageToImageFilterIRGBUS3IUS3)
itkImageToImageFilterIRGBUS3IUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUS3_PopFrontInput,None,itkImageToImageFilterIRGBUS3IUS3)
itkImageToImageFilterIRGBUS3IUS3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUS3_GetPointer,None,itkImageToImageFilterIRGBUS3IUS3)
itkImageToImageFilterIRGBUS3IUS3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUS3_swigregister
itkImageToImageFilterIRGBUS3IUS3_swigregister(itkImageToImageFilterIRGBUS3IUS3)

def itkImageToImageFilterIRGBUS3IUS3_cast(*args):
  """itkImageToImageFilterIRGBUS3IUS3_cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS3IUS3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUS3_cast(*args)

class itkImageToImageFilterISSRTD22ID2(itkImageSourcePython.itkImageSourceID2):
    """Proxy of C++ itkImageToImageFilterISSRTD22ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22ID2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22ID2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageSSRTD22 image)
        SetInput(self, unsigned int arg0, itkImageSSRTD22 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22ID2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageSSRTD22
        GetInput(self, unsigned int idx) -> itkImageSSRTD22
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22ID2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageSSRTD22 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22ID2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22ID2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageSSRTD22 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22ID2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22ID2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterISSRTD22ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterISSRTD22ID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterISSRTD22ID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterISSRTD22ID2
        
        Create a new object of the class itkImageToImageFilterISSRTD22ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterISSRTD22ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterISSRTD22ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterISSRTD22ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterISSRTD22ID2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22ID2_SetInput,None,itkImageToImageFilterISSRTD22ID2)
itkImageToImageFilterISSRTD22ID2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22ID2_GetInput,None,itkImageToImageFilterISSRTD22ID2)
itkImageToImageFilterISSRTD22ID2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22ID2_PushBackInput,None,itkImageToImageFilterISSRTD22ID2)
itkImageToImageFilterISSRTD22ID2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22ID2_PopBackInput,None,itkImageToImageFilterISSRTD22ID2)
itkImageToImageFilterISSRTD22ID2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22ID2_PushFrontInput,None,itkImageToImageFilterISSRTD22ID2)
itkImageToImageFilterISSRTD22ID2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22ID2_PopFrontInput,None,itkImageToImageFilterISSRTD22ID2)
itkImageToImageFilterISSRTD22ID2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22ID2_GetPointer,None,itkImageToImageFilterISSRTD22ID2)
itkImageToImageFilterISSRTD22ID2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22ID2_swigregister
itkImageToImageFilterISSRTD22ID2_swigregister(itkImageToImageFilterISSRTD22ID2)

def itkImageToImageFilterISSRTD22ID2_cast(*args):
  """itkImageToImageFilterISSRTD22ID2_cast(itkLightObject obj) -> itkImageToImageFilterISSRTD22ID2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22ID2_cast(*args)

class itkImageToImageFilterISSRTD22IF2(itkImageSourcePython.itkImageSourceIF2):
    """Proxy of C++ itkImageToImageFilterISSRTD22IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IF2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IF2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageSSRTD22 image)
        SetInput(self, unsigned int arg0, itkImageSSRTD22 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IF2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageSSRTD22
        GetInput(self, unsigned int idx) -> itkImageSSRTD22
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IF2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageSSRTD22 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IF2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IF2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageSSRTD22 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IF2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IF2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterISSRTD22IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterISSRTD22IF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterISSRTD22IF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterISSRTD22IF2
        
        Create a new object of the class itkImageToImageFilterISSRTD22IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterISSRTD22IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterISSRTD22IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterISSRTD22IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterISSRTD22IF2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IF2_SetInput,None,itkImageToImageFilterISSRTD22IF2)
itkImageToImageFilterISSRTD22IF2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IF2_GetInput,None,itkImageToImageFilterISSRTD22IF2)
itkImageToImageFilterISSRTD22IF2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IF2_PushBackInput,None,itkImageToImageFilterISSRTD22IF2)
itkImageToImageFilterISSRTD22IF2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IF2_PopBackInput,None,itkImageToImageFilterISSRTD22IF2)
itkImageToImageFilterISSRTD22IF2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IF2_PushFrontInput,None,itkImageToImageFilterISSRTD22IF2)
itkImageToImageFilterISSRTD22IF2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IF2_PopFrontInput,None,itkImageToImageFilterISSRTD22IF2)
itkImageToImageFilterISSRTD22IF2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IF2_GetPointer,None,itkImageToImageFilterISSRTD22IF2)
itkImageToImageFilterISSRTD22IF2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IF2_swigregister
itkImageToImageFilterISSRTD22IF2_swigregister(itkImageToImageFilterISSRTD22IF2)

def itkImageToImageFilterISSRTD22IF2_cast(*args):
  """itkImageToImageFilterISSRTD22IF2_cast(itkLightObject obj) -> itkImageToImageFilterISSRTD22IF2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IF2_cast(*args)

class itkImageToImageFilterISSRTD22IUC2(itkImageSourcePython.itkImageSourceIUC2):
    """Proxy of C++ itkImageToImageFilterISSRTD22IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUC2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUC2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageSSRTD22 image)
        SetInput(self, unsigned int arg0, itkImageSSRTD22 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUC2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageSSRTD22
        GetInput(self, unsigned int idx) -> itkImageSSRTD22
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUC2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageSSRTD22 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUC2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUC2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageSSRTD22 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUC2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUC2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterISSRTD22IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterISSRTD22IUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterISSRTD22IUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterISSRTD22IUC2
        
        Create a new object of the class itkImageToImageFilterISSRTD22IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterISSRTD22IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterISSRTD22IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterISSRTD22IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterISSRTD22IUC2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUC2_SetInput,None,itkImageToImageFilterISSRTD22IUC2)
itkImageToImageFilterISSRTD22IUC2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUC2_GetInput,None,itkImageToImageFilterISSRTD22IUC2)
itkImageToImageFilterISSRTD22IUC2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUC2_PushBackInput,None,itkImageToImageFilterISSRTD22IUC2)
itkImageToImageFilterISSRTD22IUC2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUC2_PopBackInput,None,itkImageToImageFilterISSRTD22IUC2)
itkImageToImageFilterISSRTD22IUC2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUC2_PushFrontInput,None,itkImageToImageFilterISSRTD22IUC2)
itkImageToImageFilterISSRTD22IUC2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUC2_PopFrontInput,None,itkImageToImageFilterISSRTD22IUC2)
itkImageToImageFilterISSRTD22IUC2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUC2_GetPointer,None,itkImageToImageFilterISSRTD22IUC2)
itkImageToImageFilterISSRTD22IUC2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUC2_swigregister
itkImageToImageFilterISSRTD22IUC2_swigregister(itkImageToImageFilterISSRTD22IUC2)

def itkImageToImageFilterISSRTD22IUC2_cast(*args):
  """itkImageToImageFilterISSRTD22IUC2_cast(itkLightObject obj) -> itkImageToImageFilterISSRTD22IUC2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUC2_cast(*args)

class itkImageToImageFilterISSRTD22IUL2(itkImageSourcePython.itkImageSourceIUL2):
    """Proxy of C++ itkImageToImageFilterISSRTD22IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUL2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUL2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageSSRTD22 image)
        SetInput(self, unsigned int arg0, itkImageSSRTD22 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUL2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageSSRTD22
        GetInput(self, unsigned int idx) -> itkImageSSRTD22
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUL2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageSSRTD22 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUL2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUL2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageSSRTD22 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUL2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUL2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterISSRTD22IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterISSRTD22IUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterISSRTD22IUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterISSRTD22IUL2
        
        Create a new object of the class itkImageToImageFilterISSRTD22IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterISSRTD22IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterISSRTD22IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterISSRTD22IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterISSRTD22IUL2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUL2_SetInput,None,itkImageToImageFilterISSRTD22IUL2)
itkImageToImageFilterISSRTD22IUL2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUL2_GetInput,None,itkImageToImageFilterISSRTD22IUL2)
itkImageToImageFilterISSRTD22IUL2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUL2_PushBackInput,None,itkImageToImageFilterISSRTD22IUL2)
itkImageToImageFilterISSRTD22IUL2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUL2_PopBackInput,None,itkImageToImageFilterISSRTD22IUL2)
itkImageToImageFilterISSRTD22IUL2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUL2_PushFrontInput,None,itkImageToImageFilterISSRTD22IUL2)
itkImageToImageFilterISSRTD22IUL2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUL2_PopFrontInput,None,itkImageToImageFilterISSRTD22IUL2)
itkImageToImageFilterISSRTD22IUL2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUL2_GetPointer,None,itkImageToImageFilterISSRTD22IUL2)
itkImageToImageFilterISSRTD22IUL2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUL2_swigregister
itkImageToImageFilterISSRTD22IUL2_swigregister(itkImageToImageFilterISSRTD22IUL2)

def itkImageToImageFilterISSRTD22IUL2_cast(*args):
  """itkImageToImageFilterISSRTD22IUL2_cast(itkLightObject obj) -> itkImageToImageFilterISSRTD22IUL2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUL2_cast(*args)

class itkImageToImageFilterISSRTD22IUS2(itkImageSourcePython.itkImageSourceIUS2):
    """Proxy of C++ itkImageToImageFilterISSRTD22IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageSSRTD22 image)
        SetInput(self, unsigned int arg0, itkImageSSRTD22 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageSSRTD22
        GetInput(self, unsigned int idx) -> itkImageSSRTD22
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageSSRTD22 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageSSRTD22 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterISSRTD22IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterISSRTD22IUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterISSRTD22IUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterISSRTD22IUS2
        
        Create a new object of the class itkImageToImageFilterISSRTD22IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterISSRTD22IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterISSRTD22IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterISSRTD22IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterISSRTD22IUS2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUS2_SetInput,None,itkImageToImageFilterISSRTD22IUS2)
itkImageToImageFilterISSRTD22IUS2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUS2_GetInput,None,itkImageToImageFilterISSRTD22IUS2)
itkImageToImageFilterISSRTD22IUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUS2_PushBackInput,None,itkImageToImageFilterISSRTD22IUS2)
itkImageToImageFilterISSRTD22IUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUS2_PopBackInput,None,itkImageToImageFilterISSRTD22IUS2)
itkImageToImageFilterISSRTD22IUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUS2_PushFrontInput,None,itkImageToImageFilterISSRTD22IUS2)
itkImageToImageFilterISSRTD22IUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUS2_PopFrontInput,None,itkImageToImageFilterISSRTD22IUS2)
itkImageToImageFilterISSRTD22IUS2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUS2_GetPointer,None,itkImageToImageFilterISSRTD22IUS2)
itkImageToImageFilterISSRTD22IUS2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUS2_swigregister
itkImageToImageFilterISSRTD22IUS2_swigregister(itkImageToImageFilterISSRTD22IUS2)

def itkImageToImageFilterISSRTD22IUS2_cast(*args):
  """itkImageToImageFilterISSRTD22IUS2_cast(itkLightObject obj) -> itkImageToImageFilterISSRTD22IUS2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUS2_cast(*args)

class itkImageToImageFilterISSRTD33ID3(itkImageSourcePython.itkImageSourceID3):
    """Proxy of C++ itkImageToImageFilterISSRTD33ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33ID3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33ID3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageSSRTD33 image)
        SetInput(self, unsigned int arg0, itkImageSSRTD33 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33ID3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageSSRTD33
        GetInput(self, unsigned int idx) -> itkImageSSRTD33
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33ID3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageSSRTD33 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33ID3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33ID3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageSSRTD33 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33ID3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33ID3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterISSRTD33ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterISSRTD33ID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterISSRTD33ID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterISSRTD33ID3
        
        Create a new object of the class itkImageToImageFilterISSRTD33ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterISSRTD33ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterISSRTD33ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterISSRTD33ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterISSRTD33ID3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33ID3_SetInput,None,itkImageToImageFilterISSRTD33ID3)
itkImageToImageFilterISSRTD33ID3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33ID3_GetInput,None,itkImageToImageFilterISSRTD33ID3)
itkImageToImageFilterISSRTD33ID3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33ID3_PushBackInput,None,itkImageToImageFilterISSRTD33ID3)
itkImageToImageFilterISSRTD33ID3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33ID3_PopBackInput,None,itkImageToImageFilterISSRTD33ID3)
itkImageToImageFilterISSRTD33ID3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33ID3_PushFrontInput,None,itkImageToImageFilterISSRTD33ID3)
itkImageToImageFilterISSRTD33ID3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33ID3_PopFrontInput,None,itkImageToImageFilterISSRTD33ID3)
itkImageToImageFilterISSRTD33ID3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33ID3_GetPointer,None,itkImageToImageFilterISSRTD33ID3)
itkImageToImageFilterISSRTD33ID3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33ID3_swigregister
itkImageToImageFilterISSRTD33ID3_swigregister(itkImageToImageFilterISSRTD33ID3)

def itkImageToImageFilterISSRTD33ID3_cast(*args):
  """itkImageToImageFilterISSRTD33ID3_cast(itkLightObject obj) -> itkImageToImageFilterISSRTD33ID3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33ID3_cast(*args)

class itkImageToImageFilterISSRTD33IF3(itkImageSourcePython.itkImageSourceIF3):
    """Proxy of C++ itkImageToImageFilterISSRTD33IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IF3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IF3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageSSRTD33 image)
        SetInput(self, unsigned int arg0, itkImageSSRTD33 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IF3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageSSRTD33
        GetInput(self, unsigned int idx) -> itkImageSSRTD33
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IF3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageSSRTD33 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IF3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IF3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageSSRTD33 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IF3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IF3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterISSRTD33IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterISSRTD33IF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterISSRTD33IF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterISSRTD33IF3
        
        Create a new object of the class itkImageToImageFilterISSRTD33IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterISSRTD33IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterISSRTD33IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterISSRTD33IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterISSRTD33IF3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IF3_SetInput,None,itkImageToImageFilterISSRTD33IF3)
itkImageToImageFilterISSRTD33IF3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IF3_GetInput,None,itkImageToImageFilterISSRTD33IF3)
itkImageToImageFilterISSRTD33IF3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IF3_PushBackInput,None,itkImageToImageFilterISSRTD33IF3)
itkImageToImageFilterISSRTD33IF3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IF3_PopBackInput,None,itkImageToImageFilterISSRTD33IF3)
itkImageToImageFilterISSRTD33IF3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IF3_PushFrontInput,None,itkImageToImageFilterISSRTD33IF3)
itkImageToImageFilterISSRTD33IF3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IF3_PopFrontInput,None,itkImageToImageFilterISSRTD33IF3)
itkImageToImageFilterISSRTD33IF3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IF3_GetPointer,None,itkImageToImageFilterISSRTD33IF3)
itkImageToImageFilterISSRTD33IF3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IF3_swigregister
itkImageToImageFilterISSRTD33IF3_swigregister(itkImageToImageFilterISSRTD33IF3)

def itkImageToImageFilterISSRTD33IF3_cast(*args):
  """itkImageToImageFilterISSRTD33IF3_cast(itkLightObject obj) -> itkImageToImageFilterISSRTD33IF3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IF3_cast(*args)

class itkImageToImageFilterISSRTD33IUC3(itkImageSourcePython.itkImageSourceIUC3):
    """Proxy of C++ itkImageToImageFilterISSRTD33IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUC3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUC3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageSSRTD33 image)
        SetInput(self, unsigned int arg0, itkImageSSRTD33 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUC3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageSSRTD33
        GetInput(self, unsigned int idx) -> itkImageSSRTD33
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUC3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageSSRTD33 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUC3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUC3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageSSRTD33 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUC3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUC3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterISSRTD33IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterISSRTD33IUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterISSRTD33IUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterISSRTD33IUC3
        
        Create a new object of the class itkImageToImageFilterISSRTD33IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterISSRTD33IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterISSRTD33IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterISSRTD33IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterISSRTD33IUC3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUC3_SetInput,None,itkImageToImageFilterISSRTD33IUC3)
itkImageToImageFilterISSRTD33IUC3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUC3_GetInput,None,itkImageToImageFilterISSRTD33IUC3)
itkImageToImageFilterISSRTD33IUC3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUC3_PushBackInput,None,itkImageToImageFilterISSRTD33IUC3)
itkImageToImageFilterISSRTD33IUC3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUC3_PopBackInput,None,itkImageToImageFilterISSRTD33IUC3)
itkImageToImageFilterISSRTD33IUC3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUC3_PushFrontInput,None,itkImageToImageFilterISSRTD33IUC3)
itkImageToImageFilterISSRTD33IUC3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUC3_PopFrontInput,None,itkImageToImageFilterISSRTD33IUC3)
itkImageToImageFilterISSRTD33IUC3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUC3_GetPointer,None,itkImageToImageFilterISSRTD33IUC3)
itkImageToImageFilterISSRTD33IUC3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUC3_swigregister
itkImageToImageFilterISSRTD33IUC3_swigregister(itkImageToImageFilterISSRTD33IUC3)

def itkImageToImageFilterISSRTD33IUC3_cast(*args):
  """itkImageToImageFilterISSRTD33IUC3_cast(itkLightObject obj) -> itkImageToImageFilterISSRTD33IUC3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUC3_cast(*args)

class itkImageToImageFilterISSRTD33IUL3(itkImageSourcePython.itkImageSourceIUL3):
    """Proxy of C++ itkImageToImageFilterISSRTD33IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUL3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUL3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageSSRTD33 image)
        SetInput(self, unsigned int arg0, itkImageSSRTD33 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUL3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageSSRTD33
        GetInput(self, unsigned int idx) -> itkImageSSRTD33
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUL3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageSSRTD33 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUL3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUL3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageSSRTD33 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUL3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUL3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterISSRTD33IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterISSRTD33IUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterISSRTD33IUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterISSRTD33IUL3
        
        Create a new object of the class itkImageToImageFilterISSRTD33IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterISSRTD33IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterISSRTD33IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterISSRTD33IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterISSRTD33IUL3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUL3_SetInput,None,itkImageToImageFilterISSRTD33IUL3)
itkImageToImageFilterISSRTD33IUL3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUL3_GetInput,None,itkImageToImageFilterISSRTD33IUL3)
itkImageToImageFilterISSRTD33IUL3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUL3_PushBackInput,None,itkImageToImageFilterISSRTD33IUL3)
itkImageToImageFilterISSRTD33IUL3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUL3_PopBackInput,None,itkImageToImageFilterISSRTD33IUL3)
itkImageToImageFilterISSRTD33IUL3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUL3_PushFrontInput,None,itkImageToImageFilterISSRTD33IUL3)
itkImageToImageFilterISSRTD33IUL3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUL3_PopFrontInput,None,itkImageToImageFilterISSRTD33IUL3)
itkImageToImageFilterISSRTD33IUL3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUL3_GetPointer,None,itkImageToImageFilterISSRTD33IUL3)
itkImageToImageFilterISSRTD33IUL3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUL3_swigregister
itkImageToImageFilterISSRTD33IUL3_swigregister(itkImageToImageFilterISSRTD33IUL3)

def itkImageToImageFilterISSRTD33IUL3_cast(*args):
  """itkImageToImageFilterISSRTD33IUL3_cast(itkLightObject obj) -> itkImageToImageFilterISSRTD33IUL3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUL3_cast(*args)

class itkImageToImageFilterISSRTD33IUS3(itkImageSourcePython.itkImageSourceIUS3):
    """Proxy of C++ itkImageToImageFilterISSRTD33IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageSSRTD33 image)
        SetInput(self, unsigned int arg0, itkImageSSRTD33 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageSSRTD33
        GetInput(self, unsigned int idx) -> itkImageSSRTD33
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageSSRTD33 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageSSRTD33 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterISSRTD33IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterISSRTD33IUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterISSRTD33IUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterISSRTD33IUS3
        
        Create a new object of the class itkImageToImageFilterISSRTD33IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterISSRTD33IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterISSRTD33IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterISSRTD33IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterISSRTD33IUS3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUS3_SetInput,None,itkImageToImageFilterISSRTD33IUS3)
itkImageToImageFilterISSRTD33IUS3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUS3_GetInput,None,itkImageToImageFilterISSRTD33IUS3)
itkImageToImageFilterISSRTD33IUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUS3_PushBackInput,None,itkImageToImageFilterISSRTD33IUS3)
itkImageToImageFilterISSRTD33IUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUS3_PopBackInput,None,itkImageToImageFilterISSRTD33IUS3)
itkImageToImageFilterISSRTD33IUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUS3_PushFrontInput,None,itkImageToImageFilterISSRTD33IUS3)
itkImageToImageFilterISSRTD33IUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUS3_PopFrontInput,None,itkImageToImageFilterISSRTD33IUS3)
itkImageToImageFilterISSRTD33IUS3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUS3_GetPointer,None,itkImageToImageFilterISSRTD33IUS3)
itkImageToImageFilterISSRTD33IUS3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUS3_swigregister
itkImageToImageFilterISSRTD33IUS3_swigregister(itkImageToImageFilterISSRTD33IUS3)

def itkImageToImageFilterISSRTD33IUS3_cast(*args):
  """itkImageToImageFilterISSRTD33IUS3_cast(itkLightObject obj) -> itkImageToImageFilterISSRTD33IUS3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUS3_cast(*args)

class itkImageToImageFilterIUC2ICVF22(itkImageSourcePython.itkImageSourceICVF22):
    """Proxy of C++ itkImageToImageFilterIUC2ICVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2ICVF22_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2ICVF22_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC2 image)
        SetInput(self, unsigned int arg0, itkImageUC2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2ICVF22_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC2
        GetInput(self, unsigned int idx) -> itkImageUC2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2ICVF22_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2ICVF22_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2ICVF22_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2ICVF22_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2ICVF22_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUC2ICVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC2ICVF22"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2ICVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC2ICVF22"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2ICVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC2ICVF22
        
        Create a new object of the class itkImageToImageFilterIUC2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC2ICVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC2ICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC2ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC2ICVF22.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2ICVF22_SetInput,None,itkImageToImageFilterIUC2ICVF22)
itkImageToImageFilterIUC2ICVF22.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2ICVF22_GetInput,None,itkImageToImageFilterIUC2ICVF22)
itkImageToImageFilterIUC2ICVF22.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2ICVF22_PushBackInput,None,itkImageToImageFilterIUC2ICVF22)
itkImageToImageFilterIUC2ICVF22.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2ICVF22_PopBackInput,None,itkImageToImageFilterIUC2ICVF22)
itkImageToImageFilterIUC2ICVF22.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2ICVF22_PushFrontInput,None,itkImageToImageFilterIUC2ICVF22)
itkImageToImageFilterIUC2ICVF22.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2ICVF22_PopFrontInput,None,itkImageToImageFilterIUC2ICVF22)
itkImageToImageFilterIUC2ICVF22.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2ICVF22_GetPointer,None,itkImageToImageFilterIUC2ICVF22)
itkImageToImageFilterIUC2ICVF22_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2ICVF22_swigregister
itkImageToImageFilterIUC2ICVF22_swigregister(itkImageToImageFilterIUC2ICVF22)

def itkImageToImageFilterIUC2ICVF22_cast(*args):
  """itkImageToImageFilterIUC2ICVF22_cast(itkLightObject obj) -> itkImageToImageFilterIUC2ICVF22"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2ICVF22_cast(*args)

class itkImageToImageFilterIUC2IRGBAUS2(itkImageSourcePython.itkImageSourceIRGBAUS2):
    """Proxy of C++ itkImageToImageFilterIUC2IRGBAUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBAUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBAUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC2 image)
        SetInput(self, unsigned int arg0, itkImageUC2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBAUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC2
        GetInput(self, unsigned int idx) -> itkImageUC2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBAUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBAUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBAUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBAUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBAUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUC2IRGBAUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC2IRGBAUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBAUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC2IRGBAUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBAUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC2IRGBAUS2
        
        Create a new object of the class itkImageToImageFilterIUC2IRGBAUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC2IRGBAUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC2IRGBAUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC2IRGBAUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC2IRGBAUS2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBAUS2_SetInput,None,itkImageToImageFilterIUC2IRGBAUS2)
itkImageToImageFilterIUC2IRGBAUS2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBAUS2_GetInput,None,itkImageToImageFilterIUC2IRGBAUS2)
itkImageToImageFilterIUC2IRGBAUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBAUS2_PushBackInput,None,itkImageToImageFilterIUC2IRGBAUS2)
itkImageToImageFilterIUC2IRGBAUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBAUS2_PopBackInput,None,itkImageToImageFilterIUC2IRGBAUS2)
itkImageToImageFilterIUC2IRGBAUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBAUS2_PushFrontInput,None,itkImageToImageFilterIUC2IRGBAUS2)
itkImageToImageFilterIUC2IRGBAUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBAUS2_PopFrontInput,None,itkImageToImageFilterIUC2IRGBAUS2)
itkImageToImageFilterIUC2IRGBAUS2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBAUS2_GetPointer,None,itkImageToImageFilterIUC2IRGBAUS2)
itkImageToImageFilterIUC2IRGBAUS2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBAUS2_swigregister
itkImageToImageFilterIUC2IRGBAUS2_swigregister(itkImageToImageFilterIUC2IRGBAUS2)

def itkImageToImageFilterIUC2IRGBAUS2_cast(*args):
  """itkImageToImageFilterIUC2IRGBAUS2_cast(itkLightObject obj) -> itkImageToImageFilterIUC2IRGBAUS2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBAUS2_cast(*args)

class itkImageToImageFilterIUC2IRGBUS2(itkImageSourcePython.itkImageSourceIRGBUS2):
    """Proxy of C++ itkImageToImageFilterIUC2IRGBUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC2 image)
        SetInput(self, unsigned int arg0, itkImageUC2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC2
        GetInput(self, unsigned int idx) -> itkImageUC2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUC2IRGBUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC2IRGBUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC2IRGBUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC2IRGBUS2
        
        Create a new object of the class itkImageToImageFilterIUC2IRGBUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC2IRGBUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC2IRGBUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC2IRGBUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC2IRGBUS2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBUS2_SetInput,None,itkImageToImageFilterIUC2IRGBUS2)
itkImageToImageFilterIUC2IRGBUS2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBUS2_GetInput,None,itkImageToImageFilterIUC2IRGBUS2)
itkImageToImageFilterIUC2IRGBUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBUS2_PushBackInput,None,itkImageToImageFilterIUC2IRGBUS2)
itkImageToImageFilterIUC2IRGBUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBUS2_PopBackInput,None,itkImageToImageFilterIUC2IRGBUS2)
itkImageToImageFilterIUC2IRGBUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBUS2_PushFrontInput,None,itkImageToImageFilterIUC2IRGBUS2)
itkImageToImageFilterIUC2IRGBUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBUS2_PopFrontInput,None,itkImageToImageFilterIUC2IRGBUS2)
itkImageToImageFilterIUC2IRGBUS2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBUS2_GetPointer,None,itkImageToImageFilterIUC2IRGBUS2)
itkImageToImageFilterIUC2IRGBUS2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBUS2_swigregister
itkImageToImageFilterIUC2IRGBUS2_swigregister(itkImageToImageFilterIUC2IRGBUS2)

def itkImageToImageFilterIUC2IRGBUS2_cast(*args):
  """itkImageToImageFilterIUC2IRGBUS2_cast(itkLightObject obj) -> itkImageToImageFilterIUC2IRGBUS2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBUS2_cast(*args)

class itkImageToImageFilterIUC2ISSRTD22(itkImageSourcePython.itkImageSourceISSRTD22):
    """Proxy of C++ itkImageToImageFilterIUC2ISSRTD22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2ISSRTD22_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2ISSRTD22_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC2 image)
        SetInput(self, unsigned int arg0, itkImageUC2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2ISSRTD22_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC2
        GetInput(self, unsigned int idx) -> itkImageUC2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2ISSRTD22_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2ISSRTD22_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2ISSRTD22_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2ISSRTD22_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2ISSRTD22_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUC2ISSRTD22
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC2ISSRTD22"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2ISSRTD22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC2ISSRTD22"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2ISSRTD22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC2ISSRTD22
        
        Create a new object of the class itkImageToImageFilterIUC2ISSRTD22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC2ISSRTD22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC2ISSRTD22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC2ISSRTD22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC2ISSRTD22.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2ISSRTD22_SetInput,None,itkImageToImageFilterIUC2ISSRTD22)
itkImageToImageFilterIUC2ISSRTD22.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2ISSRTD22_GetInput,None,itkImageToImageFilterIUC2ISSRTD22)
itkImageToImageFilterIUC2ISSRTD22.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2ISSRTD22_PushBackInput,None,itkImageToImageFilterIUC2ISSRTD22)
itkImageToImageFilterIUC2ISSRTD22.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2ISSRTD22_PopBackInput,None,itkImageToImageFilterIUC2ISSRTD22)
itkImageToImageFilterIUC2ISSRTD22.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2ISSRTD22_PushFrontInput,None,itkImageToImageFilterIUC2ISSRTD22)
itkImageToImageFilterIUC2ISSRTD22.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2ISSRTD22_PopFrontInput,None,itkImageToImageFilterIUC2ISSRTD22)
itkImageToImageFilterIUC2ISSRTD22.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2ISSRTD22_GetPointer,None,itkImageToImageFilterIUC2ISSRTD22)
itkImageToImageFilterIUC2ISSRTD22_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2ISSRTD22_swigregister
itkImageToImageFilterIUC2ISSRTD22_swigregister(itkImageToImageFilterIUC2ISSRTD22)

def itkImageToImageFilterIUC2ISSRTD22_cast(*args):
  """itkImageToImageFilterIUC2ISSRTD22_cast(itkLightObject obj) -> itkImageToImageFilterIUC2ISSRTD22"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2ISSRTD22_cast(*args)

class itkImageToImageFilterIUC2IUC3(itkImageSourcePython.itkImageSourceIUC3):
    """Proxy of C++ itkImageToImageFilterIUC2IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IUC3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IUC3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC2 image)
        SetInput(self, unsigned int arg0, itkImageUC2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IUC3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC2
        GetInput(self, unsigned int idx) -> itkImageUC2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IUC3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IUC3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IUC3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IUC3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IUC3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUC2IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC2IUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC2IUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC2IUC3
        
        Create a new object of the class itkImageToImageFilterIUC2IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC2IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC2IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC2IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC2IUC3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2IUC3_SetInput,None,itkImageToImageFilterIUC2IUC3)
itkImageToImageFilterIUC2IUC3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2IUC3_GetInput,None,itkImageToImageFilterIUC2IUC3)
itkImageToImageFilterIUC2IUC3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2IUC3_PushBackInput,None,itkImageToImageFilterIUC2IUC3)
itkImageToImageFilterIUC2IUC3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2IUC3_PopBackInput,None,itkImageToImageFilterIUC2IUC3)
itkImageToImageFilterIUC2IUC3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2IUC3_PushFrontInput,None,itkImageToImageFilterIUC2IUC3)
itkImageToImageFilterIUC2IUC3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2IUC3_PopFrontInput,None,itkImageToImageFilterIUC2IUC3)
itkImageToImageFilterIUC2IUC3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2IUC3_GetPointer,None,itkImageToImageFilterIUC2IUC3)
itkImageToImageFilterIUC2IUC3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IUC3_swigregister
itkImageToImageFilterIUC2IUC3_swigregister(itkImageToImageFilterIUC2IUC3)

def itkImageToImageFilterIUC2IUC3_cast(*args):
  """itkImageToImageFilterIUC2IUC3_cast(itkLightObject obj) -> itkImageToImageFilterIUC2IUC3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IUC3_cast(*args)

class itkImageToImageFilterIUC2IVF22(itkImageSourcePython.itkImageSourceIVF22):
    """Proxy of C++ itkImageToImageFilterIUC2IVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IVF22_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IVF22_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC2 image)
        SetInput(self, unsigned int arg0, itkImageUC2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IVF22_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC2
        GetInput(self, unsigned int idx) -> itkImageUC2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IVF22_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IVF22_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IVF22_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IVF22_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IVF22_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUC2IVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC2IVF22"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC2IVF22"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC2IVF22
        
        Create a new object of the class itkImageToImageFilterIUC2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC2IVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC2IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC2IVF22.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2IVF22_SetInput,None,itkImageToImageFilterIUC2IVF22)
itkImageToImageFilterIUC2IVF22.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2IVF22_GetInput,None,itkImageToImageFilterIUC2IVF22)
itkImageToImageFilterIUC2IVF22.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2IVF22_PushBackInput,None,itkImageToImageFilterIUC2IVF22)
itkImageToImageFilterIUC2IVF22.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2IVF22_PopBackInput,None,itkImageToImageFilterIUC2IVF22)
itkImageToImageFilterIUC2IVF22.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2IVF22_PushFrontInput,None,itkImageToImageFilterIUC2IVF22)
itkImageToImageFilterIUC2IVF22.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2IVF22_PopFrontInput,None,itkImageToImageFilterIUC2IVF22)
itkImageToImageFilterIUC2IVF22.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2IVF22_GetPointer,None,itkImageToImageFilterIUC2IVF22)
itkImageToImageFilterIUC2IVF22_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IVF22_swigregister
itkImageToImageFilterIUC2IVF22_swigregister(itkImageToImageFilterIUC2IVF22)

def itkImageToImageFilterIUC2IVF22_cast(*args):
  """itkImageToImageFilterIUC2IVF22_cast(itkLightObject obj) -> itkImageToImageFilterIUC2IVF22"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2IVF22_cast(*args)

class itkImageToImageFilterIUC2VID2(itkImageSourcePython.itkImageSourceVID2):
    """Proxy of C++ itkImageToImageFilterIUC2VID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VID2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VID2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC2 image)
        SetInput(self, unsigned int arg0, itkImageUC2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VID2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC2
        GetInput(self, unsigned int idx) -> itkImageUC2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VID2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VID2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VID2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VID2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VID2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUC2VID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC2VID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC2VID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC2VID2
        
        Create a new object of the class itkImageToImageFilterIUC2VID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC2VID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC2VID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC2VID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC2VID2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VID2_SetInput,None,itkImageToImageFilterIUC2VID2)
itkImageToImageFilterIUC2VID2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VID2_GetInput,None,itkImageToImageFilterIUC2VID2)
itkImageToImageFilterIUC2VID2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VID2_PushBackInput,None,itkImageToImageFilterIUC2VID2)
itkImageToImageFilterIUC2VID2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VID2_PopBackInput,None,itkImageToImageFilterIUC2VID2)
itkImageToImageFilterIUC2VID2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VID2_PushFrontInput,None,itkImageToImageFilterIUC2VID2)
itkImageToImageFilterIUC2VID2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VID2_PopFrontInput,None,itkImageToImageFilterIUC2VID2)
itkImageToImageFilterIUC2VID2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VID2_GetPointer,None,itkImageToImageFilterIUC2VID2)
itkImageToImageFilterIUC2VID2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VID2_swigregister
itkImageToImageFilterIUC2VID2_swigregister(itkImageToImageFilterIUC2VID2)

def itkImageToImageFilterIUC2VID2_cast(*args):
  """itkImageToImageFilterIUC2VID2_cast(itkLightObject obj) -> itkImageToImageFilterIUC2VID2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VID2_cast(*args)

class itkImageToImageFilterIUC2VIF2(itkImageSourcePython.itkImageSourceVIF2):
    """Proxy of C++ itkImageToImageFilterIUC2VIF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIF2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIF2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC2 image)
        SetInput(self, unsigned int arg0, itkImageUC2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIF2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC2
        GetInput(self, unsigned int idx) -> itkImageUC2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIF2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIF2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIF2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIF2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIF2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUC2VIF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC2VIF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC2VIF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC2VIF2
        
        Create a new object of the class itkImageToImageFilterIUC2VIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC2VIF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC2VIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC2VIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC2VIF2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIF2_SetInput,None,itkImageToImageFilterIUC2VIF2)
itkImageToImageFilterIUC2VIF2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIF2_GetInput,None,itkImageToImageFilterIUC2VIF2)
itkImageToImageFilterIUC2VIF2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIF2_PushBackInput,None,itkImageToImageFilterIUC2VIF2)
itkImageToImageFilterIUC2VIF2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIF2_PopBackInput,None,itkImageToImageFilterIUC2VIF2)
itkImageToImageFilterIUC2VIF2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIF2_PushFrontInput,None,itkImageToImageFilterIUC2VIF2)
itkImageToImageFilterIUC2VIF2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIF2_PopFrontInput,None,itkImageToImageFilterIUC2VIF2)
itkImageToImageFilterIUC2VIF2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIF2_GetPointer,None,itkImageToImageFilterIUC2VIF2)
itkImageToImageFilterIUC2VIF2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIF2_swigregister
itkImageToImageFilterIUC2VIF2_swigregister(itkImageToImageFilterIUC2VIF2)

def itkImageToImageFilterIUC2VIF2_cast(*args):
  """itkImageToImageFilterIUC2VIF2_cast(itkLightObject obj) -> itkImageToImageFilterIUC2VIF2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIF2_cast(*args)

class itkImageToImageFilterIUC2VIUC2(itkImageSourcePython.itkImageSourceVIUC2):
    """Proxy of C++ itkImageToImageFilterIUC2VIUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUC2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUC2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC2 image)
        SetInput(self, unsigned int arg0, itkImageUC2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUC2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC2
        GetInput(self, unsigned int idx) -> itkImageUC2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUC2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUC2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUC2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUC2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUC2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUC2VIUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC2VIUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC2VIUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC2VIUC2
        
        Create a new object of the class itkImageToImageFilterIUC2VIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC2VIUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC2VIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC2VIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC2VIUC2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUC2_SetInput,None,itkImageToImageFilterIUC2VIUC2)
itkImageToImageFilterIUC2VIUC2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUC2_GetInput,None,itkImageToImageFilterIUC2VIUC2)
itkImageToImageFilterIUC2VIUC2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUC2_PushBackInput,None,itkImageToImageFilterIUC2VIUC2)
itkImageToImageFilterIUC2VIUC2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUC2_PopBackInput,None,itkImageToImageFilterIUC2VIUC2)
itkImageToImageFilterIUC2VIUC2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUC2_PushFrontInput,None,itkImageToImageFilterIUC2VIUC2)
itkImageToImageFilterIUC2VIUC2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUC2_PopFrontInput,None,itkImageToImageFilterIUC2VIUC2)
itkImageToImageFilterIUC2VIUC2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUC2_GetPointer,None,itkImageToImageFilterIUC2VIUC2)
itkImageToImageFilterIUC2VIUC2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUC2_swigregister
itkImageToImageFilterIUC2VIUC2_swigregister(itkImageToImageFilterIUC2VIUC2)

def itkImageToImageFilterIUC2VIUC2_cast(*args):
  """itkImageToImageFilterIUC2VIUC2_cast(itkLightObject obj) -> itkImageToImageFilterIUC2VIUC2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUC2_cast(*args)

class itkImageToImageFilterIUC2VIUL2(itkImageSourcePython.itkImageSourceVIUL2):
    """Proxy of C++ itkImageToImageFilterIUC2VIUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUL2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUL2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC2 image)
        SetInput(self, unsigned int arg0, itkImageUC2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUL2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC2
        GetInput(self, unsigned int idx) -> itkImageUC2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUL2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUL2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUL2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUL2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUL2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUC2VIUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC2VIUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC2VIUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC2VIUL2
        
        Create a new object of the class itkImageToImageFilterIUC2VIUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC2VIUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC2VIUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC2VIUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC2VIUL2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUL2_SetInput,None,itkImageToImageFilterIUC2VIUL2)
itkImageToImageFilterIUC2VIUL2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUL2_GetInput,None,itkImageToImageFilterIUC2VIUL2)
itkImageToImageFilterIUC2VIUL2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUL2_PushBackInput,None,itkImageToImageFilterIUC2VIUL2)
itkImageToImageFilterIUC2VIUL2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUL2_PopBackInput,None,itkImageToImageFilterIUC2VIUL2)
itkImageToImageFilterIUC2VIUL2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUL2_PushFrontInput,None,itkImageToImageFilterIUC2VIUL2)
itkImageToImageFilterIUC2VIUL2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUL2_PopFrontInput,None,itkImageToImageFilterIUC2VIUL2)
itkImageToImageFilterIUC2VIUL2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUL2_GetPointer,None,itkImageToImageFilterIUC2VIUL2)
itkImageToImageFilterIUC2VIUL2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUL2_swigregister
itkImageToImageFilterIUC2VIUL2_swigregister(itkImageToImageFilterIUC2VIUL2)

def itkImageToImageFilterIUC2VIUL2_cast(*args):
  """itkImageToImageFilterIUC2VIUL2_cast(itkLightObject obj) -> itkImageToImageFilterIUC2VIUL2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUL2_cast(*args)

class itkImageToImageFilterIUC2VIUS2(itkImageSourcePython.itkImageSourceVIUS2):
    """Proxy of C++ itkImageToImageFilterIUC2VIUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC2 image)
        SetInput(self, unsigned int arg0, itkImageUC2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC2
        GetInput(self, unsigned int idx) -> itkImageUC2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUC2VIUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC2VIUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC2VIUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC2VIUS2
        
        Create a new object of the class itkImageToImageFilterIUC2VIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC2VIUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC2VIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC2VIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC2VIUS2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUS2_SetInput,None,itkImageToImageFilterIUC2VIUS2)
itkImageToImageFilterIUC2VIUS2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUS2_GetInput,None,itkImageToImageFilterIUC2VIUS2)
itkImageToImageFilterIUC2VIUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUS2_PushBackInput,None,itkImageToImageFilterIUC2VIUS2)
itkImageToImageFilterIUC2VIUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUS2_PopBackInput,None,itkImageToImageFilterIUC2VIUS2)
itkImageToImageFilterIUC2VIUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUS2_PushFrontInput,None,itkImageToImageFilterIUC2VIUS2)
itkImageToImageFilterIUC2VIUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUS2_PopFrontInput,None,itkImageToImageFilterIUC2VIUS2)
itkImageToImageFilterIUC2VIUS2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUS2_GetPointer,None,itkImageToImageFilterIUC2VIUS2)
itkImageToImageFilterIUC2VIUS2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUS2_swigregister
itkImageToImageFilterIUC2VIUS2_swigregister(itkImageToImageFilterIUC2VIUS2)

def itkImageToImageFilterIUC2VIUS2_cast(*args):
  """itkImageToImageFilterIUC2VIUS2_cast(itkLightObject obj) -> itkImageToImageFilterIUC2VIUS2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUS2_cast(*args)

class itkImageToImageFilterIUC3ICVF33(itkImageSourcePython.itkImageSourceICVF33):
    """Proxy of C++ itkImageToImageFilterIUC3ICVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3ICVF33_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3ICVF33_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC3 image)
        SetInput(self, unsigned int arg0, itkImageUC3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3ICVF33_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC3
        GetInput(self, unsigned int idx) -> itkImageUC3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3ICVF33_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3ICVF33_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3ICVF33_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3ICVF33_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3ICVF33_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUC3ICVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC3ICVF33"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3ICVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC3ICVF33"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3ICVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC3ICVF33
        
        Create a new object of the class itkImageToImageFilterIUC3ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC3ICVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC3ICVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC3ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC3ICVF33.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3ICVF33_SetInput,None,itkImageToImageFilterIUC3ICVF33)
itkImageToImageFilterIUC3ICVF33.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3ICVF33_GetInput,None,itkImageToImageFilterIUC3ICVF33)
itkImageToImageFilterIUC3ICVF33.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3ICVF33_PushBackInput,None,itkImageToImageFilterIUC3ICVF33)
itkImageToImageFilterIUC3ICVF33.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3ICVF33_PopBackInput,None,itkImageToImageFilterIUC3ICVF33)
itkImageToImageFilterIUC3ICVF33.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3ICVF33_PushFrontInput,None,itkImageToImageFilterIUC3ICVF33)
itkImageToImageFilterIUC3ICVF33.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3ICVF33_PopFrontInput,None,itkImageToImageFilterIUC3ICVF33)
itkImageToImageFilterIUC3ICVF33.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3ICVF33_GetPointer,None,itkImageToImageFilterIUC3ICVF33)
itkImageToImageFilterIUC3ICVF33_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3ICVF33_swigregister
itkImageToImageFilterIUC3ICVF33_swigregister(itkImageToImageFilterIUC3ICVF33)

def itkImageToImageFilterIUC3ICVF33_cast(*args):
  """itkImageToImageFilterIUC3ICVF33_cast(itkLightObject obj) -> itkImageToImageFilterIUC3ICVF33"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3ICVF33_cast(*args)

class itkImageToImageFilterIUC3IRGBAUS3(itkImageSourcePython.itkImageSourceIRGBAUS3):
    """Proxy of C++ itkImageToImageFilterIUC3IRGBAUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBAUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBAUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC3 image)
        SetInput(self, unsigned int arg0, itkImageUC3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBAUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC3
        GetInput(self, unsigned int idx) -> itkImageUC3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBAUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBAUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBAUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBAUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBAUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUC3IRGBAUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC3IRGBAUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBAUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC3IRGBAUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBAUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC3IRGBAUS3
        
        Create a new object of the class itkImageToImageFilterIUC3IRGBAUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC3IRGBAUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC3IRGBAUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC3IRGBAUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC3IRGBAUS3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBAUS3_SetInput,None,itkImageToImageFilterIUC3IRGBAUS3)
itkImageToImageFilterIUC3IRGBAUS3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBAUS3_GetInput,None,itkImageToImageFilterIUC3IRGBAUS3)
itkImageToImageFilterIUC3IRGBAUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBAUS3_PushBackInput,None,itkImageToImageFilterIUC3IRGBAUS3)
itkImageToImageFilterIUC3IRGBAUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBAUS3_PopBackInput,None,itkImageToImageFilterIUC3IRGBAUS3)
itkImageToImageFilterIUC3IRGBAUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBAUS3_PushFrontInput,None,itkImageToImageFilterIUC3IRGBAUS3)
itkImageToImageFilterIUC3IRGBAUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBAUS3_PopFrontInput,None,itkImageToImageFilterIUC3IRGBAUS3)
itkImageToImageFilterIUC3IRGBAUS3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBAUS3_GetPointer,None,itkImageToImageFilterIUC3IRGBAUS3)
itkImageToImageFilterIUC3IRGBAUS3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBAUS3_swigregister
itkImageToImageFilterIUC3IRGBAUS3_swigregister(itkImageToImageFilterIUC3IRGBAUS3)

def itkImageToImageFilterIUC3IRGBAUS3_cast(*args):
  """itkImageToImageFilterIUC3IRGBAUS3_cast(itkLightObject obj) -> itkImageToImageFilterIUC3IRGBAUS3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBAUS3_cast(*args)

class itkImageToImageFilterIUC3IRGBUS3(itkImageSourcePython.itkImageSourceIRGBUS3):
    """Proxy of C++ itkImageToImageFilterIUC3IRGBUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC3 image)
        SetInput(self, unsigned int arg0, itkImageUC3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC3
        GetInput(self, unsigned int idx) -> itkImageUC3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUC3IRGBUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC3IRGBUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC3IRGBUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC3IRGBUS3
        
        Create a new object of the class itkImageToImageFilterIUC3IRGBUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC3IRGBUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC3IRGBUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC3IRGBUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC3IRGBUS3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBUS3_SetInput,None,itkImageToImageFilterIUC3IRGBUS3)
itkImageToImageFilterIUC3IRGBUS3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBUS3_GetInput,None,itkImageToImageFilterIUC3IRGBUS3)
itkImageToImageFilterIUC3IRGBUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBUS3_PushBackInput,None,itkImageToImageFilterIUC3IRGBUS3)
itkImageToImageFilterIUC3IRGBUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBUS3_PopBackInput,None,itkImageToImageFilterIUC3IRGBUS3)
itkImageToImageFilterIUC3IRGBUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBUS3_PushFrontInput,None,itkImageToImageFilterIUC3IRGBUS3)
itkImageToImageFilterIUC3IRGBUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBUS3_PopFrontInput,None,itkImageToImageFilterIUC3IRGBUS3)
itkImageToImageFilterIUC3IRGBUS3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBUS3_GetPointer,None,itkImageToImageFilterIUC3IRGBUS3)
itkImageToImageFilterIUC3IRGBUS3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBUS3_swigregister
itkImageToImageFilterIUC3IRGBUS3_swigregister(itkImageToImageFilterIUC3IRGBUS3)

def itkImageToImageFilterIUC3IRGBUS3_cast(*args):
  """itkImageToImageFilterIUC3IRGBUS3_cast(itkLightObject obj) -> itkImageToImageFilterIUC3IRGBUS3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBUS3_cast(*args)

class itkImageToImageFilterIUC3ISSRTD33(itkImageSourcePython.itkImageSourceISSRTD33):
    """Proxy of C++ itkImageToImageFilterIUC3ISSRTD33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3ISSRTD33_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3ISSRTD33_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC3 image)
        SetInput(self, unsigned int arg0, itkImageUC3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3ISSRTD33_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC3
        GetInput(self, unsigned int idx) -> itkImageUC3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3ISSRTD33_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3ISSRTD33_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3ISSRTD33_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3ISSRTD33_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3ISSRTD33_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUC3ISSRTD33
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC3ISSRTD33"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3ISSRTD33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC3ISSRTD33"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3ISSRTD33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC3ISSRTD33
        
        Create a new object of the class itkImageToImageFilterIUC3ISSRTD33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC3ISSRTD33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC3ISSRTD33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC3ISSRTD33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC3ISSRTD33.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3ISSRTD33_SetInput,None,itkImageToImageFilterIUC3ISSRTD33)
itkImageToImageFilterIUC3ISSRTD33.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3ISSRTD33_GetInput,None,itkImageToImageFilterIUC3ISSRTD33)
itkImageToImageFilterIUC3ISSRTD33.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3ISSRTD33_PushBackInput,None,itkImageToImageFilterIUC3ISSRTD33)
itkImageToImageFilterIUC3ISSRTD33.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3ISSRTD33_PopBackInput,None,itkImageToImageFilterIUC3ISSRTD33)
itkImageToImageFilterIUC3ISSRTD33.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3ISSRTD33_PushFrontInput,None,itkImageToImageFilterIUC3ISSRTD33)
itkImageToImageFilterIUC3ISSRTD33.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3ISSRTD33_PopFrontInput,None,itkImageToImageFilterIUC3ISSRTD33)
itkImageToImageFilterIUC3ISSRTD33.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3ISSRTD33_GetPointer,None,itkImageToImageFilterIUC3ISSRTD33)
itkImageToImageFilterIUC3ISSRTD33_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3ISSRTD33_swigregister
itkImageToImageFilterIUC3ISSRTD33_swigregister(itkImageToImageFilterIUC3ISSRTD33)

def itkImageToImageFilterIUC3ISSRTD33_cast(*args):
  """itkImageToImageFilterIUC3ISSRTD33_cast(itkLightObject obj) -> itkImageToImageFilterIUC3ISSRTD33"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3ISSRTD33_cast(*args)

class itkImageToImageFilterIUC3IUC2(itkImageSourcePython.itkImageSourceIUC2):
    """Proxy of C++ itkImageToImageFilterIUC3IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC3 image)
        SetInput(self, unsigned int arg0, itkImageUC3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC3
        GetInput(self, unsigned int idx) -> itkImageUC3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUC3IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC3IUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC3IUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC3IUC2
        
        Create a new object of the class itkImageToImageFilterIUC3IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC3IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC3IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC3IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC3IUC2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2_SetInput,None,itkImageToImageFilterIUC3IUC2)
itkImageToImageFilterIUC3IUC2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2_GetInput,None,itkImageToImageFilterIUC3IUC2)
itkImageToImageFilterIUC3IUC2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2_PushBackInput,None,itkImageToImageFilterIUC3IUC2)
itkImageToImageFilterIUC3IUC2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2_PopBackInput,None,itkImageToImageFilterIUC3IUC2)
itkImageToImageFilterIUC3IUC2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2_PushFrontInput,None,itkImageToImageFilterIUC3IUC2)
itkImageToImageFilterIUC3IUC2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2_PopFrontInput,None,itkImageToImageFilterIUC3IUC2)
itkImageToImageFilterIUC3IUC2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2_GetPointer,None,itkImageToImageFilterIUC3IUC2)
itkImageToImageFilterIUC3IUC2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2_swigregister
itkImageToImageFilterIUC3IUC2_swigregister(itkImageToImageFilterIUC3IUC2)

def itkImageToImageFilterIUC3IUC2_cast(*args):
  """itkImageToImageFilterIUC3IUC2_cast(itkLightObject obj) -> itkImageToImageFilterIUC3IUC2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2_cast(*args)

class itkImageToImageFilterIUC3IVF33(itkImageSourcePython.itkImageSourceIVF33):
    """Proxy of C++ itkImageToImageFilterIUC3IVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IVF33_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IVF33_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC3 image)
        SetInput(self, unsigned int arg0, itkImageUC3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IVF33_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC3
        GetInput(self, unsigned int idx) -> itkImageUC3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IVF33_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IVF33_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IVF33_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IVF33_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IVF33_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUC3IVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC3IVF33"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC3IVF33"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC3IVF33
        
        Create a new object of the class itkImageToImageFilterIUC3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC3IVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC3IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC3IVF33.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3IVF33_SetInput,None,itkImageToImageFilterIUC3IVF33)
itkImageToImageFilterIUC3IVF33.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3IVF33_GetInput,None,itkImageToImageFilterIUC3IVF33)
itkImageToImageFilterIUC3IVF33.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3IVF33_PushBackInput,None,itkImageToImageFilterIUC3IVF33)
itkImageToImageFilterIUC3IVF33.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3IVF33_PopBackInput,None,itkImageToImageFilterIUC3IVF33)
itkImageToImageFilterIUC3IVF33.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3IVF33_PushFrontInput,None,itkImageToImageFilterIUC3IVF33)
itkImageToImageFilterIUC3IVF33.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3IVF33_PopFrontInput,None,itkImageToImageFilterIUC3IVF33)
itkImageToImageFilterIUC3IVF33.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3IVF33_GetPointer,None,itkImageToImageFilterIUC3IVF33)
itkImageToImageFilterIUC3IVF33_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IVF33_swigregister
itkImageToImageFilterIUC3IVF33_swigregister(itkImageToImageFilterIUC3IVF33)

def itkImageToImageFilterIUC3IVF33_cast(*args):
  """itkImageToImageFilterIUC3IVF33_cast(itkLightObject obj) -> itkImageToImageFilterIUC3IVF33"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3IVF33_cast(*args)

class itkImageToImageFilterIUC3VID3(itkImageSourcePython.itkImageSourceVID3):
    """Proxy of C++ itkImageToImageFilterIUC3VID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VID3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VID3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC3 image)
        SetInput(self, unsigned int arg0, itkImageUC3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VID3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC3
        GetInput(self, unsigned int idx) -> itkImageUC3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VID3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VID3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VID3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VID3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VID3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUC3VID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC3VID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC3VID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC3VID3
        
        Create a new object of the class itkImageToImageFilterIUC3VID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC3VID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC3VID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC3VID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC3VID3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VID3_SetInput,None,itkImageToImageFilterIUC3VID3)
itkImageToImageFilterIUC3VID3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VID3_GetInput,None,itkImageToImageFilterIUC3VID3)
itkImageToImageFilterIUC3VID3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VID3_PushBackInput,None,itkImageToImageFilterIUC3VID3)
itkImageToImageFilterIUC3VID3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VID3_PopBackInput,None,itkImageToImageFilterIUC3VID3)
itkImageToImageFilterIUC3VID3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VID3_PushFrontInput,None,itkImageToImageFilterIUC3VID3)
itkImageToImageFilterIUC3VID3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VID3_PopFrontInput,None,itkImageToImageFilterIUC3VID3)
itkImageToImageFilterIUC3VID3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VID3_GetPointer,None,itkImageToImageFilterIUC3VID3)
itkImageToImageFilterIUC3VID3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VID3_swigregister
itkImageToImageFilterIUC3VID3_swigregister(itkImageToImageFilterIUC3VID3)

def itkImageToImageFilterIUC3VID3_cast(*args):
  """itkImageToImageFilterIUC3VID3_cast(itkLightObject obj) -> itkImageToImageFilterIUC3VID3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VID3_cast(*args)

class itkImageToImageFilterIUC3VIF3(itkImageSourcePython.itkImageSourceVIF3):
    """Proxy of C++ itkImageToImageFilterIUC3VIF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIF3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIF3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC3 image)
        SetInput(self, unsigned int arg0, itkImageUC3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIF3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC3
        GetInput(self, unsigned int idx) -> itkImageUC3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIF3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIF3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIF3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIF3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIF3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUC3VIF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC3VIF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC3VIF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC3VIF3
        
        Create a new object of the class itkImageToImageFilterIUC3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC3VIF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC3VIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC3VIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC3VIF3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIF3_SetInput,None,itkImageToImageFilterIUC3VIF3)
itkImageToImageFilterIUC3VIF3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIF3_GetInput,None,itkImageToImageFilterIUC3VIF3)
itkImageToImageFilterIUC3VIF3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIF3_PushBackInput,None,itkImageToImageFilterIUC3VIF3)
itkImageToImageFilterIUC3VIF3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIF3_PopBackInput,None,itkImageToImageFilterIUC3VIF3)
itkImageToImageFilterIUC3VIF3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIF3_PushFrontInput,None,itkImageToImageFilterIUC3VIF3)
itkImageToImageFilterIUC3VIF3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIF3_PopFrontInput,None,itkImageToImageFilterIUC3VIF3)
itkImageToImageFilterIUC3VIF3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIF3_GetPointer,None,itkImageToImageFilterIUC3VIF3)
itkImageToImageFilterIUC3VIF3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIF3_swigregister
itkImageToImageFilterIUC3VIF3_swigregister(itkImageToImageFilterIUC3VIF3)

def itkImageToImageFilterIUC3VIF3_cast(*args):
  """itkImageToImageFilterIUC3VIF3_cast(itkLightObject obj) -> itkImageToImageFilterIUC3VIF3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIF3_cast(*args)

class itkImageToImageFilterIUC3VIUC3(itkImageSourcePython.itkImageSourceVIUC3):
    """Proxy of C++ itkImageToImageFilterIUC3VIUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUC3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUC3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC3 image)
        SetInput(self, unsigned int arg0, itkImageUC3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUC3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC3
        GetInput(self, unsigned int idx) -> itkImageUC3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUC3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUC3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUC3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUC3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUC3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUC3VIUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC3VIUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC3VIUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC3VIUC3
        
        Create a new object of the class itkImageToImageFilterIUC3VIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC3VIUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC3VIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC3VIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC3VIUC3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUC3_SetInput,None,itkImageToImageFilterIUC3VIUC3)
itkImageToImageFilterIUC3VIUC3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUC3_GetInput,None,itkImageToImageFilterIUC3VIUC3)
itkImageToImageFilterIUC3VIUC3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUC3_PushBackInput,None,itkImageToImageFilterIUC3VIUC3)
itkImageToImageFilterIUC3VIUC3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUC3_PopBackInput,None,itkImageToImageFilterIUC3VIUC3)
itkImageToImageFilterIUC3VIUC3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUC3_PushFrontInput,None,itkImageToImageFilterIUC3VIUC3)
itkImageToImageFilterIUC3VIUC3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUC3_PopFrontInput,None,itkImageToImageFilterIUC3VIUC3)
itkImageToImageFilterIUC3VIUC3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUC3_GetPointer,None,itkImageToImageFilterIUC3VIUC3)
itkImageToImageFilterIUC3VIUC3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUC3_swigregister
itkImageToImageFilterIUC3VIUC3_swigregister(itkImageToImageFilterIUC3VIUC3)

def itkImageToImageFilterIUC3VIUC3_cast(*args):
  """itkImageToImageFilterIUC3VIUC3_cast(itkLightObject obj) -> itkImageToImageFilterIUC3VIUC3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUC3_cast(*args)

class itkImageToImageFilterIUC3VIUL3(itkImageSourcePython.itkImageSourceVIUL3):
    """Proxy of C++ itkImageToImageFilterIUC3VIUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUL3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUL3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC3 image)
        SetInput(self, unsigned int arg0, itkImageUC3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUL3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC3
        GetInput(self, unsigned int idx) -> itkImageUC3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUL3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUL3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUL3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUL3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUL3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUC3VIUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC3VIUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC3VIUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC3VIUL3
        
        Create a new object of the class itkImageToImageFilterIUC3VIUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC3VIUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC3VIUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC3VIUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC3VIUL3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUL3_SetInput,None,itkImageToImageFilterIUC3VIUL3)
itkImageToImageFilterIUC3VIUL3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUL3_GetInput,None,itkImageToImageFilterIUC3VIUL3)
itkImageToImageFilterIUC3VIUL3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUL3_PushBackInput,None,itkImageToImageFilterIUC3VIUL3)
itkImageToImageFilterIUC3VIUL3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUL3_PopBackInput,None,itkImageToImageFilterIUC3VIUL3)
itkImageToImageFilterIUC3VIUL3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUL3_PushFrontInput,None,itkImageToImageFilterIUC3VIUL3)
itkImageToImageFilterIUC3VIUL3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUL3_PopFrontInput,None,itkImageToImageFilterIUC3VIUL3)
itkImageToImageFilterIUC3VIUL3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUL3_GetPointer,None,itkImageToImageFilterIUC3VIUL3)
itkImageToImageFilterIUC3VIUL3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUL3_swigregister
itkImageToImageFilterIUC3VIUL3_swigregister(itkImageToImageFilterIUC3VIUL3)

def itkImageToImageFilterIUC3VIUL3_cast(*args):
  """itkImageToImageFilterIUC3VIUL3_cast(itkLightObject obj) -> itkImageToImageFilterIUC3VIUL3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUL3_cast(*args)

class itkImageToImageFilterIUC3VIUS3(itkImageSourcePython.itkImageSourceVIUS3):
    """Proxy of C++ itkImageToImageFilterIUC3VIUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC3 image)
        SetInput(self, unsigned int arg0, itkImageUC3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC3
        GetInput(self, unsigned int idx) -> itkImageUC3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUC3VIUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC3VIUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC3VIUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC3VIUS3
        
        Create a new object of the class itkImageToImageFilterIUC3VIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC3VIUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC3VIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC3VIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC3VIUS3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUS3_SetInput,None,itkImageToImageFilterIUC3VIUS3)
itkImageToImageFilterIUC3VIUS3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUS3_GetInput,None,itkImageToImageFilterIUC3VIUS3)
itkImageToImageFilterIUC3VIUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUS3_PushBackInput,None,itkImageToImageFilterIUC3VIUS3)
itkImageToImageFilterIUC3VIUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUS3_PopBackInput,None,itkImageToImageFilterIUC3VIUS3)
itkImageToImageFilterIUC3VIUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUS3_PushFrontInput,None,itkImageToImageFilterIUC3VIUS3)
itkImageToImageFilterIUC3VIUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUS3_PopFrontInput,None,itkImageToImageFilterIUC3VIUS3)
itkImageToImageFilterIUC3VIUS3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUS3_GetPointer,None,itkImageToImageFilterIUC3VIUS3)
itkImageToImageFilterIUC3VIUS3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUS3_swigregister
itkImageToImageFilterIUC3VIUS3_swigregister(itkImageToImageFilterIUC3VIUS3)

def itkImageToImageFilterIUC3VIUS3_cast(*args):
  """itkImageToImageFilterIUC3VIUS3_cast(itkLightObject obj) -> itkImageToImageFilterIUC3VIUS3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUS3_cast(*args)

class itkImageToImageFilterIUL2ICVF22(itkImageSourcePython.itkImageSourceICVF22):
    """Proxy of C++ itkImageToImageFilterIUL2ICVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2ICVF22_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2ICVF22_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL2 image)
        SetInput(self, unsigned int arg0, itkImageUL2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2ICVF22_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL2
        GetInput(self, unsigned int idx) -> itkImageUL2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2ICVF22_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2ICVF22_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2ICVF22_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2ICVF22_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2ICVF22_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUL2ICVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL2ICVF22"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2ICVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL2ICVF22"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2ICVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL2ICVF22
        
        Create a new object of the class itkImageToImageFilterIUL2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL2ICVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL2ICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL2ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL2ICVF22.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2ICVF22_SetInput,None,itkImageToImageFilterIUL2ICVF22)
itkImageToImageFilterIUL2ICVF22.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2ICVF22_GetInput,None,itkImageToImageFilterIUL2ICVF22)
itkImageToImageFilterIUL2ICVF22.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2ICVF22_PushBackInput,None,itkImageToImageFilterIUL2ICVF22)
itkImageToImageFilterIUL2ICVF22.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2ICVF22_PopBackInput,None,itkImageToImageFilterIUL2ICVF22)
itkImageToImageFilterIUL2ICVF22.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2ICVF22_PushFrontInput,None,itkImageToImageFilterIUL2ICVF22)
itkImageToImageFilterIUL2ICVF22.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2ICVF22_PopFrontInput,None,itkImageToImageFilterIUL2ICVF22)
itkImageToImageFilterIUL2ICVF22.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2ICVF22_GetPointer,None,itkImageToImageFilterIUL2ICVF22)
itkImageToImageFilterIUL2ICVF22_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2ICVF22_swigregister
itkImageToImageFilterIUL2ICVF22_swigregister(itkImageToImageFilterIUL2ICVF22)

def itkImageToImageFilterIUL2ICVF22_cast(*args):
  """itkImageToImageFilterIUL2ICVF22_cast(itkLightObject obj) -> itkImageToImageFilterIUL2ICVF22"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2ICVF22_cast(*args)

class itkImageToImageFilterIUL2IRGBAUS2(itkImageSourcePython.itkImageSourceIRGBAUS2):
    """Proxy of C++ itkImageToImageFilterIUL2IRGBAUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBAUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBAUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL2 image)
        SetInput(self, unsigned int arg0, itkImageUL2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBAUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL2
        GetInput(self, unsigned int idx) -> itkImageUL2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBAUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBAUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBAUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBAUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBAUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUL2IRGBAUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL2IRGBAUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBAUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL2IRGBAUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBAUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL2IRGBAUS2
        
        Create a new object of the class itkImageToImageFilterIUL2IRGBAUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL2IRGBAUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL2IRGBAUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL2IRGBAUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL2IRGBAUS2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBAUS2_SetInput,None,itkImageToImageFilterIUL2IRGBAUS2)
itkImageToImageFilterIUL2IRGBAUS2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBAUS2_GetInput,None,itkImageToImageFilterIUL2IRGBAUS2)
itkImageToImageFilterIUL2IRGBAUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBAUS2_PushBackInput,None,itkImageToImageFilterIUL2IRGBAUS2)
itkImageToImageFilterIUL2IRGBAUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBAUS2_PopBackInput,None,itkImageToImageFilterIUL2IRGBAUS2)
itkImageToImageFilterIUL2IRGBAUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBAUS2_PushFrontInput,None,itkImageToImageFilterIUL2IRGBAUS2)
itkImageToImageFilterIUL2IRGBAUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBAUS2_PopFrontInput,None,itkImageToImageFilterIUL2IRGBAUS2)
itkImageToImageFilterIUL2IRGBAUS2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBAUS2_GetPointer,None,itkImageToImageFilterIUL2IRGBAUS2)
itkImageToImageFilterIUL2IRGBAUS2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBAUS2_swigregister
itkImageToImageFilterIUL2IRGBAUS2_swigregister(itkImageToImageFilterIUL2IRGBAUS2)

def itkImageToImageFilterIUL2IRGBAUS2_cast(*args):
  """itkImageToImageFilterIUL2IRGBAUS2_cast(itkLightObject obj) -> itkImageToImageFilterIUL2IRGBAUS2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBAUS2_cast(*args)

class itkImageToImageFilterIUL2IRGBUS2(itkImageSourcePython.itkImageSourceIRGBUS2):
    """Proxy of C++ itkImageToImageFilterIUL2IRGBUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL2 image)
        SetInput(self, unsigned int arg0, itkImageUL2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL2
        GetInput(self, unsigned int idx) -> itkImageUL2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUL2IRGBUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL2IRGBUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL2IRGBUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL2IRGBUS2
        
        Create a new object of the class itkImageToImageFilterIUL2IRGBUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL2IRGBUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL2IRGBUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL2IRGBUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL2IRGBUS2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBUS2_SetInput,None,itkImageToImageFilterIUL2IRGBUS2)
itkImageToImageFilterIUL2IRGBUS2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBUS2_GetInput,None,itkImageToImageFilterIUL2IRGBUS2)
itkImageToImageFilterIUL2IRGBUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBUS2_PushBackInput,None,itkImageToImageFilterIUL2IRGBUS2)
itkImageToImageFilterIUL2IRGBUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBUS2_PopBackInput,None,itkImageToImageFilterIUL2IRGBUS2)
itkImageToImageFilterIUL2IRGBUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBUS2_PushFrontInput,None,itkImageToImageFilterIUL2IRGBUS2)
itkImageToImageFilterIUL2IRGBUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBUS2_PopFrontInput,None,itkImageToImageFilterIUL2IRGBUS2)
itkImageToImageFilterIUL2IRGBUS2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBUS2_GetPointer,None,itkImageToImageFilterIUL2IRGBUS2)
itkImageToImageFilterIUL2IRGBUS2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBUS2_swigregister
itkImageToImageFilterIUL2IRGBUS2_swigregister(itkImageToImageFilterIUL2IRGBUS2)

def itkImageToImageFilterIUL2IRGBUS2_cast(*args):
  """itkImageToImageFilterIUL2IRGBUS2_cast(itkLightObject obj) -> itkImageToImageFilterIUL2IRGBUS2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBUS2_cast(*args)

class itkImageToImageFilterIUL2ISSRTD22(itkImageSourcePython.itkImageSourceISSRTD22):
    """Proxy of C++ itkImageToImageFilterIUL2ISSRTD22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2ISSRTD22_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2ISSRTD22_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL2 image)
        SetInput(self, unsigned int arg0, itkImageUL2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2ISSRTD22_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL2
        GetInput(self, unsigned int idx) -> itkImageUL2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2ISSRTD22_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2ISSRTD22_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2ISSRTD22_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2ISSRTD22_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2ISSRTD22_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUL2ISSRTD22
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL2ISSRTD22"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2ISSRTD22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL2ISSRTD22"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2ISSRTD22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL2ISSRTD22
        
        Create a new object of the class itkImageToImageFilterIUL2ISSRTD22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL2ISSRTD22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL2ISSRTD22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL2ISSRTD22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL2ISSRTD22.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2ISSRTD22_SetInput,None,itkImageToImageFilterIUL2ISSRTD22)
itkImageToImageFilterIUL2ISSRTD22.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2ISSRTD22_GetInput,None,itkImageToImageFilterIUL2ISSRTD22)
itkImageToImageFilterIUL2ISSRTD22.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2ISSRTD22_PushBackInput,None,itkImageToImageFilterIUL2ISSRTD22)
itkImageToImageFilterIUL2ISSRTD22.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2ISSRTD22_PopBackInput,None,itkImageToImageFilterIUL2ISSRTD22)
itkImageToImageFilterIUL2ISSRTD22.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2ISSRTD22_PushFrontInput,None,itkImageToImageFilterIUL2ISSRTD22)
itkImageToImageFilterIUL2ISSRTD22.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2ISSRTD22_PopFrontInput,None,itkImageToImageFilterIUL2ISSRTD22)
itkImageToImageFilterIUL2ISSRTD22.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2ISSRTD22_GetPointer,None,itkImageToImageFilterIUL2ISSRTD22)
itkImageToImageFilterIUL2ISSRTD22_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2ISSRTD22_swigregister
itkImageToImageFilterIUL2ISSRTD22_swigregister(itkImageToImageFilterIUL2ISSRTD22)

def itkImageToImageFilterIUL2ISSRTD22_cast(*args):
  """itkImageToImageFilterIUL2ISSRTD22_cast(itkLightObject obj) -> itkImageToImageFilterIUL2ISSRTD22"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2ISSRTD22_cast(*args)

class itkImageToImageFilterIUL2IUL3(itkImageSourcePython.itkImageSourceIUL3):
    """Proxy of C++ itkImageToImageFilterIUL2IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IUL3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IUL3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL2 image)
        SetInput(self, unsigned int arg0, itkImageUL2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IUL3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL2
        GetInput(self, unsigned int idx) -> itkImageUL2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IUL3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IUL3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IUL3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IUL3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IUL3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUL2IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL2IUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL2IUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL2IUL3
        
        Create a new object of the class itkImageToImageFilterIUL2IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL2IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL2IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL2IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL2IUL3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2IUL3_SetInput,None,itkImageToImageFilterIUL2IUL3)
itkImageToImageFilterIUL2IUL3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2IUL3_GetInput,None,itkImageToImageFilterIUL2IUL3)
itkImageToImageFilterIUL2IUL3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2IUL3_PushBackInput,None,itkImageToImageFilterIUL2IUL3)
itkImageToImageFilterIUL2IUL3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2IUL3_PopBackInput,None,itkImageToImageFilterIUL2IUL3)
itkImageToImageFilterIUL2IUL3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2IUL3_PushFrontInput,None,itkImageToImageFilterIUL2IUL3)
itkImageToImageFilterIUL2IUL3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2IUL3_PopFrontInput,None,itkImageToImageFilterIUL2IUL3)
itkImageToImageFilterIUL2IUL3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2IUL3_GetPointer,None,itkImageToImageFilterIUL2IUL3)
itkImageToImageFilterIUL2IUL3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IUL3_swigregister
itkImageToImageFilterIUL2IUL3_swigregister(itkImageToImageFilterIUL2IUL3)

def itkImageToImageFilterIUL2IUL3_cast(*args):
  """itkImageToImageFilterIUL2IUL3_cast(itkLightObject obj) -> itkImageToImageFilterIUL2IUL3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IUL3_cast(*args)

class itkImageToImageFilterIUL2IVF22(itkImageSourcePython.itkImageSourceIVF22):
    """Proxy of C++ itkImageToImageFilterIUL2IVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IVF22_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IVF22_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL2 image)
        SetInput(self, unsigned int arg0, itkImageUL2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IVF22_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL2
        GetInput(self, unsigned int idx) -> itkImageUL2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IVF22_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IVF22_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IVF22_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IVF22_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IVF22_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUL2IVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL2IVF22"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL2IVF22"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL2IVF22
        
        Create a new object of the class itkImageToImageFilterIUL2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL2IVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL2IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL2IVF22.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2IVF22_SetInput,None,itkImageToImageFilterIUL2IVF22)
itkImageToImageFilterIUL2IVF22.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2IVF22_GetInput,None,itkImageToImageFilterIUL2IVF22)
itkImageToImageFilterIUL2IVF22.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2IVF22_PushBackInput,None,itkImageToImageFilterIUL2IVF22)
itkImageToImageFilterIUL2IVF22.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2IVF22_PopBackInput,None,itkImageToImageFilterIUL2IVF22)
itkImageToImageFilterIUL2IVF22.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2IVF22_PushFrontInput,None,itkImageToImageFilterIUL2IVF22)
itkImageToImageFilterIUL2IVF22.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2IVF22_PopFrontInput,None,itkImageToImageFilterIUL2IVF22)
itkImageToImageFilterIUL2IVF22.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2IVF22_GetPointer,None,itkImageToImageFilterIUL2IVF22)
itkImageToImageFilterIUL2IVF22_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IVF22_swigregister
itkImageToImageFilterIUL2IVF22_swigregister(itkImageToImageFilterIUL2IVF22)

def itkImageToImageFilterIUL2IVF22_cast(*args):
  """itkImageToImageFilterIUL2IVF22_cast(itkLightObject obj) -> itkImageToImageFilterIUL2IVF22"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2IVF22_cast(*args)

class itkImageToImageFilterIUL2VID2(itkImageSourcePython.itkImageSourceVID2):
    """Proxy of C++ itkImageToImageFilterIUL2VID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VID2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VID2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL2 image)
        SetInput(self, unsigned int arg0, itkImageUL2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VID2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL2
        GetInput(self, unsigned int idx) -> itkImageUL2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VID2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VID2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VID2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VID2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VID2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUL2VID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL2VID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL2VID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL2VID2
        
        Create a new object of the class itkImageToImageFilterIUL2VID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL2VID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL2VID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL2VID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL2VID2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VID2_SetInput,None,itkImageToImageFilterIUL2VID2)
itkImageToImageFilterIUL2VID2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VID2_GetInput,None,itkImageToImageFilterIUL2VID2)
itkImageToImageFilterIUL2VID2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VID2_PushBackInput,None,itkImageToImageFilterIUL2VID2)
itkImageToImageFilterIUL2VID2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VID2_PopBackInput,None,itkImageToImageFilterIUL2VID2)
itkImageToImageFilterIUL2VID2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VID2_PushFrontInput,None,itkImageToImageFilterIUL2VID2)
itkImageToImageFilterIUL2VID2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VID2_PopFrontInput,None,itkImageToImageFilterIUL2VID2)
itkImageToImageFilterIUL2VID2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VID2_GetPointer,None,itkImageToImageFilterIUL2VID2)
itkImageToImageFilterIUL2VID2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VID2_swigregister
itkImageToImageFilterIUL2VID2_swigregister(itkImageToImageFilterIUL2VID2)

def itkImageToImageFilterIUL2VID2_cast(*args):
  """itkImageToImageFilterIUL2VID2_cast(itkLightObject obj) -> itkImageToImageFilterIUL2VID2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VID2_cast(*args)

class itkImageToImageFilterIUL2VIF2(itkImageSourcePython.itkImageSourceVIF2):
    """Proxy of C++ itkImageToImageFilterIUL2VIF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIF2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIF2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL2 image)
        SetInput(self, unsigned int arg0, itkImageUL2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIF2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL2
        GetInput(self, unsigned int idx) -> itkImageUL2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIF2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIF2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIF2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIF2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIF2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUL2VIF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL2VIF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL2VIF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL2VIF2
        
        Create a new object of the class itkImageToImageFilterIUL2VIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL2VIF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL2VIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL2VIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL2VIF2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIF2_SetInput,None,itkImageToImageFilterIUL2VIF2)
itkImageToImageFilterIUL2VIF2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIF2_GetInput,None,itkImageToImageFilterIUL2VIF2)
itkImageToImageFilterIUL2VIF2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIF2_PushBackInput,None,itkImageToImageFilterIUL2VIF2)
itkImageToImageFilterIUL2VIF2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIF2_PopBackInput,None,itkImageToImageFilterIUL2VIF2)
itkImageToImageFilterIUL2VIF2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIF2_PushFrontInput,None,itkImageToImageFilterIUL2VIF2)
itkImageToImageFilterIUL2VIF2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIF2_PopFrontInput,None,itkImageToImageFilterIUL2VIF2)
itkImageToImageFilterIUL2VIF2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIF2_GetPointer,None,itkImageToImageFilterIUL2VIF2)
itkImageToImageFilterIUL2VIF2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIF2_swigregister
itkImageToImageFilterIUL2VIF2_swigregister(itkImageToImageFilterIUL2VIF2)

def itkImageToImageFilterIUL2VIF2_cast(*args):
  """itkImageToImageFilterIUL2VIF2_cast(itkLightObject obj) -> itkImageToImageFilterIUL2VIF2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIF2_cast(*args)

class itkImageToImageFilterIUL2VIUC2(itkImageSourcePython.itkImageSourceVIUC2):
    """Proxy of C++ itkImageToImageFilterIUL2VIUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUC2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUC2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL2 image)
        SetInput(self, unsigned int arg0, itkImageUL2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUC2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL2
        GetInput(self, unsigned int idx) -> itkImageUL2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUC2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUC2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUC2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUC2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUC2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUL2VIUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL2VIUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL2VIUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL2VIUC2
        
        Create a new object of the class itkImageToImageFilterIUL2VIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL2VIUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL2VIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL2VIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL2VIUC2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUC2_SetInput,None,itkImageToImageFilterIUL2VIUC2)
itkImageToImageFilterIUL2VIUC2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUC2_GetInput,None,itkImageToImageFilterIUL2VIUC2)
itkImageToImageFilterIUL2VIUC2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUC2_PushBackInput,None,itkImageToImageFilterIUL2VIUC2)
itkImageToImageFilterIUL2VIUC2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUC2_PopBackInput,None,itkImageToImageFilterIUL2VIUC2)
itkImageToImageFilterIUL2VIUC2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUC2_PushFrontInput,None,itkImageToImageFilterIUL2VIUC2)
itkImageToImageFilterIUL2VIUC2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUC2_PopFrontInput,None,itkImageToImageFilterIUL2VIUC2)
itkImageToImageFilterIUL2VIUC2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUC2_GetPointer,None,itkImageToImageFilterIUL2VIUC2)
itkImageToImageFilterIUL2VIUC2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUC2_swigregister
itkImageToImageFilterIUL2VIUC2_swigregister(itkImageToImageFilterIUL2VIUC2)

def itkImageToImageFilterIUL2VIUC2_cast(*args):
  """itkImageToImageFilterIUL2VIUC2_cast(itkLightObject obj) -> itkImageToImageFilterIUL2VIUC2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUC2_cast(*args)

class itkImageToImageFilterIUL2VIUL2(itkImageSourcePython.itkImageSourceVIUL2):
    """Proxy of C++ itkImageToImageFilterIUL2VIUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUL2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUL2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL2 image)
        SetInput(self, unsigned int arg0, itkImageUL2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUL2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL2
        GetInput(self, unsigned int idx) -> itkImageUL2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUL2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUL2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUL2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUL2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUL2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUL2VIUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL2VIUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL2VIUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL2VIUL2
        
        Create a new object of the class itkImageToImageFilterIUL2VIUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL2VIUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL2VIUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL2VIUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL2VIUL2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUL2_SetInput,None,itkImageToImageFilterIUL2VIUL2)
itkImageToImageFilterIUL2VIUL2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUL2_GetInput,None,itkImageToImageFilterIUL2VIUL2)
itkImageToImageFilterIUL2VIUL2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUL2_PushBackInput,None,itkImageToImageFilterIUL2VIUL2)
itkImageToImageFilterIUL2VIUL2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUL2_PopBackInput,None,itkImageToImageFilterIUL2VIUL2)
itkImageToImageFilterIUL2VIUL2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUL2_PushFrontInput,None,itkImageToImageFilterIUL2VIUL2)
itkImageToImageFilterIUL2VIUL2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUL2_PopFrontInput,None,itkImageToImageFilterIUL2VIUL2)
itkImageToImageFilterIUL2VIUL2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUL2_GetPointer,None,itkImageToImageFilterIUL2VIUL2)
itkImageToImageFilterIUL2VIUL2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUL2_swigregister
itkImageToImageFilterIUL2VIUL2_swigregister(itkImageToImageFilterIUL2VIUL2)

def itkImageToImageFilterIUL2VIUL2_cast(*args):
  """itkImageToImageFilterIUL2VIUL2_cast(itkLightObject obj) -> itkImageToImageFilterIUL2VIUL2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUL2_cast(*args)

class itkImageToImageFilterIUL2VIUS2(itkImageSourcePython.itkImageSourceVIUS2):
    """Proxy of C++ itkImageToImageFilterIUL2VIUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL2 image)
        SetInput(self, unsigned int arg0, itkImageUL2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL2
        GetInput(self, unsigned int idx) -> itkImageUL2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUL2VIUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL2VIUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL2VIUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL2VIUS2
        
        Create a new object of the class itkImageToImageFilterIUL2VIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL2VIUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL2VIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL2VIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL2VIUS2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUS2_SetInput,None,itkImageToImageFilterIUL2VIUS2)
itkImageToImageFilterIUL2VIUS2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUS2_GetInput,None,itkImageToImageFilterIUL2VIUS2)
itkImageToImageFilterIUL2VIUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUS2_PushBackInput,None,itkImageToImageFilterIUL2VIUS2)
itkImageToImageFilterIUL2VIUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUS2_PopBackInput,None,itkImageToImageFilterIUL2VIUS2)
itkImageToImageFilterIUL2VIUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUS2_PushFrontInput,None,itkImageToImageFilterIUL2VIUS2)
itkImageToImageFilterIUL2VIUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUS2_PopFrontInput,None,itkImageToImageFilterIUL2VIUS2)
itkImageToImageFilterIUL2VIUS2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUS2_GetPointer,None,itkImageToImageFilterIUL2VIUS2)
itkImageToImageFilterIUL2VIUS2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUS2_swigregister
itkImageToImageFilterIUL2VIUS2_swigregister(itkImageToImageFilterIUL2VIUS2)

def itkImageToImageFilterIUL2VIUS2_cast(*args):
  """itkImageToImageFilterIUL2VIUS2_cast(itkLightObject obj) -> itkImageToImageFilterIUL2VIUS2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUS2_cast(*args)

class itkImageToImageFilterIUL3ICVF33(itkImageSourcePython.itkImageSourceICVF33):
    """Proxy of C++ itkImageToImageFilterIUL3ICVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3ICVF33_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3ICVF33_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL3 image)
        SetInput(self, unsigned int arg0, itkImageUL3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3ICVF33_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL3
        GetInput(self, unsigned int idx) -> itkImageUL3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3ICVF33_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3ICVF33_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3ICVF33_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3ICVF33_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3ICVF33_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUL3ICVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL3ICVF33"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3ICVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL3ICVF33"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3ICVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL3ICVF33
        
        Create a new object of the class itkImageToImageFilterIUL3ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL3ICVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL3ICVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL3ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL3ICVF33.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3ICVF33_SetInput,None,itkImageToImageFilterIUL3ICVF33)
itkImageToImageFilterIUL3ICVF33.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3ICVF33_GetInput,None,itkImageToImageFilterIUL3ICVF33)
itkImageToImageFilterIUL3ICVF33.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3ICVF33_PushBackInput,None,itkImageToImageFilterIUL3ICVF33)
itkImageToImageFilterIUL3ICVF33.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3ICVF33_PopBackInput,None,itkImageToImageFilterIUL3ICVF33)
itkImageToImageFilterIUL3ICVF33.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3ICVF33_PushFrontInput,None,itkImageToImageFilterIUL3ICVF33)
itkImageToImageFilterIUL3ICVF33.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3ICVF33_PopFrontInput,None,itkImageToImageFilterIUL3ICVF33)
itkImageToImageFilterIUL3ICVF33.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3ICVF33_GetPointer,None,itkImageToImageFilterIUL3ICVF33)
itkImageToImageFilterIUL3ICVF33_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3ICVF33_swigregister
itkImageToImageFilterIUL3ICVF33_swigregister(itkImageToImageFilterIUL3ICVF33)

def itkImageToImageFilterIUL3ICVF33_cast(*args):
  """itkImageToImageFilterIUL3ICVF33_cast(itkLightObject obj) -> itkImageToImageFilterIUL3ICVF33"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3ICVF33_cast(*args)

class itkImageToImageFilterIUL3IRGBAUS3(itkImageSourcePython.itkImageSourceIRGBAUS3):
    """Proxy of C++ itkImageToImageFilterIUL3IRGBAUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBAUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBAUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL3 image)
        SetInput(self, unsigned int arg0, itkImageUL3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBAUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL3
        GetInput(self, unsigned int idx) -> itkImageUL3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBAUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBAUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBAUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBAUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBAUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUL3IRGBAUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL3IRGBAUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBAUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL3IRGBAUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBAUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL3IRGBAUS3
        
        Create a new object of the class itkImageToImageFilterIUL3IRGBAUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL3IRGBAUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL3IRGBAUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL3IRGBAUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL3IRGBAUS3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBAUS3_SetInput,None,itkImageToImageFilterIUL3IRGBAUS3)
itkImageToImageFilterIUL3IRGBAUS3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBAUS3_GetInput,None,itkImageToImageFilterIUL3IRGBAUS3)
itkImageToImageFilterIUL3IRGBAUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBAUS3_PushBackInput,None,itkImageToImageFilterIUL3IRGBAUS3)
itkImageToImageFilterIUL3IRGBAUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBAUS3_PopBackInput,None,itkImageToImageFilterIUL3IRGBAUS3)
itkImageToImageFilterIUL3IRGBAUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBAUS3_PushFrontInput,None,itkImageToImageFilterIUL3IRGBAUS3)
itkImageToImageFilterIUL3IRGBAUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBAUS3_PopFrontInput,None,itkImageToImageFilterIUL3IRGBAUS3)
itkImageToImageFilterIUL3IRGBAUS3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBAUS3_GetPointer,None,itkImageToImageFilterIUL3IRGBAUS3)
itkImageToImageFilterIUL3IRGBAUS3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBAUS3_swigregister
itkImageToImageFilterIUL3IRGBAUS3_swigregister(itkImageToImageFilterIUL3IRGBAUS3)

def itkImageToImageFilterIUL3IRGBAUS3_cast(*args):
  """itkImageToImageFilterIUL3IRGBAUS3_cast(itkLightObject obj) -> itkImageToImageFilterIUL3IRGBAUS3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBAUS3_cast(*args)

class itkImageToImageFilterIUL3IRGBUS3(itkImageSourcePython.itkImageSourceIRGBUS3):
    """Proxy of C++ itkImageToImageFilterIUL3IRGBUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL3 image)
        SetInput(self, unsigned int arg0, itkImageUL3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL3
        GetInput(self, unsigned int idx) -> itkImageUL3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUL3IRGBUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL3IRGBUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL3IRGBUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL3IRGBUS3
        
        Create a new object of the class itkImageToImageFilterIUL3IRGBUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL3IRGBUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL3IRGBUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL3IRGBUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL3IRGBUS3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBUS3_SetInput,None,itkImageToImageFilterIUL3IRGBUS3)
itkImageToImageFilterIUL3IRGBUS3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBUS3_GetInput,None,itkImageToImageFilterIUL3IRGBUS3)
itkImageToImageFilterIUL3IRGBUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBUS3_PushBackInput,None,itkImageToImageFilterIUL3IRGBUS3)
itkImageToImageFilterIUL3IRGBUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBUS3_PopBackInput,None,itkImageToImageFilterIUL3IRGBUS3)
itkImageToImageFilterIUL3IRGBUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBUS3_PushFrontInput,None,itkImageToImageFilterIUL3IRGBUS3)
itkImageToImageFilterIUL3IRGBUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBUS3_PopFrontInput,None,itkImageToImageFilterIUL3IRGBUS3)
itkImageToImageFilterIUL3IRGBUS3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBUS3_GetPointer,None,itkImageToImageFilterIUL3IRGBUS3)
itkImageToImageFilterIUL3IRGBUS3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBUS3_swigregister
itkImageToImageFilterIUL3IRGBUS3_swigregister(itkImageToImageFilterIUL3IRGBUS3)

def itkImageToImageFilterIUL3IRGBUS3_cast(*args):
  """itkImageToImageFilterIUL3IRGBUS3_cast(itkLightObject obj) -> itkImageToImageFilterIUL3IRGBUS3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBUS3_cast(*args)

class itkImageToImageFilterIUL3ISSRTD33(itkImageSourcePython.itkImageSourceISSRTD33):
    """Proxy of C++ itkImageToImageFilterIUL3ISSRTD33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3ISSRTD33_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3ISSRTD33_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL3 image)
        SetInput(self, unsigned int arg0, itkImageUL3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3ISSRTD33_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL3
        GetInput(self, unsigned int idx) -> itkImageUL3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3ISSRTD33_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3ISSRTD33_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3ISSRTD33_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3ISSRTD33_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3ISSRTD33_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUL3ISSRTD33
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL3ISSRTD33"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3ISSRTD33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL3ISSRTD33"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3ISSRTD33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL3ISSRTD33
        
        Create a new object of the class itkImageToImageFilterIUL3ISSRTD33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL3ISSRTD33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL3ISSRTD33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL3ISSRTD33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL3ISSRTD33.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3ISSRTD33_SetInput,None,itkImageToImageFilterIUL3ISSRTD33)
itkImageToImageFilterIUL3ISSRTD33.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3ISSRTD33_GetInput,None,itkImageToImageFilterIUL3ISSRTD33)
itkImageToImageFilterIUL3ISSRTD33.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3ISSRTD33_PushBackInput,None,itkImageToImageFilterIUL3ISSRTD33)
itkImageToImageFilterIUL3ISSRTD33.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3ISSRTD33_PopBackInput,None,itkImageToImageFilterIUL3ISSRTD33)
itkImageToImageFilterIUL3ISSRTD33.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3ISSRTD33_PushFrontInput,None,itkImageToImageFilterIUL3ISSRTD33)
itkImageToImageFilterIUL3ISSRTD33.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3ISSRTD33_PopFrontInput,None,itkImageToImageFilterIUL3ISSRTD33)
itkImageToImageFilterIUL3ISSRTD33.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3ISSRTD33_GetPointer,None,itkImageToImageFilterIUL3ISSRTD33)
itkImageToImageFilterIUL3ISSRTD33_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3ISSRTD33_swigregister
itkImageToImageFilterIUL3ISSRTD33_swigregister(itkImageToImageFilterIUL3ISSRTD33)

def itkImageToImageFilterIUL3ISSRTD33_cast(*args):
  """itkImageToImageFilterIUL3ISSRTD33_cast(itkLightObject obj) -> itkImageToImageFilterIUL3ISSRTD33"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3ISSRTD33_cast(*args)

class itkImageToImageFilterIUL3IUL2(itkImageSourcePython.itkImageSourceIUL2):
    """Proxy of C++ itkImageToImageFilterIUL3IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IUL2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IUL2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL3 image)
        SetInput(self, unsigned int arg0, itkImageUL3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IUL2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL3
        GetInput(self, unsigned int idx) -> itkImageUL3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IUL2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IUL2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IUL2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IUL2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IUL2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUL3IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL3IUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL3IUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL3IUL2
        
        Create a new object of the class itkImageToImageFilterIUL3IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL3IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL3IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL3IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL3IUL2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3IUL2_SetInput,None,itkImageToImageFilterIUL3IUL2)
itkImageToImageFilterIUL3IUL2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3IUL2_GetInput,None,itkImageToImageFilterIUL3IUL2)
itkImageToImageFilterIUL3IUL2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3IUL2_PushBackInput,None,itkImageToImageFilterIUL3IUL2)
itkImageToImageFilterIUL3IUL2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3IUL2_PopBackInput,None,itkImageToImageFilterIUL3IUL2)
itkImageToImageFilterIUL3IUL2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3IUL2_PushFrontInput,None,itkImageToImageFilterIUL3IUL2)
itkImageToImageFilterIUL3IUL2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3IUL2_PopFrontInput,None,itkImageToImageFilterIUL3IUL2)
itkImageToImageFilterIUL3IUL2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3IUL2_GetPointer,None,itkImageToImageFilterIUL3IUL2)
itkImageToImageFilterIUL3IUL2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IUL2_swigregister
itkImageToImageFilterIUL3IUL2_swigregister(itkImageToImageFilterIUL3IUL2)

def itkImageToImageFilterIUL3IUL2_cast(*args):
  """itkImageToImageFilterIUL3IUL2_cast(itkLightObject obj) -> itkImageToImageFilterIUL3IUL2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IUL2_cast(*args)

class itkImageToImageFilterIUL3IVF33(itkImageSourcePython.itkImageSourceIVF33):
    """Proxy of C++ itkImageToImageFilterIUL3IVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IVF33_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IVF33_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL3 image)
        SetInput(self, unsigned int arg0, itkImageUL3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IVF33_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL3
        GetInput(self, unsigned int idx) -> itkImageUL3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IVF33_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IVF33_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IVF33_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IVF33_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IVF33_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUL3IVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL3IVF33"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL3IVF33"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL3IVF33
        
        Create a new object of the class itkImageToImageFilterIUL3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL3IVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL3IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL3IVF33.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3IVF33_SetInput,None,itkImageToImageFilterIUL3IVF33)
itkImageToImageFilterIUL3IVF33.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3IVF33_GetInput,None,itkImageToImageFilterIUL3IVF33)
itkImageToImageFilterIUL3IVF33.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3IVF33_PushBackInput,None,itkImageToImageFilterIUL3IVF33)
itkImageToImageFilterIUL3IVF33.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3IVF33_PopBackInput,None,itkImageToImageFilterIUL3IVF33)
itkImageToImageFilterIUL3IVF33.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3IVF33_PushFrontInput,None,itkImageToImageFilterIUL3IVF33)
itkImageToImageFilterIUL3IVF33.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3IVF33_PopFrontInput,None,itkImageToImageFilterIUL3IVF33)
itkImageToImageFilterIUL3IVF33.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3IVF33_GetPointer,None,itkImageToImageFilterIUL3IVF33)
itkImageToImageFilterIUL3IVF33_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IVF33_swigregister
itkImageToImageFilterIUL3IVF33_swigregister(itkImageToImageFilterIUL3IVF33)

def itkImageToImageFilterIUL3IVF33_cast(*args):
  """itkImageToImageFilterIUL3IVF33_cast(itkLightObject obj) -> itkImageToImageFilterIUL3IVF33"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3IVF33_cast(*args)

class itkImageToImageFilterIUL3VID3(itkImageSourcePython.itkImageSourceVID3):
    """Proxy of C++ itkImageToImageFilterIUL3VID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VID3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VID3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL3 image)
        SetInput(self, unsigned int arg0, itkImageUL3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VID3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL3
        GetInput(self, unsigned int idx) -> itkImageUL3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VID3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VID3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VID3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VID3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VID3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUL3VID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL3VID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL3VID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL3VID3
        
        Create a new object of the class itkImageToImageFilterIUL3VID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL3VID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL3VID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL3VID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL3VID3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VID3_SetInput,None,itkImageToImageFilterIUL3VID3)
itkImageToImageFilterIUL3VID3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VID3_GetInput,None,itkImageToImageFilterIUL3VID3)
itkImageToImageFilterIUL3VID3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VID3_PushBackInput,None,itkImageToImageFilterIUL3VID3)
itkImageToImageFilterIUL3VID3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VID3_PopBackInput,None,itkImageToImageFilterIUL3VID3)
itkImageToImageFilterIUL3VID3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VID3_PushFrontInput,None,itkImageToImageFilterIUL3VID3)
itkImageToImageFilterIUL3VID3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VID3_PopFrontInput,None,itkImageToImageFilterIUL3VID3)
itkImageToImageFilterIUL3VID3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VID3_GetPointer,None,itkImageToImageFilterIUL3VID3)
itkImageToImageFilterIUL3VID3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VID3_swigregister
itkImageToImageFilterIUL3VID3_swigregister(itkImageToImageFilterIUL3VID3)

def itkImageToImageFilterIUL3VID3_cast(*args):
  """itkImageToImageFilterIUL3VID3_cast(itkLightObject obj) -> itkImageToImageFilterIUL3VID3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VID3_cast(*args)

class itkImageToImageFilterIUL3VIF3(itkImageSourcePython.itkImageSourceVIF3):
    """Proxy of C++ itkImageToImageFilterIUL3VIF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIF3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIF3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL3 image)
        SetInput(self, unsigned int arg0, itkImageUL3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIF3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL3
        GetInput(self, unsigned int idx) -> itkImageUL3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIF3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIF3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIF3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIF3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIF3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUL3VIF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL3VIF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL3VIF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL3VIF3
        
        Create a new object of the class itkImageToImageFilterIUL3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL3VIF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL3VIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL3VIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL3VIF3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIF3_SetInput,None,itkImageToImageFilterIUL3VIF3)
itkImageToImageFilterIUL3VIF3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIF3_GetInput,None,itkImageToImageFilterIUL3VIF3)
itkImageToImageFilterIUL3VIF3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIF3_PushBackInput,None,itkImageToImageFilterIUL3VIF3)
itkImageToImageFilterIUL3VIF3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIF3_PopBackInput,None,itkImageToImageFilterIUL3VIF3)
itkImageToImageFilterIUL3VIF3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIF3_PushFrontInput,None,itkImageToImageFilterIUL3VIF3)
itkImageToImageFilterIUL3VIF3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIF3_PopFrontInput,None,itkImageToImageFilterIUL3VIF3)
itkImageToImageFilterIUL3VIF3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIF3_GetPointer,None,itkImageToImageFilterIUL3VIF3)
itkImageToImageFilterIUL3VIF3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIF3_swigregister
itkImageToImageFilterIUL3VIF3_swigregister(itkImageToImageFilterIUL3VIF3)

def itkImageToImageFilterIUL3VIF3_cast(*args):
  """itkImageToImageFilterIUL3VIF3_cast(itkLightObject obj) -> itkImageToImageFilterIUL3VIF3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIF3_cast(*args)

class itkImageToImageFilterIUL3VIUC3(itkImageSourcePython.itkImageSourceVIUC3):
    """Proxy of C++ itkImageToImageFilterIUL3VIUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUC3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUC3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL3 image)
        SetInput(self, unsigned int arg0, itkImageUL3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUC3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL3
        GetInput(self, unsigned int idx) -> itkImageUL3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUC3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUC3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUC3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUC3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUC3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUL3VIUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL3VIUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL3VIUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL3VIUC3
        
        Create a new object of the class itkImageToImageFilterIUL3VIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL3VIUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL3VIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL3VIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL3VIUC3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUC3_SetInput,None,itkImageToImageFilterIUL3VIUC3)
itkImageToImageFilterIUL3VIUC3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUC3_GetInput,None,itkImageToImageFilterIUL3VIUC3)
itkImageToImageFilterIUL3VIUC3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUC3_PushBackInput,None,itkImageToImageFilterIUL3VIUC3)
itkImageToImageFilterIUL3VIUC3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUC3_PopBackInput,None,itkImageToImageFilterIUL3VIUC3)
itkImageToImageFilterIUL3VIUC3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUC3_PushFrontInput,None,itkImageToImageFilterIUL3VIUC3)
itkImageToImageFilterIUL3VIUC3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUC3_PopFrontInput,None,itkImageToImageFilterIUL3VIUC3)
itkImageToImageFilterIUL3VIUC3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUC3_GetPointer,None,itkImageToImageFilterIUL3VIUC3)
itkImageToImageFilterIUL3VIUC3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUC3_swigregister
itkImageToImageFilterIUL3VIUC3_swigregister(itkImageToImageFilterIUL3VIUC3)

def itkImageToImageFilterIUL3VIUC3_cast(*args):
  """itkImageToImageFilterIUL3VIUC3_cast(itkLightObject obj) -> itkImageToImageFilterIUL3VIUC3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUC3_cast(*args)

class itkImageToImageFilterIUL3VIUL3(itkImageSourcePython.itkImageSourceVIUL3):
    """Proxy of C++ itkImageToImageFilterIUL3VIUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUL3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUL3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL3 image)
        SetInput(self, unsigned int arg0, itkImageUL3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUL3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL3
        GetInput(self, unsigned int idx) -> itkImageUL3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUL3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUL3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUL3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUL3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUL3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUL3VIUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL3VIUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL3VIUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL3VIUL3
        
        Create a new object of the class itkImageToImageFilterIUL3VIUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL3VIUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL3VIUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL3VIUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL3VIUL3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUL3_SetInput,None,itkImageToImageFilterIUL3VIUL3)
itkImageToImageFilterIUL3VIUL3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUL3_GetInput,None,itkImageToImageFilterIUL3VIUL3)
itkImageToImageFilterIUL3VIUL3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUL3_PushBackInput,None,itkImageToImageFilterIUL3VIUL3)
itkImageToImageFilterIUL3VIUL3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUL3_PopBackInput,None,itkImageToImageFilterIUL3VIUL3)
itkImageToImageFilterIUL3VIUL3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUL3_PushFrontInput,None,itkImageToImageFilterIUL3VIUL3)
itkImageToImageFilterIUL3VIUL3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUL3_PopFrontInput,None,itkImageToImageFilterIUL3VIUL3)
itkImageToImageFilterIUL3VIUL3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUL3_GetPointer,None,itkImageToImageFilterIUL3VIUL3)
itkImageToImageFilterIUL3VIUL3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUL3_swigregister
itkImageToImageFilterIUL3VIUL3_swigregister(itkImageToImageFilterIUL3VIUL3)

def itkImageToImageFilterIUL3VIUL3_cast(*args):
  """itkImageToImageFilterIUL3VIUL3_cast(itkLightObject obj) -> itkImageToImageFilterIUL3VIUL3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUL3_cast(*args)

class itkImageToImageFilterIUL3VIUS3(itkImageSourcePython.itkImageSourceVIUS3):
    """Proxy of C++ itkImageToImageFilterIUL3VIUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL3 image)
        SetInput(self, unsigned int arg0, itkImageUL3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL3
        GetInput(self, unsigned int idx) -> itkImageUL3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUL3VIUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL3VIUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL3VIUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL3VIUS3
        
        Create a new object of the class itkImageToImageFilterIUL3VIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL3VIUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL3VIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL3VIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL3VIUS3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUS3_SetInput,None,itkImageToImageFilterIUL3VIUS3)
itkImageToImageFilterIUL3VIUS3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUS3_GetInput,None,itkImageToImageFilterIUL3VIUS3)
itkImageToImageFilterIUL3VIUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUS3_PushBackInput,None,itkImageToImageFilterIUL3VIUS3)
itkImageToImageFilterIUL3VIUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUS3_PopBackInput,None,itkImageToImageFilterIUL3VIUS3)
itkImageToImageFilterIUL3VIUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUS3_PushFrontInput,None,itkImageToImageFilterIUL3VIUS3)
itkImageToImageFilterIUL3VIUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUS3_PopFrontInput,None,itkImageToImageFilterIUL3VIUS3)
itkImageToImageFilterIUL3VIUS3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUS3_GetPointer,None,itkImageToImageFilterIUL3VIUS3)
itkImageToImageFilterIUL3VIUS3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUS3_swigregister
itkImageToImageFilterIUL3VIUS3_swigregister(itkImageToImageFilterIUL3VIUS3)

def itkImageToImageFilterIUL3VIUS3_cast(*args):
  """itkImageToImageFilterIUL3VIUS3_cast(itkLightObject obj) -> itkImageToImageFilterIUL3VIUS3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUS3_cast(*args)

class itkImageToImageFilterIUS2ICVF22(itkImageSourcePython.itkImageSourceICVF22):
    """Proxy of C++ itkImageToImageFilterIUS2ICVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2ICVF22_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2ICVF22_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS2 image)
        SetInput(self, unsigned int arg0, itkImageUS2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2ICVF22_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS2
        GetInput(self, unsigned int idx) -> itkImageUS2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2ICVF22_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2ICVF22_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2ICVF22_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2ICVF22_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2ICVF22_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUS2ICVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS2ICVF22"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2ICVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS2ICVF22"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2ICVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS2ICVF22
        
        Create a new object of the class itkImageToImageFilterIUS2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS2ICVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS2ICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS2ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS2ICVF22.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2ICVF22_SetInput,None,itkImageToImageFilterIUS2ICVF22)
itkImageToImageFilterIUS2ICVF22.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2ICVF22_GetInput,None,itkImageToImageFilterIUS2ICVF22)
itkImageToImageFilterIUS2ICVF22.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2ICVF22_PushBackInput,None,itkImageToImageFilterIUS2ICVF22)
itkImageToImageFilterIUS2ICVF22.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2ICVF22_PopBackInput,None,itkImageToImageFilterIUS2ICVF22)
itkImageToImageFilterIUS2ICVF22.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2ICVF22_PushFrontInput,None,itkImageToImageFilterIUS2ICVF22)
itkImageToImageFilterIUS2ICVF22.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2ICVF22_PopFrontInput,None,itkImageToImageFilterIUS2ICVF22)
itkImageToImageFilterIUS2ICVF22.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2ICVF22_GetPointer,None,itkImageToImageFilterIUS2ICVF22)
itkImageToImageFilterIUS2ICVF22_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2ICVF22_swigregister
itkImageToImageFilterIUS2ICVF22_swigregister(itkImageToImageFilterIUS2ICVF22)

def itkImageToImageFilterIUS2ICVF22_cast(*args):
  """itkImageToImageFilterIUS2ICVF22_cast(itkLightObject obj) -> itkImageToImageFilterIUS2ICVF22"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2ICVF22_cast(*args)

class itkImageToImageFilterIUS2IRGBAUS2(itkImageSourcePython.itkImageSourceIRGBAUS2):
    """Proxy of C++ itkImageToImageFilterIUS2IRGBAUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBAUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBAUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS2 image)
        SetInput(self, unsigned int arg0, itkImageUS2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBAUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS2
        GetInput(self, unsigned int idx) -> itkImageUS2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBAUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBAUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBAUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBAUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBAUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUS2IRGBAUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS2IRGBAUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBAUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS2IRGBAUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBAUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS2IRGBAUS2
        
        Create a new object of the class itkImageToImageFilterIUS2IRGBAUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS2IRGBAUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS2IRGBAUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS2IRGBAUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS2IRGBAUS2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBAUS2_SetInput,None,itkImageToImageFilterIUS2IRGBAUS2)
itkImageToImageFilterIUS2IRGBAUS2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBAUS2_GetInput,None,itkImageToImageFilterIUS2IRGBAUS2)
itkImageToImageFilterIUS2IRGBAUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBAUS2_PushBackInput,None,itkImageToImageFilterIUS2IRGBAUS2)
itkImageToImageFilterIUS2IRGBAUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBAUS2_PopBackInput,None,itkImageToImageFilterIUS2IRGBAUS2)
itkImageToImageFilterIUS2IRGBAUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBAUS2_PushFrontInput,None,itkImageToImageFilterIUS2IRGBAUS2)
itkImageToImageFilterIUS2IRGBAUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBAUS2_PopFrontInput,None,itkImageToImageFilterIUS2IRGBAUS2)
itkImageToImageFilterIUS2IRGBAUS2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBAUS2_GetPointer,None,itkImageToImageFilterIUS2IRGBAUS2)
itkImageToImageFilterIUS2IRGBAUS2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBAUS2_swigregister
itkImageToImageFilterIUS2IRGBAUS2_swigregister(itkImageToImageFilterIUS2IRGBAUS2)

def itkImageToImageFilterIUS2IRGBAUS2_cast(*args):
  """itkImageToImageFilterIUS2IRGBAUS2_cast(itkLightObject obj) -> itkImageToImageFilterIUS2IRGBAUS2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBAUS2_cast(*args)

class itkImageToImageFilterIUS2IRGBUS2(itkImageSourcePython.itkImageSourceIRGBUS2):
    """Proxy of C++ itkImageToImageFilterIUS2IRGBUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS2 image)
        SetInput(self, unsigned int arg0, itkImageUS2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS2
        GetInput(self, unsigned int idx) -> itkImageUS2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUS2IRGBUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS2IRGBUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS2IRGBUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS2IRGBUS2
        
        Create a new object of the class itkImageToImageFilterIUS2IRGBUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS2IRGBUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS2IRGBUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS2IRGBUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS2IRGBUS2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBUS2_SetInput,None,itkImageToImageFilterIUS2IRGBUS2)
itkImageToImageFilterIUS2IRGBUS2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBUS2_GetInput,None,itkImageToImageFilterIUS2IRGBUS2)
itkImageToImageFilterIUS2IRGBUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBUS2_PushBackInput,None,itkImageToImageFilterIUS2IRGBUS2)
itkImageToImageFilterIUS2IRGBUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBUS2_PopBackInput,None,itkImageToImageFilterIUS2IRGBUS2)
itkImageToImageFilterIUS2IRGBUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBUS2_PushFrontInput,None,itkImageToImageFilterIUS2IRGBUS2)
itkImageToImageFilterIUS2IRGBUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBUS2_PopFrontInput,None,itkImageToImageFilterIUS2IRGBUS2)
itkImageToImageFilterIUS2IRGBUS2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBUS2_GetPointer,None,itkImageToImageFilterIUS2IRGBUS2)
itkImageToImageFilterIUS2IRGBUS2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBUS2_swigregister
itkImageToImageFilterIUS2IRGBUS2_swigregister(itkImageToImageFilterIUS2IRGBUS2)

def itkImageToImageFilterIUS2IRGBUS2_cast(*args):
  """itkImageToImageFilterIUS2IRGBUS2_cast(itkLightObject obj) -> itkImageToImageFilterIUS2IRGBUS2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBUS2_cast(*args)

class itkImageToImageFilterIUS2ISSRTD22(itkImageSourcePython.itkImageSourceISSRTD22):
    """Proxy of C++ itkImageToImageFilterIUS2ISSRTD22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2ISSRTD22_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2ISSRTD22_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS2 image)
        SetInput(self, unsigned int arg0, itkImageUS2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2ISSRTD22_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS2
        GetInput(self, unsigned int idx) -> itkImageUS2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2ISSRTD22_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2ISSRTD22_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2ISSRTD22_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2ISSRTD22_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2ISSRTD22_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUS2ISSRTD22
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS2ISSRTD22"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2ISSRTD22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS2ISSRTD22"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2ISSRTD22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS2ISSRTD22
        
        Create a new object of the class itkImageToImageFilterIUS2ISSRTD22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS2ISSRTD22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS2ISSRTD22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS2ISSRTD22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS2ISSRTD22.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2ISSRTD22_SetInput,None,itkImageToImageFilterIUS2ISSRTD22)
itkImageToImageFilterIUS2ISSRTD22.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2ISSRTD22_GetInput,None,itkImageToImageFilterIUS2ISSRTD22)
itkImageToImageFilterIUS2ISSRTD22.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2ISSRTD22_PushBackInput,None,itkImageToImageFilterIUS2ISSRTD22)
itkImageToImageFilterIUS2ISSRTD22.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2ISSRTD22_PopBackInput,None,itkImageToImageFilterIUS2ISSRTD22)
itkImageToImageFilterIUS2ISSRTD22.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2ISSRTD22_PushFrontInput,None,itkImageToImageFilterIUS2ISSRTD22)
itkImageToImageFilterIUS2ISSRTD22.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2ISSRTD22_PopFrontInput,None,itkImageToImageFilterIUS2ISSRTD22)
itkImageToImageFilterIUS2ISSRTD22.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2ISSRTD22_GetPointer,None,itkImageToImageFilterIUS2ISSRTD22)
itkImageToImageFilterIUS2ISSRTD22_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2ISSRTD22_swigregister
itkImageToImageFilterIUS2ISSRTD22_swigregister(itkImageToImageFilterIUS2ISSRTD22)

def itkImageToImageFilterIUS2ISSRTD22_cast(*args):
  """itkImageToImageFilterIUS2ISSRTD22_cast(itkLightObject obj) -> itkImageToImageFilterIUS2ISSRTD22"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2ISSRTD22_cast(*args)

class itkImageToImageFilterIUS2IUS3(itkImageSourcePython.itkImageSourceIUS3):
    """Proxy of C++ itkImageToImageFilterIUS2IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS2 image)
        SetInput(self, unsigned int arg0, itkImageUS2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS2
        GetInput(self, unsigned int idx) -> itkImageUS2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUS2IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS2IUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS2IUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS2IUS3
        
        Create a new object of the class itkImageToImageFilterIUS2IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS2IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS2IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS2IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS2IUS3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2IUS3_SetInput,None,itkImageToImageFilterIUS2IUS3)
itkImageToImageFilterIUS2IUS3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2IUS3_GetInput,None,itkImageToImageFilterIUS2IUS3)
itkImageToImageFilterIUS2IUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2IUS3_PushBackInput,None,itkImageToImageFilterIUS2IUS3)
itkImageToImageFilterIUS2IUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2IUS3_PopBackInput,None,itkImageToImageFilterIUS2IUS3)
itkImageToImageFilterIUS2IUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2IUS3_PushFrontInput,None,itkImageToImageFilterIUS2IUS3)
itkImageToImageFilterIUS2IUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2IUS3_PopFrontInput,None,itkImageToImageFilterIUS2IUS3)
itkImageToImageFilterIUS2IUS3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2IUS3_GetPointer,None,itkImageToImageFilterIUS2IUS3)
itkImageToImageFilterIUS2IUS3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IUS3_swigregister
itkImageToImageFilterIUS2IUS3_swigregister(itkImageToImageFilterIUS2IUS3)

def itkImageToImageFilterIUS2IUS3_cast(*args):
  """itkImageToImageFilterIUS2IUS3_cast(itkLightObject obj) -> itkImageToImageFilterIUS2IUS3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IUS3_cast(*args)

class itkImageToImageFilterIUS2IVF22(itkImageSourcePython.itkImageSourceIVF22):
    """Proxy of C++ itkImageToImageFilterIUS2IVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IVF22_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IVF22_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS2 image)
        SetInput(self, unsigned int arg0, itkImageUS2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IVF22_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS2
        GetInput(self, unsigned int idx) -> itkImageUS2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IVF22_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IVF22_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IVF22_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IVF22_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IVF22_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUS2IVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS2IVF22"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS2IVF22"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS2IVF22
        
        Create a new object of the class itkImageToImageFilterIUS2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS2IVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS2IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS2IVF22.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2IVF22_SetInput,None,itkImageToImageFilterIUS2IVF22)
itkImageToImageFilterIUS2IVF22.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2IVF22_GetInput,None,itkImageToImageFilterIUS2IVF22)
itkImageToImageFilterIUS2IVF22.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2IVF22_PushBackInput,None,itkImageToImageFilterIUS2IVF22)
itkImageToImageFilterIUS2IVF22.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2IVF22_PopBackInput,None,itkImageToImageFilterIUS2IVF22)
itkImageToImageFilterIUS2IVF22.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2IVF22_PushFrontInput,None,itkImageToImageFilterIUS2IVF22)
itkImageToImageFilterIUS2IVF22.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2IVF22_PopFrontInput,None,itkImageToImageFilterIUS2IVF22)
itkImageToImageFilterIUS2IVF22.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2IVF22_GetPointer,None,itkImageToImageFilterIUS2IVF22)
itkImageToImageFilterIUS2IVF22_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IVF22_swigregister
itkImageToImageFilterIUS2IVF22_swigregister(itkImageToImageFilterIUS2IVF22)

def itkImageToImageFilterIUS2IVF22_cast(*args):
  """itkImageToImageFilterIUS2IVF22_cast(itkLightObject obj) -> itkImageToImageFilterIUS2IVF22"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2IVF22_cast(*args)

class itkImageToImageFilterIUS2VID2(itkImageSourcePython.itkImageSourceVID2):
    """Proxy of C++ itkImageToImageFilterIUS2VID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VID2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VID2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS2 image)
        SetInput(self, unsigned int arg0, itkImageUS2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VID2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS2
        GetInput(self, unsigned int idx) -> itkImageUS2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VID2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VID2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VID2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VID2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VID2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUS2VID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS2VID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS2VID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS2VID2
        
        Create a new object of the class itkImageToImageFilterIUS2VID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS2VID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS2VID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS2VID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS2VID2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VID2_SetInput,None,itkImageToImageFilterIUS2VID2)
itkImageToImageFilterIUS2VID2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VID2_GetInput,None,itkImageToImageFilterIUS2VID2)
itkImageToImageFilterIUS2VID2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VID2_PushBackInput,None,itkImageToImageFilterIUS2VID2)
itkImageToImageFilterIUS2VID2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VID2_PopBackInput,None,itkImageToImageFilterIUS2VID2)
itkImageToImageFilterIUS2VID2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VID2_PushFrontInput,None,itkImageToImageFilterIUS2VID2)
itkImageToImageFilterIUS2VID2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VID2_PopFrontInput,None,itkImageToImageFilterIUS2VID2)
itkImageToImageFilterIUS2VID2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VID2_GetPointer,None,itkImageToImageFilterIUS2VID2)
itkImageToImageFilterIUS2VID2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VID2_swigregister
itkImageToImageFilterIUS2VID2_swigregister(itkImageToImageFilterIUS2VID2)

def itkImageToImageFilterIUS2VID2_cast(*args):
  """itkImageToImageFilterIUS2VID2_cast(itkLightObject obj) -> itkImageToImageFilterIUS2VID2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VID2_cast(*args)

class itkImageToImageFilterIUS2VIF2(itkImageSourcePython.itkImageSourceVIF2):
    """Proxy of C++ itkImageToImageFilterIUS2VIF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIF2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIF2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS2 image)
        SetInput(self, unsigned int arg0, itkImageUS2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIF2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS2
        GetInput(self, unsigned int idx) -> itkImageUS2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIF2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIF2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIF2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIF2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIF2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUS2VIF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS2VIF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS2VIF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS2VIF2
        
        Create a new object of the class itkImageToImageFilterIUS2VIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS2VIF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS2VIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS2VIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS2VIF2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIF2_SetInput,None,itkImageToImageFilterIUS2VIF2)
itkImageToImageFilterIUS2VIF2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIF2_GetInput,None,itkImageToImageFilterIUS2VIF2)
itkImageToImageFilterIUS2VIF2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIF2_PushBackInput,None,itkImageToImageFilterIUS2VIF2)
itkImageToImageFilterIUS2VIF2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIF2_PopBackInput,None,itkImageToImageFilterIUS2VIF2)
itkImageToImageFilterIUS2VIF2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIF2_PushFrontInput,None,itkImageToImageFilterIUS2VIF2)
itkImageToImageFilterIUS2VIF2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIF2_PopFrontInput,None,itkImageToImageFilterIUS2VIF2)
itkImageToImageFilterIUS2VIF2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIF2_GetPointer,None,itkImageToImageFilterIUS2VIF2)
itkImageToImageFilterIUS2VIF2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIF2_swigregister
itkImageToImageFilterIUS2VIF2_swigregister(itkImageToImageFilterIUS2VIF2)

def itkImageToImageFilterIUS2VIF2_cast(*args):
  """itkImageToImageFilterIUS2VIF2_cast(itkLightObject obj) -> itkImageToImageFilterIUS2VIF2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIF2_cast(*args)

class itkImageToImageFilterIUS2VIUC2(itkImageSourcePython.itkImageSourceVIUC2):
    """Proxy of C++ itkImageToImageFilterIUS2VIUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUC2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUC2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS2 image)
        SetInput(self, unsigned int arg0, itkImageUS2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUC2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS2
        GetInput(self, unsigned int idx) -> itkImageUS2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUC2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUC2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUC2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUC2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUC2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUS2VIUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS2VIUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS2VIUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS2VIUC2
        
        Create a new object of the class itkImageToImageFilterIUS2VIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS2VIUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS2VIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS2VIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS2VIUC2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUC2_SetInput,None,itkImageToImageFilterIUS2VIUC2)
itkImageToImageFilterIUS2VIUC2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUC2_GetInput,None,itkImageToImageFilterIUS2VIUC2)
itkImageToImageFilterIUS2VIUC2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUC2_PushBackInput,None,itkImageToImageFilterIUS2VIUC2)
itkImageToImageFilterIUS2VIUC2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUC2_PopBackInput,None,itkImageToImageFilterIUS2VIUC2)
itkImageToImageFilterIUS2VIUC2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUC2_PushFrontInput,None,itkImageToImageFilterIUS2VIUC2)
itkImageToImageFilterIUS2VIUC2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUC2_PopFrontInput,None,itkImageToImageFilterIUS2VIUC2)
itkImageToImageFilterIUS2VIUC2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUC2_GetPointer,None,itkImageToImageFilterIUS2VIUC2)
itkImageToImageFilterIUS2VIUC2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUC2_swigregister
itkImageToImageFilterIUS2VIUC2_swigregister(itkImageToImageFilterIUS2VIUC2)

def itkImageToImageFilterIUS2VIUC2_cast(*args):
  """itkImageToImageFilterIUS2VIUC2_cast(itkLightObject obj) -> itkImageToImageFilterIUS2VIUC2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUC2_cast(*args)

class itkImageToImageFilterIUS2VIUL2(itkImageSourcePython.itkImageSourceVIUL2):
    """Proxy of C++ itkImageToImageFilterIUS2VIUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUL2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUL2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS2 image)
        SetInput(self, unsigned int arg0, itkImageUS2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUL2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS2
        GetInput(self, unsigned int idx) -> itkImageUS2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUL2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUL2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUL2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUL2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUL2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUS2VIUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS2VIUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS2VIUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS2VIUL2
        
        Create a new object of the class itkImageToImageFilterIUS2VIUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS2VIUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS2VIUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS2VIUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS2VIUL2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUL2_SetInput,None,itkImageToImageFilterIUS2VIUL2)
itkImageToImageFilterIUS2VIUL2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUL2_GetInput,None,itkImageToImageFilterIUS2VIUL2)
itkImageToImageFilterIUS2VIUL2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUL2_PushBackInput,None,itkImageToImageFilterIUS2VIUL2)
itkImageToImageFilterIUS2VIUL2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUL2_PopBackInput,None,itkImageToImageFilterIUS2VIUL2)
itkImageToImageFilterIUS2VIUL2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUL2_PushFrontInput,None,itkImageToImageFilterIUS2VIUL2)
itkImageToImageFilterIUS2VIUL2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUL2_PopFrontInput,None,itkImageToImageFilterIUS2VIUL2)
itkImageToImageFilterIUS2VIUL2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUL2_GetPointer,None,itkImageToImageFilterIUS2VIUL2)
itkImageToImageFilterIUS2VIUL2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUL2_swigregister
itkImageToImageFilterIUS2VIUL2_swigregister(itkImageToImageFilterIUS2VIUL2)

def itkImageToImageFilterIUS2VIUL2_cast(*args):
  """itkImageToImageFilterIUS2VIUL2_cast(itkLightObject obj) -> itkImageToImageFilterIUS2VIUL2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUL2_cast(*args)

class itkImageToImageFilterIUS2VIUS2(itkImageSourcePython.itkImageSourceVIUS2):
    """Proxy of C++ itkImageToImageFilterIUS2VIUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS2 image)
        SetInput(self, unsigned int arg0, itkImageUS2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS2
        GetInput(self, unsigned int idx) -> itkImageUS2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUS2VIUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS2VIUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS2VIUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS2VIUS2
        
        Create a new object of the class itkImageToImageFilterIUS2VIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS2VIUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS2VIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS2VIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS2VIUS2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUS2_SetInput,None,itkImageToImageFilterIUS2VIUS2)
itkImageToImageFilterIUS2VIUS2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUS2_GetInput,None,itkImageToImageFilterIUS2VIUS2)
itkImageToImageFilterIUS2VIUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUS2_PushBackInput,None,itkImageToImageFilterIUS2VIUS2)
itkImageToImageFilterIUS2VIUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUS2_PopBackInput,None,itkImageToImageFilterIUS2VIUS2)
itkImageToImageFilterIUS2VIUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUS2_PushFrontInput,None,itkImageToImageFilterIUS2VIUS2)
itkImageToImageFilterIUS2VIUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUS2_PopFrontInput,None,itkImageToImageFilterIUS2VIUS2)
itkImageToImageFilterIUS2VIUS2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUS2_GetPointer,None,itkImageToImageFilterIUS2VIUS2)
itkImageToImageFilterIUS2VIUS2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUS2_swigregister
itkImageToImageFilterIUS2VIUS2_swigregister(itkImageToImageFilterIUS2VIUS2)

def itkImageToImageFilterIUS2VIUS2_cast(*args):
  """itkImageToImageFilterIUS2VIUS2_cast(itkLightObject obj) -> itkImageToImageFilterIUS2VIUS2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUS2_cast(*args)

class itkImageToImageFilterIUS3ICVF33(itkImageSourcePython.itkImageSourceICVF33):
    """Proxy of C++ itkImageToImageFilterIUS3ICVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3ICVF33_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3ICVF33_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS3 image)
        SetInput(self, unsigned int arg0, itkImageUS3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3ICVF33_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS3
        GetInput(self, unsigned int idx) -> itkImageUS3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3ICVF33_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3ICVF33_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3ICVF33_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3ICVF33_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3ICVF33_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUS3ICVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS3ICVF33"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3ICVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS3ICVF33"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3ICVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS3ICVF33
        
        Create a new object of the class itkImageToImageFilterIUS3ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS3ICVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS3ICVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS3ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS3ICVF33.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3ICVF33_SetInput,None,itkImageToImageFilterIUS3ICVF33)
itkImageToImageFilterIUS3ICVF33.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3ICVF33_GetInput,None,itkImageToImageFilterIUS3ICVF33)
itkImageToImageFilterIUS3ICVF33.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3ICVF33_PushBackInput,None,itkImageToImageFilterIUS3ICVF33)
itkImageToImageFilterIUS3ICVF33.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3ICVF33_PopBackInput,None,itkImageToImageFilterIUS3ICVF33)
itkImageToImageFilterIUS3ICVF33.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3ICVF33_PushFrontInput,None,itkImageToImageFilterIUS3ICVF33)
itkImageToImageFilterIUS3ICVF33.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3ICVF33_PopFrontInput,None,itkImageToImageFilterIUS3ICVF33)
itkImageToImageFilterIUS3ICVF33.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3ICVF33_GetPointer,None,itkImageToImageFilterIUS3ICVF33)
itkImageToImageFilterIUS3ICVF33_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3ICVF33_swigregister
itkImageToImageFilterIUS3ICVF33_swigregister(itkImageToImageFilterIUS3ICVF33)

def itkImageToImageFilterIUS3ICVF33_cast(*args):
  """itkImageToImageFilterIUS3ICVF33_cast(itkLightObject obj) -> itkImageToImageFilterIUS3ICVF33"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3ICVF33_cast(*args)

class itkImageToImageFilterIUS3IRGBAUS3(itkImageSourcePython.itkImageSourceIRGBAUS3):
    """Proxy of C++ itkImageToImageFilterIUS3IRGBAUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBAUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBAUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS3 image)
        SetInput(self, unsigned int arg0, itkImageUS3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBAUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS3
        GetInput(self, unsigned int idx) -> itkImageUS3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBAUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBAUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBAUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBAUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBAUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUS3IRGBAUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS3IRGBAUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBAUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS3IRGBAUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBAUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS3IRGBAUS3
        
        Create a new object of the class itkImageToImageFilterIUS3IRGBAUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS3IRGBAUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS3IRGBAUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS3IRGBAUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS3IRGBAUS3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBAUS3_SetInput,None,itkImageToImageFilterIUS3IRGBAUS3)
itkImageToImageFilterIUS3IRGBAUS3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBAUS3_GetInput,None,itkImageToImageFilterIUS3IRGBAUS3)
itkImageToImageFilterIUS3IRGBAUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBAUS3_PushBackInput,None,itkImageToImageFilterIUS3IRGBAUS3)
itkImageToImageFilterIUS3IRGBAUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBAUS3_PopBackInput,None,itkImageToImageFilterIUS3IRGBAUS3)
itkImageToImageFilterIUS3IRGBAUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBAUS3_PushFrontInput,None,itkImageToImageFilterIUS3IRGBAUS3)
itkImageToImageFilterIUS3IRGBAUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBAUS3_PopFrontInput,None,itkImageToImageFilterIUS3IRGBAUS3)
itkImageToImageFilterIUS3IRGBAUS3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBAUS3_GetPointer,None,itkImageToImageFilterIUS3IRGBAUS3)
itkImageToImageFilterIUS3IRGBAUS3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBAUS3_swigregister
itkImageToImageFilterIUS3IRGBAUS3_swigregister(itkImageToImageFilterIUS3IRGBAUS3)

def itkImageToImageFilterIUS3IRGBAUS3_cast(*args):
  """itkImageToImageFilterIUS3IRGBAUS3_cast(itkLightObject obj) -> itkImageToImageFilterIUS3IRGBAUS3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBAUS3_cast(*args)

class itkImageToImageFilterIUS3IRGBUS3(itkImageSourcePython.itkImageSourceIRGBUS3):
    """Proxy of C++ itkImageToImageFilterIUS3IRGBUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS3 image)
        SetInput(self, unsigned int arg0, itkImageUS3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS3
        GetInput(self, unsigned int idx) -> itkImageUS3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUS3IRGBUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS3IRGBUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS3IRGBUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS3IRGBUS3
        
        Create a new object of the class itkImageToImageFilterIUS3IRGBUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS3IRGBUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS3IRGBUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS3IRGBUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS3IRGBUS3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBUS3_SetInput,None,itkImageToImageFilterIUS3IRGBUS3)
itkImageToImageFilterIUS3IRGBUS3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBUS3_GetInput,None,itkImageToImageFilterIUS3IRGBUS3)
itkImageToImageFilterIUS3IRGBUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBUS3_PushBackInput,None,itkImageToImageFilterIUS3IRGBUS3)
itkImageToImageFilterIUS3IRGBUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBUS3_PopBackInput,None,itkImageToImageFilterIUS3IRGBUS3)
itkImageToImageFilterIUS3IRGBUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBUS3_PushFrontInput,None,itkImageToImageFilterIUS3IRGBUS3)
itkImageToImageFilterIUS3IRGBUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBUS3_PopFrontInput,None,itkImageToImageFilterIUS3IRGBUS3)
itkImageToImageFilterIUS3IRGBUS3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBUS3_GetPointer,None,itkImageToImageFilterIUS3IRGBUS3)
itkImageToImageFilterIUS3IRGBUS3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBUS3_swigregister
itkImageToImageFilterIUS3IRGBUS3_swigregister(itkImageToImageFilterIUS3IRGBUS3)

def itkImageToImageFilterIUS3IRGBUS3_cast(*args):
  """itkImageToImageFilterIUS3IRGBUS3_cast(itkLightObject obj) -> itkImageToImageFilterIUS3IRGBUS3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBUS3_cast(*args)

class itkImageToImageFilterIUS3ISSRTD33(itkImageSourcePython.itkImageSourceISSRTD33):
    """Proxy of C++ itkImageToImageFilterIUS3ISSRTD33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3ISSRTD33_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3ISSRTD33_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS3 image)
        SetInput(self, unsigned int arg0, itkImageUS3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3ISSRTD33_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS3
        GetInput(self, unsigned int idx) -> itkImageUS3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3ISSRTD33_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3ISSRTD33_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3ISSRTD33_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3ISSRTD33_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3ISSRTD33_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUS3ISSRTD33
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS3ISSRTD33"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3ISSRTD33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS3ISSRTD33"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3ISSRTD33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS3ISSRTD33
        
        Create a new object of the class itkImageToImageFilterIUS3ISSRTD33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS3ISSRTD33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS3ISSRTD33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS3ISSRTD33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS3ISSRTD33.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3ISSRTD33_SetInput,None,itkImageToImageFilterIUS3ISSRTD33)
itkImageToImageFilterIUS3ISSRTD33.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3ISSRTD33_GetInput,None,itkImageToImageFilterIUS3ISSRTD33)
itkImageToImageFilterIUS3ISSRTD33.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3ISSRTD33_PushBackInput,None,itkImageToImageFilterIUS3ISSRTD33)
itkImageToImageFilterIUS3ISSRTD33.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3ISSRTD33_PopBackInput,None,itkImageToImageFilterIUS3ISSRTD33)
itkImageToImageFilterIUS3ISSRTD33.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3ISSRTD33_PushFrontInput,None,itkImageToImageFilterIUS3ISSRTD33)
itkImageToImageFilterIUS3ISSRTD33.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3ISSRTD33_PopFrontInput,None,itkImageToImageFilterIUS3ISSRTD33)
itkImageToImageFilterIUS3ISSRTD33.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3ISSRTD33_GetPointer,None,itkImageToImageFilterIUS3ISSRTD33)
itkImageToImageFilterIUS3ISSRTD33_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3ISSRTD33_swigregister
itkImageToImageFilterIUS3ISSRTD33_swigregister(itkImageToImageFilterIUS3ISSRTD33)

def itkImageToImageFilterIUS3ISSRTD33_cast(*args):
  """itkImageToImageFilterIUS3ISSRTD33_cast(itkLightObject obj) -> itkImageToImageFilterIUS3ISSRTD33"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3ISSRTD33_cast(*args)

class itkImageToImageFilterIUS3IUS2(itkImageSourcePython.itkImageSourceIUS2):
    """Proxy of C++ itkImageToImageFilterIUS3IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS3 image)
        SetInput(self, unsigned int arg0, itkImageUS3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS3
        GetInput(self, unsigned int idx) -> itkImageUS3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUS3IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS3IUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS3IUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS3IUS2
        
        Create a new object of the class itkImageToImageFilterIUS3IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS3IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS3IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS3IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS3IUS2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2_SetInput,None,itkImageToImageFilterIUS3IUS2)
itkImageToImageFilterIUS3IUS2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2_GetInput,None,itkImageToImageFilterIUS3IUS2)
itkImageToImageFilterIUS3IUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2_PushBackInput,None,itkImageToImageFilterIUS3IUS2)
itkImageToImageFilterIUS3IUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2_PopBackInput,None,itkImageToImageFilterIUS3IUS2)
itkImageToImageFilterIUS3IUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2_PushFrontInput,None,itkImageToImageFilterIUS3IUS2)
itkImageToImageFilterIUS3IUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2_PopFrontInput,None,itkImageToImageFilterIUS3IUS2)
itkImageToImageFilterIUS3IUS2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2_GetPointer,None,itkImageToImageFilterIUS3IUS2)
itkImageToImageFilterIUS3IUS2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2_swigregister
itkImageToImageFilterIUS3IUS2_swigregister(itkImageToImageFilterIUS3IUS2)

def itkImageToImageFilterIUS3IUS2_cast(*args):
  """itkImageToImageFilterIUS3IUS2_cast(itkLightObject obj) -> itkImageToImageFilterIUS3IUS2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2_cast(*args)

class itkImageToImageFilterIUS3IVF33(itkImageSourcePython.itkImageSourceIVF33):
    """Proxy of C++ itkImageToImageFilterIUS3IVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IVF33_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IVF33_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS3 image)
        SetInput(self, unsigned int arg0, itkImageUS3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IVF33_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS3
        GetInput(self, unsigned int idx) -> itkImageUS3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IVF33_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IVF33_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IVF33_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IVF33_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IVF33_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUS3IVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS3IVF33"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS3IVF33"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS3IVF33
        
        Create a new object of the class itkImageToImageFilterIUS3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS3IVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS3IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS3IVF33.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3IVF33_SetInput,None,itkImageToImageFilterIUS3IVF33)
itkImageToImageFilterIUS3IVF33.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3IVF33_GetInput,None,itkImageToImageFilterIUS3IVF33)
itkImageToImageFilterIUS3IVF33.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3IVF33_PushBackInput,None,itkImageToImageFilterIUS3IVF33)
itkImageToImageFilterIUS3IVF33.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3IVF33_PopBackInput,None,itkImageToImageFilterIUS3IVF33)
itkImageToImageFilterIUS3IVF33.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3IVF33_PushFrontInput,None,itkImageToImageFilterIUS3IVF33)
itkImageToImageFilterIUS3IVF33.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3IVF33_PopFrontInput,None,itkImageToImageFilterIUS3IVF33)
itkImageToImageFilterIUS3IVF33.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3IVF33_GetPointer,None,itkImageToImageFilterIUS3IVF33)
itkImageToImageFilterIUS3IVF33_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IVF33_swigregister
itkImageToImageFilterIUS3IVF33_swigregister(itkImageToImageFilterIUS3IVF33)

def itkImageToImageFilterIUS3IVF33_cast(*args):
  """itkImageToImageFilterIUS3IVF33_cast(itkLightObject obj) -> itkImageToImageFilterIUS3IVF33"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3IVF33_cast(*args)

class itkImageToImageFilterIUS3VID3(itkImageSourcePython.itkImageSourceVID3):
    """Proxy of C++ itkImageToImageFilterIUS3VID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VID3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VID3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS3 image)
        SetInput(self, unsigned int arg0, itkImageUS3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VID3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS3
        GetInput(self, unsigned int idx) -> itkImageUS3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VID3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VID3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VID3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VID3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VID3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUS3VID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS3VID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS3VID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS3VID3
        
        Create a new object of the class itkImageToImageFilterIUS3VID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS3VID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS3VID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS3VID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS3VID3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VID3_SetInput,None,itkImageToImageFilterIUS3VID3)
itkImageToImageFilterIUS3VID3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VID3_GetInput,None,itkImageToImageFilterIUS3VID3)
itkImageToImageFilterIUS3VID3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VID3_PushBackInput,None,itkImageToImageFilterIUS3VID3)
itkImageToImageFilterIUS3VID3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VID3_PopBackInput,None,itkImageToImageFilterIUS3VID3)
itkImageToImageFilterIUS3VID3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VID3_PushFrontInput,None,itkImageToImageFilterIUS3VID3)
itkImageToImageFilterIUS3VID3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VID3_PopFrontInput,None,itkImageToImageFilterIUS3VID3)
itkImageToImageFilterIUS3VID3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VID3_GetPointer,None,itkImageToImageFilterIUS3VID3)
itkImageToImageFilterIUS3VID3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VID3_swigregister
itkImageToImageFilterIUS3VID3_swigregister(itkImageToImageFilterIUS3VID3)

def itkImageToImageFilterIUS3VID3_cast(*args):
  """itkImageToImageFilterIUS3VID3_cast(itkLightObject obj) -> itkImageToImageFilterIUS3VID3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VID3_cast(*args)

class itkImageToImageFilterIUS3VIF3(itkImageSourcePython.itkImageSourceVIF3):
    """Proxy of C++ itkImageToImageFilterIUS3VIF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIF3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIF3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS3 image)
        SetInput(self, unsigned int arg0, itkImageUS3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIF3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS3
        GetInput(self, unsigned int idx) -> itkImageUS3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIF3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIF3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIF3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIF3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIF3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUS3VIF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS3VIF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS3VIF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS3VIF3
        
        Create a new object of the class itkImageToImageFilterIUS3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS3VIF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS3VIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS3VIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS3VIF3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIF3_SetInput,None,itkImageToImageFilterIUS3VIF3)
itkImageToImageFilterIUS3VIF3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIF3_GetInput,None,itkImageToImageFilterIUS3VIF3)
itkImageToImageFilterIUS3VIF3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIF3_PushBackInput,None,itkImageToImageFilterIUS3VIF3)
itkImageToImageFilterIUS3VIF3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIF3_PopBackInput,None,itkImageToImageFilterIUS3VIF3)
itkImageToImageFilterIUS3VIF3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIF3_PushFrontInput,None,itkImageToImageFilterIUS3VIF3)
itkImageToImageFilterIUS3VIF3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIF3_PopFrontInput,None,itkImageToImageFilterIUS3VIF3)
itkImageToImageFilterIUS3VIF3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIF3_GetPointer,None,itkImageToImageFilterIUS3VIF3)
itkImageToImageFilterIUS3VIF3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIF3_swigregister
itkImageToImageFilterIUS3VIF3_swigregister(itkImageToImageFilterIUS3VIF3)

def itkImageToImageFilterIUS3VIF3_cast(*args):
  """itkImageToImageFilterIUS3VIF3_cast(itkLightObject obj) -> itkImageToImageFilterIUS3VIF3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIF3_cast(*args)

class itkImageToImageFilterIUS3VIUC3(itkImageSourcePython.itkImageSourceVIUC3):
    """Proxy of C++ itkImageToImageFilterIUS3VIUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUC3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUC3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS3 image)
        SetInput(self, unsigned int arg0, itkImageUS3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUC3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS3
        GetInput(self, unsigned int idx) -> itkImageUS3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUC3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUC3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUC3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUC3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUC3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUS3VIUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS3VIUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS3VIUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS3VIUC3
        
        Create a new object of the class itkImageToImageFilterIUS3VIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS3VIUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS3VIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS3VIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS3VIUC3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUC3_SetInput,None,itkImageToImageFilterIUS3VIUC3)
itkImageToImageFilterIUS3VIUC3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUC3_GetInput,None,itkImageToImageFilterIUS3VIUC3)
itkImageToImageFilterIUS3VIUC3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUC3_PushBackInput,None,itkImageToImageFilterIUS3VIUC3)
itkImageToImageFilterIUS3VIUC3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUC3_PopBackInput,None,itkImageToImageFilterIUS3VIUC3)
itkImageToImageFilterIUS3VIUC3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUC3_PushFrontInput,None,itkImageToImageFilterIUS3VIUC3)
itkImageToImageFilterIUS3VIUC3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUC3_PopFrontInput,None,itkImageToImageFilterIUS3VIUC3)
itkImageToImageFilterIUS3VIUC3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUC3_GetPointer,None,itkImageToImageFilterIUS3VIUC3)
itkImageToImageFilterIUS3VIUC3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUC3_swigregister
itkImageToImageFilterIUS3VIUC3_swigregister(itkImageToImageFilterIUS3VIUC3)

def itkImageToImageFilterIUS3VIUC3_cast(*args):
  """itkImageToImageFilterIUS3VIUC3_cast(itkLightObject obj) -> itkImageToImageFilterIUS3VIUC3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUC3_cast(*args)

class itkImageToImageFilterIUS3VIUL3(itkImageSourcePython.itkImageSourceVIUL3):
    """Proxy of C++ itkImageToImageFilterIUS3VIUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUL3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUL3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS3 image)
        SetInput(self, unsigned int arg0, itkImageUS3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUL3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS3
        GetInput(self, unsigned int idx) -> itkImageUS3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUL3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUL3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUL3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUL3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUL3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUS3VIUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS3VIUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS3VIUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS3VIUL3
        
        Create a new object of the class itkImageToImageFilterIUS3VIUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS3VIUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS3VIUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS3VIUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS3VIUL3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUL3_SetInput,None,itkImageToImageFilterIUS3VIUL3)
itkImageToImageFilterIUS3VIUL3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUL3_GetInput,None,itkImageToImageFilterIUS3VIUL3)
itkImageToImageFilterIUS3VIUL3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUL3_PushBackInput,None,itkImageToImageFilterIUS3VIUL3)
itkImageToImageFilterIUS3VIUL3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUL3_PopBackInput,None,itkImageToImageFilterIUS3VIUL3)
itkImageToImageFilterIUS3VIUL3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUL3_PushFrontInput,None,itkImageToImageFilterIUS3VIUL3)
itkImageToImageFilterIUS3VIUL3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUL3_PopFrontInput,None,itkImageToImageFilterIUS3VIUL3)
itkImageToImageFilterIUS3VIUL3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUL3_GetPointer,None,itkImageToImageFilterIUS3VIUL3)
itkImageToImageFilterIUS3VIUL3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUL3_swigregister
itkImageToImageFilterIUS3VIUL3_swigregister(itkImageToImageFilterIUS3VIUL3)

def itkImageToImageFilterIUS3VIUL3_cast(*args):
  """itkImageToImageFilterIUS3VIUL3_cast(itkLightObject obj) -> itkImageToImageFilterIUS3VIUL3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUL3_cast(*args)

class itkImageToImageFilterIUS3VIUS3(itkImageSourcePython.itkImageSourceVIUS3):
    """Proxy of C++ itkImageToImageFilterIUS3VIUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS3 image)
        SetInput(self, unsigned int arg0, itkImageUS3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS3
        GetInput(self, unsigned int idx) -> itkImageUS3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIUS3VIUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS3VIUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS3VIUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS3VIUS3
        
        Create a new object of the class itkImageToImageFilterIUS3VIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS3VIUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS3VIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS3VIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS3VIUS3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUS3_SetInput,None,itkImageToImageFilterIUS3VIUS3)
itkImageToImageFilterIUS3VIUS3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUS3_GetInput,None,itkImageToImageFilterIUS3VIUS3)
itkImageToImageFilterIUS3VIUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUS3_PushBackInput,None,itkImageToImageFilterIUS3VIUS3)
itkImageToImageFilterIUS3VIUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUS3_PopBackInput,None,itkImageToImageFilterIUS3VIUS3)
itkImageToImageFilterIUS3VIUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUS3_PushFrontInput,None,itkImageToImageFilterIUS3VIUS3)
itkImageToImageFilterIUS3VIUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUS3_PopFrontInput,None,itkImageToImageFilterIUS3VIUS3)
itkImageToImageFilterIUS3VIUS3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUS3_GetPointer,None,itkImageToImageFilterIUS3VIUS3)
itkImageToImageFilterIUS3VIUS3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUS3_swigregister
itkImageToImageFilterIUS3VIUS3_swigregister(itkImageToImageFilterIUS3VIUS3)

def itkImageToImageFilterIUS3VIUS3_cast(*args):
  """itkImageToImageFilterIUS3VIUS3_cast(itkLightObject obj) -> itkImageToImageFilterIUS3VIUS3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUS3_cast(*args)

class itkImageToImageFilterIVF22ID2(itkImageSourcePython.itkImageSourceID2):
    """Proxy of C++ itkImageToImageFilterIVF22ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIVF22ID2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIVF22ID2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageVF22 image)
        SetInput(self, unsigned int arg0, itkImageVF22 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22ID2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageVF22
        GetInput(self, unsigned int idx) -> itkImageVF22
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22ID2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageVF22 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22ID2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22ID2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageVF22 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22ID2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22ID2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIVF22ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIVF22ID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIVF22ID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIVF22ID2
        
        Create a new object of the class itkImageToImageFilterIVF22ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIVF22ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIVF22ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIVF22ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIVF22ID2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22ID2_SetInput,None,itkImageToImageFilterIVF22ID2)
itkImageToImageFilterIVF22ID2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22ID2_GetInput,None,itkImageToImageFilterIVF22ID2)
itkImageToImageFilterIVF22ID2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22ID2_PushBackInput,None,itkImageToImageFilterIVF22ID2)
itkImageToImageFilterIVF22ID2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22ID2_PopBackInput,None,itkImageToImageFilterIVF22ID2)
itkImageToImageFilterIVF22ID2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22ID2_PushFrontInput,None,itkImageToImageFilterIVF22ID2)
itkImageToImageFilterIVF22ID2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22ID2_PopFrontInput,None,itkImageToImageFilterIVF22ID2)
itkImageToImageFilterIVF22ID2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22ID2_GetPointer,None,itkImageToImageFilterIVF22ID2)
itkImageToImageFilterIVF22ID2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIVF22ID2_swigregister
itkImageToImageFilterIVF22ID2_swigregister(itkImageToImageFilterIVF22ID2)

def itkImageToImageFilterIVF22ID2_cast(*args):
  """itkImageToImageFilterIVF22ID2_cast(itkLightObject obj) -> itkImageToImageFilterIVF22ID2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22ID2_cast(*args)

class itkImageToImageFilterIVF22IF2(itkImageSourcePython.itkImageSourceIF2):
    """Proxy of C++ itkImageToImageFilterIVF22IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IF2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IF2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageVF22 image)
        SetInput(self, unsigned int arg0, itkImageVF22 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IF2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageVF22
        GetInput(self, unsigned int idx) -> itkImageVF22
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IF2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageVF22 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IF2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IF2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageVF22 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IF2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IF2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIVF22IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIVF22IF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIVF22IF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIVF22IF2
        
        Create a new object of the class itkImageToImageFilterIVF22IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIVF22IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIVF22IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIVF22IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIVF22IF2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22IF2_SetInput,None,itkImageToImageFilterIVF22IF2)
itkImageToImageFilterIVF22IF2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22IF2_GetInput,None,itkImageToImageFilterIVF22IF2)
itkImageToImageFilterIVF22IF2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22IF2_PushBackInput,None,itkImageToImageFilterIVF22IF2)
itkImageToImageFilterIVF22IF2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22IF2_PopBackInput,None,itkImageToImageFilterIVF22IF2)
itkImageToImageFilterIVF22IF2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22IF2_PushFrontInput,None,itkImageToImageFilterIVF22IF2)
itkImageToImageFilterIVF22IF2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22IF2_PopFrontInput,None,itkImageToImageFilterIVF22IF2)
itkImageToImageFilterIVF22IF2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22IF2_GetPointer,None,itkImageToImageFilterIVF22IF2)
itkImageToImageFilterIVF22IF2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IF2_swigregister
itkImageToImageFilterIVF22IF2_swigregister(itkImageToImageFilterIVF22IF2)

def itkImageToImageFilterIVF22IF2_cast(*args):
  """itkImageToImageFilterIVF22IF2_cast(itkLightObject obj) -> itkImageToImageFilterIVF22IF2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IF2_cast(*args)

class itkImageToImageFilterIVF22IUC2(itkImageSourcePython.itkImageSourceIUC2):
    """Proxy of C++ itkImageToImageFilterIVF22IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUC2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUC2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageVF22 image)
        SetInput(self, unsigned int arg0, itkImageVF22 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUC2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageVF22
        GetInput(self, unsigned int idx) -> itkImageVF22
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUC2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageVF22 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUC2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUC2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageVF22 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUC2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUC2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIVF22IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIVF22IUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIVF22IUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIVF22IUC2
        
        Create a new object of the class itkImageToImageFilterIVF22IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIVF22IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIVF22IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIVF22IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIVF22IUC2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUC2_SetInput,None,itkImageToImageFilterIVF22IUC2)
itkImageToImageFilterIVF22IUC2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUC2_GetInput,None,itkImageToImageFilterIVF22IUC2)
itkImageToImageFilterIVF22IUC2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUC2_PushBackInput,None,itkImageToImageFilterIVF22IUC2)
itkImageToImageFilterIVF22IUC2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUC2_PopBackInput,None,itkImageToImageFilterIVF22IUC2)
itkImageToImageFilterIVF22IUC2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUC2_PushFrontInput,None,itkImageToImageFilterIVF22IUC2)
itkImageToImageFilterIVF22IUC2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUC2_PopFrontInput,None,itkImageToImageFilterIVF22IUC2)
itkImageToImageFilterIVF22IUC2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUC2_GetPointer,None,itkImageToImageFilterIVF22IUC2)
itkImageToImageFilterIVF22IUC2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUC2_swigregister
itkImageToImageFilterIVF22IUC2_swigregister(itkImageToImageFilterIVF22IUC2)

def itkImageToImageFilterIVF22IUC2_cast(*args):
  """itkImageToImageFilterIVF22IUC2_cast(itkLightObject obj) -> itkImageToImageFilterIVF22IUC2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUC2_cast(*args)

class itkImageToImageFilterIVF22IUL2(itkImageSourcePython.itkImageSourceIUL2):
    """Proxy of C++ itkImageToImageFilterIVF22IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUL2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUL2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageVF22 image)
        SetInput(self, unsigned int arg0, itkImageVF22 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUL2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageVF22
        GetInput(self, unsigned int idx) -> itkImageVF22
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUL2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageVF22 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUL2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUL2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageVF22 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUL2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUL2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIVF22IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIVF22IUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIVF22IUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIVF22IUL2
        
        Create a new object of the class itkImageToImageFilterIVF22IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIVF22IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIVF22IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIVF22IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIVF22IUL2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUL2_SetInput,None,itkImageToImageFilterIVF22IUL2)
itkImageToImageFilterIVF22IUL2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUL2_GetInput,None,itkImageToImageFilterIVF22IUL2)
itkImageToImageFilterIVF22IUL2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUL2_PushBackInput,None,itkImageToImageFilterIVF22IUL2)
itkImageToImageFilterIVF22IUL2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUL2_PopBackInput,None,itkImageToImageFilterIVF22IUL2)
itkImageToImageFilterIVF22IUL2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUL2_PushFrontInput,None,itkImageToImageFilterIVF22IUL2)
itkImageToImageFilterIVF22IUL2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUL2_PopFrontInput,None,itkImageToImageFilterIVF22IUL2)
itkImageToImageFilterIVF22IUL2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUL2_GetPointer,None,itkImageToImageFilterIVF22IUL2)
itkImageToImageFilterIVF22IUL2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUL2_swigregister
itkImageToImageFilterIVF22IUL2_swigregister(itkImageToImageFilterIVF22IUL2)

def itkImageToImageFilterIVF22IUL2_cast(*args):
  """itkImageToImageFilterIVF22IUL2_cast(itkLightObject obj) -> itkImageToImageFilterIVF22IUL2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUL2_cast(*args)

class itkImageToImageFilterIVF22IUS2(itkImageSourcePython.itkImageSourceIUS2):
    """Proxy of C++ itkImageToImageFilterIVF22IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageVF22 image)
        SetInput(self, unsigned int arg0, itkImageVF22 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageVF22
        GetInput(self, unsigned int idx) -> itkImageVF22
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageVF22 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageVF22 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIVF22IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIVF22IUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIVF22IUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIVF22IUS2
        
        Create a new object of the class itkImageToImageFilterIVF22IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIVF22IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIVF22IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIVF22IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIVF22IUS2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUS2_SetInput,None,itkImageToImageFilterIVF22IUS2)
itkImageToImageFilterIVF22IUS2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUS2_GetInput,None,itkImageToImageFilterIVF22IUS2)
itkImageToImageFilterIVF22IUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUS2_PushBackInput,None,itkImageToImageFilterIVF22IUS2)
itkImageToImageFilterIVF22IUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUS2_PopBackInput,None,itkImageToImageFilterIVF22IUS2)
itkImageToImageFilterIVF22IUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUS2_PushFrontInput,None,itkImageToImageFilterIVF22IUS2)
itkImageToImageFilterIVF22IUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUS2_PopFrontInput,None,itkImageToImageFilterIVF22IUS2)
itkImageToImageFilterIVF22IUS2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUS2_GetPointer,None,itkImageToImageFilterIVF22IUS2)
itkImageToImageFilterIVF22IUS2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUS2_swigregister
itkImageToImageFilterIVF22IUS2_swigregister(itkImageToImageFilterIVF22IUS2)

def itkImageToImageFilterIVF22IUS2_cast(*args):
  """itkImageToImageFilterIVF22IUS2_cast(itkLightObject obj) -> itkImageToImageFilterIVF22IUS2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUS2_cast(*args)

class itkImageToImageFilterIVF33ID3(itkImageSourcePython.itkImageSourceID3):
    """Proxy of C++ itkImageToImageFilterIVF33ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIVF33ID3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIVF33ID3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageVF33 image)
        SetInput(self, unsigned int arg0, itkImageVF33 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33ID3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageVF33
        GetInput(self, unsigned int idx) -> itkImageVF33
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33ID3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageVF33 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33ID3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33ID3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageVF33 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33ID3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33ID3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIVF33ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIVF33ID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIVF33ID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIVF33ID3
        
        Create a new object of the class itkImageToImageFilterIVF33ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIVF33ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIVF33ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIVF33ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIVF33ID3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33ID3_SetInput,None,itkImageToImageFilterIVF33ID3)
itkImageToImageFilterIVF33ID3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33ID3_GetInput,None,itkImageToImageFilterIVF33ID3)
itkImageToImageFilterIVF33ID3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33ID3_PushBackInput,None,itkImageToImageFilterIVF33ID3)
itkImageToImageFilterIVF33ID3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33ID3_PopBackInput,None,itkImageToImageFilterIVF33ID3)
itkImageToImageFilterIVF33ID3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33ID3_PushFrontInput,None,itkImageToImageFilterIVF33ID3)
itkImageToImageFilterIVF33ID3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33ID3_PopFrontInput,None,itkImageToImageFilterIVF33ID3)
itkImageToImageFilterIVF33ID3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33ID3_GetPointer,None,itkImageToImageFilterIVF33ID3)
itkImageToImageFilterIVF33ID3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIVF33ID3_swigregister
itkImageToImageFilterIVF33ID3_swigregister(itkImageToImageFilterIVF33ID3)

def itkImageToImageFilterIVF33ID3_cast(*args):
  """itkImageToImageFilterIVF33ID3_cast(itkLightObject obj) -> itkImageToImageFilterIVF33ID3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33ID3_cast(*args)

class itkImageToImageFilterIVF33IF3(itkImageSourcePython.itkImageSourceIF3):
    """Proxy of C++ itkImageToImageFilterIVF33IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IF3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IF3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageVF33 image)
        SetInput(self, unsigned int arg0, itkImageVF33 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IF3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageVF33
        GetInput(self, unsigned int idx) -> itkImageVF33
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IF3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageVF33 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IF3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IF3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageVF33 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IF3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IF3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIVF33IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIVF33IF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIVF33IF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIVF33IF3
        
        Create a new object of the class itkImageToImageFilterIVF33IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIVF33IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIVF33IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIVF33IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIVF33IF3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33IF3_SetInput,None,itkImageToImageFilterIVF33IF3)
itkImageToImageFilterIVF33IF3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33IF3_GetInput,None,itkImageToImageFilterIVF33IF3)
itkImageToImageFilterIVF33IF3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33IF3_PushBackInput,None,itkImageToImageFilterIVF33IF3)
itkImageToImageFilterIVF33IF3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33IF3_PopBackInput,None,itkImageToImageFilterIVF33IF3)
itkImageToImageFilterIVF33IF3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33IF3_PushFrontInput,None,itkImageToImageFilterIVF33IF3)
itkImageToImageFilterIVF33IF3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33IF3_PopFrontInput,None,itkImageToImageFilterIVF33IF3)
itkImageToImageFilterIVF33IF3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33IF3_GetPointer,None,itkImageToImageFilterIVF33IF3)
itkImageToImageFilterIVF33IF3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IF3_swigregister
itkImageToImageFilterIVF33IF3_swigregister(itkImageToImageFilterIVF33IF3)

def itkImageToImageFilterIVF33IF3_cast(*args):
  """itkImageToImageFilterIVF33IF3_cast(itkLightObject obj) -> itkImageToImageFilterIVF33IF3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IF3_cast(*args)

class itkImageToImageFilterIVF33IUC3(itkImageSourcePython.itkImageSourceIUC3):
    """Proxy of C++ itkImageToImageFilterIVF33IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUC3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUC3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageVF33 image)
        SetInput(self, unsigned int arg0, itkImageVF33 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUC3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageVF33
        GetInput(self, unsigned int idx) -> itkImageVF33
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUC3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageVF33 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUC3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUC3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageVF33 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUC3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUC3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIVF33IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIVF33IUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIVF33IUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIVF33IUC3
        
        Create a new object of the class itkImageToImageFilterIVF33IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIVF33IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIVF33IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIVF33IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIVF33IUC3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUC3_SetInput,None,itkImageToImageFilterIVF33IUC3)
itkImageToImageFilterIVF33IUC3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUC3_GetInput,None,itkImageToImageFilterIVF33IUC3)
itkImageToImageFilterIVF33IUC3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUC3_PushBackInput,None,itkImageToImageFilterIVF33IUC3)
itkImageToImageFilterIVF33IUC3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUC3_PopBackInput,None,itkImageToImageFilterIVF33IUC3)
itkImageToImageFilterIVF33IUC3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUC3_PushFrontInput,None,itkImageToImageFilterIVF33IUC3)
itkImageToImageFilterIVF33IUC3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUC3_PopFrontInput,None,itkImageToImageFilterIVF33IUC3)
itkImageToImageFilterIVF33IUC3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUC3_GetPointer,None,itkImageToImageFilterIVF33IUC3)
itkImageToImageFilterIVF33IUC3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUC3_swigregister
itkImageToImageFilterIVF33IUC3_swigregister(itkImageToImageFilterIVF33IUC3)

def itkImageToImageFilterIVF33IUC3_cast(*args):
  """itkImageToImageFilterIVF33IUC3_cast(itkLightObject obj) -> itkImageToImageFilterIVF33IUC3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUC3_cast(*args)

class itkImageToImageFilterIVF33IUL3(itkImageSourcePython.itkImageSourceIUL3):
    """Proxy of C++ itkImageToImageFilterIVF33IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUL3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUL3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageVF33 image)
        SetInput(self, unsigned int arg0, itkImageVF33 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUL3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageVF33
        GetInput(self, unsigned int idx) -> itkImageVF33
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUL3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageVF33 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUL3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUL3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageVF33 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUL3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUL3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIVF33IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIVF33IUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIVF33IUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIVF33IUL3
        
        Create a new object of the class itkImageToImageFilterIVF33IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIVF33IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIVF33IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIVF33IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIVF33IUL3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUL3_SetInput,None,itkImageToImageFilterIVF33IUL3)
itkImageToImageFilterIVF33IUL3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUL3_GetInput,None,itkImageToImageFilterIVF33IUL3)
itkImageToImageFilterIVF33IUL3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUL3_PushBackInput,None,itkImageToImageFilterIVF33IUL3)
itkImageToImageFilterIVF33IUL3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUL3_PopBackInput,None,itkImageToImageFilterIVF33IUL3)
itkImageToImageFilterIVF33IUL3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUL3_PushFrontInput,None,itkImageToImageFilterIVF33IUL3)
itkImageToImageFilterIVF33IUL3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUL3_PopFrontInput,None,itkImageToImageFilterIVF33IUL3)
itkImageToImageFilterIVF33IUL3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUL3_GetPointer,None,itkImageToImageFilterIVF33IUL3)
itkImageToImageFilterIVF33IUL3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUL3_swigregister
itkImageToImageFilterIVF33IUL3_swigregister(itkImageToImageFilterIVF33IUL3)

def itkImageToImageFilterIVF33IUL3_cast(*args):
  """itkImageToImageFilterIVF33IUL3_cast(itkLightObject obj) -> itkImageToImageFilterIVF33IUL3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUL3_cast(*args)

class itkImageToImageFilterIVF33IUS3(itkImageSourcePython.itkImageSourceIUS3):
    """Proxy of C++ itkImageToImageFilterIVF33IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageVF33 image)
        SetInput(self, unsigned int arg0, itkImageVF33 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageVF33
        GetInput(self, unsigned int idx) -> itkImageVF33
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageVF33 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageVF33 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterIVF33IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIVF33IUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIVF33IUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIVF33IUS3
        
        Create a new object of the class itkImageToImageFilterIVF33IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIVF33IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIVF33IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIVF33IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIVF33IUS3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUS3_SetInput,None,itkImageToImageFilterIVF33IUS3)
itkImageToImageFilterIVF33IUS3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUS3_GetInput,None,itkImageToImageFilterIVF33IUS3)
itkImageToImageFilterIVF33IUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUS3_PushBackInput,None,itkImageToImageFilterIVF33IUS3)
itkImageToImageFilterIVF33IUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUS3_PopBackInput,None,itkImageToImageFilterIVF33IUS3)
itkImageToImageFilterIVF33IUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUS3_PushFrontInput,None,itkImageToImageFilterIVF33IUS3)
itkImageToImageFilterIVF33IUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUS3_PopFrontInput,None,itkImageToImageFilterIVF33IUS3)
itkImageToImageFilterIVF33IUS3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUS3_GetPointer,None,itkImageToImageFilterIVF33IUS3)
itkImageToImageFilterIVF33IUS3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUS3_swigregister
itkImageToImageFilterIVF33IUS3_swigregister(itkImageToImageFilterIVF33IUS3)

def itkImageToImageFilterIVF33IUS3_cast(*args):
  """itkImageToImageFilterIVF33IUS3_cast(itkLightObject obj) -> itkImageToImageFilterIVF33IUS3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUS3_cast(*args)

class itkImageToImageFilterVID2ID2(itkImageSourcePython.itkImageSourceID2):
    """Proxy of C++ itkImageToImageFilterVID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVID2ID2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVID2ID2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageD2 image)
        SetInput(self, unsigned int arg0, itkVectorImageD2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2ID2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageD2
        GetInput(self, unsigned int idx) -> itkVectorImageD2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2ID2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2ID2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2ID2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2ID2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2ID2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVID2ID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVID2ID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVID2ID2
        
        Create a new object of the class itkImageToImageFilterVID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVID2ID2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2ID2_SetInput,None,itkImageToImageFilterVID2ID2)
itkImageToImageFilterVID2ID2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2ID2_GetInput,None,itkImageToImageFilterVID2ID2)
itkImageToImageFilterVID2ID2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2ID2_PushBackInput,None,itkImageToImageFilterVID2ID2)
itkImageToImageFilterVID2ID2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2ID2_PopBackInput,None,itkImageToImageFilterVID2ID2)
itkImageToImageFilterVID2ID2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2ID2_PushFrontInput,None,itkImageToImageFilterVID2ID2)
itkImageToImageFilterVID2ID2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2ID2_PopFrontInput,None,itkImageToImageFilterVID2ID2)
itkImageToImageFilterVID2ID2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2ID2_GetPointer,None,itkImageToImageFilterVID2ID2)
itkImageToImageFilterVID2ID2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVID2ID2_swigregister
itkImageToImageFilterVID2ID2_swigregister(itkImageToImageFilterVID2ID2)

def itkImageToImageFilterVID2ID2_cast(*args):
  """itkImageToImageFilterVID2ID2_cast(itkLightObject obj) -> itkImageToImageFilterVID2ID2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVID2ID2_cast(*args)

class itkImageToImageFilterVID2IF2(itkImageSourcePython.itkImageSourceIF2):
    """Proxy of C++ itkImageToImageFilterVID2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVID2IF2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVID2IF2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageD2 image)
        SetInput(self, unsigned int arg0, itkVectorImageD2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IF2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageD2
        GetInput(self, unsigned int idx) -> itkVectorImageD2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IF2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IF2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IF2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IF2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IF2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVID2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVID2IF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVID2IF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVID2IF2
        
        Create a new object of the class itkImageToImageFilterVID2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVID2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVID2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVID2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVID2IF2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2IF2_SetInput,None,itkImageToImageFilterVID2IF2)
itkImageToImageFilterVID2IF2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2IF2_GetInput,None,itkImageToImageFilterVID2IF2)
itkImageToImageFilterVID2IF2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2IF2_PushBackInput,None,itkImageToImageFilterVID2IF2)
itkImageToImageFilterVID2IF2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2IF2_PopBackInput,None,itkImageToImageFilterVID2IF2)
itkImageToImageFilterVID2IF2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2IF2_PushFrontInput,None,itkImageToImageFilterVID2IF2)
itkImageToImageFilterVID2IF2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2IF2_PopFrontInput,None,itkImageToImageFilterVID2IF2)
itkImageToImageFilterVID2IF2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2IF2_GetPointer,None,itkImageToImageFilterVID2IF2)
itkImageToImageFilterVID2IF2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVID2IF2_swigregister
itkImageToImageFilterVID2IF2_swigregister(itkImageToImageFilterVID2IF2)

def itkImageToImageFilterVID2IF2_cast(*args):
  """itkImageToImageFilterVID2IF2_cast(itkLightObject obj) -> itkImageToImageFilterVID2IF2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IF2_cast(*args)

class itkImageToImageFilterVID2IUC2(itkImageSourcePython.itkImageSourceIUC2):
    """Proxy of C++ itkImageToImageFilterVID2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUC2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUC2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageD2 image)
        SetInput(self, unsigned int arg0, itkVectorImageD2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUC2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageD2
        GetInput(self, unsigned int idx) -> itkVectorImageD2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUC2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUC2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUC2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUC2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUC2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVID2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVID2IUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVID2IUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVID2IUC2
        
        Create a new object of the class itkImageToImageFilterVID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVID2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVID2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVID2IUC2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2IUC2_SetInput,None,itkImageToImageFilterVID2IUC2)
itkImageToImageFilterVID2IUC2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2IUC2_GetInput,None,itkImageToImageFilterVID2IUC2)
itkImageToImageFilterVID2IUC2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2IUC2_PushBackInput,None,itkImageToImageFilterVID2IUC2)
itkImageToImageFilterVID2IUC2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2IUC2_PopBackInput,None,itkImageToImageFilterVID2IUC2)
itkImageToImageFilterVID2IUC2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2IUC2_PushFrontInput,None,itkImageToImageFilterVID2IUC2)
itkImageToImageFilterVID2IUC2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2IUC2_PopFrontInput,None,itkImageToImageFilterVID2IUC2)
itkImageToImageFilterVID2IUC2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2IUC2_GetPointer,None,itkImageToImageFilterVID2IUC2)
itkImageToImageFilterVID2IUC2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUC2_swigregister
itkImageToImageFilterVID2IUC2_swigregister(itkImageToImageFilterVID2IUC2)

def itkImageToImageFilterVID2IUC2_cast(*args):
  """itkImageToImageFilterVID2IUC2_cast(itkLightObject obj) -> itkImageToImageFilterVID2IUC2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUC2_cast(*args)

class itkImageToImageFilterVID2IUL2(itkImageSourcePython.itkImageSourceIUL2):
    """Proxy of C++ itkImageToImageFilterVID2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUL2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUL2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageD2 image)
        SetInput(self, unsigned int arg0, itkVectorImageD2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUL2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageD2
        GetInput(self, unsigned int idx) -> itkVectorImageD2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUL2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUL2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUL2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUL2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUL2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVID2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVID2IUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVID2IUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVID2IUL2
        
        Create a new object of the class itkImageToImageFilterVID2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVID2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVID2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVID2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVID2IUL2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2IUL2_SetInput,None,itkImageToImageFilterVID2IUL2)
itkImageToImageFilterVID2IUL2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2IUL2_GetInput,None,itkImageToImageFilterVID2IUL2)
itkImageToImageFilterVID2IUL2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2IUL2_PushBackInput,None,itkImageToImageFilterVID2IUL2)
itkImageToImageFilterVID2IUL2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2IUL2_PopBackInput,None,itkImageToImageFilterVID2IUL2)
itkImageToImageFilterVID2IUL2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2IUL2_PushFrontInput,None,itkImageToImageFilterVID2IUL2)
itkImageToImageFilterVID2IUL2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2IUL2_PopFrontInput,None,itkImageToImageFilterVID2IUL2)
itkImageToImageFilterVID2IUL2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2IUL2_GetPointer,None,itkImageToImageFilterVID2IUL2)
itkImageToImageFilterVID2IUL2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUL2_swigregister
itkImageToImageFilterVID2IUL2_swigregister(itkImageToImageFilterVID2IUL2)

def itkImageToImageFilterVID2IUL2_cast(*args):
  """itkImageToImageFilterVID2IUL2_cast(itkLightObject obj) -> itkImageToImageFilterVID2IUL2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUL2_cast(*args)

class itkImageToImageFilterVID2IUS2(itkImageSourcePython.itkImageSourceIUS2):
    """Proxy of C++ itkImageToImageFilterVID2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageD2 image)
        SetInput(self, unsigned int arg0, itkVectorImageD2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageD2
        GetInput(self, unsigned int idx) -> itkVectorImageD2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageD2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVID2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVID2IUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVID2IUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVID2IUS2
        
        Create a new object of the class itkImageToImageFilterVID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVID2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVID2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVID2IUS2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2IUS2_SetInput,None,itkImageToImageFilterVID2IUS2)
itkImageToImageFilterVID2IUS2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2IUS2_GetInput,None,itkImageToImageFilterVID2IUS2)
itkImageToImageFilterVID2IUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2IUS2_PushBackInput,None,itkImageToImageFilterVID2IUS2)
itkImageToImageFilterVID2IUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2IUS2_PopBackInput,None,itkImageToImageFilterVID2IUS2)
itkImageToImageFilterVID2IUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2IUS2_PushFrontInput,None,itkImageToImageFilterVID2IUS2)
itkImageToImageFilterVID2IUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2IUS2_PopFrontInput,None,itkImageToImageFilterVID2IUS2)
itkImageToImageFilterVID2IUS2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID2IUS2_GetPointer,None,itkImageToImageFilterVID2IUS2)
itkImageToImageFilterVID2IUS2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUS2_swigregister
itkImageToImageFilterVID2IUS2_swigregister(itkImageToImageFilterVID2IUS2)

def itkImageToImageFilterVID2IUS2_cast(*args):
  """itkImageToImageFilterVID2IUS2_cast(itkLightObject obj) -> itkImageToImageFilterVID2IUS2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVID2IUS2_cast(*args)

class itkImageToImageFilterVID3ID3(itkImageSourcePython.itkImageSourceID3):
    """Proxy of C++ itkImageToImageFilterVID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVID3ID3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVID3ID3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageD3 image)
        SetInput(self, unsigned int arg0, itkVectorImageD3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3ID3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageD3
        GetInput(self, unsigned int idx) -> itkVectorImageD3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3ID3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3ID3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3ID3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3ID3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3ID3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVID3ID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVID3ID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVID3ID3
        
        Create a new object of the class itkImageToImageFilterVID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVID3ID3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3ID3_SetInput,None,itkImageToImageFilterVID3ID3)
itkImageToImageFilterVID3ID3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3ID3_GetInput,None,itkImageToImageFilterVID3ID3)
itkImageToImageFilterVID3ID3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3ID3_PushBackInput,None,itkImageToImageFilterVID3ID3)
itkImageToImageFilterVID3ID3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3ID3_PopBackInput,None,itkImageToImageFilterVID3ID3)
itkImageToImageFilterVID3ID3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3ID3_PushFrontInput,None,itkImageToImageFilterVID3ID3)
itkImageToImageFilterVID3ID3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3ID3_PopFrontInput,None,itkImageToImageFilterVID3ID3)
itkImageToImageFilterVID3ID3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3ID3_GetPointer,None,itkImageToImageFilterVID3ID3)
itkImageToImageFilterVID3ID3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVID3ID3_swigregister
itkImageToImageFilterVID3ID3_swigregister(itkImageToImageFilterVID3ID3)

def itkImageToImageFilterVID3ID3_cast(*args):
  """itkImageToImageFilterVID3ID3_cast(itkLightObject obj) -> itkImageToImageFilterVID3ID3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVID3ID3_cast(*args)

class itkImageToImageFilterVID3IF3(itkImageSourcePython.itkImageSourceIF3):
    """Proxy of C++ itkImageToImageFilterVID3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVID3IF3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVID3IF3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageD3 image)
        SetInput(self, unsigned int arg0, itkVectorImageD3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IF3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageD3
        GetInput(self, unsigned int idx) -> itkVectorImageD3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IF3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IF3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IF3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IF3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IF3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVID3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVID3IF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVID3IF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVID3IF3
        
        Create a new object of the class itkImageToImageFilterVID3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVID3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVID3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVID3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVID3IF3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3IF3_SetInput,None,itkImageToImageFilterVID3IF3)
itkImageToImageFilterVID3IF3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3IF3_GetInput,None,itkImageToImageFilterVID3IF3)
itkImageToImageFilterVID3IF3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3IF3_PushBackInput,None,itkImageToImageFilterVID3IF3)
itkImageToImageFilterVID3IF3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3IF3_PopBackInput,None,itkImageToImageFilterVID3IF3)
itkImageToImageFilterVID3IF3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3IF3_PushFrontInput,None,itkImageToImageFilterVID3IF3)
itkImageToImageFilterVID3IF3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3IF3_PopFrontInput,None,itkImageToImageFilterVID3IF3)
itkImageToImageFilterVID3IF3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3IF3_GetPointer,None,itkImageToImageFilterVID3IF3)
itkImageToImageFilterVID3IF3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVID3IF3_swigregister
itkImageToImageFilterVID3IF3_swigregister(itkImageToImageFilterVID3IF3)

def itkImageToImageFilterVID3IF3_cast(*args):
  """itkImageToImageFilterVID3IF3_cast(itkLightObject obj) -> itkImageToImageFilterVID3IF3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IF3_cast(*args)

class itkImageToImageFilterVID3IUC3(itkImageSourcePython.itkImageSourceIUC3):
    """Proxy of C++ itkImageToImageFilterVID3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUC3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUC3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageD3 image)
        SetInput(self, unsigned int arg0, itkVectorImageD3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUC3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageD3
        GetInput(self, unsigned int idx) -> itkVectorImageD3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUC3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUC3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUC3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUC3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUC3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVID3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVID3IUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVID3IUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVID3IUC3
        
        Create a new object of the class itkImageToImageFilterVID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVID3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVID3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVID3IUC3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3IUC3_SetInput,None,itkImageToImageFilterVID3IUC3)
itkImageToImageFilterVID3IUC3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3IUC3_GetInput,None,itkImageToImageFilterVID3IUC3)
itkImageToImageFilterVID3IUC3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3IUC3_PushBackInput,None,itkImageToImageFilterVID3IUC3)
itkImageToImageFilterVID3IUC3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3IUC3_PopBackInput,None,itkImageToImageFilterVID3IUC3)
itkImageToImageFilterVID3IUC3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3IUC3_PushFrontInput,None,itkImageToImageFilterVID3IUC3)
itkImageToImageFilterVID3IUC3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3IUC3_PopFrontInput,None,itkImageToImageFilterVID3IUC3)
itkImageToImageFilterVID3IUC3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3IUC3_GetPointer,None,itkImageToImageFilterVID3IUC3)
itkImageToImageFilterVID3IUC3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUC3_swigregister
itkImageToImageFilterVID3IUC3_swigregister(itkImageToImageFilterVID3IUC3)

def itkImageToImageFilterVID3IUC3_cast(*args):
  """itkImageToImageFilterVID3IUC3_cast(itkLightObject obj) -> itkImageToImageFilterVID3IUC3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUC3_cast(*args)

class itkImageToImageFilterVID3IUL3(itkImageSourcePython.itkImageSourceIUL3):
    """Proxy of C++ itkImageToImageFilterVID3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUL3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUL3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageD3 image)
        SetInput(self, unsigned int arg0, itkVectorImageD3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUL3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageD3
        GetInput(self, unsigned int idx) -> itkVectorImageD3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUL3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUL3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUL3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUL3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUL3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVID3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVID3IUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVID3IUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVID3IUL3
        
        Create a new object of the class itkImageToImageFilterVID3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVID3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVID3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVID3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVID3IUL3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3IUL3_SetInput,None,itkImageToImageFilterVID3IUL3)
itkImageToImageFilterVID3IUL3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3IUL3_GetInput,None,itkImageToImageFilterVID3IUL3)
itkImageToImageFilterVID3IUL3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3IUL3_PushBackInput,None,itkImageToImageFilterVID3IUL3)
itkImageToImageFilterVID3IUL3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3IUL3_PopBackInput,None,itkImageToImageFilterVID3IUL3)
itkImageToImageFilterVID3IUL3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3IUL3_PushFrontInput,None,itkImageToImageFilterVID3IUL3)
itkImageToImageFilterVID3IUL3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3IUL3_PopFrontInput,None,itkImageToImageFilterVID3IUL3)
itkImageToImageFilterVID3IUL3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3IUL3_GetPointer,None,itkImageToImageFilterVID3IUL3)
itkImageToImageFilterVID3IUL3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUL3_swigregister
itkImageToImageFilterVID3IUL3_swigregister(itkImageToImageFilterVID3IUL3)

def itkImageToImageFilterVID3IUL3_cast(*args):
  """itkImageToImageFilterVID3IUL3_cast(itkLightObject obj) -> itkImageToImageFilterVID3IUL3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUL3_cast(*args)

class itkImageToImageFilterVID3IUS3(itkImageSourcePython.itkImageSourceIUS3):
    """Proxy of C++ itkImageToImageFilterVID3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageD3 image)
        SetInput(self, unsigned int arg0, itkVectorImageD3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageD3
        GetInput(self, unsigned int idx) -> itkVectorImageD3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageD3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVID3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVID3IUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVID3IUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVID3IUS3
        
        Create a new object of the class itkImageToImageFilterVID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVID3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVID3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVID3IUS3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3IUS3_SetInput,None,itkImageToImageFilterVID3IUS3)
itkImageToImageFilterVID3IUS3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3IUS3_GetInput,None,itkImageToImageFilterVID3IUS3)
itkImageToImageFilterVID3IUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3IUS3_PushBackInput,None,itkImageToImageFilterVID3IUS3)
itkImageToImageFilterVID3IUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3IUS3_PopBackInput,None,itkImageToImageFilterVID3IUS3)
itkImageToImageFilterVID3IUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3IUS3_PushFrontInput,None,itkImageToImageFilterVID3IUS3)
itkImageToImageFilterVID3IUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3IUS3_PopFrontInput,None,itkImageToImageFilterVID3IUS3)
itkImageToImageFilterVID3IUS3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVID3IUS3_GetPointer,None,itkImageToImageFilterVID3IUS3)
itkImageToImageFilterVID3IUS3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUS3_swigregister
itkImageToImageFilterVID3IUS3_swigregister(itkImageToImageFilterVID3IUS3)

def itkImageToImageFilterVID3IUS3_cast(*args):
  """itkImageToImageFilterVID3IUS3_cast(itkLightObject obj) -> itkImageToImageFilterVID3IUS3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVID3IUS3_cast(*args)

class itkImageToImageFilterVIF2ID2(itkImageSourcePython.itkImageSourceID2):
    """Proxy of C++ itkImageToImageFilterVIF2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIF2ID2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIF2ID2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageF2 image)
        SetInput(self, unsigned int arg0, itkVectorImageF2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2ID2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageF2
        GetInput(self, unsigned int idx) -> itkVectorImageF2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2ID2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2ID2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2ID2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2ID2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2ID2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIF2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIF2ID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIF2ID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIF2ID2
        
        Create a new object of the class itkImageToImageFilterVIF2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIF2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIF2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIF2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIF2ID2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2ID2_SetInput,None,itkImageToImageFilterVIF2ID2)
itkImageToImageFilterVIF2ID2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2ID2_GetInput,None,itkImageToImageFilterVIF2ID2)
itkImageToImageFilterVIF2ID2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2ID2_PushBackInput,None,itkImageToImageFilterVIF2ID2)
itkImageToImageFilterVIF2ID2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2ID2_PopBackInput,None,itkImageToImageFilterVIF2ID2)
itkImageToImageFilterVIF2ID2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2ID2_PushFrontInput,None,itkImageToImageFilterVIF2ID2)
itkImageToImageFilterVIF2ID2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2ID2_PopFrontInput,None,itkImageToImageFilterVIF2ID2)
itkImageToImageFilterVIF2ID2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2ID2_GetPointer,None,itkImageToImageFilterVIF2ID2)
itkImageToImageFilterVIF2ID2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIF2ID2_swigregister
itkImageToImageFilterVIF2ID2_swigregister(itkImageToImageFilterVIF2ID2)

def itkImageToImageFilterVIF2ID2_cast(*args):
  """itkImageToImageFilterVIF2ID2_cast(itkLightObject obj) -> itkImageToImageFilterVIF2ID2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2ID2_cast(*args)

class itkImageToImageFilterVIF2IF2(itkImageSourcePython.itkImageSourceIF2):
    """Proxy of C++ itkImageToImageFilterVIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IF2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IF2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageF2 image)
        SetInput(self, unsigned int arg0, itkVectorImageF2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IF2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageF2
        GetInput(self, unsigned int idx) -> itkVectorImageF2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IF2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IF2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IF2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IF2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IF2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIF2IF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIF2IF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIF2IF2
        
        Create a new object of the class itkImageToImageFilterVIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIF2IF2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2IF2_SetInput,None,itkImageToImageFilterVIF2IF2)
itkImageToImageFilterVIF2IF2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2IF2_GetInput,None,itkImageToImageFilterVIF2IF2)
itkImageToImageFilterVIF2IF2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2IF2_PushBackInput,None,itkImageToImageFilterVIF2IF2)
itkImageToImageFilterVIF2IF2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2IF2_PopBackInput,None,itkImageToImageFilterVIF2IF2)
itkImageToImageFilterVIF2IF2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2IF2_PushFrontInput,None,itkImageToImageFilterVIF2IF2)
itkImageToImageFilterVIF2IF2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2IF2_PopFrontInput,None,itkImageToImageFilterVIF2IF2)
itkImageToImageFilterVIF2IF2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2IF2_GetPointer,None,itkImageToImageFilterVIF2IF2)
itkImageToImageFilterVIF2IF2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IF2_swigregister
itkImageToImageFilterVIF2IF2_swigregister(itkImageToImageFilterVIF2IF2)

def itkImageToImageFilterVIF2IF2_cast(*args):
  """itkImageToImageFilterVIF2IF2_cast(itkLightObject obj) -> itkImageToImageFilterVIF2IF2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IF2_cast(*args)

class itkImageToImageFilterVIF2IUC2(itkImageSourcePython.itkImageSourceIUC2):
    """Proxy of C++ itkImageToImageFilterVIF2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUC2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUC2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageF2 image)
        SetInput(self, unsigned int arg0, itkVectorImageF2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUC2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageF2
        GetInput(self, unsigned int idx) -> itkVectorImageF2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUC2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUC2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUC2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUC2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUC2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIF2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIF2IUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIF2IUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIF2IUC2
        
        Create a new object of the class itkImageToImageFilterVIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIF2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIF2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIF2IUC2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUC2_SetInput,None,itkImageToImageFilterVIF2IUC2)
itkImageToImageFilterVIF2IUC2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUC2_GetInput,None,itkImageToImageFilterVIF2IUC2)
itkImageToImageFilterVIF2IUC2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUC2_PushBackInput,None,itkImageToImageFilterVIF2IUC2)
itkImageToImageFilterVIF2IUC2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUC2_PopBackInput,None,itkImageToImageFilterVIF2IUC2)
itkImageToImageFilterVIF2IUC2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUC2_PushFrontInput,None,itkImageToImageFilterVIF2IUC2)
itkImageToImageFilterVIF2IUC2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUC2_PopFrontInput,None,itkImageToImageFilterVIF2IUC2)
itkImageToImageFilterVIF2IUC2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUC2_GetPointer,None,itkImageToImageFilterVIF2IUC2)
itkImageToImageFilterVIF2IUC2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUC2_swigregister
itkImageToImageFilterVIF2IUC2_swigregister(itkImageToImageFilterVIF2IUC2)

def itkImageToImageFilterVIF2IUC2_cast(*args):
  """itkImageToImageFilterVIF2IUC2_cast(itkLightObject obj) -> itkImageToImageFilterVIF2IUC2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUC2_cast(*args)

class itkImageToImageFilterVIF2IUL2(itkImageSourcePython.itkImageSourceIUL2):
    """Proxy of C++ itkImageToImageFilterVIF2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUL2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUL2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageF2 image)
        SetInput(self, unsigned int arg0, itkVectorImageF2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUL2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageF2
        GetInput(self, unsigned int idx) -> itkVectorImageF2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUL2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUL2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUL2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUL2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUL2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIF2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIF2IUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIF2IUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIF2IUL2
        
        Create a new object of the class itkImageToImageFilterVIF2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIF2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIF2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIF2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIF2IUL2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUL2_SetInput,None,itkImageToImageFilterVIF2IUL2)
itkImageToImageFilterVIF2IUL2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUL2_GetInput,None,itkImageToImageFilterVIF2IUL2)
itkImageToImageFilterVIF2IUL2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUL2_PushBackInput,None,itkImageToImageFilterVIF2IUL2)
itkImageToImageFilterVIF2IUL2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUL2_PopBackInput,None,itkImageToImageFilterVIF2IUL2)
itkImageToImageFilterVIF2IUL2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUL2_PushFrontInput,None,itkImageToImageFilterVIF2IUL2)
itkImageToImageFilterVIF2IUL2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUL2_PopFrontInput,None,itkImageToImageFilterVIF2IUL2)
itkImageToImageFilterVIF2IUL2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUL2_GetPointer,None,itkImageToImageFilterVIF2IUL2)
itkImageToImageFilterVIF2IUL2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUL2_swigregister
itkImageToImageFilterVIF2IUL2_swigregister(itkImageToImageFilterVIF2IUL2)

def itkImageToImageFilterVIF2IUL2_cast(*args):
  """itkImageToImageFilterVIF2IUL2_cast(itkLightObject obj) -> itkImageToImageFilterVIF2IUL2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUL2_cast(*args)

class itkImageToImageFilterVIF2IUS2(itkImageSourcePython.itkImageSourceIUS2):
    """Proxy of C++ itkImageToImageFilterVIF2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageF2 image)
        SetInput(self, unsigned int arg0, itkVectorImageF2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageF2
        GetInput(self, unsigned int idx) -> itkVectorImageF2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageF2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIF2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIF2IUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIF2IUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIF2IUS2
        
        Create a new object of the class itkImageToImageFilterVIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIF2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIF2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIF2IUS2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUS2_SetInput,None,itkImageToImageFilterVIF2IUS2)
itkImageToImageFilterVIF2IUS2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUS2_GetInput,None,itkImageToImageFilterVIF2IUS2)
itkImageToImageFilterVIF2IUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUS2_PushBackInput,None,itkImageToImageFilterVIF2IUS2)
itkImageToImageFilterVIF2IUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUS2_PopBackInput,None,itkImageToImageFilterVIF2IUS2)
itkImageToImageFilterVIF2IUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUS2_PushFrontInput,None,itkImageToImageFilterVIF2IUS2)
itkImageToImageFilterVIF2IUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUS2_PopFrontInput,None,itkImageToImageFilterVIF2IUS2)
itkImageToImageFilterVIF2IUS2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUS2_GetPointer,None,itkImageToImageFilterVIF2IUS2)
itkImageToImageFilterVIF2IUS2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUS2_swigregister
itkImageToImageFilterVIF2IUS2_swigregister(itkImageToImageFilterVIF2IUS2)

def itkImageToImageFilterVIF2IUS2_cast(*args):
  """itkImageToImageFilterVIF2IUS2_cast(itkLightObject obj) -> itkImageToImageFilterVIF2IUS2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIF2IUS2_cast(*args)

class itkImageToImageFilterVIF3ID3(itkImageSourcePython.itkImageSourceID3):
    """Proxy of C++ itkImageToImageFilterVIF3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIF3ID3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIF3ID3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageF3 image)
        SetInput(self, unsigned int arg0, itkVectorImageF3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3ID3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageF3
        GetInput(self, unsigned int idx) -> itkVectorImageF3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3ID3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3ID3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3ID3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3ID3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3ID3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIF3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIF3ID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIF3ID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIF3ID3
        
        Create a new object of the class itkImageToImageFilterVIF3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIF3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIF3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIF3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIF3ID3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3ID3_SetInput,None,itkImageToImageFilterVIF3ID3)
itkImageToImageFilterVIF3ID3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3ID3_GetInput,None,itkImageToImageFilterVIF3ID3)
itkImageToImageFilterVIF3ID3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3ID3_PushBackInput,None,itkImageToImageFilterVIF3ID3)
itkImageToImageFilterVIF3ID3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3ID3_PopBackInput,None,itkImageToImageFilterVIF3ID3)
itkImageToImageFilterVIF3ID3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3ID3_PushFrontInput,None,itkImageToImageFilterVIF3ID3)
itkImageToImageFilterVIF3ID3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3ID3_PopFrontInput,None,itkImageToImageFilterVIF3ID3)
itkImageToImageFilterVIF3ID3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3ID3_GetPointer,None,itkImageToImageFilterVIF3ID3)
itkImageToImageFilterVIF3ID3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIF3ID3_swigregister
itkImageToImageFilterVIF3ID3_swigregister(itkImageToImageFilterVIF3ID3)

def itkImageToImageFilterVIF3ID3_cast(*args):
  """itkImageToImageFilterVIF3ID3_cast(itkLightObject obj) -> itkImageToImageFilterVIF3ID3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3ID3_cast(*args)

class itkImageToImageFilterVIF3IF3(itkImageSourcePython.itkImageSourceIF3):
    """Proxy of C++ itkImageToImageFilterVIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IF3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IF3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageF3 image)
        SetInput(self, unsigned int arg0, itkVectorImageF3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IF3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageF3
        GetInput(self, unsigned int idx) -> itkVectorImageF3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IF3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IF3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IF3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IF3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IF3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIF3IF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIF3IF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIF3IF3
        
        Create a new object of the class itkImageToImageFilterVIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIF3IF3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3IF3_SetInput,None,itkImageToImageFilterVIF3IF3)
itkImageToImageFilterVIF3IF3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3IF3_GetInput,None,itkImageToImageFilterVIF3IF3)
itkImageToImageFilterVIF3IF3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3IF3_PushBackInput,None,itkImageToImageFilterVIF3IF3)
itkImageToImageFilterVIF3IF3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3IF3_PopBackInput,None,itkImageToImageFilterVIF3IF3)
itkImageToImageFilterVIF3IF3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3IF3_PushFrontInput,None,itkImageToImageFilterVIF3IF3)
itkImageToImageFilterVIF3IF3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3IF3_PopFrontInput,None,itkImageToImageFilterVIF3IF3)
itkImageToImageFilterVIF3IF3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3IF3_GetPointer,None,itkImageToImageFilterVIF3IF3)
itkImageToImageFilterVIF3IF3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IF3_swigregister
itkImageToImageFilterVIF3IF3_swigregister(itkImageToImageFilterVIF3IF3)

def itkImageToImageFilterVIF3IF3_cast(*args):
  """itkImageToImageFilterVIF3IF3_cast(itkLightObject obj) -> itkImageToImageFilterVIF3IF3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IF3_cast(*args)

class itkImageToImageFilterVIF3IUC3(itkImageSourcePython.itkImageSourceIUC3):
    """Proxy of C++ itkImageToImageFilterVIF3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUC3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUC3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageF3 image)
        SetInput(self, unsigned int arg0, itkVectorImageF3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUC3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageF3
        GetInput(self, unsigned int idx) -> itkVectorImageF3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUC3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUC3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUC3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUC3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUC3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIF3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIF3IUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIF3IUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIF3IUC3
        
        Create a new object of the class itkImageToImageFilterVIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIF3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIF3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIF3IUC3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUC3_SetInput,None,itkImageToImageFilterVIF3IUC3)
itkImageToImageFilterVIF3IUC3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUC3_GetInput,None,itkImageToImageFilterVIF3IUC3)
itkImageToImageFilterVIF3IUC3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUC3_PushBackInput,None,itkImageToImageFilterVIF3IUC3)
itkImageToImageFilterVIF3IUC3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUC3_PopBackInput,None,itkImageToImageFilterVIF3IUC3)
itkImageToImageFilterVIF3IUC3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUC3_PushFrontInput,None,itkImageToImageFilterVIF3IUC3)
itkImageToImageFilterVIF3IUC3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUC3_PopFrontInput,None,itkImageToImageFilterVIF3IUC3)
itkImageToImageFilterVIF3IUC3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUC3_GetPointer,None,itkImageToImageFilterVIF3IUC3)
itkImageToImageFilterVIF3IUC3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUC3_swigregister
itkImageToImageFilterVIF3IUC3_swigregister(itkImageToImageFilterVIF3IUC3)

def itkImageToImageFilterVIF3IUC3_cast(*args):
  """itkImageToImageFilterVIF3IUC3_cast(itkLightObject obj) -> itkImageToImageFilterVIF3IUC3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUC3_cast(*args)

class itkImageToImageFilterVIF3IUL3(itkImageSourcePython.itkImageSourceIUL3):
    """Proxy of C++ itkImageToImageFilterVIF3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUL3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUL3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageF3 image)
        SetInput(self, unsigned int arg0, itkVectorImageF3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUL3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageF3
        GetInput(self, unsigned int idx) -> itkVectorImageF3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUL3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUL3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUL3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUL3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUL3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIF3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIF3IUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIF3IUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIF3IUL3
        
        Create a new object of the class itkImageToImageFilterVIF3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIF3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIF3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIF3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIF3IUL3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUL3_SetInput,None,itkImageToImageFilterVIF3IUL3)
itkImageToImageFilterVIF3IUL3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUL3_GetInput,None,itkImageToImageFilterVIF3IUL3)
itkImageToImageFilterVIF3IUL3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUL3_PushBackInput,None,itkImageToImageFilterVIF3IUL3)
itkImageToImageFilterVIF3IUL3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUL3_PopBackInput,None,itkImageToImageFilterVIF3IUL3)
itkImageToImageFilterVIF3IUL3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUL3_PushFrontInput,None,itkImageToImageFilterVIF3IUL3)
itkImageToImageFilterVIF3IUL3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUL3_PopFrontInput,None,itkImageToImageFilterVIF3IUL3)
itkImageToImageFilterVIF3IUL3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUL3_GetPointer,None,itkImageToImageFilterVIF3IUL3)
itkImageToImageFilterVIF3IUL3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUL3_swigregister
itkImageToImageFilterVIF3IUL3_swigregister(itkImageToImageFilterVIF3IUL3)

def itkImageToImageFilterVIF3IUL3_cast(*args):
  """itkImageToImageFilterVIF3IUL3_cast(itkLightObject obj) -> itkImageToImageFilterVIF3IUL3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUL3_cast(*args)

class itkImageToImageFilterVIF3IUS3(itkImageSourcePython.itkImageSourceIUS3):
    """Proxy of C++ itkImageToImageFilterVIF3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageF3 image)
        SetInput(self, unsigned int arg0, itkVectorImageF3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageF3
        GetInput(self, unsigned int idx) -> itkVectorImageF3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageF3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIF3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIF3IUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIF3IUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIF3IUS3
        
        Create a new object of the class itkImageToImageFilterVIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIF3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIF3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIF3IUS3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUS3_SetInput,None,itkImageToImageFilterVIF3IUS3)
itkImageToImageFilterVIF3IUS3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUS3_GetInput,None,itkImageToImageFilterVIF3IUS3)
itkImageToImageFilterVIF3IUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUS3_PushBackInput,None,itkImageToImageFilterVIF3IUS3)
itkImageToImageFilterVIF3IUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUS3_PopBackInput,None,itkImageToImageFilterVIF3IUS3)
itkImageToImageFilterVIF3IUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUS3_PushFrontInput,None,itkImageToImageFilterVIF3IUS3)
itkImageToImageFilterVIF3IUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUS3_PopFrontInput,None,itkImageToImageFilterVIF3IUS3)
itkImageToImageFilterVIF3IUS3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUS3_GetPointer,None,itkImageToImageFilterVIF3IUS3)
itkImageToImageFilterVIF3IUS3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUS3_swigregister
itkImageToImageFilterVIF3IUS3_swigregister(itkImageToImageFilterVIF3IUS3)

def itkImageToImageFilterVIF3IUS3_cast(*args):
  """itkImageToImageFilterVIF3IUS3_cast(itkLightObject obj) -> itkImageToImageFilterVIF3IUS3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIF3IUS3_cast(*args)

class itkImageToImageFilterVIUC2ID2(itkImageSourcePython.itkImageSourceID2):
    """Proxy of C++ itkImageToImageFilterVIUC2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2ID2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2ID2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageUC2 image)
        SetInput(self, unsigned int arg0, itkVectorImageUC2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2ID2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageUC2
        GetInput(self, unsigned int idx) -> itkVectorImageUC2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2ID2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2ID2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2ID2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2ID2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2ID2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIUC2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIUC2ID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIUC2ID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIUC2ID2
        
        Create a new object of the class itkImageToImageFilterVIUC2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIUC2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIUC2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIUC2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIUC2ID2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2ID2_SetInput,None,itkImageToImageFilterVIUC2ID2)
itkImageToImageFilterVIUC2ID2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2ID2_GetInput,None,itkImageToImageFilterVIUC2ID2)
itkImageToImageFilterVIUC2ID2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2ID2_PushBackInput,None,itkImageToImageFilterVIUC2ID2)
itkImageToImageFilterVIUC2ID2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2ID2_PopBackInput,None,itkImageToImageFilterVIUC2ID2)
itkImageToImageFilterVIUC2ID2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2ID2_PushFrontInput,None,itkImageToImageFilterVIUC2ID2)
itkImageToImageFilterVIUC2ID2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2ID2_PopFrontInput,None,itkImageToImageFilterVIUC2ID2)
itkImageToImageFilterVIUC2ID2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2ID2_GetPointer,None,itkImageToImageFilterVIUC2ID2)
itkImageToImageFilterVIUC2ID2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2ID2_swigregister
itkImageToImageFilterVIUC2ID2_swigregister(itkImageToImageFilterVIUC2ID2)

def itkImageToImageFilterVIUC2ID2_cast(*args):
  """itkImageToImageFilterVIUC2ID2_cast(itkLightObject obj) -> itkImageToImageFilterVIUC2ID2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2ID2_cast(*args)

class itkImageToImageFilterVIUC2IF2(itkImageSourcePython.itkImageSourceIF2):
    """Proxy of C++ itkImageToImageFilterVIUC2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IF2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IF2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageUC2 image)
        SetInput(self, unsigned int arg0, itkVectorImageUC2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IF2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageUC2
        GetInput(self, unsigned int idx) -> itkVectorImageUC2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IF2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IF2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IF2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IF2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IF2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIUC2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIUC2IF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIUC2IF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIUC2IF2
        
        Create a new object of the class itkImageToImageFilterVIUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIUC2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIUC2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIUC2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIUC2IF2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IF2_SetInput,None,itkImageToImageFilterVIUC2IF2)
itkImageToImageFilterVIUC2IF2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IF2_GetInput,None,itkImageToImageFilterVIUC2IF2)
itkImageToImageFilterVIUC2IF2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IF2_PushBackInput,None,itkImageToImageFilterVIUC2IF2)
itkImageToImageFilterVIUC2IF2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IF2_PopBackInput,None,itkImageToImageFilterVIUC2IF2)
itkImageToImageFilterVIUC2IF2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IF2_PushFrontInput,None,itkImageToImageFilterVIUC2IF2)
itkImageToImageFilterVIUC2IF2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IF2_PopFrontInput,None,itkImageToImageFilterVIUC2IF2)
itkImageToImageFilterVIUC2IF2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IF2_GetPointer,None,itkImageToImageFilterVIUC2IF2)
itkImageToImageFilterVIUC2IF2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IF2_swigregister
itkImageToImageFilterVIUC2IF2_swigregister(itkImageToImageFilterVIUC2IF2)

def itkImageToImageFilterVIUC2IF2_cast(*args):
  """itkImageToImageFilterVIUC2IF2_cast(itkLightObject obj) -> itkImageToImageFilterVIUC2IF2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IF2_cast(*args)

class itkImageToImageFilterVIUC2IUC2(itkImageSourcePython.itkImageSourceIUC2):
    """Proxy of C++ itkImageToImageFilterVIUC2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUC2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUC2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageUC2 image)
        SetInput(self, unsigned int arg0, itkVectorImageUC2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUC2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageUC2
        GetInput(self, unsigned int idx) -> itkVectorImageUC2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUC2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUC2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUC2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUC2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUC2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIUC2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIUC2IUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIUC2IUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIUC2IUC2
        
        Create a new object of the class itkImageToImageFilterVIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIUC2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIUC2IUC2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUC2_SetInput,None,itkImageToImageFilterVIUC2IUC2)
itkImageToImageFilterVIUC2IUC2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUC2_GetInput,None,itkImageToImageFilterVIUC2IUC2)
itkImageToImageFilterVIUC2IUC2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUC2_PushBackInput,None,itkImageToImageFilterVIUC2IUC2)
itkImageToImageFilterVIUC2IUC2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUC2_PopBackInput,None,itkImageToImageFilterVIUC2IUC2)
itkImageToImageFilterVIUC2IUC2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUC2_PushFrontInput,None,itkImageToImageFilterVIUC2IUC2)
itkImageToImageFilterVIUC2IUC2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUC2_PopFrontInput,None,itkImageToImageFilterVIUC2IUC2)
itkImageToImageFilterVIUC2IUC2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUC2_GetPointer,None,itkImageToImageFilterVIUC2IUC2)
itkImageToImageFilterVIUC2IUC2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUC2_swigregister
itkImageToImageFilterVIUC2IUC2_swigregister(itkImageToImageFilterVIUC2IUC2)

def itkImageToImageFilterVIUC2IUC2_cast(*args):
  """itkImageToImageFilterVIUC2IUC2_cast(itkLightObject obj) -> itkImageToImageFilterVIUC2IUC2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUC2_cast(*args)

class itkImageToImageFilterVIUC2IUL2(itkImageSourcePython.itkImageSourceIUL2):
    """Proxy of C++ itkImageToImageFilterVIUC2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUL2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUL2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageUC2 image)
        SetInput(self, unsigned int arg0, itkVectorImageUC2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUL2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageUC2
        GetInput(self, unsigned int idx) -> itkVectorImageUC2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUL2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUL2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUL2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUL2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUL2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIUC2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIUC2IUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIUC2IUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIUC2IUL2
        
        Create a new object of the class itkImageToImageFilterVIUC2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIUC2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIUC2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIUC2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIUC2IUL2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUL2_SetInput,None,itkImageToImageFilterVIUC2IUL2)
itkImageToImageFilterVIUC2IUL2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUL2_GetInput,None,itkImageToImageFilterVIUC2IUL2)
itkImageToImageFilterVIUC2IUL2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUL2_PushBackInput,None,itkImageToImageFilterVIUC2IUL2)
itkImageToImageFilterVIUC2IUL2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUL2_PopBackInput,None,itkImageToImageFilterVIUC2IUL2)
itkImageToImageFilterVIUC2IUL2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUL2_PushFrontInput,None,itkImageToImageFilterVIUC2IUL2)
itkImageToImageFilterVIUC2IUL2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUL2_PopFrontInput,None,itkImageToImageFilterVIUC2IUL2)
itkImageToImageFilterVIUC2IUL2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUL2_GetPointer,None,itkImageToImageFilterVIUC2IUL2)
itkImageToImageFilterVIUC2IUL2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUL2_swigregister
itkImageToImageFilterVIUC2IUL2_swigregister(itkImageToImageFilterVIUC2IUL2)

def itkImageToImageFilterVIUC2IUL2_cast(*args):
  """itkImageToImageFilterVIUC2IUL2_cast(itkLightObject obj) -> itkImageToImageFilterVIUC2IUL2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUL2_cast(*args)

class itkImageToImageFilterVIUC2IUS2(itkImageSourcePython.itkImageSourceIUS2):
    """Proxy of C++ itkImageToImageFilterVIUC2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageUC2 image)
        SetInput(self, unsigned int arg0, itkVectorImageUC2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageUC2
        GetInput(self, unsigned int idx) -> itkVectorImageUC2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageUC2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIUC2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIUC2IUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIUC2IUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIUC2IUS2
        
        Create a new object of the class itkImageToImageFilterVIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIUC2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIUC2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIUC2IUS2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUS2_SetInput,None,itkImageToImageFilterVIUC2IUS2)
itkImageToImageFilterVIUC2IUS2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUS2_GetInput,None,itkImageToImageFilterVIUC2IUS2)
itkImageToImageFilterVIUC2IUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUS2_PushBackInput,None,itkImageToImageFilterVIUC2IUS2)
itkImageToImageFilterVIUC2IUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUS2_PopBackInput,None,itkImageToImageFilterVIUC2IUS2)
itkImageToImageFilterVIUC2IUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUS2_PushFrontInput,None,itkImageToImageFilterVIUC2IUS2)
itkImageToImageFilterVIUC2IUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUS2_PopFrontInput,None,itkImageToImageFilterVIUC2IUS2)
itkImageToImageFilterVIUC2IUS2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUS2_GetPointer,None,itkImageToImageFilterVIUC2IUS2)
itkImageToImageFilterVIUC2IUS2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUS2_swigregister
itkImageToImageFilterVIUC2IUS2_swigregister(itkImageToImageFilterVIUC2IUS2)

def itkImageToImageFilterVIUC2IUS2_cast(*args):
  """itkImageToImageFilterVIUC2IUS2_cast(itkLightObject obj) -> itkImageToImageFilterVIUC2IUS2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUS2_cast(*args)

class itkImageToImageFilterVIUC3ID3(itkImageSourcePython.itkImageSourceID3):
    """Proxy of C++ itkImageToImageFilterVIUC3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3ID3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3ID3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageUC3 image)
        SetInput(self, unsigned int arg0, itkVectorImageUC3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3ID3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageUC3
        GetInput(self, unsigned int idx) -> itkVectorImageUC3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3ID3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3ID3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3ID3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3ID3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3ID3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIUC3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIUC3ID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIUC3ID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIUC3ID3
        
        Create a new object of the class itkImageToImageFilterVIUC3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIUC3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIUC3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIUC3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIUC3ID3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3ID3_SetInput,None,itkImageToImageFilterVIUC3ID3)
itkImageToImageFilterVIUC3ID3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3ID3_GetInput,None,itkImageToImageFilterVIUC3ID3)
itkImageToImageFilterVIUC3ID3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3ID3_PushBackInput,None,itkImageToImageFilterVIUC3ID3)
itkImageToImageFilterVIUC3ID3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3ID3_PopBackInput,None,itkImageToImageFilterVIUC3ID3)
itkImageToImageFilterVIUC3ID3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3ID3_PushFrontInput,None,itkImageToImageFilterVIUC3ID3)
itkImageToImageFilterVIUC3ID3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3ID3_PopFrontInput,None,itkImageToImageFilterVIUC3ID3)
itkImageToImageFilterVIUC3ID3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3ID3_GetPointer,None,itkImageToImageFilterVIUC3ID3)
itkImageToImageFilterVIUC3ID3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3ID3_swigregister
itkImageToImageFilterVIUC3ID3_swigregister(itkImageToImageFilterVIUC3ID3)

def itkImageToImageFilterVIUC3ID3_cast(*args):
  """itkImageToImageFilterVIUC3ID3_cast(itkLightObject obj) -> itkImageToImageFilterVIUC3ID3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3ID3_cast(*args)

class itkImageToImageFilterVIUC3IF3(itkImageSourcePython.itkImageSourceIF3):
    """Proxy of C++ itkImageToImageFilterVIUC3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IF3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IF3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageUC3 image)
        SetInput(self, unsigned int arg0, itkVectorImageUC3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IF3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageUC3
        GetInput(self, unsigned int idx) -> itkVectorImageUC3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IF3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IF3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IF3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IF3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IF3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIUC3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIUC3IF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIUC3IF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIUC3IF3
        
        Create a new object of the class itkImageToImageFilterVIUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIUC3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIUC3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIUC3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIUC3IF3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IF3_SetInput,None,itkImageToImageFilterVIUC3IF3)
itkImageToImageFilterVIUC3IF3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IF3_GetInput,None,itkImageToImageFilterVIUC3IF3)
itkImageToImageFilterVIUC3IF3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IF3_PushBackInput,None,itkImageToImageFilterVIUC3IF3)
itkImageToImageFilterVIUC3IF3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IF3_PopBackInput,None,itkImageToImageFilterVIUC3IF3)
itkImageToImageFilterVIUC3IF3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IF3_PushFrontInput,None,itkImageToImageFilterVIUC3IF3)
itkImageToImageFilterVIUC3IF3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IF3_PopFrontInput,None,itkImageToImageFilterVIUC3IF3)
itkImageToImageFilterVIUC3IF3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IF3_GetPointer,None,itkImageToImageFilterVIUC3IF3)
itkImageToImageFilterVIUC3IF3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IF3_swigregister
itkImageToImageFilterVIUC3IF3_swigregister(itkImageToImageFilterVIUC3IF3)

def itkImageToImageFilterVIUC3IF3_cast(*args):
  """itkImageToImageFilterVIUC3IF3_cast(itkLightObject obj) -> itkImageToImageFilterVIUC3IF3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IF3_cast(*args)

class itkImageToImageFilterVIUC3IUC3(itkImageSourcePython.itkImageSourceIUC3):
    """Proxy of C++ itkImageToImageFilterVIUC3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUC3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUC3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageUC3 image)
        SetInput(self, unsigned int arg0, itkVectorImageUC3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUC3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageUC3
        GetInput(self, unsigned int idx) -> itkVectorImageUC3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUC3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUC3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUC3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUC3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUC3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIUC3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIUC3IUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIUC3IUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIUC3IUC3
        
        Create a new object of the class itkImageToImageFilterVIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIUC3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIUC3IUC3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUC3_SetInput,None,itkImageToImageFilterVIUC3IUC3)
itkImageToImageFilterVIUC3IUC3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUC3_GetInput,None,itkImageToImageFilterVIUC3IUC3)
itkImageToImageFilterVIUC3IUC3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUC3_PushBackInput,None,itkImageToImageFilterVIUC3IUC3)
itkImageToImageFilterVIUC3IUC3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUC3_PopBackInput,None,itkImageToImageFilterVIUC3IUC3)
itkImageToImageFilterVIUC3IUC3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUC3_PushFrontInput,None,itkImageToImageFilterVIUC3IUC3)
itkImageToImageFilterVIUC3IUC3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUC3_PopFrontInput,None,itkImageToImageFilterVIUC3IUC3)
itkImageToImageFilterVIUC3IUC3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUC3_GetPointer,None,itkImageToImageFilterVIUC3IUC3)
itkImageToImageFilterVIUC3IUC3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUC3_swigregister
itkImageToImageFilterVIUC3IUC3_swigregister(itkImageToImageFilterVIUC3IUC3)

def itkImageToImageFilterVIUC3IUC3_cast(*args):
  """itkImageToImageFilterVIUC3IUC3_cast(itkLightObject obj) -> itkImageToImageFilterVIUC3IUC3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUC3_cast(*args)

class itkImageToImageFilterVIUC3IUL3(itkImageSourcePython.itkImageSourceIUL3):
    """Proxy of C++ itkImageToImageFilterVIUC3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUL3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUL3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageUC3 image)
        SetInput(self, unsigned int arg0, itkVectorImageUC3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUL3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageUC3
        GetInput(self, unsigned int idx) -> itkVectorImageUC3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUL3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUL3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUL3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUL3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUL3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIUC3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIUC3IUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIUC3IUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIUC3IUL3
        
        Create a new object of the class itkImageToImageFilterVIUC3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIUC3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIUC3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIUC3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIUC3IUL3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUL3_SetInput,None,itkImageToImageFilterVIUC3IUL3)
itkImageToImageFilterVIUC3IUL3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUL3_GetInput,None,itkImageToImageFilterVIUC3IUL3)
itkImageToImageFilterVIUC3IUL3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUL3_PushBackInput,None,itkImageToImageFilterVIUC3IUL3)
itkImageToImageFilterVIUC3IUL3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUL3_PopBackInput,None,itkImageToImageFilterVIUC3IUL3)
itkImageToImageFilterVIUC3IUL3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUL3_PushFrontInput,None,itkImageToImageFilterVIUC3IUL3)
itkImageToImageFilterVIUC3IUL3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUL3_PopFrontInput,None,itkImageToImageFilterVIUC3IUL3)
itkImageToImageFilterVIUC3IUL3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUL3_GetPointer,None,itkImageToImageFilterVIUC3IUL3)
itkImageToImageFilterVIUC3IUL3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUL3_swigregister
itkImageToImageFilterVIUC3IUL3_swigregister(itkImageToImageFilterVIUC3IUL3)

def itkImageToImageFilterVIUC3IUL3_cast(*args):
  """itkImageToImageFilterVIUC3IUL3_cast(itkLightObject obj) -> itkImageToImageFilterVIUC3IUL3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUL3_cast(*args)

class itkImageToImageFilterVIUC3IUS3(itkImageSourcePython.itkImageSourceIUS3):
    """Proxy of C++ itkImageToImageFilterVIUC3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageUC3 image)
        SetInput(self, unsigned int arg0, itkVectorImageUC3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageUC3
        GetInput(self, unsigned int idx) -> itkVectorImageUC3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageUC3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIUC3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIUC3IUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIUC3IUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIUC3IUS3
        
        Create a new object of the class itkImageToImageFilterVIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIUC3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIUC3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIUC3IUS3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUS3_SetInput,None,itkImageToImageFilterVIUC3IUS3)
itkImageToImageFilterVIUC3IUS3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUS3_GetInput,None,itkImageToImageFilterVIUC3IUS3)
itkImageToImageFilterVIUC3IUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUS3_PushBackInput,None,itkImageToImageFilterVIUC3IUS3)
itkImageToImageFilterVIUC3IUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUS3_PopBackInput,None,itkImageToImageFilterVIUC3IUS3)
itkImageToImageFilterVIUC3IUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUS3_PushFrontInput,None,itkImageToImageFilterVIUC3IUS3)
itkImageToImageFilterVIUC3IUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUS3_PopFrontInput,None,itkImageToImageFilterVIUC3IUS3)
itkImageToImageFilterVIUC3IUS3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUS3_GetPointer,None,itkImageToImageFilterVIUC3IUS3)
itkImageToImageFilterVIUC3IUS3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUS3_swigregister
itkImageToImageFilterVIUC3IUS3_swigregister(itkImageToImageFilterVIUC3IUS3)

def itkImageToImageFilterVIUC3IUS3_cast(*args):
  """itkImageToImageFilterVIUC3IUS3_cast(itkLightObject obj) -> itkImageToImageFilterVIUC3IUS3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUS3_cast(*args)

class itkImageToImageFilterVIUL2ID2(itkImageSourcePython.itkImageSourceID2):
    """Proxy of C++ itkImageToImageFilterVIUL2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2ID2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2ID2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageUL2 image)
        SetInput(self, unsigned int arg0, itkVectorImageUL2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2ID2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageUL2
        GetInput(self, unsigned int idx) -> itkVectorImageUL2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2ID2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2ID2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2ID2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2ID2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2ID2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIUL2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIUL2ID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIUL2ID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIUL2ID2
        
        Create a new object of the class itkImageToImageFilterVIUL2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIUL2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIUL2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIUL2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIUL2ID2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2ID2_SetInput,None,itkImageToImageFilterVIUL2ID2)
itkImageToImageFilterVIUL2ID2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2ID2_GetInput,None,itkImageToImageFilterVIUL2ID2)
itkImageToImageFilterVIUL2ID2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2ID2_PushBackInput,None,itkImageToImageFilterVIUL2ID2)
itkImageToImageFilterVIUL2ID2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2ID2_PopBackInput,None,itkImageToImageFilterVIUL2ID2)
itkImageToImageFilterVIUL2ID2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2ID2_PushFrontInput,None,itkImageToImageFilterVIUL2ID2)
itkImageToImageFilterVIUL2ID2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2ID2_PopFrontInput,None,itkImageToImageFilterVIUL2ID2)
itkImageToImageFilterVIUL2ID2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2ID2_GetPointer,None,itkImageToImageFilterVIUL2ID2)
itkImageToImageFilterVIUL2ID2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2ID2_swigregister
itkImageToImageFilterVIUL2ID2_swigregister(itkImageToImageFilterVIUL2ID2)

def itkImageToImageFilterVIUL2ID2_cast(*args):
  """itkImageToImageFilterVIUL2ID2_cast(itkLightObject obj) -> itkImageToImageFilterVIUL2ID2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2ID2_cast(*args)

class itkImageToImageFilterVIUL2IF2(itkImageSourcePython.itkImageSourceIF2):
    """Proxy of C++ itkImageToImageFilterVIUL2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IF2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IF2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageUL2 image)
        SetInput(self, unsigned int arg0, itkVectorImageUL2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IF2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageUL2
        GetInput(self, unsigned int idx) -> itkVectorImageUL2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IF2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IF2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IF2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IF2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IF2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIUL2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIUL2IF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIUL2IF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIUL2IF2
        
        Create a new object of the class itkImageToImageFilterVIUL2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIUL2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIUL2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIUL2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIUL2IF2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IF2_SetInput,None,itkImageToImageFilterVIUL2IF2)
itkImageToImageFilterVIUL2IF2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IF2_GetInput,None,itkImageToImageFilterVIUL2IF2)
itkImageToImageFilterVIUL2IF2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IF2_PushBackInput,None,itkImageToImageFilterVIUL2IF2)
itkImageToImageFilterVIUL2IF2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IF2_PopBackInput,None,itkImageToImageFilterVIUL2IF2)
itkImageToImageFilterVIUL2IF2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IF2_PushFrontInput,None,itkImageToImageFilterVIUL2IF2)
itkImageToImageFilterVIUL2IF2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IF2_PopFrontInput,None,itkImageToImageFilterVIUL2IF2)
itkImageToImageFilterVIUL2IF2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IF2_GetPointer,None,itkImageToImageFilterVIUL2IF2)
itkImageToImageFilterVIUL2IF2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IF2_swigregister
itkImageToImageFilterVIUL2IF2_swigregister(itkImageToImageFilterVIUL2IF2)

def itkImageToImageFilterVIUL2IF2_cast(*args):
  """itkImageToImageFilterVIUL2IF2_cast(itkLightObject obj) -> itkImageToImageFilterVIUL2IF2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IF2_cast(*args)

class itkImageToImageFilterVIUL2IUC2(itkImageSourcePython.itkImageSourceIUC2):
    """Proxy of C++ itkImageToImageFilterVIUL2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUC2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUC2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageUL2 image)
        SetInput(self, unsigned int arg0, itkVectorImageUL2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUC2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageUL2
        GetInput(self, unsigned int idx) -> itkVectorImageUL2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUC2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUC2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUC2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUC2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUC2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIUL2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIUL2IUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIUL2IUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIUL2IUC2
        
        Create a new object of the class itkImageToImageFilterVIUL2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIUL2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIUL2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIUL2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIUL2IUC2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUC2_SetInput,None,itkImageToImageFilterVIUL2IUC2)
itkImageToImageFilterVIUL2IUC2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUC2_GetInput,None,itkImageToImageFilterVIUL2IUC2)
itkImageToImageFilterVIUL2IUC2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUC2_PushBackInput,None,itkImageToImageFilterVIUL2IUC2)
itkImageToImageFilterVIUL2IUC2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUC2_PopBackInput,None,itkImageToImageFilterVIUL2IUC2)
itkImageToImageFilterVIUL2IUC2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUC2_PushFrontInput,None,itkImageToImageFilterVIUL2IUC2)
itkImageToImageFilterVIUL2IUC2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUC2_PopFrontInput,None,itkImageToImageFilterVIUL2IUC2)
itkImageToImageFilterVIUL2IUC2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUC2_GetPointer,None,itkImageToImageFilterVIUL2IUC2)
itkImageToImageFilterVIUL2IUC2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUC2_swigregister
itkImageToImageFilterVIUL2IUC2_swigregister(itkImageToImageFilterVIUL2IUC2)

def itkImageToImageFilterVIUL2IUC2_cast(*args):
  """itkImageToImageFilterVIUL2IUC2_cast(itkLightObject obj) -> itkImageToImageFilterVIUL2IUC2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUC2_cast(*args)

class itkImageToImageFilterVIUL2IUL2(itkImageSourcePython.itkImageSourceIUL2):
    """Proxy of C++ itkImageToImageFilterVIUL2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUL2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUL2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageUL2 image)
        SetInput(self, unsigned int arg0, itkVectorImageUL2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUL2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageUL2
        GetInput(self, unsigned int idx) -> itkVectorImageUL2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUL2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUL2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUL2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUL2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUL2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIUL2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIUL2IUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIUL2IUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIUL2IUL2
        
        Create a new object of the class itkImageToImageFilterVIUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIUL2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIUL2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIUL2IUL2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUL2_SetInput,None,itkImageToImageFilterVIUL2IUL2)
itkImageToImageFilterVIUL2IUL2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUL2_GetInput,None,itkImageToImageFilterVIUL2IUL2)
itkImageToImageFilterVIUL2IUL2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUL2_PushBackInput,None,itkImageToImageFilterVIUL2IUL2)
itkImageToImageFilterVIUL2IUL2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUL2_PopBackInput,None,itkImageToImageFilterVIUL2IUL2)
itkImageToImageFilterVIUL2IUL2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUL2_PushFrontInput,None,itkImageToImageFilterVIUL2IUL2)
itkImageToImageFilterVIUL2IUL2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUL2_PopFrontInput,None,itkImageToImageFilterVIUL2IUL2)
itkImageToImageFilterVIUL2IUL2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUL2_GetPointer,None,itkImageToImageFilterVIUL2IUL2)
itkImageToImageFilterVIUL2IUL2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUL2_swigregister
itkImageToImageFilterVIUL2IUL2_swigregister(itkImageToImageFilterVIUL2IUL2)

def itkImageToImageFilterVIUL2IUL2_cast(*args):
  """itkImageToImageFilterVIUL2IUL2_cast(itkLightObject obj) -> itkImageToImageFilterVIUL2IUL2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUL2_cast(*args)

class itkImageToImageFilterVIUL2IUS2(itkImageSourcePython.itkImageSourceIUS2):
    """Proxy of C++ itkImageToImageFilterVIUL2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageUL2 image)
        SetInput(self, unsigned int arg0, itkVectorImageUL2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageUL2
        GetInput(self, unsigned int idx) -> itkVectorImageUL2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageUL2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIUL2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIUL2IUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIUL2IUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIUL2IUS2
        
        Create a new object of the class itkImageToImageFilterVIUL2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIUL2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIUL2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIUL2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIUL2IUS2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUS2_SetInput,None,itkImageToImageFilterVIUL2IUS2)
itkImageToImageFilterVIUL2IUS2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUS2_GetInput,None,itkImageToImageFilterVIUL2IUS2)
itkImageToImageFilterVIUL2IUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUS2_PushBackInput,None,itkImageToImageFilterVIUL2IUS2)
itkImageToImageFilterVIUL2IUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUS2_PopBackInput,None,itkImageToImageFilterVIUL2IUS2)
itkImageToImageFilterVIUL2IUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUS2_PushFrontInput,None,itkImageToImageFilterVIUL2IUS2)
itkImageToImageFilterVIUL2IUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUS2_PopFrontInput,None,itkImageToImageFilterVIUL2IUS2)
itkImageToImageFilterVIUL2IUS2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUS2_GetPointer,None,itkImageToImageFilterVIUL2IUS2)
itkImageToImageFilterVIUL2IUS2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUS2_swigregister
itkImageToImageFilterVIUL2IUS2_swigregister(itkImageToImageFilterVIUL2IUS2)

def itkImageToImageFilterVIUL2IUS2_cast(*args):
  """itkImageToImageFilterVIUL2IUS2_cast(itkLightObject obj) -> itkImageToImageFilterVIUL2IUS2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUS2_cast(*args)

class itkImageToImageFilterVIUL3ID3(itkImageSourcePython.itkImageSourceID3):
    """Proxy of C++ itkImageToImageFilterVIUL3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3ID3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3ID3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageUL3 image)
        SetInput(self, unsigned int arg0, itkVectorImageUL3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3ID3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageUL3
        GetInput(self, unsigned int idx) -> itkVectorImageUL3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3ID3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3ID3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3ID3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3ID3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3ID3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIUL3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIUL3ID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIUL3ID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIUL3ID3
        
        Create a new object of the class itkImageToImageFilterVIUL3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIUL3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIUL3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIUL3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIUL3ID3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3ID3_SetInput,None,itkImageToImageFilterVIUL3ID3)
itkImageToImageFilterVIUL3ID3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3ID3_GetInput,None,itkImageToImageFilterVIUL3ID3)
itkImageToImageFilterVIUL3ID3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3ID3_PushBackInput,None,itkImageToImageFilterVIUL3ID3)
itkImageToImageFilterVIUL3ID3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3ID3_PopBackInput,None,itkImageToImageFilterVIUL3ID3)
itkImageToImageFilterVIUL3ID3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3ID3_PushFrontInput,None,itkImageToImageFilterVIUL3ID3)
itkImageToImageFilterVIUL3ID3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3ID3_PopFrontInput,None,itkImageToImageFilterVIUL3ID3)
itkImageToImageFilterVIUL3ID3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3ID3_GetPointer,None,itkImageToImageFilterVIUL3ID3)
itkImageToImageFilterVIUL3ID3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3ID3_swigregister
itkImageToImageFilterVIUL3ID3_swigregister(itkImageToImageFilterVIUL3ID3)

def itkImageToImageFilterVIUL3ID3_cast(*args):
  """itkImageToImageFilterVIUL3ID3_cast(itkLightObject obj) -> itkImageToImageFilterVIUL3ID3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3ID3_cast(*args)

class itkImageToImageFilterVIUL3IF3(itkImageSourcePython.itkImageSourceIF3):
    """Proxy of C++ itkImageToImageFilterVIUL3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IF3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IF3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageUL3 image)
        SetInput(self, unsigned int arg0, itkVectorImageUL3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IF3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageUL3
        GetInput(self, unsigned int idx) -> itkVectorImageUL3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IF3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IF3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IF3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IF3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IF3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIUL3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIUL3IF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIUL3IF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIUL3IF3
        
        Create a new object of the class itkImageToImageFilterVIUL3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIUL3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIUL3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIUL3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIUL3IF3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IF3_SetInput,None,itkImageToImageFilterVIUL3IF3)
itkImageToImageFilterVIUL3IF3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IF3_GetInput,None,itkImageToImageFilterVIUL3IF3)
itkImageToImageFilterVIUL3IF3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IF3_PushBackInput,None,itkImageToImageFilterVIUL3IF3)
itkImageToImageFilterVIUL3IF3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IF3_PopBackInput,None,itkImageToImageFilterVIUL3IF3)
itkImageToImageFilterVIUL3IF3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IF3_PushFrontInput,None,itkImageToImageFilterVIUL3IF3)
itkImageToImageFilterVIUL3IF3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IF3_PopFrontInput,None,itkImageToImageFilterVIUL3IF3)
itkImageToImageFilterVIUL3IF3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IF3_GetPointer,None,itkImageToImageFilterVIUL3IF3)
itkImageToImageFilterVIUL3IF3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IF3_swigregister
itkImageToImageFilterVIUL3IF3_swigregister(itkImageToImageFilterVIUL3IF3)

def itkImageToImageFilterVIUL3IF3_cast(*args):
  """itkImageToImageFilterVIUL3IF3_cast(itkLightObject obj) -> itkImageToImageFilterVIUL3IF3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IF3_cast(*args)

class itkImageToImageFilterVIUL3IUC3(itkImageSourcePython.itkImageSourceIUC3):
    """Proxy of C++ itkImageToImageFilterVIUL3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUC3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUC3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageUL3 image)
        SetInput(self, unsigned int arg0, itkVectorImageUL3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUC3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageUL3
        GetInput(self, unsigned int idx) -> itkVectorImageUL3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUC3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUC3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUC3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUC3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUC3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIUL3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIUL3IUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIUL3IUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIUL3IUC3
        
        Create a new object of the class itkImageToImageFilterVIUL3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIUL3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIUL3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIUL3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIUL3IUC3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUC3_SetInput,None,itkImageToImageFilterVIUL3IUC3)
itkImageToImageFilterVIUL3IUC3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUC3_GetInput,None,itkImageToImageFilterVIUL3IUC3)
itkImageToImageFilterVIUL3IUC3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUC3_PushBackInput,None,itkImageToImageFilterVIUL3IUC3)
itkImageToImageFilterVIUL3IUC3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUC3_PopBackInput,None,itkImageToImageFilterVIUL3IUC3)
itkImageToImageFilterVIUL3IUC3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUC3_PushFrontInput,None,itkImageToImageFilterVIUL3IUC3)
itkImageToImageFilterVIUL3IUC3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUC3_PopFrontInput,None,itkImageToImageFilterVIUL3IUC3)
itkImageToImageFilterVIUL3IUC3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUC3_GetPointer,None,itkImageToImageFilterVIUL3IUC3)
itkImageToImageFilterVIUL3IUC3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUC3_swigregister
itkImageToImageFilterVIUL3IUC3_swigregister(itkImageToImageFilterVIUL3IUC3)

def itkImageToImageFilterVIUL3IUC3_cast(*args):
  """itkImageToImageFilterVIUL3IUC3_cast(itkLightObject obj) -> itkImageToImageFilterVIUL3IUC3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUC3_cast(*args)

class itkImageToImageFilterVIUL3IUL3(itkImageSourcePython.itkImageSourceIUL3):
    """Proxy of C++ itkImageToImageFilterVIUL3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUL3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUL3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageUL3 image)
        SetInput(self, unsigned int arg0, itkVectorImageUL3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUL3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageUL3
        GetInput(self, unsigned int idx) -> itkVectorImageUL3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUL3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUL3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUL3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUL3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUL3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIUL3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIUL3IUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIUL3IUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIUL3IUL3
        
        Create a new object of the class itkImageToImageFilterVIUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIUL3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIUL3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIUL3IUL3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUL3_SetInput,None,itkImageToImageFilterVIUL3IUL3)
itkImageToImageFilterVIUL3IUL3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUL3_GetInput,None,itkImageToImageFilterVIUL3IUL3)
itkImageToImageFilterVIUL3IUL3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUL3_PushBackInput,None,itkImageToImageFilterVIUL3IUL3)
itkImageToImageFilterVIUL3IUL3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUL3_PopBackInput,None,itkImageToImageFilterVIUL3IUL3)
itkImageToImageFilterVIUL3IUL3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUL3_PushFrontInput,None,itkImageToImageFilterVIUL3IUL3)
itkImageToImageFilterVIUL3IUL3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUL3_PopFrontInput,None,itkImageToImageFilterVIUL3IUL3)
itkImageToImageFilterVIUL3IUL3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUL3_GetPointer,None,itkImageToImageFilterVIUL3IUL3)
itkImageToImageFilterVIUL3IUL3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUL3_swigregister
itkImageToImageFilterVIUL3IUL3_swigregister(itkImageToImageFilterVIUL3IUL3)

def itkImageToImageFilterVIUL3IUL3_cast(*args):
  """itkImageToImageFilterVIUL3IUL3_cast(itkLightObject obj) -> itkImageToImageFilterVIUL3IUL3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUL3_cast(*args)

class itkImageToImageFilterVIUL3IUS3(itkImageSourcePython.itkImageSourceIUS3):
    """Proxy of C++ itkImageToImageFilterVIUL3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageUL3 image)
        SetInput(self, unsigned int arg0, itkVectorImageUL3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageUL3
        GetInput(self, unsigned int idx) -> itkVectorImageUL3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageUL3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIUL3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIUL3IUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIUL3IUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIUL3IUS3
        
        Create a new object of the class itkImageToImageFilterVIUL3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIUL3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIUL3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIUL3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIUL3IUS3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUS3_SetInput,None,itkImageToImageFilterVIUL3IUS3)
itkImageToImageFilterVIUL3IUS3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUS3_GetInput,None,itkImageToImageFilterVIUL3IUS3)
itkImageToImageFilterVIUL3IUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUS3_PushBackInput,None,itkImageToImageFilterVIUL3IUS3)
itkImageToImageFilterVIUL3IUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUS3_PopBackInput,None,itkImageToImageFilterVIUL3IUS3)
itkImageToImageFilterVIUL3IUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUS3_PushFrontInput,None,itkImageToImageFilterVIUL3IUS3)
itkImageToImageFilterVIUL3IUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUS3_PopFrontInput,None,itkImageToImageFilterVIUL3IUS3)
itkImageToImageFilterVIUL3IUS3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUS3_GetPointer,None,itkImageToImageFilterVIUL3IUS3)
itkImageToImageFilterVIUL3IUS3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUS3_swigregister
itkImageToImageFilterVIUL3IUS3_swigregister(itkImageToImageFilterVIUL3IUS3)

def itkImageToImageFilterVIUL3IUS3_cast(*args):
  """itkImageToImageFilterVIUL3IUS3_cast(itkLightObject obj) -> itkImageToImageFilterVIUL3IUS3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUS3_cast(*args)

class itkImageToImageFilterVIUS2ID2(itkImageSourcePython.itkImageSourceID2):
    """Proxy of C++ itkImageToImageFilterVIUS2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2ID2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2ID2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageUS2 image)
        SetInput(self, unsigned int arg0, itkVectorImageUS2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2ID2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageUS2
        GetInput(self, unsigned int idx) -> itkVectorImageUS2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2ID2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2ID2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2ID2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2ID2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2ID2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIUS2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIUS2ID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIUS2ID2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIUS2ID2
        
        Create a new object of the class itkImageToImageFilterVIUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIUS2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIUS2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIUS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIUS2ID2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2ID2_SetInput,None,itkImageToImageFilterVIUS2ID2)
itkImageToImageFilterVIUS2ID2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2ID2_GetInput,None,itkImageToImageFilterVIUS2ID2)
itkImageToImageFilterVIUS2ID2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2ID2_PushBackInput,None,itkImageToImageFilterVIUS2ID2)
itkImageToImageFilterVIUS2ID2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2ID2_PopBackInput,None,itkImageToImageFilterVIUS2ID2)
itkImageToImageFilterVIUS2ID2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2ID2_PushFrontInput,None,itkImageToImageFilterVIUS2ID2)
itkImageToImageFilterVIUS2ID2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2ID2_PopFrontInput,None,itkImageToImageFilterVIUS2ID2)
itkImageToImageFilterVIUS2ID2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2ID2_GetPointer,None,itkImageToImageFilterVIUS2ID2)
itkImageToImageFilterVIUS2ID2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2ID2_swigregister
itkImageToImageFilterVIUS2ID2_swigregister(itkImageToImageFilterVIUS2ID2)

def itkImageToImageFilterVIUS2ID2_cast(*args):
  """itkImageToImageFilterVIUS2ID2_cast(itkLightObject obj) -> itkImageToImageFilterVIUS2ID2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2ID2_cast(*args)

class itkImageToImageFilterVIUS2IF2(itkImageSourcePython.itkImageSourceIF2):
    """Proxy of C++ itkImageToImageFilterVIUS2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IF2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IF2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageUS2 image)
        SetInput(self, unsigned int arg0, itkVectorImageUS2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IF2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageUS2
        GetInput(self, unsigned int idx) -> itkVectorImageUS2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IF2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IF2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IF2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IF2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IF2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIUS2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIUS2IF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIUS2IF2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIUS2IF2
        
        Create a new object of the class itkImageToImageFilterVIUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIUS2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIUS2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIUS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIUS2IF2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IF2_SetInput,None,itkImageToImageFilterVIUS2IF2)
itkImageToImageFilterVIUS2IF2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IF2_GetInput,None,itkImageToImageFilterVIUS2IF2)
itkImageToImageFilterVIUS2IF2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IF2_PushBackInput,None,itkImageToImageFilterVIUS2IF2)
itkImageToImageFilterVIUS2IF2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IF2_PopBackInput,None,itkImageToImageFilterVIUS2IF2)
itkImageToImageFilterVIUS2IF2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IF2_PushFrontInput,None,itkImageToImageFilterVIUS2IF2)
itkImageToImageFilterVIUS2IF2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IF2_PopFrontInput,None,itkImageToImageFilterVIUS2IF2)
itkImageToImageFilterVIUS2IF2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IF2_GetPointer,None,itkImageToImageFilterVIUS2IF2)
itkImageToImageFilterVIUS2IF2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IF2_swigregister
itkImageToImageFilterVIUS2IF2_swigregister(itkImageToImageFilterVIUS2IF2)

def itkImageToImageFilterVIUS2IF2_cast(*args):
  """itkImageToImageFilterVIUS2IF2_cast(itkLightObject obj) -> itkImageToImageFilterVIUS2IF2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IF2_cast(*args)

class itkImageToImageFilterVIUS2IUC2(itkImageSourcePython.itkImageSourceIUC2):
    """Proxy of C++ itkImageToImageFilterVIUS2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUC2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUC2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageUS2 image)
        SetInput(self, unsigned int arg0, itkVectorImageUS2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUC2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageUS2
        GetInput(self, unsigned int idx) -> itkVectorImageUS2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUC2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUC2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUC2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUC2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUC2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIUS2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIUS2IUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIUS2IUC2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIUS2IUC2
        
        Create a new object of the class itkImageToImageFilterVIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIUS2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIUS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIUS2IUC2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUC2_SetInput,None,itkImageToImageFilterVIUS2IUC2)
itkImageToImageFilterVIUS2IUC2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUC2_GetInput,None,itkImageToImageFilterVIUS2IUC2)
itkImageToImageFilterVIUS2IUC2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUC2_PushBackInput,None,itkImageToImageFilterVIUS2IUC2)
itkImageToImageFilterVIUS2IUC2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUC2_PopBackInput,None,itkImageToImageFilterVIUS2IUC2)
itkImageToImageFilterVIUS2IUC2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUC2_PushFrontInput,None,itkImageToImageFilterVIUS2IUC2)
itkImageToImageFilterVIUS2IUC2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUC2_PopFrontInput,None,itkImageToImageFilterVIUS2IUC2)
itkImageToImageFilterVIUS2IUC2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUC2_GetPointer,None,itkImageToImageFilterVIUS2IUC2)
itkImageToImageFilterVIUS2IUC2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUC2_swigregister
itkImageToImageFilterVIUS2IUC2_swigregister(itkImageToImageFilterVIUS2IUC2)

def itkImageToImageFilterVIUS2IUC2_cast(*args):
  """itkImageToImageFilterVIUS2IUC2_cast(itkLightObject obj) -> itkImageToImageFilterVIUS2IUC2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUC2_cast(*args)

class itkImageToImageFilterVIUS2IUL2(itkImageSourcePython.itkImageSourceIUL2):
    """Proxy of C++ itkImageToImageFilterVIUS2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUL2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUL2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageUS2 image)
        SetInput(self, unsigned int arg0, itkVectorImageUS2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUL2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageUS2
        GetInput(self, unsigned int idx) -> itkVectorImageUS2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUL2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUL2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUL2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUL2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUL2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIUS2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIUS2IUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIUS2IUL2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIUS2IUL2
        
        Create a new object of the class itkImageToImageFilterVIUS2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIUS2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIUS2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIUS2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIUS2IUL2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUL2_SetInput,None,itkImageToImageFilterVIUS2IUL2)
itkImageToImageFilterVIUS2IUL2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUL2_GetInput,None,itkImageToImageFilterVIUS2IUL2)
itkImageToImageFilterVIUS2IUL2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUL2_PushBackInput,None,itkImageToImageFilterVIUS2IUL2)
itkImageToImageFilterVIUS2IUL2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUL2_PopBackInput,None,itkImageToImageFilterVIUS2IUL2)
itkImageToImageFilterVIUS2IUL2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUL2_PushFrontInput,None,itkImageToImageFilterVIUS2IUL2)
itkImageToImageFilterVIUS2IUL2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUL2_PopFrontInput,None,itkImageToImageFilterVIUS2IUL2)
itkImageToImageFilterVIUS2IUL2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUL2_GetPointer,None,itkImageToImageFilterVIUS2IUL2)
itkImageToImageFilterVIUS2IUL2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUL2_swigregister
itkImageToImageFilterVIUS2IUL2_swigregister(itkImageToImageFilterVIUS2IUL2)

def itkImageToImageFilterVIUS2IUL2_cast(*args):
  """itkImageToImageFilterVIUS2IUL2_cast(itkLightObject obj) -> itkImageToImageFilterVIUS2IUL2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUL2_cast(*args)

class itkImageToImageFilterVIUS2IUS2(itkImageSourcePython.itkImageSourceIUS2):
    """Proxy of C++ itkImageToImageFilterVIUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageUS2 image)
        SetInput(self, unsigned int arg0, itkVectorImageUS2 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageUS2
        GetInput(self, unsigned int idx) -> itkVectorImageUS2
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageUS2 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIUS2IUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIUS2IUS2"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIUS2IUS2
        
        Create a new object of the class itkImageToImageFilterVIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIUS2IUS2.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUS2_SetInput,None,itkImageToImageFilterVIUS2IUS2)
itkImageToImageFilterVIUS2IUS2.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUS2_GetInput,None,itkImageToImageFilterVIUS2IUS2)
itkImageToImageFilterVIUS2IUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUS2_PushBackInput,None,itkImageToImageFilterVIUS2IUS2)
itkImageToImageFilterVIUS2IUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUS2_PopBackInput,None,itkImageToImageFilterVIUS2IUS2)
itkImageToImageFilterVIUS2IUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUS2_PushFrontInput,None,itkImageToImageFilterVIUS2IUS2)
itkImageToImageFilterVIUS2IUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUS2_PopFrontInput,None,itkImageToImageFilterVIUS2IUS2)
itkImageToImageFilterVIUS2IUS2.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUS2_GetPointer,None,itkImageToImageFilterVIUS2IUS2)
itkImageToImageFilterVIUS2IUS2_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUS2_swigregister
itkImageToImageFilterVIUS2IUS2_swigregister(itkImageToImageFilterVIUS2IUS2)

def itkImageToImageFilterVIUS2IUS2_cast(*args):
  """itkImageToImageFilterVIUS2IUS2_cast(itkLightObject obj) -> itkImageToImageFilterVIUS2IUS2"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUS2_cast(*args)

class itkImageToImageFilterVIUS3ID3(itkImageSourcePython.itkImageSourceID3):
    """Proxy of C++ itkImageToImageFilterVIUS3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3ID3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3ID3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageUS3 image)
        SetInput(self, unsigned int arg0, itkVectorImageUS3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3ID3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageUS3
        GetInput(self, unsigned int idx) -> itkVectorImageUS3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3ID3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3ID3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3ID3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3ID3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3ID3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIUS3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIUS3ID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIUS3ID3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIUS3ID3
        
        Create a new object of the class itkImageToImageFilterVIUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIUS3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIUS3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIUS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIUS3ID3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3ID3_SetInput,None,itkImageToImageFilterVIUS3ID3)
itkImageToImageFilterVIUS3ID3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3ID3_GetInput,None,itkImageToImageFilterVIUS3ID3)
itkImageToImageFilterVIUS3ID3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3ID3_PushBackInput,None,itkImageToImageFilterVIUS3ID3)
itkImageToImageFilterVIUS3ID3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3ID3_PopBackInput,None,itkImageToImageFilterVIUS3ID3)
itkImageToImageFilterVIUS3ID3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3ID3_PushFrontInput,None,itkImageToImageFilterVIUS3ID3)
itkImageToImageFilterVIUS3ID3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3ID3_PopFrontInput,None,itkImageToImageFilterVIUS3ID3)
itkImageToImageFilterVIUS3ID3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3ID3_GetPointer,None,itkImageToImageFilterVIUS3ID3)
itkImageToImageFilterVIUS3ID3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3ID3_swigregister
itkImageToImageFilterVIUS3ID3_swigregister(itkImageToImageFilterVIUS3ID3)

def itkImageToImageFilterVIUS3ID3_cast(*args):
  """itkImageToImageFilterVIUS3ID3_cast(itkLightObject obj) -> itkImageToImageFilterVIUS3ID3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3ID3_cast(*args)

class itkImageToImageFilterVIUS3IF3(itkImageSourcePython.itkImageSourceIF3):
    """Proxy of C++ itkImageToImageFilterVIUS3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IF3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IF3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageUS3 image)
        SetInput(self, unsigned int arg0, itkVectorImageUS3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IF3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageUS3
        GetInput(self, unsigned int idx) -> itkVectorImageUS3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IF3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IF3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IF3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IF3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IF3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIUS3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIUS3IF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIUS3IF3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIUS3IF3
        
        Create a new object of the class itkImageToImageFilterVIUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIUS3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIUS3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIUS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIUS3IF3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IF3_SetInput,None,itkImageToImageFilterVIUS3IF3)
itkImageToImageFilterVIUS3IF3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IF3_GetInput,None,itkImageToImageFilterVIUS3IF3)
itkImageToImageFilterVIUS3IF3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IF3_PushBackInput,None,itkImageToImageFilterVIUS3IF3)
itkImageToImageFilterVIUS3IF3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IF3_PopBackInput,None,itkImageToImageFilterVIUS3IF3)
itkImageToImageFilterVIUS3IF3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IF3_PushFrontInput,None,itkImageToImageFilterVIUS3IF3)
itkImageToImageFilterVIUS3IF3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IF3_PopFrontInput,None,itkImageToImageFilterVIUS3IF3)
itkImageToImageFilterVIUS3IF3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IF3_GetPointer,None,itkImageToImageFilterVIUS3IF3)
itkImageToImageFilterVIUS3IF3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IF3_swigregister
itkImageToImageFilterVIUS3IF3_swigregister(itkImageToImageFilterVIUS3IF3)

def itkImageToImageFilterVIUS3IF3_cast(*args):
  """itkImageToImageFilterVIUS3IF3_cast(itkLightObject obj) -> itkImageToImageFilterVIUS3IF3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IF3_cast(*args)

class itkImageToImageFilterVIUS3IUC3(itkImageSourcePython.itkImageSourceIUC3):
    """Proxy of C++ itkImageToImageFilterVIUS3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUC3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUC3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageUS3 image)
        SetInput(self, unsigned int arg0, itkVectorImageUS3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUC3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageUS3
        GetInput(self, unsigned int idx) -> itkVectorImageUS3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUC3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUC3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUC3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUC3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUC3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIUS3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIUS3IUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIUS3IUC3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIUS3IUC3
        
        Create a new object of the class itkImageToImageFilterVIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIUS3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIUS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIUS3IUC3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUC3_SetInput,None,itkImageToImageFilterVIUS3IUC3)
itkImageToImageFilterVIUS3IUC3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUC3_GetInput,None,itkImageToImageFilterVIUS3IUC3)
itkImageToImageFilterVIUS3IUC3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUC3_PushBackInput,None,itkImageToImageFilterVIUS3IUC3)
itkImageToImageFilterVIUS3IUC3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUC3_PopBackInput,None,itkImageToImageFilterVIUS3IUC3)
itkImageToImageFilterVIUS3IUC3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUC3_PushFrontInput,None,itkImageToImageFilterVIUS3IUC3)
itkImageToImageFilterVIUS3IUC3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUC3_PopFrontInput,None,itkImageToImageFilterVIUS3IUC3)
itkImageToImageFilterVIUS3IUC3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUC3_GetPointer,None,itkImageToImageFilterVIUS3IUC3)
itkImageToImageFilterVIUS3IUC3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUC3_swigregister
itkImageToImageFilterVIUS3IUC3_swigregister(itkImageToImageFilterVIUS3IUC3)

def itkImageToImageFilterVIUS3IUC3_cast(*args):
  """itkImageToImageFilterVIUS3IUC3_cast(itkLightObject obj) -> itkImageToImageFilterVIUS3IUC3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUC3_cast(*args)

class itkImageToImageFilterVIUS3IUL3(itkImageSourcePython.itkImageSourceIUL3):
    """Proxy of C++ itkImageToImageFilterVIUS3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUL3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUL3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageUS3 image)
        SetInput(self, unsigned int arg0, itkVectorImageUS3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUL3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageUS3
        GetInput(self, unsigned int idx) -> itkVectorImageUS3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUL3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUL3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUL3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUL3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUL3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIUS3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIUS3IUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIUS3IUL3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIUS3IUL3
        
        Create a new object of the class itkImageToImageFilterVIUS3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIUS3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIUS3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIUS3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIUS3IUL3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUL3_SetInput,None,itkImageToImageFilterVIUS3IUL3)
itkImageToImageFilterVIUS3IUL3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUL3_GetInput,None,itkImageToImageFilterVIUS3IUL3)
itkImageToImageFilterVIUS3IUL3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUL3_PushBackInput,None,itkImageToImageFilterVIUS3IUL3)
itkImageToImageFilterVIUS3IUL3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUL3_PopBackInput,None,itkImageToImageFilterVIUS3IUL3)
itkImageToImageFilterVIUS3IUL3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUL3_PushFrontInput,None,itkImageToImageFilterVIUS3IUL3)
itkImageToImageFilterVIUS3IUL3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUL3_PopFrontInput,None,itkImageToImageFilterVIUS3IUL3)
itkImageToImageFilterVIUS3IUL3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUL3_GetPointer,None,itkImageToImageFilterVIUS3IUL3)
itkImageToImageFilterVIUS3IUL3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUL3_swigregister
itkImageToImageFilterVIUS3IUL3_swigregister(itkImageToImageFilterVIUS3IUL3)

def itkImageToImageFilterVIUS3IUL3_cast(*args):
  """itkImageToImageFilterVIUS3IUL3_cast(itkLightObject obj) -> itkImageToImageFilterVIUS3IUL3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUL3_cast(*args)

class itkImageToImageFilterVIUS3IUS3(itkImageSourcePython.itkImageSourceIUS3):
    """Proxy of C++ itkImageToImageFilterVIUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkVectorImageUS3 image)
        SetInput(self, unsigned int arg0, itkVectorImageUS3 image)
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkVectorImageUS3
        GetInput(self, unsigned int idx) -> itkVectorImageUS3
        """
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkVectorImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkVectorImageUS3 image)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterBPython.delete_itkImageToImageFilterVIUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterVIUS3IUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterVIUS3IUS3"""
        return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterVIUS3IUS3
        
        Create a new object of the class itkImageToImageFilterVIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterVIUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterVIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterVIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterVIUS3IUS3.SetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUS3_SetInput,None,itkImageToImageFilterVIUS3IUS3)
itkImageToImageFilterVIUS3IUS3.GetInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUS3_GetInput,None,itkImageToImageFilterVIUS3IUS3)
itkImageToImageFilterVIUS3IUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUS3_PushBackInput,None,itkImageToImageFilterVIUS3IUS3)
itkImageToImageFilterVIUS3IUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUS3_PopBackInput,None,itkImageToImageFilterVIUS3IUS3)
itkImageToImageFilterVIUS3IUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUS3_PushFrontInput,None,itkImageToImageFilterVIUS3IUS3)
itkImageToImageFilterVIUS3IUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUS3_PopFrontInput,None,itkImageToImageFilterVIUS3IUS3)
itkImageToImageFilterVIUS3IUS3.GetPointer = new_instancemethod(_itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUS3_GetPointer,None,itkImageToImageFilterVIUS3IUS3)
itkImageToImageFilterVIUS3IUS3_swigregister = _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUS3_swigregister
itkImageToImageFilterVIUS3IUS3_swigregister(itkImageToImageFilterVIUS3IUS3)

def itkImageToImageFilterVIUS3IUS3_cast(*args):
  """itkImageToImageFilterVIUS3IUS3_cast(itkLightObject obj) -> itkImageToImageFilterVIUS3IUS3"""
  return _itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUS3_cast(*args)



