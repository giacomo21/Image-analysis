# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkNarrowBandImageFilterBasePython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkNarrowBandImageFilterBasePython', [dirname(__file__)])
        except ImportError:
            import _itkNarrowBandImageFilterBasePython
            return _itkNarrowBandImageFilterBasePython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkNarrowBandImageFilterBasePython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkNarrowBandImageFilterBasePython = swig_import_helper()
    del swig_import_helper
else:
    import _itkNarrowBandImageFilterBasePython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkNarrowBandPython
import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import itkFiniteDifferenceImageFilterPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import ITKRegionsPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterAPython
import itkFiniteDifferenceFunctionPython
def itkNarrowBandImageFilterBaseID3ID3_New():
  return itkNarrowBandImageFilterBaseID3ID3.New()

def itkNarrowBandImageFilterBaseID2ID2_New():
  return itkNarrowBandImageFilterBaseID2ID2.New()

def itkNarrowBandImageFilterBaseIF3IF3_New():
  return itkNarrowBandImageFilterBaseIF3IF3.New()

def itkNarrowBandImageFilterBaseIF2IF2_New():
  return itkNarrowBandImageFilterBaseIF2IF2.New()

class itkNarrowBandImageFilterBaseID2ID2(itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID2ID2):
    """Proxy of C++ itkNarrowBandImageFilterBaseID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID2ID2_ImageDimension
    def SetIsoSurfaceValue(self, *args):
        """SetIsoSurfaceValue(self, double _arg)"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID2ID2_SetIsoSurfaceValue(self, *args)

    def GetIsoSurfaceValue(self):
        """GetIsoSurfaceValue(self) -> double"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID2ID2_GetIsoSurfaceValue(self)

    def InsertNarrowBandNode(self, *args):
        """
        InsertNarrowBandNode(self, itkBandNodeI2D node)
        InsertNarrowBandNode(self, itkIndex2 index)
        InsertNarrowBandNode(self, itkIndex2 index, double value, signed char nodestate)
        """
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID2ID2_InsertNarrowBandNode(self, *args)

    def SetNarrowBandTotalRadius(self, *args):
        """SetNarrowBandTotalRadius(self, float val)"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID2ID2_SetNarrowBandTotalRadius(self, *args)

    def GetNarrowBandTotalRadius(self):
        """GetNarrowBandTotalRadius(self) -> float"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID2ID2_GetNarrowBandTotalRadius(self)

    def SetNarrowBandInnerRadius(self, *args):
        """SetNarrowBandInnerRadius(self, float val)"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID2ID2_SetNarrowBandInnerRadius(self, *args)

    def GetNarrowBandInnerRadius(self):
        """GetNarrowBandInnerRadius(self) -> float"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID2ID2_GetNarrowBandInnerRadius(self)

    def CreateNarrowBand(self):
        """CreateNarrowBand(self)"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID2ID2_CreateNarrowBand(self)

    def SetNarrowBand(self, *args):
        """SetNarrowBand(self, itkNarrowBandBNI2D ptr)"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID2ID2_SetNarrowBand(self, *args)

    def CopyInputToOutput(self):
        """CopyInputToOutput(self)"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID2ID2_CopyInputToOutput(self)

    __swig_destroy__ = _itkNarrowBandImageFilterBasePython.delete_itkNarrowBandImageFilterBaseID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkNarrowBandImageFilterBaseID2ID2"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNarrowBandImageFilterBaseID2ID2"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNarrowBandImageFilterBaseID2ID2
        
        Create a new object of the class itkNarrowBandImageFilterBaseID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNarrowBandImageFilterBaseID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNarrowBandImageFilterBaseID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNarrowBandImageFilterBaseID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNarrowBandImageFilterBaseID2ID2.SetIsoSurfaceValue = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID2ID2_SetIsoSurfaceValue,None,itkNarrowBandImageFilterBaseID2ID2)
itkNarrowBandImageFilterBaseID2ID2.GetIsoSurfaceValue = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID2ID2_GetIsoSurfaceValue,None,itkNarrowBandImageFilterBaseID2ID2)
itkNarrowBandImageFilterBaseID2ID2.InsertNarrowBandNode = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID2ID2_InsertNarrowBandNode,None,itkNarrowBandImageFilterBaseID2ID2)
itkNarrowBandImageFilterBaseID2ID2.SetNarrowBandTotalRadius = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID2ID2_SetNarrowBandTotalRadius,None,itkNarrowBandImageFilterBaseID2ID2)
itkNarrowBandImageFilterBaseID2ID2.GetNarrowBandTotalRadius = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID2ID2_GetNarrowBandTotalRadius,None,itkNarrowBandImageFilterBaseID2ID2)
itkNarrowBandImageFilterBaseID2ID2.SetNarrowBandInnerRadius = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID2ID2_SetNarrowBandInnerRadius,None,itkNarrowBandImageFilterBaseID2ID2)
itkNarrowBandImageFilterBaseID2ID2.GetNarrowBandInnerRadius = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID2ID2_GetNarrowBandInnerRadius,None,itkNarrowBandImageFilterBaseID2ID2)
itkNarrowBandImageFilterBaseID2ID2.CreateNarrowBand = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID2ID2_CreateNarrowBand,None,itkNarrowBandImageFilterBaseID2ID2)
itkNarrowBandImageFilterBaseID2ID2.SetNarrowBand = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID2ID2_SetNarrowBand,None,itkNarrowBandImageFilterBaseID2ID2)
itkNarrowBandImageFilterBaseID2ID2.CopyInputToOutput = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID2ID2_CopyInputToOutput,None,itkNarrowBandImageFilterBaseID2ID2)
itkNarrowBandImageFilterBaseID2ID2.GetPointer = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID2ID2_GetPointer,None,itkNarrowBandImageFilterBaseID2ID2)
itkNarrowBandImageFilterBaseID2ID2_swigregister = _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID2ID2_swigregister
itkNarrowBandImageFilterBaseID2ID2_swigregister(itkNarrowBandImageFilterBaseID2ID2)

def itkNarrowBandImageFilterBaseID2ID2_cast(*args):
  """itkNarrowBandImageFilterBaseID2ID2_cast(itkLightObject obj) -> itkNarrowBandImageFilterBaseID2ID2"""
  return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID2ID2_cast(*args)

class itkNarrowBandImageFilterBaseID3ID3(itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID3ID3):
    """Proxy of C++ itkNarrowBandImageFilterBaseID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID3ID3_ImageDimension
    def SetIsoSurfaceValue(self, *args):
        """SetIsoSurfaceValue(self, double _arg)"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID3ID3_SetIsoSurfaceValue(self, *args)

    def GetIsoSurfaceValue(self):
        """GetIsoSurfaceValue(self) -> double"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID3ID3_GetIsoSurfaceValue(self)

    def InsertNarrowBandNode(self, *args):
        """
        InsertNarrowBandNode(self, itkBandNodeI3D node)
        InsertNarrowBandNode(self, itkIndex3 index)
        InsertNarrowBandNode(self, itkIndex3 index, double value, signed char nodestate)
        """
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID3ID3_InsertNarrowBandNode(self, *args)

    def SetNarrowBandTotalRadius(self, *args):
        """SetNarrowBandTotalRadius(self, float val)"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID3ID3_SetNarrowBandTotalRadius(self, *args)

    def GetNarrowBandTotalRadius(self):
        """GetNarrowBandTotalRadius(self) -> float"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID3ID3_GetNarrowBandTotalRadius(self)

    def SetNarrowBandInnerRadius(self, *args):
        """SetNarrowBandInnerRadius(self, float val)"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID3ID3_SetNarrowBandInnerRadius(self, *args)

    def GetNarrowBandInnerRadius(self):
        """GetNarrowBandInnerRadius(self) -> float"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID3ID3_GetNarrowBandInnerRadius(self)

    def CreateNarrowBand(self):
        """CreateNarrowBand(self)"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID3ID3_CreateNarrowBand(self)

    def SetNarrowBand(self, *args):
        """SetNarrowBand(self, itkNarrowBandBNI3D ptr)"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID3ID3_SetNarrowBand(self, *args)

    def CopyInputToOutput(self):
        """CopyInputToOutput(self)"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID3ID3_CopyInputToOutput(self)

    __swig_destroy__ = _itkNarrowBandImageFilterBasePython.delete_itkNarrowBandImageFilterBaseID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkNarrowBandImageFilterBaseID3ID3"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNarrowBandImageFilterBaseID3ID3"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNarrowBandImageFilterBaseID3ID3
        
        Create a new object of the class itkNarrowBandImageFilterBaseID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNarrowBandImageFilterBaseID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNarrowBandImageFilterBaseID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNarrowBandImageFilterBaseID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNarrowBandImageFilterBaseID3ID3.SetIsoSurfaceValue = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID3ID3_SetIsoSurfaceValue,None,itkNarrowBandImageFilterBaseID3ID3)
itkNarrowBandImageFilterBaseID3ID3.GetIsoSurfaceValue = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID3ID3_GetIsoSurfaceValue,None,itkNarrowBandImageFilterBaseID3ID3)
itkNarrowBandImageFilterBaseID3ID3.InsertNarrowBandNode = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID3ID3_InsertNarrowBandNode,None,itkNarrowBandImageFilterBaseID3ID3)
itkNarrowBandImageFilterBaseID3ID3.SetNarrowBandTotalRadius = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID3ID3_SetNarrowBandTotalRadius,None,itkNarrowBandImageFilterBaseID3ID3)
itkNarrowBandImageFilterBaseID3ID3.GetNarrowBandTotalRadius = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID3ID3_GetNarrowBandTotalRadius,None,itkNarrowBandImageFilterBaseID3ID3)
itkNarrowBandImageFilterBaseID3ID3.SetNarrowBandInnerRadius = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID3ID3_SetNarrowBandInnerRadius,None,itkNarrowBandImageFilterBaseID3ID3)
itkNarrowBandImageFilterBaseID3ID3.GetNarrowBandInnerRadius = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID3ID3_GetNarrowBandInnerRadius,None,itkNarrowBandImageFilterBaseID3ID3)
itkNarrowBandImageFilterBaseID3ID3.CreateNarrowBand = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID3ID3_CreateNarrowBand,None,itkNarrowBandImageFilterBaseID3ID3)
itkNarrowBandImageFilterBaseID3ID3.SetNarrowBand = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID3ID3_SetNarrowBand,None,itkNarrowBandImageFilterBaseID3ID3)
itkNarrowBandImageFilterBaseID3ID3.CopyInputToOutput = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID3ID3_CopyInputToOutput,None,itkNarrowBandImageFilterBaseID3ID3)
itkNarrowBandImageFilterBaseID3ID3.GetPointer = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID3ID3_GetPointer,None,itkNarrowBandImageFilterBaseID3ID3)
itkNarrowBandImageFilterBaseID3ID3_swigregister = _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID3ID3_swigregister
itkNarrowBandImageFilterBaseID3ID3_swigregister(itkNarrowBandImageFilterBaseID3ID3)

def itkNarrowBandImageFilterBaseID3ID3_cast(*args):
  """itkNarrowBandImageFilterBaseID3ID3_cast(itkLightObject obj) -> itkNarrowBandImageFilterBaseID3ID3"""
  return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID3ID3_cast(*args)

class itkNarrowBandImageFilterBaseIF2IF2(itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF2IF2):
    """Proxy of C++ itkNarrowBandImageFilterBaseIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF2IF2_ImageDimension
    def SetIsoSurfaceValue(self, *args):
        """SetIsoSurfaceValue(self, float _arg)"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF2IF2_SetIsoSurfaceValue(self, *args)

    def GetIsoSurfaceValue(self):
        """GetIsoSurfaceValue(self) -> float"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF2IF2_GetIsoSurfaceValue(self)

    def InsertNarrowBandNode(self, *args):
        """
        InsertNarrowBandNode(self, itkBandNodeI2F node)
        InsertNarrowBandNode(self, itkIndex2 index)
        InsertNarrowBandNode(self, itkIndex2 index, float value, signed char nodestate)
        """
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF2IF2_InsertNarrowBandNode(self, *args)

    def SetNarrowBandTotalRadius(self, *args):
        """SetNarrowBandTotalRadius(self, float val)"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF2IF2_SetNarrowBandTotalRadius(self, *args)

    def GetNarrowBandTotalRadius(self):
        """GetNarrowBandTotalRadius(self) -> float"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF2IF2_GetNarrowBandTotalRadius(self)

    def SetNarrowBandInnerRadius(self, *args):
        """SetNarrowBandInnerRadius(self, float val)"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF2IF2_SetNarrowBandInnerRadius(self, *args)

    def GetNarrowBandInnerRadius(self):
        """GetNarrowBandInnerRadius(self) -> float"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF2IF2_GetNarrowBandInnerRadius(self)

    def CreateNarrowBand(self):
        """CreateNarrowBand(self)"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF2IF2_CreateNarrowBand(self)

    def SetNarrowBand(self, *args):
        """SetNarrowBand(self, itkNarrowBandBNI2F ptr)"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF2IF2_SetNarrowBand(self, *args)

    def CopyInputToOutput(self):
        """CopyInputToOutput(self)"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF2IF2_CopyInputToOutput(self)

    __swig_destroy__ = _itkNarrowBandImageFilterBasePython.delete_itkNarrowBandImageFilterBaseIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkNarrowBandImageFilterBaseIF2IF2"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNarrowBandImageFilterBaseIF2IF2"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNarrowBandImageFilterBaseIF2IF2
        
        Create a new object of the class itkNarrowBandImageFilterBaseIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNarrowBandImageFilterBaseIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNarrowBandImageFilterBaseIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNarrowBandImageFilterBaseIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNarrowBandImageFilterBaseIF2IF2.SetIsoSurfaceValue = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF2IF2_SetIsoSurfaceValue,None,itkNarrowBandImageFilterBaseIF2IF2)
itkNarrowBandImageFilterBaseIF2IF2.GetIsoSurfaceValue = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF2IF2_GetIsoSurfaceValue,None,itkNarrowBandImageFilterBaseIF2IF2)
itkNarrowBandImageFilterBaseIF2IF2.InsertNarrowBandNode = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF2IF2_InsertNarrowBandNode,None,itkNarrowBandImageFilterBaseIF2IF2)
itkNarrowBandImageFilterBaseIF2IF2.SetNarrowBandTotalRadius = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF2IF2_SetNarrowBandTotalRadius,None,itkNarrowBandImageFilterBaseIF2IF2)
itkNarrowBandImageFilterBaseIF2IF2.GetNarrowBandTotalRadius = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF2IF2_GetNarrowBandTotalRadius,None,itkNarrowBandImageFilterBaseIF2IF2)
itkNarrowBandImageFilterBaseIF2IF2.SetNarrowBandInnerRadius = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF2IF2_SetNarrowBandInnerRadius,None,itkNarrowBandImageFilterBaseIF2IF2)
itkNarrowBandImageFilterBaseIF2IF2.GetNarrowBandInnerRadius = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF2IF2_GetNarrowBandInnerRadius,None,itkNarrowBandImageFilterBaseIF2IF2)
itkNarrowBandImageFilterBaseIF2IF2.CreateNarrowBand = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF2IF2_CreateNarrowBand,None,itkNarrowBandImageFilterBaseIF2IF2)
itkNarrowBandImageFilterBaseIF2IF2.SetNarrowBand = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF2IF2_SetNarrowBand,None,itkNarrowBandImageFilterBaseIF2IF2)
itkNarrowBandImageFilterBaseIF2IF2.CopyInputToOutput = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF2IF2_CopyInputToOutput,None,itkNarrowBandImageFilterBaseIF2IF2)
itkNarrowBandImageFilterBaseIF2IF2.GetPointer = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF2IF2_GetPointer,None,itkNarrowBandImageFilterBaseIF2IF2)
itkNarrowBandImageFilterBaseIF2IF2_swigregister = _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF2IF2_swigregister
itkNarrowBandImageFilterBaseIF2IF2_swigregister(itkNarrowBandImageFilterBaseIF2IF2)

def itkNarrowBandImageFilterBaseIF2IF2_cast(*args):
  """itkNarrowBandImageFilterBaseIF2IF2_cast(itkLightObject obj) -> itkNarrowBandImageFilterBaseIF2IF2"""
  return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF2IF2_cast(*args)

class itkNarrowBandImageFilterBaseIF3IF3(itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF3IF3):
    """Proxy of C++ itkNarrowBandImageFilterBaseIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF3IF3_ImageDimension
    def SetIsoSurfaceValue(self, *args):
        """SetIsoSurfaceValue(self, float _arg)"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF3IF3_SetIsoSurfaceValue(self, *args)

    def GetIsoSurfaceValue(self):
        """GetIsoSurfaceValue(self) -> float"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF3IF3_GetIsoSurfaceValue(self)

    def InsertNarrowBandNode(self, *args):
        """
        InsertNarrowBandNode(self, itkBandNodeI3F node)
        InsertNarrowBandNode(self, itkIndex3 index)
        InsertNarrowBandNode(self, itkIndex3 index, float value, signed char nodestate)
        """
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF3IF3_InsertNarrowBandNode(self, *args)

    def SetNarrowBandTotalRadius(self, *args):
        """SetNarrowBandTotalRadius(self, float val)"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF3IF3_SetNarrowBandTotalRadius(self, *args)

    def GetNarrowBandTotalRadius(self):
        """GetNarrowBandTotalRadius(self) -> float"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF3IF3_GetNarrowBandTotalRadius(self)

    def SetNarrowBandInnerRadius(self, *args):
        """SetNarrowBandInnerRadius(self, float val)"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF3IF3_SetNarrowBandInnerRadius(self, *args)

    def GetNarrowBandInnerRadius(self):
        """GetNarrowBandInnerRadius(self) -> float"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF3IF3_GetNarrowBandInnerRadius(self)

    def CreateNarrowBand(self):
        """CreateNarrowBand(self)"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF3IF3_CreateNarrowBand(self)

    def SetNarrowBand(self, *args):
        """SetNarrowBand(self, itkNarrowBandBNI3F ptr)"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF3IF3_SetNarrowBand(self, *args)

    def CopyInputToOutput(self):
        """CopyInputToOutput(self)"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF3IF3_CopyInputToOutput(self)

    __swig_destroy__ = _itkNarrowBandImageFilterBasePython.delete_itkNarrowBandImageFilterBaseIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkNarrowBandImageFilterBaseIF3IF3"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNarrowBandImageFilterBaseIF3IF3"""
        return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNarrowBandImageFilterBaseIF3IF3
        
        Create a new object of the class itkNarrowBandImageFilterBaseIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNarrowBandImageFilterBaseIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNarrowBandImageFilterBaseIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNarrowBandImageFilterBaseIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNarrowBandImageFilterBaseIF3IF3.SetIsoSurfaceValue = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF3IF3_SetIsoSurfaceValue,None,itkNarrowBandImageFilterBaseIF3IF3)
itkNarrowBandImageFilterBaseIF3IF3.GetIsoSurfaceValue = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF3IF3_GetIsoSurfaceValue,None,itkNarrowBandImageFilterBaseIF3IF3)
itkNarrowBandImageFilterBaseIF3IF3.InsertNarrowBandNode = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF3IF3_InsertNarrowBandNode,None,itkNarrowBandImageFilterBaseIF3IF3)
itkNarrowBandImageFilterBaseIF3IF3.SetNarrowBandTotalRadius = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF3IF3_SetNarrowBandTotalRadius,None,itkNarrowBandImageFilterBaseIF3IF3)
itkNarrowBandImageFilterBaseIF3IF3.GetNarrowBandTotalRadius = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF3IF3_GetNarrowBandTotalRadius,None,itkNarrowBandImageFilterBaseIF3IF3)
itkNarrowBandImageFilterBaseIF3IF3.SetNarrowBandInnerRadius = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF3IF3_SetNarrowBandInnerRadius,None,itkNarrowBandImageFilterBaseIF3IF3)
itkNarrowBandImageFilterBaseIF3IF3.GetNarrowBandInnerRadius = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF3IF3_GetNarrowBandInnerRadius,None,itkNarrowBandImageFilterBaseIF3IF3)
itkNarrowBandImageFilterBaseIF3IF3.CreateNarrowBand = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF3IF3_CreateNarrowBand,None,itkNarrowBandImageFilterBaseIF3IF3)
itkNarrowBandImageFilterBaseIF3IF3.SetNarrowBand = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF3IF3_SetNarrowBand,None,itkNarrowBandImageFilterBaseIF3IF3)
itkNarrowBandImageFilterBaseIF3IF3.CopyInputToOutput = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF3IF3_CopyInputToOutput,None,itkNarrowBandImageFilterBaseIF3IF3)
itkNarrowBandImageFilterBaseIF3IF3.GetPointer = new_instancemethod(_itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF3IF3_GetPointer,None,itkNarrowBandImageFilterBaseIF3IF3)
itkNarrowBandImageFilterBaseIF3IF3_swigregister = _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF3IF3_swigregister
itkNarrowBandImageFilterBaseIF3IF3_swigregister(itkNarrowBandImageFilterBaseIF3IF3)

def itkNarrowBandImageFilterBaseIF3IF3_cast(*args):
  """itkNarrowBandImageFilterBaseIF3IF3_cast(itkLightObject obj) -> itkNarrowBandImageFilterBaseIF3IF3"""
  return _itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF3IF3_cast(*args)



