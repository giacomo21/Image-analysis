// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkThresholdSegmentationLevelSetImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkThresholdSegmentationLevelSetImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkThresholdSegmentationLevelSetImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkThresholdSegmentationLevelSetImageFilterJava
#endif
#ifdef SWIGLUA
%module itkThresholdSegmentationLevelSetImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkThresholdSegmentationLevelSetImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkThresholdSegmentationLevelSetImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkThresholdSegmentationLevelSetImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkThresholdSegmentationLevelSetImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkThresholdSegmentationLevelSetImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkThresholdSegmentationLevelSetImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkThresholdSegmentationLevelSetImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkThresholdSegmentationLevelSetImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkThresholdSegmentationLevelSetImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkThresholdSegmentationLevelSetImageFilterPython
#endif
#ifdef SWIGR
%module itkThresholdSegmentationLevelSetImageFilterR
#endif
#ifdef SWIGRUBY
%module itkThresholdSegmentationLevelSetImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkThresholdSegmentationLevelSetImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkThresholdSegmentationLevelSetImageFilterTcl
#endif
#ifdef SWIGXML
%module itkThresholdSegmentationLevelSetImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Numerics.includes"
#include "LevelSet.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkSegmentationLevelSetImageFilter.i


%include itk.i
%include wrap_itkThresholdSegmentationLevelSetImageFilter_ext.i


 class itkThresholdSegmentationLevelSetImageFilterID2ID2D : public itkSegmentationLevelSetImageFilterID2ID2D {
   public:
     virtual char const * GetNameOfClass() const;
     static itkThresholdSegmentationLevelSetImageFilterID2ID2D_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetUpperThreshold(double v);
     void SetLowerThreshold(double v);
     double GetUpperThreshold() const;
     double GetLowerThreshold() const;
     void SetEdgeWeight(double v);
     double GetEdgeWeight() const;
     void SetSmoothingIterations(int v);
     int GetSmoothingIterations() const;
     void SetSmoothingTimeStep(double v);
     double GetSmoothingTimeStep() const;
     void SetSmoothingConductance(double v);
     double GetSmoothingConductance() const;
   private:
   protected:
     ~itkThresholdSegmentationLevelSetImageFilterID2ID2D();
     itkThresholdSegmentationLevelSetImageFilterID2ID2D();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     itkThresholdSegmentationLevelSetImageFilterID2ID2D(itkThresholdSegmentationLevelSetImageFilterID2ID2D const & arg0);
     void operator=(itkThresholdSegmentationLevelSetImageFilterID2ID2D const & arg0);
 };


 class itkThresholdSegmentationLevelSetImageFilterID2ID2D_Pointer {
   public:
     itkThresholdSegmentationLevelSetImageFilterID2ID2D_Pointer();
     itkThresholdSegmentationLevelSetImageFilterID2ID2D_Pointer(itkThresholdSegmentationLevelSetImageFilterID2ID2D_Pointer const & p);
     itkThresholdSegmentationLevelSetImageFilterID2ID2D_Pointer(itkThresholdSegmentationLevelSetImageFilterID2ID2D * p);
     ~itkThresholdSegmentationLevelSetImageFilterID2ID2D_Pointer();
     itkThresholdSegmentationLevelSetImageFilterID2ID2D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdSegmentationLevelSetImageFilterID2ID2D * GetPointer() const;
     bool operator<(itkThresholdSegmentationLevelSetImageFilterID2ID2D_Pointer const & r) const;
     bool operator>(itkThresholdSegmentationLevelSetImageFilterID2ID2D_Pointer const & r) const;
     bool operator<=(itkThresholdSegmentationLevelSetImageFilterID2ID2D_Pointer const & r) const;
     bool operator>=(itkThresholdSegmentationLevelSetImageFilterID2ID2D_Pointer const & r) const;
     itkThresholdSegmentationLevelSetImageFilterID2ID2D_Pointer & operator=(itkThresholdSegmentationLevelSetImageFilterID2ID2D_Pointer const & r);
     itkThresholdSegmentationLevelSetImageFilterID2ID2D_Pointer & operator=(itkThresholdSegmentationLevelSetImageFilterID2ID2D * r);
     itkThresholdSegmentationLevelSetImageFilterID2ID2D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdSegmentationLevelSetImageFilterID3ID3D : public itkSegmentationLevelSetImageFilterID3ID3D {
   public:
     virtual char const * GetNameOfClass() const;
     static itkThresholdSegmentationLevelSetImageFilterID3ID3D_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetUpperThreshold(double v);
     void SetLowerThreshold(double v);
     double GetUpperThreshold() const;
     double GetLowerThreshold() const;
     void SetEdgeWeight(double v);
     double GetEdgeWeight() const;
     void SetSmoothingIterations(int v);
     int GetSmoothingIterations() const;
     void SetSmoothingTimeStep(double v);
     double GetSmoothingTimeStep() const;
     void SetSmoothingConductance(double v);
     double GetSmoothingConductance() const;
   private:
   protected:
     ~itkThresholdSegmentationLevelSetImageFilterID3ID3D();
     itkThresholdSegmentationLevelSetImageFilterID3ID3D();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     itkThresholdSegmentationLevelSetImageFilterID3ID3D(itkThresholdSegmentationLevelSetImageFilterID3ID3D const & arg0);
     void operator=(itkThresholdSegmentationLevelSetImageFilterID3ID3D const & arg0);
 };


 class itkThresholdSegmentationLevelSetImageFilterID3ID3D_Pointer {
   public:
     itkThresholdSegmentationLevelSetImageFilterID3ID3D_Pointer();
     itkThresholdSegmentationLevelSetImageFilterID3ID3D_Pointer(itkThresholdSegmentationLevelSetImageFilterID3ID3D_Pointer const & p);
     itkThresholdSegmentationLevelSetImageFilterID3ID3D_Pointer(itkThresholdSegmentationLevelSetImageFilterID3ID3D * p);
     ~itkThresholdSegmentationLevelSetImageFilterID3ID3D_Pointer();
     itkThresholdSegmentationLevelSetImageFilterID3ID3D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdSegmentationLevelSetImageFilterID3ID3D * GetPointer() const;
     bool operator<(itkThresholdSegmentationLevelSetImageFilterID3ID3D_Pointer const & r) const;
     bool operator>(itkThresholdSegmentationLevelSetImageFilterID3ID3D_Pointer const & r) const;
     bool operator<=(itkThresholdSegmentationLevelSetImageFilterID3ID3D_Pointer const & r) const;
     bool operator>=(itkThresholdSegmentationLevelSetImageFilterID3ID3D_Pointer const & r) const;
     itkThresholdSegmentationLevelSetImageFilterID3ID3D_Pointer & operator=(itkThresholdSegmentationLevelSetImageFilterID3ID3D_Pointer const & r);
     itkThresholdSegmentationLevelSetImageFilterID3ID3D_Pointer & operator=(itkThresholdSegmentationLevelSetImageFilterID3ID3D * r);
     itkThresholdSegmentationLevelSetImageFilterID3ID3D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdSegmentationLevelSetImageFilterIF2IF2F : public itkSegmentationLevelSetImageFilterIF2IF2F {
   public:
     virtual char const * GetNameOfClass() const;
     static itkThresholdSegmentationLevelSetImageFilterIF2IF2F_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetUpperThreshold(float v);
     void SetLowerThreshold(float v);
     float GetUpperThreshold() const;
     float GetLowerThreshold() const;
     void SetEdgeWeight(float v);
     float GetEdgeWeight() const;
     void SetSmoothingIterations(int v);
     int GetSmoothingIterations() const;
     void SetSmoothingTimeStep(float v);
     float GetSmoothingTimeStep() const;
     void SetSmoothingConductance(float v);
     float GetSmoothingConductance() const;
   private:
   protected:
     ~itkThresholdSegmentationLevelSetImageFilterIF2IF2F();
     itkThresholdSegmentationLevelSetImageFilterIF2IF2F();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     itkThresholdSegmentationLevelSetImageFilterIF2IF2F(itkThresholdSegmentationLevelSetImageFilterIF2IF2F const & arg0);
     void operator=(itkThresholdSegmentationLevelSetImageFilterIF2IF2F const & arg0);
 };


 class itkThresholdSegmentationLevelSetImageFilterIF2IF2F_Pointer {
   public:
     itkThresholdSegmentationLevelSetImageFilterIF2IF2F_Pointer();
     itkThresholdSegmentationLevelSetImageFilterIF2IF2F_Pointer(itkThresholdSegmentationLevelSetImageFilterIF2IF2F_Pointer const & p);
     itkThresholdSegmentationLevelSetImageFilterIF2IF2F_Pointer(itkThresholdSegmentationLevelSetImageFilterIF2IF2F * p);
     ~itkThresholdSegmentationLevelSetImageFilterIF2IF2F_Pointer();
     itkThresholdSegmentationLevelSetImageFilterIF2IF2F * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdSegmentationLevelSetImageFilterIF2IF2F * GetPointer() const;
     bool operator<(itkThresholdSegmentationLevelSetImageFilterIF2IF2F_Pointer const & r) const;
     bool operator>(itkThresholdSegmentationLevelSetImageFilterIF2IF2F_Pointer const & r) const;
     bool operator<=(itkThresholdSegmentationLevelSetImageFilterIF2IF2F_Pointer const & r) const;
     bool operator>=(itkThresholdSegmentationLevelSetImageFilterIF2IF2F_Pointer const & r) const;
     itkThresholdSegmentationLevelSetImageFilterIF2IF2F_Pointer & operator=(itkThresholdSegmentationLevelSetImageFilterIF2IF2F_Pointer const & r);
     itkThresholdSegmentationLevelSetImageFilterIF2IF2F_Pointer & operator=(itkThresholdSegmentationLevelSetImageFilterIF2IF2F * r);
     itkThresholdSegmentationLevelSetImageFilterIF2IF2F * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdSegmentationLevelSetImageFilterIF3IF3F : public itkSegmentationLevelSetImageFilterIF3IF3F {
   public:
     virtual char const * GetNameOfClass() const;
     static itkThresholdSegmentationLevelSetImageFilterIF3IF3F_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetUpperThreshold(float v);
     void SetLowerThreshold(float v);
     float GetUpperThreshold() const;
     float GetLowerThreshold() const;
     void SetEdgeWeight(float v);
     float GetEdgeWeight() const;
     void SetSmoothingIterations(int v);
     int GetSmoothingIterations() const;
     void SetSmoothingTimeStep(float v);
     float GetSmoothingTimeStep() const;
     void SetSmoothingConductance(float v);
     float GetSmoothingConductance() const;
   private:
   protected:
     ~itkThresholdSegmentationLevelSetImageFilterIF3IF3F();
     itkThresholdSegmentationLevelSetImageFilterIF3IF3F();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     itkThresholdSegmentationLevelSetImageFilterIF3IF3F(itkThresholdSegmentationLevelSetImageFilterIF3IF3F const & arg0);
     void operator=(itkThresholdSegmentationLevelSetImageFilterIF3IF3F const & arg0);
 };


 class itkThresholdSegmentationLevelSetImageFilterIF3IF3F_Pointer {
   public:
     itkThresholdSegmentationLevelSetImageFilterIF3IF3F_Pointer();
     itkThresholdSegmentationLevelSetImageFilterIF3IF3F_Pointer(itkThresholdSegmentationLevelSetImageFilterIF3IF3F_Pointer const & p);
     itkThresholdSegmentationLevelSetImageFilterIF3IF3F_Pointer(itkThresholdSegmentationLevelSetImageFilterIF3IF3F * p);
     ~itkThresholdSegmentationLevelSetImageFilterIF3IF3F_Pointer();
     itkThresholdSegmentationLevelSetImageFilterIF3IF3F * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdSegmentationLevelSetImageFilterIF3IF3F * GetPointer() const;
     bool operator<(itkThresholdSegmentationLevelSetImageFilterIF3IF3F_Pointer const & r) const;
     bool operator>(itkThresholdSegmentationLevelSetImageFilterIF3IF3F_Pointer const & r) const;
     bool operator<=(itkThresholdSegmentationLevelSetImageFilterIF3IF3F_Pointer const & r) const;
     bool operator>=(itkThresholdSegmentationLevelSetImageFilterIF3IF3F_Pointer const & r) const;
     itkThresholdSegmentationLevelSetImageFilterIF3IF3F_Pointer & operator=(itkThresholdSegmentationLevelSetImageFilterIF3IF3F_Pointer const & r);
     itkThresholdSegmentationLevelSetImageFilterIF3IF3F_Pointer & operator=(itkThresholdSegmentationLevelSetImageFilterIF3IF3F * r);
     itkThresholdSegmentationLevelSetImageFilterIF3IF3F * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


