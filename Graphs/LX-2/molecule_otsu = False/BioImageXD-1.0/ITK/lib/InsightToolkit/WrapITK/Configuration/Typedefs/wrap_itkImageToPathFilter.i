// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkImageToPathFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkImageToPathFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkImageToPathFilterGuile
#endif
#ifdef SWIGJAVA
%module itkImageToPathFilterJava
#endif
#ifdef SWIGLUA
%module itkImageToPathFilterLua
#endif
#ifdef SWIGMODULA3
%module itkImageToPathFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkImageToPathFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkImageToPathFilterOcaml
#endif
#ifdef SWIGPERL
%module itkImageToPathFilterPerl
#endif
#ifdef SWIGPERL5
%module itkImageToPathFilterPerl5
#endif
#ifdef SWIGPHP
%module itkImageToPathFilterPhp
#endif
#ifdef SWIGPHP4
%module itkImageToPathFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkImageToPathFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkImageToPathFilterPike
#endif
#ifdef SWIGPYTHON
%module itkImageToPathFilterPython
#endif
#ifdef SWIGR
%module itkImageToPathFilterR
#endif
#ifdef SWIGRUBY
%module itkImageToPathFilterRuby
#endif
#ifdef SWIGSEXP
%module itkImageToPathFilterSexp
#endif
#ifdef SWIGTCL
%module itkImageToPathFilterTcl
#endif
#ifdef SWIGXML
%module itkImageToPathFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Review.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImage.i
%import wrap_itkPathSource.i


%include itk.i
%include wrap_itkImageToPathFilter_ext.i


 class itkImageToPathFilterID2PLPP2 : public itkPathSourcePLPP2 {
   public:
     enum  {  InputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageD2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageD2 const * image);
     itkImageD2 const * GetInput();
     itkImageD2 const * GetInput(unsigned int idx);
   private:
     itkImageToPathFilterID2PLPP2(itkImageToPathFilterID2PLPP2 const & arg0);
     void operator=(itkImageToPathFilterID2PLPP2 const & arg0);
   protected:
     itkImageToPathFilterID2PLPP2();
     ~itkImageToPathFilterID2PLPP2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageToPathFilterID2PLPP2_Pointer {
   public:
     itkImageToPathFilterID2PLPP2_Pointer();
     itkImageToPathFilterID2PLPP2_Pointer(itkImageToPathFilterID2PLPP2_Pointer const & p);
     itkImageToPathFilterID2PLPP2_Pointer(itkImageToPathFilterID2PLPP2 * p);
     ~itkImageToPathFilterID2PLPP2_Pointer();
     itkImageToPathFilterID2PLPP2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToPathFilterID2PLPP2 * GetPointer() const;
     bool operator<(itkImageToPathFilterID2PLPP2_Pointer const & r) const;
     bool operator>(itkImageToPathFilterID2PLPP2_Pointer const & r) const;
     bool operator<=(itkImageToPathFilterID2PLPP2_Pointer const & r) const;
     bool operator>=(itkImageToPathFilterID2PLPP2_Pointer const & r) const;
     itkImageToPathFilterID2PLPP2_Pointer & operator=(itkImageToPathFilterID2PLPP2_Pointer const & r);
     itkImageToPathFilterID2PLPP2_Pointer & operator=(itkImageToPathFilterID2PLPP2 * r);
     itkImageToPathFilterID2PLPP2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToPathFilterID3PLPP3 : public itkPathSourcePLPP3 {
   public:
     enum  {  InputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageD3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageD3 const * image);
     itkImageD3 const * GetInput();
     itkImageD3 const * GetInput(unsigned int idx);
   private:
     itkImageToPathFilterID3PLPP3(itkImageToPathFilterID3PLPP3 const & arg0);
     void operator=(itkImageToPathFilterID3PLPP3 const & arg0);
   protected:
     itkImageToPathFilterID3PLPP3();
     ~itkImageToPathFilterID3PLPP3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageToPathFilterID3PLPP3_Pointer {
   public:
     itkImageToPathFilterID3PLPP3_Pointer();
     itkImageToPathFilterID3PLPP3_Pointer(itkImageToPathFilterID3PLPP3_Pointer const & p);
     itkImageToPathFilterID3PLPP3_Pointer(itkImageToPathFilterID3PLPP3 * p);
     ~itkImageToPathFilterID3PLPP3_Pointer();
     itkImageToPathFilterID3PLPP3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToPathFilterID3PLPP3 * GetPointer() const;
     bool operator<(itkImageToPathFilterID3PLPP3_Pointer const & r) const;
     bool operator>(itkImageToPathFilterID3PLPP3_Pointer const & r) const;
     bool operator<=(itkImageToPathFilterID3PLPP3_Pointer const & r) const;
     bool operator>=(itkImageToPathFilterID3PLPP3_Pointer const & r) const;
     itkImageToPathFilterID3PLPP3_Pointer & operator=(itkImageToPathFilterID3PLPP3_Pointer const & r);
     itkImageToPathFilterID3PLPP3_Pointer & operator=(itkImageToPathFilterID3PLPP3 * r);
     itkImageToPathFilterID3PLPP3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToPathFilterIF2PLPP2 : public itkPathSourcePLPP2 {
   public:
     enum  {  InputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageF2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageF2 const * image);
     itkImageF2 const * GetInput();
     itkImageF2 const * GetInput(unsigned int idx);
   private:
     itkImageToPathFilterIF2PLPP2(itkImageToPathFilterIF2PLPP2 const & arg0);
     void operator=(itkImageToPathFilterIF2PLPP2 const & arg0);
   protected:
     itkImageToPathFilterIF2PLPP2();
     ~itkImageToPathFilterIF2PLPP2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageToPathFilterIF2PLPP2_Pointer {
   public:
     itkImageToPathFilterIF2PLPP2_Pointer();
     itkImageToPathFilterIF2PLPP2_Pointer(itkImageToPathFilterIF2PLPP2_Pointer const & p);
     itkImageToPathFilterIF2PLPP2_Pointer(itkImageToPathFilterIF2PLPP2 * p);
     ~itkImageToPathFilterIF2PLPP2_Pointer();
     itkImageToPathFilterIF2PLPP2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToPathFilterIF2PLPP2 * GetPointer() const;
     bool operator<(itkImageToPathFilterIF2PLPP2_Pointer const & r) const;
     bool operator>(itkImageToPathFilterIF2PLPP2_Pointer const & r) const;
     bool operator<=(itkImageToPathFilterIF2PLPP2_Pointer const & r) const;
     bool operator>=(itkImageToPathFilterIF2PLPP2_Pointer const & r) const;
     itkImageToPathFilterIF2PLPP2_Pointer & operator=(itkImageToPathFilterIF2PLPP2_Pointer const & r);
     itkImageToPathFilterIF2PLPP2_Pointer & operator=(itkImageToPathFilterIF2PLPP2 * r);
     itkImageToPathFilterIF2PLPP2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToPathFilterIF3PLPP3 : public itkPathSourcePLPP3 {
   public:
     enum  {  InputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageF3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageF3 const * image);
     itkImageF3 const * GetInput();
     itkImageF3 const * GetInput(unsigned int idx);
   private:
     itkImageToPathFilterIF3PLPP3(itkImageToPathFilterIF3PLPP3 const & arg0);
     void operator=(itkImageToPathFilterIF3PLPP3 const & arg0);
   protected:
     itkImageToPathFilterIF3PLPP3();
     ~itkImageToPathFilterIF3PLPP3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageToPathFilterIF3PLPP3_Pointer {
   public:
     itkImageToPathFilterIF3PLPP3_Pointer();
     itkImageToPathFilterIF3PLPP3_Pointer(itkImageToPathFilterIF3PLPP3_Pointer const & p);
     itkImageToPathFilterIF3PLPP3_Pointer(itkImageToPathFilterIF3PLPP3 * p);
     ~itkImageToPathFilterIF3PLPP3_Pointer();
     itkImageToPathFilterIF3PLPP3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToPathFilterIF3PLPP3 * GetPointer() const;
     bool operator<(itkImageToPathFilterIF3PLPP3_Pointer const & r) const;
     bool operator>(itkImageToPathFilterIF3PLPP3_Pointer const & r) const;
     bool operator<=(itkImageToPathFilterIF3PLPP3_Pointer const & r) const;
     bool operator>=(itkImageToPathFilterIF3PLPP3_Pointer const & r) const;
     itkImageToPathFilterIF3PLPP3_Pointer & operator=(itkImageToPathFilterIF3PLPP3_Pointer const & r);
     itkImageToPathFilterIF3PLPP3_Pointer & operator=(itkImageToPathFilterIF3PLPP3 * r);
     itkImageToPathFilterIF3PLPP3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToPathFilterIUC2PLPP2 : public itkPathSourcePLPP2 {
   public:
     enum  {  InputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUC2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUC2 const * image);
     itkImageUC2 const * GetInput();
     itkImageUC2 const * GetInput(unsigned int idx);
   private:
     itkImageToPathFilterIUC2PLPP2(itkImageToPathFilterIUC2PLPP2 const & arg0);
     void operator=(itkImageToPathFilterIUC2PLPP2 const & arg0);
   protected:
     itkImageToPathFilterIUC2PLPP2();
     ~itkImageToPathFilterIUC2PLPP2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageToPathFilterIUC2PLPP2_Pointer {
   public:
     itkImageToPathFilterIUC2PLPP2_Pointer();
     itkImageToPathFilterIUC2PLPP2_Pointer(itkImageToPathFilterIUC2PLPP2_Pointer const & p);
     itkImageToPathFilterIUC2PLPP2_Pointer(itkImageToPathFilterIUC2PLPP2 * p);
     ~itkImageToPathFilterIUC2PLPP2_Pointer();
     itkImageToPathFilterIUC2PLPP2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToPathFilterIUC2PLPP2 * GetPointer() const;
     bool operator<(itkImageToPathFilterIUC2PLPP2_Pointer const & r) const;
     bool operator>(itkImageToPathFilterIUC2PLPP2_Pointer const & r) const;
     bool operator<=(itkImageToPathFilterIUC2PLPP2_Pointer const & r) const;
     bool operator>=(itkImageToPathFilterIUC2PLPP2_Pointer const & r) const;
     itkImageToPathFilterIUC2PLPP2_Pointer & operator=(itkImageToPathFilterIUC2PLPP2_Pointer const & r);
     itkImageToPathFilterIUC2PLPP2_Pointer & operator=(itkImageToPathFilterIUC2PLPP2 * r);
     itkImageToPathFilterIUC2PLPP2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToPathFilterIUC3PLPP3 : public itkPathSourcePLPP3 {
   public:
     enum  {  InputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUC3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUC3 const * image);
     itkImageUC3 const * GetInput();
     itkImageUC3 const * GetInput(unsigned int idx);
   private:
     itkImageToPathFilterIUC3PLPP3(itkImageToPathFilterIUC3PLPP3 const & arg0);
     void operator=(itkImageToPathFilterIUC3PLPP3 const & arg0);
   protected:
     itkImageToPathFilterIUC3PLPP3();
     ~itkImageToPathFilterIUC3PLPP3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageToPathFilterIUC3PLPP3_Pointer {
   public:
     itkImageToPathFilterIUC3PLPP3_Pointer();
     itkImageToPathFilterIUC3PLPP3_Pointer(itkImageToPathFilterIUC3PLPP3_Pointer const & p);
     itkImageToPathFilterIUC3PLPP3_Pointer(itkImageToPathFilterIUC3PLPP3 * p);
     ~itkImageToPathFilterIUC3PLPP3_Pointer();
     itkImageToPathFilterIUC3PLPP3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToPathFilterIUC3PLPP3 * GetPointer() const;
     bool operator<(itkImageToPathFilterIUC3PLPP3_Pointer const & r) const;
     bool operator>(itkImageToPathFilterIUC3PLPP3_Pointer const & r) const;
     bool operator<=(itkImageToPathFilterIUC3PLPP3_Pointer const & r) const;
     bool operator>=(itkImageToPathFilterIUC3PLPP3_Pointer const & r) const;
     itkImageToPathFilterIUC3PLPP3_Pointer & operator=(itkImageToPathFilterIUC3PLPP3_Pointer const & r);
     itkImageToPathFilterIUC3PLPP3_Pointer & operator=(itkImageToPathFilterIUC3PLPP3 * r);
     itkImageToPathFilterIUC3PLPP3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToPathFilterIUL2PLPP2 : public itkPathSourcePLPP2 {
   public:
     enum  {  InputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUL2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUL2 const * image);
     itkImageUL2 const * GetInput();
     itkImageUL2 const * GetInput(unsigned int idx);
   private:
     itkImageToPathFilterIUL2PLPP2(itkImageToPathFilterIUL2PLPP2 const & arg0);
     void operator=(itkImageToPathFilterIUL2PLPP2 const & arg0);
   protected:
     itkImageToPathFilterIUL2PLPP2();
     ~itkImageToPathFilterIUL2PLPP2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageToPathFilterIUL2PLPP2_Pointer {
   public:
     itkImageToPathFilterIUL2PLPP2_Pointer();
     itkImageToPathFilterIUL2PLPP2_Pointer(itkImageToPathFilterIUL2PLPP2_Pointer const & p);
     itkImageToPathFilterIUL2PLPP2_Pointer(itkImageToPathFilterIUL2PLPP2 * p);
     ~itkImageToPathFilterIUL2PLPP2_Pointer();
     itkImageToPathFilterIUL2PLPP2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToPathFilterIUL2PLPP2 * GetPointer() const;
     bool operator<(itkImageToPathFilterIUL2PLPP2_Pointer const & r) const;
     bool operator>(itkImageToPathFilterIUL2PLPP2_Pointer const & r) const;
     bool operator<=(itkImageToPathFilterIUL2PLPP2_Pointer const & r) const;
     bool operator>=(itkImageToPathFilterIUL2PLPP2_Pointer const & r) const;
     itkImageToPathFilterIUL2PLPP2_Pointer & operator=(itkImageToPathFilterIUL2PLPP2_Pointer const & r);
     itkImageToPathFilterIUL2PLPP2_Pointer & operator=(itkImageToPathFilterIUL2PLPP2 * r);
     itkImageToPathFilterIUL2PLPP2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToPathFilterIUL3PLPP3 : public itkPathSourcePLPP3 {
   public:
     enum  {  InputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUL3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUL3 const * image);
     itkImageUL3 const * GetInput();
     itkImageUL3 const * GetInput(unsigned int idx);
   private:
     itkImageToPathFilterIUL3PLPP3(itkImageToPathFilterIUL3PLPP3 const & arg0);
     void operator=(itkImageToPathFilterIUL3PLPP3 const & arg0);
   protected:
     itkImageToPathFilterIUL3PLPP3();
     ~itkImageToPathFilterIUL3PLPP3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageToPathFilterIUL3PLPP3_Pointer {
   public:
     itkImageToPathFilterIUL3PLPP3_Pointer();
     itkImageToPathFilterIUL3PLPP3_Pointer(itkImageToPathFilterIUL3PLPP3_Pointer const & p);
     itkImageToPathFilterIUL3PLPP3_Pointer(itkImageToPathFilterIUL3PLPP3 * p);
     ~itkImageToPathFilterIUL3PLPP3_Pointer();
     itkImageToPathFilterIUL3PLPP3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToPathFilterIUL3PLPP3 * GetPointer() const;
     bool operator<(itkImageToPathFilterIUL3PLPP3_Pointer const & r) const;
     bool operator>(itkImageToPathFilterIUL3PLPP3_Pointer const & r) const;
     bool operator<=(itkImageToPathFilterIUL3PLPP3_Pointer const & r) const;
     bool operator>=(itkImageToPathFilterIUL3PLPP3_Pointer const & r) const;
     itkImageToPathFilterIUL3PLPP3_Pointer & operator=(itkImageToPathFilterIUL3PLPP3_Pointer const & r);
     itkImageToPathFilterIUL3PLPP3_Pointer & operator=(itkImageToPathFilterIUL3PLPP3 * r);
     itkImageToPathFilterIUL3PLPP3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToPathFilterIUS2PLPP2 : public itkPathSourcePLPP2 {
   public:
     enum  {  InputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUS2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUS2 const * image);
     itkImageUS2 const * GetInput();
     itkImageUS2 const * GetInput(unsigned int idx);
   private:
     itkImageToPathFilterIUS2PLPP2(itkImageToPathFilterIUS2PLPP2 const & arg0);
     void operator=(itkImageToPathFilterIUS2PLPP2 const & arg0);
   protected:
     itkImageToPathFilterIUS2PLPP2();
     ~itkImageToPathFilterIUS2PLPP2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageToPathFilterIUS2PLPP2_Pointer {
   public:
     itkImageToPathFilterIUS2PLPP2_Pointer();
     itkImageToPathFilterIUS2PLPP2_Pointer(itkImageToPathFilterIUS2PLPP2_Pointer const & p);
     itkImageToPathFilterIUS2PLPP2_Pointer(itkImageToPathFilterIUS2PLPP2 * p);
     ~itkImageToPathFilterIUS2PLPP2_Pointer();
     itkImageToPathFilterIUS2PLPP2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToPathFilterIUS2PLPP2 * GetPointer() const;
     bool operator<(itkImageToPathFilterIUS2PLPP2_Pointer const & r) const;
     bool operator>(itkImageToPathFilterIUS2PLPP2_Pointer const & r) const;
     bool operator<=(itkImageToPathFilterIUS2PLPP2_Pointer const & r) const;
     bool operator>=(itkImageToPathFilterIUS2PLPP2_Pointer const & r) const;
     itkImageToPathFilterIUS2PLPP2_Pointer & operator=(itkImageToPathFilterIUS2PLPP2_Pointer const & r);
     itkImageToPathFilterIUS2PLPP2_Pointer & operator=(itkImageToPathFilterIUS2PLPP2 * r);
     itkImageToPathFilterIUS2PLPP2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToPathFilterIUS3PLPP3 : public itkPathSourcePLPP3 {
   public:
     enum  {  InputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUS3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUS3 const * image);
     itkImageUS3 const * GetInput();
     itkImageUS3 const * GetInput(unsigned int idx);
   private:
     itkImageToPathFilterIUS3PLPP3(itkImageToPathFilterIUS3PLPP3 const & arg0);
     void operator=(itkImageToPathFilterIUS3PLPP3 const & arg0);
   protected:
     itkImageToPathFilterIUS3PLPP3();
     ~itkImageToPathFilterIUS3PLPP3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageToPathFilterIUS3PLPP3_Pointer {
   public:
     itkImageToPathFilterIUS3PLPP3_Pointer();
     itkImageToPathFilterIUS3PLPP3_Pointer(itkImageToPathFilterIUS3PLPP3_Pointer const & p);
     itkImageToPathFilterIUS3PLPP3_Pointer(itkImageToPathFilterIUS3PLPP3 * p);
     ~itkImageToPathFilterIUS3PLPP3_Pointer();
     itkImageToPathFilterIUS3PLPP3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToPathFilterIUS3PLPP3 * GetPointer() const;
     bool operator<(itkImageToPathFilterIUS3PLPP3_Pointer const & r) const;
     bool operator>(itkImageToPathFilterIUS3PLPP3_Pointer const & r) const;
     bool operator<=(itkImageToPathFilterIUS3PLPP3_Pointer const & r) const;
     bool operator>=(itkImageToPathFilterIUS3PLPP3_Pointer const & r) const;
     itkImageToPathFilterIUS3PLPP3_Pointer & operator=(itkImageToPathFilterIUS3PLPP3_Pointer const & r);
     itkImageToPathFilterIUS3PLPP3_Pointer & operator=(itkImageToPathFilterIUS3PLPP3 * r);
     itkImageToPathFilterIUS3PLPP3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


