// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkFFTRealToComplexConjugateImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkFFTRealToComplexConjugateImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkFFTRealToComplexConjugateImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkFFTRealToComplexConjugateImageFilterJava
#endif
#ifdef SWIGLUA
%module itkFFTRealToComplexConjugateImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkFFTRealToComplexConjugateImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkFFTRealToComplexConjugateImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkFFTRealToComplexConjugateImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkFFTRealToComplexConjugateImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkFFTRealToComplexConjugateImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkFFTRealToComplexConjugateImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkFFTRealToComplexConjugateImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkFFTRealToComplexConjugateImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkFFTRealToComplexConjugateImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkFFTRealToComplexConjugateImageFilterPython
#endif
#ifdef SWIGR
%module itkFFTRealToComplexConjugateImageFilterR
#endif
#ifdef SWIGRUBY
%module itkFFTRealToComplexConjugateImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkFFTRealToComplexConjugateImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkFFTRealToComplexConjugateImageFilterTcl
#endif
#ifdef SWIGXML
%module itkFFTRealToComplexConjugateImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "FFT.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImageToImageFilterB.i


%include itk.i
%include wrap_itkFFTRealToComplexConjugateImageFilter_ext.i


 class itkFFTRealToComplexConjugateImageFilterF2 : public itkImageToImageFilterIF2ICF2 {
   public:
     virtual char const * GetNameOfClass() const;
     static itkFFTRealToComplexConjugateImageFilterF2_Pointer New();
   private:
     itkFFTRealToComplexConjugateImageFilterF2(itkFFTRealToComplexConjugateImageFilterF2 const & arg0);
     void operator=(itkFFTRealToComplexConjugateImageFilterF2 const & arg0);
   protected:
     itkFFTRealToComplexConjugateImageFilterF2();
     ~itkFFTRealToComplexConjugateImageFilterF2();
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual bool FullMatrix() = 0;
 };


 class itkFFTRealToComplexConjugateImageFilterF2_Pointer {
   public:
     itkFFTRealToComplexConjugateImageFilterF2_Pointer();
     itkFFTRealToComplexConjugateImageFilterF2_Pointer(itkFFTRealToComplexConjugateImageFilterF2_Pointer const & p);
     itkFFTRealToComplexConjugateImageFilterF2_Pointer(itkFFTRealToComplexConjugateImageFilterF2 * p);
     ~itkFFTRealToComplexConjugateImageFilterF2_Pointer();
     itkFFTRealToComplexConjugateImageFilterF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkFFTRealToComplexConjugateImageFilterF2 * GetPointer() const;
     bool operator<(itkFFTRealToComplexConjugateImageFilterF2_Pointer const & r) const;
     bool operator>(itkFFTRealToComplexConjugateImageFilterF2_Pointer const & r) const;
     bool operator<=(itkFFTRealToComplexConjugateImageFilterF2_Pointer const & r) const;
     bool operator>=(itkFFTRealToComplexConjugateImageFilterF2_Pointer const & r) const;
     itkFFTRealToComplexConjugateImageFilterF2_Pointer & operator=(itkFFTRealToComplexConjugateImageFilterF2_Pointer const & r);
     itkFFTRealToComplexConjugateImageFilterF2_Pointer & operator=(itkFFTRealToComplexConjugateImageFilterF2 * r);
     itkFFTRealToComplexConjugateImageFilterF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkFFTRealToComplexConjugateImageFilterF3 : public itkImageToImageFilterIF3ICF3 {
   public:
     virtual char const * GetNameOfClass() const;
     static itkFFTRealToComplexConjugateImageFilterF3_Pointer New();
   private:
     itkFFTRealToComplexConjugateImageFilterF3(itkFFTRealToComplexConjugateImageFilterF3 const & arg0);
     void operator=(itkFFTRealToComplexConjugateImageFilterF3 const & arg0);
   protected:
     itkFFTRealToComplexConjugateImageFilterF3();
     ~itkFFTRealToComplexConjugateImageFilterF3();
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual bool FullMatrix() = 0;
 };


 class itkFFTRealToComplexConjugateImageFilterF3_Pointer {
   public:
     itkFFTRealToComplexConjugateImageFilterF3_Pointer();
     itkFFTRealToComplexConjugateImageFilterF3_Pointer(itkFFTRealToComplexConjugateImageFilterF3_Pointer const & p);
     itkFFTRealToComplexConjugateImageFilterF3_Pointer(itkFFTRealToComplexConjugateImageFilterF3 * p);
     ~itkFFTRealToComplexConjugateImageFilterF3_Pointer();
     itkFFTRealToComplexConjugateImageFilterF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkFFTRealToComplexConjugateImageFilterF3 * GetPointer() const;
     bool operator<(itkFFTRealToComplexConjugateImageFilterF3_Pointer const & r) const;
     bool operator>(itkFFTRealToComplexConjugateImageFilterF3_Pointer const & r) const;
     bool operator<=(itkFFTRealToComplexConjugateImageFilterF3_Pointer const & r) const;
     bool operator>=(itkFFTRealToComplexConjugateImageFilterF3_Pointer const & r) const;
     itkFFTRealToComplexConjugateImageFilterF3_Pointer & operator=(itkFFTRealToComplexConjugateImageFilterF3_Pointer const & r);
     itkFFTRealToComplexConjugateImageFilterF3_Pointer & operator=(itkFFTRealToComplexConjugateImageFilterF3 * r);
     itkFFTRealToComplexConjugateImageFilterF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


