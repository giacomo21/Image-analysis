// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkHardConnectedComponentImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkHardConnectedComponentImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkHardConnectedComponentImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkHardConnectedComponentImageFilterJava
#endif
#ifdef SWIGLUA
%module itkHardConnectedComponentImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkHardConnectedComponentImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkHardConnectedComponentImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkHardConnectedComponentImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkHardConnectedComponentImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkHardConnectedComponentImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkHardConnectedComponentImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkHardConnectedComponentImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkHardConnectedComponentImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkHardConnectedComponentImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkHardConnectedComponentImageFilterPython
#endif
#ifdef SWIGR
%module itkHardConnectedComponentImageFilterR
#endif
#ifdef SWIGRUBY
%module itkHardConnectedComponentImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkHardConnectedComponentImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkHardConnectedComponentImageFilterTcl
#endif
#ifdef SWIGXML
%module itkHardConnectedComponentImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "SegmentationAndThreshold.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkIndex.i
%import wrap_itkImageToImageFilterA.i


%include itk.i
%include wrap_itkHardConnectedComponentImageFilter_ext.i


 class itkHardConnectedComponentImageFilterIUC2IUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  IntConvertibleToOutputCheck = 1 };
     enum  {  UnsignedShortConvertibleToOutputCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  UnsignedCharConvertibleToOutputCheck = 1 };
     enum  {  OutputIncrementDecrementOperatorsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkHardConnectedComponentImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetObjectSeed(itkIndex2 const & seed);
   private:
   protected:
     itkHardConnectedComponentImageFilterIUC2IUC2();
     ~itkHardConnectedComponentImageFilterIUC2IUC2();
     itkHardConnectedComponentImageFilterIUC2IUC2(itkHardConnectedComponentImageFilterIUC2IUC2 const & arg0);
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkHardConnectedComponentImageFilterIUC2IUC2_Pointer {
   public:
     itkHardConnectedComponentImageFilterIUC2IUC2_Pointer();
     itkHardConnectedComponentImageFilterIUC2IUC2_Pointer(itkHardConnectedComponentImageFilterIUC2IUC2_Pointer const & p);
     itkHardConnectedComponentImageFilterIUC2IUC2_Pointer(itkHardConnectedComponentImageFilterIUC2IUC2 * p);
     ~itkHardConnectedComponentImageFilterIUC2IUC2_Pointer();
     itkHardConnectedComponentImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHardConnectedComponentImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkHardConnectedComponentImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkHardConnectedComponentImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkHardConnectedComponentImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkHardConnectedComponentImageFilterIUC2IUC2_Pointer const & r) const;
     itkHardConnectedComponentImageFilterIUC2IUC2_Pointer & operator=(itkHardConnectedComponentImageFilterIUC2IUC2_Pointer const & r);
     itkHardConnectedComponentImageFilterIUC2IUC2_Pointer & operator=(itkHardConnectedComponentImageFilterIUC2IUC2 * r);
     itkHardConnectedComponentImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHardConnectedComponentImageFilterIUC2IUL2 : public itkImageToImageFilterIUC2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  IntConvertibleToOutputCheck = 1 };
     enum  {  UnsignedShortConvertibleToOutputCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  UnsignedCharConvertibleToOutputCheck = 1 };
     enum  {  OutputIncrementDecrementOperatorsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkHardConnectedComponentImageFilterIUC2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetObjectSeed(itkIndex2 const & seed);
   private:
   protected:
     itkHardConnectedComponentImageFilterIUC2IUL2();
     ~itkHardConnectedComponentImageFilterIUC2IUL2();
     itkHardConnectedComponentImageFilterIUC2IUL2(itkHardConnectedComponentImageFilterIUC2IUL2 const & arg0);
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkHardConnectedComponentImageFilterIUC2IUL2_Pointer {
   public:
     itkHardConnectedComponentImageFilterIUC2IUL2_Pointer();
     itkHardConnectedComponentImageFilterIUC2IUL2_Pointer(itkHardConnectedComponentImageFilterIUC2IUL2_Pointer const & p);
     itkHardConnectedComponentImageFilterIUC2IUL2_Pointer(itkHardConnectedComponentImageFilterIUC2IUL2 * p);
     ~itkHardConnectedComponentImageFilterIUC2IUL2_Pointer();
     itkHardConnectedComponentImageFilterIUC2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHardConnectedComponentImageFilterIUC2IUL2 * GetPointer() const;
     bool operator<(itkHardConnectedComponentImageFilterIUC2IUL2_Pointer const & r) const;
     bool operator>(itkHardConnectedComponentImageFilterIUC2IUL2_Pointer const & r) const;
     bool operator<=(itkHardConnectedComponentImageFilterIUC2IUL2_Pointer const & r) const;
     bool operator>=(itkHardConnectedComponentImageFilterIUC2IUL2_Pointer const & r) const;
     itkHardConnectedComponentImageFilterIUC2IUL2_Pointer & operator=(itkHardConnectedComponentImageFilterIUC2IUL2_Pointer const & r);
     itkHardConnectedComponentImageFilterIUC2IUL2_Pointer & operator=(itkHardConnectedComponentImageFilterIUC2IUL2 * r);
     itkHardConnectedComponentImageFilterIUC2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHardConnectedComponentImageFilterIUC2IUS2 : public itkImageToImageFilterIUC2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  IntConvertibleToOutputCheck = 1 };
     enum  {  UnsignedShortConvertibleToOutputCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  UnsignedCharConvertibleToOutputCheck = 1 };
     enum  {  OutputIncrementDecrementOperatorsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkHardConnectedComponentImageFilterIUC2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetObjectSeed(itkIndex2 const & seed);
   private:
   protected:
     itkHardConnectedComponentImageFilterIUC2IUS2();
     ~itkHardConnectedComponentImageFilterIUC2IUS2();
     itkHardConnectedComponentImageFilterIUC2IUS2(itkHardConnectedComponentImageFilterIUC2IUS2 const & arg0);
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkHardConnectedComponentImageFilterIUC2IUS2_Pointer {
   public:
     itkHardConnectedComponentImageFilterIUC2IUS2_Pointer();
     itkHardConnectedComponentImageFilterIUC2IUS2_Pointer(itkHardConnectedComponentImageFilterIUC2IUS2_Pointer const & p);
     itkHardConnectedComponentImageFilterIUC2IUS2_Pointer(itkHardConnectedComponentImageFilterIUC2IUS2 * p);
     ~itkHardConnectedComponentImageFilterIUC2IUS2_Pointer();
     itkHardConnectedComponentImageFilterIUC2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHardConnectedComponentImageFilterIUC2IUS2 * GetPointer() const;
     bool operator<(itkHardConnectedComponentImageFilterIUC2IUS2_Pointer const & r) const;
     bool operator>(itkHardConnectedComponentImageFilterIUC2IUS2_Pointer const & r) const;
     bool operator<=(itkHardConnectedComponentImageFilterIUC2IUS2_Pointer const & r) const;
     bool operator>=(itkHardConnectedComponentImageFilterIUC2IUS2_Pointer const & r) const;
     itkHardConnectedComponentImageFilterIUC2IUS2_Pointer & operator=(itkHardConnectedComponentImageFilterIUC2IUS2_Pointer const & r);
     itkHardConnectedComponentImageFilterIUC2IUS2_Pointer & operator=(itkHardConnectedComponentImageFilterIUC2IUS2 * r);
     itkHardConnectedComponentImageFilterIUC2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHardConnectedComponentImageFilterIUC3IUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  IntConvertibleToOutputCheck = 1 };
     enum  {  UnsignedShortConvertibleToOutputCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  UnsignedCharConvertibleToOutputCheck = 1 };
     enum  {  OutputIncrementDecrementOperatorsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkHardConnectedComponentImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetObjectSeed(itkIndex3 const & seed);
   private:
   protected:
     itkHardConnectedComponentImageFilterIUC3IUC3();
     ~itkHardConnectedComponentImageFilterIUC3IUC3();
     itkHardConnectedComponentImageFilterIUC3IUC3(itkHardConnectedComponentImageFilterIUC3IUC3 const & arg0);
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkHardConnectedComponentImageFilterIUC3IUC3_Pointer {
   public:
     itkHardConnectedComponentImageFilterIUC3IUC3_Pointer();
     itkHardConnectedComponentImageFilterIUC3IUC3_Pointer(itkHardConnectedComponentImageFilterIUC3IUC3_Pointer const & p);
     itkHardConnectedComponentImageFilterIUC3IUC3_Pointer(itkHardConnectedComponentImageFilterIUC3IUC3 * p);
     ~itkHardConnectedComponentImageFilterIUC3IUC3_Pointer();
     itkHardConnectedComponentImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHardConnectedComponentImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkHardConnectedComponentImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkHardConnectedComponentImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkHardConnectedComponentImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkHardConnectedComponentImageFilterIUC3IUC3_Pointer const & r) const;
     itkHardConnectedComponentImageFilterIUC3IUC3_Pointer & operator=(itkHardConnectedComponentImageFilterIUC3IUC3_Pointer const & r);
     itkHardConnectedComponentImageFilterIUC3IUC3_Pointer & operator=(itkHardConnectedComponentImageFilterIUC3IUC3 * r);
     itkHardConnectedComponentImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHardConnectedComponentImageFilterIUC3IUL3 : public itkImageToImageFilterIUC3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  IntConvertibleToOutputCheck = 1 };
     enum  {  UnsignedShortConvertibleToOutputCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  UnsignedCharConvertibleToOutputCheck = 1 };
     enum  {  OutputIncrementDecrementOperatorsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkHardConnectedComponentImageFilterIUC3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetObjectSeed(itkIndex3 const & seed);
   private:
   protected:
     itkHardConnectedComponentImageFilterIUC3IUL3();
     ~itkHardConnectedComponentImageFilterIUC3IUL3();
     itkHardConnectedComponentImageFilterIUC3IUL3(itkHardConnectedComponentImageFilterIUC3IUL3 const & arg0);
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkHardConnectedComponentImageFilterIUC3IUL3_Pointer {
   public:
     itkHardConnectedComponentImageFilterIUC3IUL3_Pointer();
     itkHardConnectedComponentImageFilterIUC3IUL3_Pointer(itkHardConnectedComponentImageFilterIUC3IUL3_Pointer const & p);
     itkHardConnectedComponentImageFilterIUC3IUL3_Pointer(itkHardConnectedComponentImageFilterIUC3IUL3 * p);
     ~itkHardConnectedComponentImageFilterIUC3IUL3_Pointer();
     itkHardConnectedComponentImageFilterIUC3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHardConnectedComponentImageFilterIUC3IUL3 * GetPointer() const;
     bool operator<(itkHardConnectedComponentImageFilterIUC3IUL3_Pointer const & r) const;
     bool operator>(itkHardConnectedComponentImageFilterIUC3IUL3_Pointer const & r) const;
     bool operator<=(itkHardConnectedComponentImageFilterIUC3IUL3_Pointer const & r) const;
     bool operator>=(itkHardConnectedComponentImageFilterIUC3IUL3_Pointer const & r) const;
     itkHardConnectedComponentImageFilterIUC3IUL3_Pointer & operator=(itkHardConnectedComponentImageFilterIUC3IUL3_Pointer const & r);
     itkHardConnectedComponentImageFilterIUC3IUL3_Pointer & operator=(itkHardConnectedComponentImageFilterIUC3IUL3 * r);
     itkHardConnectedComponentImageFilterIUC3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHardConnectedComponentImageFilterIUC3IUS3 : public itkImageToImageFilterIUC3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  IntConvertibleToOutputCheck = 1 };
     enum  {  UnsignedShortConvertibleToOutputCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  UnsignedCharConvertibleToOutputCheck = 1 };
     enum  {  OutputIncrementDecrementOperatorsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkHardConnectedComponentImageFilterIUC3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetObjectSeed(itkIndex3 const & seed);
   private:
   protected:
     itkHardConnectedComponentImageFilterIUC3IUS3();
     ~itkHardConnectedComponentImageFilterIUC3IUS3();
     itkHardConnectedComponentImageFilterIUC3IUS3(itkHardConnectedComponentImageFilterIUC3IUS3 const & arg0);
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkHardConnectedComponentImageFilterIUC3IUS3_Pointer {
   public:
     itkHardConnectedComponentImageFilterIUC3IUS3_Pointer();
     itkHardConnectedComponentImageFilterIUC3IUS3_Pointer(itkHardConnectedComponentImageFilterIUC3IUS3_Pointer const & p);
     itkHardConnectedComponentImageFilterIUC3IUS3_Pointer(itkHardConnectedComponentImageFilterIUC3IUS3 * p);
     ~itkHardConnectedComponentImageFilterIUC3IUS3_Pointer();
     itkHardConnectedComponentImageFilterIUC3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHardConnectedComponentImageFilterIUC3IUS3 * GetPointer() const;
     bool operator<(itkHardConnectedComponentImageFilterIUC3IUS3_Pointer const & r) const;
     bool operator>(itkHardConnectedComponentImageFilterIUC3IUS3_Pointer const & r) const;
     bool operator<=(itkHardConnectedComponentImageFilterIUC3IUS3_Pointer const & r) const;
     bool operator>=(itkHardConnectedComponentImageFilterIUC3IUS3_Pointer const & r) const;
     itkHardConnectedComponentImageFilterIUC3IUS3_Pointer & operator=(itkHardConnectedComponentImageFilterIUC3IUS3_Pointer const & r);
     itkHardConnectedComponentImageFilterIUC3IUS3_Pointer & operator=(itkHardConnectedComponentImageFilterIUC3IUS3 * r);
     itkHardConnectedComponentImageFilterIUC3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHardConnectedComponentImageFilterIUL2IUC2 : public itkImageToImageFilterIUL2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  IntConvertibleToOutputCheck = 1 };
     enum  {  UnsignedShortConvertibleToOutputCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  UnsignedCharConvertibleToOutputCheck = 1 };
     enum  {  OutputIncrementDecrementOperatorsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkHardConnectedComponentImageFilterIUL2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetObjectSeed(itkIndex2 const & seed);
   private:
   protected:
     itkHardConnectedComponentImageFilterIUL2IUC2();
     ~itkHardConnectedComponentImageFilterIUL2IUC2();
     itkHardConnectedComponentImageFilterIUL2IUC2(itkHardConnectedComponentImageFilterIUL2IUC2 const & arg0);
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkHardConnectedComponentImageFilterIUL2IUC2_Pointer {
   public:
     itkHardConnectedComponentImageFilterIUL2IUC2_Pointer();
     itkHardConnectedComponentImageFilterIUL2IUC2_Pointer(itkHardConnectedComponentImageFilterIUL2IUC2_Pointer const & p);
     itkHardConnectedComponentImageFilterIUL2IUC2_Pointer(itkHardConnectedComponentImageFilterIUL2IUC2 * p);
     ~itkHardConnectedComponentImageFilterIUL2IUC2_Pointer();
     itkHardConnectedComponentImageFilterIUL2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHardConnectedComponentImageFilterIUL2IUC2 * GetPointer() const;
     bool operator<(itkHardConnectedComponentImageFilterIUL2IUC2_Pointer const & r) const;
     bool operator>(itkHardConnectedComponentImageFilterIUL2IUC2_Pointer const & r) const;
     bool operator<=(itkHardConnectedComponentImageFilterIUL2IUC2_Pointer const & r) const;
     bool operator>=(itkHardConnectedComponentImageFilterIUL2IUC2_Pointer const & r) const;
     itkHardConnectedComponentImageFilterIUL2IUC2_Pointer & operator=(itkHardConnectedComponentImageFilterIUL2IUC2_Pointer const & r);
     itkHardConnectedComponentImageFilterIUL2IUC2_Pointer & operator=(itkHardConnectedComponentImageFilterIUL2IUC2 * r);
     itkHardConnectedComponentImageFilterIUL2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHardConnectedComponentImageFilterIUL2IUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  IntConvertibleToOutputCheck = 1 };
     enum  {  UnsignedShortConvertibleToOutputCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  UnsignedCharConvertibleToOutputCheck = 1 };
     enum  {  OutputIncrementDecrementOperatorsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkHardConnectedComponentImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetObjectSeed(itkIndex2 const & seed);
   private:
   protected:
     itkHardConnectedComponentImageFilterIUL2IUL2();
     ~itkHardConnectedComponentImageFilterIUL2IUL2();
     itkHardConnectedComponentImageFilterIUL2IUL2(itkHardConnectedComponentImageFilterIUL2IUL2 const & arg0);
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkHardConnectedComponentImageFilterIUL2IUL2_Pointer {
   public:
     itkHardConnectedComponentImageFilterIUL2IUL2_Pointer();
     itkHardConnectedComponentImageFilterIUL2IUL2_Pointer(itkHardConnectedComponentImageFilterIUL2IUL2_Pointer const & p);
     itkHardConnectedComponentImageFilterIUL2IUL2_Pointer(itkHardConnectedComponentImageFilterIUL2IUL2 * p);
     ~itkHardConnectedComponentImageFilterIUL2IUL2_Pointer();
     itkHardConnectedComponentImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHardConnectedComponentImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkHardConnectedComponentImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkHardConnectedComponentImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkHardConnectedComponentImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkHardConnectedComponentImageFilterIUL2IUL2_Pointer const & r) const;
     itkHardConnectedComponentImageFilterIUL2IUL2_Pointer & operator=(itkHardConnectedComponentImageFilterIUL2IUL2_Pointer const & r);
     itkHardConnectedComponentImageFilterIUL2IUL2_Pointer & operator=(itkHardConnectedComponentImageFilterIUL2IUL2 * r);
     itkHardConnectedComponentImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHardConnectedComponentImageFilterIUL2IUS2 : public itkImageToImageFilterIUL2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  IntConvertibleToOutputCheck = 1 };
     enum  {  UnsignedShortConvertibleToOutputCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  UnsignedCharConvertibleToOutputCheck = 1 };
     enum  {  OutputIncrementDecrementOperatorsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkHardConnectedComponentImageFilterIUL2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetObjectSeed(itkIndex2 const & seed);
   private:
   protected:
     itkHardConnectedComponentImageFilterIUL2IUS2();
     ~itkHardConnectedComponentImageFilterIUL2IUS2();
     itkHardConnectedComponentImageFilterIUL2IUS2(itkHardConnectedComponentImageFilterIUL2IUS2 const & arg0);
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkHardConnectedComponentImageFilterIUL2IUS2_Pointer {
   public:
     itkHardConnectedComponentImageFilterIUL2IUS2_Pointer();
     itkHardConnectedComponentImageFilterIUL2IUS2_Pointer(itkHardConnectedComponentImageFilterIUL2IUS2_Pointer const & p);
     itkHardConnectedComponentImageFilterIUL2IUS2_Pointer(itkHardConnectedComponentImageFilterIUL2IUS2 * p);
     ~itkHardConnectedComponentImageFilterIUL2IUS2_Pointer();
     itkHardConnectedComponentImageFilterIUL2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHardConnectedComponentImageFilterIUL2IUS2 * GetPointer() const;
     bool operator<(itkHardConnectedComponentImageFilterIUL2IUS2_Pointer const & r) const;
     bool operator>(itkHardConnectedComponentImageFilterIUL2IUS2_Pointer const & r) const;
     bool operator<=(itkHardConnectedComponentImageFilterIUL2IUS2_Pointer const & r) const;
     bool operator>=(itkHardConnectedComponentImageFilterIUL2IUS2_Pointer const & r) const;
     itkHardConnectedComponentImageFilterIUL2IUS2_Pointer & operator=(itkHardConnectedComponentImageFilterIUL2IUS2_Pointer const & r);
     itkHardConnectedComponentImageFilterIUL2IUS2_Pointer & operator=(itkHardConnectedComponentImageFilterIUL2IUS2 * r);
     itkHardConnectedComponentImageFilterIUL2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHardConnectedComponentImageFilterIUL3IUC3 : public itkImageToImageFilterIUL3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  IntConvertibleToOutputCheck = 1 };
     enum  {  UnsignedShortConvertibleToOutputCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  UnsignedCharConvertibleToOutputCheck = 1 };
     enum  {  OutputIncrementDecrementOperatorsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkHardConnectedComponentImageFilterIUL3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetObjectSeed(itkIndex3 const & seed);
   private:
   protected:
     itkHardConnectedComponentImageFilterIUL3IUC3();
     ~itkHardConnectedComponentImageFilterIUL3IUC3();
     itkHardConnectedComponentImageFilterIUL3IUC3(itkHardConnectedComponentImageFilterIUL3IUC3 const & arg0);
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkHardConnectedComponentImageFilterIUL3IUC3_Pointer {
   public:
     itkHardConnectedComponentImageFilterIUL3IUC3_Pointer();
     itkHardConnectedComponentImageFilterIUL3IUC3_Pointer(itkHardConnectedComponentImageFilterIUL3IUC3_Pointer const & p);
     itkHardConnectedComponentImageFilterIUL3IUC3_Pointer(itkHardConnectedComponentImageFilterIUL3IUC3 * p);
     ~itkHardConnectedComponentImageFilterIUL3IUC3_Pointer();
     itkHardConnectedComponentImageFilterIUL3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHardConnectedComponentImageFilterIUL3IUC3 * GetPointer() const;
     bool operator<(itkHardConnectedComponentImageFilterIUL3IUC3_Pointer const & r) const;
     bool operator>(itkHardConnectedComponentImageFilterIUL3IUC3_Pointer const & r) const;
     bool operator<=(itkHardConnectedComponentImageFilterIUL3IUC3_Pointer const & r) const;
     bool operator>=(itkHardConnectedComponentImageFilterIUL3IUC3_Pointer const & r) const;
     itkHardConnectedComponentImageFilterIUL3IUC3_Pointer & operator=(itkHardConnectedComponentImageFilterIUL3IUC3_Pointer const & r);
     itkHardConnectedComponentImageFilterIUL3IUC3_Pointer & operator=(itkHardConnectedComponentImageFilterIUL3IUC3 * r);
     itkHardConnectedComponentImageFilterIUL3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHardConnectedComponentImageFilterIUL3IUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  IntConvertibleToOutputCheck = 1 };
     enum  {  UnsignedShortConvertibleToOutputCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  UnsignedCharConvertibleToOutputCheck = 1 };
     enum  {  OutputIncrementDecrementOperatorsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkHardConnectedComponentImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetObjectSeed(itkIndex3 const & seed);
   private:
   protected:
     itkHardConnectedComponentImageFilterIUL3IUL3();
     ~itkHardConnectedComponentImageFilterIUL3IUL3();
     itkHardConnectedComponentImageFilterIUL3IUL3(itkHardConnectedComponentImageFilterIUL3IUL3 const & arg0);
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkHardConnectedComponentImageFilterIUL3IUL3_Pointer {
   public:
     itkHardConnectedComponentImageFilterIUL3IUL3_Pointer();
     itkHardConnectedComponentImageFilterIUL3IUL3_Pointer(itkHardConnectedComponentImageFilterIUL3IUL3_Pointer const & p);
     itkHardConnectedComponentImageFilterIUL3IUL3_Pointer(itkHardConnectedComponentImageFilterIUL3IUL3 * p);
     ~itkHardConnectedComponentImageFilterIUL3IUL3_Pointer();
     itkHardConnectedComponentImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHardConnectedComponentImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkHardConnectedComponentImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkHardConnectedComponentImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkHardConnectedComponentImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkHardConnectedComponentImageFilterIUL3IUL3_Pointer const & r) const;
     itkHardConnectedComponentImageFilterIUL3IUL3_Pointer & operator=(itkHardConnectedComponentImageFilterIUL3IUL3_Pointer const & r);
     itkHardConnectedComponentImageFilterIUL3IUL3_Pointer & operator=(itkHardConnectedComponentImageFilterIUL3IUL3 * r);
     itkHardConnectedComponentImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHardConnectedComponentImageFilterIUL3IUS3 : public itkImageToImageFilterIUL3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  IntConvertibleToOutputCheck = 1 };
     enum  {  UnsignedShortConvertibleToOutputCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  UnsignedCharConvertibleToOutputCheck = 1 };
     enum  {  OutputIncrementDecrementOperatorsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkHardConnectedComponentImageFilterIUL3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetObjectSeed(itkIndex3 const & seed);
   private:
   protected:
     itkHardConnectedComponentImageFilterIUL3IUS3();
     ~itkHardConnectedComponentImageFilterIUL3IUS3();
     itkHardConnectedComponentImageFilterIUL3IUS3(itkHardConnectedComponentImageFilterIUL3IUS3 const & arg0);
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkHardConnectedComponentImageFilterIUL3IUS3_Pointer {
   public:
     itkHardConnectedComponentImageFilterIUL3IUS3_Pointer();
     itkHardConnectedComponentImageFilterIUL3IUS3_Pointer(itkHardConnectedComponentImageFilterIUL3IUS3_Pointer const & p);
     itkHardConnectedComponentImageFilterIUL3IUS3_Pointer(itkHardConnectedComponentImageFilterIUL3IUS3 * p);
     ~itkHardConnectedComponentImageFilterIUL3IUS3_Pointer();
     itkHardConnectedComponentImageFilterIUL3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHardConnectedComponentImageFilterIUL3IUS3 * GetPointer() const;
     bool operator<(itkHardConnectedComponentImageFilterIUL3IUS3_Pointer const & r) const;
     bool operator>(itkHardConnectedComponentImageFilterIUL3IUS3_Pointer const & r) const;
     bool operator<=(itkHardConnectedComponentImageFilterIUL3IUS3_Pointer const & r) const;
     bool operator>=(itkHardConnectedComponentImageFilterIUL3IUS3_Pointer const & r) const;
     itkHardConnectedComponentImageFilterIUL3IUS3_Pointer & operator=(itkHardConnectedComponentImageFilterIUL3IUS3_Pointer const & r);
     itkHardConnectedComponentImageFilterIUL3IUS3_Pointer & operator=(itkHardConnectedComponentImageFilterIUL3IUS3 * r);
     itkHardConnectedComponentImageFilterIUL3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHardConnectedComponentImageFilterIUS2IUC2 : public itkImageToImageFilterIUS2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  IntConvertibleToOutputCheck = 1 };
     enum  {  UnsignedShortConvertibleToOutputCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  UnsignedCharConvertibleToOutputCheck = 1 };
     enum  {  OutputIncrementDecrementOperatorsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkHardConnectedComponentImageFilterIUS2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetObjectSeed(itkIndex2 const & seed);
   private:
   protected:
     itkHardConnectedComponentImageFilterIUS2IUC2();
     ~itkHardConnectedComponentImageFilterIUS2IUC2();
     itkHardConnectedComponentImageFilterIUS2IUC2(itkHardConnectedComponentImageFilterIUS2IUC2 const & arg0);
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkHardConnectedComponentImageFilterIUS2IUC2_Pointer {
   public:
     itkHardConnectedComponentImageFilterIUS2IUC2_Pointer();
     itkHardConnectedComponentImageFilterIUS2IUC2_Pointer(itkHardConnectedComponentImageFilterIUS2IUC2_Pointer const & p);
     itkHardConnectedComponentImageFilterIUS2IUC2_Pointer(itkHardConnectedComponentImageFilterIUS2IUC2 * p);
     ~itkHardConnectedComponentImageFilterIUS2IUC2_Pointer();
     itkHardConnectedComponentImageFilterIUS2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHardConnectedComponentImageFilterIUS2IUC2 * GetPointer() const;
     bool operator<(itkHardConnectedComponentImageFilterIUS2IUC2_Pointer const & r) const;
     bool operator>(itkHardConnectedComponentImageFilterIUS2IUC2_Pointer const & r) const;
     bool operator<=(itkHardConnectedComponentImageFilterIUS2IUC2_Pointer const & r) const;
     bool operator>=(itkHardConnectedComponentImageFilterIUS2IUC2_Pointer const & r) const;
     itkHardConnectedComponentImageFilterIUS2IUC2_Pointer & operator=(itkHardConnectedComponentImageFilterIUS2IUC2_Pointer const & r);
     itkHardConnectedComponentImageFilterIUS2IUC2_Pointer & operator=(itkHardConnectedComponentImageFilterIUS2IUC2 * r);
     itkHardConnectedComponentImageFilterIUS2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHardConnectedComponentImageFilterIUS2IUL2 : public itkImageToImageFilterIUS2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  IntConvertibleToOutputCheck = 1 };
     enum  {  UnsignedShortConvertibleToOutputCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  UnsignedCharConvertibleToOutputCheck = 1 };
     enum  {  OutputIncrementDecrementOperatorsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkHardConnectedComponentImageFilterIUS2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetObjectSeed(itkIndex2 const & seed);
   private:
   protected:
     itkHardConnectedComponentImageFilterIUS2IUL2();
     ~itkHardConnectedComponentImageFilterIUS2IUL2();
     itkHardConnectedComponentImageFilterIUS2IUL2(itkHardConnectedComponentImageFilterIUS2IUL2 const & arg0);
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkHardConnectedComponentImageFilterIUS2IUL2_Pointer {
   public:
     itkHardConnectedComponentImageFilterIUS2IUL2_Pointer();
     itkHardConnectedComponentImageFilterIUS2IUL2_Pointer(itkHardConnectedComponentImageFilterIUS2IUL2_Pointer const & p);
     itkHardConnectedComponentImageFilterIUS2IUL2_Pointer(itkHardConnectedComponentImageFilterIUS2IUL2 * p);
     ~itkHardConnectedComponentImageFilterIUS2IUL2_Pointer();
     itkHardConnectedComponentImageFilterIUS2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHardConnectedComponentImageFilterIUS2IUL2 * GetPointer() const;
     bool operator<(itkHardConnectedComponentImageFilterIUS2IUL2_Pointer const & r) const;
     bool operator>(itkHardConnectedComponentImageFilterIUS2IUL2_Pointer const & r) const;
     bool operator<=(itkHardConnectedComponentImageFilterIUS2IUL2_Pointer const & r) const;
     bool operator>=(itkHardConnectedComponentImageFilterIUS2IUL2_Pointer const & r) const;
     itkHardConnectedComponentImageFilterIUS2IUL2_Pointer & operator=(itkHardConnectedComponentImageFilterIUS2IUL2_Pointer const & r);
     itkHardConnectedComponentImageFilterIUS2IUL2_Pointer & operator=(itkHardConnectedComponentImageFilterIUS2IUL2 * r);
     itkHardConnectedComponentImageFilterIUS2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHardConnectedComponentImageFilterIUS2IUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  IntConvertibleToOutputCheck = 1 };
     enum  {  UnsignedShortConvertibleToOutputCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  UnsignedCharConvertibleToOutputCheck = 1 };
     enum  {  OutputIncrementDecrementOperatorsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkHardConnectedComponentImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetObjectSeed(itkIndex2 const & seed);
   private:
   protected:
     itkHardConnectedComponentImageFilterIUS2IUS2();
     ~itkHardConnectedComponentImageFilterIUS2IUS2();
     itkHardConnectedComponentImageFilterIUS2IUS2(itkHardConnectedComponentImageFilterIUS2IUS2 const & arg0);
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkHardConnectedComponentImageFilterIUS2IUS2_Pointer {
   public:
     itkHardConnectedComponentImageFilterIUS2IUS2_Pointer();
     itkHardConnectedComponentImageFilterIUS2IUS2_Pointer(itkHardConnectedComponentImageFilterIUS2IUS2_Pointer const & p);
     itkHardConnectedComponentImageFilterIUS2IUS2_Pointer(itkHardConnectedComponentImageFilterIUS2IUS2 * p);
     ~itkHardConnectedComponentImageFilterIUS2IUS2_Pointer();
     itkHardConnectedComponentImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHardConnectedComponentImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkHardConnectedComponentImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkHardConnectedComponentImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkHardConnectedComponentImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkHardConnectedComponentImageFilterIUS2IUS2_Pointer const & r) const;
     itkHardConnectedComponentImageFilterIUS2IUS2_Pointer & operator=(itkHardConnectedComponentImageFilterIUS2IUS2_Pointer const & r);
     itkHardConnectedComponentImageFilterIUS2IUS2_Pointer & operator=(itkHardConnectedComponentImageFilterIUS2IUS2 * r);
     itkHardConnectedComponentImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHardConnectedComponentImageFilterIUS3IUC3 : public itkImageToImageFilterIUS3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  IntConvertibleToOutputCheck = 1 };
     enum  {  UnsignedShortConvertibleToOutputCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  UnsignedCharConvertibleToOutputCheck = 1 };
     enum  {  OutputIncrementDecrementOperatorsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkHardConnectedComponentImageFilterIUS3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetObjectSeed(itkIndex3 const & seed);
   private:
   protected:
     itkHardConnectedComponentImageFilterIUS3IUC3();
     ~itkHardConnectedComponentImageFilterIUS3IUC3();
     itkHardConnectedComponentImageFilterIUS3IUC3(itkHardConnectedComponentImageFilterIUS3IUC3 const & arg0);
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkHardConnectedComponentImageFilterIUS3IUC3_Pointer {
   public:
     itkHardConnectedComponentImageFilterIUS3IUC3_Pointer();
     itkHardConnectedComponentImageFilterIUS3IUC3_Pointer(itkHardConnectedComponentImageFilterIUS3IUC3_Pointer const & p);
     itkHardConnectedComponentImageFilterIUS3IUC3_Pointer(itkHardConnectedComponentImageFilterIUS3IUC3 * p);
     ~itkHardConnectedComponentImageFilterIUS3IUC3_Pointer();
     itkHardConnectedComponentImageFilterIUS3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHardConnectedComponentImageFilterIUS3IUC3 * GetPointer() const;
     bool operator<(itkHardConnectedComponentImageFilterIUS3IUC3_Pointer const & r) const;
     bool operator>(itkHardConnectedComponentImageFilterIUS3IUC3_Pointer const & r) const;
     bool operator<=(itkHardConnectedComponentImageFilterIUS3IUC3_Pointer const & r) const;
     bool operator>=(itkHardConnectedComponentImageFilterIUS3IUC3_Pointer const & r) const;
     itkHardConnectedComponentImageFilterIUS3IUC3_Pointer & operator=(itkHardConnectedComponentImageFilterIUS3IUC3_Pointer const & r);
     itkHardConnectedComponentImageFilterIUS3IUC3_Pointer & operator=(itkHardConnectedComponentImageFilterIUS3IUC3 * r);
     itkHardConnectedComponentImageFilterIUS3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHardConnectedComponentImageFilterIUS3IUL3 : public itkImageToImageFilterIUS3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  IntConvertibleToOutputCheck = 1 };
     enum  {  UnsignedShortConvertibleToOutputCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  UnsignedCharConvertibleToOutputCheck = 1 };
     enum  {  OutputIncrementDecrementOperatorsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkHardConnectedComponentImageFilterIUS3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetObjectSeed(itkIndex3 const & seed);
   private:
   protected:
     itkHardConnectedComponentImageFilterIUS3IUL3();
     ~itkHardConnectedComponentImageFilterIUS3IUL3();
     itkHardConnectedComponentImageFilterIUS3IUL3(itkHardConnectedComponentImageFilterIUS3IUL3 const & arg0);
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkHardConnectedComponentImageFilterIUS3IUL3_Pointer {
   public:
     itkHardConnectedComponentImageFilterIUS3IUL3_Pointer();
     itkHardConnectedComponentImageFilterIUS3IUL3_Pointer(itkHardConnectedComponentImageFilterIUS3IUL3_Pointer const & p);
     itkHardConnectedComponentImageFilterIUS3IUL3_Pointer(itkHardConnectedComponentImageFilterIUS3IUL3 * p);
     ~itkHardConnectedComponentImageFilterIUS3IUL3_Pointer();
     itkHardConnectedComponentImageFilterIUS3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHardConnectedComponentImageFilterIUS3IUL3 * GetPointer() const;
     bool operator<(itkHardConnectedComponentImageFilterIUS3IUL3_Pointer const & r) const;
     bool operator>(itkHardConnectedComponentImageFilterIUS3IUL3_Pointer const & r) const;
     bool operator<=(itkHardConnectedComponentImageFilterIUS3IUL3_Pointer const & r) const;
     bool operator>=(itkHardConnectedComponentImageFilterIUS3IUL3_Pointer const & r) const;
     itkHardConnectedComponentImageFilterIUS3IUL3_Pointer & operator=(itkHardConnectedComponentImageFilterIUS3IUL3_Pointer const & r);
     itkHardConnectedComponentImageFilterIUS3IUL3_Pointer & operator=(itkHardConnectedComponentImageFilterIUS3IUL3 * r);
     itkHardConnectedComponentImageFilterIUS3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHardConnectedComponentImageFilterIUS3IUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  IntConvertibleToOutputCheck = 1 };
     enum  {  UnsignedShortConvertibleToOutputCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  UnsignedCharConvertibleToOutputCheck = 1 };
     enum  {  OutputIncrementDecrementOperatorsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkHardConnectedComponentImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetObjectSeed(itkIndex3 const & seed);
   private:
   protected:
     itkHardConnectedComponentImageFilterIUS3IUS3();
     ~itkHardConnectedComponentImageFilterIUS3IUS3();
     itkHardConnectedComponentImageFilterIUS3IUS3(itkHardConnectedComponentImageFilterIUS3IUS3 const & arg0);
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkHardConnectedComponentImageFilterIUS3IUS3_Pointer {
   public:
     itkHardConnectedComponentImageFilterIUS3IUS3_Pointer();
     itkHardConnectedComponentImageFilterIUS3IUS3_Pointer(itkHardConnectedComponentImageFilterIUS3IUS3_Pointer const & p);
     itkHardConnectedComponentImageFilterIUS3IUS3_Pointer(itkHardConnectedComponentImageFilterIUS3IUS3 * p);
     ~itkHardConnectedComponentImageFilterIUS3IUS3_Pointer();
     itkHardConnectedComponentImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHardConnectedComponentImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkHardConnectedComponentImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkHardConnectedComponentImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkHardConnectedComponentImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkHardConnectedComponentImageFilterIUS3IUS3_Pointer const & r) const;
     itkHardConnectedComponentImageFilterIUS3IUS3_Pointer & operator=(itkHardConnectedComponentImageFilterIUS3IUS3_Pointer const & r);
     itkHardConnectedComponentImageFilterIUS3IUS3_Pointer & operator=(itkHardConnectedComponentImageFilterIUS3IUS3 * r);
     itkHardConnectedComponentImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


