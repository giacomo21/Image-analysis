# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _ITKRegionsPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_ITKRegionsPython', [dirname(__file__)])
        except ImportError:
            import _ITKRegionsPython
            return _ITKRegionsPython
        if fp is not None:
            try:
                _mod = imp.load_module('_ITKRegionsPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _ITKRegionsPython = swig_import_helper()
    del swig_import_helper
else:
    import _ITKRegionsPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkSizePython
import itkIndexPython
import itkOffsetPython
class itkRegion(object):
    """Proxy of C++ itkRegion class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ITK_UNSTRUCTURED_REGION = _ITKRegionsPython.itkRegion_ITK_UNSTRUCTURED_REGION
    ITK_STRUCTURED_REGION = _ITKRegionsPython.itkRegion_ITK_STRUCTURED_REGION
    def GetNameOfClass(self):
        """GetNameOfClass(self) -> char"""
        return _ITKRegionsPython.itkRegion_GetNameOfClass(self)

    def GetRegionType(self):
        """GetRegionType(self) -> RegionType"""
        return _ITKRegionsPython.itkRegion_GetRegionType(self)

    def Print(self, *args):
        """
        Print(self, ostream os, itkIndent indent = 0)
        Print(self, ostream os)
        """
        return _ITKRegionsPython.itkRegion_Print(self, *args)

    __swig_destroy__ = _ITKRegionsPython.delete_itkRegion
itkRegion.GetNameOfClass = new_instancemethod(_ITKRegionsPython.itkRegion_GetNameOfClass,None,itkRegion)
itkRegion.GetRegionType = new_instancemethod(_ITKRegionsPython.itkRegion_GetRegionType,None,itkRegion)
itkRegion.Print = new_instancemethod(_ITKRegionsPython.itkRegion_Print,None,itkRegion)
itkRegion_swigregister = _ITKRegionsPython.itkRegion_swigregister
itkRegion_swigregister(itkRegion)

class itkImageRegion2(itkRegion):
    """Proxy of C++ itkImageRegion2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    ImageDimension = _ITKRegionsPython.itkImageRegion2_ImageDimension
    SliceDimension = _ITKRegionsPython.itkImageRegion2_SliceDimension
    def GetImageDimension():
        """GetImageDimension() -> unsigned int"""
        return _ITKRegionsPython.itkImageRegion2_GetImageDimension()

    GetImageDimension = staticmethod(GetImageDimension)
    __swig_destroy__ = _ITKRegionsPython.delete_itkImageRegion2
    def __init__(self, *args): 
        """
        __init__(self) -> itkImageRegion2
        __init__(self, itkImageRegion2 region) -> itkImageRegion2
        __init__(self, itkIndex2 index, itkSize2 size) -> itkImageRegion2
        __init__(self, itkSize2 size) -> itkImageRegion2
        """
        _ITKRegionsPython.itkImageRegion2_swiginit(self,_ITKRegionsPython.new_itkImageRegion2(*args))
    def SetSize(self, *args):
        """
        SetSize(self, itkSize2 size)
        SetSize(self, unsigned long i, unsigned long sze)
        """
        return _ITKRegionsPython.itkImageRegion2_SetSize(self, *args)

    def GetSize(self, *args):
        """
        GetSize(self) -> itkSize2
        GetSize(self, unsigned long i) -> unsigned long
        """
        return _ITKRegionsPython.itkImageRegion2_GetSize(self, *args)

    def SetIndex(self, *args):
        """
        SetIndex(self, itkIndex2 index)
        SetIndex(self, unsigned long i, long sze)
        """
        return _ITKRegionsPython.itkImageRegion2_SetIndex(self, *args)

    def GetIndex(self, *args):
        """
        GetIndex(self) -> itkIndex2
        GetIndex(self, unsigned long i) -> long
        """
        return _ITKRegionsPython.itkImageRegion2_GetIndex(self, *args)

    def __eq__(self, *args):
        """__eq__(self, itkImageRegion2 region) -> bool"""
        return _ITKRegionsPython.itkImageRegion2___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(self, itkImageRegion2 region) -> bool"""
        return _ITKRegionsPython.itkImageRegion2___ne__(self, *args)

    def IsInside(self, *args):
        """
        IsInside(self, itkIndex2 index) -> bool
        IsInside(self, itkImageRegion2 region) -> bool
        """
        return _ITKRegionsPython.itkImageRegion2_IsInside(self, *args)

    def GetNumberOfPixels(self):
        """GetNumberOfPixels(self) -> unsigned long"""
        return _ITKRegionsPython.itkImageRegion2_GetNumberOfPixels(self)

    def PadByRadius(self, *args):
        """
        PadByRadius(self, long radius)
        PadByRadius(self, long radius)
        PadByRadius(self, itkSize2 radius)
        """
        return _ITKRegionsPython.itkImageRegion2_PadByRadius(self, *args)

    def Crop(self, *args):
        """Crop(self, itkImageRegion2 region) -> bool"""
        return _ITKRegionsPython.itkImageRegion2_Crop(self, *args)

    def Slice(self, *args):
        """Slice(self, unsigned long dim) -> itk::ImageRegion<(1u)>"""
        return _ITKRegionsPython.itkImageRegion2_Slice(self, *args)

    def __repr__(self):
        """__repr__(self) -> string"""
        return _ITKRegionsPython.itkImageRegion2___repr__(self)

itkImageRegion2.SetSize = new_instancemethod(_ITKRegionsPython.itkImageRegion2_SetSize,None,itkImageRegion2)
itkImageRegion2.GetSize = new_instancemethod(_ITKRegionsPython.itkImageRegion2_GetSize,None,itkImageRegion2)
itkImageRegion2.SetIndex = new_instancemethod(_ITKRegionsPython.itkImageRegion2_SetIndex,None,itkImageRegion2)
itkImageRegion2.GetIndex = new_instancemethod(_ITKRegionsPython.itkImageRegion2_GetIndex,None,itkImageRegion2)
itkImageRegion2.__eq__ = new_instancemethod(_ITKRegionsPython.itkImageRegion2___eq__,None,itkImageRegion2)
itkImageRegion2.__ne__ = new_instancemethod(_ITKRegionsPython.itkImageRegion2___ne__,None,itkImageRegion2)
itkImageRegion2.IsInside = new_instancemethod(_ITKRegionsPython.itkImageRegion2_IsInside,None,itkImageRegion2)
itkImageRegion2.GetNumberOfPixels = new_instancemethod(_ITKRegionsPython.itkImageRegion2_GetNumberOfPixels,None,itkImageRegion2)
itkImageRegion2.PadByRadius = new_instancemethod(_ITKRegionsPython.itkImageRegion2_PadByRadius,None,itkImageRegion2)
itkImageRegion2.Crop = new_instancemethod(_ITKRegionsPython.itkImageRegion2_Crop,None,itkImageRegion2)
itkImageRegion2.Slice = new_instancemethod(_ITKRegionsPython.itkImageRegion2_Slice,None,itkImageRegion2)
itkImageRegion2.__repr__ = new_instancemethod(_ITKRegionsPython.itkImageRegion2___repr__,None,itkImageRegion2)
itkImageRegion2_swigregister = _ITKRegionsPython.itkImageRegion2_swigregister
itkImageRegion2_swigregister(itkImageRegion2)

def itkImageRegion2_GetImageDimension():
  """itkImageRegion2_GetImageDimension() -> unsigned int"""
  return _ITKRegionsPython.itkImageRegion2_GetImageDimension()

class itkImageRegion3(itkRegion):
    """Proxy of C++ itkImageRegion3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    ImageDimension = _ITKRegionsPython.itkImageRegion3_ImageDimension
    SliceDimension = _ITKRegionsPython.itkImageRegion3_SliceDimension
    def GetImageDimension():
        """GetImageDimension() -> unsigned int"""
        return _ITKRegionsPython.itkImageRegion3_GetImageDimension()

    GetImageDimension = staticmethod(GetImageDimension)
    __swig_destroy__ = _ITKRegionsPython.delete_itkImageRegion3
    def __init__(self, *args): 
        """
        __init__(self) -> itkImageRegion3
        __init__(self, itkImageRegion3 region) -> itkImageRegion3
        __init__(self, itkIndex3 index, itkSize3 size) -> itkImageRegion3
        __init__(self, itkSize3 size) -> itkImageRegion3
        """
        _ITKRegionsPython.itkImageRegion3_swiginit(self,_ITKRegionsPython.new_itkImageRegion3(*args))
    def SetSize(self, *args):
        """
        SetSize(self, itkSize3 size)
        SetSize(self, unsigned long i, unsigned long sze)
        """
        return _ITKRegionsPython.itkImageRegion3_SetSize(self, *args)

    def GetSize(self, *args):
        """
        GetSize(self) -> itkSize3
        GetSize(self, unsigned long i) -> unsigned long
        """
        return _ITKRegionsPython.itkImageRegion3_GetSize(self, *args)

    def SetIndex(self, *args):
        """
        SetIndex(self, itkIndex3 index)
        SetIndex(self, unsigned long i, long sze)
        """
        return _ITKRegionsPython.itkImageRegion3_SetIndex(self, *args)

    def GetIndex(self, *args):
        """
        GetIndex(self) -> itkIndex3
        GetIndex(self, unsigned long i) -> long
        """
        return _ITKRegionsPython.itkImageRegion3_GetIndex(self, *args)

    def __eq__(self, *args):
        """__eq__(self, itkImageRegion3 region) -> bool"""
        return _ITKRegionsPython.itkImageRegion3___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(self, itkImageRegion3 region) -> bool"""
        return _ITKRegionsPython.itkImageRegion3___ne__(self, *args)

    def IsInside(self, *args):
        """
        IsInside(self, itkIndex3 index) -> bool
        IsInside(self, itkImageRegion3 region) -> bool
        """
        return _ITKRegionsPython.itkImageRegion3_IsInside(self, *args)

    def GetNumberOfPixels(self):
        """GetNumberOfPixels(self) -> unsigned long"""
        return _ITKRegionsPython.itkImageRegion3_GetNumberOfPixels(self)

    def PadByRadius(self, *args):
        """
        PadByRadius(self, long radius)
        PadByRadius(self, long radius)
        PadByRadius(self, itkSize3 radius)
        """
        return _ITKRegionsPython.itkImageRegion3_PadByRadius(self, *args)

    def Crop(self, *args):
        """Crop(self, itkImageRegion3 region) -> bool"""
        return _ITKRegionsPython.itkImageRegion3_Crop(self, *args)

    def Slice(self, *args):
        """Slice(self, unsigned long dim) -> itkImageRegion2"""
        return _ITKRegionsPython.itkImageRegion3_Slice(self, *args)

    def __repr__(self):
        """__repr__(self) -> string"""
        return _ITKRegionsPython.itkImageRegion3___repr__(self)

itkImageRegion3.SetSize = new_instancemethod(_ITKRegionsPython.itkImageRegion3_SetSize,None,itkImageRegion3)
itkImageRegion3.GetSize = new_instancemethod(_ITKRegionsPython.itkImageRegion3_GetSize,None,itkImageRegion3)
itkImageRegion3.SetIndex = new_instancemethod(_ITKRegionsPython.itkImageRegion3_SetIndex,None,itkImageRegion3)
itkImageRegion3.GetIndex = new_instancemethod(_ITKRegionsPython.itkImageRegion3_GetIndex,None,itkImageRegion3)
itkImageRegion3.__eq__ = new_instancemethod(_ITKRegionsPython.itkImageRegion3___eq__,None,itkImageRegion3)
itkImageRegion3.__ne__ = new_instancemethod(_ITKRegionsPython.itkImageRegion3___ne__,None,itkImageRegion3)
itkImageRegion3.IsInside = new_instancemethod(_ITKRegionsPython.itkImageRegion3_IsInside,None,itkImageRegion3)
itkImageRegion3.GetNumberOfPixels = new_instancemethod(_ITKRegionsPython.itkImageRegion3_GetNumberOfPixels,None,itkImageRegion3)
itkImageRegion3.PadByRadius = new_instancemethod(_ITKRegionsPython.itkImageRegion3_PadByRadius,None,itkImageRegion3)
itkImageRegion3.Crop = new_instancemethod(_ITKRegionsPython.itkImageRegion3_Crop,None,itkImageRegion3)
itkImageRegion3.Slice = new_instancemethod(_ITKRegionsPython.itkImageRegion3_Slice,None,itkImageRegion3)
itkImageRegion3.__repr__ = new_instancemethod(_ITKRegionsPython.itkImageRegion3___repr__,None,itkImageRegion3)
itkImageRegion3_swigregister = _ITKRegionsPython.itkImageRegion3_swigregister
itkImageRegion3_swigregister(itkImageRegion3)

def itkImageRegion3_GetImageDimension():
  """itkImageRegion3_GetImageDimension() -> unsigned int"""
  return _ITKRegionsPython.itkImageRegion3_GetImageDimension()

class itkMeshRegion(itkRegion):
    """Proxy of C++ itkMeshRegion class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self, itkMeshRegion arg0) -> itkMeshRegion
        __init__(self) -> itkMeshRegion
        """
        _ITKRegionsPython.itkMeshRegion_swiginit(self,_ITKRegionsPython.new_itkMeshRegion(*args))
    __swig_destroy__ = _ITKRegionsPython.delete_itkMeshRegion
    def GetNumberOfRegions(self):
        """GetNumberOfRegions(self) -> unsigned long"""
        return _ITKRegionsPython.itkMeshRegion_GetNumberOfRegions(self)

    def SetNumberOfRegions(self, *args):
        """SetNumberOfRegions(self, unsigned long num)"""
        return _ITKRegionsPython.itkMeshRegion_SetNumberOfRegions(self, *args)

    def GetRegion(self):
        """GetRegion(self) -> unsigned long"""
        return _ITKRegionsPython.itkMeshRegion_GetRegion(self)

    def SetRegion(self, *args):
        """SetRegion(self, unsigned long region)"""
        return _ITKRegionsPython.itkMeshRegion_SetRegion(self, *args)

itkMeshRegion.GetNumberOfRegions = new_instancemethod(_ITKRegionsPython.itkMeshRegion_GetNumberOfRegions,None,itkMeshRegion)
itkMeshRegion.SetNumberOfRegions = new_instancemethod(_ITKRegionsPython.itkMeshRegion_SetNumberOfRegions,None,itkMeshRegion)
itkMeshRegion.GetRegion = new_instancemethod(_ITKRegionsPython.itkMeshRegion_GetRegion,None,itkMeshRegion)
itkMeshRegion.SetRegion = new_instancemethod(_ITKRegionsPython.itkMeshRegion_SetRegion,None,itkMeshRegion)
itkMeshRegion_swigregister = _ITKRegionsPython.itkMeshRegion_swigregister
itkMeshRegion_swigregister(itkMeshRegion)



