# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkLineSpatialObjectPointPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkLineSpatialObjectPointPython', [dirname(__file__)])
        except ImportError:
            import _itkLineSpatialObjectPointPython
            return _itkLineSpatialObjectPointPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkLineSpatialObjectPointPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkLineSpatialObjectPointPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkLineSpatialObjectPointPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkFixedArrayPython
import itkVectorPython
import vnl_vector_refPython
import itkSpatialObjectPointPython
import itkPointPython
import itkRGBAPixelPython
class vectoritkLineSpatialObjectPoint2(object):
    """Proxy of C++ std::vector<(itkLineSpatialObjectPoint2)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def iterator(self):
        """iterator(self) -> SwigPyIterator"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_iterator(self)

    def __iter__(self): return self.iterator()
    def __nonzero__(self):
        """__nonzero__(self) -> bool"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2___nonzero__(self)

    def __bool__(self):
        """__bool__(self) -> bool"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2___bool__(self)

    def __len__(self):
        """__len__(self) -> size_type"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2___len__(self)

    def pop(self):
        """pop(self) -> value_type"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_pop(self)

    def __getslice__(self, *args):
        """__getslice__(self, difference_type i, difference_type j) -> vectoritkLineSpatialObjectPoint2"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2___getslice__(self, *args)

    def __setslice__(self, *args):
        """__setslice__(self, difference_type i, difference_type j, vectoritkLineSpatialObjectPoint2 v)"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2___setslice__(self, *args)

    def __delslice__(self, *args):
        """__delslice__(self, difference_type i, difference_type j)"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2___delslice__(self, *args)

    def __delitem__(self, *args):
        """
        __delitem__(self, difference_type i)
        __delitem__(self, PySliceObject slice)
        """
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2___delitem__(self, *args)

    def __getitem__(self, *args):
        """
        __getitem__(self, PySliceObject slice) -> vectoritkLineSpatialObjectPoint2
        __getitem__(self, difference_type i) -> value_type
        """
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2___getitem__(self, *args)

    def __setitem__(self, *args):
        """
        __setitem__(self, PySliceObject slice, vectoritkLineSpatialObjectPoint2 v)
        __setitem__(self, difference_type i, value_type x)
        """
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2___setitem__(self, *args)

    def append(self, *args):
        """append(self, value_type x)"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_append(self, *args)

    def empty(self):
        """empty(self) -> bool"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_empty(self)

    def size(self):
        """size(self) -> size_type"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_size(self)

    def clear(self):
        """clear(self)"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_clear(self)

    def swap(self, *args):
        """swap(self, vectoritkLineSpatialObjectPoint2 v)"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_swap(self, *args)

    def get_allocator(self):
        """get_allocator(self) -> allocator_type"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_get_allocator(self)

    def begin(self):
        """begin(self) -> const_iterator"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_begin(self)

    def end(self):
        """end(self) -> const_iterator"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_end(self)

    def rbegin(self):
        """rbegin(self) -> const_reverse_iterator"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_rbegin(self)

    def rend(self):
        """rend(self) -> const_reverse_iterator"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_rend(self)

    def pop_back(self):
        """pop_back(self)"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_pop_back(self)

    def erase(self, *args):
        """
        erase(self, iterator pos) -> iterator
        erase(self, iterator first, iterator last) -> iterator
        """
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_erase(self, *args)

    def __init__(self, *args): 
        """
        __init__(self) -> vectoritkLineSpatialObjectPoint2
        __init__(self, vectoritkLineSpatialObjectPoint2 arg0) -> vectoritkLineSpatialObjectPoint2
        __init__(self, size_type size) -> vectoritkLineSpatialObjectPoint2
        __init__(self, size_type size, value_type value) -> vectoritkLineSpatialObjectPoint2
        """
        _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_swiginit(self,_itkLineSpatialObjectPointPython.new_vectoritkLineSpatialObjectPoint2(*args))
    def push_back(self, *args):
        """push_back(self, value_type x)"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_push_back(self, *args)

    def front(self):
        """front(self) -> value_type"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_front(self)

    def back(self):
        """back(self) -> value_type"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_back(self)

    def assign(self, *args):
        """assign(self, size_type n, value_type x)"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_assign(self, *args)

    def resize(self, *args):
        """
        resize(self, size_type new_size)
        resize(self, size_type new_size, value_type x)
        """
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_resize(self, *args)

    def insert(self, *args):
        """
        insert(self, iterator pos, value_type x) -> iterator
        insert(self, iterator pos, size_type n, value_type x)
        """
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_insert(self, *args)

    def reserve(self, *args):
        """reserve(self, size_type n)"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_reserve(self, *args)

    def capacity(self):
        """capacity(self) -> size_type"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_capacity(self)

    __swig_destroy__ = _itkLineSpatialObjectPointPython.delete_vectoritkLineSpatialObjectPoint2
vectoritkLineSpatialObjectPoint2.iterator = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_iterator,None,vectoritkLineSpatialObjectPoint2)
vectoritkLineSpatialObjectPoint2.__nonzero__ = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2___nonzero__,None,vectoritkLineSpatialObjectPoint2)
vectoritkLineSpatialObjectPoint2.__bool__ = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2___bool__,None,vectoritkLineSpatialObjectPoint2)
vectoritkLineSpatialObjectPoint2.__len__ = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2___len__,None,vectoritkLineSpatialObjectPoint2)
vectoritkLineSpatialObjectPoint2.pop = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_pop,None,vectoritkLineSpatialObjectPoint2)
vectoritkLineSpatialObjectPoint2.__getslice__ = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2___getslice__,None,vectoritkLineSpatialObjectPoint2)
vectoritkLineSpatialObjectPoint2.__setslice__ = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2___setslice__,None,vectoritkLineSpatialObjectPoint2)
vectoritkLineSpatialObjectPoint2.__delslice__ = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2___delslice__,None,vectoritkLineSpatialObjectPoint2)
vectoritkLineSpatialObjectPoint2.__delitem__ = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2___delitem__,None,vectoritkLineSpatialObjectPoint2)
vectoritkLineSpatialObjectPoint2.__getitem__ = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2___getitem__,None,vectoritkLineSpatialObjectPoint2)
vectoritkLineSpatialObjectPoint2.__setitem__ = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2___setitem__,None,vectoritkLineSpatialObjectPoint2)
vectoritkLineSpatialObjectPoint2.append = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_append,None,vectoritkLineSpatialObjectPoint2)
vectoritkLineSpatialObjectPoint2.empty = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_empty,None,vectoritkLineSpatialObjectPoint2)
vectoritkLineSpatialObjectPoint2.size = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_size,None,vectoritkLineSpatialObjectPoint2)
vectoritkLineSpatialObjectPoint2.clear = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_clear,None,vectoritkLineSpatialObjectPoint2)
vectoritkLineSpatialObjectPoint2.swap = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_swap,None,vectoritkLineSpatialObjectPoint2)
vectoritkLineSpatialObjectPoint2.get_allocator = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_get_allocator,None,vectoritkLineSpatialObjectPoint2)
vectoritkLineSpatialObjectPoint2.begin = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_begin,None,vectoritkLineSpatialObjectPoint2)
vectoritkLineSpatialObjectPoint2.end = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_end,None,vectoritkLineSpatialObjectPoint2)
vectoritkLineSpatialObjectPoint2.rbegin = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_rbegin,None,vectoritkLineSpatialObjectPoint2)
vectoritkLineSpatialObjectPoint2.rend = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_rend,None,vectoritkLineSpatialObjectPoint2)
vectoritkLineSpatialObjectPoint2.pop_back = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_pop_back,None,vectoritkLineSpatialObjectPoint2)
vectoritkLineSpatialObjectPoint2.erase = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_erase,None,vectoritkLineSpatialObjectPoint2)
vectoritkLineSpatialObjectPoint2.push_back = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_push_back,None,vectoritkLineSpatialObjectPoint2)
vectoritkLineSpatialObjectPoint2.front = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_front,None,vectoritkLineSpatialObjectPoint2)
vectoritkLineSpatialObjectPoint2.back = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_back,None,vectoritkLineSpatialObjectPoint2)
vectoritkLineSpatialObjectPoint2.assign = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_assign,None,vectoritkLineSpatialObjectPoint2)
vectoritkLineSpatialObjectPoint2.resize = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_resize,None,vectoritkLineSpatialObjectPoint2)
vectoritkLineSpatialObjectPoint2.insert = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_insert,None,vectoritkLineSpatialObjectPoint2)
vectoritkLineSpatialObjectPoint2.reserve = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_reserve,None,vectoritkLineSpatialObjectPoint2)
vectoritkLineSpatialObjectPoint2.capacity = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_capacity,None,vectoritkLineSpatialObjectPoint2)
vectoritkLineSpatialObjectPoint2_swigregister = _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_swigregister
vectoritkLineSpatialObjectPoint2_swigregister(vectoritkLineSpatialObjectPoint2)

class vectoritkLineSpatialObjectPoint3(object):
    """Proxy of C++ std::vector<(itkLineSpatialObjectPoint3)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def iterator(self):
        """iterator(self) -> SwigPyIterator"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_iterator(self)

    def __iter__(self): return self.iterator()
    def __nonzero__(self):
        """__nonzero__(self) -> bool"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3___nonzero__(self)

    def __bool__(self):
        """__bool__(self) -> bool"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3___bool__(self)

    def __len__(self):
        """__len__(self) -> size_type"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3___len__(self)

    def pop(self):
        """pop(self) -> value_type"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_pop(self)

    def __getslice__(self, *args):
        """__getslice__(self, difference_type i, difference_type j) -> vectoritkLineSpatialObjectPoint3"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3___getslice__(self, *args)

    def __setslice__(self, *args):
        """__setslice__(self, difference_type i, difference_type j, vectoritkLineSpatialObjectPoint3 v)"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3___setslice__(self, *args)

    def __delslice__(self, *args):
        """__delslice__(self, difference_type i, difference_type j)"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3___delslice__(self, *args)

    def __delitem__(self, *args):
        """
        __delitem__(self, difference_type i)
        __delitem__(self, PySliceObject slice)
        """
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3___delitem__(self, *args)

    def __getitem__(self, *args):
        """
        __getitem__(self, PySliceObject slice) -> vectoritkLineSpatialObjectPoint3
        __getitem__(self, difference_type i) -> value_type
        """
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3___getitem__(self, *args)

    def __setitem__(self, *args):
        """
        __setitem__(self, PySliceObject slice, vectoritkLineSpatialObjectPoint3 v)
        __setitem__(self, difference_type i, value_type x)
        """
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3___setitem__(self, *args)

    def append(self, *args):
        """append(self, value_type x)"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_append(self, *args)

    def empty(self):
        """empty(self) -> bool"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_empty(self)

    def size(self):
        """size(self) -> size_type"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_size(self)

    def clear(self):
        """clear(self)"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_clear(self)

    def swap(self, *args):
        """swap(self, vectoritkLineSpatialObjectPoint3 v)"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_swap(self, *args)

    def get_allocator(self):
        """get_allocator(self) -> allocator_type"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_get_allocator(self)

    def begin(self):
        """begin(self) -> const_iterator"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_begin(self)

    def end(self):
        """end(self) -> const_iterator"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_end(self)

    def rbegin(self):
        """rbegin(self) -> const_reverse_iterator"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_rbegin(self)

    def rend(self):
        """rend(self) -> const_reverse_iterator"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_rend(self)

    def pop_back(self):
        """pop_back(self)"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_pop_back(self)

    def erase(self, *args):
        """
        erase(self, iterator pos) -> iterator
        erase(self, iterator first, iterator last) -> iterator
        """
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_erase(self, *args)

    def __init__(self, *args): 
        """
        __init__(self) -> vectoritkLineSpatialObjectPoint3
        __init__(self, vectoritkLineSpatialObjectPoint3 arg0) -> vectoritkLineSpatialObjectPoint3
        __init__(self, size_type size) -> vectoritkLineSpatialObjectPoint3
        __init__(self, size_type size, value_type value) -> vectoritkLineSpatialObjectPoint3
        """
        _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_swiginit(self,_itkLineSpatialObjectPointPython.new_vectoritkLineSpatialObjectPoint3(*args))
    def push_back(self, *args):
        """push_back(self, value_type x)"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_push_back(self, *args)

    def front(self):
        """front(self) -> value_type"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_front(self)

    def back(self):
        """back(self) -> value_type"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_back(self)

    def assign(self, *args):
        """assign(self, size_type n, value_type x)"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_assign(self, *args)

    def resize(self, *args):
        """
        resize(self, size_type new_size)
        resize(self, size_type new_size, value_type x)
        """
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_resize(self, *args)

    def insert(self, *args):
        """
        insert(self, iterator pos, value_type x) -> iterator
        insert(self, iterator pos, size_type n, value_type x)
        """
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_insert(self, *args)

    def reserve(self, *args):
        """reserve(self, size_type n)"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_reserve(self, *args)

    def capacity(self):
        """capacity(self) -> size_type"""
        return _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_capacity(self)

    __swig_destroy__ = _itkLineSpatialObjectPointPython.delete_vectoritkLineSpatialObjectPoint3
vectoritkLineSpatialObjectPoint3.iterator = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_iterator,None,vectoritkLineSpatialObjectPoint3)
vectoritkLineSpatialObjectPoint3.__nonzero__ = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3___nonzero__,None,vectoritkLineSpatialObjectPoint3)
vectoritkLineSpatialObjectPoint3.__bool__ = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3___bool__,None,vectoritkLineSpatialObjectPoint3)
vectoritkLineSpatialObjectPoint3.__len__ = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3___len__,None,vectoritkLineSpatialObjectPoint3)
vectoritkLineSpatialObjectPoint3.pop = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_pop,None,vectoritkLineSpatialObjectPoint3)
vectoritkLineSpatialObjectPoint3.__getslice__ = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3___getslice__,None,vectoritkLineSpatialObjectPoint3)
vectoritkLineSpatialObjectPoint3.__setslice__ = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3___setslice__,None,vectoritkLineSpatialObjectPoint3)
vectoritkLineSpatialObjectPoint3.__delslice__ = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3___delslice__,None,vectoritkLineSpatialObjectPoint3)
vectoritkLineSpatialObjectPoint3.__delitem__ = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3___delitem__,None,vectoritkLineSpatialObjectPoint3)
vectoritkLineSpatialObjectPoint3.__getitem__ = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3___getitem__,None,vectoritkLineSpatialObjectPoint3)
vectoritkLineSpatialObjectPoint3.__setitem__ = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3___setitem__,None,vectoritkLineSpatialObjectPoint3)
vectoritkLineSpatialObjectPoint3.append = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_append,None,vectoritkLineSpatialObjectPoint3)
vectoritkLineSpatialObjectPoint3.empty = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_empty,None,vectoritkLineSpatialObjectPoint3)
vectoritkLineSpatialObjectPoint3.size = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_size,None,vectoritkLineSpatialObjectPoint3)
vectoritkLineSpatialObjectPoint3.clear = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_clear,None,vectoritkLineSpatialObjectPoint3)
vectoritkLineSpatialObjectPoint3.swap = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_swap,None,vectoritkLineSpatialObjectPoint3)
vectoritkLineSpatialObjectPoint3.get_allocator = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_get_allocator,None,vectoritkLineSpatialObjectPoint3)
vectoritkLineSpatialObjectPoint3.begin = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_begin,None,vectoritkLineSpatialObjectPoint3)
vectoritkLineSpatialObjectPoint3.end = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_end,None,vectoritkLineSpatialObjectPoint3)
vectoritkLineSpatialObjectPoint3.rbegin = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_rbegin,None,vectoritkLineSpatialObjectPoint3)
vectoritkLineSpatialObjectPoint3.rend = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_rend,None,vectoritkLineSpatialObjectPoint3)
vectoritkLineSpatialObjectPoint3.pop_back = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_pop_back,None,vectoritkLineSpatialObjectPoint3)
vectoritkLineSpatialObjectPoint3.erase = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_erase,None,vectoritkLineSpatialObjectPoint3)
vectoritkLineSpatialObjectPoint3.push_back = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_push_back,None,vectoritkLineSpatialObjectPoint3)
vectoritkLineSpatialObjectPoint3.front = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_front,None,vectoritkLineSpatialObjectPoint3)
vectoritkLineSpatialObjectPoint3.back = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_back,None,vectoritkLineSpatialObjectPoint3)
vectoritkLineSpatialObjectPoint3.assign = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_assign,None,vectoritkLineSpatialObjectPoint3)
vectoritkLineSpatialObjectPoint3.resize = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_resize,None,vectoritkLineSpatialObjectPoint3)
vectoritkLineSpatialObjectPoint3.insert = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_insert,None,vectoritkLineSpatialObjectPoint3)
vectoritkLineSpatialObjectPoint3.reserve = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_reserve,None,vectoritkLineSpatialObjectPoint3)
vectoritkLineSpatialObjectPoint3.capacity = new_instancemethod(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_capacity,None,vectoritkLineSpatialObjectPoint3)
vectoritkLineSpatialObjectPoint3_swigregister = _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_swigregister
vectoritkLineSpatialObjectPoint3_swigregister(vectoritkLineSpatialObjectPoint3)

class itkLineSpatialObjectPoint2(itkSpatialObjectPointPython.itkSpatialObjectPoint2):
    """Proxy of C++ itkLineSpatialObjectPoint2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self, itkLineSpatialObjectPoint2 arg0) -> itkLineSpatialObjectPoint2
        __init__(self) -> itkLineSpatialObjectPoint2
        """
        _itkLineSpatialObjectPointPython.itkLineSpatialObjectPoint2_swiginit(self,_itkLineSpatialObjectPointPython.new_itkLineSpatialObjectPoint2(*args))
    __swig_destroy__ = _itkLineSpatialObjectPointPython.delete_itkLineSpatialObjectPoint2
    def GetNormal(self, *args):
        """GetNormal(self, unsigned int index) -> itkCovariantVectorD2"""
        return _itkLineSpatialObjectPointPython.itkLineSpatialObjectPoint2_GetNormal(self, *args)

    def SetNormal(self, *args):
        """SetNormal(self, itkCovariantVectorD2 normal, unsigned int index)"""
        return _itkLineSpatialObjectPointPython.itkLineSpatialObjectPoint2_SetNormal(self, *args)

itkLineSpatialObjectPoint2.GetNormal = new_instancemethod(_itkLineSpatialObjectPointPython.itkLineSpatialObjectPoint2_GetNormal,None,itkLineSpatialObjectPoint2)
itkLineSpatialObjectPoint2.SetNormal = new_instancemethod(_itkLineSpatialObjectPointPython.itkLineSpatialObjectPoint2_SetNormal,None,itkLineSpatialObjectPoint2)
itkLineSpatialObjectPoint2_swigregister = _itkLineSpatialObjectPointPython.itkLineSpatialObjectPoint2_swigregister
itkLineSpatialObjectPoint2_swigregister(itkLineSpatialObjectPoint2)

class itkLineSpatialObjectPoint3(itkSpatialObjectPointPython.itkSpatialObjectPoint3):
    """Proxy of C++ itkLineSpatialObjectPoint3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self, itkLineSpatialObjectPoint3 arg0) -> itkLineSpatialObjectPoint3
        __init__(self) -> itkLineSpatialObjectPoint3
        """
        _itkLineSpatialObjectPointPython.itkLineSpatialObjectPoint3_swiginit(self,_itkLineSpatialObjectPointPython.new_itkLineSpatialObjectPoint3(*args))
    __swig_destroy__ = _itkLineSpatialObjectPointPython.delete_itkLineSpatialObjectPoint3
    def GetNormal(self, *args):
        """GetNormal(self, unsigned int index) -> itkCovariantVectorD3"""
        return _itkLineSpatialObjectPointPython.itkLineSpatialObjectPoint3_GetNormal(self, *args)

    def SetNormal(self, *args):
        """SetNormal(self, itkCovariantVectorD3 normal, unsigned int index)"""
        return _itkLineSpatialObjectPointPython.itkLineSpatialObjectPoint3_SetNormal(self, *args)

itkLineSpatialObjectPoint3.GetNormal = new_instancemethod(_itkLineSpatialObjectPointPython.itkLineSpatialObjectPoint3_GetNormal,None,itkLineSpatialObjectPoint3)
itkLineSpatialObjectPoint3.SetNormal = new_instancemethod(_itkLineSpatialObjectPointPython.itkLineSpatialObjectPoint3_SetNormal,None,itkLineSpatialObjectPoint3)
itkLineSpatialObjectPoint3_swigregister = _itkLineSpatialObjectPointPython.itkLineSpatialObjectPoint3_swigregister
itkLineSpatialObjectPoint3_swigregister(itkLineSpatialObjectPoint3)



