# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkMinimumProjectionImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkMinimumProjectionImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkMinimumProjectionImageFilterPython
            return _itkMinimumProjectionImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkMinimumProjectionImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkMinimumProjectionImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkMinimumProjectionImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageToImageFilterBPython
import ITKRegionsPython
import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterAPython
def itkMinimumProjectionImageFilterID3ID2_New():
  return itkMinimumProjectionImageFilterID3ID2.New()

def itkMinimumProjectionImageFilterID3ID2_Superclass_New():
  return itkMinimumProjectionImageFilterID3ID2_Superclass.New()

def itkMinimumProjectionImageFilterIF3IF2_New():
  return itkMinimumProjectionImageFilterIF3IF2.New()

def itkMinimumProjectionImageFilterIF3IF2_Superclass_New():
  return itkMinimumProjectionImageFilterIF3IF2_Superclass.New()

def itkMinimumProjectionImageFilterIUS3IUS2_New():
  return itkMinimumProjectionImageFilterIUS3IUS2.New()

def itkMinimumProjectionImageFilterIUS3IUS2_Superclass_New():
  return itkMinimumProjectionImageFilterIUS3IUS2_Superclass.New()

def itkMinimumProjectionImageFilterIUL3IUL2_New():
  return itkMinimumProjectionImageFilterIUL3IUL2.New()

def itkMinimumProjectionImageFilterIUL3IUL2_Superclass_New():
  return itkMinimumProjectionImageFilterIUL3IUL2_Superclass.New()

def itkMinimumProjectionImageFilterIUC3IUC2_New():
  return itkMinimumProjectionImageFilterIUC3IUC2.New()

def itkMinimumProjectionImageFilterIUC3IUC2_Superclass_New():
  return itkMinimumProjectionImageFilterIUC3IUC2_Superclass.New()

def itkMinimumProjectionImageFilterID3ID3_New():
  return itkMinimumProjectionImageFilterID3ID3.New()

def itkMinimumProjectionImageFilterID3ID3_Superclass_New():
  return itkMinimumProjectionImageFilterID3ID3_Superclass.New()

def itkMinimumProjectionImageFilterID2ID2_New():
  return itkMinimumProjectionImageFilterID2ID2.New()

def itkMinimumProjectionImageFilterID2ID2_Superclass_New():
  return itkMinimumProjectionImageFilterID2ID2_Superclass.New()

def itkMinimumProjectionImageFilterIF3IF3_New():
  return itkMinimumProjectionImageFilterIF3IF3.New()

def itkMinimumProjectionImageFilterIF3IF3_Superclass_New():
  return itkMinimumProjectionImageFilterIF3IF3_Superclass.New()

def itkMinimumProjectionImageFilterIF2IF2_New():
  return itkMinimumProjectionImageFilterIF2IF2.New()

def itkMinimumProjectionImageFilterIF2IF2_Superclass_New():
  return itkMinimumProjectionImageFilterIF2IF2_Superclass.New()

def itkMinimumProjectionImageFilterIUS3IUS3_New():
  return itkMinimumProjectionImageFilterIUS3IUS3.New()

def itkMinimumProjectionImageFilterIUS3IUS3_Superclass_New():
  return itkMinimumProjectionImageFilterIUS3IUS3_Superclass.New()

def itkMinimumProjectionImageFilterIUS2IUS2_New():
  return itkMinimumProjectionImageFilterIUS2IUS2.New()

def itkMinimumProjectionImageFilterIUS2IUS2_Superclass_New():
  return itkMinimumProjectionImageFilterIUS2IUS2_Superclass.New()

def itkMinimumProjectionImageFilterIUL3IUL3_New():
  return itkMinimumProjectionImageFilterIUL3IUL3.New()

def itkMinimumProjectionImageFilterIUL3IUL3_Superclass_New():
  return itkMinimumProjectionImageFilterIUL3IUL3_Superclass.New()

def itkMinimumProjectionImageFilterIUL2IUL2_New():
  return itkMinimumProjectionImageFilterIUL2IUL2.New()

def itkMinimumProjectionImageFilterIUL2IUL2_Superclass_New():
  return itkMinimumProjectionImageFilterIUL2IUL2_Superclass.New()

def itkMinimumProjectionImageFilterIUC3IUC3_New():
  return itkMinimumProjectionImageFilterIUC3IUC3.New()

def itkMinimumProjectionImageFilterIUC3IUC3_Superclass_New():
  return itkMinimumProjectionImageFilterIUC3IUC3_Superclass.New()

def itkMinimumProjectionImageFilterIUC2IUC2_New():
  return itkMinimumProjectionImageFilterIUC2IUC2.New()

def itkMinimumProjectionImageFilterIUC2IUC2_Superclass_New():
  return itkMinimumProjectionImageFilterIUC2IUC2_Superclass.New()

class itkMinimumProjectionImageFilterID2ID2_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    """Proxy of C++ itkMinimumProjectionImageFilterID2ID2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Superclass_InputImageDimension
    OutputImageDimension = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Superclass_OutputImageDimension
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Superclass_ImageDimensionCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetProjectionDimension(self, *args):
        """SetProjectionDimension(self, unsigned int _arg)"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Superclass_SetProjectionDimension(self, *args)

    def GetProjectionDimension(self):
        """GetProjectionDimension(self) -> unsigned int"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterID2ID2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterID2ID2_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumProjectionImageFilterID2ID2_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterID2ID2_Superclass
        
        Create a new object of the class itkMinimumProjectionImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumProjectionImageFilterID2ID2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumProjectionImageFilterID2ID2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterID2ID2_Superclass.SetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Superclass_SetProjectionDimension,None,itkMinimumProjectionImageFilterID2ID2_Superclass)
itkMinimumProjectionImageFilterID2ID2_Superclass.GetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Superclass_GetProjectionDimension,None,itkMinimumProjectionImageFilterID2ID2_Superclass)
itkMinimumProjectionImageFilterID2ID2_Superclass.GetPointer = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Superclass_GetPointer,None,itkMinimumProjectionImageFilterID2ID2_Superclass)
itkMinimumProjectionImageFilterID2ID2_Superclass_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Superclass_swigregister
itkMinimumProjectionImageFilterID2ID2_Superclass_swigregister(itkMinimumProjectionImageFilterID2ID2_Superclass)

def itkMinimumProjectionImageFilterID2ID2_Superclass___New_orig__():
  """itkMinimumProjectionImageFilterID2ID2_Superclass___New_orig__()"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Superclass___New_orig__()

def itkMinimumProjectionImageFilterID2ID2_Superclass_cast(*args):
  """itkMinimumProjectionImageFilterID2ID2_Superclass_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterID2ID2_Superclass"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Superclass_cast(*args)

class itkMinimumProjectionImageFilterID3ID2_Superclass(itkImageToImageFilterBPython.itkImageToImageFilterID3ID2):
    """Proxy of C++ itkMinimumProjectionImageFilterID3ID2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Superclass_InputImageDimension
    OutputImageDimension = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Superclass_OutputImageDimension
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Superclass_ImageDimensionCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetProjectionDimension(self, *args):
        """SetProjectionDimension(self, unsigned int _arg)"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Superclass_SetProjectionDimension(self, *args)

    def GetProjectionDimension(self):
        """GetProjectionDimension(self) -> unsigned int"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterID3ID2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterID3ID2_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumProjectionImageFilterID3ID2_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterID3ID2_Superclass
        
        Create a new object of the class itkMinimumProjectionImageFilterID3ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumProjectionImageFilterID3ID2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumProjectionImageFilterID3ID2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterID3ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterID3ID2_Superclass.SetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Superclass_SetProjectionDimension,None,itkMinimumProjectionImageFilterID3ID2_Superclass)
itkMinimumProjectionImageFilterID3ID2_Superclass.GetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Superclass_GetProjectionDimension,None,itkMinimumProjectionImageFilterID3ID2_Superclass)
itkMinimumProjectionImageFilterID3ID2_Superclass.GetPointer = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Superclass_GetPointer,None,itkMinimumProjectionImageFilterID3ID2_Superclass)
itkMinimumProjectionImageFilterID3ID2_Superclass_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Superclass_swigregister
itkMinimumProjectionImageFilterID3ID2_Superclass_swigregister(itkMinimumProjectionImageFilterID3ID2_Superclass)

def itkMinimumProjectionImageFilterID3ID2_Superclass___New_orig__():
  """itkMinimumProjectionImageFilterID3ID2_Superclass___New_orig__()"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Superclass___New_orig__()

def itkMinimumProjectionImageFilterID3ID2_Superclass_cast(*args):
  """itkMinimumProjectionImageFilterID3ID2_Superclass_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterID3ID2_Superclass"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Superclass_cast(*args)

class itkMinimumProjectionImageFilterID3ID3_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    """Proxy of C++ itkMinimumProjectionImageFilterID3ID3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Superclass_InputImageDimension
    OutputImageDimension = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Superclass_OutputImageDimension
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Superclass_ImageDimensionCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetProjectionDimension(self, *args):
        """SetProjectionDimension(self, unsigned int _arg)"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Superclass_SetProjectionDimension(self, *args)

    def GetProjectionDimension(self):
        """GetProjectionDimension(self) -> unsigned int"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterID3ID3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterID3ID3_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumProjectionImageFilterID3ID3_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterID3ID3_Superclass
        
        Create a new object of the class itkMinimumProjectionImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumProjectionImageFilterID3ID3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumProjectionImageFilterID3ID3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterID3ID3_Superclass.SetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Superclass_SetProjectionDimension,None,itkMinimumProjectionImageFilterID3ID3_Superclass)
itkMinimumProjectionImageFilterID3ID3_Superclass.GetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Superclass_GetProjectionDimension,None,itkMinimumProjectionImageFilterID3ID3_Superclass)
itkMinimumProjectionImageFilterID3ID3_Superclass.GetPointer = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Superclass_GetPointer,None,itkMinimumProjectionImageFilterID3ID3_Superclass)
itkMinimumProjectionImageFilterID3ID3_Superclass_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Superclass_swigregister
itkMinimumProjectionImageFilterID3ID3_Superclass_swigregister(itkMinimumProjectionImageFilterID3ID3_Superclass)

def itkMinimumProjectionImageFilterID3ID3_Superclass___New_orig__():
  """itkMinimumProjectionImageFilterID3ID3_Superclass___New_orig__()"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Superclass___New_orig__()

def itkMinimumProjectionImageFilterID3ID3_Superclass_cast(*args):
  """itkMinimumProjectionImageFilterID3ID3_Superclass_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterID3ID3_Superclass"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Superclass_cast(*args)

class itkMinimumProjectionImageFilterIF2IF2_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkMinimumProjectionImageFilterIF2IF2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_InputImageDimension
    OutputImageDimension = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_OutputImageDimension
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_ImageDimensionCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetProjectionDimension(self, *args):
        """SetProjectionDimension(self, unsigned int _arg)"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_SetProjectionDimension(self, *args)

    def GetProjectionDimension(self):
        """GetProjectionDimension(self) -> unsigned int"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIF2IF2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIF2IF2_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumProjectionImageFilterIF2IF2_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIF2IF2_Superclass
        
        Create a new object of the class itkMinimumProjectionImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumProjectionImageFilterIF2IF2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumProjectionImageFilterIF2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIF2IF2_Superclass.SetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_SetProjectionDimension,None,itkMinimumProjectionImageFilterIF2IF2_Superclass)
itkMinimumProjectionImageFilterIF2IF2_Superclass.GetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_GetProjectionDimension,None,itkMinimumProjectionImageFilterIF2IF2_Superclass)
itkMinimumProjectionImageFilterIF2IF2_Superclass.GetPointer = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_GetPointer,None,itkMinimumProjectionImageFilterIF2IF2_Superclass)
itkMinimumProjectionImageFilterIF2IF2_Superclass_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_swigregister
itkMinimumProjectionImageFilterIF2IF2_Superclass_swigregister(itkMinimumProjectionImageFilterIF2IF2_Superclass)

def itkMinimumProjectionImageFilterIF2IF2_Superclass___New_orig__():
  """itkMinimumProjectionImageFilterIF2IF2_Superclass___New_orig__()"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass___New_orig__()

def itkMinimumProjectionImageFilterIF2IF2_Superclass_cast(*args):
  """itkMinimumProjectionImageFilterIF2IF2_Superclass_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIF2IF2_Superclass"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_cast(*args)

class itkMinimumProjectionImageFilterIF3IF2_Superclass(itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2):
    """Proxy of C++ itkMinimumProjectionImageFilterIF3IF2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_InputImageDimension
    OutputImageDimension = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_OutputImageDimension
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_ImageDimensionCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetProjectionDimension(self, *args):
        """SetProjectionDimension(self, unsigned int _arg)"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_SetProjectionDimension(self, *args)

    def GetProjectionDimension(self):
        """GetProjectionDimension(self) -> unsigned int"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIF3IF2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIF3IF2_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumProjectionImageFilterIF3IF2_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIF3IF2_Superclass
        
        Create a new object of the class itkMinimumProjectionImageFilterIF3IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumProjectionImageFilterIF3IF2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumProjectionImageFilterIF3IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIF3IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIF3IF2_Superclass.SetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_SetProjectionDimension,None,itkMinimumProjectionImageFilterIF3IF2_Superclass)
itkMinimumProjectionImageFilterIF3IF2_Superclass.GetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_GetProjectionDimension,None,itkMinimumProjectionImageFilterIF3IF2_Superclass)
itkMinimumProjectionImageFilterIF3IF2_Superclass.GetPointer = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_GetPointer,None,itkMinimumProjectionImageFilterIF3IF2_Superclass)
itkMinimumProjectionImageFilterIF3IF2_Superclass_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_swigregister
itkMinimumProjectionImageFilterIF3IF2_Superclass_swigregister(itkMinimumProjectionImageFilterIF3IF2_Superclass)

def itkMinimumProjectionImageFilterIF3IF2_Superclass___New_orig__():
  """itkMinimumProjectionImageFilterIF3IF2_Superclass___New_orig__()"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass___New_orig__()

def itkMinimumProjectionImageFilterIF3IF2_Superclass_cast(*args):
  """itkMinimumProjectionImageFilterIF3IF2_Superclass_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIF3IF2_Superclass"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_cast(*args)

class itkMinimumProjectionImageFilterIF3IF3_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkMinimumProjectionImageFilterIF3IF3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_InputImageDimension
    OutputImageDimension = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_OutputImageDimension
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_ImageDimensionCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetProjectionDimension(self, *args):
        """SetProjectionDimension(self, unsigned int _arg)"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_SetProjectionDimension(self, *args)

    def GetProjectionDimension(self):
        """GetProjectionDimension(self) -> unsigned int"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIF3IF3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIF3IF3_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumProjectionImageFilterIF3IF3_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIF3IF3_Superclass
        
        Create a new object of the class itkMinimumProjectionImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumProjectionImageFilterIF3IF3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumProjectionImageFilterIF3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIF3IF3_Superclass.SetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_SetProjectionDimension,None,itkMinimumProjectionImageFilterIF3IF3_Superclass)
itkMinimumProjectionImageFilterIF3IF3_Superclass.GetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_GetProjectionDimension,None,itkMinimumProjectionImageFilterIF3IF3_Superclass)
itkMinimumProjectionImageFilterIF3IF3_Superclass.GetPointer = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_GetPointer,None,itkMinimumProjectionImageFilterIF3IF3_Superclass)
itkMinimumProjectionImageFilterIF3IF3_Superclass_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_swigregister
itkMinimumProjectionImageFilterIF3IF3_Superclass_swigregister(itkMinimumProjectionImageFilterIF3IF3_Superclass)

def itkMinimumProjectionImageFilterIF3IF3_Superclass___New_orig__():
  """itkMinimumProjectionImageFilterIF3IF3_Superclass___New_orig__()"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass___New_orig__()

def itkMinimumProjectionImageFilterIF3IF3_Superclass_cast(*args):
  """itkMinimumProjectionImageFilterIF3IF3_Superclass_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIF3IF3_Superclass"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_cast(*args)

class itkMinimumProjectionImageFilterIUC2IUC2_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """Proxy of C++ itkMinimumProjectionImageFilterIUC2IUC2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_InputImageDimension
    OutputImageDimension = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_OutputImageDimension
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_ImageDimensionCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetProjectionDimension(self, *args):
        """SetProjectionDimension(self, unsigned int _arg)"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_SetProjectionDimension(self, *args)

    def GetProjectionDimension(self):
        """GetProjectionDimension(self) -> unsigned int"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUC2IUC2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUC2IUC2_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumProjectionImageFilterIUC2IUC2_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUC2IUC2_Superclass
        
        Create a new object of the class itkMinimumProjectionImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumProjectionImageFilterIUC2IUC2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumProjectionImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIUC2IUC2_Superclass.SetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_SetProjectionDimension,None,itkMinimumProjectionImageFilterIUC2IUC2_Superclass)
itkMinimumProjectionImageFilterIUC2IUC2_Superclass.GetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_GetProjectionDimension,None,itkMinimumProjectionImageFilterIUC2IUC2_Superclass)
itkMinimumProjectionImageFilterIUC2IUC2_Superclass.GetPointer = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_GetPointer,None,itkMinimumProjectionImageFilterIUC2IUC2_Superclass)
itkMinimumProjectionImageFilterIUC2IUC2_Superclass_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_swigregister
itkMinimumProjectionImageFilterIUC2IUC2_Superclass_swigregister(itkMinimumProjectionImageFilterIUC2IUC2_Superclass)

def itkMinimumProjectionImageFilterIUC2IUC2_Superclass___New_orig__():
  """itkMinimumProjectionImageFilterIUC2IUC2_Superclass___New_orig__()"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass___New_orig__()

def itkMinimumProjectionImageFilterIUC2IUC2_Superclass_cast(*args):
  """itkMinimumProjectionImageFilterIUC2IUC2_Superclass_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUC2IUC2_Superclass"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_cast(*args)

class itkMinimumProjectionImageFilterIUC3IUC2_Superclass(itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2):
    """Proxy of C++ itkMinimumProjectionImageFilterIUC3IUC2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_InputImageDimension
    OutputImageDimension = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_OutputImageDimension
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_ImageDimensionCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetProjectionDimension(self, *args):
        """SetProjectionDimension(self, unsigned int _arg)"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_SetProjectionDimension(self, *args)

    def GetProjectionDimension(self):
        """GetProjectionDimension(self) -> unsigned int"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUC3IUC2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUC3IUC2_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumProjectionImageFilterIUC3IUC2_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUC3IUC2_Superclass
        
        Create a new object of the class itkMinimumProjectionImageFilterIUC3IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumProjectionImageFilterIUC3IUC2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumProjectionImageFilterIUC3IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIUC3IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIUC3IUC2_Superclass.SetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_SetProjectionDimension,None,itkMinimumProjectionImageFilterIUC3IUC2_Superclass)
itkMinimumProjectionImageFilterIUC3IUC2_Superclass.GetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_GetProjectionDimension,None,itkMinimumProjectionImageFilterIUC3IUC2_Superclass)
itkMinimumProjectionImageFilterIUC3IUC2_Superclass.GetPointer = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_GetPointer,None,itkMinimumProjectionImageFilterIUC3IUC2_Superclass)
itkMinimumProjectionImageFilterIUC3IUC2_Superclass_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_swigregister
itkMinimumProjectionImageFilterIUC3IUC2_Superclass_swigregister(itkMinimumProjectionImageFilterIUC3IUC2_Superclass)

def itkMinimumProjectionImageFilterIUC3IUC2_Superclass___New_orig__():
  """itkMinimumProjectionImageFilterIUC3IUC2_Superclass___New_orig__()"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass___New_orig__()

def itkMinimumProjectionImageFilterIUC3IUC2_Superclass_cast(*args):
  """itkMinimumProjectionImageFilterIUC3IUC2_Superclass_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUC3IUC2_Superclass"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_cast(*args)

class itkMinimumProjectionImageFilterIUC3IUC3_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """Proxy of C++ itkMinimumProjectionImageFilterIUC3IUC3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_InputImageDimension
    OutputImageDimension = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_OutputImageDimension
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_ImageDimensionCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetProjectionDimension(self, *args):
        """SetProjectionDimension(self, unsigned int _arg)"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_SetProjectionDimension(self, *args)

    def GetProjectionDimension(self):
        """GetProjectionDimension(self) -> unsigned int"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUC3IUC3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUC3IUC3_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumProjectionImageFilterIUC3IUC3_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUC3IUC3_Superclass
        
        Create a new object of the class itkMinimumProjectionImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumProjectionImageFilterIUC3IUC3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumProjectionImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIUC3IUC3_Superclass.SetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_SetProjectionDimension,None,itkMinimumProjectionImageFilterIUC3IUC3_Superclass)
itkMinimumProjectionImageFilterIUC3IUC3_Superclass.GetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_GetProjectionDimension,None,itkMinimumProjectionImageFilterIUC3IUC3_Superclass)
itkMinimumProjectionImageFilterIUC3IUC3_Superclass.GetPointer = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_GetPointer,None,itkMinimumProjectionImageFilterIUC3IUC3_Superclass)
itkMinimumProjectionImageFilterIUC3IUC3_Superclass_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_swigregister
itkMinimumProjectionImageFilterIUC3IUC3_Superclass_swigregister(itkMinimumProjectionImageFilterIUC3IUC3_Superclass)

def itkMinimumProjectionImageFilterIUC3IUC3_Superclass___New_orig__():
  """itkMinimumProjectionImageFilterIUC3IUC3_Superclass___New_orig__()"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass___New_orig__()

def itkMinimumProjectionImageFilterIUC3IUC3_Superclass_cast(*args):
  """itkMinimumProjectionImageFilterIUC3IUC3_Superclass_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUC3IUC3_Superclass"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_cast(*args)

class itkMinimumProjectionImageFilterIUL2IUL2_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2):
    """Proxy of C++ itkMinimumProjectionImageFilterIUL2IUL2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL2IUL2_Superclass_InputImageDimension
    OutputImageDimension = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL2IUL2_Superclass_OutputImageDimension
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL2IUL2_Superclass_ImageDimensionCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL2IUL2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetProjectionDimension(self, *args):
        """SetProjectionDimension(self, unsigned int _arg)"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL2IUL2_Superclass_SetProjectionDimension(self, *args)

    def GetProjectionDimension(self):
        """GetProjectionDimension(self) -> unsigned int"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL2IUL2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUL2IUL2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUL2IUL2_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL2IUL2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumProjectionImageFilterIUL2IUL2_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL2IUL2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUL2IUL2_Superclass
        
        Create a new object of the class itkMinimumProjectionImageFilterIUL2IUL2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumProjectionImageFilterIUL2IUL2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumProjectionImageFilterIUL2IUL2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIUL2IUL2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIUL2IUL2_Superclass.SetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL2IUL2_Superclass_SetProjectionDimension,None,itkMinimumProjectionImageFilterIUL2IUL2_Superclass)
itkMinimumProjectionImageFilterIUL2IUL2_Superclass.GetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL2IUL2_Superclass_GetProjectionDimension,None,itkMinimumProjectionImageFilterIUL2IUL2_Superclass)
itkMinimumProjectionImageFilterIUL2IUL2_Superclass.GetPointer = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL2IUL2_Superclass_GetPointer,None,itkMinimumProjectionImageFilterIUL2IUL2_Superclass)
itkMinimumProjectionImageFilterIUL2IUL2_Superclass_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL2IUL2_Superclass_swigregister
itkMinimumProjectionImageFilterIUL2IUL2_Superclass_swigregister(itkMinimumProjectionImageFilterIUL2IUL2_Superclass)

def itkMinimumProjectionImageFilterIUL2IUL2_Superclass___New_orig__():
  """itkMinimumProjectionImageFilterIUL2IUL2_Superclass___New_orig__()"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL2IUL2_Superclass___New_orig__()

def itkMinimumProjectionImageFilterIUL2IUL2_Superclass_cast(*args):
  """itkMinimumProjectionImageFilterIUL2IUL2_Superclass_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUL2IUL2_Superclass"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL2IUL2_Superclass_cast(*args)

class itkMinimumProjectionImageFilterIUL3IUL2_Superclass(itkImageToImageFilterBPython.itkImageToImageFilterIUL3IUL2):
    """Proxy of C++ itkMinimumProjectionImageFilterIUL3IUL2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL2_Superclass_InputImageDimension
    OutputImageDimension = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL2_Superclass_OutputImageDimension
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL2_Superclass_ImageDimensionCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetProjectionDimension(self, *args):
        """SetProjectionDimension(self, unsigned int _arg)"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL2_Superclass_SetProjectionDimension(self, *args)

    def GetProjectionDimension(self):
        """GetProjectionDimension(self) -> unsigned int"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUL3IUL2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUL3IUL2_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumProjectionImageFilterIUL3IUL2_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUL3IUL2_Superclass
        
        Create a new object of the class itkMinimumProjectionImageFilterIUL3IUL2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumProjectionImageFilterIUL3IUL2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumProjectionImageFilterIUL3IUL2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIUL3IUL2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIUL3IUL2_Superclass.SetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL2_Superclass_SetProjectionDimension,None,itkMinimumProjectionImageFilterIUL3IUL2_Superclass)
itkMinimumProjectionImageFilterIUL3IUL2_Superclass.GetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL2_Superclass_GetProjectionDimension,None,itkMinimumProjectionImageFilterIUL3IUL2_Superclass)
itkMinimumProjectionImageFilterIUL3IUL2_Superclass.GetPointer = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL2_Superclass_GetPointer,None,itkMinimumProjectionImageFilterIUL3IUL2_Superclass)
itkMinimumProjectionImageFilterIUL3IUL2_Superclass_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL2_Superclass_swigregister
itkMinimumProjectionImageFilterIUL3IUL2_Superclass_swigregister(itkMinimumProjectionImageFilterIUL3IUL2_Superclass)

def itkMinimumProjectionImageFilterIUL3IUL2_Superclass___New_orig__():
  """itkMinimumProjectionImageFilterIUL3IUL2_Superclass___New_orig__()"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL2_Superclass___New_orig__()

def itkMinimumProjectionImageFilterIUL3IUL2_Superclass_cast(*args):
  """itkMinimumProjectionImageFilterIUL3IUL2_Superclass_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUL3IUL2_Superclass"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL2_Superclass_cast(*args)

class itkMinimumProjectionImageFilterIUL3IUL3_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3):
    """Proxy of C++ itkMinimumProjectionImageFilterIUL3IUL3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL3_Superclass_InputImageDimension
    OutputImageDimension = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL3_Superclass_OutputImageDimension
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL3_Superclass_ImageDimensionCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetProjectionDimension(self, *args):
        """SetProjectionDimension(self, unsigned int _arg)"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL3_Superclass_SetProjectionDimension(self, *args)

    def GetProjectionDimension(self):
        """GetProjectionDimension(self) -> unsigned int"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL3_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUL3IUL3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUL3IUL3_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumProjectionImageFilterIUL3IUL3_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUL3IUL3_Superclass
        
        Create a new object of the class itkMinimumProjectionImageFilterIUL3IUL3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumProjectionImageFilterIUL3IUL3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumProjectionImageFilterIUL3IUL3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIUL3IUL3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIUL3IUL3_Superclass.SetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL3_Superclass_SetProjectionDimension,None,itkMinimumProjectionImageFilterIUL3IUL3_Superclass)
itkMinimumProjectionImageFilterIUL3IUL3_Superclass.GetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL3_Superclass_GetProjectionDimension,None,itkMinimumProjectionImageFilterIUL3IUL3_Superclass)
itkMinimumProjectionImageFilterIUL3IUL3_Superclass.GetPointer = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL3_Superclass_GetPointer,None,itkMinimumProjectionImageFilterIUL3IUL3_Superclass)
itkMinimumProjectionImageFilterIUL3IUL3_Superclass_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL3_Superclass_swigregister
itkMinimumProjectionImageFilterIUL3IUL3_Superclass_swigregister(itkMinimumProjectionImageFilterIUL3IUL3_Superclass)

def itkMinimumProjectionImageFilterIUL3IUL3_Superclass___New_orig__():
  """itkMinimumProjectionImageFilterIUL3IUL3_Superclass___New_orig__()"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL3_Superclass___New_orig__()

def itkMinimumProjectionImageFilterIUL3IUL3_Superclass_cast(*args):
  """itkMinimumProjectionImageFilterIUL3IUL3_Superclass_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUL3IUL3_Superclass"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL3_Superclass_cast(*args)

class itkMinimumProjectionImageFilterIUS2IUS2_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """Proxy of C++ itkMinimumProjectionImageFilterIUS2IUS2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_InputImageDimension
    OutputImageDimension = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_OutputImageDimension
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_ImageDimensionCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetProjectionDimension(self, *args):
        """SetProjectionDimension(self, unsigned int _arg)"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_SetProjectionDimension(self, *args)

    def GetProjectionDimension(self):
        """GetProjectionDimension(self) -> unsigned int"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUS2IUS2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUS2IUS2_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumProjectionImageFilterIUS2IUS2_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUS2IUS2_Superclass
        
        Create a new object of the class itkMinimumProjectionImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumProjectionImageFilterIUS2IUS2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumProjectionImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIUS2IUS2_Superclass.SetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_SetProjectionDimension,None,itkMinimumProjectionImageFilterIUS2IUS2_Superclass)
itkMinimumProjectionImageFilterIUS2IUS2_Superclass.GetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_GetProjectionDimension,None,itkMinimumProjectionImageFilterIUS2IUS2_Superclass)
itkMinimumProjectionImageFilterIUS2IUS2_Superclass.GetPointer = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_GetPointer,None,itkMinimumProjectionImageFilterIUS2IUS2_Superclass)
itkMinimumProjectionImageFilterIUS2IUS2_Superclass_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_swigregister
itkMinimumProjectionImageFilterIUS2IUS2_Superclass_swigregister(itkMinimumProjectionImageFilterIUS2IUS2_Superclass)

def itkMinimumProjectionImageFilterIUS2IUS2_Superclass___New_orig__():
  """itkMinimumProjectionImageFilterIUS2IUS2_Superclass___New_orig__()"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass___New_orig__()

def itkMinimumProjectionImageFilterIUS2IUS2_Superclass_cast(*args):
  """itkMinimumProjectionImageFilterIUS2IUS2_Superclass_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUS2IUS2_Superclass"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_cast(*args)

class itkMinimumProjectionImageFilterIUS3IUS2_Superclass(itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2):
    """Proxy of C++ itkMinimumProjectionImageFilterIUS3IUS2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_InputImageDimension
    OutputImageDimension = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_OutputImageDimension
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_ImageDimensionCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetProjectionDimension(self, *args):
        """SetProjectionDimension(self, unsigned int _arg)"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_SetProjectionDimension(self, *args)

    def GetProjectionDimension(self):
        """GetProjectionDimension(self) -> unsigned int"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUS3IUS2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUS3IUS2_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumProjectionImageFilterIUS3IUS2_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUS3IUS2_Superclass
        
        Create a new object of the class itkMinimumProjectionImageFilterIUS3IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumProjectionImageFilterIUS3IUS2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumProjectionImageFilterIUS3IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIUS3IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIUS3IUS2_Superclass.SetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_SetProjectionDimension,None,itkMinimumProjectionImageFilterIUS3IUS2_Superclass)
itkMinimumProjectionImageFilterIUS3IUS2_Superclass.GetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_GetProjectionDimension,None,itkMinimumProjectionImageFilterIUS3IUS2_Superclass)
itkMinimumProjectionImageFilterIUS3IUS2_Superclass.GetPointer = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_GetPointer,None,itkMinimumProjectionImageFilterIUS3IUS2_Superclass)
itkMinimumProjectionImageFilterIUS3IUS2_Superclass_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_swigregister
itkMinimumProjectionImageFilterIUS3IUS2_Superclass_swigregister(itkMinimumProjectionImageFilterIUS3IUS2_Superclass)

def itkMinimumProjectionImageFilterIUS3IUS2_Superclass___New_orig__():
  """itkMinimumProjectionImageFilterIUS3IUS2_Superclass___New_orig__()"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass___New_orig__()

def itkMinimumProjectionImageFilterIUS3IUS2_Superclass_cast(*args):
  """itkMinimumProjectionImageFilterIUS3IUS2_Superclass_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUS3IUS2_Superclass"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_cast(*args)

class itkMinimumProjectionImageFilterIUS3IUS3_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """Proxy of C++ itkMinimumProjectionImageFilterIUS3IUS3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_InputImageDimension
    OutputImageDimension = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_OutputImageDimension
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_ImageDimensionCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetProjectionDimension(self, *args):
        """SetProjectionDimension(self, unsigned int _arg)"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_SetProjectionDimension(self, *args)

    def GetProjectionDimension(self):
        """GetProjectionDimension(self) -> unsigned int"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUS3IUS3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUS3IUS3_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumProjectionImageFilterIUS3IUS3_Superclass"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUS3IUS3_Superclass
        
        Create a new object of the class itkMinimumProjectionImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumProjectionImageFilterIUS3IUS3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumProjectionImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIUS3IUS3_Superclass.SetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_SetProjectionDimension,None,itkMinimumProjectionImageFilterIUS3IUS3_Superclass)
itkMinimumProjectionImageFilterIUS3IUS3_Superclass.GetProjectionDimension = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_GetProjectionDimension,None,itkMinimumProjectionImageFilterIUS3IUS3_Superclass)
itkMinimumProjectionImageFilterIUS3IUS3_Superclass.GetPointer = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_GetPointer,None,itkMinimumProjectionImageFilterIUS3IUS3_Superclass)
itkMinimumProjectionImageFilterIUS3IUS3_Superclass_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_swigregister
itkMinimumProjectionImageFilterIUS3IUS3_Superclass_swigregister(itkMinimumProjectionImageFilterIUS3IUS3_Superclass)

def itkMinimumProjectionImageFilterIUS3IUS3_Superclass___New_orig__():
  """itkMinimumProjectionImageFilterIUS3IUS3_Superclass___New_orig__()"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass___New_orig__()

def itkMinimumProjectionImageFilterIUS3IUS3_Superclass_cast(*args):
  """itkMinimumProjectionImageFilterIUS3IUS3_Superclass_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUS3IUS3_Superclass"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_cast(*args)

class itkMinimumProjectionImageFilterID2ID2(itkMinimumProjectionImageFilterID2ID2_Superclass):
    """Proxy of C++ itkMinimumProjectionImageFilterID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterID2ID2"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumProjectionImageFilterID2ID2"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterID2ID2
        
        Create a new object of the class itkMinimumProjectionImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumProjectionImageFilterID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumProjectionImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterID2ID2.GetPointer = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_GetPointer,None,itkMinimumProjectionImageFilterID2ID2)
itkMinimumProjectionImageFilterID2ID2_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_swigregister
itkMinimumProjectionImageFilterID2ID2_swigregister(itkMinimumProjectionImageFilterID2ID2)

def itkMinimumProjectionImageFilterID2ID2___New_orig__():
  """itkMinimumProjectionImageFilterID2ID2___New_orig__()"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2___New_orig__()

def itkMinimumProjectionImageFilterID2ID2_cast(*args):
  """itkMinimumProjectionImageFilterID2ID2_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterID2ID2"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_cast(*args)

class itkMinimumProjectionImageFilterID3ID2(itkMinimumProjectionImageFilterID3ID2_Superclass):
    """Proxy of C++ itkMinimumProjectionImageFilterID3ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterID3ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterID3ID2"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumProjectionImageFilterID3ID2"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterID3ID2
        
        Create a new object of the class itkMinimumProjectionImageFilterID3ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumProjectionImageFilterID3ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumProjectionImageFilterID3ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterID3ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterID3ID2.GetPointer = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_GetPointer,None,itkMinimumProjectionImageFilterID3ID2)
itkMinimumProjectionImageFilterID3ID2_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_swigregister
itkMinimumProjectionImageFilterID3ID2_swigregister(itkMinimumProjectionImageFilterID3ID2)

def itkMinimumProjectionImageFilterID3ID2___New_orig__():
  """itkMinimumProjectionImageFilterID3ID2___New_orig__()"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2___New_orig__()

def itkMinimumProjectionImageFilterID3ID2_cast(*args):
  """itkMinimumProjectionImageFilterID3ID2_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterID3ID2"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_cast(*args)

class itkMinimumProjectionImageFilterID3ID3(itkMinimumProjectionImageFilterID3ID3_Superclass):
    """Proxy of C++ itkMinimumProjectionImageFilterID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterID3ID3"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumProjectionImageFilterID3ID3"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterID3ID3
        
        Create a new object of the class itkMinimumProjectionImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumProjectionImageFilterID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumProjectionImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterID3ID3.GetPointer = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_GetPointer,None,itkMinimumProjectionImageFilterID3ID3)
itkMinimumProjectionImageFilterID3ID3_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_swigregister
itkMinimumProjectionImageFilterID3ID3_swigregister(itkMinimumProjectionImageFilterID3ID3)

def itkMinimumProjectionImageFilterID3ID3___New_orig__():
  """itkMinimumProjectionImageFilterID3ID3___New_orig__()"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3___New_orig__()

def itkMinimumProjectionImageFilterID3ID3_cast(*args):
  """itkMinimumProjectionImageFilterID3ID3_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterID3ID3"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_cast(*args)

class itkMinimumProjectionImageFilterIF2IF2(itkMinimumProjectionImageFilterIF2IF2_Superclass):
    """Proxy of C++ itkMinimumProjectionImageFilterIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIF2IF2"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumProjectionImageFilterIF2IF2"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIF2IF2
        
        Create a new object of the class itkMinimumProjectionImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumProjectionImageFilterIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumProjectionImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIF2IF2.GetPointer = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_GetPointer,None,itkMinimumProjectionImageFilterIF2IF2)
itkMinimumProjectionImageFilterIF2IF2_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_swigregister
itkMinimumProjectionImageFilterIF2IF2_swigregister(itkMinimumProjectionImageFilterIF2IF2)

def itkMinimumProjectionImageFilterIF2IF2___New_orig__():
  """itkMinimumProjectionImageFilterIF2IF2___New_orig__()"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2___New_orig__()

def itkMinimumProjectionImageFilterIF2IF2_cast(*args):
  """itkMinimumProjectionImageFilterIF2IF2_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIF2IF2"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_cast(*args)

class itkMinimumProjectionImageFilterIF3IF2(itkMinimumProjectionImageFilterIF3IF2_Superclass):
    """Proxy of C++ itkMinimumProjectionImageFilterIF3IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIF3IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIF3IF2"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumProjectionImageFilterIF3IF2"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIF3IF2
        
        Create a new object of the class itkMinimumProjectionImageFilterIF3IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumProjectionImageFilterIF3IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumProjectionImageFilterIF3IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIF3IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIF3IF2.GetPointer = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_GetPointer,None,itkMinimumProjectionImageFilterIF3IF2)
itkMinimumProjectionImageFilterIF3IF2_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_swigregister
itkMinimumProjectionImageFilterIF3IF2_swigregister(itkMinimumProjectionImageFilterIF3IF2)

def itkMinimumProjectionImageFilterIF3IF2___New_orig__():
  """itkMinimumProjectionImageFilterIF3IF2___New_orig__()"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2___New_orig__()

def itkMinimumProjectionImageFilterIF3IF2_cast(*args):
  """itkMinimumProjectionImageFilterIF3IF2_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIF3IF2"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_cast(*args)

class itkMinimumProjectionImageFilterIF3IF3(itkMinimumProjectionImageFilterIF3IF3_Superclass):
    """Proxy of C++ itkMinimumProjectionImageFilterIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIF3IF3"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumProjectionImageFilterIF3IF3"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIF3IF3
        
        Create a new object of the class itkMinimumProjectionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumProjectionImageFilterIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumProjectionImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIF3IF3.GetPointer = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_GetPointer,None,itkMinimumProjectionImageFilterIF3IF3)
itkMinimumProjectionImageFilterIF3IF3_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_swigregister
itkMinimumProjectionImageFilterIF3IF3_swigregister(itkMinimumProjectionImageFilterIF3IF3)

def itkMinimumProjectionImageFilterIF3IF3___New_orig__():
  """itkMinimumProjectionImageFilterIF3IF3___New_orig__()"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3___New_orig__()

def itkMinimumProjectionImageFilterIF3IF3_cast(*args):
  """itkMinimumProjectionImageFilterIF3IF3_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIF3IF3"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_cast(*args)

class itkMinimumProjectionImageFilterIUC2IUC2(itkMinimumProjectionImageFilterIUC2IUC2_Superclass):
    """Proxy of C++ itkMinimumProjectionImageFilterIUC2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUC2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUC2IUC2"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumProjectionImageFilterIUC2IUC2"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUC2IUC2
        
        Create a new object of the class itkMinimumProjectionImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumProjectionImageFilterIUC2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumProjectionImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_GetPointer,None,itkMinimumProjectionImageFilterIUC2IUC2)
itkMinimumProjectionImageFilterIUC2IUC2_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_swigregister
itkMinimumProjectionImageFilterIUC2IUC2_swigregister(itkMinimumProjectionImageFilterIUC2IUC2)

def itkMinimumProjectionImageFilterIUC2IUC2___New_orig__():
  """itkMinimumProjectionImageFilterIUC2IUC2___New_orig__()"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2___New_orig__()

def itkMinimumProjectionImageFilterIUC2IUC2_cast(*args):
  """itkMinimumProjectionImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUC2IUC2"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_cast(*args)

class itkMinimumProjectionImageFilterIUC3IUC2(itkMinimumProjectionImageFilterIUC3IUC2_Superclass):
    """Proxy of C++ itkMinimumProjectionImageFilterIUC3IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUC3IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUC3IUC2"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumProjectionImageFilterIUC3IUC2"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUC3IUC2
        
        Create a new object of the class itkMinimumProjectionImageFilterIUC3IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumProjectionImageFilterIUC3IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumProjectionImageFilterIUC3IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIUC3IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIUC3IUC2.GetPointer = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_GetPointer,None,itkMinimumProjectionImageFilterIUC3IUC2)
itkMinimumProjectionImageFilterIUC3IUC2_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_swigregister
itkMinimumProjectionImageFilterIUC3IUC2_swigregister(itkMinimumProjectionImageFilterIUC3IUC2)

def itkMinimumProjectionImageFilterIUC3IUC2___New_orig__():
  """itkMinimumProjectionImageFilterIUC3IUC2___New_orig__()"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2___New_orig__()

def itkMinimumProjectionImageFilterIUC3IUC2_cast(*args):
  """itkMinimumProjectionImageFilterIUC3IUC2_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUC3IUC2"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_cast(*args)

class itkMinimumProjectionImageFilterIUC3IUC3(itkMinimumProjectionImageFilterIUC3IUC3_Superclass):
    """Proxy of C++ itkMinimumProjectionImageFilterIUC3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUC3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUC3IUC3"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumProjectionImageFilterIUC3IUC3"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUC3IUC3
        
        Create a new object of the class itkMinimumProjectionImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumProjectionImageFilterIUC3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumProjectionImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_GetPointer,None,itkMinimumProjectionImageFilterIUC3IUC3)
itkMinimumProjectionImageFilterIUC3IUC3_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_swigregister
itkMinimumProjectionImageFilterIUC3IUC3_swigregister(itkMinimumProjectionImageFilterIUC3IUC3)

def itkMinimumProjectionImageFilterIUC3IUC3___New_orig__():
  """itkMinimumProjectionImageFilterIUC3IUC3___New_orig__()"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3___New_orig__()

def itkMinimumProjectionImageFilterIUC3IUC3_cast(*args):
  """itkMinimumProjectionImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUC3IUC3"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_cast(*args)

class itkMinimumProjectionImageFilterIUL2IUL2(itkMinimumProjectionImageFilterIUL2IUL2_Superclass):
    """Proxy of C++ itkMinimumProjectionImageFilterIUL2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL2IUL2_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL2IUL2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUL2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUL2IUL2"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumProjectionImageFilterIUL2IUL2"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUL2IUL2
        
        Create a new object of the class itkMinimumProjectionImageFilterIUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumProjectionImageFilterIUL2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumProjectionImageFilterIUL2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIUL2IUL2.GetPointer = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL2IUL2_GetPointer,None,itkMinimumProjectionImageFilterIUL2IUL2)
itkMinimumProjectionImageFilterIUL2IUL2_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL2IUL2_swigregister
itkMinimumProjectionImageFilterIUL2IUL2_swigregister(itkMinimumProjectionImageFilterIUL2IUL2)

def itkMinimumProjectionImageFilterIUL2IUL2___New_orig__():
  """itkMinimumProjectionImageFilterIUL2IUL2___New_orig__()"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL2IUL2___New_orig__()

def itkMinimumProjectionImageFilterIUL2IUL2_cast(*args):
  """itkMinimumProjectionImageFilterIUL2IUL2_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUL2IUL2"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL2IUL2_cast(*args)

class itkMinimumProjectionImageFilterIUL3IUL2(itkMinimumProjectionImageFilterIUL3IUL2_Superclass):
    """Proxy of C++ itkMinimumProjectionImageFilterIUL3IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL2_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUL3IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUL3IUL2"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumProjectionImageFilterIUL3IUL2"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUL3IUL2
        
        Create a new object of the class itkMinimumProjectionImageFilterIUL3IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumProjectionImageFilterIUL3IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumProjectionImageFilterIUL3IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIUL3IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIUL3IUL2.GetPointer = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL2_GetPointer,None,itkMinimumProjectionImageFilterIUL3IUL2)
itkMinimumProjectionImageFilterIUL3IUL2_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL2_swigregister
itkMinimumProjectionImageFilterIUL3IUL2_swigregister(itkMinimumProjectionImageFilterIUL3IUL2)

def itkMinimumProjectionImageFilterIUL3IUL2___New_orig__():
  """itkMinimumProjectionImageFilterIUL3IUL2___New_orig__()"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL2___New_orig__()

def itkMinimumProjectionImageFilterIUL3IUL2_cast(*args):
  """itkMinimumProjectionImageFilterIUL3IUL2_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUL3IUL2"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL2_cast(*args)

class itkMinimumProjectionImageFilterIUL3IUL3(itkMinimumProjectionImageFilterIUL3IUL3_Superclass):
    """Proxy of C++ itkMinimumProjectionImageFilterIUL3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL3_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUL3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUL3IUL3"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumProjectionImageFilterIUL3IUL3"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUL3IUL3
        
        Create a new object of the class itkMinimumProjectionImageFilterIUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumProjectionImageFilterIUL3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumProjectionImageFilterIUL3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIUL3IUL3.GetPointer = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL3_GetPointer,None,itkMinimumProjectionImageFilterIUL3IUL3)
itkMinimumProjectionImageFilterIUL3IUL3_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL3_swigregister
itkMinimumProjectionImageFilterIUL3IUL3_swigregister(itkMinimumProjectionImageFilterIUL3IUL3)

def itkMinimumProjectionImageFilterIUL3IUL3___New_orig__():
  """itkMinimumProjectionImageFilterIUL3IUL3___New_orig__()"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL3___New_orig__()

def itkMinimumProjectionImageFilterIUL3IUL3_cast(*args):
  """itkMinimumProjectionImageFilterIUL3IUL3_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUL3IUL3"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUL3IUL3_cast(*args)

class itkMinimumProjectionImageFilterIUS2IUS2(itkMinimumProjectionImageFilterIUS2IUS2_Superclass):
    """Proxy of C++ itkMinimumProjectionImageFilterIUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUS2IUS2"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumProjectionImageFilterIUS2IUS2"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUS2IUS2
        
        Create a new object of the class itkMinimumProjectionImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumProjectionImageFilterIUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumProjectionImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIUS2IUS2.GetPointer = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_GetPointer,None,itkMinimumProjectionImageFilterIUS2IUS2)
itkMinimumProjectionImageFilterIUS2IUS2_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_swigregister
itkMinimumProjectionImageFilterIUS2IUS2_swigregister(itkMinimumProjectionImageFilterIUS2IUS2)

def itkMinimumProjectionImageFilterIUS2IUS2___New_orig__():
  """itkMinimumProjectionImageFilterIUS2IUS2___New_orig__()"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2___New_orig__()

def itkMinimumProjectionImageFilterIUS2IUS2_cast(*args):
  """itkMinimumProjectionImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUS2IUS2"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_cast(*args)

class itkMinimumProjectionImageFilterIUS3IUS2(itkMinimumProjectionImageFilterIUS3IUS2_Superclass):
    """Proxy of C++ itkMinimumProjectionImageFilterIUS3IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUS3IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUS3IUS2"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumProjectionImageFilterIUS3IUS2"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUS3IUS2
        
        Create a new object of the class itkMinimumProjectionImageFilterIUS3IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumProjectionImageFilterIUS3IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumProjectionImageFilterIUS3IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIUS3IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIUS3IUS2.GetPointer = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_GetPointer,None,itkMinimumProjectionImageFilterIUS3IUS2)
itkMinimumProjectionImageFilterIUS3IUS2_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_swigregister
itkMinimumProjectionImageFilterIUS3IUS2_swigregister(itkMinimumProjectionImageFilterIUS3IUS2)

def itkMinimumProjectionImageFilterIUS3IUS2___New_orig__():
  """itkMinimumProjectionImageFilterIUS3IUS2___New_orig__()"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2___New_orig__()

def itkMinimumProjectionImageFilterIUS3IUS2_cast(*args):
  """itkMinimumProjectionImageFilterIUS3IUS2_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUS3IUS2"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_cast(*args)

class itkMinimumProjectionImageFilterIUS3IUS3(itkMinimumProjectionImageFilterIUS3IUS3_Superclass):
    """Proxy of C++ itkMinimumProjectionImageFilterIUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_InputPixelTypeGreaterThanComparable
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUS3IUS3"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumProjectionImageFilterIUS3IUS3"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUS3IUS3
        
        Create a new object of the class itkMinimumProjectionImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumProjectionImageFilterIUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumProjectionImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumProjectionImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumProjectionImageFilterIUS3IUS3.GetPointer = new_instancemethod(_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_GetPointer,None,itkMinimumProjectionImageFilterIUS3IUS3)
itkMinimumProjectionImageFilterIUS3IUS3_swigregister = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_swigregister
itkMinimumProjectionImageFilterIUS3IUS3_swigregister(itkMinimumProjectionImageFilterIUS3IUS3)

def itkMinimumProjectionImageFilterIUS3IUS3___New_orig__():
  """itkMinimumProjectionImageFilterIUS3IUS3___New_orig__()"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3___New_orig__()

def itkMinimumProjectionImageFilterIUS3IUS3_cast(*args):
  """itkMinimumProjectionImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkMinimumProjectionImageFilterIUS3IUS3"""
  return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_cast(*args)



