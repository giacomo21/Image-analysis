// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkBinaryThresholdProjectionImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkBinaryThresholdProjectionImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkBinaryThresholdProjectionImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkBinaryThresholdProjectionImageFilterJava
#endif
#ifdef SWIGLUA
%module itkBinaryThresholdProjectionImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkBinaryThresholdProjectionImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkBinaryThresholdProjectionImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkBinaryThresholdProjectionImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkBinaryThresholdProjectionImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkBinaryThresholdProjectionImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkBinaryThresholdProjectionImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkBinaryThresholdProjectionImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkBinaryThresholdProjectionImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkBinaryThresholdProjectionImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkBinaryThresholdProjectionImageFilterPython
#endif
#ifdef SWIGR
%module itkBinaryThresholdProjectionImageFilterR
#endif
#ifdef SWIGRUBY
%module itkBinaryThresholdProjectionImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkBinaryThresholdProjectionImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkBinaryThresholdProjectionImageFilterTcl
#endif
#ifdef SWIGXML
%module itkBinaryThresholdProjectionImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Review.includes"
%}


%{
%}




%import wrap_itkImageToImageFilterB.i
%import wrap_ITKCommonBase.i
%import wrap_ITKRegions.i
%import wrap_itkImageToImageFilterA.i


%include itk.i
%include wrap_itkBinaryThresholdProjectionImageFilter_ext.i


 class itkBinaryThresholdProjectionImageFilterID2ID2_Pointer {
   public:
     itkBinaryThresholdProjectionImageFilterID2ID2_Pointer();
     itkBinaryThresholdProjectionImageFilterID2ID2_Pointer(itkBinaryThresholdProjectionImageFilterID2ID2_Pointer const & p);
     itkBinaryThresholdProjectionImageFilterID2ID2_Pointer(itkBinaryThresholdProjectionImageFilterID2ID2 * p);
     ~itkBinaryThresholdProjectionImageFilterID2ID2_Pointer();
     itkBinaryThresholdProjectionImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdProjectionImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkBinaryThresholdProjectionImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkBinaryThresholdProjectionImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdProjectionImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdProjectionImageFilterID2ID2_Pointer const & r) const;
     itkBinaryThresholdProjectionImageFilterID2ID2_Pointer & operator=(itkBinaryThresholdProjectionImageFilterID2ID2_Pointer const & r);
     itkBinaryThresholdProjectionImageFilterID2ID2_Pointer & operator=(itkBinaryThresholdProjectionImageFilterID2ID2 * r);
     itkBinaryThresholdProjectionImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdProjectionImageFilterID2ID2_Superclass : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimensionCheck = 1 };
     static itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetProjectionDimension(unsigned int const _arg);
     virtual unsigned int const & GetProjectionDimension() const;
   private:
     itkBinaryThresholdProjectionImageFilterID2ID2_Superclass(itkBinaryThresholdProjectionImageFilterID2ID2_Superclass const & arg0);
     void operator=(itkBinaryThresholdProjectionImageFilterID2ID2_Superclass const & arg0);
   protected:
     itkBinaryThresholdProjectionImageFilterID2ID2_Superclass();
     ~itkBinaryThresholdProjectionImageFilterID2ID2_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual itk::Function::BinaryThresholdAccumulator< double, double > NewAccumulator(unsigned long arg0) const;
 };


 class itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_Pointer {
   public:
     itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_Pointer();
     itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_Pointer(itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_Pointer const & p);
     itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_Pointer(itkBinaryThresholdProjectionImageFilterID2ID2_Superclass * p);
     ~itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_Pointer();
     itkBinaryThresholdProjectionImageFilterID2ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdProjectionImageFilterID2ID2_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_Pointer const & r) const;
     itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_Pointer & operator=(itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_Pointer const & r);
     itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_Pointer & operator=(itkBinaryThresholdProjectionImageFilterID2ID2_Superclass * r);
     itkBinaryThresholdProjectionImageFilterID2ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdProjectionImageFilterID3ID2_Pointer {
   public:
     itkBinaryThresholdProjectionImageFilterID3ID2_Pointer();
     itkBinaryThresholdProjectionImageFilterID3ID2_Pointer(itkBinaryThresholdProjectionImageFilterID3ID2_Pointer const & p);
     itkBinaryThresholdProjectionImageFilterID3ID2_Pointer(itkBinaryThresholdProjectionImageFilterID3ID2 * p);
     ~itkBinaryThresholdProjectionImageFilterID3ID2_Pointer();
     itkBinaryThresholdProjectionImageFilterID3ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdProjectionImageFilterID3ID2 * GetPointer() const;
     bool operator<(itkBinaryThresholdProjectionImageFilterID3ID2_Pointer const & r) const;
     bool operator>(itkBinaryThresholdProjectionImageFilterID3ID2_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdProjectionImageFilterID3ID2_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdProjectionImageFilterID3ID2_Pointer const & r) const;
     itkBinaryThresholdProjectionImageFilterID3ID2_Pointer & operator=(itkBinaryThresholdProjectionImageFilterID3ID2_Pointer const & r);
     itkBinaryThresholdProjectionImageFilterID3ID2_Pointer & operator=(itkBinaryThresholdProjectionImageFilterID3ID2 * r);
     itkBinaryThresholdProjectionImageFilterID3ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdProjectionImageFilterID3ID2_Superclass : public itkImageToImageFilterID3ID2 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimensionCheck = 1 };
     static itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetProjectionDimension(unsigned int const _arg);
     virtual unsigned int const & GetProjectionDimension() const;
   private:
     itkBinaryThresholdProjectionImageFilterID3ID2_Superclass(itkBinaryThresholdProjectionImageFilterID3ID2_Superclass const & arg0);
     void operator=(itkBinaryThresholdProjectionImageFilterID3ID2_Superclass const & arg0);
   protected:
     itkBinaryThresholdProjectionImageFilterID3ID2_Superclass();
     ~itkBinaryThresholdProjectionImageFilterID3ID2_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual itk::Function::BinaryThresholdAccumulator< double, double > NewAccumulator(unsigned long arg0) const;
 };


 class itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_Pointer {
   public:
     itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_Pointer();
     itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_Pointer(itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_Pointer const & p);
     itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_Pointer(itkBinaryThresholdProjectionImageFilterID3ID2_Superclass * p);
     ~itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_Pointer();
     itkBinaryThresholdProjectionImageFilterID3ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdProjectionImageFilterID3ID2_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_Pointer const & r) const;
     itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_Pointer & operator=(itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_Pointer const & r);
     itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_Pointer & operator=(itkBinaryThresholdProjectionImageFilterID3ID2_Superclass * r);
     itkBinaryThresholdProjectionImageFilterID3ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdProjectionImageFilterID3ID3_Pointer {
   public:
     itkBinaryThresholdProjectionImageFilterID3ID3_Pointer();
     itkBinaryThresholdProjectionImageFilterID3ID3_Pointer(itkBinaryThresholdProjectionImageFilterID3ID3_Pointer const & p);
     itkBinaryThresholdProjectionImageFilterID3ID3_Pointer(itkBinaryThresholdProjectionImageFilterID3ID3 * p);
     ~itkBinaryThresholdProjectionImageFilterID3ID3_Pointer();
     itkBinaryThresholdProjectionImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdProjectionImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkBinaryThresholdProjectionImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkBinaryThresholdProjectionImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdProjectionImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdProjectionImageFilterID3ID3_Pointer const & r) const;
     itkBinaryThresholdProjectionImageFilterID3ID3_Pointer & operator=(itkBinaryThresholdProjectionImageFilterID3ID3_Pointer const & r);
     itkBinaryThresholdProjectionImageFilterID3ID3_Pointer & operator=(itkBinaryThresholdProjectionImageFilterID3ID3 * r);
     itkBinaryThresholdProjectionImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdProjectionImageFilterID3ID3_Superclass : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimensionCheck = 1 };
     static itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetProjectionDimension(unsigned int const _arg);
     virtual unsigned int const & GetProjectionDimension() const;
   private:
     itkBinaryThresholdProjectionImageFilterID3ID3_Superclass(itkBinaryThresholdProjectionImageFilterID3ID3_Superclass const & arg0);
     void operator=(itkBinaryThresholdProjectionImageFilterID3ID3_Superclass const & arg0);
   protected:
     itkBinaryThresholdProjectionImageFilterID3ID3_Superclass();
     ~itkBinaryThresholdProjectionImageFilterID3ID3_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual itk::Function::BinaryThresholdAccumulator< double, double > NewAccumulator(unsigned long arg0) const;
 };


 class itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_Pointer {
   public:
     itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_Pointer();
     itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_Pointer(itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_Pointer const & p);
     itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_Pointer(itkBinaryThresholdProjectionImageFilterID3ID3_Superclass * p);
     ~itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_Pointer();
     itkBinaryThresholdProjectionImageFilterID3ID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdProjectionImageFilterID3ID3_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_Pointer const & r) const;
     itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_Pointer & operator=(itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_Pointer const & r);
     itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_Pointer & operator=(itkBinaryThresholdProjectionImageFilterID3ID3_Superclass * r);
     itkBinaryThresholdProjectionImageFilterID3ID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdProjectionImageFilterIF2IF2_Pointer {
   public:
     itkBinaryThresholdProjectionImageFilterIF2IF2_Pointer();
     itkBinaryThresholdProjectionImageFilterIF2IF2_Pointer(itkBinaryThresholdProjectionImageFilterIF2IF2_Pointer const & p);
     itkBinaryThresholdProjectionImageFilterIF2IF2_Pointer(itkBinaryThresholdProjectionImageFilterIF2IF2 * p);
     ~itkBinaryThresholdProjectionImageFilterIF2IF2_Pointer();
     itkBinaryThresholdProjectionImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdProjectionImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkBinaryThresholdProjectionImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkBinaryThresholdProjectionImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdProjectionImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdProjectionImageFilterIF2IF2_Pointer const & r) const;
     itkBinaryThresholdProjectionImageFilterIF2IF2_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIF2IF2_Pointer const & r);
     itkBinaryThresholdProjectionImageFilterIF2IF2_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIF2IF2 * r);
     itkBinaryThresholdProjectionImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimensionCheck = 1 };
     static itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetProjectionDimension(unsigned int const _arg);
     virtual unsigned int const & GetProjectionDimension() const;
   private:
     itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass(itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass const & arg0);
     void operator=(itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass const & arg0);
   protected:
     itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass();
     ~itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual itk::Function::BinaryThresholdAccumulator< float, float > NewAccumulator(unsigned long arg0) const;
 };


 class itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_Pointer {
   public:
     itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_Pointer();
     itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_Pointer(itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_Pointer const & p);
     itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_Pointer(itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass * p);
     ~itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_Pointer();
     itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_Pointer const & r) const;
     itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_Pointer const & r);
     itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass * r);
     itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdProjectionImageFilterIF3IF2_Pointer {
   public:
     itkBinaryThresholdProjectionImageFilterIF3IF2_Pointer();
     itkBinaryThresholdProjectionImageFilterIF3IF2_Pointer(itkBinaryThresholdProjectionImageFilterIF3IF2_Pointer const & p);
     itkBinaryThresholdProjectionImageFilterIF3IF2_Pointer(itkBinaryThresholdProjectionImageFilterIF3IF2 * p);
     ~itkBinaryThresholdProjectionImageFilterIF3IF2_Pointer();
     itkBinaryThresholdProjectionImageFilterIF3IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdProjectionImageFilterIF3IF2 * GetPointer() const;
     bool operator<(itkBinaryThresholdProjectionImageFilterIF3IF2_Pointer const & r) const;
     bool operator>(itkBinaryThresholdProjectionImageFilterIF3IF2_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdProjectionImageFilterIF3IF2_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdProjectionImageFilterIF3IF2_Pointer const & r) const;
     itkBinaryThresholdProjectionImageFilterIF3IF2_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIF3IF2_Pointer const & r);
     itkBinaryThresholdProjectionImageFilterIF3IF2_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIF3IF2 * r);
     itkBinaryThresholdProjectionImageFilterIF3IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass : public itkImageToImageFilterIF3IF2 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimensionCheck = 1 };
     static itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetProjectionDimension(unsigned int const _arg);
     virtual unsigned int const & GetProjectionDimension() const;
   private:
     itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass(itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass const & arg0);
     void operator=(itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass const & arg0);
   protected:
     itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass();
     ~itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual itk::Function::BinaryThresholdAccumulator< float, float > NewAccumulator(unsigned long arg0) const;
 };


 class itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_Pointer {
   public:
     itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_Pointer();
     itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_Pointer(itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_Pointer const & p);
     itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_Pointer(itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass * p);
     ~itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_Pointer();
     itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_Pointer const & r) const;
     itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_Pointer const & r);
     itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass * r);
     itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdProjectionImageFilterIF3IF3_Pointer {
   public:
     itkBinaryThresholdProjectionImageFilterIF3IF3_Pointer();
     itkBinaryThresholdProjectionImageFilterIF3IF3_Pointer(itkBinaryThresholdProjectionImageFilterIF3IF3_Pointer const & p);
     itkBinaryThresholdProjectionImageFilterIF3IF3_Pointer(itkBinaryThresholdProjectionImageFilterIF3IF3 * p);
     ~itkBinaryThresholdProjectionImageFilterIF3IF3_Pointer();
     itkBinaryThresholdProjectionImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdProjectionImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkBinaryThresholdProjectionImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkBinaryThresholdProjectionImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdProjectionImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdProjectionImageFilterIF3IF3_Pointer const & r) const;
     itkBinaryThresholdProjectionImageFilterIF3IF3_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIF3IF3_Pointer const & r);
     itkBinaryThresholdProjectionImageFilterIF3IF3_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIF3IF3 * r);
     itkBinaryThresholdProjectionImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimensionCheck = 1 };
     static itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetProjectionDimension(unsigned int const _arg);
     virtual unsigned int const & GetProjectionDimension() const;
   private:
     itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass(itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass const & arg0);
     void operator=(itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass const & arg0);
   protected:
     itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass();
     ~itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual itk::Function::BinaryThresholdAccumulator< float, float > NewAccumulator(unsigned long arg0) const;
 };


 class itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_Pointer {
   public:
     itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_Pointer();
     itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_Pointer(itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_Pointer const & p);
     itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_Pointer(itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass * p);
     ~itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_Pointer();
     itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_Pointer const & r) const;
     itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_Pointer const & r);
     itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass * r);
     itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdProjectionImageFilterIUC2IUC2_Pointer {
   public:
     itkBinaryThresholdProjectionImageFilterIUC2IUC2_Pointer();
     itkBinaryThresholdProjectionImageFilterIUC2IUC2_Pointer(itkBinaryThresholdProjectionImageFilterIUC2IUC2_Pointer const & p);
     itkBinaryThresholdProjectionImageFilterIUC2IUC2_Pointer(itkBinaryThresholdProjectionImageFilterIUC2IUC2 * p);
     ~itkBinaryThresholdProjectionImageFilterIUC2IUC2_Pointer();
     itkBinaryThresholdProjectionImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdProjectionImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkBinaryThresholdProjectionImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkBinaryThresholdProjectionImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdProjectionImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdProjectionImageFilterIUC2IUC2_Pointer const & r) const;
     itkBinaryThresholdProjectionImageFilterIUC2IUC2_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUC2IUC2_Pointer const & r);
     itkBinaryThresholdProjectionImageFilterIUC2IUC2_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUC2IUC2 * r);
     itkBinaryThresholdProjectionImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimensionCheck = 1 };
     static itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetProjectionDimension(unsigned int const _arg);
     virtual unsigned int const & GetProjectionDimension() const;
   private:
     itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass(itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass const & arg0);
     void operator=(itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass const & arg0);
   protected:
     itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass();
     ~itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual itk::Function::BinaryThresholdAccumulator< unsigned char, unsigned char > NewAccumulator(unsigned long arg0) const;
 };


 class itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_Pointer {
   public:
     itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_Pointer();
     itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_Pointer(itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_Pointer const & p);
     itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_Pointer(itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass * p);
     ~itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_Pointer();
     itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_Pointer const & r);
     itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass * r);
     itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdProjectionImageFilterIUC3IUC2_Pointer {
   public:
     itkBinaryThresholdProjectionImageFilterIUC3IUC2_Pointer();
     itkBinaryThresholdProjectionImageFilterIUC3IUC2_Pointer(itkBinaryThresholdProjectionImageFilterIUC3IUC2_Pointer const & p);
     itkBinaryThresholdProjectionImageFilterIUC3IUC2_Pointer(itkBinaryThresholdProjectionImageFilterIUC3IUC2 * p);
     ~itkBinaryThresholdProjectionImageFilterIUC3IUC2_Pointer();
     itkBinaryThresholdProjectionImageFilterIUC3IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdProjectionImageFilterIUC3IUC2 * GetPointer() const;
     bool operator<(itkBinaryThresholdProjectionImageFilterIUC3IUC2_Pointer const & r) const;
     bool operator>(itkBinaryThresholdProjectionImageFilterIUC3IUC2_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdProjectionImageFilterIUC3IUC2_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdProjectionImageFilterIUC3IUC2_Pointer const & r) const;
     itkBinaryThresholdProjectionImageFilterIUC3IUC2_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUC3IUC2_Pointer const & r);
     itkBinaryThresholdProjectionImageFilterIUC3IUC2_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUC3IUC2 * r);
     itkBinaryThresholdProjectionImageFilterIUC3IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass : public itkImageToImageFilterIUC3IUC2 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimensionCheck = 1 };
     static itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetProjectionDimension(unsigned int const _arg);
     virtual unsigned int const & GetProjectionDimension() const;
   private:
     itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass(itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass const & arg0);
     void operator=(itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass const & arg0);
   protected:
     itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass();
     ~itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual itk::Function::BinaryThresholdAccumulator< unsigned char, unsigned char > NewAccumulator(unsigned long arg0) const;
 };


 class itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_Pointer {
   public:
     itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_Pointer();
     itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_Pointer(itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_Pointer const & p);
     itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_Pointer(itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass * p);
     ~itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_Pointer();
     itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_Pointer const & r) const;
     itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_Pointer const & r);
     itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass * r);
     itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdProjectionImageFilterIUC3IUC3_Pointer {
   public:
     itkBinaryThresholdProjectionImageFilterIUC3IUC3_Pointer();
     itkBinaryThresholdProjectionImageFilterIUC3IUC3_Pointer(itkBinaryThresholdProjectionImageFilterIUC3IUC3_Pointer const & p);
     itkBinaryThresholdProjectionImageFilterIUC3IUC3_Pointer(itkBinaryThresholdProjectionImageFilterIUC3IUC3 * p);
     ~itkBinaryThresholdProjectionImageFilterIUC3IUC3_Pointer();
     itkBinaryThresholdProjectionImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdProjectionImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkBinaryThresholdProjectionImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkBinaryThresholdProjectionImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdProjectionImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdProjectionImageFilterIUC3IUC3_Pointer const & r) const;
     itkBinaryThresholdProjectionImageFilterIUC3IUC3_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUC3IUC3_Pointer const & r);
     itkBinaryThresholdProjectionImageFilterIUC3IUC3_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUC3IUC3 * r);
     itkBinaryThresholdProjectionImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimensionCheck = 1 };
     static itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetProjectionDimension(unsigned int const _arg);
     virtual unsigned int const & GetProjectionDimension() const;
   private:
     itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass(itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass const & arg0);
     void operator=(itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass const & arg0);
   protected:
     itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass();
     ~itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual itk::Function::BinaryThresholdAccumulator< unsigned char, unsigned char > NewAccumulator(unsigned long arg0) const;
 };


 class itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_Pointer {
   public:
     itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_Pointer();
     itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_Pointer(itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_Pointer const & p);
     itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_Pointer(itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass * p);
     ~itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_Pointer();
     itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_Pointer const & r);
     itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass * r);
     itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdProjectionImageFilterIUL2IUL2_Pointer {
   public:
     itkBinaryThresholdProjectionImageFilterIUL2IUL2_Pointer();
     itkBinaryThresholdProjectionImageFilterIUL2IUL2_Pointer(itkBinaryThresholdProjectionImageFilterIUL2IUL2_Pointer const & p);
     itkBinaryThresholdProjectionImageFilterIUL2IUL2_Pointer(itkBinaryThresholdProjectionImageFilterIUL2IUL2 * p);
     ~itkBinaryThresholdProjectionImageFilterIUL2IUL2_Pointer();
     itkBinaryThresholdProjectionImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdProjectionImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkBinaryThresholdProjectionImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkBinaryThresholdProjectionImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdProjectionImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdProjectionImageFilterIUL2IUL2_Pointer const & r) const;
     itkBinaryThresholdProjectionImageFilterIUL2IUL2_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUL2IUL2_Pointer const & r);
     itkBinaryThresholdProjectionImageFilterIUL2IUL2_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUL2IUL2 * r);
     itkBinaryThresholdProjectionImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdProjectionImageFilterIUL2IUL2_Superclass : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimensionCheck = 1 };
     static itkBinaryThresholdProjectionImageFilterIUL2IUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetProjectionDimension(unsigned int const _arg);
     virtual unsigned int const & GetProjectionDimension() const;
   private:
     itkBinaryThresholdProjectionImageFilterIUL2IUL2_Superclass(itkBinaryThresholdProjectionImageFilterIUL2IUL2_Superclass const & arg0);
     void operator=(itkBinaryThresholdProjectionImageFilterIUL2IUL2_Superclass const & arg0);
   protected:
     itkBinaryThresholdProjectionImageFilterIUL2IUL2_Superclass();
     ~itkBinaryThresholdProjectionImageFilterIUL2IUL2_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual itk::Function::BinaryThresholdAccumulator< unsigned long, unsigned long > NewAccumulator(unsigned long arg0) const;
 };


 class itkBinaryThresholdProjectionImageFilterIUL2IUL2_Superclass_Pointer {
   public:
     itkBinaryThresholdProjectionImageFilterIUL2IUL2_Superclass_Pointer();
     itkBinaryThresholdProjectionImageFilterIUL2IUL2_Superclass_Pointer(itkBinaryThresholdProjectionImageFilterIUL2IUL2_Superclass_Pointer const & p);
     itkBinaryThresholdProjectionImageFilterIUL2IUL2_Superclass_Pointer(itkBinaryThresholdProjectionImageFilterIUL2IUL2_Superclass * p);
     ~itkBinaryThresholdProjectionImageFilterIUL2IUL2_Superclass_Pointer();
     itkBinaryThresholdProjectionImageFilterIUL2IUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdProjectionImageFilterIUL2IUL2_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdProjectionImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdProjectionImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdProjectionImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdProjectionImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     itkBinaryThresholdProjectionImageFilterIUL2IUL2_Superclass_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUL2IUL2_Superclass_Pointer const & r);
     itkBinaryThresholdProjectionImageFilterIUL2IUL2_Superclass_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUL2IUL2_Superclass * r);
     itkBinaryThresholdProjectionImageFilterIUL2IUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdProjectionImageFilterIUL3IUL2_Pointer {
   public:
     itkBinaryThresholdProjectionImageFilterIUL3IUL2_Pointer();
     itkBinaryThresholdProjectionImageFilterIUL3IUL2_Pointer(itkBinaryThresholdProjectionImageFilterIUL3IUL2_Pointer const & p);
     itkBinaryThresholdProjectionImageFilterIUL3IUL2_Pointer(itkBinaryThresholdProjectionImageFilterIUL3IUL2 * p);
     ~itkBinaryThresholdProjectionImageFilterIUL3IUL2_Pointer();
     itkBinaryThresholdProjectionImageFilterIUL3IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdProjectionImageFilterIUL3IUL2 * GetPointer() const;
     bool operator<(itkBinaryThresholdProjectionImageFilterIUL3IUL2_Pointer const & r) const;
     bool operator>(itkBinaryThresholdProjectionImageFilterIUL3IUL2_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdProjectionImageFilterIUL3IUL2_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdProjectionImageFilterIUL3IUL2_Pointer const & r) const;
     itkBinaryThresholdProjectionImageFilterIUL3IUL2_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUL3IUL2_Pointer const & r);
     itkBinaryThresholdProjectionImageFilterIUL3IUL2_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUL3IUL2 * r);
     itkBinaryThresholdProjectionImageFilterIUL3IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdProjectionImageFilterIUL3IUL2_Superclass : public itkImageToImageFilterIUL3IUL2 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimensionCheck = 1 };
     static itkBinaryThresholdProjectionImageFilterIUL3IUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetProjectionDimension(unsigned int const _arg);
     virtual unsigned int const & GetProjectionDimension() const;
   private:
     itkBinaryThresholdProjectionImageFilterIUL3IUL2_Superclass(itkBinaryThresholdProjectionImageFilterIUL3IUL2_Superclass const & arg0);
     void operator=(itkBinaryThresholdProjectionImageFilterIUL3IUL2_Superclass const & arg0);
   protected:
     itkBinaryThresholdProjectionImageFilterIUL3IUL2_Superclass();
     ~itkBinaryThresholdProjectionImageFilterIUL3IUL2_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual itk::Function::BinaryThresholdAccumulator< unsigned long, unsigned long > NewAccumulator(unsigned long arg0) const;
 };


 class itkBinaryThresholdProjectionImageFilterIUL3IUL2_Superclass_Pointer {
   public:
     itkBinaryThresholdProjectionImageFilterIUL3IUL2_Superclass_Pointer();
     itkBinaryThresholdProjectionImageFilterIUL3IUL2_Superclass_Pointer(itkBinaryThresholdProjectionImageFilterIUL3IUL2_Superclass_Pointer const & p);
     itkBinaryThresholdProjectionImageFilterIUL3IUL2_Superclass_Pointer(itkBinaryThresholdProjectionImageFilterIUL3IUL2_Superclass * p);
     ~itkBinaryThresholdProjectionImageFilterIUL3IUL2_Superclass_Pointer();
     itkBinaryThresholdProjectionImageFilterIUL3IUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdProjectionImageFilterIUL3IUL2_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdProjectionImageFilterIUL3IUL2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdProjectionImageFilterIUL3IUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdProjectionImageFilterIUL3IUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdProjectionImageFilterIUL3IUL2_Superclass_Pointer const & r) const;
     itkBinaryThresholdProjectionImageFilterIUL3IUL2_Superclass_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUL3IUL2_Superclass_Pointer const & r);
     itkBinaryThresholdProjectionImageFilterIUL3IUL2_Superclass_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUL3IUL2_Superclass * r);
     itkBinaryThresholdProjectionImageFilterIUL3IUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdProjectionImageFilterIUL3IUL3_Pointer {
   public:
     itkBinaryThresholdProjectionImageFilterIUL3IUL3_Pointer();
     itkBinaryThresholdProjectionImageFilterIUL3IUL3_Pointer(itkBinaryThresholdProjectionImageFilterIUL3IUL3_Pointer const & p);
     itkBinaryThresholdProjectionImageFilterIUL3IUL3_Pointer(itkBinaryThresholdProjectionImageFilterIUL3IUL3 * p);
     ~itkBinaryThresholdProjectionImageFilterIUL3IUL3_Pointer();
     itkBinaryThresholdProjectionImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdProjectionImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkBinaryThresholdProjectionImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkBinaryThresholdProjectionImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdProjectionImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdProjectionImageFilterIUL3IUL3_Pointer const & r) const;
     itkBinaryThresholdProjectionImageFilterIUL3IUL3_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUL3IUL3_Pointer const & r);
     itkBinaryThresholdProjectionImageFilterIUL3IUL3_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUL3IUL3 * r);
     itkBinaryThresholdProjectionImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdProjectionImageFilterIUL3IUL3_Superclass : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimensionCheck = 1 };
     static itkBinaryThresholdProjectionImageFilterIUL3IUL3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetProjectionDimension(unsigned int const _arg);
     virtual unsigned int const & GetProjectionDimension() const;
   private:
     itkBinaryThresholdProjectionImageFilterIUL3IUL3_Superclass(itkBinaryThresholdProjectionImageFilterIUL3IUL3_Superclass const & arg0);
     void operator=(itkBinaryThresholdProjectionImageFilterIUL3IUL3_Superclass const & arg0);
   protected:
     itkBinaryThresholdProjectionImageFilterIUL3IUL3_Superclass();
     ~itkBinaryThresholdProjectionImageFilterIUL3IUL3_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual itk::Function::BinaryThresholdAccumulator< unsigned long, unsigned long > NewAccumulator(unsigned long arg0) const;
 };


 class itkBinaryThresholdProjectionImageFilterIUL3IUL3_Superclass_Pointer {
   public:
     itkBinaryThresholdProjectionImageFilterIUL3IUL3_Superclass_Pointer();
     itkBinaryThresholdProjectionImageFilterIUL3IUL3_Superclass_Pointer(itkBinaryThresholdProjectionImageFilterIUL3IUL3_Superclass_Pointer const & p);
     itkBinaryThresholdProjectionImageFilterIUL3IUL3_Superclass_Pointer(itkBinaryThresholdProjectionImageFilterIUL3IUL3_Superclass * p);
     ~itkBinaryThresholdProjectionImageFilterIUL3IUL3_Superclass_Pointer();
     itkBinaryThresholdProjectionImageFilterIUL3IUL3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdProjectionImageFilterIUL3IUL3_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdProjectionImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdProjectionImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdProjectionImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdProjectionImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     itkBinaryThresholdProjectionImageFilterIUL3IUL3_Superclass_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUL3IUL3_Superclass_Pointer const & r);
     itkBinaryThresholdProjectionImageFilterIUL3IUL3_Superclass_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUL3IUL3_Superclass * r);
     itkBinaryThresholdProjectionImageFilterIUL3IUL3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdProjectionImageFilterIUS2IUS2_Pointer {
   public:
     itkBinaryThresholdProjectionImageFilterIUS2IUS2_Pointer();
     itkBinaryThresholdProjectionImageFilterIUS2IUS2_Pointer(itkBinaryThresholdProjectionImageFilterIUS2IUS2_Pointer const & p);
     itkBinaryThresholdProjectionImageFilterIUS2IUS2_Pointer(itkBinaryThresholdProjectionImageFilterIUS2IUS2 * p);
     ~itkBinaryThresholdProjectionImageFilterIUS2IUS2_Pointer();
     itkBinaryThresholdProjectionImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdProjectionImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkBinaryThresholdProjectionImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkBinaryThresholdProjectionImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdProjectionImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdProjectionImageFilterIUS2IUS2_Pointer const & r) const;
     itkBinaryThresholdProjectionImageFilterIUS2IUS2_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUS2IUS2_Pointer const & r);
     itkBinaryThresholdProjectionImageFilterIUS2IUS2_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUS2IUS2 * r);
     itkBinaryThresholdProjectionImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimensionCheck = 1 };
     static itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetProjectionDimension(unsigned int const _arg);
     virtual unsigned int const & GetProjectionDimension() const;
   private:
     itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass(itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass const & arg0);
     void operator=(itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass const & arg0);
   protected:
     itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass();
     ~itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual itk::Function::BinaryThresholdAccumulator< unsigned short, unsigned short > NewAccumulator(unsigned long arg0) const;
 };


 class itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_Pointer {
   public:
     itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_Pointer();
     itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_Pointer(itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_Pointer const & p);
     itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_Pointer(itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass * p);
     ~itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_Pointer();
     itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_Pointer const & r);
     itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass * r);
     itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdProjectionImageFilterIUS3IUS2_Pointer {
   public:
     itkBinaryThresholdProjectionImageFilterIUS3IUS2_Pointer();
     itkBinaryThresholdProjectionImageFilterIUS3IUS2_Pointer(itkBinaryThresholdProjectionImageFilterIUS3IUS2_Pointer const & p);
     itkBinaryThresholdProjectionImageFilterIUS3IUS2_Pointer(itkBinaryThresholdProjectionImageFilterIUS3IUS2 * p);
     ~itkBinaryThresholdProjectionImageFilterIUS3IUS2_Pointer();
     itkBinaryThresholdProjectionImageFilterIUS3IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdProjectionImageFilterIUS3IUS2 * GetPointer() const;
     bool operator<(itkBinaryThresholdProjectionImageFilterIUS3IUS2_Pointer const & r) const;
     bool operator>(itkBinaryThresholdProjectionImageFilterIUS3IUS2_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdProjectionImageFilterIUS3IUS2_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdProjectionImageFilterIUS3IUS2_Pointer const & r) const;
     itkBinaryThresholdProjectionImageFilterIUS3IUS2_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUS3IUS2_Pointer const & r);
     itkBinaryThresholdProjectionImageFilterIUS3IUS2_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUS3IUS2 * r);
     itkBinaryThresholdProjectionImageFilterIUS3IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass : public itkImageToImageFilterIUS3IUS2 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimensionCheck = 1 };
     static itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetProjectionDimension(unsigned int const _arg);
     virtual unsigned int const & GetProjectionDimension() const;
   private:
     itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass(itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass const & arg0);
     void operator=(itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass const & arg0);
   protected:
     itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass();
     ~itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual itk::Function::BinaryThresholdAccumulator< unsigned short, unsigned short > NewAccumulator(unsigned long arg0) const;
 };


 class itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_Pointer {
   public:
     itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_Pointer();
     itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_Pointer(itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_Pointer const & p);
     itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_Pointer(itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass * p);
     ~itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_Pointer();
     itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_Pointer const & r) const;
     itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_Pointer const & r);
     itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass * r);
     itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdProjectionImageFilterIUS3IUS3_Pointer {
   public:
     itkBinaryThresholdProjectionImageFilterIUS3IUS3_Pointer();
     itkBinaryThresholdProjectionImageFilterIUS3IUS3_Pointer(itkBinaryThresholdProjectionImageFilterIUS3IUS3_Pointer const & p);
     itkBinaryThresholdProjectionImageFilterIUS3IUS3_Pointer(itkBinaryThresholdProjectionImageFilterIUS3IUS3 * p);
     ~itkBinaryThresholdProjectionImageFilterIUS3IUS3_Pointer();
     itkBinaryThresholdProjectionImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdProjectionImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkBinaryThresholdProjectionImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkBinaryThresholdProjectionImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdProjectionImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdProjectionImageFilterIUS3IUS3_Pointer const & r) const;
     itkBinaryThresholdProjectionImageFilterIUS3IUS3_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUS3IUS3_Pointer const & r);
     itkBinaryThresholdProjectionImageFilterIUS3IUS3_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUS3IUS3 * r);
     itkBinaryThresholdProjectionImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimensionCheck = 1 };
     static itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetProjectionDimension(unsigned int const _arg);
     virtual unsigned int const & GetProjectionDimension() const;
   private:
     itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass(itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass const & arg0);
     void operator=(itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass const & arg0);
   protected:
     itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass();
     ~itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual itk::Function::BinaryThresholdAccumulator< unsigned short, unsigned short > NewAccumulator(unsigned long arg0) const;
 };


 class itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_Pointer {
   public:
     itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_Pointer();
     itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_Pointer(itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_Pointer const & p);
     itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_Pointer(itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass * p);
     ~itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_Pointer();
     itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_Pointer const & r);
     itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_Pointer & operator=(itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass * r);
     itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdProjectionImageFilterID2ID2 : public itkBinaryThresholdProjectionImageFilterID2ID2_Superclass {
   public:
     enum  {  InputPixelTypeGreaterThanComparable = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkBinaryThresholdProjectionImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetForegroundValue(double const _arg);
     virtual double GetForegroundValue() const;
     virtual void SetBackgroundValue(double const _arg);
     virtual double GetBackgroundValue() const;
     virtual void SetThresholdValue(double const _arg);
     virtual double GetThresholdValue() const;
   private:
     itkBinaryThresholdProjectionImageFilterID2ID2(itkBinaryThresholdProjectionImageFilterID2ID2 const & arg0);
     void operator=(itkBinaryThresholdProjectionImageFilterID2ID2 const & arg0);
   protected:
     itkBinaryThresholdProjectionImageFilterID2ID2();
     ~itkBinaryThresholdProjectionImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::Function::BinaryThresholdAccumulator< double, double > NewAccumulator(unsigned long size) const;
 };


 class itkBinaryThresholdProjectionImageFilterID3ID2 : public itkBinaryThresholdProjectionImageFilterID3ID2_Superclass {
   public:
     enum  {  InputPixelTypeGreaterThanComparable = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkBinaryThresholdProjectionImageFilterID3ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetForegroundValue(double const _arg);
     virtual double GetForegroundValue() const;
     virtual void SetBackgroundValue(double const _arg);
     virtual double GetBackgroundValue() const;
     virtual void SetThresholdValue(double const _arg);
     virtual double GetThresholdValue() const;
   private:
     itkBinaryThresholdProjectionImageFilterID3ID2(itkBinaryThresholdProjectionImageFilterID3ID2 const & arg0);
     void operator=(itkBinaryThresholdProjectionImageFilterID3ID2 const & arg0);
   protected:
     itkBinaryThresholdProjectionImageFilterID3ID2();
     ~itkBinaryThresholdProjectionImageFilterID3ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::Function::BinaryThresholdAccumulator< double, double > NewAccumulator(unsigned long size) const;
 };


 class itkBinaryThresholdProjectionImageFilterID3ID3 : public itkBinaryThresholdProjectionImageFilterID3ID3_Superclass {
   public:
     enum  {  InputPixelTypeGreaterThanComparable = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkBinaryThresholdProjectionImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetForegroundValue(double const _arg);
     virtual double GetForegroundValue() const;
     virtual void SetBackgroundValue(double const _arg);
     virtual double GetBackgroundValue() const;
     virtual void SetThresholdValue(double const _arg);
     virtual double GetThresholdValue() const;
   private:
     itkBinaryThresholdProjectionImageFilterID3ID3(itkBinaryThresholdProjectionImageFilterID3ID3 const & arg0);
     void operator=(itkBinaryThresholdProjectionImageFilterID3ID3 const & arg0);
   protected:
     itkBinaryThresholdProjectionImageFilterID3ID3();
     ~itkBinaryThresholdProjectionImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::Function::BinaryThresholdAccumulator< double, double > NewAccumulator(unsigned long size) const;
 };


 class itkBinaryThresholdProjectionImageFilterIF2IF2 : public itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass {
   public:
     enum  {  InputPixelTypeGreaterThanComparable = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkBinaryThresholdProjectionImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetForegroundValue(float const _arg);
     virtual float GetForegroundValue() const;
     virtual void SetBackgroundValue(float const _arg);
     virtual float GetBackgroundValue() const;
     virtual void SetThresholdValue(float const _arg);
     virtual float GetThresholdValue() const;
   private:
     itkBinaryThresholdProjectionImageFilterIF2IF2(itkBinaryThresholdProjectionImageFilterIF2IF2 const & arg0);
     void operator=(itkBinaryThresholdProjectionImageFilterIF2IF2 const & arg0);
   protected:
     itkBinaryThresholdProjectionImageFilterIF2IF2();
     ~itkBinaryThresholdProjectionImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::Function::BinaryThresholdAccumulator< float, float > NewAccumulator(unsigned long size) const;
 };


 class itkBinaryThresholdProjectionImageFilterIF3IF2 : public itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass {
   public:
     enum  {  InputPixelTypeGreaterThanComparable = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkBinaryThresholdProjectionImageFilterIF3IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetForegroundValue(float const _arg);
     virtual float GetForegroundValue() const;
     virtual void SetBackgroundValue(float const _arg);
     virtual float GetBackgroundValue() const;
     virtual void SetThresholdValue(float const _arg);
     virtual float GetThresholdValue() const;
   private:
     itkBinaryThresholdProjectionImageFilterIF3IF2(itkBinaryThresholdProjectionImageFilterIF3IF2 const & arg0);
     void operator=(itkBinaryThresholdProjectionImageFilterIF3IF2 const & arg0);
   protected:
     itkBinaryThresholdProjectionImageFilterIF3IF2();
     ~itkBinaryThresholdProjectionImageFilterIF3IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::Function::BinaryThresholdAccumulator< float, float > NewAccumulator(unsigned long size) const;
 };


 class itkBinaryThresholdProjectionImageFilterIF3IF3 : public itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass {
   public:
     enum  {  InputPixelTypeGreaterThanComparable = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkBinaryThresholdProjectionImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetForegroundValue(float const _arg);
     virtual float GetForegroundValue() const;
     virtual void SetBackgroundValue(float const _arg);
     virtual float GetBackgroundValue() const;
     virtual void SetThresholdValue(float const _arg);
     virtual float GetThresholdValue() const;
   private:
     itkBinaryThresholdProjectionImageFilterIF3IF3(itkBinaryThresholdProjectionImageFilterIF3IF3 const & arg0);
     void operator=(itkBinaryThresholdProjectionImageFilterIF3IF3 const & arg0);
   protected:
     itkBinaryThresholdProjectionImageFilterIF3IF3();
     ~itkBinaryThresholdProjectionImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::Function::BinaryThresholdAccumulator< float, float > NewAccumulator(unsigned long size) const;
 };


 class itkBinaryThresholdProjectionImageFilterIUC2IUC2 : public itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass {
   public:
     enum  {  InputPixelTypeGreaterThanComparable = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkBinaryThresholdProjectionImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetForegroundValue(unsigned char const _arg);
     virtual unsigned char GetForegroundValue() const;
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundValue() const;
     virtual void SetThresholdValue(unsigned char const _arg);
     virtual unsigned char GetThresholdValue() const;
   private:
     itkBinaryThresholdProjectionImageFilterIUC2IUC2(itkBinaryThresholdProjectionImageFilterIUC2IUC2 const & arg0);
     void operator=(itkBinaryThresholdProjectionImageFilterIUC2IUC2 const & arg0);
   protected:
     itkBinaryThresholdProjectionImageFilterIUC2IUC2();
     ~itkBinaryThresholdProjectionImageFilterIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::Function::BinaryThresholdAccumulator< unsigned char, unsigned char > NewAccumulator(unsigned long size) const;
 };


 class itkBinaryThresholdProjectionImageFilterIUC3IUC2 : public itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass {
   public:
     enum  {  InputPixelTypeGreaterThanComparable = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkBinaryThresholdProjectionImageFilterIUC3IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetForegroundValue(unsigned char const _arg);
     virtual unsigned char GetForegroundValue() const;
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundValue() const;
     virtual void SetThresholdValue(unsigned char const _arg);
     virtual unsigned char GetThresholdValue() const;
   private:
     itkBinaryThresholdProjectionImageFilterIUC3IUC2(itkBinaryThresholdProjectionImageFilterIUC3IUC2 const & arg0);
     void operator=(itkBinaryThresholdProjectionImageFilterIUC3IUC2 const & arg0);
   protected:
     itkBinaryThresholdProjectionImageFilterIUC3IUC2();
     ~itkBinaryThresholdProjectionImageFilterIUC3IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::Function::BinaryThresholdAccumulator< unsigned char, unsigned char > NewAccumulator(unsigned long size) const;
 };


 class itkBinaryThresholdProjectionImageFilterIUC3IUC3 : public itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass {
   public:
     enum  {  InputPixelTypeGreaterThanComparable = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkBinaryThresholdProjectionImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetForegroundValue(unsigned char const _arg);
     virtual unsigned char GetForegroundValue() const;
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundValue() const;
     virtual void SetThresholdValue(unsigned char const _arg);
     virtual unsigned char GetThresholdValue() const;
   private:
     itkBinaryThresholdProjectionImageFilterIUC3IUC3(itkBinaryThresholdProjectionImageFilterIUC3IUC3 const & arg0);
     void operator=(itkBinaryThresholdProjectionImageFilterIUC3IUC3 const & arg0);
   protected:
     itkBinaryThresholdProjectionImageFilterIUC3IUC3();
     ~itkBinaryThresholdProjectionImageFilterIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::Function::BinaryThresholdAccumulator< unsigned char, unsigned char > NewAccumulator(unsigned long size) const;
 };


 class itkBinaryThresholdProjectionImageFilterIUL2IUL2 : public itkBinaryThresholdProjectionImageFilterIUL2IUL2_Superclass {
   public:
     enum  {  InputPixelTypeGreaterThanComparable = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkBinaryThresholdProjectionImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetForegroundValue(unsigned long const _arg);
     virtual unsigned long GetForegroundValue() const;
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundValue() const;
     virtual void SetThresholdValue(unsigned long const _arg);
     virtual unsigned long GetThresholdValue() const;
   private:
     itkBinaryThresholdProjectionImageFilterIUL2IUL2(itkBinaryThresholdProjectionImageFilterIUL2IUL2 const & arg0);
     void operator=(itkBinaryThresholdProjectionImageFilterIUL2IUL2 const & arg0);
   protected:
     itkBinaryThresholdProjectionImageFilterIUL2IUL2();
     ~itkBinaryThresholdProjectionImageFilterIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::Function::BinaryThresholdAccumulator< unsigned long, unsigned long > NewAccumulator(unsigned long size) const;
 };


 class itkBinaryThresholdProjectionImageFilterIUL3IUL2 : public itkBinaryThresholdProjectionImageFilterIUL3IUL2_Superclass {
   public:
     enum  {  InputPixelTypeGreaterThanComparable = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkBinaryThresholdProjectionImageFilterIUL3IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetForegroundValue(unsigned long const _arg);
     virtual unsigned long GetForegroundValue() const;
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundValue() const;
     virtual void SetThresholdValue(unsigned long const _arg);
     virtual unsigned long GetThresholdValue() const;
   private:
     itkBinaryThresholdProjectionImageFilterIUL3IUL2(itkBinaryThresholdProjectionImageFilterIUL3IUL2 const & arg0);
     void operator=(itkBinaryThresholdProjectionImageFilterIUL3IUL2 const & arg0);
   protected:
     itkBinaryThresholdProjectionImageFilterIUL3IUL2();
     ~itkBinaryThresholdProjectionImageFilterIUL3IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::Function::BinaryThresholdAccumulator< unsigned long, unsigned long > NewAccumulator(unsigned long size) const;
 };


 class itkBinaryThresholdProjectionImageFilterIUL3IUL3 : public itkBinaryThresholdProjectionImageFilterIUL3IUL3_Superclass {
   public:
     enum  {  InputPixelTypeGreaterThanComparable = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkBinaryThresholdProjectionImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetForegroundValue(unsigned long const _arg);
     virtual unsigned long GetForegroundValue() const;
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundValue() const;
     virtual void SetThresholdValue(unsigned long const _arg);
     virtual unsigned long GetThresholdValue() const;
   private:
     itkBinaryThresholdProjectionImageFilterIUL3IUL3(itkBinaryThresholdProjectionImageFilterIUL3IUL3 const & arg0);
     void operator=(itkBinaryThresholdProjectionImageFilterIUL3IUL3 const & arg0);
   protected:
     itkBinaryThresholdProjectionImageFilterIUL3IUL3();
     ~itkBinaryThresholdProjectionImageFilterIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::Function::BinaryThresholdAccumulator< unsigned long, unsigned long > NewAccumulator(unsigned long size) const;
 };


 class itkBinaryThresholdProjectionImageFilterIUS2IUS2 : public itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass {
   public:
     enum  {  InputPixelTypeGreaterThanComparable = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkBinaryThresholdProjectionImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetForegroundValue(unsigned short const _arg);
     virtual unsigned short GetForegroundValue() const;
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundValue() const;
     virtual void SetThresholdValue(unsigned short const _arg);
     virtual unsigned short GetThresholdValue() const;
   private:
     itkBinaryThresholdProjectionImageFilterIUS2IUS2(itkBinaryThresholdProjectionImageFilterIUS2IUS2 const & arg0);
     void operator=(itkBinaryThresholdProjectionImageFilterIUS2IUS2 const & arg0);
   protected:
     itkBinaryThresholdProjectionImageFilterIUS2IUS2();
     ~itkBinaryThresholdProjectionImageFilterIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::Function::BinaryThresholdAccumulator< unsigned short, unsigned short > NewAccumulator(unsigned long size) const;
 };


 class itkBinaryThresholdProjectionImageFilterIUS3IUS2 : public itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass {
   public:
     enum  {  InputPixelTypeGreaterThanComparable = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkBinaryThresholdProjectionImageFilterIUS3IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetForegroundValue(unsigned short const _arg);
     virtual unsigned short GetForegroundValue() const;
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundValue() const;
     virtual void SetThresholdValue(unsigned short const _arg);
     virtual unsigned short GetThresholdValue() const;
   private:
     itkBinaryThresholdProjectionImageFilterIUS3IUS2(itkBinaryThresholdProjectionImageFilterIUS3IUS2 const & arg0);
     void operator=(itkBinaryThresholdProjectionImageFilterIUS3IUS2 const & arg0);
   protected:
     itkBinaryThresholdProjectionImageFilterIUS3IUS2();
     ~itkBinaryThresholdProjectionImageFilterIUS3IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::Function::BinaryThresholdAccumulator< unsigned short, unsigned short > NewAccumulator(unsigned long size) const;
 };


 class itkBinaryThresholdProjectionImageFilterIUS3IUS3 : public itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass {
   public:
     enum  {  InputPixelTypeGreaterThanComparable = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkBinaryThresholdProjectionImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetForegroundValue(unsigned short const _arg);
     virtual unsigned short GetForegroundValue() const;
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundValue() const;
     virtual void SetThresholdValue(unsigned short const _arg);
     virtual unsigned short GetThresholdValue() const;
   private:
     itkBinaryThresholdProjectionImageFilterIUS3IUS3(itkBinaryThresholdProjectionImageFilterIUS3IUS3 const & arg0);
     void operator=(itkBinaryThresholdProjectionImageFilterIUS3IUS3 const & arg0);
   protected:
     itkBinaryThresholdProjectionImageFilterIUS3IUS3();
     ~itkBinaryThresholdProjectionImageFilterIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::Function::BinaryThresholdAccumulator< unsigned short, unsigned short > NewAccumulator(unsigned long size) const;
 };


