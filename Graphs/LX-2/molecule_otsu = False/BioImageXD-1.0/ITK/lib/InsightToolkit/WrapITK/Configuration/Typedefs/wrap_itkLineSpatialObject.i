// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkLineSpatialObjectChicken
#endif
#ifdef SWIGCSHARP
%module itkLineSpatialObjectCsharp
#endif
#ifdef SWIGGUILE
%module itkLineSpatialObjectGuile
#endif
#ifdef SWIGJAVA
%module itkLineSpatialObjectJava
#endif
#ifdef SWIGLUA
%module itkLineSpatialObjectLua
#endif
#ifdef SWIGMODULA3
%module itkLineSpatialObjectModula3
#endif
#ifdef SWIGMZSCHEME
%module itkLineSpatialObjectMzscheme
#endif
#ifdef SWIGOCAML
%module itkLineSpatialObjectOcaml
#endif
#ifdef SWIGPERL
%module itkLineSpatialObjectPerl
#endif
#ifdef SWIGPERL5
%module itkLineSpatialObjectPerl5
#endif
#ifdef SWIGPHP
%module itkLineSpatialObjectPhp
#endif
#ifdef SWIGPHP4
%module itkLineSpatialObjectPhp4
#endif
#ifdef SWIGPHP5
%module itkLineSpatialObjectPhp5
#endif
#ifdef SWIGPIKE
%module itkLineSpatialObjectPike
#endif
#ifdef SWIGPYTHON
%module itkLineSpatialObjectPython
#endif
#ifdef SWIGR
%module itkLineSpatialObjectR
#endif
#ifdef SWIGRUBY
%module itkLineSpatialObjectRuby
#endif
#ifdef SWIGSEXP
%module itkLineSpatialObjectSexp
#endif
#ifdef SWIGTCL
%module itkLineSpatialObjectTcl
#endif
#ifdef SWIGXML
%module itkLineSpatialObjectXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "Calculators.includes"
#include "SpatialObject.includes"
%}


%{
%}




%import wrap_itkPoint.i
%import wrap_itkLineSpatialObjectPoint.i
%import wrap_itkSpatialObjectPoint.i
%import wrap_itkPointBasedSpatialObject.i
%import wrap_ITKCommonBase.i


%include itk.i
%include wrap_itkLineSpatialObject_ext.i


 class itkLineSpatialObject2 : public itkPointBasedSpatialObject2 {
   public:
     static itkLineSpatialObject2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     std::vector< itkLineSpatialObjectPoint2 > & GetPoints();
     void SetPoints(std::vector< itkLineSpatialObjectPoint2 > & newPoints);
     virtual itkSpatialObjectPoint2 const * GetPoint(unsigned long id) const;
     virtual itkSpatialObjectPoint2 * GetPoint(unsigned long id);
     virtual unsigned long GetNumberOfPoints() const;
     virtual bool IsEvaluableAt(itkPointD2 const & point, unsigned int depth = 0, char * name = 0l) const;
     virtual bool ValueAt(itkPointD2 const & point, double & value, unsigned int depth = 0, char * name = 0l) const;
     virtual bool IsInside(itkPointD2 const & point, unsigned int depth, char * name) const;
     virtual bool IsInside(itkPointD2 const & point) const;
     virtual bool ComputeLocalBoundingBox() const;
   private:
   protected:
     itkLineSpatialObject2(itkLineSpatialObject2 const & arg0);
     void operator=(itkLineSpatialObject2 const & arg0);
     itkLineSpatialObject2();
     ~itkLineSpatialObject2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkLineSpatialObject2_Pointer {
   public:
     itkLineSpatialObject2_Pointer();
     itkLineSpatialObject2_Pointer(itkLineSpatialObject2_Pointer const & p);
     itkLineSpatialObject2_Pointer(itkLineSpatialObject2 * p);
     ~itkLineSpatialObject2_Pointer();
     itkLineSpatialObject2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLineSpatialObject2 * GetPointer() const;
     bool operator<(itkLineSpatialObject2_Pointer const & r) const;
     bool operator>(itkLineSpatialObject2_Pointer const & r) const;
     bool operator<=(itkLineSpatialObject2_Pointer const & r) const;
     bool operator>=(itkLineSpatialObject2_Pointer const & r) const;
     itkLineSpatialObject2_Pointer & operator=(itkLineSpatialObject2_Pointer const & r);
     itkLineSpatialObject2_Pointer & operator=(itkLineSpatialObject2 * r);
     itkLineSpatialObject2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLineSpatialObject3 : public itkPointBasedSpatialObject3 {
   public:
     static itkLineSpatialObject3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     std::vector< itkLineSpatialObjectPoint3 > & GetPoints();
     void SetPoints(std::vector< itkLineSpatialObjectPoint3 > & newPoints);
     virtual itkSpatialObjectPoint3 const * GetPoint(unsigned long id) const;
     virtual itkSpatialObjectPoint3 * GetPoint(unsigned long id);
     virtual unsigned long GetNumberOfPoints() const;
     virtual bool IsEvaluableAt(itkPointD3 const & point, unsigned int depth = 0, char * name = 0l) const;
     virtual bool ValueAt(itkPointD3 const & point, double & value, unsigned int depth = 0, char * name = 0l) const;
     virtual bool IsInside(itkPointD3 const & point, unsigned int depth, char * name) const;
     virtual bool IsInside(itkPointD3 const & point) const;
     virtual bool ComputeLocalBoundingBox() const;
   private:
   protected:
     itkLineSpatialObject3(itkLineSpatialObject3 const & arg0);
     void operator=(itkLineSpatialObject3 const & arg0);
     itkLineSpatialObject3();
     ~itkLineSpatialObject3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkLineSpatialObject3_Pointer {
   public:
     itkLineSpatialObject3_Pointer();
     itkLineSpatialObject3_Pointer(itkLineSpatialObject3_Pointer const & p);
     itkLineSpatialObject3_Pointer(itkLineSpatialObject3 * p);
     ~itkLineSpatialObject3_Pointer();
     itkLineSpatialObject3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLineSpatialObject3 * GetPointer() const;
     bool operator<(itkLineSpatialObject3_Pointer const & r) const;
     bool operator>(itkLineSpatialObject3_Pointer const & r) const;
     bool operator<=(itkLineSpatialObject3_Pointer const & r) const;
     bool operator>=(itkLineSpatialObject3_Pointer const & r) const;
     itkLineSpatialObject3_Pointer & operator=(itkLineSpatialObject3_Pointer const & r);
     itkLineSpatialObject3_Pointer & operator=(itkLineSpatialObject3 * r);
     itkLineSpatialObject3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


