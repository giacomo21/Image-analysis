# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkGradientAnisotropicDiffusionImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkGradientAnisotropicDiffusionImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkGradientAnisotropicDiffusionImageFilterPython
            return _itkGradientAnisotropicDiffusionImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkGradientAnisotropicDiffusionImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkGradientAnisotropicDiffusionImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkGradientAnisotropicDiffusionImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkAnisotropicDiffusionImageFilterPython
import itkDenseFiniteDifferenceImageFilterPython
import itkFiniteDifferenceImageFilterPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterAPython
import itkFiniteDifferenceFunctionPython
def itkGradientAnisotropicDiffusionImageFilterID3ID3_New():
  return itkGradientAnisotropicDiffusionImageFilterID3ID3.New()

def itkGradientAnisotropicDiffusionImageFilterID2ID2_New():
  return itkGradientAnisotropicDiffusionImageFilterID2ID2.New()

def itkGradientAnisotropicDiffusionImageFilterIF3IF3_New():
  return itkGradientAnisotropicDiffusionImageFilterIF3IF3.New()

def itkGradientAnisotropicDiffusionImageFilterIF2IF2_New():
  return itkGradientAnisotropicDiffusionImageFilterIF2IF2.New()

class itkGradientAnisotropicDiffusionImageFilterID2ID2(itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2):
    """Proxy of C++ itkGradientAnisotropicDiffusionImageFilterID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterID2ID2_ImageDimension
    UpdateBufferHasNumericTraitsCheck = _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterID2ID2_UpdateBufferHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkGradientAnisotropicDiffusionImageFilterPython.delete_itkGradientAnisotropicDiffusionImageFilterID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkGradientAnisotropicDiffusionImageFilterID2ID2"""
        return _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkGradientAnisotropicDiffusionImageFilterID2ID2"""
        return _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkGradientAnisotropicDiffusionImageFilterID2ID2
        
        Create a new object of the class itkGradientAnisotropicDiffusionImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkGradientAnisotropicDiffusionImageFilterID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkGradientAnisotropicDiffusionImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGradientAnisotropicDiffusionImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGradientAnisotropicDiffusionImageFilterID2ID2.GetPointer = new_instancemethod(_itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterID2ID2_GetPointer,None,itkGradientAnisotropicDiffusionImageFilterID2ID2)
itkGradientAnisotropicDiffusionImageFilterID2ID2_swigregister = _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterID2ID2_swigregister
itkGradientAnisotropicDiffusionImageFilterID2ID2_swigregister(itkGradientAnisotropicDiffusionImageFilterID2ID2)

def itkGradientAnisotropicDiffusionImageFilterID2ID2___New_orig__():
  """itkGradientAnisotropicDiffusionImageFilterID2ID2___New_orig__()"""
  return _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterID2ID2___New_orig__()

def itkGradientAnisotropicDiffusionImageFilterID2ID2_cast(*args):
  """itkGradientAnisotropicDiffusionImageFilterID2ID2_cast(itkLightObject obj) -> itkGradientAnisotropicDiffusionImageFilterID2ID2"""
  return _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterID2ID2_cast(*args)

class itkGradientAnisotropicDiffusionImageFilterID3ID3(itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3):
    """Proxy of C++ itkGradientAnisotropicDiffusionImageFilterID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterID3ID3_ImageDimension
    UpdateBufferHasNumericTraitsCheck = _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterID3ID3_UpdateBufferHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkGradientAnisotropicDiffusionImageFilterPython.delete_itkGradientAnisotropicDiffusionImageFilterID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkGradientAnisotropicDiffusionImageFilterID3ID3"""
        return _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkGradientAnisotropicDiffusionImageFilterID3ID3"""
        return _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkGradientAnisotropicDiffusionImageFilterID3ID3
        
        Create a new object of the class itkGradientAnisotropicDiffusionImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkGradientAnisotropicDiffusionImageFilterID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkGradientAnisotropicDiffusionImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGradientAnisotropicDiffusionImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGradientAnisotropicDiffusionImageFilterID3ID3.GetPointer = new_instancemethod(_itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterID3ID3_GetPointer,None,itkGradientAnisotropicDiffusionImageFilterID3ID3)
itkGradientAnisotropicDiffusionImageFilterID3ID3_swigregister = _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterID3ID3_swigregister
itkGradientAnisotropicDiffusionImageFilterID3ID3_swigregister(itkGradientAnisotropicDiffusionImageFilterID3ID3)

def itkGradientAnisotropicDiffusionImageFilterID3ID3___New_orig__():
  """itkGradientAnisotropicDiffusionImageFilterID3ID3___New_orig__()"""
  return _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterID3ID3___New_orig__()

def itkGradientAnisotropicDiffusionImageFilterID3ID3_cast(*args):
  """itkGradientAnisotropicDiffusionImageFilterID3ID3_cast(itkLightObject obj) -> itkGradientAnisotropicDiffusionImageFilterID3ID3"""
  return _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterID3ID3_cast(*args)

class itkGradientAnisotropicDiffusionImageFilterIF2IF2(itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2):
    """Proxy of C++ itkGradientAnisotropicDiffusionImageFilterIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterIF2IF2_ImageDimension
    UpdateBufferHasNumericTraitsCheck = _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterIF2IF2_UpdateBufferHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkGradientAnisotropicDiffusionImageFilterPython.delete_itkGradientAnisotropicDiffusionImageFilterIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkGradientAnisotropicDiffusionImageFilterIF2IF2"""
        return _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkGradientAnisotropicDiffusionImageFilterIF2IF2"""
        return _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkGradientAnisotropicDiffusionImageFilterIF2IF2
        
        Create a new object of the class itkGradientAnisotropicDiffusionImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkGradientAnisotropicDiffusionImageFilterIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkGradientAnisotropicDiffusionImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGradientAnisotropicDiffusionImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGradientAnisotropicDiffusionImageFilterIF2IF2.GetPointer = new_instancemethod(_itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterIF2IF2_GetPointer,None,itkGradientAnisotropicDiffusionImageFilterIF2IF2)
itkGradientAnisotropicDiffusionImageFilterIF2IF2_swigregister = _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterIF2IF2_swigregister
itkGradientAnisotropicDiffusionImageFilterIF2IF2_swigregister(itkGradientAnisotropicDiffusionImageFilterIF2IF2)

def itkGradientAnisotropicDiffusionImageFilterIF2IF2___New_orig__():
  """itkGradientAnisotropicDiffusionImageFilterIF2IF2___New_orig__()"""
  return _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterIF2IF2___New_orig__()

def itkGradientAnisotropicDiffusionImageFilterIF2IF2_cast(*args):
  """itkGradientAnisotropicDiffusionImageFilterIF2IF2_cast(itkLightObject obj) -> itkGradientAnisotropicDiffusionImageFilterIF2IF2"""
  return _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterIF2IF2_cast(*args)

class itkGradientAnisotropicDiffusionImageFilterIF3IF3(itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3):
    """Proxy of C++ itkGradientAnisotropicDiffusionImageFilterIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterIF3IF3_ImageDimension
    UpdateBufferHasNumericTraitsCheck = _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterIF3IF3_UpdateBufferHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkGradientAnisotropicDiffusionImageFilterPython.delete_itkGradientAnisotropicDiffusionImageFilterIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkGradientAnisotropicDiffusionImageFilterIF3IF3"""
        return _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkGradientAnisotropicDiffusionImageFilterIF3IF3"""
        return _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkGradientAnisotropicDiffusionImageFilterIF3IF3
        
        Create a new object of the class itkGradientAnisotropicDiffusionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkGradientAnisotropicDiffusionImageFilterIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkGradientAnisotropicDiffusionImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGradientAnisotropicDiffusionImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGradientAnisotropicDiffusionImageFilterIF3IF3.GetPointer = new_instancemethod(_itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterIF3IF3_GetPointer,None,itkGradientAnisotropicDiffusionImageFilterIF3IF3)
itkGradientAnisotropicDiffusionImageFilterIF3IF3_swigregister = _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterIF3IF3_swigregister
itkGradientAnisotropicDiffusionImageFilterIF3IF3_swigregister(itkGradientAnisotropicDiffusionImageFilterIF3IF3)

def itkGradientAnisotropicDiffusionImageFilterIF3IF3___New_orig__():
  """itkGradientAnisotropicDiffusionImageFilterIF3IF3___New_orig__()"""
  return _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterIF3IF3___New_orig__()

def itkGradientAnisotropicDiffusionImageFilterIF3IF3_cast(*args):
  """itkGradientAnisotropicDiffusionImageFilterIF3IF3_cast(itkLightObject obj) -> itkGradientAnisotropicDiffusionImageFilterIF3IF3"""
  return _itkGradientAnisotropicDiffusionImageFilterPython.itkGradientAnisotropicDiffusionImageFilterIF3IF3_cast(*args)



