// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkKappaSigmaThresholdImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkKappaSigmaThresholdImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkKappaSigmaThresholdImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkKappaSigmaThresholdImageFilterJava
#endif
#ifdef SWIGLUA
%module itkKappaSigmaThresholdImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkKappaSigmaThresholdImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkKappaSigmaThresholdImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkKappaSigmaThresholdImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkKappaSigmaThresholdImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkKappaSigmaThresholdImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkKappaSigmaThresholdImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkKappaSigmaThresholdImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkKappaSigmaThresholdImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkKappaSigmaThresholdImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkKappaSigmaThresholdImageFilterPython
#endif
#ifdef SWIGR
%module itkKappaSigmaThresholdImageFilterR
#endif
#ifdef SWIGRUBY
%module itkKappaSigmaThresholdImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkKappaSigmaThresholdImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkKappaSigmaThresholdImageFilterTcl
#endif
#ifdef SWIGXML
%module itkKappaSigmaThresholdImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Review.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImage.i
%import wrap_itkImageToImageFilterA.i


%include itk.i
%include wrap_itkKappaSigmaThresholdImageFilter_ext.i


 class itkKappaSigmaThresholdImageFilterID2IUC2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkKappaSigmaThresholdImageFilterID2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(double const _arg);
     virtual double GetOutsideValue() const;
     virtual void SetInsideValue(double const _arg);
     virtual double GetInsideValue() const;
     virtual double GetThreshold() const;
     virtual void SetMaskValue(unsigned char const _arg);
     virtual unsigned char GetMaskValue() const;
     virtual void SetSigmaFactor(double const _arg);
     virtual double GetSigmaFactor() const;
     virtual void SetNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetNumberOfIterations() const;
     void SetMaskImage(itkImageUC2 const * input);
     itkImageUC2 const * GetMaskImage() const;
     void SetInput1(itkImageD2 const * input);
     void SetInput2(itkImageUC2 const * input);
   private:
     itkKappaSigmaThresholdImageFilterID2IUC2(itkKappaSigmaThresholdImageFilterID2IUC2 const & arg0);
     void operator=(itkKappaSigmaThresholdImageFilterID2IUC2 const & arg0);
   protected:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     itkKappaSigmaThresholdImageFilterID2IUC2();
     ~itkKappaSigmaThresholdImageFilterID2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkKappaSigmaThresholdImageFilterID2IUC2_Pointer {
   public:
     itkKappaSigmaThresholdImageFilterID2IUC2_Pointer();
     itkKappaSigmaThresholdImageFilterID2IUC2_Pointer(itkKappaSigmaThresholdImageFilterID2IUC2_Pointer const & p);
     itkKappaSigmaThresholdImageFilterID2IUC2_Pointer(itkKappaSigmaThresholdImageFilterID2IUC2 * p);
     ~itkKappaSigmaThresholdImageFilterID2IUC2_Pointer();
     itkKappaSigmaThresholdImageFilterID2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkKappaSigmaThresholdImageFilterID2IUC2 * GetPointer() const;
     bool operator<(itkKappaSigmaThresholdImageFilterID2IUC2_Pointer const & r) const;
     bool operator>(itkKappaSigmaThresholdImageFilterID2IUC2_Pointer const & r) const;
     bool operator<=(itkKappaSigmaThresholdImageFilterID2IUC2_Pointer const & r) const;
     bool operator>=(itkKappaSigmaThresholdImageFilterID2IUC2_Pointer const & r) const;
     itkKappaSigmaThresholdImageFilterID2IUC2_Pointer & operator=(itkKappaSigmaThresholdImageFilterID2IUC2_Pointer const & r);
     itkKappaSigmaThresholdImageFilterID2IUC2_Pointer & operator=(itkKappaSigmaThresholdImageFilterID2IUC2 * r);
     itkKappaSigmaThresholdImageFilterID2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkKappaSigmaThresholdImageFilterID2IUL2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkKappaSigmaThresholdImageFilterID2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(double const _arg);
     virtual double GetOutsideValue() const;
     virtual void SetInsideValue(double const _arg);
     virtual double GetInsideValue() const;
     virtual double GetThreshold() const;
     virtual void SetMaskValue(unsigned long const _arg);
     virtual unsigned long GetMaskValue() const;
     virtual void SetSigmaFactor(double const _arg);
     virtual double GetSigmaFactor() const;
     virtual void SetNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetNumberOfIterations() const;
     void SetMaskImage(itkImageUL2 const * input);
     itkImageUL2 const * GetMaskImage() const;
     void SetInput1(itkImageD2 const * input);
     void SetInput2(itkImageUL2 const * input);
   private:
     itkKappaSigmaThresholdImageFilterID2IUL2(itkKappaSigmaThresholdImageFilterID2IUL2 const & arg0);
     void operator=(itkKappaSigmaThresholdImageFilterID2IUL2 const & arg0);
   protected:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     itkKappaSigmaThresholdImageFilterID2IUL2();
     ~itkKappaSigmaThresholdImageFilterID2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkKappaSigmaThresholdImageFilterID2IUL2_Pointer {
   public:
     itkKappaSigmaThresholdImageFilterID2IUL2_Pointer();
     itkKappaSigmaThresholdImageFilterID2IUL2_Pointer(itkKappaSigmaThresholdImageFilterID2IUL2_Pointer const & p);
     itkKappaSigmaThresholdImageFilterID2IUL2_Pointer(itkKappaSigmaThresholdImageFilterID2IUL2 * p);
     ~itkKappaSigmaThresholdImageFilterID2IUL2_Pointer();
     itkKappaSigmaThresholdImageFilterID2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkKappaSigmaThresholdImageFilterID2IUL2 * GetPointer() const;
     bool operator<(itkKappaSigmaThresholdImageFilterID2IUL2_Pointer const & r) const;
     bool operator>(itkKappaSigmaThresholdImageFilterID2IUL2_Pointer const & r) const;
     bool operator<=(itkKappaSigmaThresholdImageFilterID2IUL2_Pointer const & r) const;
     bool operator>=(itkKappaSigmaThresholdImageFilterID2IUL2_Pointer const & r) const;
     itkKappaSigmaThresholdImageFilterID2IUL2_Pointer & operator=(itkKappaSigmaThresholdImageFilterID2IUL2_Pointer const & r);
     itkKappaSigmaThresholdImageFilterID2IUL2_Pointer & operator=(itkKappaSigmaThresholdImageFilterID2IUL2 * r);
     itkKappaSigmaThresholdImageFilterID2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkKappaSigmaThresholdImageFilterID2IUS2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkKappaSigmaThresholdImageFilterID2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(double const _arg);
     virtual double GetOutsideValue() const;
     virtual void SetInsideValue(double const _arg);
     virtual double GetInsideValue() const;
     virtual double GetThreshold() const;
     virtual void SetMaskValue(unsigned short const _arg);
     virtual unsigned short GetMaskValue() const;
     virtual void SetSigmaFactor(double const _arg);
     virtual double GetSigmaFactor() const;
     virtual void SetNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetNumberOfIterations() const;
     void SetMaskImage(itkImageUS2 const * input);
     itkImageUS2 const * GetMaskImage() const;
     void SetInput1(itkImageD2 const * input);
     void SetInput2(itkImageUS2 const * input);
   private:
     itkKappaSigmaThresholdImageFilterID2IUS2(itkKappaSigmaThresholdImageFilterID2IUS2 const & arg0);
     void operator=(itkKappaSigmaThresholdImageFilterID2IUS2 const & arg0);
   protected:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     itkKappaSigmaThresholdImageFilterID2IUS2();
     ~itkKappaSigmaThresholdImageFilterID2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkKappaSigmaThresholdImageFilterID2IUS2_Pointer {
   public:
     itkKappaSigmaThresholdImageFilterID2IUS2_Pointer();
     itkKappaSigmaThresholdImageFilterID2IUS2_Pointer(itkKappaSigmaThresholdImageFilterID2IUS2_Pointer const & p);
     itkKappaSigmaThresholdImageFilterID2IUS2_Pointer(itkKappaSigmaThresholdImageFilterID2IUS2 * p);
     ~itkKappaSigmaThresholdImageFilterID2IUS2_Pointer();
     itkKappaSigmaThresholdImageFilterID2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkKappaSigmaThresholdImageFilterID2IUS2 * GetPointer() const;
     bool operator<(itkKappaSigmaThresholdImageFilterID2IUS2_Pointer const & r) const;
     bool operator>(itkKappaSigmaThresholdImageFilterID2IUS2_Pointer const & r) const;
     bool operator<=(itkKappaSigmaThresholdImageFilterID2IUS2_Pointer const & r) const;
     bool operator>=(itkKappaSigmaThresholdImageFilterID2IUS2_Pointer const & r) const;
     itkKappaSigmaThresholdImageFilterID2IUS2_Pointer & operator=(itkKappaSigmaThresholdImageFilterID2IUS2_Pointer const & r);
     itkKappaSigmaThresholdImageFilterID2IUS2_Pointer & operator=(itkKappaSigmaThresholdImageFilterID2IUS2 * r);
     itkKappaSigmaThresholdImageFilterID2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkKappaSigmaThresholdImageFilterID3IUC3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkKappaSigmaThresholdImageFilterID3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(double const _arg);
     virtual double GetOutsideValue() const;
     virtual void SetInsideValue(double const _arg);
     virtual double GetInsideValue() const;
     virtual double GetThreshold() const;
     virtual void SetMaskValue(unsigned char const _arg);
     virtual unsigned char GetMaskValue() const;
     virtual void SetSigmaFactor(double const _arg);
     virtual double GetSigmaFactor() const;
     virtual void SetNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetNumberOfIterations() const;
     void SetMaskImage(itkImageUC3 const * input);
     itkImageUC3 const * GetMaskImage() const;
     void SetInput1(itkImageD3 const * input);
     void SetInput2(itkImageUC3 const * input);
   private:
     itkKappaSigmaThresholdImageFilterID3IUC3(itkKappaSigmaThresholdImageFilterID3IUC3 const & arg0);
     void operator=(itkKappaSigmaThresholdImageFilterID3IUC3 const & arg0);
   protected:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     itkKappaSigmaThresholdImageFilterID3IUC3();
     ~itkKappaSigmaThresholdImageFilterID3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkKappaSigmaThresholdImageFilterID3IUC3_Pointer {
   public:
     itkKappaSigmaThresholdImageFilterID3IUC3_Pointer();
     itkKappaSigmaThresholdImageFilterID3IUC3_Pointer(itkKappaSigmaThresholdImageFilterID3IUC3_Pointer const & p);
     itkKappaSigmaThresholdImageFilterID3IUC3_Pointer(itkKappaSigmaThresholdImageFilterID3IUC3 * p);
     ~itkKappaSigmaThresholdImageFilterID3IUC3_Pointer();
     itkKappaSigmaThresholdImageFilterID3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkKappaSigmaThresholdImageFilterID3IUC3 * GetPointer() const;
     bool operator<(itkKappaSigmaThresholdImageFilterID3IUC3_Pointer const & r) const;
     bool operator>(itkKappaSigmaThresholdImageFilterID3IUC3_Pointer const & r) const;
     bool operator<=(itkKappaSigmaThresholdImageFilterID3IUC3_Pointer const & r) const;
     bool operator>=(itkKappaSigmaThresholdImageFilterID3IUC3_Pointer const & r) const;
     itkKappaSigmaThresholdImageFilterID3IUC3_Pointer & operator=(itkKappaSigmaThresholdImageFilterID3IUC3_Pointer const & r);
     itkKappaSigmaThresholdImageFilterID3IUC3_Pointer & operator=(itkKappaSigmaThresholdImageFilterID3IUC3 * r);
     itkKappaSigmaThresholdImageFilterID3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkKappaSigmaThresholdImageFilterID3IUL3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkKappaSigmaThresholdImageFilterID3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(double const _arg);
     virtual double GetOutsideValue() const;
     virtual void SetInsideValue(double const _arg);
     virtual double GetInsideValue() const;
     virtual double GetThreshold() const;
     virtual void SetMaskValue(unsigned long const _arg);
     virtual unsigned long GetMaskValue() const;
     virtual void SetSigmaFactor(double const _arg);
     virtual double GetSigmaFactor() const;
     virtual void SetNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetNumberOfIterations() const;
     void SetMaskImage(itkImageUL3 const * input);
     itkImageUL3 const * GetMaskImage() const;
     void SetInput1(itkImageD3 const * input);
     void SetInput2(itkImageUL3 const * input);
   private:
     itkKappaSigmaThresholdImageFilterID3IUL3(itkKappaSigmaThresholdImageFilterID3IUL3 const & arg0);
     void operator=(itkKappaSigmaThresholdImageFilterID3IUL3 const & arg0);
   protected:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     itkKappaSigmaThresholdImageFilterID3IUL3();
     ~itkKappaSigmaThresholdImageFilterID3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkKappaSigmaThresholdImageFilterID3IUL3_Pointer {
   public:
     itkKappaSigmaThresholdImageFilterID3IUL3_Pointer();
     itkKappaSigmaThresholdImageFilterID3IUL3_Pointer(itkKappaSigmaThresholdImageFilterID3IUL3_Pointer const & p);
     itkKappaSigmaThresholdImageFilterID3IUL3_Pointer(itkKappaSigmaThresholdImageFilterID3IUL3 * p);
     ~itkKappaSigmaThresholdImageFilterID3IUL3_Pointer();
     itkKappaSigmaThresholdImageFilterID3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkKappaSigmaThresholdImageFilterID3IUL3 * GetPointer() const;
     bool operator<(itkKappaSigmaThresholdImageFilterID3IUL3_Pointer const & r) const;
     bool operator>(itkKappaSigmaThresholdImageFilterID3IUL3_Pointer const & r) const;
     bool operator<=(itkKappaSigmaThresholdImageFilterID3IUL3_Pointer const & r) const;
     bool operator>=(itkKappaSigmaThresholdImageFilterID3IUL3_Pointer const & r) const;
     itkKappaSigmaThresholdImageFilterID3IUL3_Pointer & operator=(itkKappaSigmaThresholdImageFilterID3IUL3_Pointer const & r);
     itkKappaSigmaThresholdImageFilterID3IUL3_Pointer & operator=(itkKappaSigmaThresholdImageFilterID3IUL3 * r);
     itkKappaSigmaThresholdImageFilterID3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkKappaSigmaThresholdImageFilterID3IUS3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkKappaSigmaThresholdImageFilterID3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(double const _arg);
     virtual double GetOutsideValue() const;
     virtual void SetInsideValue(double const _arg);
     virtual double GetInsideValue() const;
     virtual double GetThreshold() const;
     virtual void SetMaskValue(unsigned short const _arg);
     virtual unsigned short GetMaskValue() const;
     virtual void SetSigmaFactor(double const _arg);
     virtual double GetSigmaFactor() const;
     virtual void SetNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetNumberOfIterations() const;
     void SetMaskImage(itkImageUS3 const * input);
     itkImageUS3 const * GetMaskImage() const;
     void SetInput1(itkImageD3 const * input);
     void SetInput2(itkImageUS3 const * input);
   private:
     itkKappaSigmaThresholdImageFilterID3IUS3(itkKappaSigmaThresholdImageFilterID3IUS3 const & arg0);
     void operator=(itkKappaSigmaThresholdImageFilterID3IUS3 const & arg0);
   protected:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     itkKappaSigmaThresholdImageFilterID3IUS3();
     ~itkKappaSigmaThresholdImageFilterID3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkKappaSigmaThresholdImageFilterID3IUS3_Pointer {
   public:
     itkKappaSigmaThresholdImageFilterID3IUS3_Pointer();
     itkKappaSigmaThresholdImageFilterID3IUS3_Pointer(itkKappaSigmaThresholdImageFilterID3IUS3_Pointer const & p);
     itkKappaSigmaThresholdImageFilterID3IUS3_Pointer(itkKappaSigmaThresholdImageFilterID3IUS3 * p);
     ~itkKappaSigmaThresholdImageFilterID3IUS3_Pointer();
     itkKappaSigmaThresholdImageFilterID3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkKappaSigmaThresholdImageFilterID3IUS3 * GetPointer() const;
     bool operator<(itkKappaSigmaThresholdImageFilterID3IUS3_Pointer const & r) const;
     bool operator>(itkKappaSigmaThresholdImageFilterID3IUS3_Pointer const & r) const;
     bool operator<=(itkKappaSigmaThresholdImageFilterID3IUS3_Pointer const & r) const;
     bool operator>=(itkKappaSigmaThresholdImageFilterID3IUS3_Pointer const & r) const;
     itkKappaSigmaThresholdImageFilterID3IUS3_Pointer & operator=(itkKappaSigmaThresholdImageFilterID3IUS3_Pointer const & r);
     itkKappaSigmaThresholdImageFilterID3IUS3_Pointer & operator=(itkKappaSigmaThresholdImageFilterID3IUS3 * r);
     itkKappaSigmaThresholdImageFilterID3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkKappaSigmaThresholdImageFilterIF2IUC2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkKappaSigmaThresholdImageFilterIF2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(float const _arg);
     virtual float GetOutsideValue() const;
     virtual void SetInsideValue(float const _arg);
     virtual float GetInsideValue() const;
     virtual float GetThreshold() const;
     virtual void SetMaskValue(unsigned char const _arg);
     virtual unsigned char GetMaskValue() const;
     virtual void SetSigmaFactor(double const _arg);
     virtual double GetSigmaFactor() const;
     virtual void SetNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetNumberOfIterations() const;
     void SetMaskImage(itkImageUC2 const * input);
     itkImageUC2 const * GetMaskImage() const;
     void SetInput1(itkImageF2 const * input);
     void SetInput2(itkImageUC2 const * input);
   private:
     itkKappaSigmaThresholdImageFilterIF2IUC2(itkKappaSigmaThresholdImageFilterIF2IUC2 const & arg0);
     void operator=(itkKappaSigmaThresholdImageFilterIF2IUC2 const & arg0);
   protected:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     itkKappaSigmaThresholdImageFilterIF2IUC2();
     ~itkKappaSigmaThresholdImageFilterIF2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkKappaSigmaThresholdImageFilterIF2IUC2_Pointer {
   public:
     itkKappaSigmaThresholdImageFilterIF2IUC2_Pointer();
     itkKappaSigmaThresholdImageFilterIF2IUC2_Pointer(itkKappaSigmaThresholdImageFilterIF2IUC2_Pointer const & p);
     itkKappaSigmaThresholdImageFilterIF2IUC2_Pointer(itkKappaSigmaThresholdImageFilterIF2IUC2 * p);
     ~itkKappaSigmaThresholdImageFilterIF2IUC2_Pointer();
     itkKappaSigmaThresholdImageFilterIF2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkKappaSigmaThresholdImageFilterIF2IUC2 * GetPointer() const;
     bool operator<(itkKappaSigmaThresholdImageFilterIF2IUC2_Pointer const & r) const;
     bool operator>(itkKappaSigmaThresholdImageFilterIF2IUC2_Pointer const & r) const;
     bool operator<=(itkKappaSigmaThresholdImageFilterIF2IUC2_Pointer const & r) const;
     bool operator>=(itkKappaSigmaThresholdImageFilterIF2IUC2_Pointer const & r) const;
     itkKappaSigmaThresholdImageFilterIF2IUC2_Pointer & operator=(itkKappaSigmaThresholdImageFilterIF2IUC2_Pointer const & r);
     itkKappaSigmaThresholdImageFilterIF2IUC2_Pointer & operator=(itkKappaSigmaThresholdImageFilterIF2IUC2 * r);
     itkKappaSigmaThresholdImageFilterIF2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkKappaSigmaThresholdImageFilterIF2IUL2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkKappaSigmaThresholdImageFilterIF2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(float const _arg);
     virtual float GetOutsideValue() const;
     virtual void SetInsideValue(float const _arg);
     virtual float GetInsideValue() const;
     virtual float GetThreshold() const;
     virtual void SetMaskValue(unsigned long const _arg);
     virtual unsigned long GetMaskValue() const;
     virtual void SetSigmaFactor(double const _arg);
     virtual double GetSigmaFactor() const;
     virtual void SetNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetNumberOfIterations() const;
     void SetMaskImage(itkImageUL2 const * input);
     itkImageUL2 const * GetMaskImage() const;
     void SetInput1(itkImageF2 const * input);
     void SetInput2(itkImageUL2 const * input);
   private:
     itkKappaSigmaThresholdImageFilterIF2IUL2(itkKappaSigmaThresholdImageFilterIF2IUL2 const & arg0);
     void operator=(itkKappaSigmaThresholdImageFilterIF2IUL2 const & arg0);
   protected:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     itkKappaSigmaThresholdImageFilterIF2IUL2();
     ~itkKappaSigmaThresholdImageFilterIF2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkKappaSigmaThresholdImageFilterIF2IUL2_Pointer {
   public:
     itkKappaSigmaThresholdImageFilterIF2IUL2_Pointer();
     itkKappaSigmaThresholdImageFilterIF2IUL2_Pointer(itkKappaSigmaThresholdImageFilterIF2IUL2_Pointer const & p);
     itkKappaSigmaThresholdImageFilterIF2IUL2_Pointer(itkKappaSigmaThresholdImageFilterIF2IUL2 * p);
     ~itkKappaSigmaThresholdImageFilterIF2IUL2_Pointer();
     itkKappaSigmaThresholdImageFilterIF2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkKappaSigmaThresholdImageFilterIF2IUL2 * GetPointer() const;
     bool operator<(itkKappaSigmaThresholdImageFilterIF2IUL2_Pointer const & r) const;
     bool operator>(itkKappaSigmaThresholdImageFilterIF2IUL2_Pointer const & r) const;
     bool operator<=(itkKappaSigmaThresholdImageFilterIF2IUL2_Pointer const & r) const;
     bool operator>=(itkKappaSigmaThresholdImageFilterIF2IUL2_Pointer const & r) const;
     itkKappaSigmaThresholdImageFilterIF2IUL2_Pointer & operator=(itkKappaSigmaThresholdImageFilterIF2IUL2_Pointer const & r);
     itkKappaSigmaThresholdImageFilterIF2IUL2_Pointer & operator=(itkKappaSigmaThresholdImageFilterIF2IUL2 * r);
     itkKappaSigmaThresholdImageFilterIF2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkKappaSigmaThresholdImageFilterIF2IUS2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkKappaSigmaThresholdImageFilterIF2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(float const _arg);
     virtual float GetOutsideValue() const;
     virtual void SetInsideValue(float const _arg);
     virtual float GetInsideValue() const;
     virtual float GetThreshold() const;
     virtual void SetMaskValue(unsigned short const _arg);
     virtual unsigned short GetMaskValue() const;
     virtual void SetSigmaFactor(double const _arg);
     virtual double GetSigmaFactor() const;
     virtual void SetNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetNumberOfIterations() const;
     void SetMaskImage(itkImageUS2 const * input);
     itkImageUS2 const * GetMaskImage() const;
     void SetInput1(itkImageF2 const * input);
     void SetInput2(itkImageUS2 const * input);
   private:
     itkKappaSigmaThresholdImageFilterIF2IUS2(itkKappaSigmaThresholdImageFilterIF2IUS2 const & arg0);
     void operator=(itkKappaSigmaThresholdImageFilterIF2IUS2 const & arg0);
   protected:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     itkKappaSigmaThresholdImageFilterIF2IUS2();
     ~itkKappaSigmaThresholdImageFilterIF2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkKappaSigmaThresholdImageFilterIF2IUS2_Pointer {
   public:
     itkKappaSigmaThresholdImageFilterIF2IUS2_Pointer();
     itkKappaSigmaThresholdImageFilterIF2IUS2_Pointer(itkKappaSigmaThresholdImageFilterIF2IUS2_Pointer const & p);
     itkKappaSigmaThresholdImageFilterIF2IUS2_Pointer(itkKappaSigmaThresholdImageFilterIF2IUS2 * p);
     ~itkKappaSigmaThresholdImageFilterIF2IUS2_Pointer();
     itkKappaSigmaThresholdImageFilterIF2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkKappaSigmaThresholdImageFilterIF2IUS2 * GetPointer() const;
     bool operator<(itkKappaSigmaThresholdImageFilterIF2IUS2_Pointer const & r) const;
     bool operator>(itkKappaSigmaThresholdImageFilterIF2IUS2_Pointer const & r) const;
     bool operator<=(itkKappaSigmaThresholdImageFilterIF2IUS2_Pointer const & r) const;
     bool operator>=(itkKappaSigmaThresholdImageFilterIF2IUS2_Pointer const & r) const;
     itkKappaSigmaThresholdImageFilterIF2IUS2_Pointer & operator=(itkKappaSigmaThresholdImageFilterIF2IUS2_Pointer const & r);
     itkKappaSigmaThresholdImageFilterIF2IUS2_Pointer & operator=(itkKappaSigmaThresholdImageFilterIF2IUS2 * r);
     itkKappaSigmaThresholdImageFilterIF2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkKappaSigmaThresholdImageFilterIF3IUC3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkKappaSigmaThresholdImageFilterIF3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(float const _arg);
     virtual float GetOutsideValue() const;
     virtual void SetInsideValue(float const _arg);
     virtual float GetInsideValue() const;
     virtual float GetThreshold() const;
     virtual void SetMaskValue(unsigned char const _arg);
     virtual unsigned char GetMaskValue() const;
     virtual void SetSigmaFactor(double const _arg);
     virtual double GetSigmaFactor() const;
     virtual void SetNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetNumberOfIterations() const;
     void SetMaskImage(itkImageUC3 const * input);
     itkImageUC3 const * GetMaskImage() const;
     void SetInput1(itkImageF3 const * input);
     void SetInput2(itkImageUC3 const * input);
   private:
     itkKappaSigmaThresholdImageFilterIF3IUC3(itkKappaSigmaThresholdImageFilterIF3IUC3 const & arg0);
     void operator=(itkKappaSigmaThresholdImageFilterIF3IUC3 const & arg0);
   protected:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     itkKappaSigmaThresholdImageFilterIF3IUC3();
     ~itkKappaSigmaThresholdImageFilterIF3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkKappaSigmaThresholdImageFilterIF3IUC3_Pointer {
   public:
     itkKappaSigmaThresholdImageFilterIF3IUC3_Pointer();
     itkKappaSigmaThresholdImageFilterIF3IUC3_Pointer(itkKappaSigmaThresholdImageFilterIF3IUC3_Pointer const & p);
     itkKappaSigmaThresholdImageFilterIF3IUC3_Pointer(itkKappaSigmaThresholdImageFilterIF3IUC3 * p);
     ~itkKappaSigmaThresholdImageFilterIF3IUC3_Pointer();
     itkKappaSigmaThresholdImageFilterIF3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkKappaSigmaThresholdImageFilterIF3IUC3 * GetPointer() const;
     bool operator<(itkKappaSigmaThresholdImageFilterIF3IUC3_Pointer const & r) const;
     bool operator>(itkKappaSigmaThresholdImageFilterIF3IUC3_Pointer const & r) const;
     bool operator<=(itkKappaSigmaThresholdImageFilterIF3IUC3_Pointer const & r) const;
     bool operator>=(itkKappaSigmaThresholdImageFilterIF3IUC3_Pointer const & r) const;
     itkKappaSigmaThresholdImageFilterIF3IUC3_Pointer & operator=(itkKappaSigmaThresholdImageFilterIF3IUC3_Pointer const & r);
     itkKappaSigmaThresholdImageFilterIF3IUC3_Pointer & operator=(itkKappaSigmaThresholdImageFilterIF3IUC3 * r);
     itkKappaSigmaThresholdImageFilterIF3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkKappaSigmaThresholdImageFilterIF3IUL3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkKappaSigmaThresholdImageFilterIF3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(float const _arg);
     virtual float GetOutsideValue() const;
     virtual void SetInsideValue(float const _arg);
     virtual float GetInsideValue() const;
     virtual float GetThreshold() const;
     virtual void SetMaskValue(unsigned long const _arg);
     virtual unsigned long GetMaskValue() const;
     virtual void SetSigmaFactor(double const _arg);
     virtual double GetSigmaFactor() const;
     virtual void SetNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetNumberOfIterations() const;
     void SetMaskImage(itkImageUL3 const * input);
     itkImageUL3 const * GetMaskImage() const;
     void SetInput1(itkImageF3 const * input);
     void SetInput2(itkImageUL3 const * input);
   private:
     itkKappaSigmaThresholdImageFilterIF3IUL3(itkKappaSigmaThresholdImageFilterIF3IUL3 const & arg0);
     void operator=(itkKappaSigmaThresholdImageFilterIF3IUL3 const & arg0);
   protected:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     itkKappaSigmaThresholdImageFilterIF3IUL3();
     ~itkKappaSigmaThresholdImageFilterIF3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkKappaSigmaThresholdImageFilterIF3IUL3_Pointer {
   public:
     itkKappaSigmaThresholdImageFilterIF3IUL3_Pointer();
     itkKappaSigmaThresholdImageFilterIF3IUL3_Pointer(itkKappaSigmaThresholdImageFilterIF3IUL3_Pointer const & p);
     itkKappaSigmaThresholdImageFilterIF3IUL3_Pointer(itkKappaSigmaThresholdImageFilterIF3IUL3 * p);
     ~itkKappaSigmaThresholdImageFilterIF3IUL3_Pointer();
     itkKappaSigmaThresholdImageFilterIF3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkKappaSigmaThresholdImageFilterIF3IUL3 * GetPointer() const;
     bool operator<(itkKappaSigmaThresholdImageFilterIF3IUL3_Pointer const & r) const;
     bool operator>(itkKappaSigmaThresholdImageFilterIF3IUL3_Pointer const & r) const;
     bool operator<=(itkKappaSigmaThresholdImageFilterIF3IUL3_Pointer const & r) const;
     bool operator>=(itkKappaSigmaThresholdImageFilterIF3IUL3_Pointer const & r) const;
     itkKappaSigmaThresholdImageFilterIF3IUL3_Pointer & operator=(itkKappaSigmaThresholdImageFilterIF3IUL3_Pointer const & r);
     itkKappaSigmaThresholdImageFilterIF3IUL3_Pointer & operator=(itkKappaSigmaThresholdImageFilterIF3IUL3 * r);
     itkKappaSigmaThresholdImageFilterIF3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkKappaSigmaThresholdImageFilterIF3IUS3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkKappaSigmaThresholdImageFilterIF3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(float const _arg);
     virtual float GetOutsideValue() const;
     virtual void SetInsideValue(float const _arg);
     virtual float GetInsideValue() const;
     virtual float GetThreshold() const;
     virtual void SetMaskValue(unsigned short const _arg);
     virtual unsigned short GetMaskValue() const;
     virtual void SetSigmaFactor(double const _arg);
     virtual double GetSigmaFactor() const;
     virtual void SetNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetNumberOfIterations() const;
     void SetMaskImage(itkImageUS3 const * input);
     itkImageUS3 const * GetMaskImage() const;
     void SetInput1(itkImageF3 const * input);
     void SetInput2(itkImageUS3 const * input);
   private:
     itkKappaSigmaThresholdImageFilterIF3IUS3(itkKappaSigmaThresholdImageFilterIF3IUS3 const & arg0);
     void operator=(itkKappaSigmaThresholdImageFilterIF3IUS3 const & arg0);
   protected:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     itkKappaSigmaThresholdImageFilterIF3IUS3();
     ~itkKappaSigmaThresholdImageFilterIF3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkKappaSigmaThresholdImageFilterIF3IUS3_Pointer {
   public:
     itkKappaSigmaThresholdImageFilterIF3IUS3_Pointer();
     itkKappaSigmaThresholdImageFilterIF3IUS3_Pointer(itkKappaSigmaThresholdImageFilterIF3IUS3_Pointer const & p);
     itkKappaSigmaThresholdImageFilterIF3IUS3_Pointer(itkKappaSigmaThresholdImageFilterIF3IUS3 * p);
     ~itkKappaSigmaThresholdImageFilterIF3IUS3_Pointer();
     itkKappaSigmaThresholdImageFilterIF3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkKappaSigmaThresholdImageFilterIF3IUS3 * GetPointer() const;
     bool operator<(itkKappaSigmaThresholdImageFilterIF3IUS3_Pointer const & r) const;
     bool operator>(itkKappaSigmaThresholdImageFilterIF3IUS3_Pointer const & r) const;
     bool operator<=(itkKappaSigmaThresholdImageFilterIF3IUS3_Pointer const & r) const;
     bool operator>=(itkKappaSigmaThresholdImageFilterIF3IUS3_Pointer const & r) const;
     itkKappaSigmaThresholdImageFilterIF3IUS3_Pointer & operator=(itkKappaSigmaThresholdImageFilterIF3IUS3_Pointer const & r);
     itkKappaSigmaThresholdImageFilterIF3IUS3_Pointer & operator=(itkKappaSigmaThresholdImageFilterIF3IUS3 * r);
     itkKappaSigmaThresholdImageFilterIF3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkKappaSigmaThresholdImageFilterIUC2IUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkKappaSigmaThresholdImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char GetInsideValue() const;
     virtual unsigned char GetThreshold() const;
     virtual void SetMaskValue(unsigned char const _arg);
     virtual unsigned char GetMaskValue() const;
     virtual void SetSigmaFactor(double const _arg);
     virtual double GetSigmaFactor() const;
     virtual void SetNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetNumberOfIterations() const;
     void SetMaskImage(itkImageUC2 const * input);
     itkImageUC2 const * GetMaskImage() const;
     void SetInput1(itkImageUC2 const * input);
     void SetInput2(itkImageUC2 const * input);
   private:
     itkKappaSigmaThresholdImageFilterIUC2IUC2(itkKappaSigmaThresholdImageFilterIUC2IUC2 const & arg0);
     void operator=(itkKappaSigmaThresholdImageFilterIUC2IUC2 const & arg0);
   protected:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     itkKappaSigmaThresholdImageFilterIUC2IUC2();
     ~itkKappaSigmaThresholdImageFilterIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkKappaSigmaThresholdImageFilterIUC2IUC2_Pointer {
   public:
     itkKappaSigmaThresholdImageFilterIUC2IUC2_Pointer();
     itkKappaSigmaThresholdImageFilterIUC2IUC2_Pointer(itkKappaSigmaThresholdImageFilterIUC2IUC2_Pointer const & p);
     itkKappaSigmaThresholdImageFilterIUC2IUC2_Pointer(itkKappaSigmaThresholdImageFilterIUC2IUC2 * p);
     ~itkKappaSigmaThresholdImageFilterIUC2IUC2_Pointer();
     itkKappaSigmaThresholdImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkKappaSigmaThresholdImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkKappaSigmaThresholdImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkKappaSigmaThresholdImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkKappaSigmaThresholdImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkKappaSigmaThresholdImageFilterIUC2IUC2_Pointer const & r) const;
     itkKappaSigmaThresholdImageFilterIUC2IUC2_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUC2IUC2_Pointer const & r);
     itkKappaSigmaThresholdImageFilterIUC2IUC2_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUC2IUC2 * r);
     itkKappaSigmaThresholdImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkKappaSigmaThresholdImageFilterIUC2IUL2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkKappaSigmaThresholdImageFilterIUC2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char GetInsideValue() const;
     virtual unsigned char GetThreshold() const;
     virtual void SetMaskValue(unsigned long const _arg);
     virtual unsigned long GetMaskValue() const;
     virtual void SetSigmaFactor(double const _arg);
     virtual double GetSigmaFactor() const;
     virtual void SetNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetNumberOfIterations() const;
     void SetMaskImage(itkImageUL2 const * input);
     itkImageUL2 const * GetMaskImage() const;
     void SetInput1(itkImageUC2 const * input);
     void SetInput2(itkImageUL2 const * input);
   private:
     itkKappaSigmaThresholdImageFilterIUC2IUL2(itkKappaSigmaThresholdImageFilterIUC2IUL2 const & arg0);
     void operator=(itkKappaSigmaThresholdImageFilterIUC2IUL2 const & arg0);
   protected:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     itkKappaSigmaThresholdImageFilterIUC2IUL2();
     ~itkKappaSigmaThresholdImageFilterIUC2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkKappaSigmaThresholdImageFilterIUC2IUL2_Pointer {
   public:
     itkKappaSigmaThresholdImageFilterIUC2IUL2_Pointer();
     itkKappaSigmaThresholdImageFilterIUC2IUL2_Pointer(itkKappaSigmaThresholdImageFilterIUC2IUL2_Pointer const & p);
     itkKappaSigmaThresholdImageFilterIUC2IUL2_Pointer(itkKappaSigmaThresholdImageFilterIUC2IUL2 * p);
     ~itkKappaSigmaThresholdImageFilterIUC2IUL2_Pointer();
     itkKappaSigmaThresholdImageFilterIUC2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkKappaSigmaThresholdImageFilterIUC2IUL2 * GetPointer() const;
     bool operator<(itkKappaSigmaThresholdImageFilterIUC2IUL2_Pointer const & r) const;
     bool operator>(itkKappaSigmaThresholdImageFilterIUC2IUL2_Pointer const & r) const;
     bool operator<=(itkKappaSigmaThresholdImageFilterIUC2IUL2_Pointer const & r) const;
     bool operator>=(itkKappaSigmaThresholdImageFilterIUC2IUL2_Pointer const & r) const;
     itkKappaSigmaThresholdImageFilterIUC2IUL2_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUC2IUL2_Pointer const & r);
     itkKappaSigmaThresholdImageFilterIUC2IUL2_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUC2IUL2 * r);
     itkKappaSigmaThresholdImageFilterIUC2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkKappaSigmaThresholdImageFilterIUC2IUS2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkKappaSigmaThresholdImageFilterIUC2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char GetInsideValue() const;
     virtual unsigned char GetThreshold() const;
     virtual void SetMaskValue(unsigned short const _arg);
     virtual unsigned short GetMaskValue() const;
     virtual void SetSigmaFactor(double const _arg);
     virtual double GetSigmaFactor() const;
     virtual void SetNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetNumberOfIterations() const;
     void SetMaskImage(itkImageUS2 const * input);
     itkImageUS2 const * GetMaskImage() const;
     void SetInput1(itkImageUC2 const * input);
     void SetInput2(itkImageUS2 const * input);
   private:
     itkKappaSigmaThresholdImageFilterIUC2IUS2(itkKappaSigmaThresholdImageFilterIUC2IUS2 const & arg0);
     void operator=(itkKappaSigmaThresholdImageFilterIUC2IUS2 const & arg0);
   protected:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     itkKappaSigmaThresholdImageFilterIUC2IUS2();
     ~itkKappaSigmaThresholdImageFilterIUC2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkKappaSigmaThresholdImageFilterIUC2IUS2_Pointer {
   public:
     itkKappaSigmaThresholdImageFilterIUC2IUS2_Pointer();
     itkKappaSigmaThresholdImageFilterIUC2IUS2_Pointer(itkKappaSigmaThresholdImageFilterIUC2IUS2_Pointer const & p);
     itkKappaSigmaThresholdImageFilterIUC2IUS2_Pointer(itkKappaSigmaThresholdImageFilterIUC2IUS2 * p);
     ~itkKappaSigmaThresholdImageFilterIUC2IUS2_Pointer();
     itkKappaSigmaThresholdImageFilterIUC2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkKappaSigmaThresholdImageFilterIUC2IUS2 * GetPointer() const;
     bool operator<(itkKappaSigmaThresholdImageFilterIUC2IUS2_Pointer const & r) const;
     bool operator>(itkKappaSigmaThresholdImageFilterIUC2IUS2_Pointer const & r) const;
     bool operator<=(itkKappaSigmaThresholdImageFilterIUC2IUS2_Pointer const & r) const;
     bool operator>=(itkKappaSigmaThresholdImageFilterIUC2IUS2_Pointer const & r) const;
     itkKappaSigmaThresholdImageFilterIUC2IUS2_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUC2IUS2_Pointer const & r);
     itkKappaSigmaThresholdImageFilterIUC2IUS2_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUC2IUS2 * r);
     itkKappaSigmaThresholdImageFilterIUC2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkKappaSigmaThresholdImageFilterIUC3IUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkKappaSigmaThresholdImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char GetInsideValue() const;
     virtual unsigned char GetThreshold() const;
     virtual void SetMaskValue(unsigned char const _arg);
     virtual unsigned char GetMaskValue() const;
     virtual void SetSigmaFactor(double const _arg);
     virtual double GetSigmaFactor() const;
     virtual void SetNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetNumberOfIterations() const;
     void SetMaskImage(itkImageUC3 const * input);
     itkImageUC3 const * GetMaskImage() const;
     void SetInput1(itkImageUC3 const * input);
     void SetInput2(itkImageUC3 const * input);
   private:
     itkKappaSigmaThresholdImageFilterIUC3IUC3(itkKappaSigmaThresholdImageFilterIUC3IUC3 const & arg0);
     void operator=(itkKappaSigmaThresholdImageFilterIUC3IUC3 const & arg0);
   protected:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     itkKappaSigmaThresholdImageFilterIUC3IUC3();
     ~itkKappaSigmaThresholdImageFilterIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkKappaSigmaThresholdImageFilterIUC3IUC3_Pointer {
   public:
     itkKappaSigmaThresholdImageFilterIUC3IUC3_Pointer();
     itkKappaSigmaThresholdImageFilterIUC3IUC3_Pointer(itkKappaSigmaThresholdImageFilterIUC3IUC3_Pointer const & p);
     itkKappaSigmaThresholdImageFilterIUC3IUC3_Pointer(itkKappaSigmaThresholdImageFilterIUC3IUC3 * p);
     ~itkKappaSigmaThresholdImageFilterIUC3IUC3_Pointer();
     itkKappaSigmaThresholdImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkKappaSigmaThresholdImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkKappaSigmaThresholdImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkKappaSigmaThresholdImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkKappaSigmaThresholdImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkKappaSigmaThresholdImageFilterIUC3IUC3_Pointer const & r) const;
     itkKappaSigmaThresholdImageFilterIUC3IUC3_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUC3IUC3_Pointer const & r);
     itkKappaSigmaThresholdImageFilterIUC3IUC3_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUC3IUC3 * r);
     itkKappaSigmaThresholdImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkKappaSigmaThresholdImageFilterIUC3IUL3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkKappaSigmaThresholdImageFilterIUC3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char GetInsideValue() const;
     virtual unsigned char GetThreshold() const;
     virtual void SetMaskValue(unsigned long const _arg);
     virtual unsigned long GetMaskValue() const;
     virtual void SetSigmaFactor(double const _arg);
     virtual double GetSigmaFactor() const;
     virtual void SetNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetNumberOfIterations() const;
     void SetMaskImage(itkImageUL3 const * input);
     itkImageUL3 const * GetMaskImage() const;
     void SetInput1(itkImageUC3 const * input);
     void SetInput2(itkImageUL3 const * input);
   private:
     itkKappaSigmaThresholdImageFilterIUC3IUL3(itkKappaSigmaThresholdImageFilterIUC3IUL3 const & arg0);
     void operator=(itkKappaSigmaThresholdImageFilterIUC3IUL3 const & arg0);
   protected:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     itkKappaSigmaThresholdImageFilterIUC3IUL3();
     ~itkKappaSigmaThresholdImageFilterIUC3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkKappaSigmaThresholdImageFilterIUC3IUL3_Pointer {
   public:
     itkKappaSigmaThresholdImageFilterIUC3IUL3_Pointer();
     itkKappaSigmaThresholdImageFilterIUC3IUL3_Pointer(itkKappaSigmaThresholdImageFilterIUC3IUL3_Pointer const & p);
     itkKappaSigmaThresholdImageFilterIUC3IUL3_Pointer(itkKappaSigmaThresholdImageFilterIUC3IUL3 * p);
     ~itkKappaSigmaThresholdImageFilterIUC3IUL3_Pointer();
     itkKappaSigmaThresholdImageFilterIUC3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkKappaSigmaThresholdImageFilterIUC3IUL3 * GetPointer() const;
     bool operator<(itkKappaSigmaThresholdImageFilterIUC3IUL3_Pointer const & r) const;
     bool operator>(itkKappaSigmaThresholdImageFilterIUC3IUL3_Pointer const & r) const;
     bool operator<=(itkKappaSigmaThresholdImageFilterIUC3IUL3_Pointer const & r) const;
     bool operator>=(itkKappaSigmaThresholdImageFilterIUC3IUL3_Pointer const & r) const;
     itkKappaSigmaThresholdImageFilterIUC3IUL3_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUC3IUL3_Pointer const & r);
     itkKappaSigmaThresholdImageFilterIUC3IUL3_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUC3IUL3 * r);
     itkKappaSigmaThresholdImageFilterIUC3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkKappaSigmaThresholdImageFilterIUC3IUS3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkKappaSigmaThresholdImageFilterIUC3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char GetInsideValue() const;
     virtual unsigned char GetThreshold() const;
     virtual void SetMaskValue(unsigned short const _arg);
     virtual unsigned short GetMaskValue() const;
     virtual void SetSigmaFactor(double const _arg);
     virtual double GetSigmaFactor() const;
     virtual void SetNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetNumberOfIterations() const;
     void SetMaskImage(itkImageUS3 const * input);
     itkImageUS3 const * GetMaskImage() const;
     void SetInput1(itkImageUC3 const * input);
     void SetInput2(itkImageUS3 const * input);
   private:
     itkKappaSigmaThresholdImageFilterIUC3IUS3(itkKappaSigmaThresholdImageFilterIUC3IUS3 const & arg0);
     void operator=(itkKappaSigmaThresholdImageFilterIUC3IUS3 const & arg0);
   protected:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     itkKappaSigmaThresholdImageFilterIUC3IUS3();
     ~itkKappaSigmaThresholdImageFilterIUC3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkKappaSigmaThresholdImageFilterIUC3IUS3_Pointer {
   public:
     itkKappaSigmaThresholdImageFilterIUC3IUS3_Pointer();
     itkKappaSigmaThresholdImageFilterIUC3IUS3_Pointer(itkKappaSigmaThresholdImageFilterIUC3IUS3_Pointer const & p);
     itkKappaSigmaThresholdImageFilterIUC3IUS3_Pointer(itkKappaSigmaThresholdImageFilterIUC3IUS3 * p);
     ~itkKappaSigmaThresholdImageFilterIUC3IUS3_Pointer();
     itkKappaSigmaThresholdImageFilterIUC3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkKappaSigmaThresholdImageFilterIUC3IUS3 * GetPointer() const;
     bool operator<(itkKappaSigmaThresholdImageFilterIUC3IUS3_Pointer const & r) const;
     bool operator>(itkKappaSigmaThresholdImageFilterIUC3IUS3_Pointer const & r) const;
     bool operator<=(itkKappaSigmaThresholdImageFilterIUC3IUS3_Pointer const & r) const;
     bool operator>=(itkKappaSigmaThresholdImageFilterIUC3IUS3_Pointer const & r) const;
     itkKappaSigmaThresholdImageFilterIUC3IUS3_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUC3IUS3_Pointer const & r);
     itkKappaSigmaThresholdImageFilterIUC3IUS3_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUC3IUS3 * r);
     itkKappaSigmaThresholdImageFilterIUC3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkKappaSigmaThresholdImageFilterIUL2IUC2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkKappaSigmaThresholdImageFilterIUL2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long GetOutsideValue() const;
     virtual void SetInsideValue(unsigned long const _arg);
     virtual unsigned long GetInsideValue() const;
     virtual unsigned long GetThreshold() const;
     virtual void SetMaskValue(unsigned char const _arg);
     virtual unsigned char GetMaskValue() const;
     virtual void SetSigmaFactor(double const _arg);
     virtual double GetSigmaFactor() const;
     virtual void SetNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetNumberOfIterations() const;
     void SetMaskImage(itkImageUC2 const * input);
     itkImageUC2 const * GetMaskImage() const;
     void SetInput1(itkImageUL2 const * input);
     void SetInput2(itkImageUC2 const * input);
   private:
     itkKappaSigmaThresholdImageFilterIUL2IUC2(itkKappaSigmaThresholdImageFilterIUL2IUC2 const & arg0);
     void operator=(itkKappaSigmaThresholdImageFilterIUL2IUC2 const & arg0);
   protected:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     itkKappaSigmaThresholdImageFilterIUL2IUC2();
     ~itkKappaSigmaThresholdImageFilterIUL2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkKappaSigmaThresholdImageFilterIUL2IUC2_Pointer {
   public:
     itkKappaSigmaThresholdImageFilterIUL2IUC2_Pointer();
     itkKappaSigmaThresholdImageFilterIUL2IUC2_Pointer(itkKappaSigmaThresholdImageFilterIUL2IUC2_Pointer const & p);
     itkKappaSigmaThresholdImageFilterIUL2IUC2_Pointer(itkKappaSigmaThresholdImageFilterIUL2IUC2 * p);
     ~itkKappaSigmaThresholdImageFilterIUL2IUC2_Pointer();
     itkKappaSigmaThresholdImageFilterIUL2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkKappaSigmaThresholdImageFilterIUL2IUC2 * GetPointer() const;
     bool operator<(itkKappaSigmaThresholdImageFilterIUL2IUC2_Pointer const & r) const;
     bool operator>(itkKappaSigmaThresholdImageFilterIUL2IUC2_Pointer const & r) const;
     bool operator<=(itkKappaSigmaThresholdImageFilterIUL2IUC2_Pointer const & r) const;
     bool operator>=(itkKappaSigmaThresholdImageFilterIUL2IUC2_Pointer const & r) const;
     itkKappaSigmaThresholdImageFilterIUL2IUC2_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUL2IUC2_Pointer const & r);
     itkKappaSigmaThresholdImageFilterIUL2IUC2_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUL2IUC2 * r);
     itkKappaSigmaThresholdImageFilterIUL2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkKappaSigmaThresholdImageFilterIUL2IUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkKappaSigmaThresholdImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long GetOutsideValue() const;
     virtual void SetInsideValue(unsigned long const _arg);
     virtual unsigned long GetInsideValue() const;
     virtual unsigned long GetThreshold() const;
     virtual void SetMaskValue(unsigned long const _arg);
     virtual unsigned long GetMaskValue() const;
     virtual void SetSigmaFactor(double const _arg);
     virtual double GetSigmaFactor() const;
     virtual void SetNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetNumberOfIterations() const;
     void SetMaskImage(itkImageUL2 const * input);
     itkImageUL2 const * GetMaskImage() const;
     void SetInput1(itkImageUL2 const * input);
     void SetInput2(itkImageUL2 const * input);
   private:
     itkKappaSigmaThresholdImageFilterIUL2IUL2(itkKappaSigmaThresholdImageFilterIUL2IUL2 const & arg0);
     void operator=(itkKappaSigmaThresholdImageFilterIUL2IUL2 const & arg0);
   protected:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     itkKappaSigmaThresholdImageFilterIUL2IUL2();
     ~itkKappaSigmaThresholdImageFilterIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkKappaSigmaThresholdImageFilterIUL2IUL2_Pointer {
   public:
     itkKappaSigmaThresholdImageFilterIUL2IUL2_Pointer();
     itkKappaSigmaThresholdImageFilterIUL2IUL2_Pointer(itkKappaSigmaThresholdImageFilterIUL2IUL2_Pointer const & p);
     itkKappaSigmaThresholdImageFilterIUL2IUL2_Pointer(itkKappaSigmaThresholdImageFilterIUL2IUL2 * p);
     ~itkKappaSigmaThresholdImageFilterIUL2IUL2_Pointer();
     itkKappaSigmaThresholdImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkKappaSigmaThresholdImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkKappaSigmaThresholdImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkKappaSigmaThresholdImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkKappaSigmaThresholdImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkKappaSigmaThresholdImageFilterIUL2IUL2_Pointer const & r) const;
     itkKappaSigmaThresholdImageFilterIUL2IUL2_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUL2IUL2_Pointer const & r);
     itkKappaSigmaThresholdImageFilterIUL2IUL2_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUL2IUL2 * r);
     itkKappaSigmaThresholdImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkKappaSigmaThresholdImageFilterIUL2IUS2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkKappaSigmaThresholdImageFilterIUL2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long GetOutsideValue() const;
     virtual void SetInsideValue(unsigned long const _arg);
     virtual unsigned long GetInsideValue() const;
     virtual unsigned long GetThreshold() const;
     virtual void SetMaskValue(unsigned short const _arg);
     virtual unsigned short GetMaskValue() const;
     virtual void SetSigmaFactor(double const _arg);
     virtual double GetSigmaFactor() const;
     virtual void SetNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetNumberOfIterations() const;
     void SetMaskImage(itkImageUS2 const * input);
     itkImageUS2 const * GetMaskImage() const;
     void SetInput1(itkImageUL2 const * input);
     void SetInput2(itkImageUS2 const * input);
   private:
     itkKappaSigmaThresholdImageFilterIUL2IUS2(itkKappaSigmaThresholdImageFilterIUL2IUS2 const & arg0);
     void operator=(itkKappaSigmaThresholdImageFilterIUL2IUS2 const & arg0);
   protected:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     itkKappaSigmaThresholdImageFilterIUL2IUS2();
     ~itkKappaSigmaThresholdImageFilterIUL2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkKappaSigmaThresholdImageFilterIUL2IUS2_Pointer {
   public:
     itkKappaSigmaThresholdImageFilterIUL2IUS2_Pointer();
     itkKappaSigmaThresholdImageFilterIUL2IUS2_Pointer(itkKappaSigmaThresholdImageFilterIUL2IUS2_Pointer const & p);
     itkKappaSigmaThresholdImageFilterIUL2IUS2_Pointer(itkKappaSigmaThresholdImageFilterIUL2IUS2 * p);
     ~itkKappaSigmaThresholdImageFilterIUL2IUS2_Pointer();
     itkKappaSigmaThresholdImageFilterIUL2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkKappaSigmaThresholdImageFilterIUL2IUS2 * GetPointer() const;
     bool operator<(itkKappaSigmaThresholdImageFilterIUL2IUS2_Pointer const & r) const;
     bool operator>(itkKappaSigmaThresholdImageFilterIUL2IUS2_Pointer const & r) const;
     bool operator<=(itkKappaSigmaThresholdImageFilterIUL2IUS2_Pointer const & r) const;
     bool operator>=(itkKappaSigmaThresholdImageFilterIUL2IUS2_Pointer const & r) const;
     itkKappaSigmaThresholdImageFilterIUL2IUS2_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUL2IUS2_Pointer const & r);
     itkKappaSigmaThresholdImageFilterIUL2IUS2_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUL2IUS2 * r);
     itkKappaSigmaThresholdImageFilterIUL2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkKappaSigmaThresholdImageFilterIUL3IUC3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkKappaSigmaThresholdImageFilterIUL3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long GetOutsideValue() const;
     virtual void SetInsideValue(unsigned long const _arg);
     virtual unsigned long GetInsideValue() const;
     virtual unsigned long GetThreshold() const;
     virtual void SetMaskValue(unsigned char const _arg);
     virtual unsigned char GetMaskValue() const;
     virtual void SetSigmaFactor(double const _arg);
     virtual double GetSigmaFactor() const;
     virtual void SetNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetNumberOfIterations() const;
     void SetMaskImage(itkImageUC3 const * input);
     itkImageUC3 const * GetMaskImage() const;
     void SetInput1(itkImageUL3 const * input);
     void SetInput2(itkImageUC3 const * input);
   private:
     itkKappaSigmaThresholdImageFilterIUL3IUC3(itkKappaSigmaThresholdImageFilterIUL3IUC3 const & arg0);
     void operator=(itkKappaSigmaThresholdImageFilterIUL3IUC3 const & arg0);
   protected:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     itkKappaSigmaThresholdImageFilterIUL3IUC3();
     ~itkKappaSigmaThresholdImageFilterIUL3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkKappaSigmaThresholdImageFilterIUL3IUC3_Pointer {
   public:
     itkKappaSigmaThresholdImageFilterIUL3IUC3_Pointer();
     itkKappaSigmaThresholdImageFilterIUL3IUC3_Pointer(itkKappaSigmaThresholdImageFilterIUL3IUC3_Pointer const & p);
     itkKappaSigmaThresholdImageFilterIUL3IUC3_Pointer(itkKappaSigmaThresholdImageFilterIUL3IUC3 * p);
     ~itkKappaSigmaThresholdImageFilterIUL3IUC3_Pointer();
     itkKappaSigmaThresholdImageFilterIUL3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkKappaSigmaThresholdImageFilterIUL3IUC3 * GetPointer() const;
     bool operator<(itkKappaSigmaThresholdImageFilterIUL3IUC3_Pointer const & r) const;
     bool operator>(itkKappaSigmaThresholdImageFilterIUL3IUC3_Pointer const & r) const;
     bool operator<=(itkKappaSigmaThresholdImageFilterIUL3IUC3_Pointer const & r) const;
     bool operator>=(itkKappaSigmaThresholdImageFilterIUL3IUC3_Pointer const & r) const;
     itkKappaSigmaThresholdImageFilterIUL3IUC3_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUL3IUC3_Pointer const & r);
     itkKappaSigmaThresholdImageFilterIUL3IUC3_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUL3IUC3 * r);
     itkKappaSigmaThresholdImageFilterIUL3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkKappaSigmaThresholdImageFilterIUL3IUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkKappaSigmaThresholdImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long GetOutsideValue() const;
     virtual void SetInsideValue(unsigned long const _arg);
     virtual unsigned long GetInsideValue() const;
     virtual unsigned long GetThreshold() const;
     virtual void SetMaskValue(unsigned long const _arg);
     virtual unsigned long GetMaskValue() const;
     virtual void SetSigmaFactor(double const _arg);
     virtual double GetSigmaFactor() const;
     virtual void SetNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetNumberOfIterations() const;
     void SetMaskImage(itkImageUL3 const * input);
     itkImageUL3 const * GetMaskImage() const;
     void SetInput1(itkImageUL3 const * input);
     void SetInput2(itkImageUL3 const * input);
   private:
     itkKappaSigmaThresholdImageFilterIUL3IUL3(itkKappaSigmaThresholdImageFilterIUL3IUL3 const & arg0);
     void operator=(itkKappaSigmaThresholdImageFilterIUL3IUL3 const & arg0);
   protected:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     itkKappaSigmaThresholdImageFilterIUL3IUL3();
     ~itkKappaSigmaThresholdImageFilterIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkKappaSigmaThresholdImageFilterIUL3IUL3_Pointer {
   public:
     itkKappaSigmaThresholdImageFilterIUL3IUL3_Pointer();
     itkKappaSigmaThresholdImageFilterIUL3IUL3_Pointer(itkKappaSigmaThresholdImageFilterIUL3IUL3_Pointer const & p);
     itkKappaSigmaThresholdImageFilterIUL3IUL3_Pointer(itkKappaSigmaThresholdImageFilterIUL3IUL3 * p);
     ~itkKappaSigmaThresholdImageFilterIUL3IUL3_Pointer();
     itkKappaSigmaThresholdImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkKappaSigmaThresholdImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkKappaSigmaThresholdImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkKappaSigmaThresholdImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkKappaSigmaThresholdImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkKappaSigmaThresholdImageFilterIUL3IUL3_Pointer const & r) const;
     itkKappaSigmaThresholdImageFilterIUL3IUL3_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUL3IUL3_Pointer const & r);
     itkKappaSigmaThresholdImageFilterIUL3IUL3_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUL3IUL3 * r);
     itkKappaSigmaThresholdImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkKappaSigmaThresholdImageFilterIUL3IUS3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkKappaSigmaThresholdImageFilterIUL3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long GetOutsideValue() const;
     virtual void SetInsideValue(unsigned long const _arg);
     virtual unsigned long GetInsideValue() const;
     virtual unsigned long GetThreshold() const;
     virtual void SetMaskValue(unsigned short const _arg);
     virtual unsigned short GetMaskValue() const;
     virtual void SetSigmaFactor(double const _arg);
     virtual double GetSigmaFactor() const;
     virtual void SetNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetNumberOfIterations() const;
     void SetMaskImage(itkImageUS3 const * input);
     itkImageUS3 const * GetMaskImage() const;
     void SetInput1(itkImageUL3 const * input);
     void SetInput2(itkImageUS3 const * input);
   private:
     itkKappaSigmaThresholdImageFilterIUL3IUS3(itkKappaSigmaThresholdImageFilterIUL3IUS3 const & arg0);
     void operator=(itkKappaSigmaThresholdImageFilterIUL3IUS3 const & arg0);
   protected:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     itkKappaSigmaThresholdImageFilterIUL3IUS3();
     ~itkKappaSigmaThresholdImageFilterIUL3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkKappaSigmaThresholdImageFilterIUL3IUS3_Pointer {
   public:
     itkKappaSigmaThresholdImageFilterIUL3IUS3_Pointer();
     itkKappaSigmaThresholdImageFilterIUL3IUS3_Pointer(itkKappaSigmaThresholdImageFilterIUL3IUS3_Pointer const & p);
     itkKappaSigmaThresholdImageFilterIUL3IUS3_Pointer(itkKappaSigmaThresholdImageFilterIUL3IUS3 * p);
     ~itkKappaSigmaThresholdImageFilterIUL3IUS3_Pointer();
     itkKappaSigmaThresholdImageFilterIUL3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkKappaSigmaThresholdImageFilterIUL3IUS3 * GetPointer() const;
     bool operator<(itkKappaSigmaThresholdImageFilterIUL3IUS3_Pointer const & r) const;
     bool operator>(itkKappaSigmaThresholdImageFilterIUL3IUS3_Pointer const & r) const;
     bool operator<=(itkKappaSigmaThresholdImageFilterIUL3IUS3_Pointer const & r) const;
     bool operator>=(itkKappaSigmaThresholdImageFilterIUL3IUS3_Pointer const & r) const;
     itkKappaSigmaThresholdImageFilterIUL3IUS3_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUL3IUS3_Pointer const & r);
     itkKappaSigmaThresholdImageFilterIUL3IUS3_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUL3IUS3 * r);
     itkKappaSigmaThresholdImageFilterIUL3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkKappaSigmaThresholdImageFilterIUS2IUC2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkKappaSigmaThresholdImageFilterIUS2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short GetOutsideValue() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short GetInsideValue() const;
     virtual unsigned short GetThreshold() const;
     virtual void SetMaskValue(unsigned char const _arg);
     virtual unsigned char GetMaskValue() const;
     virtual void SetSigmaFactor(double const _arg);
     virtual double GetSigmaFactor() const;
     virtual void SetNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetNumberOfIterations() const;
     void SetMaskImage(itkImageUC2 const * input);
     itkImageUC2 const * GetMaskImage() const;
     void SetInput1(itkImageUS2 const * input);
     void SetInput2(itkImageUC2 const * input);
   private:
     itkKappaSigmaThresholdImageFilterIUS2IUC2(itkKappaSigmaThresholdImageFilterIUS2IUC2 const & arg0);
     void operator=(itkKappaSigmaThresholdImageFilterIUS2IUC2 const & arg0);
   protected:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     itkKappaSigmaThresholdImageFilterIUS2IUC2();
     ~itkKappaSigmaThresholdImageFilterIUS2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkKappaSigmaThresholdImageFilterIUS2IUC2_Pointer {
   public:
     itkKappaSigmaThresholdImageFilterIUS2IUC2_Pointer();
     itkKappaSigmaThresholdImageFilterIUS2IUC2_Pointer(itkKappaSigmaThresholdImageFilterIUS2IUC2_Pointer const & p);
     itkKappaSigmaThresholdImageFilterIUS2IUC2_Pointer(itkKappaSigmaThresholdImageFilterIUS2IUC2 * p);
     ~itkKappaSigmaThresholdImageFilterIUS2IUC2_Pointer();
     itkKappaSigmaThresholdImageFilterIUS2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkKappaSigmaThresholdImageFilterIUS2IUC2 * GetPointer() const;
     bool operator<(itkKappaSigmaThresholdImageFilterIUS2IUC2_Pointer const & r) const;
     bool operator>(itkKappaSigmaThresholdImageFilterIUS2IUC2_Pointer const & r) const;
     bool operator<=(itkKappaSigmaThresholdImageFilterIUS2IUC2_Pointer const & r) const;
     bool operator>=(itkKappaSigmaThresholdImageFilterIUS2IUC2_Pointer const & r) const;
     itkKappaSigmaThresholdImageFilterIUS2IUC2_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUS2IUC2_Pointer const & r);
     itkKappaSigmaThresholdImageFilterIUS2IUC2_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUS2IUC2 * r);
     itkKappaSigmaThresholdImageFilterIUS2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkKappaSigmaThresholdImageFilterIUS2IUL2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkKappaSigmaThresholdImageFilterIUS2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short GetOutsideValue() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short GetInsideValue() const;
     virtual unsigned short GetThreshold() const;
     virtual void SetMaskValue(unsigned long const _arg);
     virtual unsigned long GetMaskValue() const;
     virtual void SetSigmaFactor(double const _arg);
     virtual double GetSigmaFactor() const;
     virtual void SetNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetNumberOfIterations() const;
     void SetMaskImage(itkImageUL2 const * input);
     itkImageUL2 const * GetMaskImage() const;
     void SetInput1(itkImageUS2 const * input);
     void SetInput2(itkImageUL2 const * input);
   private:
     itkKappaSigmaThresholdImageFilterIUS2IUL2(itkKappaSigmaThresholdImageFilterIUS2IUL2 const & arg0);
     void operator=(itkKappaSigmaThresholdImageFilterIUS2IUL2 const & arg0);
   protected:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     itkKappaSigmaThresholdImageFilterIUS2IUL2();
     ~itkKappaSigmaThresholdImageFilterIUS2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkKappaSigmaThresholdImageFilterIUS2IUL2_Pointer {
   public:
     itkKappaSigmaThresholdImageFilterIUS2IUL2_Pointer();
     itkKappaSigmaThresholdImageFilterIUS2IUL2_Pointer(itkKappaSigmaThresholdImageFilterIUS2IUL2_Pointer const & p);
     itkKappaSigmaThresholdImageFilterIUS2IUL2_Pointer(itkKappaSigmaThresholdImageFilterIUS2IUL2 * p);
     ~itkKappaSigmaThresholdImageFilterIUS2IUL2_Pointer();
     itkKappaSigmaThresholdImageFilterIUS2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkKappaSigmaThresholdImageFilterIUS2IUL2 * GetPointer() const;
     bool operator<(itkKappaSigmaThresholdImageFilterIUS2IUL2_Pointer const & r) const;
     bool operator>(itkKappaSigmaThresholdImageFilterIUS2IUL2_Pointer const & r) const;
     bool operator<=(itkKappaSigmaThresholdImageFilterIUS2IUL2_Pointer const & r) const;
     bool operator>=(itkKappaSigmaThresholdImageFilterIUS2IUL2_Pointer const & r) const;
     itkKappaSigmaThresholdImageFilterIUS2IUL2_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUS2IUL2_Pointer const & r);
     itkKappaSigmaThresholdImageFilterIUS2IUL2_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUS2IUL2 * r);
     itkKappaSigmaThresholdImageFilterIUS2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkKappaSigmaThresholdImageFilterIUS2IUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkKappaSigmaThresholdImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short GetOutsideValue() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short GetInsideValue() const;
     virtual unsigned short GetThreshold() const;
     virtual void SetMaskValue(unsigned short const _arg);
     virtual unsigned short GetMaskValue() const;
     virtual void SetSigmaFactor(double const _arg);
     virtual double GetSigmaFactor() const;
     virtual void SetNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetNumberOfIterations() const;
     void SetMaskImage(itkImageUS2 const * input);
     itkImageUS2 const * GetMaskImage() const;
     void SetInput1(itkImageUS2 const * input);
     void SetInput2(itkImageUS2 const * input);
   private:
     itkKappaSigmaThresholdImageFilterIUS2IUS2(itkKappaSigmaThresholdImageFilterIUS2IUS2 const & arg0);
     void operator=(itkKappaSigmaThresholdImageFilterIUS2IUS2 const & arg0);
   protected:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     itkKappaSigmaThresholdImageFilterIUS2IUS2();
     ~itkKappaSigmaThresholdImageFilterIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkKappaSigmaThresholdImageFilterIUS2IUS2_Pointer {
   public:
     itkKappaSigmaThresholdImageFilterIUS2IUS2_Pointer();
     itkKappaSigmaThresholdImageFilterIUS2IUS2_Pointer(itkKappaSigmaThresholdImageFilterIUS2IUS2_Pointer const & p);
     itkKappaSigmaThresholdImageFilterIUS2IUS2_Pointer(itkKappaSigmaThresholdImageFilterIUS2IUS2 * p);
     ~itkKappaSigmaThresholdImageFilterIUS2IUS2_Pointer();
     itkKappaSigmaThresholdImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkKappaSigmaThresholdImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkKappaSigmaThresholdImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkKappaSigmaThresholdImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkKappaSigmaThresholdImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkKappaSigmaThresholdImageFilterIUS2IUS2_Pointer const & r) const;
     itkKappaSigmaThresholdImageFilterIUS2IUS2_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUS2IUS2_Pointer const & r);
     itkKappaSigmaThresholdImageFilterIUS2IUS2_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUS2IUS2 * r);
     itkKappaSigmaThresholdImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkKappaSigmaThresholdImageFilterIUS3IUC3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkKappaSigmaThresholdImageFilterIUS3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short GetOutsideValue() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short GetInsideValue() const;
     virtual unsigned short GetThreshold() const;
     virtual void SetMaskValue(unsigned char const _arg);
     virtual unsigned char GetMaskValue() const;
     virtual void SetSigmaFactor(double const _arg);
     virtual double GetSigmaFactor() const;
     virtual void SetNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetNumberOfIterations() const;
     void SetMaskImage(itkImageUC3 const * input);
     itkImageUC3 const * GetMaskImage() const;
     void SetInput1(itkImageUS3 const * input);
     void SetInput2(itkImageUC3 const * input);
   private:
     itkKappaSigmaThresholdImageFilterIUS3IUC3(itkKappaSigmaThresholdImageFilterIUS3IUC3 const & arg0);
     void operator=(itkKappaSigmaThresholdImageFilterIUS3IUC3 const & arg0);
   protected:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     itkKappaSigmaThresholdImageFilterIUS3IUC3();
     ~itkKappaSigmaThresholdImageFilterIUS3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkKappaSigmaThresholdImageFilterIUS3IUC3_Pointer {
   public:
     itkKappaSigmaThresholdImageFilterIUS3IUC3_Pointer();
     itkKappaSigmaThresholdImageFilterIUS3IUC3_Pointer(itkKappaSigmaThresholdImageFilterIUS3IUC3_Pointer const & p);
     itkKappaSigmaThresholdImageFilterIUS3IUC3_Pointer(itkKappaSigmaThresholdImageFilterIUS3IUC3 * p);
     ~itkKappaSigmaThresholdImageFilterIUS3IUC3_Pointer();
     itkKappaSigmaThresholdImageFilterIUS3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkKappaSigmaThresholdImageFilterIUS3IUC3 * GetPointer() const;
     bool operator<(itkKappaSigmaThresholdImageFilterIUS3IUC3_Pointer const & r) const;
     bool operator>(itkKappaSigmaThresholdImageFilterIUS3IUC3_Pointer const & r) const;
     bool operator<=(itkKappaSigmaThresholdImageFilterIUS3IUC3_Pointer const & r) const;
     bool operator>=(itkKappaSigmaThresholdImageFilterIUS3IUC3_Pointer const & r) const;
     itkKappaSigmaThresholdImageFilterIUS3IUC3_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUS3IUC3_Pointer const & r);
     itkKappaSigmaThresholdImageFilterIUS3IUC3_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUS3IUC3 * r);
     itkKappaSigmaThresholdImageFilterIUS3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkKappaSigmaThresholdImageFilterIUS3IUL3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkKappaSigmaThresholdImageFilterIUS3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short GetOutsideValue() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short GetInsideValue() const;
     virtual unsigned short GetThreshold() const;
     virtual void SetMaskValue(unsigned long const _arg);
     virtual unsigned long GetMaskValue() const;
     virtual void SetSigmaFactor(double const _arg);
     virtual double GetSigmaFactor() const;
     virtual void SetNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetNumberOfIterations() const;
     void SetMaskImage(itkImageUL3 const * input);
     itkImageUL3 const * GetMaskImage() const;
     void SetInput1(itkImageUS3 const * input);
     void SetInput2(itkImageUL3 const * input);
   private:
     itkKappaSigmaThresholdImageFilterIUS3IUL3(itkKappaSigmaThresholdImageFilterIUS3IUL3 const & arg0);
     void operator=(itkKappaSigmaThresholdImageFilterIUS3IUL3 const & arg0);
   protected:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     itkKappaSigmaThresholdImageFilterIUS3IUL3();
     ~itkKappaSigmaThresholdImageFilterIUS3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkKappaSigmaThresholdImageFilterIUS3IUL3_Pointer {
   public:
     itkKappaSigmaThresholdImageFilterIUS3IUL3_Pointer();
     itkKappaSigmaThresholdImageFilterIUS3IUL3_Pointer(itkKappaSigmaThresholdImageFilterIUS3IUL3_Pointer const & p);
     itkKappaSigmaThresholdImageFilterIUS3IUL3_Pointer(itkKappaSigmaThresholdImageFilterIUS3IUL3 * p);
     ~itkKappaSigmaThresholdImageFilterIUS3IUL3_Pointer();
     itkKappaSigmaThresholdImageFilterIUS3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkKappaSigmaThresholdImageFilterIUS3IUL3 * GetPointer() const;
     bool operator<(itkKappaSigmaThresholdImageFilterIUS3IUL3_Pointer const & r) const;
     bool operator>(itkKappaSigmaThresholdImageFilterIUS3IUL3_Pointer const & r) const;
     bool operator<=(itkKappaSigmaThresholdImageFilterIUS3IUL3_Pointer const & r) const;
     bool operator>=(itkKappaSigmaThresholdImageFilterIUS3IUL3_Pointer const & r) const;
     itkKappaSigmaThresholdImageFilterIUS3IUL3_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUS3IUL3_Pointer const & r);
     itkKappaSigmaThresholdImageFilterIUS3IUL3_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUS3IUL3 * r);
     itkKappaSigmaThresholdImageFilterIUS3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkKappaSigmaThresholdImageFilterIUS3IUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  OutputComparableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkKappaSigmaThresholdImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short GetOutsideValue() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short GetInsideValue() const;
     virtual unsigned short GetThreshold() const;
     virtual void SetMaskValue(unsigned short const _arg);
     virtual unsigned short GetMaskValue() const;
     virtual void SetSigmaFactor(double const _arg);
     virtual double GetSigmaFactor() const;
     virtual void SetNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetNumberOfIterations() const;
     void SetMaskImage(itkImageUS3 const * input);
     itkImageUS3 const * GetMaskImage() const;
     void SetInput1(itkImageUS3 const * input);
     void SetInput2(itkImageUS3 const * input);
   private:
     itkKappaSigmaThresholdImageFilterIUS3IUS3(itkKappaSigmaThresholdImageFilterIUS3IUS3 const & arg0);
     void operator=(itkKappaSigmaThresholdImageFilterIUS3IUS3 const & arg0);
   protected:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     itkKappaSigmaThresholdImageFilterIUS3IUS3();
     ~itkKappaSigmaThresholdImageFilterIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkKappaSigmaThresholdImageFilterIUS3IUS3_Pointer {
   public:
     itkKappaSigmaThresholdImageFilterIUS3IUS3_Pointer();
     itkKappaSigmaThresholdImageFilterIUS3IUS3_Pointer(itkKappaSigmaThresholdImageFilterIUS3IUS3_Pointer const & p);
     itkKappaSigmaThresholdImageFilterIUS3IUS3_Pointer(itkKappaSigmaThresholdImageFilterIUS3IUS3 * p);
     ~itkKappaSigmaThresholdImageFilterIUS3IUS3_Pointer();
     itkKappaSigmaThresholdImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkKappaSigmaThresholdImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkKappaSigmaThresholdImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkKappaSigmaThresholdImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkKappaSigmaThresholdImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkKappaSigmaThresholdImageFilterIUS3IUS3_Pointer const & r) const;
     itkKappaSigmaThresholdImageFilterIUS3IUS3_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUS3IUS3_Pointer const & r);
     itkKappaSigmaThresholdImageFilterIUS3IUS3_Pointer & operator=(itkKappaSigmaThresholdImageFilterIUS3IUS3 * r);
     itkKappaSigmaThresholdImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


