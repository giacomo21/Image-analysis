# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkPyImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkPyImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkPyImageFilterPython
            return _itkPyImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkPyImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkPyImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkPyImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkImageToImageFilterAPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
def itkPyImageFilterIUS3IUS3_New():
  return itkPyImageFilterIUS3IUS3.New()

def itkPyImageFilterIUS2IUS2_New():
  return itkPyImageFilterIUS2IUS2.New()

def itkPyImageFilterIUL3IUL3_New():
  return itkPyImageFilterIUL3IUL3.New()

def itkPyImageFilterIUL2IUL2_New():
  return itkPyImageFilterIUL2IUL2.New()

def itkPyImageFilterIUC3IUC3_New():
  return itkPyImageFilterIUC3IUC3.New()

def itkPyImageFilterIUC2IUC2_New():
  return itkPyImageFilterIUC2IUC2.New()

class itkPyImageFilterIUC2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """Proxy of C++ itkPyImageFilterIUC2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkPyImageFilterPython.itkPyImageFilterIUC2IUC2_InputImageDimension
    OutputImageDimension = _itkPyImageFilterPython.itkPyImageFilterIUC2IUC2_OutputImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkPyImageFilterPython.itkPyImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetPyGenerateData(self, *args):
        """SetPyGenerateData(self, PyObject obj)"""
        return _itkPyImageFilterPython.itkPyImageFilterIUC2IUC2_SetPyGenerateData(self, *args)

    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUC2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkPyImageFilterIUC2IUC2"""
        return _itkPyImageFilterPython.itkPyImageFilterIUC2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkPyImageFilterIUC2IUC2"""
        return _itkPyImageFilterPython.itkPyImageFilterIUC2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUC2IUC2
        
        Create a new object of the class itkPyImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkPyImageFilterIUC2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkPyImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPyImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPyImageFilterIUC2IUC2.SetPyGenerateData = new_instancemethod(_itkPyImageFilterPython.itkPyImageFilterIUC2IUC2_SetPyGenerateData,None,itkPyImageFilterIUC2IUC2)
itkPyImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkPyImageFilterPython.itkPyImageFilterIUC2IUC2_GetPointer,None,itkPyImageFilterIUC2IUC2)
itkPyImageFilterIUC2IUC2_swigregister = _itkPyImageFilterPython.itkPyImageFilterIUC2IUC2_swigregister
itkPyImageFilterIUC2IUC2_swigregister(itkPyImageFilterIUC2IUC2)

def itkPyImageFilterIUC2IUC2___New_orig__():
  """itkPyImageFilterIUC2IUC2___New_orig__()"""
  return _itkPyImageFilterPython.itkPyImageFilterIUC2IUC2___New_orig__()

def itkPyImageFilterIUC2IUC2_cast(*args):
  """itkPyImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkPyImageFilterIUC2IUC2"""
  return _itkPyImageFilterPython.itkPyImageFilterIUC2IUC2_cast(*args)

class itkPyImageFilterIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """Proxy of C++ itkPyImageFilterIUC3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkPyImageFilterPython.itkPyImageFilterIUC3IUC3_InputImageDimension
    OutputImageDimension = _itkPyImageFilterPython.itkPyImageFilterIUC3IUC3_OutputImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkPyImageFilterPython.itkPyImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetPyGenerateData(self, *args):
        """SetPyGenerateData(self, PyObject obj)"""
        return _itkPyImageFilterPython.itkPyImageFilterIUC3IUC3_SetPyGenerateData(self, *args)

    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUC3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkPyImageFilterIUC3IUC3"""
        return _itkPyImageFilterPython.itkPyImageFilterIUC3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkPyImageFilterIUC3IUC3"""
        return _itkPyImageFilterPython.itkPyImageFilterIUC3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUC3IUC3
        
        Create a new object of the class itkPyImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkPyImageFilterIUC3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkPyImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPyImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPyImageFilterIUC3IUC3.SetPyGenerateData = new_instancemethod(_itkPyImageFilterPython.itkPyImageFilterIUC3IUC3_SetPyGenerateData,None,itkPyImageFilterIUC3IUC3)
itkPyImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkPyImageFilterPython.itkPyImageFilterIUC3IUC3_GetPointer,None,itkPyImageFilterIUC3IUC3)
itkPyImageFilterIUC3IUC3_swigregister = _itkPyImageFilterPython.itkPyImageFilterIUC3IUC3_swigregister
itkPyImageFilterIUC3IUC3_swigregister(itkPyImageFilterIUC3IUC3)

def itkPyImageFilterIUC3IUC3___New_orig__():
  """itkPyImageFilterIUC3IUC3___New_orig__()"""
  return _itkPyImageFilterPython.itkPyImageFilterIUC3IUC3___New_orig__()

def itkPyImageFilterIUC3IUC3_cast(*args):
  """itkPyImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkPyImageFilterIUC3IUC3"""
  return _itkPyImageFilterPython.itkPyImageFilterIUC3IUC3_cast(*args)

class itkPyImageFilterIUL2IUL2(itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2):
    """Proxy of C++ itkPyImageFilterIUL2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkPyImageFilterPython.itkPyImageFilterIUL2IUL2_InputImageDimension
    OutputImageDimension = _itkPyImageFilterPython.itkPyImageFilterIUL2IUL2_OutputImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkPyImageFilterPython.itkPyImageFilterIUL2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetPyGenerateData(self, *args):
        """SetPyGenerateData(self, PyObject obj)"""
        return _itkPyImageFilterPython.itkPyImageFilterIUL2IUL2_SetPyGenerateData(self, *args)

    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUL2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkPyImageFilterIUL2IUL2"""
        return _itkPyImageFilterPython.itkPyImageFilterIUL2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkPyImageFilterIUL2IUL2"""
        return _itkPyImageFilterPython.itkPyImageFilterIUL2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUL2IUL2
        
        Create a new object of the class itkPyImageFilterIUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkPyImageFilterIUL2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkPyImageFilterIUL2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPyImageFilterIUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPyImageFilterIUL2IUL2.SetPyGenerateData = new_instancemethod(_itkPyImageFilterPython.itkPyImageFilterIUL2IUL2_SetPyGenerateData,None,itkPyImageFilterIUL2IUL2)
itkPyImageFilterIUL2IUL2.GetPointer = new_instancemethod(_itkPyImageFilterPython.itkPyImageFilterIUL2IUL2_GetPointer,None,itkPyImageFilterIUL2IUL2)
itkPyImageFilterIUL2IUL2_swigregister = _itkPyImageFilterPython.itkPyImageFilterIUL2IUL2_swigregister
itkPyImageFilterIUL2IUL2_swigregister(itkPyImageFilterIUL2IUL2)

def itkPyImageFilterIUL2IUL2___New_orig__():
  """itkPyImageFilterIUL2IUL2___New_orig__()"""
  return _itkPyImageFilterPython.itkPyImageFilterIUL2IUL2___New_orig__()

def itkPyImageFilterIUL2IUL2_cast(*args):
  """itkPyImageFilterIUL2IUL2_cast(itkLightObject obj) -> itkPyImageFilterIUL2IUL2"""
  return _itkPyImageFilterPython.itkPyImageFilterIUL2IUL2_cast(*args)

class itkPyImageFilterIUL3IUL3(itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3):
    """Proxy of C++ itkPyImageFilterIUL3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkPyImageFilterPython.itkPyImageFilterIUL3IUL3_InputImageDimension
    OutputImageDimension = _itkPyImageFilterPython.itkPyImageFilterIUL3IUL3_OutputImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkPyImageFilterPython.itkPyImageFilterIUL3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetPyGenerateData(self, *args):
        """SetPyGenerateData(self, PyObject obj)"""
        return _itkPyImageFilterPython.itkPyImageFilterIUL3IUL3_SetPyGenerateData(self, *args)

    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUL3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkPyImageFilterIUL3IUL3"""
        return _itkPyImageFilterPython.itkPyImageFilterIUL3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkPyImageFilterIUL3IUL3"""
        return _itkPyImageFilterPython.itkPyImageFilterIUL3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUL3IUL3
        
        Create a new object of the class itkPyImageFilterIUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkPyImageFilterIUL3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkPyImageFilterIUL3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPyImageFilterIUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPyImageFilterIUL3IUL3.SetPyGenerateData = new_instancemethod(_itkPyImageFilterPython.itkPyImageFilterIUL3IUL3_SetPyGenerateData,None,itkPyImageFilterIUL3IUL3)
itkPyImageFilterIUL3IUL3.GetPointer = new_instancemethod(_itkPyImageFilterPython.itkPyImageFilterIUL3IUL3_GetPointer,None,itkPyImageFilterIUL3IUL3)
itkPyImageFilterIUL3IUL3_swigregister = _itkPyImageFilterPython.itkPyImageFilterIUL3IUL3_swigregister
itkPyImageFilterIUL3IUL3_swigregister(itkPyImageFilterIUL3IUL3)

def itkPyImageFilterIUL3IUL3___New_orig__():
  """itkPyImageFilterIUL3IUL3___New_orig__()"""
  return _itkPyImageFilterPython.itkPyImageFilterIUL3IUL3___New_orig__()

def itkPyImageFilterIUL3IUL3_cast(*args):
  """itkPyImageFilterIUL3IUL3_cast(itkLightObject obj) -> itkPyImageFilterIUL3IUL3"""
  return _itkPyImageFilterPython.itkPyImageFilterIUL3IUL3_cast(*args)

class itkPyImageFilterIUS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """Proxy of C++ itkPyImageFilterIUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkPyImageFilterPython.itkPyImageFilterIUS2IUS2_InputImageDimension
    OutputImageDimension = _itkPyImageFilterPython.itkPyImageFilterIUS2IUS2_OutputImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkPyImageFilterPython.itkPyImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetPyGenerateData(self, *args):
        """SetPyGenerateData(self, PyObject obj)"""
        return _itkPyImageFilterPython.itkPyImageFilterIUS2IUS2_SetPyGenerateData(self, *args)

    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkPyImageFilterIUS2IUS2"""
        return _itkPyImageFilterPython.itkPyImageFilterIUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkPyImageFilterIUS2IUS2"""
        return _itkPyImageFilterPython.itkPyImageFilterIUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUS2IUS2
        
        Create a new object of the class itkPyImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkPyImageFilterIUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkPyImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPyImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPyImageFilterIUS2IUS2.SetPyGenerateData = new_instancemethod(_itkPyImageFilterPython.itkPyImageFilterIUS2IUS2_SetPyGenerateData,None,itkPyImageFilterIUS2IUS2)
itkPyImageFilterIUS2IUS2.GetPointer = new_instancemethod(_itkPyImageFilterPython.itkPyImageFilterIUS2IUS2_GetPointer,None,itkPyImageFilterIUS2IUS2)
itkPyImageFilterIUS2IUS2_swigregister = _itkPyImageFilterPython.itkPyImageFilterIUS2IUS2_swigregister
itkPyImageFilterIUS2IUS2_swigregister(itkPyImageFilterIUS2IUS2)

def itkPyImageFilterIUS2IUS2___New_orig__():
  """itkPyImageFilterIUS2IUS2___New_orig__()"""
  return _itkPyImageFilterPython.itkPyImageFilterIUS2IUS2___New_orig__()

def itkPyImageFilterIUS2IUS2_cast(*args):
  """itkPyImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkPyImageFilterIUS2IUS2"""
  return _itkPyImageFilterPython.itkPyImageFilterIUS2IUS2_cast(*args)

class itkPyImageFilterIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """Proxy of C++ itkPyImageFilterIUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkPyImageFilterPython.itkPyImageFilterIUS3IUS3_InputImageDimension
    OutputImageDimension = _itkPyImageFilterPython.itkPyImageFilterIUS3IUS3_OutputImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkPyImageFilterPython.itkPyImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetPyGenerateData(self, *args):
        """SetPyGenerateData(self, PyObject obj)"""
        return _itkPyImageFilterPython.itkPyImageFilterIUS3IUS3_SetPyGenerateData(self, *args)

    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkPyImageFilterIUS3IUS3"""
        return _itkPyImageFilterPython.itkPyImageFilterIUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkPyImageFilterIUS3IUS3"""
        return _itkPyImageFilterPython.itkPyImageFilterIUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUS3IUS3
        
        Create a new object of the class itkPyImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkPyImageFilterIUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkPyImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPyImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPyImageFilterIUS3IUS3.SetPyGenerateData = new_instancemethod(_itkPyImageFilterPython.itkPyImageFilterIUS3IUS3_SetPyGenerateData,None,itkPyImageFilterIUS3IUS3)
itkPyImageFilterIUS3IUS3.GetPointer = new_instancemethod(_itkPyImageFilterPython.itkPyImageFilterIUS3IUS3_GetPointer,None,itkPyImageFilterIUS3IUS3)
itkPyImageFilterIUS3IUS3_swigregister = _itkPyImageFilterPython.itkPyImageFilterIUS3IUS3_swigregister
itkPyImageFilterIUS3IUS3_swigregister(itkPyImageFilterIUS3IUS3)

def itkPyImageFilterIUS3IUS3___New_orig__():
  """itkPyImageFilterIUS3IUS3___New_orig__()"""
  return _itkPyImageFilterPython.itkPyImageFilterIUS3IUS3___New_orig__()

def itkPyImageFilterIUS3IUS3_cast(*args):
  """itkPyImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkPyImageFilterIUS3IUS3"""
  return _itkPyImageFilterPython.itkPyImageFilterIUS3IUS3_cast(*args)



