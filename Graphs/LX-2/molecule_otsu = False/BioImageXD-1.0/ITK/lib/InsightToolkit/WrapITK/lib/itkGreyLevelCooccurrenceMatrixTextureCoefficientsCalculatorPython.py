# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython', [dirname(__file__)])
        except ImportError:
            import _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython
            return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkSimpleDataObjectDecoratorPython
import itkHistogramPython
import itkSamplePython
import itkFixedArrayPython
import itkVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import vnl_vector_refPython
import itkArrayPython
def itkHistogramToTextureFeaturesFilterHF_New():
  return itkHistogramToTextureFeaturesFilterHF.New()

def itkHistogramToTextureFeaturesFilterHD_New():
  return itkHistogramToTextureFeaturesFilterHD.New()

class itkHistogramToTextureFeaturesFilterHD(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkHistogramToTextureFeaturesFilterHD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Energy = _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_Energy
    Entropy = _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_Entropy
    Correlation = _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_Correlation
    InverseDifferenceMoment = _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_InverseDifferenceMoment
    Inertia = _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_Inertia
    ClusterShade = _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_ClusterShade
    ClusterProminence = _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_ClusterProminence
    HaralickCorrelation = _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_HaralickCorrelation
    InvalidFeatureName = _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_InvalidFeatureName
    def __New_orig__():
        """__New_orig__()"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput(self, *args):
        """SetInput(self, itkHistogramD histogram)"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_SetInput(self, *args)

    def GetInput(self):
        """GetInput(self) -> itkHistogramD"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetInput(self)

    def GetEnergy(self):
        """GetEnergy(self) -> double"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetEnergy(self)

    def GetEnergyOutput(self):
        """GetEnergyOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetEnergyOutput(self)

    def GetEntropy(self):
        """GetEntropy(self) -> double"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetEntropy(self)

    def GetEntropyOutput(self):
        """GetEntropyOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetEntropyOutput(self)

    def GetCorrelation(self):
        """GetCorrelation(self) -> double"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetCorrelation(self)

    def GetCorrelationOutput(self):
        """GetCorrelationOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetCorrelationOutput(self)

    def GetInverseDifferenceMoment(self):
        """GetInverseDifferenceMoment(self) -> double"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetInverseDifferenceMoment(self)

    def GetInverseDifferenceMomentOutput(self):
        """GetInverseDifferenceMomentOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetInverseDifferenceMomentOutput(self)

    def GetInertia(self):
        """GetInertia(self) -> double"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetInertia(self)

    def GetInertiaOutput(self):
        """GetInertiaOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetInertiaOutput(self)

    def GetClusterShade(self):
        """GetClusterShade(self) -> double"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetClusterShade(self)

    def GetClusterShadeOutput(self):
        """GetClusterShadeOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetClusterShadeOutput(self)

    def GetClusterProminence(self):
        """GetClusterProminence(self) -> double"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetClusterProminence(self)

    def GetClusterProminenceOutput(self):
        """GetClusterProminenceOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetClusterProminenceOutput(self)

    def GetHaralickCorrelation(self):
        """GetHaralickCorrelation(self) -> double"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetHaralickCorrelation(self)

    def GetHaralickCorrelationOutput(self):
        """GetHaralickCorrelationOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetHaralickCorrelationOutput(self)

    def GetFeature(self, *args):
        """GetFeature(self, TextureFeatureName name) -> double"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetFeature(self, *args)

    __swig_destroy__ = _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.delete_itkHistogramToTextureFeaturesFilterHD
    def cast(*args):
        """cast(itkLightObject obj) -> itkHistogramToTextureFeaturesFilterHD"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkHistogramToTextureFeaturesFilterHD"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkHistogramToTextureFeaturesFilterHD
        
        Create a new object of the class itkHistogramToTextureFeaturesFilterHD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkHistogramToTextureFeaturesFilterHD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkHistogramToTextureFeaturesFilterHD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramToTextureFeaturesFilterHD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramToTextureFeaturesFilterHD.SetInput = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_SetInput,None,itkHistogramToTextureFeaturesFilterHD)
itkHistogramToTextureFeaturesFilterHD.GetInput = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetInput,None,itkHistogramToTextureFeaturesFilterHD)
itkHistogramToTextureFeaturesFilterHD.GetEnergy = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetEnergy,None,itkHistogramToTextureFeaturesFilterHD)
itkHistogramToTextureFeaturesFilterHD.GetEnergyOutput = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetEnergyOutput,None,itkHistogramToTextureFeaturesFilterHD)
itkHistogramToTextureFeaturesFilterHD.GetEntropy = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetEntropy,None,itkHistogramToTextureFeaturesFilterHD)
itkHistogramToTextureFeaturesFilterHD.GetEntropyOutput = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetEntropyOutput,None,itkHistogramToTextureFeaturesFilterHD)
itkHistogramToTextureFeaturesFilterHD.GetCorrelation = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetCorrelation,None,itkHistogramToTextureFeaturesFilterHD)
itkHistogramToTextureFeaturesFilterHD.GetCorrelationOutput = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetCorrelationOutput,None,itkHistogramToTextureFeaturesFilterHD)
itkHistogramToTextureFeaturesFilterHD.GetInverseDifferenceMoment = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetInverseDifferenceMoment,None,itkHistogramToTextureFeaturesFilterHD)
itkHistogramToTextureFeaturesFilterHD.GetInverseDifferenceMomentOutput = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetInverseDifferenceMomentOutput,None,itkHistogramToTextureFeaturesFilterHD)
itkHistogramToTextureFeaturesFilterHD.GetInertia = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetInertia,None,itkHistogramToTextureFeaturesFilterHD)
itkHistogramToTextureFeaturesFilterHD.GetInertiaOutput = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetInertiaOutput,None,itkHistogramToTextureFeaturesFilterHD)
itkHistogramToTextureFeaturesFilterHD.GetClusterShade = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetClusterShade,None,itkHistogramToTextureFeaturesFilterHD)
itkHistogramToTextureFeaturesFilterHD.GetClusterShadeOutput = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetClusterShadeOutput,None,itkHistogramToTextureFeaturesFilterHD)
itkHistogramToTextureFeaturesFilterHD.GetClusterProminence = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetClusterProminence,None,itkHistogramToTextureFeaturesFilterHD)
itkHistogramToTextureFeaturesFilterHD.GetClusterProminenceOutput = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetClusterProminenceOutput,None,itkHistogramToTextureFeaturesFilterHD)
itkHistogramToTextureFeaturesFilterHD.GetHaralickCorrelation = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetHaralickCorrelation,None,itkHistogramToTextureFeaturesFilterHD)
itkHistogramToTextureFeaturesFilterHD.GetHaralickCorrelationOutput = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetHaralickCorrelationOutput,None,itkHistogramToTextureFeaturesFilterHD)
itkHistogramToTextureFeaturesFilterHD.GetFeature = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetFeature,None,itkHistogramToTextureFeaturesFilterHD)
itkHistogramToTextureFeaturesFilterHD.GetPointer = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_GetPointer,None,itkHistogramToTextureFeaturesFilterHD)
itkHistogramToTextureFeaturesFilterHD_swigregister = _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_swigregister
itkHistogramToTextureFeaturesFilterHD_swigregister(itkHistogramToTextureFeaturesFilterHD)

def itkHistogramToTextureFeaturesFilterHD___New_orig__():
  """itkHistogramToTextureFeaturesFilterHD___New_orig__()"""
  return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD___New_orig__()

def itkHistogramToTextureFeaturesFilterHD_cast(*args):
  """itkHistogramToTextureFeaturesFilterHD_cast(itkLightObject obj) -> itkHistogramToTextureFeaturesFilterHD"""
  return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHD_cast(*args)

class itkHistogramToTextureFeaturesFilterHF(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkHistogramToTextureFeaturesFilterHF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Energy = _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_Energy
    Entropy = _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_Entropy
    Correlation = _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_Correlation
    InverseDifferenceMoment = _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_InverseDifferenceMoment
    Inertia = _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_Inertia
    ClusterShade = _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_ClusterShade
    ClusterProminence = _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_ClusterProminence
    HaralickCorrelation = _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_HaralickCorrelation
    InvalidFeatureName = _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_InvalidFeatureName
    def __New_orig__():
        """__New_orig__()"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput(self, *args):
        """SetInput(self, itkHistogramF histogram)"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_SetInput(self, *args)

    def GetInput(self):
        """GetInput(self) -> itkHistogramF"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetInput(self)

    def GetEnergy(self):
        """GetEnergy(self) -> float"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetEnergy(self)

    def GetEnergyOutput(self):
        """GetEnergyOutput(self) -> itkSimpleDataObjectDecoratorF"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetEnergyOutput(self)

    def GetEntropy(self):
        """GetEntropy(self) -> float"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetEntropy(self)

    def GetEntropyOutput(self):
        """GetEntropyOutput(self) -> itkSimpleDataObjectDecoratorF"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetEntropyOutput(self)

    def GetCorrelation(self):
        """GetCorrelation(self) -> float"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetCorrelation(self)

    def GetCorrelationOutput(self):
        """GetCorrelationOutput(self) -> itkSimpleDataObjectDecoratorF"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetCorrelationOutput(self)

    def GetInverseDifferenceMoment(self):
        """GetInverseDifferenceMoment(self) -> float"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetInverseDifferenceMoment(self)

    def GetInverseDifferenceMomentOutput(self):
        """GetInverseDifferenceMomentOutput(self) -> itkSimpleDataObjectDecoratorF"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetInverseDifferenceMomentOutput(self)

    def GetInertia(self):
        """GetInertia(self) -> float"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetInertia(self)

    def GetInertiaOutput(self):
        """GetInertiaOutput(self) -> itkSimpleDataObjectDecoratorF"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetInertiaOutput(self)

    def GetClusterShade(self):
        """GetClusterShade(self) -> float"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetClusterShade(self)

    def GetClusterShadeOutput(self):
        """GetClusterShadeOutput(self) -> itkSimpleDataObjectDecoratorF"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetClusterShadeOutput(self)

    def GetClusterProminence(self):
        """GetClusterProminence(self) -> float"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetClusterProminence(self)

    def GetClusterProminenceOutput(self):
        """GetClusterProminenceOutput(self) -> itkSimpleDataObjectDecoratorF"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetClusterProminenceOutput(self)

    def GetHaralickCorrelation(self):
        """GetHaralickCorrelation(self) -> float"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetHaralickCorrelation(self)

    def GetHaralickCorrelationOutput(self):
        """GetHaralickCorrelationOutput(self) -> itkSimpleDataObjectDecoratorF"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetHaralickCorrelationOutput(self)

    def GetFeature(self, *args):
        """GetFeature(self, TextureFeatureName name) -> float"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetFeature(self, *args)

    __swig_destroy__ = _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.delete_itkHistogramToTextureFeaturesFilterHF
    def cast(*args):
        """cast(itkLightObject obj) -> itkHistogramToTextureFeaturesFilterHF"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkHistogramToTextureFeaturesFilterHF"""
        return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkHistogramToTextureFeaturesFilterHF
        
        Create a new object of the class itkHistogramToTextureFeaturesFilterHF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkHistogramToTextureFeaturesFilterHF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkHistogramToTextureFeaturesFilterHF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHistogramToTextureFeaturesFilterHF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHistogramToTextureFeaturesFilterHF.SetInput = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_SetInput,None,itkHistogramToTextureFeaturesFilterHF)
itkHistogramToTextureFeaturesFilterHF.GetInput = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetInput,None,itkHistogramToTextureFeaturesFilterHF)
itkHistogramToTextureFeaturesFilterHF.GetEnergy = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetEnergy,None,itkHistogramToTextureFeaturesFilterHF)
itkHistogramToTextureFeaturesFilterHF.GetEnergyOutput = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetEnergyOutput,None,itkHistogramToTextureFeaturesFilterHF)
itkHistogramToTextureFeaturesFilterHF.GetEntropy = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetEntropy,None,itkHistogramToTextureFeaturesFilterHF)
itkHistogramToTextureFeaturesFilterHF.GetEntropyOutput = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetEntropyOutput,None,itkHistogramToTextureFeaturesFilterHF)
itkHistogramToTextureFeaturesFilterHF.GetCorrelation = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetCorrelation,None,itkHistogramToTextureFeaturesFilterHF)
itkHistogramToTextureFeaturesFilterHF.GetCorrelationOutput = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetCorrelationOutput,None,itkHistogramToTextureFeaturesFilterHF)
itkHistogramToTextureFeaturesFilterHF.GetInverseDifferenceMoment = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetInverseDifferenceMoment,None,itkHistogramToTextureFeaturesFilterHF)
itkHistogramToTextureFeaturesFilterHF.GetInverseDifferenceMomentOutput = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetInverseDifferenceMomentOutput,None,itkHistogramToTextureFeaturesFilterHF)
itkHistogramToTextureFeaturesFilterHF.GetInertia = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetInertia,None,itkHistogramToTextureFeaturesFilterHF)
itkHistogramToTextureFeaturesFilterHF.GetInertiaOutput = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetInertiaOutput,None,itkHistogramToTextureFeaturesFilterHF)
itkHistogramToTextureFeaturesFilterHF.GetClusterShade = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetClusterShade,None,itkHistogramToTextureFeaturesFilterHF)
itkHistogramToTextureFeaturesFilterHF.GetClusterShadeOutput = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetClusterShadeOutput,None,itkHistogramToTextureFeaturesFilterHF)
itkHistogramToTextureFeaturesFilterHF.GetClusterProminence = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetClusterProminence,None,itkHistogramToTextureFeaturesFilterHF)
itkHistogramToTextureFeaturesFilterHF.GetClusterProminenceOutput = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetClusterProminenceOutput,None,itkHistogramToTextureFeaturesFilterHF)
itkHistogramToTextureFeaturesFilterHF.GetHaralickCorrelation = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetHaralickCorrelation,None,itkHistogramToTextureFeaturesFilterHF)
itkHistogramToTextureFeaturesFilterHF.GetHaralickCorrelationOutput = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetHaralickCorrelationOutput,None,itkHistogramToTextureFeaturesFilterHF)
itkHistogramToTextureFeaturesFilterHF.GetFeature = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetFeature,None,itkHistogramToTextureFeaturesFilterHF)
itkHistogramToTextureFeaturesFilterHF.GetPointer = new_instancemethod(_itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_GetPointer,None,itkHistogramToTextureFeaturesFilterHF)
itkHistogramToTextureFeaturesFilterHF_swigregister = _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_swigregister
itkHistogramToTextureFeaturesFilterHF_swigregister(itkHistogramToTextureFeaturesFilterHF)

def itkHistogramToTextureFeaturesFilterHF___New_orig__():
  """itkHistogramToTextureFeaturesFilterHF___New_orig__()"""
  return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF___New_orig__()

def itkHistogramToTextureFeaturesFilterHF_cast(*args):
  """itkHistogramToTextureFeaturesFilterHF_cast(itkLightObject obj) -> itkHistogramToTextureFeaturesFilterHF"""
  return _itkGreyLevelCooccurrenceMatrixTextureCoefficientsCalculatorPython.itkHistogramToTextureFeaturesFilterHF_cast(*args)



