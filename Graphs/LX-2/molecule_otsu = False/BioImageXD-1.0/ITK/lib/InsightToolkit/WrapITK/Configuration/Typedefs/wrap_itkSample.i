// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkSampleChicken
#endif
#ifdef SWIGCSHARP
%module itkSampleCsharp
#endif
#ifdef SWIGGUILE
%module itkSampleGuile
#endif
#ifdef SWIGJAVA
%module itkSampleJava
#endif
#ifdef SWIGLUA
%module itkSampleLua
#endif
#ifdef SWIGMODULA3
%module itkSampleModula3
#endif
#ifdef SWIGMZSCHEME
%module itkSampleMzscheme
#endif
#ifdef SWIGOCAML
%module itkSampleOcaml
#endif
#ifdef SWIGPERL
%module itkSamplePerl
#endif
#ifdef SWIGPERL5
%module itkSamplePerl5
#endif
#ifdef SWIGPHP
%module itkSamplePhp
#endif
#ifdef SWIGPHP4
%module itkSamplePhp4
#endif
#ifdef SWIGPHP5
%module itkSamplePhp5
#endif
#ifdef SWIGPIKE
%module itkSamplePike
#endif
#ifdef SWIGPYTHON
%module itkSamplePython
#endif
#ifdef SWIGR
%module itkSampleR
#endif
#ifdef SWIGRUBY
%module itkSampleRuby
#endif
#ifdef SWIGSEXP
%module itkSampleSexp
#endif
#ifdef SWIGTCL
%module itkSampleTcl
#endif
#ifdef SWIGXML
%module itkSampleXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Numerics.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkFixedArray.i
%import wrap_itkVector.i
%import wrap_itkArray.i


%include itk.i
%include wrap_itkSample_ext.i


 class itkSampleAD : public itkDataObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual size_t Size() const = 0;
     virtual itkArrayD const & GetMeasurementVector(size_t id) const = 0;
     virtual size_t GetFrequency(size_t id) const = 0;
     virtual unsigned long GetTotalFrequency() const = 0;
     virtual void SetMeasurementVectorSize(unsigned int s);
     virtual unsigned int GetMeasurementVectorSize() const;
     virtual void Graft(itkDataObject const * thatObject);
   private:
     itkSampleAD(itkSampleAD const & arg0);
     void operator=(itkSampleAD const & arg0);
   protected:
     itkSampleAD();
     ~itkSampleAD();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSampleAD_Pointer {
   public:
     itkSampleAD_Pointer();
     itkSampleAD_Pointer(itkSampleAD_Pointer const & p);
     itkSampleAD_Pointer(itkSampleAD * p);
     ~itkSampleAD_Pointer();
     itkSampleAD * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSampleAD * GetPointer() const;
     bool operator<(itkSampleAD_Pointer const & r) const;
     bool operator>(itkSampleAD_Pointer const & r) const;
     bool operator<=(itkSampleAD_Pointer const & r) const;
     bool operator>=(itkSampleAD_Pointer const & r) const;
     itkSampleAD_Pointer & operator=(itkSampleAD_Pointer const & r);
     itkSampleAD_Pointer & operator=(itkSampleAD * r);
     itkSampleAD * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSampleAF : public itkDataObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual size_t Size() const = 0;
     virtual itkArrayF const & GetMeasurementVector(size_t id) const = 0;
     virtual size_t GetFrequency(size_t id) const = 0;
     virtual unsigned long GetTotalFrequency() const = 0;
     virtual void SetMeasurementVectorSize(unsigned int s);
     virtual unsigned int GetMeasurementVectorSize() const;
     virtual void Graft(itkDataObject const * thatObject);
   private:
     itkSampleAF(itkSampleAF const & arg0);
     void operator=(itkSampleAF const & arg0);
   protected:
     itkSampleAF();
     ~itkSampleAF();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSampleAF_Pointer {
   public:
     itkSampleAF_Pointer();
     itkSampleAF_Pointer(itkSampleAF_Pointer const & p);
     itkSampleAF_Pointer(itkSampleAF * p);
     ~itkSampleAF_Pointer();
     itkSampleAF * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSampleAF * GetPointer() const;
     bool operator<(itkSampleAF_Pointer const & r) const;
     bool operator>(itkSampleAF_Pointer const & r) const;
     bool operator<=(itkSampleAF_Pointer const & r) const;
     bool operator>=(itkSampleAF_Pointer const & r) const;
     itkSampleAF_Pointer & operator=(itkSampleAF_Pointer const & r);
     itkSampleAF_Pointer & operator=(itkSampleAF * r);
     itkSampleAF * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSampleFAD1 : public itkDataObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual size_t Size() const = 0;
     virtual itkFixedArrayD1 const & GetMeasurementVector(size_t id) const = 0;
     virtual size_t GetFrequency(size_t id) const = 0;
     virtual unsigned long GetTotalFrequency() const = 0;
     virtual void SetMeasurementVectorSize(unsigned int s);
     virtual unsigned int GetMeasurementVectorSize() const;
     virtual void Graft(itkDataObject const * thatObject);
   private:
     itkSampleFAD1(itkSampleFAD1 const & arg0);
     void operator=(itkSampleFAD1 const & arg0);
   protected:
     itkSampleFAD1();
     ~itkSampleFAD1();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSampleFAD1_Pointer {
   public:
     itkSampleFAD1_Pointer();
     itkSampleFAD1_Pointer(itkSampleFAD1_Pointer const & p);
     itkSampleFAD1_Pointer(itkSampleFAD1 * p);
     ~itkSampleFAD1_Pointer();
     itkSampleFAD1 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSampleFAD1 * GetPointer() const;
     bool operator<(itkSampleFAD1_Pointer const & r) const;
     bool operator>(itkSampleFAD1_Pointer const & r) const;
     bool operator<=(itkSampleFAD1_Pointer const & r) const;
     bool operator>=(itkSampleFAD1_Pointer const & r) const;
     itkSampleFAD1_Pointer & operator=(itkSampleFAD1_Pointer const & r);
     itkSampleFAD1_Pointer & operator=(itkSampleFAD1 * r);
     itkSampleFAD1 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSampleFAD2 : public itkDataObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual size_t Size() const = 0;
     virtual itkFixedArrayD2 const & GetMeasurementVector(size_t id) const = 0;
     virtual size_t GetFrequency(size_t id) const = 0;
     virtual unsigned long GetTotalFrequency() const = 0;
     virtual void SetMeasurementVectorSize(unsigned int s);
     virtual unsigned int GetMeasurementVectorSize() const;
     virtual void Graft(itkDataObject const * thatObject);
   private:
     itkSampleFAD2(itkSampleFAD2 const & arg0);
     void operator=(itkSampleFAD2 const & arg0);
   protected:
     itkSampleFAD2();
     ~itkSampleFAD2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSampleFAD2_Pointer {
   public:
     itkSampleFAD2_Pointer();
     itkSampleFAD2_Pointer(itkSampleFAD2_Pointer const & p);
     itkSampleFAD2_Pointer(itkSampleFAD2 * p);
     ~itkSampleFAD2_Pointer();
     itkSampleFAD2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSampleFAD2 * GetPointer() const;
     bool operator<(itkSampleFAD2_Pointer const & r) const;
     bool operator>(itkSampleFAD2_Pointer const & r) const;
     bool operator<=(itkSampleFAD2_Pointer const & r) const;
     bool operator>=(itkSampleFAD2_Pointer const & r) const;
     itkSampleFAD2_Pointer & operator=(itkSampleFAD2_Pointer const & r);
     itkSampleFAD2_Pointer & operator=(itkSampleFAD2 * r);
     itkSampleFAD2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSampleFAD3 : public itkDataObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual size_t Size() const = 0;
     virtual itkFixedArrayD3 const & GetMeasurementVector(size_t id) const = 0;
     virtual size_t GetFrequency(size_t id) const = 0;
     virtual unsigned long GetTotalFrequency() const = 0;
     virtual void SetMeasurementVectorSize(unsigned int s);
     virtual unsigned int GetMeasurementVectorSize() const;
     virtual void Graft(itkDataObject const * thatObject);
   private:
     itkSampleFAD3(itkSampleFAD3 const & arg0);
     void operator=(itkSampleFAD3 const & arg0);
   protected:
     itkSampleFAD3();
     ~itkSampleFAD3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSampleFAD3_Pointer {
   public:
     itkSampleFAD3_Pointer();
     itkSampleFAD3_Pointer(itkSampleFAD3_Pointer const & p);
     itkSampleFAD3_Pointer(itkSampleFAD3 * p);
     ~itkSampleFAD3_Pointer();
     itkSampleFAD3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSampleFAD3 * GetPointer() const;
     bool operator<(itkSampleFAD3_Pointer const & r) const;
     bool operator>(itkSampleFAD3_Pointer const & r) const;
     bool operator<=(itkSampleFAD3_Pointer const & r) const;
     bool operator>=(itkSampleFAD3_Pointer const & r) const;
     itkSampleFAD3_Pointer & operator=(itkSampleFAD3_Pointer const & r);
     itkSampleFAD3_Pointer & operator=(itkSampleFAD3 * r);
     itkSampleFAD3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSampleFAF1 : public itkDataObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual size_t Size() const = 0;
     virtual itkFixedArrayF1 const & GetMeasurementVector(size_t id) const = 0;
     virtual size_t GetFrequency(size_t id) const = 0;
     virtual unsigned long GetTotalFrequency() const = 0;
     virtual void SetMeasurementVectorSize(unsigned int s);
     virtual unsigned int GetMeasurementVectorSize() const;
     virtual void Graft(itkDataObject const * thatObject);
   private:
     itkSampleFAF1(itkSampleFAF1 const & arg0);
     void operator=(itkSampleFAF1 const & arg0);
   protected:
     itkSampleFAF1();
     ~itkSampleFAF1();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSampleFAF1_Pointer {
   public:
     itkSampleFAF1_Pointer();
     itkSampleFAF1_Pointer(itkSampleFAF1_Pointer const & p);
     itkSampleFAF1_Pointer(itkSampleFAF1 * p);
     ~itkSampleFAF1_Pointer();
     itkSampleFAF1 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSampleFAF1 * GetPointer() const;
     bool operator<(itkSampleFAF1_Pointer const & r) const;
     bool operator>(itkSampleFAF1_Pointer const & r) const;
     bool operator<=(itkSampleFAF1_Pointer const & r) const;
     bool operator>=(itkSampleFAF1_Pointer const & r) const;
     itkSampleFAF1_Pointer & operator=(itkSampleFAF1_Pointer const & r);
     itkSampleFAF1_Pointer & operator=(itkSampleFAF1 * r);
     itkSampleFAF1 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSampleFAF2 : public itkDataObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual size_t Size() const = 0;
     virtual itkFixedArrayF2 const & GetMeasurementVector(size_t id) const = 0;
     virtual size_t GetFrequency(size_t id) const = 0;
     virtual unsigned long GetTotalFrequency() const = 0;
     virtual void SetMeasurementVectorSize(unsigned int s);
     virtual unsigned int GetMeasurementVectorSize() const;
     virtual void Graft(itkDataObject const * thatObject);
   private:
     itkSampleFAF2(itkSampleFAF2 const & arg0);
     void operator=(itkSampleFAF2 const & arg0);
   protected:
     itkSampleFAF2();
     ~itkSampleFAF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSampleFAF2_Pointer {
   public:
     itkSampleFAF2_Pointer();
     itkSampleFAF2_Pointer(itkSampleFAF2_Pointer const & p);
     itkSampleFAF2_Pointer(itkSampleFAF2 * p);
     ~itkSampleFAF2_Pointer();
     itkSampleFAF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSampleFAF2 * GetPointer() const;
     bool operator<(itkSampleFAF2_Pointer const & r) const;
     bool operator>(itkSampleFAF2_Pointer const & r) const;
     bool operator<=(itkSampleFAF2_Pointer const & r) const;
     bool operator>=(itkSampleFAF2_Pointer const & r) const;
     itkSampleFAF2_Pointer & operator=(itkSampleFAF2_Pointer const & r);
     itkSampleFAF2_Pointer & operator=(itkSampleFAF2 * r);
     itkSampleFAF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSampleFAF3 : public itkDataObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual size_t Size() const = 0;
     virtual itkFixedArrayF3 const & GetMeasurementVector(size_t id) const = 0;
     virtual size_t GetFrequency(size_t id) const = 0;
     virtual unsigned long GetTotalFrequency() const = 0;
     virtual void SetMeasurementVectorSize(unsigned int s);
     virtual unsigned int GetMeasurementVectorSize() const;
     virtual void Graft(itkDataObject const * thatObject);
   private:
     itkSampleFAF3(itkSampleFAF3 const & arg0);
     void operator=(itkSampleFAF3 const & arg0);
   protected:
     itkSampleFAF3();
     ~itkSampleFAF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSampleFAF3_Pointer {
   public:
     itkSampleFAF3_Pointer();
     itkSampleFAF3_Pointer(itkSampleFAF3_Pointer const & p);
     itkSampleFAF3_Pointer(itkSampleFAF3 * p);
     ~itkSampleFAF3_Pointer();
     itkSampleFAF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSampleFAF3 * GetPointer() const;
     bool operator<(itkSampleFAF3_Pointer const & r) const;
     bool operator>(itkSampleFAF3_Pointer const & r) const;
     bool operator<=(itkSampleFAF3_Pointer const & r) const;
     bool operator>=(itkSampleFAF3_Pointer const & r) const;
     itkSampleFAF3_Pointer & operator=(itkSampleFAF3_Pointer const & r);
     itkSampleFAF3_Pointer & operator=(itkSampleFAF3 * r);
     itkSampleFAF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSampleFASC1 : public itkDataObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual size_t Size() const = 0;
     virtual itkFixedArraySC1 const & GetMeasurementVector(size_t id) const = 0;
     virtual size_t GetFrequency(size_t id) const = 0;
     virtual unsigned long GetTotalFrequency() const = 0;
     virtual void SetMeasurementVectorSize(unsigned int s);
     virtual unsigned int GetMeasurementVectorSize() const;
     virtual void Graft(itkDataObject const * thatObject);
   private:
     itkSampleFASC1(itkSampleFASC1 const & arg0);
     void operator=(itkSampleFASC1 const & arg0);
   protected:
     itkSampleFASC1();
     ~itkSampleFASC1();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSampleFASC1_Pointer {
   public:
     itkSampleFASC1_Pointer();
     itkSampleFASC1_Pointer(itkSampleFASC1_Pointer const & p);
     itkSampleFASC1_Pointer(itkSampleFASC1 * p);
     ~itkSampleFASC1_Pointer();
     itkSampleFASC1 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSampleFASC1 * GetPointer() const;
     bool operator<(itkSampleFASC1_Pointer const & r) const;
     bool operator>(itkSampleFASC1_Pointer const & r) const;
     bool operator<=(itkSampleFASC1_Pointer const & r) const;
     bool operator>=(itkSampleFASC1_Pointer const & r) const;
     itkSampleFASC1_Pointer & operator=(itkSampleFASC1_Pointer const & r);
     itkSampleFASC1_Pointer & operator=(itkSampleFASC1 * r);
     itkSampleFASC1 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSampleFASC2 : public itkDataObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual size_t Size() const = 0;
     virtual itkFixedArraySC2 const & GetMeasurementVector(size_t id) const = 0;
     virtual size_t GetFrequency(size_t id) const = 0;
     virtual unsigned long GetTotalFrequency() const = 0;
     virtual void SetMeasurementVectorSize(unsigned int s);
     virtual unsigned int GetMeasurementVectorSize() const;
     virtual void Graft(itkDataObject const * thatObject);
   private:
     itkSampleFASC2(itkSampleFASC2 const & arg0);
     void operator=(itkSampleFASC2 const & arg0);
   protected:
     itkSampleFASC2();
     ~itkSampleFASC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSampleFASC2_Pointer {
   public:
     itkSampleFASC2_Pointer();
     itkSampleFASC2_Pointer(itkSampleFASC2_Pointer const & p);
     itkSampleFASC2_Pointer(itkSampleFASC2 * p);
     ~itkSampleFASC2_Pointer();
     itkSampleFASC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSampleFASC2 * GetPointer() const;
     bool operator<(itkSampleFASC2_Pointer const & r) const;
     bool operator>(itkSampleFASC2_Pointer const & r) const;
     bool operator<=(itkSampleFASC2_Pointer const & r) const;
     bool operator>=(itkSampleFASC2_Pointer const & r) const;
     itkSampleFASC2_Pointer & operator=(itkSampleFASC2_Pointer const & r);
     itkSampleFASC2_Pointer & operator=(itkSampleFASC2 * r);
     itkSampleFASC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSampleFASC3 : public itkDataObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual size_t Size() const = 0;
     virtual itkFixedArraySC3 const & GetMeasurementVector(size_t id) const = 0;
     virtual size_t GetFrequency(size_t id) const = 0;
     virtual unsigned long GetTotalFrequency() const = 0;
     virtual void SetMeasurementVectorSize(unsigned int s);
     virtual unsigned int GetMeasurementVectorSize() const;
     virtual void Graft(itkDataObject const * thatObject);
   private:
     itkSampleFASC3(itkSampleFASC3 const & arg0);
     void operator=(itkSampleFASC3 const & arg0);
   protected:
     itkSampleFASC3();
     ~itkSampleFASC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSampleFASC3_Pointer {
   public:
     itkSampleFASC3_Pointer();
     itkSampleFASC3_Pointer(itkSampleFASC3_Pointer const & p);
     itkSampleFASC3_Pointer(itkSampleFASC3 * p);
     ~itkSampleFASC3_Pointer();
     itkSampleFASC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSampleFASC3 * GetPointer() const;
     bool operator<(itkSampleFASC3_Pointer const & r) const;
     bool operator>(itkSampleFASC3_Pointer const & r) const;
     bool operator<=(itkSampleFASC3_Pointer const & r) const;
     bool operator>=(itkSampleFASC3_Pointer const & r) const;
     itkSampleFASC3_Pointer & operator=(itkSampleFASC3_Pointer const & r);
     itkSampleFASC3_Pointer & operator=(itkSampleFASC3 * r);
     itkSampleFASC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSampleFASL1 : public itkDataObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual size_t Size() const = 0;
     virtual itkFixedArraySL1 const & GetMeasurementVector(size_t id) const = 0;
     virtual size_t GetFrequency(size_t id) const = 0;
     virtual unsigned long GetTotalFrequency() const = 0;
     virtual void SetMeasurementVectorSize(unsigned int s);
     virtual unsigned int GetMeasurementVectorSize() const;
     virtual void Graft(itkDataObject const * thatObject);
   private:
     itkSampleFASL1(itkSampleFASL1 const & arg0);
     void operator=(itkSampleFASL1 const & arg0);
   protected:
     itkSampleFASL1();
     ~itkSampleFASL1();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSampleFASL1_Pointer {
   public:
     itkSampleFASL1_Pointer();
     itkSampleFASL1_Pointer(itkSampleFASL1_Pointer const & p);
     itkSampleFASL1_Pointer(itkSampleFASL1 * p);
     ~itkSampleFASL1_Pointer();
     itkSampleFASL1 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSampleFASL1 * GetPointer() const;
     bool operator<(itkSampleFASL1_Pointer const & r) const;
     bool operator>(itkSampleFASL1_Pointer const & r) const;
     bool operator<=(itkSampleFASL1_Pointer const & r) const;
     bool operator>=(itkSampleFASL1_Pointer const & r) const;
     itkSampleFASL1_Pointer & operator=(itkSampleFASL1_Pointer const & r);
     itkSampleFASL1_Pointer & operator=(itkSampleFASL1 * r);
     itkSampleFASL1 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSampleFASL2 : public itkDataObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual size_t Size() const = 0;
     virtual itkFixedArraySL2 const & GetMeasurementVector(size_t id) const = 0;
     virtual size_t GetFrequency(size_t id) const = 0;
     virtual unsigned long GetTotalFrequency() const = 0;
     virtual void SetMeasurementVectorSize(unsigned int s);
     virtual unsigned int GetMeasurementVectorSize() const;
     virtual void Graft(itkDataObject const * thatObject);
   private:
     itkSampleFASL2(itkSampleFASL2 const & arg0);
     void operator=(itkSampleFASL2 const & arg0);
   protected:
     itkSampleFASL2();
     ~itkSampleFASL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSampleFASL2_Pointer {
   public:
     itkSampleFASL2_Pointer();
     itkSampleFASL2_Pointer(itkSampleFASL2_Pointer const & p);
     itkSampleFASL2_Pointer(itkSampleFASL2 * p);
     ~itkSampleFASL2_Pointer();
     itkSampleFASL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSampleFASL2 * GetPointer() const;
     bool operator<(itkSampleFASL2_Pointer const & r) const;
     bool operator>(itkSampleFASL2_Pointer const & r) const;
     bool operator<=(itkSampleFASL2_Pointer const & r) const;
     bool operator>=(itkSampleFASL2_Pointer const & r) const;
     itkSampleFASL2_Pointer & operator=(itkSampleFASL2_Pointer const & r);
     itkSampleFASL2_Pointer & operator=(itkSampleFASL2 * r);
     itkSampleFASL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSampleFASL3 : public itkDataObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual size_t Size() const = 0;
     virtual itkFixedArraySL3 const & GetMeasurementVector(size_t id) const = 0;
     virtual size_t GetFrequency(size_t id) const = 0;
     virtual unsigned long GetTotalFrequency() const = 0;
     virtual void SetMeasurementVectorSize(unsigned int s);
     virtual unsigned int GetMeasurementVectorSize() const;
     virtual void Graft(itkDataObject const * thatObject);
   private:
     itkSampleFASL3(itkSampleFASL3 const & arg0);
     void operator=(itkSampleFASL3 const & arg0);
   protected:
     itkSampleFASL3();
     ~itkSampleFASL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSampleFASL3_Pointer {
   public:
     itkSampleFASL3_Pointer();
     itkSampleFASL3_Pointer(itkSampleFASL3_Pointer const & p);
     itkSampleFASL3_Pointer(itkSampleFASL3 * p);
     ~itkSampleFASL3_Pointer();
     itkSampleFASL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSampleFASL3 * GetPointer() const;
     bool operator<(itkSampleFASL3_Pointer const & r) const;
     bool operator>(itkSampleFASL3_Pointer const & r) const;
     bool operator<=(itkSampleFASL3_Pointer const & r) const;
     bool operator>=(itkSampleFASL3_Pointer const & r) const;
     itkSampleFASL3_Pointer & operator=(itkSampleFASL3_Pointer const & r);
     itkSampleFASL3_Pointer & operator=(itkSampleFASL3 * r);
     itkSampleFASL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSampleFASS1 : public itkDataObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual size_t Size() const = 0;
     virtual itkFixedArraySS1 const & GetMeasurementVector(size_t id) const = 0;
     virtual size_t GetFrequency(size_t id) const = 0;
     virtual unsigned long GetTotalFrequency() const = 0;
     virtual void SetMeasurementVectorSize(unsigned int s);
     virtual unsigned int GetMeasurementVectorSize() const;
     virtual void Graft(itkDataObject const * thatObject);
   private:
     itkSampleFASS1(itkSampleFASS1 const & arg0);
     void operator=(itkSampleFASS1 const & arg0);
   protected:
     itkSampleFASS1();
     ~itkSampleFASS1();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSampleFASS1_Pointer {
   public:
     itkSampleFASS1_Pointer();
     itkSampleFASS1_Pointer(itkSampleFASS1_Pointer const & p);
     itkSampleFASS1_Pointer(itkSampleFASS1 * p);
     ~itkSampleFASS1_Pointer();
     itkSampleFASS1 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSampleFASS1 * GetPointer() const;
     bool operator<(itkSampleFASS1_Pointer const & r) const;
     bool operator>(itkSampleFASS1_Pointer const & r) const;
     bool operator<=(itkSampleFASS1_Pointer const & r) const;
     bool operator>=(itkSampleFASS1_Pointer const & r) const;
     itkSampleFASS1_Pointer & operator=(itkSampleFASS1_Pointer const & r);
     itkSampleFASS1_Pointer & operator=(itkSampleFASS1 * r);
     itkSampleFASS1 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSampleFASS2 : public itkDataObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual size_t Size() const = 0;
     virtual itkFixedArraySS2 const & GetMeasurementVector(size_t id) const = 0;
     virtual size_t GetFrequency(size_t id) const = 0;
     virtual unsigned long GetTotalFrequency() const = 0;
     virtual void SetMeasurementVectorSize(unsigned int s);
     virtual unsigned int GetMeasurementVectorSize() const;
     virtual void Graft(itkDataObject const * thatObject);
   private:
     itkSampleFASS2(itkSampleFASS2 const & arg0);
     void operator=(itkSampleFASS2 const & arg0);
   protected:
     itkSampleFASS2();
     ~itkSampleFASS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSampleFASS2_Pointer {
   public:
     itkSampleFASS2_Pointer();
     itkSampleFASS2_Pointer(itkSampleFASS2_Pointer const & p);
     itkSampleFASS2_Pointer(itkSampleFASS2 * p);
     ~itkSampleFASS2_Pointer();
     itkSampleFASS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSampleFASS2 * GetPointer() const;
     bool operator<(itkSampleFASS2_Pointer const & r) const;
     bool operator>(itkSampleFASS2_Pointer const & r) const;
     bool operator<=(itkSampleFASS2_Pointer const & r) const;
     bool operator>=(itkSampleFASS2_Pointer const & r) const;
     itkSampleFASS2_Pointer & operator=(itkSampleFASS2_Pointer const & r);
     itkSampleFASS2_Pointer & operator=(itkSampleFASS2 * r);
     itkSampleFASS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSampleFASS3 : public itkDataObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual size_t Size() const = 0;
     virtual itkFixedArraySS3 const & GetMeasurementVector(size_t id) const = 0;
     virtual size_t GetFrequency(size_t id) const = 0;
     virtual unsigned long GetTotalFrequency() const = 0;
     virtual void SetMeasurementVectorSize(unsigned int s);
     virtual unsigned int GetMeasurementVectorSize() const;
     virtual void Graft(itkDataObject const * thatObject);
   private:
     itkSampleFASS3(itkSampleFASS3 const & arg0);
     void operator=(itkSampleFASS3 const & arg0);
   protected:
     itkSampleFASS3();
     ~itkSampleFASS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSampleFASS3_Pointer {
   public:
     itkSampleFASS3_Pointer();
     itkSampleFASS3_Pointer(itkSampleFASS3_Pointer const & p);
     itkSampleFASS3_Pointer(itkSampleFASS3 * p);
     ~itkSampleFASS3_Pointer();
     itkSampleFASS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSampleFASS3 * GetPointer() const;
     bool operator<(itkSampleFASS3_Pointer const & r) const;
     bool operator>(itkSampleFASS3_Pointer const & r) const;
     bool operator<=(itkSampleFASS3_Pointer const & r) const;
     bool operator>=(itkSampleFASS3_Pointer const & r) const;
     itkSampleFASS3_Pointer & operator=(itkSampleFASS3_Pointer const & r);
     itkSampleFASS3_Pointer & operator=(itkSampleFASS3 * r);
     itkSampleFASS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSampleFAUC1 : public itkDataObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual size_t Size() const = 0;
     virtual itkFixedArrayUC1 const & GetMeasurementVector(size_t id) const = 0;
     virtual size_t GetFrequency(size_t id) const = 0;
     virtual unsigned long GetTotalFrequency() const = 0;
     virtual void SetMeasurementVectorSize(unsigned int s);
     virtual unsigned int GetMeasurementVectorSize() const;
     virtual void Graft(itkDataObject const * thatObject);
   private:
     itkSampleFAUC1(itkSampleFAUC1 const & arg0);
     void operator=(itkSampleFAUC1 const & arg0);
   protected:
     itkSampleFAUC1();
     ~itkSampleFAUC1();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSampleFAUC1_Pointer {
   public:
     itkSampleFAUC1_Pointer();
     itkSampleFAUC1_Pointer(itkSampleFAUC1_Pointer const & p);
     itkSampleFAUC1_Pointer(itkSampleFAUC1 * p);
     ~itkSampleFAUC1_Pointer();
     itkSampleFAUC1 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSampleFAUC1 * GetPointer() const;
     bool operator<(itkSampleFAUC1_Pointer const & r) const;
     bool operator>(itkSampleFAUC1_Pointer const & r) const;
     bool operator<=(itkSampleFAUC1_Pointer const & r) const;
     bool operator>=(itkSampleFAUC1_Pointer const & r) const;
     itkSampleFAUC1_Pointer & operator=(itkSampleFAUC1_Pointer const & r);
     itkSampleFAUC1_Pointer & operator=(itkSampleFAUC1 * r);
     itkSampleFAUC1 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSampleFAUC2 : public itkDataObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual size_t Size() const = 0;
     virtual itkFixedArrayUC2 const & GetMeasurementVector(size_t id) const = 0;
     virtual size_t GetFrequency(size_t id) const = 0;
     virtual unsigned long GetTotalFrequency() const = 0;
     virtual void SetMeasurementVectorSize(unsigned int s);
     virtual unsigned int GetMeasurementVectorSize() const;
     virtual void Graft(itkDataObject const * thatObject);
   private:
     itkSampleFAUC2(itkSampleFAUC2 const & arg0);
     void operator=(itkSampleFAUC2 const & arg0);
   protected:
     itkSampleFAUC2();
     ~itkSampleFAUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSampleFAUC2_Pointer {
   public:
     itkSampleFAUC2_Pointer();
     itkSampleFAUC2_Pointer(itkSampleFAUC2_Pointer const & p);
     itkSampleFAUC2_Pointer(itkSampleFAUC2 * p);
     ~itkSampleFAUC2_Pointer();
     itkSampleFAUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSampleFAUC2 * GetPointer() const;
     bool operator<(itkSampleFAUC2_Pointer const & r) const;
     bool operator>(itkSampleFAUC2_Pointer const & r) const;
     bool operator<=(itkSampleFAUC2_Pointer const & r) const;
     bool operator>=(itkSampleFAUC2_Pointer const & r) const;
     itkSampleFAUC2_Pointer & operator=(itkSampleFAUC2_Pointer const & r);
     itkSampleFAUC2_Pointer & operator=(itkSampleFAUC2 * r);
     itkSampleFAUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSampleFAUC3 : public itkDataObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual size_t Size() const = 0;
     virtual itkFixedArrayUC3 const & GetMeasurementVector(size_t id) const = 0;
     virtual size_t GetFrequency(size_t id) const = 0;
     virtual unsigned long GetTotalFrequency() const = 0;
     virtual void SetMeasurementVectorSize(unsigned int s);
     virtual unsigned int GetMeasurementVectorSize() const;
     virtual void Graft(itkDataObject const * thatObject);
   private:
     itkSampleFAUC3(itkSampleFAUC3 const & arg0);
     void operator=(itkSampleFAUC3 const & arg0);
   protected:
     itkSampleFAUC3();
     ~itkSampleFAUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSampleFAUC3_Pointer {
   public:
     itkSampleFAUC3_Pointer();
     itkSampleFAUC3_Pointer(itkSampleFAUC3_Pointer const & p);
     itkSampleFAUC3_Pointer(itkSampleFAUC3 * p);
     ~itkSampleFAUC3_Pointer();
     itkSampleFAUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSampleFAUC3 * GetPointer() const;
     bool operator<(itkSampleFAUC3_Pointer const & r) const;
     bool operator>(itkSampleFAUC3_Pointer const & r) const;
     bool operator<=(itkSampleFAUC3_Pointer const & r) const;
     bool operator>=(itkSampleFAUC3_Pointer const & r) const;
     itkSampleFAUC3_Pointer & operator=(itkSampleFAUC3_Pointer const & r);
     itkSampleFAUC3_Pointer & operator=(itkSampleFAUC3 * r);
     itkSampleFAUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSampleFAUL1 : public itkDataObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual size_t Size() const = 0;
     virtual itkFixedArrayUL1 const & GetMeasurementVector(size_t id) const = 0;
     virtual size_t GetFrequency(size_t id) const = 0;
     virtual unsigned long GetTotalFrequency() const = 0;
     virtual void SetMeasurementVectorSize(unsigned int s);
     virtual unsigned int GetMeasurementVectorSize() const;
     virtual void Graft(itkDataObject const * thatObject);
   private:
     itkSampleFAUL1(itkSampleFAUL1 const & arg0);
     void operator=(itkSampleFAUL1 const & arg0);
   protected:
     itkSampleFAUL1();
     ~itkSampleFAUL1();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSampleFAUL1_Pointer {
   public:
     itkSampleFAUL1_Pointer();
     itkSampleFAUL1_Pointer(itkSampleFAUL1_Pointer const & p);
     itkSampleFAUL1_Pointer(itkSampleFAUL1 * p);
     ~itkSampleFAUL1_Pointer();
     itkSampleFAUL1 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSampleFAUL1 * GetPointer() const;
     bool operator<(itkSampleFAUL1_Pointer const & r) const;
     bool operator>(itkSampleFAUL1_Pointer const & r) const;
     bool operator<=(itkSampleFAUL1_Pointer const & r) const;
     bool operator>=(itkSampleFAUL1_Pointer const & r) const;
     itkSampleFAUL1_Pointer & operator=(itkSampleFAUL1_Pointer const & r);
     itkSampleFAUL1_Pointer & operator=(itkSampleFAUL1 * r);
     itkSampleFAUL1 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSampleFAUL2 : public itkDataObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual size_t Size() const = 0;
     virtual itkFixedArrayUL2 const & GetMeasurementVector(size_t id) const = 0;
     virtual size_t GetFrequency(size_t id) const = 0;
     virtual unsigned long GetTotalFrequency() const = 0;
     virtual void SetMeasurementVectorSize(unsigned int s);
     virtual unsigned int GetMeasurementVectorSize() const;
     virtual void Graft(itkDataObject const * thatObject);
   private:
     itkSampleFAUL2(itkSampleFAUL2 const & arg0);
     void operator=(itkSampleFAUL2 const & arg0);
   protected:
     itkSampleFAUL2();
     ~itkSampleFAUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSampleFAUL2_Pointer {
   public:
     itkSampleFAUL2_Pointer();
     itkSampleFAUL2_Pointer(itkSampleFAUL2_Pointer const & p);
     itkSampleFAUL2_Pointer(itkSampleFAUL2 * p);
     ~itkSampleFAUL2_Pointer();
     itkSampleFAUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSampleFAUL2 * GetPointer() const;
     bool operator<(itkSampleFAUL2_Pointer const & r) const;
     bool operator>(itkSampleFAUL2_Pointer const & r) const;
     bool operator<=(itkSampleFAUL2_Pointer const & r) const;
     bool operator>=(itkSampleFAUL2_Pointer const & r) const;
     itkSampleFAUL2_Pointer & operator=(itkSampleFAUL2_Pointer const & r);
     itkSampleFAUL2_Pointer & operator=(itkSampleFAUL2 * r);
     itkSampleFAUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSampleFAUL3 : public itkDataObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual size_t Size() const = 0;
     virtual itkFixedArrayUL3 const & GetMeasurementVector(size_t id) const = 0;
     virtual size_t GetFrequency(size_t id) const = 0;
     virtual unsigned long GetTotalFrequency() const = 0;
     virtual void SetMeasurementVectorSize(unsigned int s);
     virtual unsigned int GetMeasurementVectorSize() const;
     virtual void Graft(itkDataObject const * thatObject);
   private:
     itkSampleFAUL3(itkSampleFAUL3 const & arg0);
     void operator=(itkSampleFAUL3 const & arg0);
   protected:
     itkSampleFAUL3();
     ~itkSampleFAUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSampleFAUL3_Pointer {
   public:
     itkSampleFAUL3_Pointer();
     itkSampleFAUL3_Pointer(itkSampleFAUL3_Pointer const & p);
     itkSampleFAUL3_Pointer(itkSampleFAUL3 * p);
     ~itkSampleFAUL3_Pointer();
     itkSampleFAUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSampleFAUL3 * GetPointer() const;
     bool operator<(itkSampleFAUL3_Pointer const & r) const;
     bool operator>(itkSampleFAUL3_Pointer const & r) const;
     bool operator<=(itkSampleFAUL3_Pointer const & r) const;
     bool operator>=(itkSampleFAUL3_Pointer const & r) const;
     itkSampleFAUL3_Pointer & operator=(itkSampleFAUL3_Pointer const & r);
     itkSampleFAUL3_Pointer & operator=(itkSampleFAUL3 * r);
     itkSampleFAUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSampleFAUS1 : public itkDataObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual size_t Size() const = 0;
     virtual itkFixedArrayUS1 const & GetMeasurementVector(size_t id) const = 0;
     virtual size_t GetFrequency(size_t id) const = 0;
     virtual unsigned long GetTotalFrequency() const = 0;
     virtual void SetMeasurementVectorSize(unsigned int s);
     virtual unsigned int GetMeasurementVectorSize() const;
     virtual void Graft(itkDataObject const * thatObject);
   private:
     itkSampleFAUS1(itkSampleFAUS1 const & arg0);
     void operator=(itkSampleFAUS1 const & arg0);
   protected:
     itkSampleFAUS1();
     ~itkSampleFAUS1();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSampleFAUS1_Pointer {
   public:
     itkSampleFAUS1_Pointer();
     itkSampleFAUS1_Pointer(itkSampleFAUS1_Pointer const & p);
     itkSampleFAUS1_Pointer(itkSampleFAUS1 * p);
     ~itkSampleFAUS1_Pointer();
     itkSampleFAUS1 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSampleFAUS1 * GetPointer() const;
     bool operator<(itkSampleFAUS1_Pointer const & r) const;
     bool operator>(itkSampleFAUS1_Pointer const & r) const;
     bool operator<=(itkSampleFAUS1_Pointer const & r) const;
     bool operator>=(itkSampleFAUS1_Pointer const & r) const;
     itkSampleFAUS1_Pointer & operator=(itkSampleFAUS1_Pointer const & r);
     itkSampleFAUS1_Pointer & operator=(itkSampleFAUS1 * r);
     itkSampleFAUS1 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSampleFAUS2 : public itkDataObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual size_t Size() const = 0;
     virtual itkFixedArrayUS2 const & GetMeasurementVector(size_t id) const = 0;
     virtual size_t GetFrequency(size_t id) const = 0;
     virtual unsigned long GetTotalFrequency() const = 0;
     virtual void SetMeasurementVectorSize(unsigned int s);
     virtual unsigned int GetMeasurementVectorSize() const;
     virtual void Graft(itkDataObject const * thatObject);
   private:
     itkSampleFAUS2(itkSampleFAUS2 const & arg0);
     void operator=(itkSampleFAUS2 const & arg0);
   protected:
     itkSampleFAUS2();
     ~itkSampleFAUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSampleFAUS2_Pointer {
   public:
     itkSampleFAUS2_Pointer();
     itkSampleFAUS2_Pointer(itkSampleFAUS2_Pointer const & p);
     itkSampleFAUS2_Pointer(itkSampleFAUS2 * p);
     ~itkSampleFAUS2_Pointer();
     itkSampleFAUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSampleFAUS2 * GetPointer() const;
     bool operator<(itkSampleFAUS2_Pointer const & r) const;
     bool operator>(itkSampleFAUS2_Pointer const & r) const;
     bool operator<=(itkSampleFAUS2_Pointer const & r) const;
     bool operator>=(itkSampleFAUS2_Pointer const & r) const;
     itkSampleFAUS2_Pointer & operator=(itkSampleFAUS2_Pointer const & r);
     itkSampleFAUS2_Pointer & operator=(itkSampleFAUS2 * r);
     itkSampleFAUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSampleFAUS3 : public itkDataObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual size_t Size() const = 0;
     virtual itkFixedArrayUS3 const & GetMeasurementVector(size_t id) const = 0;
     virtual size_t GetFrequency(size_t id) const = 0;
     virtual unsigned long GetTotalFrequency() const = 0;
     virtual void SetMeasurementVectorSize(unsigned int s);
     virtual unsigned int GetMeasurementVectorSize() const;
     virtual void Graft(itkDataObject const * thatObject);
   private:
     itkSampleFAUS3(itkSampleFAUS3 const & arg0);
     void operator=(itkSampleFAUS3 const & arg0);
   protected:
     itkSampleFAUS3();
     ~itkSampleFAUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSampleFAUS3_Pointer {
   public:
     itkSampleFAUS3_Pointer();
     itkSampleFAUS3_Pointer(itkSampleFAUS3_Pointer const & p);
     itkSampleFAUS3_Pointer(itkSampleFAUS3 * p);
     ~itkSampleFAUS3_Pointer();
     itkSampleFAUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSampleFAUS3 * GetPointer() const;
     bool operator<(itkSampleFAUS3_Pointer const & r) const;
     bool operator>(itkSampleFAUS3_Pointer const & r) const;
     bool operator<=(itkSampleFAUS3_Pointer const & r) const;
     bool operator>=(itkSampleFAUS3_Pointer const & r) const;
     itkSampleFAUS3_Pointer & operator=(itkSampleFAUS3_Pointer const & r);
     itkSampleFAUS3_Pointer & operator=(itkSampleFAUS3 * r);
     itkSampleFAUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSampleVF2 : public itkDataObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual size_t Size() const = 0;
     virtual itkVectorF2 const & GetMeasurementVector(size_t id) const = 0;
     virtual size_t GetFrequency(size_t id) const = 0;
     virtual unsigned long GetTotalFrequency() const = 0;
     virtual void SetMeasurementVectorSize(unsigned int s);
     virtual unsigned int GetMeasurementVectorSize() const;
     virtual void Graft(itkDataObject const * thatObject);
   private:
     itkSampleVF2(itkSampleVF2 const & arg0);
     void operator=(itkSampleVF2 const & arg0);
   protected:
     itkSampleVF2();
     ~itkSampleVF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSampleVF2_Pointer {
   public:
     itkSampleVF2_Pointer();
     itkSampleVF2_Pointer(itkSampleVF2_Pointer const & p);
     itkSampleVF2_Pointer(itkSampleVF2 * p);
     ~itkSampleVF2_Pointer();
     itkSampleVF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSampleVF2 * GetPointer() const;
     bool operator<(itkSampleVF2_Pointer const & r) const;
     bool operator>(itkSampleVF2_Pointer const & r) const;
     bool operator<=(itkSampleVF2_Pointer const & r) const;
     bool operator>=(itkSampleVF2_Pointer const & r) const;
     itkSampleVF2_Pointer & operator=(itkSampleVF2_Pointer const & r);
     itkSampleVF2_Pointer & operator=(itkSampleVF2 * r);
     itkSampleVF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSampleVF3 : public itkDataObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual size_t Size() const = 0;
     virtual itkVectorF3 const & GetMeasurementVector(size_t id) const = 0;
     virtual size_t GetFrequency(size_t id) const = 0;
     virtual unsigned long GetTotalFrequency() const = 0;
     virtual void SetMeasurementVectorSize(unsigned int s);
     virtual unsigned int GetMeasurementVectorSize() const;
     virtual void Graft(itkDataObject const * thatObject);
   private:
     itkSampleVF3(itkSampleVF3 const & arg0);
     void operator=(itkSampleVF3 const & arg0);
   protected:
     itkSampleVF3();
     ~itkSampleVF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSampleVF3_Pointer {
   public:
     itkSampleVF3_Pointer();
     itkSampleVF3_Pointer(itkSampleVF3_Pointer const & p);
     itkSampleVF3_Pointer(itkSampleVF3 * p);
     ~itkSampleVF3_Pointer();
     itkSampleVF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSampleVF3 * GetPointer() const;
     bool operator<(itkSampleVF3_Pointer const & r) const;
     bool operator>(itkSampleVF3_Pointer const & r) const;
     bool operator<=(itkSampleVF3_Pointer const & r) const;
     bool operator>=(itkSampleVF3_Pointer const & r) const;
     itkSampleVF3_Pointer & operator=(itkSampleVF3_Pointer const & r);
     itkSampleVF3_Pointer & operator=(itkSampleVF3 * r);
     itkSampleVF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


