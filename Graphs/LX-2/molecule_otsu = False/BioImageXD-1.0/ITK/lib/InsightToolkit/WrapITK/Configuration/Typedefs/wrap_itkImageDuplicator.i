// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkImageDuplicatorChicken
#endif
#ifdef SWIGCSHARP
%module itkImageDuplicatorCsharp
#endif
#ifdef SWIGGUILE
%module itkImageDuplicatorGuile
#endif
#ifdef SWIGJAVA
%module itkImageDuplicatorJava
#endif
#ifdef SWIGLUA
%module itkImageDuplicatorLua
#endif
#ifdef SWIGMODULA3
%module itkImageDuplicatorModula3
#endif
#ifdef SWIGMZSCHEME
%module itkImageDuplicatorMzscheme
#endif
#ifdef SWIGOCAML
%module itkImageDuplicatorOcaml
#endif
#ifdef SWIGPERL
%module itkImageDuplicatorPerl
#endif
#ifdef SWIGPERL5
%module itkImageDuplicatorPerl5
#endif
#ifdef SWIGPHP
%module itkImageDuplicatorPhp
#endif
#ifdef SWIGPHP4
%module itkImageDuplicatorPhp4
#endif
#ifdef SWIGPHP5
%module itkImageDuplicatorPhp5
#endif
#ifdef SWIGPIKE
%module itkImageDuplicatorPike
#endif
#ifdef SWIGPYTHON
%module itkImageDuplicatorPython
#endif
#ifdef SWIGR
%module itkImageDuplicatorR
#endif
#ifdef SWIGRUBY
%module itkImageDuplicatorRuby
#endif
#ifdef SWIGSEXP
%module itkImageDuplicatorSexp
#endif
#ifdef SWIGTCL
%module itkImageDuplicatorTcl
#endif
#ifdef SWIGXML
%module itkImageDuplicatorXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "SimpleFilters.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImage.i


%include itk.i
%include wrap_itkImageDuplicator_ext.i


 class itkImageDuplicatorICF2 : public itkObject {
   public:
     enum  {  ImageDimension = 2 };
     static itkImageDuplicatorICF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageCF2 const * _arg);
     virtual itkImageCF2 * GetOutput();
     void Update();
   private:
     itkImageDuplicatorICF2(itkImageDuplicatorICF2 const & arg0);
     void operator=(itkImageDuplicatorICF2 const & arg0);
   protected:
     itkImageDuplicatorICF2();
     ~itkImageDuplicatorICF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageDuplicatorICF2_Pointer {
   public:
     itkImageDuplicatorICF2_Pointer();
     itkImageDuplicatorICF2_Pointer(itkImageDuplicatorICF2_Pointer const & p);
     itkImageDuplicatorICF2_Pointer(itkImageDuplicatorICF2 * p);
     ~itkImageDuplicatorICF2_Pointer();
     itkImageDuplicatorICF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageDuplicatorICF2 * GetPointer() const;
     bool operator<(itkImageDuplicatorICF2_Pointer const & r) const;
     bool operator>(itkImageDuplicatorICF2_Pointer const & r) const;
     bool operator<=(itkImageDuplicatorICF2_Pointer const & r) const;
     bool operator>=(itkImageDuplicatorICF2_Pointer const & r) const;
     itkImageDuplicatorICF2_Pointer & operator=(itkImageDuplicatorICF2_Pointer const & r);
     itkImageDuplicatorICF2_Pointer & operator=(itkImageDuplicatorICF2 * r);
     itkImageDuplicatorICF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageDuplicatorICF3 : public itkObject {
   public:
     enum  {  ImageDimension = 3 };
     static itkImageDuplicatorICF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageCF3 const * _arg);
     virtual itkImageCF3 * GetOutput();
     void Update();
   private:
     itkImageDuplicatorICF3(itkImageDuplicatorICF3 const & arg0);
     void operator=(itkImageDuplicatorICF3 const & arg0);
   protected:
     itkImageDuplicatorICF3();
     ~itkImageDuplicatorICF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageDuplicatorICF3_Pointer {
   public:
     itkImageDuplicatorICF3_Pointer();
     itkImageDuplicatorICF3_Pointer(itkImageDuplicatorICF3_Pointer const & p);
     itkImageDuplicatorICF3_Pointer(itkImageDuplicatorICF3 * p);
     ~itkImageDuplicatorICF3_Pointer();
     itkImageDuplicatorICF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageDuplicatorICF3 * GetPointer() const;
     bool operator<(itkImageDuplicatorICF3_Pointer const & r) const;
     bool operator>(itkImageDuplicatorICF3_Pointer const & r) const;
     bool operator<=(itkImageDuplicatorICF3_Pointer const & r) const;
     bool operator>=(itkImageDuplicatorICF3_Pointer const & r) const;
     itkImageDuplicatorICF3_Pointer & operator=(itkImageDuplicatorICF3_Pointer const & r);
     itkImageDuplicatorICF3_Pointer & operator=(itkImageDuplicatorICF3 * r);
     itkImageDuplicatorICF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageDuplicatorICVF22 : public itkObject {
   public:
     enum  {  ImageDimension = 2 };
     static itkImageDuplicatorICVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageCVF22 const * _arg);
     virtual itkImageCVF22 * GetOutput();
     void Update();
   private:
     itkImageDuplicatorICVF22(itkImageDuplicatorICVF22 const & arg0);
     void operator=(itkImageDuplicatorICVF22 const & arg0);
   protected:
     itkImageDuplicatorICVF22();
     ~itkImageDuplicatorICVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageDuplicatorICVF22_Pointer {
   public:
     itkImageDuplicatorICVF22_Pointer();
     itkImageDuplicatorICVF22_Pointer(itkImageDuplicatorICVF22_Pointer const & p);
     itkImageDuplicatorICVF22_Pointer(itkImageDuplicatorICVF22 * p);
     ~itkImageDuplicatorICVF22_Pointer();
     itkImageDuplicatorICVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageDuplicatorICVF22 * GetPointer() const;
     bool operator<(itkImageDuplicatorICVF22_Pointer const & r) const;
     bool operator>(itkImageDuplicatorICVF22_Pointer const & r) const;
     bool operator<=(itkImageDuplicatorICVF22_Pointer const & r) const;
     bool operator>=(itkImageDuplicatorICVF22_Pointer const & r) const;
     itkImageDuplicatorICVF22_Pointer & operator=(itkImageDuplicatorICVF22_Pointer const & r);
     itkImageDuplicatorICVF22_Pointer & operator=(itkImageDuplicatorICVF22 * r);
     itkImageDuplicatorICVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageDuplicatorICVF33 : public itkObject {
   public:
     enum  {  ImageDimension = 3 };
     static itkImageDuplicatorICVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageCVF33 const * _arg);
     virtual itkImageCVF33 * GetOutput();
     void Update();
   private:
     itkImageDuplicatorICVF33(itkImageDuplicatorICVF33 const & arg0);
     void operator=(itkImageDuplicatorICVF33 const & arg0);
   protected:
     itkImageDuplicatorICVF33();
     ~itkImageDuplicatorICVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageDuplicatorICVF33_Pointer {
   public:
     itkImageDuplicatorICVF33_Pointer();
     itkImageDuplicatorICVF33_Pointer(itkImageDuplicatorICVF33_Pointer const & p);
     itkImageDuplicatorICVF33_Pointer(itkImageDuplicatorICVF33 * p);
     ~itkImageDuplicatorICVF33_Pointer();
     itkImageDuplicatorICVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageDuplicatorICVF33 * GetPointer() const;
     bool operator<(itkImageDuplicatorICVF33_Pointer const & r) const;
     bool operator>(itkImageDuplicatorICVF33_Pointer const & r) const;
     bool operator<=(itkImageDuplicatorICVF33_Pointer const & r) const;
     bool operator>=(itkImageDuplicatorICVF33_Pointer const & r) const;
     itkImageDuplicatorICVF33_Pointer & operator=(itkImageDuplicatorICVF33_Pointer const & r);
     itkImageDuplicatorICVF33_Pointer & operator=(itkImageDuplicatorICVF33 * r);
     itkImageDuplicatorICVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageDuplicatorID2 : public itkObject {
   public:
     enum  {  ImageDimension = 2 };
     static itkImageDuplicatorID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageD2 const * _arg);
     virtual itkImageD2 * GetOutput();
     void Update();
   private:
     itkImageDuplicatorID2(itkImageDuplicatorID2 const & arg0);
     void operator=(itkImageDuplicatorID2 const & arg0);
   protected:
     itkImageDuplicatorID2();
     ~itkImageDuplicatorID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageDuplicatorID2_Pointer {
   public:
     itkImageDuplicatorID2_Pointer();
     itkImageDuplicatorID2_Pointer(itkImageDuplicatorID2_Pointer const & p);
     itkImageDuplicatorID2_Pointer(itkImageDuplicatorID2 * p);
     ~itkImageDuplicatorID2_Pointer();
     itkImageDuplicatorID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageDuplicatorID2 * GetPointer() const;
     bool operator<(itkImageDuplicatorID2_Pointer const & r) const;
     bool operator>(itkImageDuplicatorID2_Pointer const & r) const;
     bool operator<=(itkImageDuplicatorID2_Pointer const & r) const;
     bool operator>=(itkImageDuplicatorID2_Pointer const & r) const;
     itkImageDuplicatorID2_Pointer & operator=(itkImageDuplicatorID2_Pointer const & r);
     itkImageDuplicatorID2_Pointer & operator=(itkImageDuplicatorID2 * r);
     itkImageDuplicatorID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageDuplicatorID3 : public itkObject {
   public:
     enum  {  ImageDimension = 3 };
     static itkImageDuplicatorID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageD3 const * _arg);
     virtual itkImageD3 * GetOutput();
     void Update();
   private:
     itkImageDuplicatorID3(itkImageDuplicatorID3 const & arg0);
     void operator=(itkImageDuplicatorID3 const & arg0);
   protected:
     itkImageDuplicatorID3();
     ~itkImageDuplicatorID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageDuplicatorID3_Pointer {
   public:
     itkImageDuplicatorID3_Pointer();
     itkImageDuplicatorID3_Pointer(itkImageDuplicatorID3_Pointer const & p);
     itkImageDuplicatorID3_Pointer(itkImageDuplicatorID3 * p);
     ~itkImageDuplicatorID3_Pointer();
     itkImageDuplicatorID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageDuplicatorID3 * GetPointer() const;
     bool operator<(itkImageDuplicatorID3_Pointer const & r) const;
     bool operator>(itkImageDuplicatorID3_Pointer const & r) const;
     bool operator<=(itkImageDuplicatorID3_Pointer const & r) const;
     bool operator>=(itkImageDuplicatorID3_Pointer const & r) const;
     itkImageDuplicatorID3_Pointer & operator=(itkImageDuplicatorID3_Pointer const & r);
     itkImageDuplicatorID3_Pointer & operator=(itkImageDuplicatorID3 * r);
     itkImageDuplicatorID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageDuplicatorIF2 : public itkObject {
   public:
     enum  {  ImageDimension = 2 };
     static itkImageDuplicatorIF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageF2 const * _arg);
     virtual itkImageF2 * GetOutput();
     void Update();
   private:
     itkImageDuplicatorIF2(itkImageDuplicatorIF2 const & arg0);
     void operator=(itkImageDuplicatorIF2 const & arg0);
   protected:
     itkImageDuplicatorIF2();
     ~itkImageDuplicatorIF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageDuplicatorIF2_Pointer {
   public:
     itkImageDuplicatorIF2_Pointer();
     itkImageDuplicatorIF2_Pointer(itkImageDuplicatorIF2_Pointer const & p);
     itkImageDuplicatorIF2_Pointer(itkImageDuplicatorIF2 * p);
     ~itkImageDuplicatorIF2_Pointer();
     itkImageDuplicatorIF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageDuplicatorIF2 * GetPointer() const;
     bool operator<(itkImageDuplicatorIF2_Pointer const & r) const;
     bool operator>(itkImageDuplicatorIF2_Pointer const & r) const;
     bool operator<=(itkImageDuplicatorIF2_Pointer const & r) const;
     bool operator>=(itkImageDuplicatorIF2_Pointer const & r) const;
     itkImageDuplicatorIF2_Pointer & operator=(itkImageDuplicatorIF2_Pointer const & r);
     itkImageDuplicatorIF2_Pointer & operator=(itkImageDuplicatorIF2 * r);
     itkImageDuplicatorIF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageDuplicatorIF3 : public itkObject {
   public:
     enum  {  ImageDimension = 3 };
     static itkImageDuplicatorIF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageF3 const * _arg);
     virtual itkImageF3 * GetOutput();
     void Update();
   private:
     itkImageDuplicatorIF3(itkImageDuplicatorIF3 const & arg0);
     void operator=(itkImageDuplicatorIF3 const & arg0);
   protected:
     itkImageDuplicatorIF3();
     ~itkImageDuplicatorIF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageDuplicatorIF3_Pointer {
   public:
     itkImageDuplicatorIF3_Pointer();
     itkImageDuplicatorIF3_Pointer(itkImageDuplicatorIF3_Pointer const & p);
     itkImageDuplicatorIF3_Pointer(itkImageDuplicatorIF3 * p);
     ~itkImageDuplicatorIF3_Pointer();
     itkImageDuplicatorIF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageDuplicatorIF3 * GetPointer() const;
     bool operator<(itkImageDuplicatorIF3_Pointer const & r) const;
     bool operator>(itkImageDuplicatorIF3_Pointer const & r) const;
     bool operator<=(itkImageDuplicatorIF3_Pointer const & r) const;
     bool operator>=(itkImageDuplicatorIF3_Pointer const & r) const;
     itkImageDuplicatorIF3_Pointer & operator=(itkImageDuplicatorIF3_Pointer const & r);
     itkImageDuplicatorIF3_Pointer & operator=(itkImageDuplicatorIF3 * r);
     itkImageDuplicatorIF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageDuplicatorIRGBAUS2 : public itkObject {
   public:
     enum  {  ImageDimension = 2 };
     static itkImageDuplicatorIRGBAUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageRGBAUS2 const * _arg);
     virtual itkImageRGBAUS2 * GetOutput();
     void Update();
   private:
     itkImageDuplicatorIRGBAUS2(itkImageDuplicatorIRGBAUS2 const & arg0);
     void operator=(itkImageDuplicatorIRGBAUS2 const & arg0);
   protected:
     itkImageDuplicatorIRGBAUS2();
     ~itkImageDuplicatorIRGBAUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageDuplicatorIRGBAUS2_Pointer {
   public:
     itkImageDuplicatorIRGBAUS2_Pointer();
     itkImageDuplicatorIRGBAUS2_Pointer(itkImageDuplicatorIRGBAUS2_Pointer const & p);
     itkImageDuplicatorIRGBAUS2_Pointer(itkImageDuplicatorIRGBAUS2 * p);
     ~itkImageDuplicatorIRGBAUS2_Pointer();
     itkImageDuplicatorIRGBAUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageDuplicatorIRGBAUS2 * GetPointer() const;
     bool operator<(itkImageDuplicatorIRGBAUS2_Pointer const & r) const;
     bool operator>(itkImageDuplicatorIRGBAUS2_Pointer const & r) const;
     bool operator<=(itkImageDuplicatorIRGBAUS2_Pointer const & r) const;
     bool operator>=(itkImageDuplicatorIRGBAUS2_Pointer const & r) const;
     itkImageDuplicatorIRGBAUS2_Pointer & operator=(itkImageDuplicatorIRGBAUS2_Pointer const & r);
     itkImageDuplicatorIRGBAUS2_Pointer & operator=(itkImageDuplicatorIRGBAUS2 * r);
     itkImageDuplicatorIRGBAUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageDuplicatorIRGBAUS3 : public itkObject {
   public:
     enum  {  ImageDimension = 3 };
     static itkImageDuplicatorIRGBAUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageRGBAUS3 const * _arg);
     virtual itkImageRGBAUS3 * GetOutput();
     void Update();
   private:
     itkImageDuplicatorIRGBAUS3(itkImageDuplicatorIRGBAUS3 const & arg0);
     void operator=(itkImageDuplicatorIRGBAUS3 const & arg0);
   protected:
     itkImageDuplicatorIRGBAUS3();
     ~itkImageDuplicatorIRGBAUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageDuplicatorIRGBAUS3_Pointer {
   public:
     itkImageDuplicatorIRGBAUS3_Pointer();
     itkImageDuplicatorIRGBAUS3_Pointer(itkImageDuplicatorIRGBAUS3_Pointer const & p);
     itkImageDuplicatorIRGBAUS3_Pointer(itkImageDuplicatorIRGBAUS3 * p);
     ~itkImageDuplicatorIRGBAUS3_Pointer();
     itkImageDuplicatorIRGBAUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageDuplicatorIRGBAUS3 * GetPointer() const;
     bool operator<(itkImageDuplicatorIRGBAUS3_Pointer const & r) const;
     bool operator>(itkImageDuplicatorIRGBAUS3_Pointer const & r) const;
     bool operator<=(itkImageDuplicatorIRGBAUS3_Pointer const & r) const;
     bool operator>=(itkImageDuplicatorIRGBAUS3_Pointer const & r) const;
     itkImageDuplicatorIRGBAUS3_Pointer & operator=(itkImageDuplicatorIRGBAUS3_Pointer const & r);
     itkImageDuplicatorIRGBAUS3_Pointer & operator=(itkImageDuplicatorIRGBAUS3 * r);
     itkImageDuplicatorIRGBAUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageDuplicatorIRGBUS2 : public itkObject {
   public:
     enum  {  ImageDimension = 2 };
     static itkImageDuplicatorIRGBUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageRGBUS2 const * _arg);
     virtual itkImageRGBUS2 * GetOutput();
     void Update();
   private:
     itkImageDuplicatorIRGBUS2(itkImageDuplicatorIRGBUS2 const & arg0);
     void operator=(itkImageDuplicatorIRGBUS2 const & arg0);
   protected:
     itkImageDuplicatorIRGBUS2();
     ~itkImageDuplicatorIRGBUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageDuplicatorIRGBUS2_Pointer {
   public:
     itkImageDuplicatorIRGBUS2_Pointer();
     itkImageDuplicatorIRGBUS2_Pointer(itkImageDuplicatorIRGBUS2_Pointer const & p);
     itkImageDuplicatorIRGBUS2_Pointer(itkImageDuplicatorIRGBUS2 * p);
     ~itkImageDuplicatorIRGBUS2_Pointer();
     itkImageDuplicatorIRGBUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageDuplicatorIRGBUS2 * GetPointer() const;
     bool operator<(itkImageDuplicatorIRGBUS2_Pointer const & r) const;
     bool operator>(itkImageDuplicatorIRGBUS2_Pointer const & r) const;
     bool operator<=(itkImageDuplicatorIRGBUS2_Pointer const & r) const;
     bool operator>=(itkImageDuplicatorIRGBUS2_Pointer const & r) const;
     itkImageDuplicatorIRGBUS2_Pointer & operator=(itkImageDuplicatorIRGBUS2_Pointer const & r);
     itkImageDuplicatorIRGBUS2_Pointer & operator=(itkImageDuplicatorIRGBUS2 * r);
     itkImageDuplicatorIRGBUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageDuplicatorIRGBUS3 : public itkObject {
   public:
     enum  {  ImageDimension = 3 };
     static itkImageDuplicatorIRGBUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageRGBUS3 const * _arg);
     virtual itkImageRGBUS3 * GetOutput();
     void Update();
   private:
     itkImageDuplicatorIRGBUS3(itkImageDuplicatorIRGBUS3 const & arg0);
     void operator=(itkImageDuplicatorIRGBUS3 const & arg0);
   protected:
     itkImageDuplicatorIRGBUS3();
     ~itkImageDuplicatorIRGBUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageDuplicatorIRGBUS3_Pointer {
   public:
     itkImageDuplicatorIRGBUS3_Pointer();
     itkImageDuplicatorIRGBUS3_Pointer(itkImageDuplicatorIRGBUS3_Pointer const & p);
     itkImageDuplicatorIRGBUS3_Pointer(itkImageDuplicatorIRGBUS3 * p);
     ~itkImageDuplicatorIRGBUS3_Pointer();
     itkImageDuplicatorIRGBUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageDuplicatorIRGBUS3 * GetPointer() const;
     bool operator<(itkImageDuplicatorIRGBUS3_Pointer const & r) const;
     bool operator>(itkImageDuplicatorIRGBUS3_Pointer const & r) const;
     bool operator<=(itkImageDuplicatorIRGBUS3_Pointer const & r) const;
     bool operator>=(itkImageDuplicatorIRGBUS3_Pointer const & r) const;
     itkImageDuplicatorIRGBUS3_Pointer & operator=(itkImageDuplicatorIRGBUS3_Pointer const & r);
     itkImageDuplicatorIRGBUS3_Pointer & operator=(itkImageDuplicatorIRGBUS3 * r);
     itkImageDuplicatorIRGBUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageDuplicatorIUC2 : public itkObject {
   public:
     enum  {  ImageDimension = 2 };
     static itkImageDuplicatorIUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageUC2 const * _arg);
     virtual itkImageUC2 * GetOutput();
     void Update();
   private:
     itkImageDuplicatorIUC2(itkImageDuplicatorIUC2 const & arg0);
     void operator=(itkImageDuplicatorIUC2 const & arg0);
   protected:
     itkImageDuplicatorIUC2();
     ~itkImageDuplicatorIUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageDuplicatorIUC2_Pointer {
   public:
     itkImageDuplicatorIUC2_Pointer();
     itkImageDuplicatorIUC2_Pointer(itkImageDuplicatorIUC2_Pointer const & p);
     itkImageDuplicatorIUC2_Pointer(itkImageDuplicatorIUC2 * p);
     ~itkImageDuplicatorIUC2_Pointer();
     itkImageDuplicatorIUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageDuplicatorIUC2 * GetPointer() const;
     bool operator<(itkImageDuplicatorIUC2_Pointer const & r) const;
     bool operator>(itkImageDuplicatorIUC2_Pointer const & r) const;
     bool operator<=(itkImageDuplicatorIUC2_Pointer const & r) const;
     bool operator>=(itkImageDuplicatorIUC2_Pointer const & r) const;
     itkImageDuplicatorIUC2_Pointer & operator=(itkImageDuplicatorIUC2_Pointer const & r);
     itkImageDuplicatorIUC2_Pointer & operator=(itkImageDuplicatorIUC2 * r);
     itkImageDuplicatorIUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageDuplicatorIUC3 : public itkObject {
   public:
     enum  {  ImageDimension = 3 };
     static itkImageDuplicatorIUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageUC3 const * _arg);
     virtual itkImageUC3 * GetOutput();
     void Update();
   private:
     itkImageDuplicatorIUC3(itkImageDuplicatorIUC3 const & arg0);
     void operator=(itkImageDuplicatorIUC3 const & arg0);
   protected:
     itkImageDuplicatorIUC3();
     ~itkImageDuplicatorIUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageDuplicatorIUC3_Pointer {
   public:
     itkImageDuplicatorIUC3_Pointer();
     itkImageDuplicatorIUC3_Pointer(itkImageDuplicatorIUC3_Pointer const & p);
     itkImageDuplicatorIUC3_Pointer(itkImageDuplicatorIUC3 * p);
     ~itkImageDuplicatorIUC3_Pointer();
     itkImageDuplicatorIUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageDuplicatorIUC3 * GetPointer() const;
     bool operator<(itkImageDuplicatorIUC3_Pointer const & r) const;
     bool operator>(itkImageDuplicatorIUC3_Pointer const & r) const;
     bool operator<=(itkImageDuplicatorIUC3_Pointer const & r) const;
     bool operator>=(itkImageDuplicatorIUC3_Pointer const & r) const;
     itkImageDuplicatorIUC3_Pointer & operator=(itkImageDuplicatorIUC3_Pointer const & r);
     itkImageDuplicatorIUC3_Pointer & operator=(itkImageDuplicatorIUC3 * r);
     itkImageDuplicatorIUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageDuplicatorIUL2 : public itkObject {
   public:
     enum  {  ImageDimension = 2 };
     static itkImageDuplicatorIUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageUL2 const * _arg);
     virtual itkImageUL2 * GetOutput();
     void Update();
   private:
     itkImageDuplicatorIUL2(itkImageDuplicatorIUL2 const & arg0);
     void operator=(itkImageDuplicatorIUL2 const & arg0);
   protected:
     itkImageDuplicatorIUL2();
     ~itkImageDuplicatorIUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageDuplicatorIUL2_Pointer {
   public:
     itkImageDuplicatorIUL2_Pointer();
     itkImageDuplicatorIUL2_Pointer(itkImageDuplicatorIUL2_Pointer const & p);
     itkImageDuplicatorIUL2_Pointer(itkImageDuplicatorIUL2 * p);
     ~itkImageDuplicatorIUL2_Pointer();
     itkImageDuplicatorIUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageDuplicatorIUL2 * GetPointer() const;
     bool operator<(itkImageDuplicatorIUL2_Pointer const & r) const;
     bool operator>(itkImageDuplicatorIUL2_Pointer const & r) const;
     bool operator<=(itkImageDuplicatorIUL2_Pointer const & r) const;
     bool operator>=(itkImageDuplicatorIUL2_Pointer const & r) const;
     itkImageDuplicatorIUL2_Pointer & operator=(itkImageDuplicatorIUL2_Pointer const & r);
     itkImageDuplicatorIUL2_Pointer & operator=(itkImageDuplicatorIUL2 * r);
     itkImageDuplicatorIUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageDuplicatorIUL3 : public itkObject {
   public:
     enum  {  ImageDimension = 3 };
     static itkImageDuplicatorIUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageUL3 const * _arg);
     virtual itkImageUL3 * GetOutput();
     void Update();
   private:
     itkImageDuplicatorIUL3(itkImageDuplicatorIUL3 const & arg0);
     void operator=(itkImageDuplicatorIUL3 const & arg0);
   protected:
     itkImageDuplicatorIUL3();
     ~itkImageDuplicatorIUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageDuplicatorIUL3_Pointer {
   public:
     itkImageDuplicatorIUL3_Pointer();
     itkImageDuplicatorIUL3_Pointer(itkImageDuplicatorIUL3_Pointer const & p);
     itkImageDuplicatorIUL3_Pointer(itkImageDuplicatorIUL3 * p);
     ~itkImageDuplicatorIUL3_Pointer();
     itkImageDuplicatorIUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageDuplicatorIUL3 * GetPointer() const;
     bool operator<(itkImageDuplicatorIUL3_Pointer const & r) const;
     bool operator>(itkImageDuplicatorIUL3_Pointer const & r) const;
     bool operator<=(itkImageDuplicatorIUL3_Pointer const & r) const;
     bool operator>=(itkImageDuplicatorIUL3_Pointer const & r) const;
     itkImageDuplicatorIUL3_Pointer & operator=(itkImageDuplicatorIUL3_Pointer const & r);
     itkImageDuplicatorIUL3_Pointer & operator=(itkImageDuplicatorIUL3 * r);
     itkImageDuplicatorIUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageDuplicatorIUS2 : public itkObject {
   public:
     enum  {  ImageDimension = 2 };
     static itkImageDuplicatorIUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageUS2 const * _arg);
     virtual itkImageUS2 * GetOutput();
     void Update();
   private:
     itkImageDuplicatorIUS2(itkImageDuplicatorIUS2 const & arg0);
     void operator=(itkImageDuplicatorIUS2 const & arg0);
   protected:
     itkImageDuplicatorIUS2();
     ~itkImageDuplicatorIUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageDuplicatorIUS2_Pointer {
   public:
     itkImageDuplicatorIUS2_Pointer();
     itkImageDuplicatorIUS2_Pointer(itkImageDuplicatorIUS2_Pointer const & p);
     itkImageDuplicatorIUS2_Pointer(itkImageDuplicatorIUS2 * p);
     ~itkImageDuplicatorIUS2_Pointer();
     itkImageDuplicatorIUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageDuplicatorIUS2 * GetPointer() const;
     bool operator<(itkImageDuplicatorIUS2_Pointer const & r) const;
     bool operator>(itkImageDuplicatorIUS2_Pointer const & r) const;
     bool operator<=(itkImageDuplicatorIUS2_Pointer const & r) const;
     bool operator>=(itkImageDuplicatorIUS2_Pointer const & r) const;
     itkImageDuplicatorIUS2_Pointer & operator=(itkImageDuplicatorIUS2_Pointer const & r);
     itkImageDuplicatorIUS2_Pointer & operator=(itkImageDuplicatorIUS2 * r);
     itkImageDuplicatorIUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageDuplicatorIUS3 : public itkObject {
   public:
     enum  {  ImageDimension = 3 };
     static itkImageDuplicatorIUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageUS3 const * _arg);
     virtual itkImageUS3 * GetOutput();
     void Update();
   private:
     itkImageDuplicatorIUS3(itkImageDuplicatorIUS3 const & arg0);
     void operator=(itkImageDuplicatorIUS3 const & arg0);
   protected:
     itkImageDuplicatorIUS3();
     ~itkImageDuplicatorIUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageDuplicatorIUS3_Pointer {
   public:
     itkImageDuplicatorIUS3_Pointer();
     itkImageDuplicatorIUS3_Pointer(itkImageDuplicatorIUS3_Pointer const & p);
     itkImageDuplicatorIUS3_Pointer(itkImageDuplicatorIUS3 * p);
     ~itkImageDuplicatorIUS3_Pointer();
     itkImageDuplicatorIUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageDuplicatorIUS3 * GetPointer() const;
     bool operator<(itkImageDuplicatorIUS3_Pointer const & r) const;
     bool operator>(itkImageDuplicatorIUS3_Pointer const & r) const;
     bool operator<=(itkImageDuplicatorIUS3_Pointer const & r) const;
     bool operator>=(itkImageDuplicatorIUS3_Pointer const & r) const;
     itkImageDuplicatorIUS3_Pointer & operator=(itkImageDuplicatorIUS3_Pointer const & r);
     itkImageDuplicatorIUS3_Pointer & operator=(itkImageDuplicatorIUS3 * r);
     itkImageDuplicatorIUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageDuplicatorIVF22 : public itkObject {
   public:
     enum  {  ImageDimension = 2 };
     static itkImageDuplicatorIVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageVF22 const * _arg);
     virtual itkImageVF22 * GetOutput();
     void Update();
   private:
     itkImageDuplicatorIVF22(itkImageDuplicatorIVF22 const & arg0);
     void operator=(itkImageDuplicatorIVF22 const & arg0);
   protected:
     itkImageDuplicatorIVF22();
     ~itkImageDuplicatorIVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageDuplicatorIVF22_Pointer {
   public:
     itkImageDuplicatorIVF22_Pointer();
     itkImageDuplicatorIVF22_Pointer(itkImageDuplicatorIVF22_Pointer const & p);
     itkImageDuplicatorIVF22_Pointer(itkImageDuplicatorIVF22 * p);
     ~itkImageDuplicatorIVF22_Pointer();
     itkImageDuplicatorIVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageDuplicatorIVF22 * GetPointer() const;
     bool operator<(itkImageDuplicatorIVF22_Pointer const & r) const;
     bool operator>(itkImageDuplicatorIVF22_Pointer const & r) const;
     bool operator<=(itkImageDuplicatorIVF22_Pointer const & r) const;
     bool operator>=(itkImageDuplicatorIVF22_Pointer const & r) const;
     itkImageDuplicatorIVF22_Pointer & operator=(itkImageDuplicatorIVF22_Pointer const & r);
     itkImageDuplicatorIVF22_Pointer & operator=(itkImageDuplicatorIVF22 * r);
     itkImageDuplicatorIVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageDuplicatorIVF33 : public itkObject {
   public:
     enum  {  ImageDimension = 3 };
     static itkImageDuplicatorIVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageVF33 const * _arg);
     virtual itkImageVF33 * GetOutput();
     void Update();
   private:
     itkImageDuplicatorIVF33(itkImageDuplicatorIVF33 const & arg0);
     void operator=(itkImageDuplicatorIVF33 const & arg0);
   protected:
     itkImageDuplicatorIVF33();
     ~itkImageDuplicatorIVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageDuplicatorIVF33_Pointer {
   public:
     itkImageDuplicatorIVF33_Pointer();
     itkImageDuplicatorIVF33_Pointer(itkImageDuplicatorIVF33_Pointer const & p);
     itkImageDuplicatorIVF33_Pointer(itkImageDuplicatorIVF33 * p);
     ~itkImageDuplicatorIVF33_Pointer();
     itkImageDuplicatorIVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageDuplicatorIVF33 * GetPointer() const;
     bool operator<(itkImageDuplicatorIVF33_Pointer const & r) const;
     bool operator>(itkImageDuplicatorIVF33_Pointer const & r) const;
     bool operator<=(itkImageDuplicatorIVF33_Pointer const & r) const;
     bool operator>=(itkImageDuplicatorIVF33_Pointer const & r) const;
     itkImageDuplicatorIVF33_Pointer & operator=(itkImageDuplicatorIVF33_Pointer const & r);
     itkImageDuplicatorIVF33_Pointer & operator=(itkImageDuplicatorIVF33 * r);
     itkImageDuplicatorIVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


