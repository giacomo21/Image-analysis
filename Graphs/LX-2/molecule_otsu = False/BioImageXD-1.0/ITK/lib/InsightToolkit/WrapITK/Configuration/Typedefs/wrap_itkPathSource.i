// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkPathSourceChicken
#endif
#ifdef SWIGCSHARP
%module itkPathSourceCsharp
#endif
#ifdef SWIGGUILE
%module itkPathSourceGuile
#endif
#ifdef SWIGJAVA
%module itkPathSourceJava
#endif
#ifdef SWIGLUA
%module itkPathSourceLua
#endif
#ifdef SWIGMODULA3
%module itkPathSourceModula3
#endif
#ifdef SWIGMZSCHEME
%module itkPathSourceMzscheme
#endif
#ifdef SWIGOCAML
%module itkPathSourceOcaml
#endif
#ifdef SWIGPERL
%module itkPathSourcePerl
#endif
#ifdef SWIGPERL5
%module itkPathSourcePerl5
#endif
#ifdef SWIGPHP
%module itkPathSourcePhp
#endif
#ifdef SWIGPHP4
%module itkPathSourcePhp4
#endif
#ifdef SWIGPHP5
%module itkPathSourcePhp5
#endif
#ifdef SWIGPIKE
%module itkPathSourcePike
#endif
#ifdef SWIGPYTHON
%module itkPathSourcePython
#endif
#ifdef SWIGR
%module itkPathSourceR
#endif
#ifdef SWIGRUBY
%module itkPathSourceRuby
#endif
#ifdef SWIGSEXP
%module itkPathSourceSexp
#endif
#ifdef SWIGTCL
%module itkPathSourceTcl
#endif
#ifdef SWIGXML
%module itkPathSourceXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkPolyLineParametricPath.i


%include itk.i
%include wrap_itkPathSource_ext.i


 class itkPathSourcePLPP2 : public itkProcessObject {
   public:
     static itkPathSourcePLPP2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itkPolyLineParametricPath2 * GetOutput();
     itkPolyLineParametricPath2 * GetOutput(unsigned int idx);
     virtual void GraftOutput(itkPolyLineParametricPath2 * output);
     virtual void GraftNthOutput(unsigned int idx, itkPolyLineParametricPath2 * output);
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
   private:
     itkPathSourcePLPP2(itkPathSourcePLPP2 const & arg0);
     void operator=(itkPathSourcePLPP2 const & arg0);
   protected:
     itkPathSourcePLPP2();
     ~itkPathSourcePLPP2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkPathSourcePLPP2_Pointer {
   public:
     itkPathSourcePLPP2_Pointer();
     itkPathSourcePLPP2_Pointer(itkPathSourcePLPP2_Pointer const & p);
     itkPathSourcePLPP2_Pointer(itkPathSourcePLPP2 * p);
     ~itkPathSourcePLPP2_Pointer();
     itkPathSourcePLPP2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkPathSourcePLPP2 * GetPointer() const;
     bool operator<(itkPathSourcePLPP2_Pointer const & r) const;
     bool operator>(itkPathSourcePLPP2_Pointer const & r) const;
     bool operator<=(itkPathSourcePLPP2_Pointer const & r) const;
     bool operator>=(itkPathSourcePLPP2_Pointer const & r) const;
     itkPathSourcePLPP2_Pointer & operator=(itkPathSourcePLPP2_Pointer const & r);
     itkPathSourcePLPP2_Pointer & operator=(itkPathSourcePLPP2 * r);
     itkPathSourcePLPP2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkPathSourcePLPP3 : public itkProcessObject {
   public:
     static itkPathSourcePLPP3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itkPolyLineParametricPath3 * GetOutput();
     itkPolyLineParametricPath3 * GetOutput(unsigned int idx);
     virtual void GraftOutput(itkPolyLineParametricPath3 * output);
     virtual void GraftNthOutput(unsigned int idx, itkPolyLineParametricPath3 * output);
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
   private:
     itkPathSourcePLPP3(itkPathSourcePLPP3 const & arg0);
     void operator=(itkPathSourcePLPP3 const & arg0);
   protected:
     itkPathSourcePLPP3();
     ~itkPathSourcePLPP3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkPathSourcePLPP3_Pointer {
   public:
     itkPathSourcePLPP3_Pointer();
     itkPathSourcePLPP3_Pointer(itkPathSourcePLPP3_Pointer const & p);
     itkPathSourcePLPP3_Pointer(itkPathSourcePLPP3 * p);
     ~itkPathSourcePLPP3_Pointer();
     itkPathSourcePLPP3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkPathSourcePLPP3 * GetPointer() const;
     bool operator<(itkPathSourcePLPP3_Pointer const & r) const;
     bool operator>(itkPathSourcePLPP3_Pointer const & r) const;
     bool operator<=(itkPathSourcePLPP3_Pointer const & r) const;
     bool operator>=(itkPathSourcePLPP3_Pointer const & r) const;
     itkPathSourcePLPP3_Pointer & operator=(itkPathSourcePLPP3_Pointer const & r);
     itkPathSourcePLPP3_Pointer & operator=(itkPathSourcePLPP3 * r);
     itkPathSourcePLPP3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


