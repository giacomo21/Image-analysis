// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkAtanImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkAtanImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkAtanImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkAtanImageFilterJava
#endif
#ifdef SWIGLUA
%module itkAtanImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkAtanImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkAtanImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkAtanImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkAtanImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkAtanImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkAtanImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkAtanImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkAtanImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkAtanImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkAtanImageFilterPython
#endif
#ifdef SWIGR
%module itkAtanImageFilterR
#endif
#ifdef SWIGRUBY
%module itkAtanImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkAtanImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkAtanImageFilterTcl
#endif
#ifdef SWIGXML
%module itkAtanImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "UnaryPixelMath.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkInPlaceImageFilterA.i
%import wrap_ITKRegions.i


%include itk.i
%include wrap_itkAtanImageFilter_ext.i


 class itkAtanImageFilterID2ID2_Pointer {
   public:
     itkAtanImageFilterID2ID2_Pointer();
     itkAtanImageFilterID2ID2_Pointer(itkAtanImageFilterID2ID2_Pointer const & p);
     itkAtanImageFilterID2ID2_Pointer(itkAtanImageFilterID2ID2 * p);
     ~itkAtanImageFilterID2ID2_Pointer();
     itkAtanImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAtanImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkAtanImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkAtanImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkAtanImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkAtanImageFilterID2ID2_Pointer const & r) const;
     itkAtanImageFilterID2ID2_Pointer & operator=(itkAtanImageFilterID2ID2_Pointer const & r);
     itkAtanImageFilterID2ID2_Pointer & operator=(itkAtanImageFilterID2ID2 * r);
     itkAtanImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAtanImageFilterID2ID2_Superclass : public itkInPlaceImageFilterID2ID2 {
   public:
     static itkAtanImageFilterID2ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::Atan< double, double > & GetFunctor();
     itk::Functor::Atan< double, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Atan< double, double > const & functor);
   private:
     itkAtanImageFilterID2ID2_Superclass(itkAtanImageFilterID2ID2_Superclass const & arg0);
     void operator=(itkAtanImageFilterID2ID2_Superclass const & arg0);
   protected:
     itkAtanImageFilterID2ID2_Superclass();
     ~itkAtanImageFilterID2ID2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkAtanImageFilterID2ID2_Superclass_Pointer {
   public:
     itkAtanImageFilterID2ID2_Superclass_Pointer();
     itkAtanImageFilterID2ID2_Superclass_Pointer(itkAtanImageFilterID2ID2_Superclass_Pointer const & p);
     itkAtanImageFilterID2ID2_Superclass_Pointer(itkAtanImageFilterID2ID2_Superclass * p);
     ~itkAtanImageFilterID2ID2_Superclass_Pointer();
     itkAtanImageFilterID2ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAtanImageFilterID2ID2_Superclass * GetPointer() const;
     bool operator<(itkAtanImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator>(itkAtanImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkAtanImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkAtanImageFilterID2ID2_Superclass_Pointer const & r) const;
     itkAtanImageFilterID2ID2_Superclass_Pointer & operator=(itkAtanImageFilterID2ID2_Superclass_Pointer const & r);
     itkAtanImageFilterID2ID2_Superclass_Pointer & operator=(itkAtanImageFilterID2ID2_Superclass * r);
     itkAtanImageFilterID2ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAtanImageFilterID3ID3_Pointer {
   public:
     itkAtanImageFilterID3ID3_Pointer();
     itkAtanImageFilterID3ID3_Pointer(itkAtanImageFilterID3ID3_Pointer const & p);
     itkAtanImageFilterID3ID3_Pointer(itkAtanImageFilterID3ID3 * p);
     ~itkAtanImageFilterID3ID3_Pointer();
     itkAtanImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAtanImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkAtanImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkAtanImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkAtanImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkAtanImageFilterID3ID3_Pointer const & r) const;
     itkAtanImageFilterID3ID3_Pointer & operator=(itkAtanImageFilterID3ID3_Pointer const & r);
     itkAtanImageFilterID3ID3_Pointer & operator=(itkAtanImageFilterID3ID3 * r);
     itkAtanImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAtanImageFilterID3ID3_Superclass : public itkInPlaceImageFilterID3ID3 {
   public:
     static itkAtanImageFilterID3ID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::Atan< double, double > & GetFunctor();
     itk::Functor::Atan< double, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Atan< double, double > const & functor);
   private:
     itkAtanImageFilterID3ID3_Superclass(itkAtanImageFilterID3ID3_Superclass const & arg0);
     void operator=(itkAtanImageFilterID3ID3_Superclass const & arg0);
   protected:
     itkAtanImageFilterID3ID3_Superclass();
     ~itkAtanImageFilterID3ID3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkAtanImageFilterID3ID3_Superclass_Pointer {
   public:
     itkAtanImageFilterID3ID3_Superclass_Pointer();
     itkAtanImageFilterID3ID3_Superclass_Pointer(itkAtanImageFilterID3ID3_Superclass_Pointer const & p);
     itkAtanImageFilterID3ID3_Superclass_Pointer(itkAtanImageFilterID3ID3_Superclass * p);
     ~itkAtanImageFilterID3ID3_Superclass_Pointer();
     itkAtanImageFilterID3ID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAtanImageFilterID3ID3_Superclass * GetPointer() const;
     bool operator<(itkAtanImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator>(itkAtanImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator<=(itkAtanImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator>=(itkAtanImageFilterID3ID3_Superclass_Pointer const & r) const;
     itkAtanImageFilterID3ID3_Superclass_Pointer & operator=(itkAtanImageFilterID3ID3_Superclass_Pointer const & r);
     itkAtanImageFilterID3ID3_Superclass_Pointer & operator=(itkAtanImageFilterID3ID3_Superclass * r);
     itkAtanImageFilterID3ID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAtanImageFilterIF2IF2_Pointer {
   public:
     itkAtanImageFilterIF2IF2_Pointer();
     itkAtanImageFilterIF2IF2_Pointer(itkAtanImageFilterIF2IF2_Pointer const & p);
     itkAtanImageFilterIF2IF2_Pointer(itkAtanImageFilterIF2IF2 * p);
     ~itkAtanImageFilterIF2IF2_Pointer();
     itkAtanImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAtanImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkAtanImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkAtanImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkAtanImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkAtanImageFilterIF2IF2_Pointer const & r) const;
     itkAtanImageFilterIF2IF2_Pointer & operator=(itkAtanImageFilterIF2IF2_Pointer const & r);
     itkAtanImageFilterIF2IF2_Pointer & operator=(itkAtanImageFilterIF2IF2 * r);
     itkAtanImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAtanImageFilterIF2IF2_Superclass : public itkInPlaceImageFilterIF2IF2 {
   public:
     static itkAtanImageFilterIF2IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::Atan< float, float > & GetFunctor();
     itk::Functor::Atan< float, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Atan< float, float > const & functor);
   private:
     itkAtanImageFilterIF2IF2_Superclass(itkAtanImageFilterIF2IF2_Superclass const & arg0);
     void operator=(itkAtanImageFilterIF2IF2_Superclass const & arg0);
   protected:
     itkAtanImageFilterIF2IF2_Superclass();
     ~itkAtanImageFilterIF2IF2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkAtanImageFilterIF2IF2_Superclass_Pointer {
   public:
     itkAtanImageFilterIF2IF2_Superclass_Pointer();
     itkAtanImageFilterIF2IF2_Superclass_Pointer(itkAtanImageFilterIF2IF2_Superclass_Pointer const & p);
     itkAtanImageFilterIF2IF2_Superclass_Pointer(itkAtanImageFilterIF2IF2_Superclass * p);
     ~itkAtanImageFilterIF2IF2_Superclass_Pointer();
     itkAtanImageFilterIF2IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAtanImageFilterIF2IF2_Superclass * GetPointer() const;
     bool operator<(itkAtanImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator>(itkAtanImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkAtanImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkAtanImageFilterIF2IF2_Superclass_Pointer const & r) const;
     itkAtanImageFilterIF2IF2_Superclass_Pointer & operator=(itkAtanImageFilterIF2IF2_Superclass_Pointer const & r);
     itkAtanImageFilterIF2IF2_Superclass_Pointer & operator=(itkAtanImageFilterIF2IF2_Superclass * r);
     itkAtanImageFilterIF2IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAtanImageFilterIF3IF3_Pointer {
   public:
     itkAtanImageFilterIF3IF3_Pointer();
     itkAtanImageFilterIF3IF3_Pointer(itkAtanImageFilterIF3IF3_Pointer const & p);
     itkAtanImageFilterIF3IF3_Pointer(itkAtanImageFilterIF3IF3 * p);
     ~itkAtanImageFilterIF3IF3_Pointer();
     itkAtanImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAtanImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkAtanImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkAtanImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkAtanImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkAtanImageFilterIF3IF3_Pointer const & r) const;
     itkAtanImageFilterIF3IF3_Pointer & operator=(itkAtanImageFilterIF3IF3_Pointer const & r);
     itkAtanImageFilterIF3IF3_Pointer & operator=(itkAtanImageFilterIF3IF3 * r);
     itkAtanImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAtanImageFilterIF3IF3_Superclass : public itkInPlaceImageFilterIF3IF3 {
   public:
     static itkAtanImageFilterIF3IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::Atan< float, float > & GetFunctor();
     itk::Functor::Atan< float, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Atan< float, float > const & functor);
   private:
     itkAtanImageFilterIF3IF3_Superclass(itkAtanImageFilterIF3IF3_Superclass const & arg0);
     void operator=(itkAtanImageFilterIF3IF3_Superclass const & arg0);
   protected:
     itkAtanImageFilterIF3IF3_Superclass();
     ~itkAtanImageFilterIF3IF3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkAtanImageFilterIF3IF3_Superclass_Pointer {
   public:
     itkAtanImageFilterIF3IF3_Superclass_Pointer();
     itkAtanImageFilterIF3IF3_Superclass_Pointer(itkAtanImageFilterIF3IF3_Superclass_Pointer const & p);
     itkAtanImageFilterIF3IF3_Superclass_Pointer(itkAtanImageFilterIF3IF3_Superclass * p);
     ~itkAtanImageFilterIF3IF3_Superclass_Pointer();
     itkAtanImageFilterIF3IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAtanImageFilterIF3IF3_Superclass * GetPointer() const;
     bool operator<(itkAtanImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator>(itkAtanImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkAtanImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkAtanImageFilterIF3IF3_Superclass_Pointer const & r) const;
     itkAtanImageFilterIF3IF3_Superclass_Pointer & operator=(itkAtanImageFilterIF3IF3_Superclass_Pointer const & r);
     itkAtanImageFilterIF3IF3_Superclass_Pointer & operator=(itkAtanImageFilterIF3IF3_Superclass * r);
     itkAtanImageFilterIF3IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAtanImageFilterID2ID2 : public itkAtanImageFilterID2ID2_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkAtanImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAtanImageFilterID2ID2(itkAtanImageFilterID2ID2 const & arg0);
     void operator=(itkAtanImageFilterID2ID2 const & arg0);
   protected:
     itkAtanImageFilterID2ID2();
     ~itkAtanImageFilterID2ID2();
 };


 class itkAtanImageFilterID3ID3 : public itkAtanImageFilterID3ID3_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkAtanImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAtanImageFilterID3ID3(itkAtanImageFilterID3ID3 const & arg0);
     void operator=(itkAtanImageFilterID3ID3 const & arg0);
   protected:
     itkAtanImageFilterID3ID3();
     ~itkAtanImageFilterID3ID3();
 };


 class itkAtanImageFilterIF2IF2 : public itkAtanImageFilterIF2IF2_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkAtanImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAtanImageFilterIF2IF2(itkAtanImageFilterIF2IF2 const & arg0);
     void operator=(itkAtanImageFilterIF2IF2 const & arg0);
   protected:
     itkAtanImageFilterIF2IF2();
     ~itkAtanImageFilterIF2IF2();
 };


 class itkAtanImageFilterIF3IF3 : public itkAtanImageFilterIF3IF3_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkAtanImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAtanImageFilterIF3IF3(itkAtanImageFilterIF3IF3 const & arg0);
     void operator=(itkAtanImageFilterIF3IF3 const & arg0);
   protected:
     itkAtanImageFilterIF3IF3();
     ~itkAtanImageFilterIF3IF3();
 };


