// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkAffineGeometryFrameChicken
#endif
#ifdef SWIGCSHARP
%module itkAffineGeometryFrameCsharp
#endif
#ifdef SWIGGUILE
%module itkAffineGeometryFrameGuile
#endif
#ifdef SWIGJAVA
%module itkAffineGeometryFrameJava
#endif
#ifdef SWIGLUA
%module itkAffineGeometryFrameLua
#endif
#ifdef SWIGMODULA3
%module itkAffineGeometryFrameModula3
#endif
#ifdef SWIGMZSCHEME
%module itkAffineGeometryFrameMzscheme
#endif
#ifdef SWIGOCAML
%module itkAffineGeometryFrameOcaml
#endif
#ifdef SWIGPERL
%module itkAffineGeometryFramePerl
#endif
#ifdef SWIGPERL5
%module itkAffineGeometryFramePerl5
#endif
#ifdef SWIGPHP
%module itkAffineGeometryFramePhp
#endif
#ifdef SWIGPHP4
%module itkAffineGeometryFramePhp4
#endif
#ifdef SWIGPHP5
%module itkAffineGeometryFramePhp5
#endif
#ifdef SWIGPIKE
%module itkAffineGeometryFramePike
#endif
#ifdef SWIGPYTHON
%module itkAffineGeometryFramePython
#endif
#ifdef SWIGR
%module itkAffineGeometryFrameR
#endif
#ifdef SWIGRUBY
%module itkAffineGeometryFrameRuby
#endif
#ifdef SWIGSEXP
%module itkAffineGeometryFrameSexp
#endif
#ifdef SWIGTCL
%module itkAffineGeometryFrameTcl
#endif
#ifdef SWIGXML
%module itkAffineGeometryFrameXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "Calculators.includes"
#include "SpatialObject.includes"
%}


%{
%}




%import wrap_itkBoundingBox.i
%import wrap_itkFixedArray.i
%import wrap_ITKCommonBase.i
%import wrap_itkScalableAffineTransform.i


%include itk.i
%include wrap_itkAffineGeometryFrame_ext.i


 class itkAffineGeometryFrameD2 : public itkObject {
   public:
     static itkAffineGeometryFrameD2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual itkBoundingBoxUL2DVCULPD2 const * GetBoundingBox() const;
     itkFixedArrayD4 const GetBounds() const;
     virtual void SetBounds(itkFixedArrayD4 const & bounds);
     double GetExtent(unsigned int direction) const;
     virtual itkScalableAffineTransformD2 const * GetIndexToObjectTransform() const;
     virtual itkScalableAffineTransformD2 * GetIndexToObjectTransform();
     virtual void SetIndexToObjectTransform(itkScalableAffineTransformD2 * _arg);
     virtual itkScalableAffineTransformD2 const * GetObjectToNodeTransform() const;
     virtual itkScalableAffineTransformD2 * GetObjectToNodeTransform();
     virtual void SetObjectToNodeTransform(itkScalableAffineTransformD2 * _arg);
     virtual itkScalableAffineTransformD2 const * GetIndexToWorldTransform() const;
     virtual itkScalableAffineTransformD2 * GetIndexToWorldTransform();
     virtual void SetIndexToWorldTransform(itkScalableAffineTransformD2 * _arg);
     virtual itkScalableAffineTransformD2 const * GetIndexToNodeTransform() const;
     virtual void Initialize();
     virtual itkAffineGeometryFrameD2_Pointer Clone() const;
   private:
     itkAffineGeometryFrameD2(itkAffineGeometryFrameD2 const & arg0);
     void operator=(itkAffineGeometryFrameD2 const & arg0);
   protected:
     itkAffineGeometryFrameD2();
     ~itkAffineGeometryFrameD2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void InitializeGeometry(itkAffineGeometryFrameD2 * newGeometry) const;
     void SetBoundsArray(itkFixedArrayD4 const & bounds, itkBoundingBoxUL2DVCULPD2_Pointer & boundingBox);
 };


 class itkAffineGeometryFrameD2_Pointer {
   public:
     itkAffineGeometryFrameD2_Pointer();
     itkAffineGeometryFrameD2_Pointer(itkAffineGeometryFrameD2_Pointer const & p);
     itkAffineGeometryFrameD2_Pointer(itkAffineGeometryFrameD2 * p);
     ~itkAffineGeometryFrameD2_Pointer();
     itkAffineGeometryFrameD2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAffineGeometryFrameD2 * GetPointer() const;
     bool operator<(itkAffineGeometryFrameD2_Pointer const & r) const;
     bool operator>(itkAffineGeometryFrameD2_Pointer const & r) const;
     bool operator<=(itkAffineGeometryFrameD2_Pointer const & r) const;
     bool operator>=(itkAffineGeometryFrameD2_Pointer const & r) const;
     itkAffineGeometryFrameD2_Pointer & operator=(itkAffineGeometryFrameD2_Pointer const & r);
     itkAffineGeometryFrameD2_Pointer & operator=(itkAffineGeometryFrameD2 * r);
     itkAffineGeometryFrameD2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAffineGeometryFrameD3 : public itkObject {
   public:
     static itkAffineGeometryFrameD3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual itkBoundingBoxUL3DVCULPD3 const * GetBoundingBox() const;
     itkFixedArrayD6 const GetBounds() const;
     virtual void SetBounds(itkFixedArrayD6 const & bounds);
     double GetExtent(unsigned int direction) const;
     virtual itkScalableAffineTransformD3 const * GetIndexToObjectTransform() const;
     virtual itkScalableAffineTransformD3 * GetIndexToObjectTransform();
     virtual void SetIndexToObjectTransform(itkScalableAffineTransformD3 * _arg);
     virtual itkScalableAffineTransformD3 const * GetObjectToNodeTransform() const;
     virtual itkScalableAffineTransformD3 * GetObjectToNodeTransform();
     virtual void SetObjectToNodeTransform(itkScalableAffineTransformD3 * _arg);
     virtual itkScalableAffineTransformD3 const * GetIndexToWorldTransform() const;
     virtual itkScalableAffineTransformD3 * GetIndexToWorldTransform();
     virtual void SetIndexToWorldTransform(itkScalableAffineTransformD3 * _arg);
     virtual itkScalableAffineTransformD3 const * GetIndexToNodeTransform() const;
     virtual void Initialize();
     virtual itkAffineGeometryFrameD3_Pointer Clone() const;
   private:
     itkAffineGeometryFrameD3(itkAffineGeometryFrameD3 const & arg0);
     void operator=(itkAffineGeometryFrameD3 const & arg0);
   protected:
     itkAffineGeometryFrameD3();
     ~itkAffineGeometryFrameD3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void InitializeGeometry(itkAffineGeometryFrameD3 * newGeometry) const;
     void SetBoundsArray(itkFixedArrayD6 const & bounds, itkBoundingBoxUL3DVCULPD3_Pointer & boundingBox);
 };


 class itkAffineGeometryFrameD3_Pointer {
   public:
     itkAffineGeometryFrameD3_Pointer();
     itkAffineGeometryFrameD3_Pointer(itkAffineGeometryFrameD3_Pointer const & p);
     itkAffineGeometryFrameD3_Pointer(itkAffineGeometryFrameD3 * p);
     ~itkAffineGeometryFrameD3_Pointer();
     itkAffineGeometryFrameD3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAffineGeometryFrameD3 * GetPointer() const;
     bool operator<(itkAffineGeometryFrameD3_Pointer const & r) const;
     bool operator>(itkAffineGeometryFrameD3_Pointer const & r) const;
     bool operator<=(itkAffineGeometryFrameD3_Pointer const & r) const;
     bool operator>=(itkAffineGeometryFrameD3_Pointer const & r) const;
     itkAffineGeometryFrameD3_Pointer & operator=(itkAffineGeometryFrameD3_Pointer const & r);
     itkAffineGeometryFrameD3_Pointer & operator=(itkAffineGeometryFrameD3 * r);
     itkAffineGeometryFrameD3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


