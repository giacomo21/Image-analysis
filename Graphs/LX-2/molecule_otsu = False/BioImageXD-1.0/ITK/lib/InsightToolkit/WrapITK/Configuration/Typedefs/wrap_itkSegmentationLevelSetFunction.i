// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkSegmentationLevelSetFunctionChicken
#endif
#ifdef SWIGCSHARP
%module itkSegmentationLevelSetFunctionCsharp
#endif
#ifdef SWIGGUILE
%module itkSegmentationLevelSetFunctionGuile
#endif
#ifdef SWIGJAVA
%module itkSegmentationLevelSetFunctionJava
#endif
#ifdef SWIGLUA
%module itkSegmentationLevelSetFunctionLua
#endif
#ifdef SWIGMODULA3
%module itkSegmentationLevelSetFunctionModula3
#endif
#ifdef SWIGMZSCHEME
%module itkSegmentationLevelSetFunctionMzscheme
#endif
#ifdef SWIGOCAML
%module itkSegmentationLevelSetFunctionOcaml
#endif
#ifdef SWIGPERL
%module itkSegmentationLevelSetFunctionPerl
#endif
#ifdef SWIGPERL5
%module itkSegmentationLevelSetFunctionPerl5
#endif
#ifdef SWIGPHP
%module itkSegmentationLevelSetFunctionPhp
#endif
#ifdef SWIGPHP4
%module itkSegmentationLevelSetFunctionPhp4
#endif
#ifdef SWIGPHP5
%module itkSegmentationLevelSetFunctionPhp5
#endif
#ifdef SWIGPIKE
%module itkSegmentationLevelSetFunctionPike
#endif
#ifdef SWIGPYTHON
%module itkSegmentationLevelSetFunctionPython
#endif
#ifdef SWIGR
%module itkSegmentationLevelSetFunctionR
#endif
#ifdef SWIGRUBY
%module itkSegmentationLevelSetFunctionRuby
#endif
#ifdef SWIGSEXP
%module itkSegmentationLevelSetFunctionSexp
#endif
#ifdef SWIGTCL
%module itkSegmentationLevelSetFunctionTcl
#endif
#ifdef SWIGXML
%module itkSegmentationLevelSetFunctionXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Numerics.includes"
#include "LevelSet.includes"
%}


%{
%}




%import wrap_itkFixedArray.i
%import wrap_itkLevelSetFunction.i
%import wrap_itkImage.i
%import wrap_itkVector.i
%import wrap_itkSize.i


%include itk.i
%include wrap_itkSegmentationLevelSetFunction_ext.i


 class itkSegmentationLevelSetFunctionID2ID2 : public itkLevelSetFunctionID2 {
   public:
     enum  {  ImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual itkImageD2 const * GetFeatureImage() const;
     virtual void SetFeatureImage(itkImageD2 const * f);
     virtual itkImageD2 * GetSpeedImage();
     void SetSpeedImage(itkImageD2 * s);
     virtual itk::Image< itk::FixedArray< double, 2u >, 2u > * GetAdvectionImage() const;
     void SetAdvectionImage(itk::Image< itk::FixedArray< double, 2u >, 2u > * s);
     virtual void Initialize(itkSize2 const & r);
     virtual void CalculateSpeedImage();
     virtual void CalculateAdvectionImage();
     virtual void AllocateSpeedImage();
     virtual void AllocateAdvectionImage();
     virtual void ReverseExpansionDirection();
   private:
     itkSegmentationLevelSetFunctionID2ID2(itkSegmentationLevelSetFunctionID2ID2 const & arg0);
     void operator=(itkSegmentationLevelSetFunctionID2ID2 const & arg0);
   protected:
     virtual double PropagationSpeed(itk::ConstNeighborhoodIterator< itk::Image< double, 2u >, itk::ZeroFluxNeumannBoundaryCondition< itk::Image< double, 2u > > > const & arg0, itkVectorF2 const & arg1, itkLevelSetFunctionID2::GlobalDataStruct * gd) const;
     virtual itkFixedArrayD2 AdvectionField(itk::ConstNeighborhoodIterator< itk::Image< double, 2u >, itk::ZeroFluxNeumannBoundaryCondition< itk::Image< double, 2u > > > const & arg0, itkVectorF2 const & arg1, itkLevelSetFunctionID2::GlobalDataStruct * gd) const;
     ~itkSegmentationLevelSetFunctionID2ID2();
     itkSegmentationLevelSetFunctionID2ID2();
 };


 class itkSegmentationLevelSetFunctionID2ID2_Pointer {
   public:
     itkSegmentationLevelSetFunctionID2ID2_Pointer();
     itkSegmentationLevelSetFunctionID2ID2_Pointer(itkSegmentationLevelSetFunctionID2ID2_Pointer const & p);
     itkSegmentationLevelSetFunctionID2ID2_Pointer(itkSegmentationLevelSetFunctionID2ID2 * p);
     ~itkSegmentationLevelSetFunctionID2ID2_Pointer();
     itkSegmentationLevelSetFunctionID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSegmentationLevelSetFunctionID2ID2 * GetPointer() const;
     bool operator<(itkSegmentationLevelSetFunctionID2ID2_Pointer const & r) const;
     bool operator>(itkSegmentationLevelSetFunctionID2ID2_Pointer const & r) const;
     bool operator<=(itkSegmentationLevelSetFunctionID2ID2_Pointer const & r) const;
     bool operator>=(itkSegmentationLevelSetFunctionID2ID2_Pointer const & r) const;
     itkSegmentationLevelSetFunctionID2ID2_Pointer & operator=(itkSegmentationLevelSetFunctionID2ID2_Pointer const & r);
     itkSegmentationLevelSetFunctionID2ID2_Pointer & operator=(itkSegmentationLevelSetFunctionID2ID2 * r);
     itkSegmentationLevelSetFunctionID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSegmentationLevelSetFunctionID3ID3 : public itkLevelSetFunctionID3 {
   public:
     enum  {  ImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual itkImageD3 const * GetFeatureImage() const;
     virtual void SetFeatureImage(itkImageD3 const * f);
     virtual itkImageD3 * GetSpeedImage();
     void SetSpeedImage(itkImageD3 * s);
     virtual itk::Image< itk::FixedArray< double, 3u >, 3u > * GetAdvectionImage() const;
     void SetAdvectionImage(itk::Image< itk::FixedArray< double, 3u >, 3u > * s);
     virtual void Initialize(itkSize3 const & r);
     virtual void CalculateSpeedImage();
     virtual void CalculateAdvectionImage();
     virtual void AllocateSpeedImage();
     virtual void AllocateAdvectionImage();
     virtual void ReverseExpansionDirection();
   private:
     itkSegmentationLevelSetFunctionID3ID3(itkSegmentationLevelSetFunctionID3ID3 const & arg0);
     void operator=(itkSegmentationLevelSetFunctionID3ID3 const & arg0);
   protected:
     virtual double PropagationSpeed(itk::ConstNeighborhoodIterator< itk::Image< double, 3u >, itk::ZeroFluxNeumannBoundaryCondition< itk::Image< double, 3u > > > const & arg0, itkVectorF3 const & arg1, itkLevelSetFunctionID3::GlobalDataStruct * gd) const;
     virtual itkFixedArrayD3 AdvectionField(itk::ConstNeighborhoodIterator< itk::Image< double, 3u >, itk::ZeroFluxNeumannBoundaryCondition< itk::Image< double, 3u > > > const & arg0, itkVectorF3 const & arg1, itkLevelSetFunctionID3::GlobalDataStruct * gd) const;
     ~itkSegmentationLevelSetFunctionID3ID3();
     itkSegmentationLevelSetFunctionID3ID3();
 };


 class itkSegmentationLevelSetFunctionID3ID3_Pointer {
   public:
     itkSegmentationLevelSetFunctionID3ID3_Pointer();
     itkSegmentationLevelSetFunctionID3ID3_Pointer(itkSegmentationLevelSetFunctionID3ID3_Pointer const & p);
     itkSegmentationLevelSetFunctionID3ID3_Pointer(itkSegmentationLevelSetFunctionID3ID3 * p);
     ~itkSegmentationLevelSetFunctionID3ID3_Pointer();
     itkSegmentationLevelSetFunctionID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSegmentationLevelSetFunctionID3ID3 * GetPointer() const;
     bool operator<(itkSegmentationLevelSetFunctionID3ID3_Pointer const & r) const;
     bool operator>(itkSegmentationLevelSetFunctionID3ID3_Pointer const & r) const;
     bool operator<=(itkSegmentationLevelSetFunctionID3ID3_Pointer const & r) const;
     bool operator>=(itkSegmentationLevelSetFunctionID3ID3_Pointer const & r) const;
     itkSegmentationLevelSetFunctionID3ID3_Pointer & operator=(itkSegmentationLevelSetFunctionID3ID3_Pointer const & r);
     itkSegmentationLevelSetFunctionID3ID3_Pointer & operator=(itkSegmentationLevelSetFunctionID3ID3 * r);
     itkSegmentationLevelSetFunctionID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSegmentationLevelSetFunctionIF2IF2 : public itkLevelSetFunctionIF2 {
   public:
     enum  {  ImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual itkImageF2 const * GetFeatureImage() const;
     virtual void SetFeatureImage(itkImageF2 const * f);
     virtual itkImageF2 * GetSpeedImage();
     void SetSpeedImage(itkImageF2 * s);
     virtual itkImageFAF22 * GetAdvectionImage() const;
     void SetAdvectionImage(itkImageFAF22 * s);
     virtual void Initialize(itkSize2 const & r);
     virtual void CalculateSpeedImage();
     virtual void CalculateAdvectionImage();
     virtual void AllocateSpeedImage();
     virtual void AllocateAdvectionImage();
     virtual void ReverseExpansionDirection();
   private:
     itkSegmentationLevelSetFunctionIF2IF2(itkSegmentationLevelSetFunctionIF2IF2 const & arg0);
     void operator=(itkSegmentationLevelSetFunctionIF2IF2 const & arg0);
   protected:
     virtual float PropagationSpeed(itk::ConstNeighborhoodIterator< itk::Image< float, 2u >, itk::ZeroFluxNeumannBoundaryCondition< itk::Image< float, 2u > > > const & arg0, itkVectorF2 const & arg1, itkLevelSetFunctionIF2::GlobalDataStruct * gd) const;
     virtual itkFixedArrayF2 AdvectionField(itk::ConstNeighborhoodIterator< itk::Image< float, 2u >, itk::ZeroFluxNeumannBoundaryCondition< itk::Image< float, 2u > > > const & arg0, itkVectorF2 const & arg1, itkLevelSetFunctionIF2::GlobalDataStruct * gd) const;
     ~itkSegmentationLevelSetFunctionIF2IF2();
     itkSegmentationLevelSetFunctionIF2IF2();
 };


 class itkSegmentationLevelSetFunctionIF2IF2_Pointer {
   public:
     itkSegmentationLevelSetFunctionIF2IF2_Pointer();
     itkSegmentationLevelSetFunctionIF2IF2_Pointer(itkSegmentationLevelSetFunctionIF2IF2_Pointer const & p);
     itkSegmentationLevelSetFunctionIF2IF2_Pointer(itkSegmentationLevelSetFunctionIF2IF2 * p);
     ~itkSegmentationLevelSetFunctionIF2IF2_Pointer();
     itkSegmentationLevelSetFunctionIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSegmentationLevelSetFunctionIF2IF2 * GetPointer() const;
     bool operator<(itkSegmentationLevelSetFunctionIF2IF2_Pointer const & r) const;
     bool operator>(itkSegmentationLevelSetFunctionIF2IF2_Pointer const & r) const;
     bool operator<=(itkSegmentationLevelSetFunctionIF2IF2_Pointer const & r) const;
     bool operator>=(itkSegmentationLevelSetFunctionIF2IF2_Pointer const & r) const;
     itkSegmentationLevelSetFunctionIF2IF2_Pointer & operator=(itkSegmentationLevelSetFunctionIF2IF2_Pointer const & r);
     itkSegmentationLevelSetFunctionIF2IF2_Pointer & operator=(itkSegmentationLevelSetFunctionIF2IF2 * r);
     itkSegmentationLevelSetFunctionIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSegmentationLevelSetFunctionIF3IF3 : public itkLevelSetFunctionIF3 {
   public:
     enum  {  ImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual itkImageF3 const * GetFeatureImage() const;
     virtual void SetFeatureImage(itkImageF3 const * f);
     virtual itkImageF3 * GetSpeedImage();
     void SetSpeedImage(itkImageF3 * s);
     virtual itkImageFAF33 * GetAdvectionImage() const;
     void SetAdvectionImage(itkImageFAF33 * s);
     virtual void Initialize(itkSize3 const & r);
     virtual void CalculateSpeedImage();
     virtual void CalculateAdvectionImage();
     virtual void AllocateSpeedImage();
     virtual void AllocateAdvectionImage();
     virtual void ReverseExpansionDirection();
   private:
     itkSegmentationLevelSetFunctionIF3IF3(itkSegmentationLevelSetFunctionIF3IF3 const & arg0);
     void operator=(itkSegmentationLevelSetFunctionIF3IF3 const & arg0);
   protected:
     virtual float PropagationSpeed(itk::ConstNeighborhoodIterator< itk::Image< float, 3u >, itk::ZeroFluxNeumannBoundaryCondition< itk::Image< float, 3u > > > const & arg0, itkVectorF3 const & arg1, itkLevelSetFunctionIF3::GlobalDataStruct * gd) const;
     virtual itkFixedArrayF3 AdvectionField(itk::ConstNeighborhoodIterator< itk::Image< float, 3u >, itk::ZeroFluxNeumannBoundaryCondition< itk::Image< float, 3u > > > const & arg0, itkVectorF3 const & arg1, itkLevelSetFunctionIF3::GlobalDataStruct * gd) const;
     ~itkSegmentationLevelSetFunctionIF3IF3();
     itkSegmentationLevelSetFunctionIF3IF3();
 };


 class itkSegmentationLevelSetFunctionIF3IF3_Pointer {
   public:
     itkSegmentationLevelSetFunctionIF3IF3_Pointer();
     itkSegmentationLevelSetFunctionIF3IF3_Pointer(itkSegmentationLevelSetFunctionIF3IF3_Pointer const & p);
     itkSegmentationLevelSetFunctionIF3IF3_Pointer(itkSegmentationLevelSetFunctionIF3IF3 * p);
     ~itkSegmentationLevelSetFunctionIF3IF3_Pointer();
     itkSegmentationLevelSetFunctionIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSegmentationLevelSetFunctionIF3IF3 * GetPointer() const;
     bool operator<(itkSegmentationLevelSetFunctionIF3IF3_Pointer const & r) const;
     bool operator>(itkSegmentationLevelSetFunctionIF3IF3_Pointer const & r) const;
     bool operator<=(itkSegmentationLevelSetFunctionIF3IF3_Pointer const & r) const;
     bool operator>=(itkSegmentationLevelSetFunctionIF3IF3_Pointer const & r) const;
     itkSegmentationLevelSetFunctionIF3IF3_Pointer & operator=(itkSegmentationLevelSetFunctionIF3IF3_Pointer const & r);
     itkSegmentationLevelSetFunctionIF3IF3_Pointer & operator=(itkSegmentationLevelSetFunctionIF3IF3 * r);
     itkSegmentationLevelSetFunctionIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


