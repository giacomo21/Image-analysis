# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkGeodesicActiveContourLevelSetImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkGeodesicActiveContourLevelSetImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkGeodesicActiveContourLevelSetImageFilterPython
            return _itkGeodesicActiveContourLevelSetImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkGeodesicActiveContourLevelSetImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkGeodesicActiveContourLevelSetImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkGeodesicActiveContourLevelSetImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkSegmentationLevelSetImageFilterPython
import itkSegmentationLevelSetFunctionPython
import itkFixedArrayPython
import itkLevelSetFunctionPython
import itkVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import vnl_vector_refPython
import itkFiniteDifferenceFunctionPython
import itkSizePython
import itkImagePython
import itkCovariantVectorPython
import ITKRegionsPython
import itkIndexPython
import itkOffsetPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkSparseFieldLevelSetImageFilterPython
import itkFiniteDifferenceImageFilterPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterAPython
def itkGeodesicActiveContourLevelSetImageFilterID3ID3D_New():
  return itkGeodesicActiveContourLevelSetImageFilterID3ID3D.New()

def itkGeodesicActiveContourLevelSetImageFilterIF3IF3F_New():
  return itkGeodesicActiveContourLevelSetImageFilterIF3IF3F.New()

def itkGeodesicActiveContourLevelSetImageFilterID2ID2D_New():
  return itkGeodesicActiveContourLevelSetImageFilterID2ID2D.New()

def itkGeodesicActiveContourLevelSetImageFilterIF2IF2F_New():
  return itkGeodesicActiveContourLevelSetImageFilterIF2IF2F.New()

class itkGeodesicActiveContourLevelSetImageFilterID2ID2D(itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterID2ID2D):
    """Proxy of C++ itkGeodesicActiveContourLevelSetImageFilterID2ID2D class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterID2ID2D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetDerivativeSigma(self, *args):
        """SetDerivativeSigma(self, float value)"""
        return _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterID2ID2D_SetDerivativeSigma(self, *args)

    def GetDerivativeSigma(self):
        """GetDerivativeSigma(self) -> float"""
        return _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterID2ID2D_GetDerivativeSigma(self)

    __swig_destroy__ = _itkGeodesicActiveContourLevelSetImageFilterPython.delete_itkGeodesicActiveContourLevelSetImageFilterID2ID2D
    def cast(*args):
        """cast(itkLightObject obj) -> itkGeodesicActiveContourLevelSetImageFilterID2ID2D"""
        return _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterID2ID2D_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkGeodesicActiveContourLevelSetImageFilterID2ID2D"""
        return _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterID2ID2D_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkGeodesicActiveContourLevelSetImageFilterID2ID2D
        
        Create a new object of the class itkGeodesicActiveContourLevelSetImageFilterID2ID2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkGeodesicActiveContourLevelSetImageFilterID2ID2D.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkGeodesicActiveContourLevelSetImageFilterID2ID2D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGeodesicActiveContourLevelSetImageFilterID2ID2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGeodesicActiveContourLevelSetImageFilterID2ID2D.SetDerivativeSigma = new_instancemethod(_itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterID2ID2D_SetDerivativeSigma,None,itkGeodesicActiveContourLevelSetImageFilterID2ID2D)
itkGeodesicActiveContourLevelSetImageFilterID2ID2D.GetDerivativeSigma = new_instancemethod(_itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterID2ID2D_GetDerivativeSigma,None,itkGeodesicActiveContourLevelSetImageFilterID2ID2D)
itkGeodesicActiveContourLevelSetImageFilterID2ID2D.GetPointer = new_instancemethod(_itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterID2ID2D_GetPointer,None,itkGeodesicActiveContourLevelSetImageFilterID2ID2D)
itkGeodesicActiveContourLevelSetImageFilterID2ID2D_swigregister = _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterID2ID2D_swigregister
itkGeodesicActiveContourLevelSetImageFilterID2ID2D_swigregister(itkGeodesicActiveContourLevelSetImageFilterID2ID2D)

def itkGeodesicActiveContourLevelSetImageFilterID2ID2D___New_orig__():
  """itkGeodesicActiveContourLevelSetImageFilterID2ID2D___New_orig__()"""
  return _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterID2ID2D___New_orig__()

def itkGeodesicActiveContourLevelSetImageFilterID2ID2D_cast(*args):
  """itkGeodesicActiveContourLevelSetImageFilterID2ID2D_cast(itkLightObject obj) -> itkGeodesicActiveContourLevelSetImageFilterID2ID2D"""
  return _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterID2ID2D_cast(*args)

class itkGeodesicActiveContourLevelSetImageFilterID3ID3D(itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterID3ID3D):
    """Proxy of C++ itkGeodesicActiveContourLevelSetImageFilterID3ID3D class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterID3ID3D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetDerivativeSigma(self, *args):
        """SetDerivativeSigma(self, float value)"""
        return _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterID3ID3D_SetDerivativeSigma(self, *args)

    def GetDerivativeSigma(self):
        """GetDerivativeSigma(self) -> float"""
        return _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterID3ID3D_GetDerivativeSigma(self)

    __swig_destroy__ = _itkGeodesicActiveContourLevelSetImageFilterPython.delete_itkGeodesicActiveContourLevelSetImageFilterID3ID3D
    def cast(*args):
        """cast(itkLightObject obj) -> itkGeodesicActiveContourLevelSetImageFilterID3ID3D"""
        return _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterID3ID3D_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkGeodesicActiveContourLevelSetImageFilterID3ID3D"""
        return _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterID3ID3D_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkGeodesicActiveContourLevelSetImageFilterID3ID3D
        
        Create a new object of the class itkGeodesicActiveContourLevelSetImageFilterID3ID3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkGeodesicActiveContourLevelSetImageFilterID3ID3D.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkGeodesicActiveContourLevelSetImageFilterID3ID3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGeodesicActiveContourLevelSetImageFilterID3ID3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGeodesicActiveContourLevelSetImageFilterID3ID3D.SetDerivativeSigma = new_instancemethod(_itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterID3ID3D_SetDerivativeSigma,None,itkGeodesicActiveContourLevelSetImageFilterID3ID3D)
itkGeodesicActiveContourLevelSetImageFilterID3ID3D.GetDerivativeSigma = new_instancemethod(_itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterID3ID3D_GetDerivativeSigma,None,itkGeodesicActiveContourLevelSetImageFilterID3ID3D)
itkGeodesicActiveContourLevelSetImageFilterID3ID3D.GetPointer = new_instancemethod(_itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterID3ID3D_GetPointer,None,itkGeodesicActiveContourLevelSetImageFilterID3ID3D)
itkGeodesicActiveContourLevelSetImageFilterID3ID3D_swigregister = _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterID3ID3D_swigregister
itkGeodesicActiveContourLevelSetImageFilterID3ID3D_swigregister(itkGeodesicActiveContourLevelSetImageFilterID3ID3D)

def itkGeodesicActiveContourLevelSetImageFilterID3ID3D___New_orig__():
  """itkGeodesicActiveContourLevelSetImageFilterID3ID3D___New_orig__()"""
  return _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterID3ID3D___New_orig__()

def itkGeodesicActiveContourLevelSetImageFilterID3ID3D_cast(*args):
  """itkGeodesicActiveContourLevelSetImageFilterID3ID3D_cast(itkLightObject obj) -> itkGeodesicActiveContourLevelSetImageFilterID3ID3D"""
  return _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterID3ID3D_cast(*args)

class itkGeodesicActiveContourLevelSetImageFilterIF2IF2F(itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F):
    """Proxy of C++ itkGeodesicActiveContourLevelSetImageFilterIF2IF2F class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterIF2IF2F___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetDerivativeSigma(self, *args):
        """SetDerivativeSigma(self, float value)"""
        return _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterIF2IF2F_SetDerivativeSigma(self, *args)

    def GetDerivativeSigma(self):
        """GetDerivativeSigma(self) -> float"""
        return _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterIF2IF2F_GetDerivativeSigma(self)

    __swig_destroy__ = _itkGeodesicActiveContourLevelSetImageFilterPython.delete_itkGeodesicActiveContourLevelSetImageFilterIF2IF2F
    def cast(*args):
        """cast(itkLightObject obj) -> itkGeodesicActiveContourLevelSetImageFilterIF2IF2F"""
        return _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterIF2IF2F_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkGeodesicActiveContourLevelSetImageFilterIF2IF2F"""
        return _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterIF2IF2F_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkGeodesicActiveContourLevelSetImageFilterIF2IF2F
        
        Create a new object of the class itkGeodesicActiveContourLevelSetImageFilterIF2IF2F and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkGeodesicActiveContourLevelSetImageFilterIF2IF2F.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkGeodesicActiveContourLevelSetImageFilterIF2IF2F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGeodesicActiveContourLevelSetImageFilterIF2IF2F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGeodesicActiveContourLevelSetImageFilterIF2IF2F.SetDerivativeSigma = new_instancemethod(_itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterIF2IF2F_SetDerivativeSigma,None,itkGeodesicActiveContourLevelSetImageFilterIF2IF2F)
itkGeodesicActiveContourLevelSetImageFilterIF2IF2F.GetDerivativeSigma = new_instancemethod(_itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterIF2IF2F_GetDerivativeSigma,None,itkGeodesicActiveContourLevelSetImageFilterIF2IF2F)
itkGeodesicActiveContourLevelSetImageFilterIF2IF2F.GetPointer = new_instancemethod(_itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterIF2IF2F_GetPointer,None,itkGeodesicActiveContourLevelSetImageFilterIF2IF2F)
itkGeodesicActiveContourLevelSetImageFilterIF2IF2F_swigregister = _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterIF2IF2F_swigregister
itkGeodesicActiveContourLevelSetImageFilterIF2IF2F_swigregister(itkGeodesicActiveContourLevelSetImageFilterIF2IF2F)

def itkGeodesicActiveContourLevelSetImageFilterIF2IF2F___New_orig__():
  """itkGeodesicActiveContourLevelSetImageFilterIF2IF2F___New_orig__()"""
  return _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterIF2IF2F___New_orig__()

def itkGeodesicActiveContourLevelSetImageFilterIF2IF2F_cast(*args):
  """itkGeodesicActiveContourLevelSetImageFilterIF2IF2F_cast(itkLightObject obj) -> itkGeodesicActiveContourLevelSetImageFilterIF2IF2F"""
  return _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterIF2IF2F_cast(*args)

class itkGeodesicActiveContourLevelSetImageFilterIF3IF3F(itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F):
    """Proxy of C++ itkGeodesicActiveContourLevelSetImageFilterIF3IF3F class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterIF3IF3F___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetDerivativeSigma(self, *args):
        """SetDerivativeSigma(self, float value)"""
        return _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterIF3IF3F_SetDerivativeSigma(self, *args)

    def GetDerivativeSigma(self):
        """GetDerivativeSigma(self) -> float"""
        return _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterIF3IF3F_GetDerivativeSigma(self)

    __swig_destroy__ = _itkGeodesicActiveContourLevelSetImageFilterPython.delete_itkGeodesicActiveContourLevelSetImageFilterIF3IF3F
    def cast(*args):
        """cast(itkLightObject obj) -> itkGeodesicActiveContourLevelSetImageFilterIF3IF3F"""
        return _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterIF3IF3F_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkGeodesicActiveContourLevelSetImageFilterIF3IF3F"""
        return _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterIF3IF3F_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkGeodesicActiveContourLevelSetImageFilterIF3IF3F
        
        Create a new object of the class itkGeodesicActiveContourLevelSetImageFilterIF3IF3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkGeodesicActiveContourLevelSetImageFilterIF3IF3F.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkGeodesicActiveContourLevelSetImageFilterIF3IF3F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGeodesicActiveContourLevelSetImageFilterIF3IF3F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGeodesicActiveContourLevelSetImageFilterIF3IF3F.SetDerivativeSigma = new_instancemethod(_itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterIF3IF3F_SetDerivativeSigma,None,itkGeodesicActiveContourLevelSetImageFilterIF3IF3F)
itkGeodesicActiveContourLevelSetImageFilterIF3IF3F.GetDerivativeSigma = new_instancemethod(_itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterIF3IF3F_GetDerivativeSigma,None,itkGeodesicActiveContourLevelSetImageFilterIF3IF3F)
itkGeodesicActiveContourLevelSetImageFilterIF3IF3F.GetPointer = new_instancemethod(_itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterIF3IF3F_GetPointer,None,itkGeodesicActiveContourLevelSetImageFilterIF3IF3F)
itkGeodesicActiveContourLevelSetImageFilterIF3IF3F_swigregister = _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterIF3IF3F_swigregister
itkGeodesicActiveContourLevelSetImageFilterIF3IF3F_swigregister(itkGeodesicActiveContourLevelSetImageFilterIF3IF3F)

def itkGeodesicActiveContourLevelSetImageFilterIF3IF3F___New_orig__():
  """itkGeodesicActiveContourLevelSetImageFilterIF3IF3F___New_orig__()"""
  return _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterIF3IF3F___New_orig__()

def itkGeodesicActiveContourLevelSetImageFilterIF3IF3F_cast(*args):
  """itkGeodesicActiveContourLevelSetImageFilterIF3IF3F_cast(itkLightObject obj) -> itkGeodesicActiveContourLevelSetImageFilterIF3IF3F"""
  return _itkGeodesicActiveContourLevelSetImageFilterPython.itkGeodesicActiveContourLevelSetImageFilterIF3IF3F_cast(*args)



