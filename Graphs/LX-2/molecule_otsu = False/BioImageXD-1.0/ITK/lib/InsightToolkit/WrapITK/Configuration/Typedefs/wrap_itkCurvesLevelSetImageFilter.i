// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkCurvesLevelSetImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkCurvesLevelSetImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkCurvesLevelSetImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkCurvesLevelSetImageFilterJava
#endif
#ifdef SWIGLUA
%module itkCurvesLevelSetImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkCurvesLevelSetImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkCurvesLevelSetImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkCurvesLevelSetImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkCurvesLevelSetImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkCurvesLevelSetImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkCurvesLevelSetImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkCurvesLevelSetImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkCurvesLevelSetImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkCurvesLevelSetImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkCurvesLevelSetImageFilterPython
#endif
#ifdef SWIGR
%module itkCurvesLevelSetImageFilterR
#endif
#ifdef SWIGRUBY
%module itkCurvesLevelSetImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkCurvesLevelSetImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkCurvesLevelSetImageFilterTcl
#endif
#ifdef SWIGXML
%module itkCurvesLevelSetImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Numerics.includes"
#include "LevelSet.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkSegmentationLevelSetImageFilter.i


%include itk.i
%include wrap_itkCurvesLevelSetImageFilter_ext.i


 class itkCurvesLevelSetImageFilterID2ID2D : public itkSegmentationLevelSetImageFilterID2ID2D {
   public:
     enum  {  OutputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkCurvesLevelSetImageFilterID2ID2D_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetDerivativeSigma(float value);
     float GetDerivativeSigma() const;
   private:
   protected:
     ~itkCurvesLevelSetImageFilterID2ID2D();
     itkCurvesLevelSetImageFilterID2ID2D();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     itkCurvesLevelSetImageFilterID2ID2D(itkCurvesLevelSetImageFilterID2ID2D const & arg0);
     void operator=(itkCurvesLevelSetImageFilterID2ID2D const & arg0);
     virtual void GenerateData();
 };


 class itkCurvesLevelSetImageFilterID2ID2D_Pointer {
   public:
     itkCurvesLevelSetImageFilterID2ID2D_Pointer();
     itkCurvesLevelSetImageFilterID2ID2D_Pointer(itkCurvesLevelSetImageFilterID2ID2D_Pointer const & p);
     itkCurvesLevelSetImageFilterID2ID2D_Pointer(itkCurvesLevelSetImageFilterID2ID2D * p);
     ~itkCurvesLevelSetImageFilterID2ID2D_Pointer();
     itkCurvesLevelSetImageFilterID2ID2D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkCurvesLevelSetImageFilterID2ID2D * GetPointer() const;
     bool operator<(itkCurvesLevelSetImageFilterID2ID2D_Pointer const & r) const;
     bool operator>(itkCurvesLevelSetImageFilterID2ID2D_Pointer const & r) const;
     bool operator<=(itkCurvesLevelSetImageFilterID2ID2D_Pointer const & r) const;
     bool operator>=(itkCurvesLevelSetImageFilterID2ID2D_Pointer const & r) const;
     itkCurvesLevelSetImageFilterID2ID2D_Pointer & operator=(itkCurvesLevelSetImageFilterID2ID2D_Pointer const & r);
     itkCurvesLevelSetImageFilterID2ID2D_Pointer & operator=(itkCurvesLevelSetImageFilterID2ID2D * r);
     itkCurvesLevelSetImageFilterID2ID2D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkCurvesLevelSetImageFilterID3ID3D : public itkSegmentationLevelSetImageFilterID3ID3D {
   public:
     enum  {  OutputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkCurvesLevelSetImageFilterID3ID3D_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetDerivativeSigma(float value);
     float GetDerivativeSigma() const;
   private:
   protected:
     ~itkCurvesLevelSetImageFilterID3ID3D();
     itkCurvesLevelSetImageFilterID3ID3D();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     itkCurvesLevelSetImageFilterID3ID3D(itkCurvesLevelSetImageFilterID3ID3D const & arg0);
     void operator=(itkCurvesLevelSetImageFilterID3ID3D const & arg0);
     virtual void GenerateData();
 };


 class itkCurvesLevelSetImageFilterID3ID3D_Pointer {
   public:
     itkCurvesLevelSetImageFilterID3ID3D_Pointer();
     itkCurvesLevelSetImageFilterID3ID3D_Pointer(itkCurvesLevelSetImageFilterID3ID3D_Pointer const & p);
     itkCurvesLevelSetImageFilterID3ID3D_Pointer(itkCurvesLevelSetImageFilterID3ID3D * p);
     ~itkCurvesLevelSetImageFilterID3ID3D_Pointer();
     itkCurvesLevelSetImageFilterID3ID3D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkCurvesLevelSetImageFilterID3ID3D * GetPointer() const;
     bool operator<(itkCurvesLevelSetImageFilterID3ID3D_Pointer const & r) const;
     bool operator>(itkCurvesLevelSetImageFilterID3ID3D_Pointer const & r) const;
     bool operator<=(itkCurvesLevelSetImageFilterID3ID3D_Pointer const & r) const;
     bool operator>=(itkCurvesLevelSetImageFilterID3ID3D_Pointer const & r) const;
     itkCurvesLevelSetImageFilterID3ID3D_Pointer & operator=(itkCurvesLevelSetImageFilterID3ID3D_Pointer const & r);
     itkCurvesLevelSetImageFilterID3ID3D_Pointer & operator=(itkCurvesLevelSetImageFilterID3ID3D * r);
     itkCurvesLevelSetImageFilterID3ID3D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkCurvesLevelSetImageFilterIF2IF2F : public itkSegmentationLevelSetImageFilterIF2IF2F {
   public:
     enum  {  OutputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkCurvesLevelSetImageFilterIF2IF2F_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetDerivativeSigma(float value);
     float GetDerivativeSigma() const;
   private:
   protected:
     ~itkCurvesLevelSetImageFilterIF2IF2F();
     itkCurvesLevelSetImageFilterIF2IF2F();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     itkCurvesLevelSetImageFilterIF2IF2F(itkCurvesLevelSetImageFilterIF2IF2F const & arg0);
     void operator=(itkCurvesLevelSetImageFilterIF2IF2F const & arg0);
     virtual void GenerateData();
 };


 class itkCurvesLevelSetImageFilterIF2IF2F_Pointer {
   public:
     itkCurvesLevelSetImageFilterIF2IF2F_Pointer();
     itkCurvesLevelSetImageFilterIF2IF2F_Pointer(itkCurvesLevelSetImageFilterIF2IF2F_Pointer const & p);
     itkCurvesLevelSetImageFilterIF2IF2F_Pointer(itkCurvesLevelSetImageFilterIF2IF2F * p);
     ~itkCurvesLevelSetImageFilterIF2IF2F_Pointer();
     itkCurvesLevelSetImageFilterIF2IF2F * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkCurvesLevelSetImageFilterIF2IF2F * GetPointer() const;
     bool operator<(itkCurvesLevelSetImageFilterIF2IF2F_Pointer const & r) const;
     bool operator>(itkCurvesLevelSetImageFilterIF2IF2F_Pointer const & r) const;
     bool operator<=(itkCurvesLevelSetImageFilterIF2IF2F_Pointer const & r) const;
     bool operator>=(itkCurvesLevelSetImageFilterIF2IF2F_Pointer const & r) const;
     itkCurvesLevelSetImageFilterIF2IF2F_Pointer & operator=(itkCurvesLevelSetImageFilterIF2IF2F_Pointer const & r);
     itkCurvesLevelSetImageFilterIF2IF2F_Pointer & operator=(itkCurvesLevelSetImageFilterIF2IF2F * r);
     itkCurvesLevelSetImageFilterIF2IF2F * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkCurvesLevelSetImageFilterIF3IF3F : public itkSegmentationLevelSetImageFilterIF3IF3F {
   public:
     enum  {  OutputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkCurvesLevelSetImageFilterIF3IF3F_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetDerivativeSigma(float value);
     float GetDerivativeSigma() const;
   private:
   protected:
     ~itkCurvesLevelSetImageFilterIF3IF3F();
     itkCurvesLevelSetImageFilterIF3IF3F();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     itkCurvesLevelSetImageFilterIF3IF3F(itkCurvesLevelSetImageFilterIF3IF3F const & arg0);
     void operator=(itkCurvesLevelSetImageFilterIF3IF3F const & arg0);
     virtual void GenerateData();
 };


 class itkCurvesLevelSetImageFilterIF3IF3F_Pointer {
   public:
     itkCurvesLevelSetImageFilterIF3IF3F_Pointer();
     itkCurvesLevelSetImageFilterIF3IF3F_Pointer(itkCurvesLevelSetImageFilterIF3IF3F_Pointer const & p);
     itkCurvesLevelSetImageFilterIF3IF3F_Pointer(itkCurvesLevelSetImageFilterIF3IF3F * p);
     ~itkCurvesLevelSetImageFilterIF3IF3F_Pointer();
     itkCurvesLevelSetImageFilterIF3IF3F * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkCurvesLevelSetImageFilterIF3IF3F * GetPointer() const;
     bool operator<(itkCurvesLevelSetImageFilterIF3IF3F_Pointer const & r) const;
     bool operator>(itkCurvesLevelSetImageFilterIF3IF3F_Pointer const & r) const;
     bool operator<=(itkCurvesLevelSetImageFilterIF3IF3F_Pointer const & r) const;
     bool operator>=(itkCurvesLevelSetImageFilterIF3IF3F_Pointer const & r) const;
     itkCurvesLevelSetImageFilterIF3IF3F_Pointer & operator=(itkCurvesLevelSetImageFilterIF3IF3F_Pointer const & r);
     itkCurvesLevelSetImageFilterIF3IF3F_Pointer & operator=(itkCurvesLevelSetImageFilterIF3IF3F * r);
     itkCurvesLevelSetImageFilterIF3IF3F * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


