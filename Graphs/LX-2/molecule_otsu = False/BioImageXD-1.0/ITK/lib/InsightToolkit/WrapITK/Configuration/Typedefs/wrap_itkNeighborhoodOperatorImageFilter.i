// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkNeighborhoodOperatorImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkNeighborhoodOperatorImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkNeighborhoodOperatorImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkNeighborhoodOperatorImageFilterJava
#endif
#ifdef SWIGLUA
%module itkNeighborhoodOperatorImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkNeighborhoodOperatorImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkNeighborhoodOperatorImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkNeighborhoodOperatorImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkNeighborhoodOperatorImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkNeighborhoodOperatorImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkNeighborhoodOperatorImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkNeighborhoodOperatorImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkNeighborhoodOperatorImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkNeighborhoodOperatorImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkNeighborhoodOperatorImageFilterPython
#endif
#ifdef SWIGR
%module itkNeighborhoodOperatorImageFilterR
#endif
#ifdef SWIGRUBY
%module itkNeighborhoodOperatorImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkNeighborhoodOperatorImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkNeighborhoodOperatorImageFilterTcl
#endif
#ifdef SWIGXML
%module itkNeighborhoodOperatorImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
%}


%{
%}




%import wrap_itkNeighborhood.i
%import wrap_ITKRegions.i
%import wrap_itkImageToImageFilterA.i
%import wrap_itkImageBoundaryCondition.i
%import wrap_ITKCommonBase.i


%include itk.i
%include wrap_itkNeighborhoodOperatorImageFilter_ext.i


 class itkNeighborhoodOperatorImageFilterID2ID2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputImageDimension = 2 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  OperatorConvertibleToOutputCheck = 1 };
     enum  {  InputConvertibleToOperatorCheck = 1 };
     enum  {  OperatorMultiplyOperatorCheck = 1 };
     enum  {  OperatorAdditiveOperatorsCheck = 1 };
     static itk::SmartPointer< itk::NeighborhoodOperatorImageFilter< itk::Image< double, 2u >, itk::Image< double, 2u >, double > > New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOperator(itkNeighborhoodD2 const & p);
     itkNeighborhoodD2 const & GetOperator() const;
     void OverrideBoundaryCondition(itkImageBoundaryConditionID2 * const i);
     itkImageBoundaryConditionID2 * GetBoundaryCondition();
     virtual void GenerateInputRequestedRegion();
   private:
     itkNeighborhoodOperatorImageFilterID2ID2(itkNeighborhoodOperatorImageFilterID2ID2 const & arg0);
     void operator=(itkNeighborhoodOperatorImageFilterID2ID2 const & arg0);
   protected:
     itkNeighborhoodOperatorImageFilterID2ID2();
     ~itkNeighborhoodOperatorImageFilterID2ID2();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkNeighborhoodOperatorImageFilterID3ID3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputImageDimension = 3 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  OperatorConvertibleToOutputCheck = 1 };
     enum  {  InputConvertibleToOperatorCheck = 1 };
     enum  {  OperatorMultiplyOperatorCheck = 1 };
     enum  {  OperatorAdditiveOperatorsCheck = 1 };
     static itk::SmartPointer< itk::NeighborhoodOperatorImageFilter< itk::Image< double, 3u >, itk::Image< double, 3u >, double > > New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOperator(itkNeighborhoodD3 const & p);
     itkNeighborhoodD3 const & GetOperator() const;
     void OverrideBoundaryCondition(itkImageBoundaryConditionID3 * const i);
     itkImageBoundaryConditionID3 * GetBoundaryCondition();
     virtual void GenerateInputRequestedRegion();
   private:
     itkNeighborhoodOperatorImageFilterID3ID3(itkNeighborhoodOperatorImageFilterID3ID3 const & arg0);
     void operator=(itkNeighborhoodOperatorImageFilterID3ID3 const & arg0);
   protected:
     itkNeighborhoodOperatorImageFilterID3ID3();
     ~itkNeighborhoodOperatorImageFilterID3ID3();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkNeighborhoodOperatorImageFilterIF2IF2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputImageDimension = 2 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  OperatorConvertibleToOutputCheck = 1 };
     enum  {  InputConvertibleToOperatorCheck = 1 };
     enum  {  OperatorMultiplyOperatorCheck = 1 };
     enum  {  OperatorAdditiveOperatorsCheck = 1 };
     static itk::SmartPointer< itk::NeighborhoodOperatorImageFilter< itk::Image< float, 2u >, itk::Image< float, 2u >, float > > New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOperator(itkNeighborhoodF2 const & p);
     itkNeighborhoodF2 const & GetOperator() const;
     void OverrideBoundaryCondition(itkImageBoundaryConditionIF2 * const i);
     itkImageBoundaryConditionIF2 * GetBoundaryCondition();
     virtual void GenerateInputRequestedRegion();
   private:
     itkNeighborhoodOperatorImageFilterIF2IF2(itkNeighborhoodOperatorImageFilterIF2IF2 const & arg0);
     void operator=(itkNeighborhoodOperatorImageFilterIF2IF2 const & arg0);
   protected:
     itkNeighborhoodOperatorImageFilterIF2IF2();
     ~itkNeighborhoodOperatorImageFilterIF2IF2();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkNeighborhoodOperatorImageFilterIF3IF3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputImageDimension = 3 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  OperatorConvertibleToOutputCheck = 1 };
     enum  {  InputConvertibleToOperatorCheck = 1 };
     enum  {  OperatorMultiplyOperatorCheck = 1 };
     enum  {  OperatorAdditiveOperatorsCheck = 1 };
     static itk::SmartPointer< itk::NeighborhoodOperatorImageFilter< itk::Image< float, 3u >, itk::Image< float, 3u >, float > > New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOperator(itkNeighborhoodF3 const & p);
     itkNeighborhoodF3 const & GetOperator() const;
     void OverrideBoundaryCondition(itkImageBoundaryConditionIF3 * const i);
     itkImageBoundaryConditionIF3 * GetBoundaryCondition();
     virtual void GenerateInputRequestedRegion();
   private:
     itkNeighborhoodOperatorImageFilterIF3IF3(itkNeighborhoodOperatorImageFilterIF3IF3 const & arg0);
     void operator=(itkNeighborhoodOperatorImageFilterIF3IF3 const & arg0);
   protected:
     itkNeighborhoodOperatorImageFilterIF3IF3();
     ~itkNeighborhoodOperatorImageFilterIF3IF3();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkNeighborhoodOperatorImageFilterIUC2IUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputImageDimension = 2 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  OperatorConvertibleToOutputCheck = 1 };
     enum  {  InputConvertibleToOperatorCheck = 1 };
     enum  {  OperatorMultiplyOperatorCheck = 1 };
     enum  {  OperatorAdditiveOperatorsCheck = 1 };
     static itk::SmartPointer< itk::NeighborhoodOperatorImageFilter< itk::Image< unsigned char, 2u >, itk::Image< unsigned char, 2u >, unsigned char > > New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOperator(itkNeighborhoodUC2 const & p);
     itkNeighborhoodUC2 const & GetOperator() const;
     void OverrideBoundaryCondition(itkImageBoundaryConditionIUC2 * const i);
     itkImageBoundaryConditionIUC2 * GetBoundaryCondition();
     virtual void GenerateInputRequestedRegion();
   private:
     itkNeighborhoodOperatorImageFilterIUC2IUC2(itkNeighborhoodOperatorImageFilterIUC2IUC2 const & arg0);
     void operator=(itkNeighborhoodOperatorImageFilterIUC2IUC2 const & arg0);
   protected:
     itkNeighborhoodOperatorImageFilterIUC2IUC2();
     ~itkNeighborhoodOperatorImageFilterIUC2IUC2();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkNeighborhoodOperatorImageFilterIUC3IUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputImageDimension = 3 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  OperatorConvertibleToOutputCheck = 1 };
     enum  {  InputConvertibleToOperatorCheck = 1 };
     enum  {  OperatorMultiplyOperatorCheck = 1 };
     enum  {  OperatorAdditiveOperatorsCheck = 1 };
     static itk::SmartPointer< itk::NeighborhoodOperatorImageFilter< itk::Image< unsigned char, 3u >, itk::Image< unsigned char, 3u >, unsigned char > > New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOperator(itkNeighborhoodUC3 const & p);
     itkNeighborhoodUC3 const & GetOperator() const;
     void OverrideBoundaryCondition(itkImageBoundaryConditionIUC3 * const i);
     itkImageBoundaryConditionIUC3 * GetBoundaryCondition();
     virtual void GenerateInputRequestedRegion();
   private:
     itkNeighborhoodOperatorImageFilterIUC3IUC3(itkNeighborhoodOperatorImageFilterIUC3IUC3 const & arg0);
     void operator=(itkNeighborhoodOperatorImageFilterIUC3IUC3 const & arg0);
   protected:
     itkNeighborhoodOperatorImageFilterIUC3IUC3();
     ~itkNeighborhoodOperatorImageFilterIUC3IUC3();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkNeighborhoodOperatorImageFilterIUL2IUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputImageDimension = 2 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  OperatorConvertibleToOutputCheck = 1 };
     enum  {  InputConvertibleToOperatorCheck = 1 };
     enum  {  OperatorMultiplyOperatorCheck = 1 };
     enum  {  OperatorAdditiveOperatorsCheck = 1 };
     static itk::SmartPointer< itk::NeighborhoodOperatorImageFilter< itk::Image< unsigned long, 2u >, itk::Image< unsigned long, 2u >, unsigned long > > New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOperator(itkNeighborhoodUL2 const & p);
     itkNeighborhoodUL2 const & GetOperator() const;
     void OverrideBoundaryCondition(itkImageBoundaryConditionIUL2 * const i);
     itkImageBoundaryConditionIUL2 * GetBoundaryCondition();
     virtual void GenerateInputRequestedRegion();
   private:
     itkNeighborhoodOperatorImageFilterIUL2IUL2(itkNeighborhoodOperatorImageFilterIUL2IUL2 const & arg0);
     void operator=(itkNeighborhoodOperatorImageFilterIUL2IUL2 const & arg0);
   protected:
     itkNeighborhoodOperatorImageFilterIUL2IUL2();
     ~itkNeighborhoodOperatorImageFilterIUL2IUL2();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkNeighborhoodOperatorImageFilterIUL3IUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputImageDimension = 3 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  OperatorConvertibleToOutputCheck = 1 };
     enum  {  InputConvertibleToOperatorCheck = 1 };
     enum  {  OperatorMultiplyOperatorCheck = 1 };
     enum  {  OperatorAdditiveOperatorsCheck = 1 };
     static itk::SmartPointer< itk::NeighborhoodOperatorImageFilter< itk::Image< unsigned long, 3u >, itk::Image< unsigned long, 3u >, unsigned long > > New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOperator(itkNeighborhoodUL3 const & p);
     itkNeighborhoodUL3 const & GetOperator() const;
     void OverrideBoundaryCondition(itkImageBoundaryConditionIUL3 * const i);
     itkImageBoundaryConditionIUL3 * GetBoundaryCondition();
     virtual void GenerateInputRequestedRegion();
   private:
     itkNeighborhoodOperatorImageFilterIUL3IUL3(itkNeighborhoodOperatorImageFilterIUL3IUL3 const & arg0);
     void operator=(itkNeighborhoodOperatorImageFilterIUL3IUL3 const & arg0);
   protected:
     itkNeighborhoodOperatorImageFilterIUL3IUL3();
     ~itkNeighborhoodOperatorImageFilterIUL3IUL3();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkNeighborhoodOperatorImageFilterIUS2IUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputImageDimension = 2 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  OperatorConvertibleToOutputCheck = 1 };
     enum  {  InputConvertibleToOperatorCheck = 1 };
     enum  {  OperatorMultiplyOperatorCheck = 1 };
     enum  {  OperatorAdditiveOperatorsCheck = 1 };
     static itk::SmartPointer< itk::NeighborhoodOperatorImageFilter< itk::Image< unsigned short, 2u >, itk::Image< unsigned short, 2u >, unsigned short > > New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOperator(itkNeighborhoodUS2 const & p);
     itkNeighborhoodUS2 const & GetOperator() const;
     void OverrideBoundaryCondition(itkImageBoundaryConditionIUS2 * const i);
     itkImageBoundaryConditionIUS2 * GetBoundaryCondition();
     virtual void GenerateInputRequestedRegion();
   private:
     itkNeighborhoodOperatorImageFilterIUS2IUS2(itkNeighborhoodOperatorImageFilterIUS2IUS2 const & arg0);
     void operator=(itkNeighborhoodOperatorImageFilterIUS2IUS2 const & arg0);
   protected:
     itkNeighborhoodOperatorImageFilterIUS2IUS2();
     ~itkNeighborhoodOperatorImageFilterIUS2IUS2();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkNeighborhoodOperatorImageFilterIUS3IUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputImageDimension = 3 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  OperatorConvertibleToOutputCheck = 1 };
     enum  {  InputConvertibleToOperatorCheck = 1 };
     enum  {  OperatorMultiplyOperatorCheck = 1 };
     enum  {  OperatorAdditiveOperatorsCheck = 1 };
     static itk::SmartPointer< itk::NeighborhoodOperatorImageFilter< itk::Image< unsigned short, 3u >, itk::Image< unsigned short, 3u >, unsigned short > > New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOperator(itkNeighborhoodUS3 const & p);
     itkNeighborhoodUS3 const & GetOperator() const;
     void OverrideBoundaryCondition(itkImageBoundaryConditionIUS3 * const i);
     itkImageBoundaryConditionIUS3 * GetBoundaryCondition();
     virtual void GenerateInputRequestedRegion();
   private:
     itkNeighborhoodOperatorImageFilterIUS3IUS3(itkNeighborhoodOperatorImageFilterIUS3IUS3 const & arg0);
     void operator=(itkNeighborhoodOperatorImageFilterIUS3IUS3 const & arg0);
   protected:
     itkNeighborhoodOperatorImageFilterIUS3IUS3();
     ~itkNeighborhoodOperatorImageFilterIUS3IUS3();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


