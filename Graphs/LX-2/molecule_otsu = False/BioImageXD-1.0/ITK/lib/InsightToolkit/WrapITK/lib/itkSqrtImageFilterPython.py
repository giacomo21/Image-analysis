# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkSqrtImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkSqrtImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkSqrtImageFilterPython
            return _itkSqrtImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkSqrtImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkSqrtImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkSqrtImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterAPython
def itkSqrtImageFilterID3ID3_New():
  return itkSqrtImageFilterID3ID3.New()

def itkSqrtImageFilterID3ID3_Superclass_New():
  return itkSqrtImageFilterID3ID3_Superclass.New()

def itkSqrtImageFilterID2ID2_New():
  return itkSqrtImageFilterID2ID2.New()

def itkSqrtImageFilterID2ID2_Superclass_New():
  return itkSqrtImageFilterID2ID2_Superclass.New()

def itkSqrtImageFilterIF3IF3_New():
  return itkSqrtImageFilterIF3IF3.New()

def itkSqrtImageFilterIF3IF3_Superclass_New():
  return itkSqrtImageFilterIF3IF3_Superclass.New()

def itkSqrtImageFilterIF2IF2_New():
  return itkSqrtImageFilterIF2IF2.New()

def itkSqrtImageFilterIF2IF2_Superclass_New():
  return itkSqrtImageFilterIF2IF2_Superclass.New()

def itkSqrtImageFilterIUS3IUS3_New():
  return itkSqrtImageFilterIUS3IUS3.New()

def itkSqrtImageFilterIUS3IUS3_Superclass_New():
  return itkSqrtImageFilterIUS3IUS3_Superclass.New()

def itkSqrtImageFilterIUS2IUS2_New():
  return itkSqrtImageFilterIUS2IUS2.New()

def itkSqrtImageFilterIUS2IUS2_Superclass_New():
  return itkSqrtImageFilterIUS2IUS2_Superclass.New()

def itkSqrtImageFilterIUL3IUL3_New():
  return itkSqrtImageFilterIUL3IUL3.New()

def itkSqrtImageFilterIUL3IUL3_Superclass_New():
  return itkSqrtImageFilterIUL3IUL3_Superclass.New()

def itkSqrtImageFilterIUL2IUL2_New():
  return itkSqrtImageFilterIUL2IUL2.New()

def itkSqrtImageFilterIUL2IUL2_Superclass_New():
  return itkSqrtImageFilterIUL2IUL2_Superclass.New()

def itkSqrtImageFilterIUC3IUC3_New():
  return itkSqrtImageFilterIUC3IUC3.New()

def itkSqrtImageFilterIUC3IUC3_Superclass_New():
  return itkSqrtImageFilterIUC3IUC3_Superclass.New()

def itkSqrtImageFilterIUC2IUC2_New():
  return itkSqrtImageFilterIUC2IUC2.New()

def itkSqrtImageFilterIUC2IUC2_Superclass_New():
  return itkSqrtImageFilterIUC2IUC2_Superclass.New()

class itkSqrtImageFilterID2ID2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    """Proxy of C++ itkSqrtImageFilterID2ID2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterID2ID2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Sqrt<(double,double)>
        GetFunctor(self) -> itk::Function::Sqrt<(double,double)>
        """
        return _itkSqrtImageFilterPython.itkSqrtImageFilterID2ID2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Sqrt<(double,double)> functor)"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterID2ID2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkSqrtImageFilterPython.delete_itkSqrtImageFilterID2ID2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSqrtImageFilterID2ID2_Superclass"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterID2ID2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSqrtImageFilterID2ID2_Superclass"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterID2ID2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSqrtImageFilterID2ID2_Superclass
        
        Create a new object of the class itkSqrtImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSqrtImageFilterID2ID2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSqrtImageFilterID2ID2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSqrtImageFilterID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSqrtImageFilterID2ID2_Superclass.GetFunctor = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterID2ID2_Superclass_GetFunctor,None,itkSqrtImageFilterID2ID2_Superclass)
itkSqrtImageFilterID2ID2_Superclass.SetFunctor = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterID2ID2_Superclass_SetFunctor,None,itkSqrtImageFilterID2ID2_Superclass)
itkSqrtImageFilterID2ID2_Superclass.GetPointer = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterID2ID2_Superclass_GetPointer,None,itkSqrtImageFilterID2ID2_Superclass)
itkSqrtImageFilterID2ID2_Superclass_swigregister = _itkSqrtImageFilterPython.itkSqrtImageFilterID2ID2_Superclass_swigregister
itkSqrtImageFilterID2ID2_Superclass_swigregister(itkSqrtImageFilterID2ID2_Superclass)

def itkSqrtImageFilterID2ID2_Superclass___New_orig__():
  """itkSqrtImageFilterID2ID2_Superclass___New_orig__()"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterID2ID2_Superclass___New_orig__()

def itkSqrtImageFilterID2ID2_Superclass_cast(*args):
  """itkSqrtImageFilterID2ID2_Superclass_cast(itkLightObject obj) -> itkSqrtImageFilterID2ID2_Superclass"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterID2ID2_Superclass_cast(*args)

class itkSqrtImageFilterID3ID3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    """Proxy of C++ itkSqrtImageFilterID3ID3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterID3ID3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Sqrt<(double,double)>
        GetFunctor(self) -> itk::Function::Sqrt<(double,double)>
        """
        return _itkSqrtImageFilterPython.itkSqrtImageFilterID3ID3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Sqrt<(double,double)> functor)"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterID3ID3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkSqrtImageFilterPython.delete_itkSqrtImageFilterID3ID3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSqrtImageFilterID3ID3_Superclass"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterID3ID3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSqrtImageFilterID3ID3_Superclass"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterID3ID3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSqrtImageFilterID3ID3_Superclass
        
        Create a new object of the class itkSqrtImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSqrtImageFilterID3ID3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSqrtImageFilterID3ID3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSqrtImageFilterID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSqrtImageFilterID3ID3_Superclass.GetFunctor = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterID3ID3_Superclass_GetFunctor,None,itkSqrtImageFilterID3ID3_Superclass)
itkSqrtImageFilterID3ID3_Superclass.SetFunctor = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterID3ID3_Superclass_SetFunctor,None,itkSqrtImageFilterID3ID3_Superclass)
itkSqrtImageFilterID3ID3_Superclass.GetPointer = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterID3ID3_Superclass_GetPointer,None,itkSqrtImageFilterID3ID3_Superclass)
itkSqrtImageFilterID3ID3_Superclass_swigregister = _itkSqrtImageFilterPython.itkSqrtImageFilterID3ID3_Superclass_swigregister
itkSqrtImageFilterID3ID3_Superclass_swigregister(itkSqrtImageFilterID3ID3_Superclass)

def itkSqrtImageFilterID3ID3_Superclass___New_orig__():
  """itkSqrtImageFilterID3ID3_Superclass___New_orig__()"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterID3ID3_Superclass___New_orig__()

def itkSqrtImageFilterID3ID3_Superclass_cast(*args):
  """itkSqrtImageFilterID3ID3_Superclass_cast(itkLightObject obj) -> itkSqrtImageFilterID3ID3_Superclass"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterID3ID3_Superclass_cast(*args)

class itkSqrtImageFilterIF2IF2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    """Proxy of C++ itkSqrtImageFilterIF2IF2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIF2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Sqrt<(float,float)>
        GetFunctor(self) -> itk::Function::Sqrt<(float,float)>
        """
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIF2IF2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Sqrt<(float,float)> functor)"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIF2IF2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkSqrtImageFilterPython.delete_itkSqrtImageFilterIF2IF2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSqrtImageFilterIF2IF2_Superclass"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIF2IF2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSqrtImageFilterIF2IF2_Superclass"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIF2IF2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSqrtImageFilterIF2IF2_Superclass
        
        Create a new object of the class itkSqrtImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSqrtImageFilterIF2IF2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSqrtImageFilterIF2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSqrtImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSqrtImageFilterIF2IF2_Superclass.GetFunctor = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIF2IF2_Superclass_GetFunctor,None,itkSqrtImageFilterIF2IF2_Superclass)
itkSqrtImageFilterIF2IF2_Superclass.SetFunctor = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIF2IF2_Superclass_SetFunctor,None,itkSqrtImageFilterIF2IF2_Superclass)
itkSqrtImageFilterIF2IF2_Superclass.GetPointer = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIF2IF2_Superclass_GetPointer,None,itkSqrtImageFilterIF2IF2_Superclass)
itkSqrtImageFilterIF2IF2_Superclass_swigregister = _itkSqrtImageFilterPython.itkSqrtImageFilterIF2IF2_Superclass_swigregister
itkSqrtImageFilterIF2IF2_Superclass_swigregister(itkSqrtImageFilterIF2IF2_Superclass)

def itkSqrtImageFilterIF2IF2_Superclass___New_orig__():
  """itkSqrtImageFilterIF2IF2_Superclass___New_orig__()"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIF2IF2_Superclass___New_orig__()

def itkSqrtImageFilterIF2IF2_Superclass_cast(*args):
  """itkSqrtImageFilterIF2IF2_Superclass_cast(itkLightObject obj) -> itkSqrtImageFilterIF2IF2_Superclass"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIF2IF2_Superclass_cast(*args)

class itkSqrtImageFilterIF3IF3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    """Proxy of C++ itkSqrtImageFilterIF3IF3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIF3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Sqrt<(float,float)>
        GetFunctor(self) -> itk::Function::Sqrt<(float,float)>
        """
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIF3IF3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Sqrt<(float,float)> functor)"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIF3IF3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkSqrtImageFilterPython.delete_itkSqrtImageFilterIF3IF3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSqrtImageFilterIF3IF3_Superclass"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIF3IF3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSqrtImageFilterIF3IF3_Superclass"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIF3IF3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSqrtImageFilterIF3IF3_Superclass
        
        Create a new object of the class itkSqrtImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSqrtImageFilterIF3IF3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSqrtImageFilterIF3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSqrtImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSqrtImageFilterIF3IF3_Superclass.GetFunctor = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIF3IF3_Superclass_GetFunctor,None,itkSqrtImageFilterIF3IF3_Superclass)
itkSqrtImageFilterIF3IF3_Superclass.SetFunctor = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIF3IF3_Superclass_SetFunctor,None,itkSqrtImageFilterIF3IF3_Superclass)
itkSqrtImageFilterIF3IF3_Superclass.GetPointer = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIF3IF3_Superclass_GetPointer,None,itkSqrtImageFilterIF3IF3_Superclass)
itkSqrtImageFilterIF3IF3_Superclass_swigregister = _itkSqrtImageFilterPython.itkSqrtImageFilterIF3IF3_Superclass_swigregister
itkSqrtImageFilterIF3IF3_Superclass_swigregister(itkSqrtImageFilterIF3IF3_Superclass)

def itkSqrtImageFilterIF3IF3_Superclass___New_orig__():
  """itkSqrtImageFilterIF3IF3_Superclass___New_orig__()"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIF3IF3_Superclass___New_orig__()

def itkSqrtImageFilterIF3IF3_Superclass_cast(*args):
  """itkSqrtImageFilterIF3IF3_Superclass_cast(itkLightObject obj) -> itkSqrtImageFilterIF3IF3_Superclass"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIF3IF3_Superclass_cast(*args)

class itkSqrtImageFilterIUC2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    """Proxy of C++ itkSqrtImageFilterIUC2IUC2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Sqrt<(unsigned char,unsigned char)>
        GetFunctor(self) -> itk::Function::Sqrt<(unsigned char,unsigned char)>
        """
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC2IUC2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Sqrt<(unsigned char,unsigned char)> functor)"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC2IUC2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkSqrtImageFilterPython.delete_itkSqrtImageFilterIUC2IUC2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSqrtImageFilterIUC2IUC2_Superclass"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC2IUC2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSqrtImageFilterIUC2IUC2_Superclass"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC2IUC2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSqrtImageFilterIUC2IUC2_Superclass
        
        Create a new object of the class itkSqrtImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSqrtImageFilterIUC2IUC2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSqrtImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSqrtImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSqrtImageFilterIUC2IUC2_Superclass.GetFunctor = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIUC2IUC2_Superclass_GetFunctor,None,itkSqrtImageFilterIUC2IUC2_Superclass)
itkSqrtImageFilterIUC2IUC2_Superclass.SetFunctor = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIUC2IUC2_Superclass_SetFunctor,None,itkSqrtImageFilterIUC2IUC2_Superclass)
itkSqrtImageFilterIUC2IUC2_Superclass.GetPointer = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIUC2IUC2_Superclass_GetPointer,None,itkSqrtImageFilterIUC2IUC2_Superclass)
itkSqrtImageFilterIUC2IUC2_Superclass_swigregister = _itkSqrtImageFilterPython.itkSqrtImageFilterIUC2IUC2_Superclass_swigregister
itkSqrtImageFilterIUC2IUC2_Superclass_swigregister(itkSqrtImageFilterIUC2IUC2_Superclass)

def itkSqrtImageFilterIUC2IUC2_Superclass___New_orig__():
  """itkSqrtImageFilterIUC2IUC2_Superclass___New_orig__()"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC2IUC2_Superclass___New_orig__()

def itkSqrtImageFilterIUC2IUC2_Superclass_cast(*args):
  """itkSqrtImageFilterIUC2IUC2_Superclass_cast(itkLightObject obj) -> itkSqrtImageFilterIUC2IUC2_Superclass"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC2IUC2_Superclass_cast(*args)

class itkSqrtImageFilterIUC3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    """Proxy of C++ itkSqrtImageFilterIUC3IUC3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Sqrt<(unsigned char,unsigned char)>
        GetFunctor(self) -> itk::Function::Sqrt<(unsigned char,unsigned char)>
        """
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC3IUC3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Sqrt<(unsigned char,unsigned char)> functor)"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC3IUC3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkSqrtImageFilterPython.delete_itkSqrtImageFilterIUC3IUC3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSqrtImageFilterIUC3IUC3_Superclass"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC3IUC3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSqrtImageFilterIUC3IUC3_Superclass"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC3IUC3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSqrtImageFilterIUC3IUC3_Superclass
        
        Create a new object of the class itkSqrtImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSqrtImageFilterIUC3IUC3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSqrtImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSqrtImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSqrtImageFilterIUC3IUC3_Superclass.GetFunctor = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIUC3IUC3_Superclass_GetFunctor,None,itkSqrtImageFilterIUC3IUC3_Superclass)
itkSqrtImageFilterIUC3IUC3_Superclass.SetFunctor = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIUC3IUC3_Superclass_SetFunctor,None,itkSqrtImageFilterIUC3IUC3_Superclass)
itkSqrtImageFilterIUC3IUC3_Superclass.GetPointer = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIUC3IUC3_Superclass_GetPointer,None,itkSqrtImageFilterIUC3IUC3_Superclass)
itkSqrtImageFilterIUC3IUC3_Superclass_swigregister = _itkSqrtImageFilterPython.itkSqrtImageFilterIUC3IUC3_Superclass_swigregister
itkSqrtImageFilterIUC3IUC3_Superclass_swigregister(itkSqrtImageFilterIUC3IUC3_Superclass)

def itkSqrtImageFilterIUC3IUC3_Superclass___New_orig__():
  """itkSqrtImageFilterIUC3IUC3_Superclass___New_orig__()"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC3IUC3_Superclass___New_orig__()

def itkSqrtImageFilterIUC3IUC3_Superclass_cast(*args):
  """itkSqrtImageFilterIUC3IUC3_Superclass_cast(itkLightObject obj) -> itkSqrtImageFilterIUC3IUC3_Superclass"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC3IUC3_Superclass_cast(*args)

class itkSqrtImageFilterIUL2IUL2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUL2):
    """Proxy of C++ itkSqrtImageFilterIUL2IUL2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUL2IUL2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Sqrt<(unsigned long,unsigned long)>
        GetFunctor(self) -> itk::Function::Sqrt<(unsigned long,unsigned long)>
        """
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUL2IUL2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Sqrt<(unsigned long,unsigned long)> functor)"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUL2IUL2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkSqrtImageFilterPython.delete_itkSqrtImageFilterIUL2IUL2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSqrtImageFilterIUL2IUL2_Superclass"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUL2IUL2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSqrtImageFilterIUL2IUL2_Superclass"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUL2IUL2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSqrtImageFilterIUL2IUL2_Superclass
        
        Create a new object of the class itkSqrtImageFilterIUL2IUL2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSqrtImageFilterIUL2IUL2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSqrtImageFilterIUL2IUL2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSqrtImageFilterIUL2IUL2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSqrtImageFilterIUL2IUL2_Superclass.GetFunctor = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIUL2IUL2_Superclass_GetFunctor,None,itkSqrtImageFilterIUL2IUL2_Superclass)
itkSqrtImageFilterIUL2IUL2_Superclass.SetFunctor = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIUL2IUL2_Superclass_SetFunctor,None,itkSqrtImageFilterIUL2IUL2_Superclass)
itkSqrtImageFilterIUL2IUL2_Superclass.GetPointer = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIUL2IUL2_Superclass_GetPointer,None,itkSqrtImageFilterIUL2IUL2_Superclass)
itkSqrtImageFilterIUL2IUL2_Superclass_swigregister = _itkSqrtImageFilterPython.itkSqrtImageFilterIUL2IUL2_Superclass_swigregister
itkSqrtImageFilterIUL2IUL2_Superclass_swigregister(itkSqrtImageFilterIUL2IUL2_Superclass)

def itkSqrtImageFilterIUL2IUL2_Superclass___New_orig__():
  """itkSqrtImageFilterIUL2IUL2_Superclass___New_orig__()"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIUL2IUL2_Superclass___New_orig__()

def itkSqrtImageFilterIUL2IUL2_Superclass_cast(*args):
  """itkSqrtImageFilterIUL2IUL2_Superclass_cast(itkLightObject obj) -> itkSqrtImageFilterIUL2IUL2_Superclass"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIUL2IUL2_Superclass_cast(*args)

class itkSqrtImageFilterIUL3IUL3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUL3):
    """Proxy of C++ itkSqrtImageFilterIUL3IUL3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUL3IUL3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Sqrt<(unsigned long,unsigned long)>
        GetFunctor(self) -> itk::Function::Sqrt<(unsigned long,unsigned long)>
        """
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUL3IUL3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Sqrt<(unsigned long,unsigned long)> functor)"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUL3IUL3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkSqrtImageFilterPython.delete_itkSqrtImageFilterIUL3IUL3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSqrtImageFilterIUL3IUL3_Superclass"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUL3IUL3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSqrtImageFilterIUL3IUL3_Superclass"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUL3IUL3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSqrtImageFilterIUL3IUL3_Superclass
        
        Create a new object of the class itkSqrtImageFilterIUL3IUL3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSqrtImageFilterIUL3IUL3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSqrtImageFilterIUL3IUL3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSqrtImageFilterIUL3IUL3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSqrtImageFilterIUL3IUL3_Superclass.GetFunctor = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIUL3IUL3_Superclass_GetFunctor,None,itkSqrtImageFilterIUL3IUL3_Superclass)
itkSqrtImageFilterIUL3IUL3_Superclass.SetFunctor = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIUL3IUL3_Superclass_SetFunctor,None,itkSqrtImageFilterIUL3IUL3_Superclass)
itkSqrtImageFilterIUL3IUL3_Superclass.GetPointer = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIUL3IUL3_Superclass_GetPointer,None,itkSqrtImageFilterIUL3IUL3_Superclass)
itkSqrtImageFilterIUL3IUL3_Superclass_swigregister = _itkSqrtImageFilterPython.itkSqrtImageFilterIUL3IUL3_Superclass_swigregister
itkSqrtImageFilterIUL3IUL3_Superclass_swigregister(itkSqrtImageFilterIUL3IUL3_Superclass)

def itkSqrtImageFilterIUL3IUL3_Superclass___New_orig__():
  """itkSqrtImageFilterIUL3IUL3_Superclass___New_orig__()"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIUL3IUL3_Superclass___New_orig__()

def itkSqrtImageFilterIUL3IUL3_Superclass_cast(*args):
  """itkSqrtImageFilterIUL3IUL3_Superclass_cast(itkLightObject obj) -> itkSqrtImageFilterIUL3IUL3_Superclass"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIUL3IUL3_Superclass_cast(*args)

class itkSqrtImageFilterIUS2IUS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    """Proxy of C++ itkSqrtImageFilterIUS2IUS2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS2IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Sqrt<(unsigned short,unsigned short)>
        GetFunctor(self) -> itk::Function::Sqrt<(unsigned short,unsigned short)>
        """
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS2IUS2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Sqrt<(unsigned short,unsigned short)> functor)"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS2IUS2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkSqrtImageFilterPython.delete_itkSqrtImageFilterIUS2IUS2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSqrtImageFilterIUS2IUS2_Superclass"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS2IUS2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSqrtImageFilterIUS2IUS2_Superclass"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS2IUS2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSqrtImageFilterIUS2IUS2_Superclass
        
        Create a new object of the class itkSqrtImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSqrtImageFilterIUS2IUS2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSqrtImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSqrtImageFilterIUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSqrtImageFilterIUS2IUS2_Superclass.GetFunctor = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIUS2IUS2_Superclass_GetFunctor,None,itkSqrtImageFilterIUS2IUS2_Superclass)
itkSqrtImageFilterIUS2IUS2_Superclass.SetFunctor = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIUS2IUS2_Superclass_SetFunctor,None,itkSqrtImageFilterIUS2IUS2_Superclass)
itkSqrtImageFilterIUS2IUS2_Superclass.GetPointer = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIUS2IUS2_Superclass_GetPointer,None,itkSqrtImageFilterIUS2IUS2_Superclass)
itkSqrtImageFilterIUS2IUS2_Superclass_swigregister = _itkSqrtImageFilterPython.itkSqrtImageFilterIUS2IUS2_Superclass_swigregister
itkSqrtImageFilterIUS2IUS2_Superclass_swigregister(itkSqrtImageFilterIUS2IUS2_Superclass)

def itkSqrtImageFilterIUS2IUS2_Superclass___New_orig__():
  """itkSqrtImageFilterIUS2IUS2_Superclass___New_orig__()"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS2IUS2_Superclass___New_orig__()

def itkSqrtImageFilterIUS2IUS2_Superclass_cast(*args):
  """itkSqrtImageFilterIUS2IUS2_Superclass_cast(itkLightObject obj) -> itkSqrtImageFilterIUS2IUS2_Superclass"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS2IUS2_Superclass_cast(*args)

class itkSqrtImageFilterIUS3IUS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    """Proxy of C++ itkSqrtImageFilterIUS3IUS3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS3IUS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Sqrt<(unsigned short,unsigned short)>
        GetFunctor(self) -> itk::Function::Sqrt<(unsigned short,unsigned short)>
        """
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS3IUS3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Sqrt<(unsigned short,unsigned short)> functor)"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS3IUS3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkSqrtImageFilterPython.delete_itkSqrtImageFilterIUS3IUS3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSqrtImageFilterIUS3IUS3_Superclass"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS3IUS3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSqrtImageFilterIUS3IUS3_Superclass"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS3IUS3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSqrtImageFilterIUS3IUS3_Superclass
        
        Create a new object of the class itkSqrtImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSqrtImageFilterIUS3IUS3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSqrtImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSqrtImageFilterIUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSqrtImageFilterIUS3IUS3_Superclass.GetFunctor = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIUS3IUS3_Superclass_GetFunctor,None,itkSqrtImageFilterIUS3IUS3_Superclass)
itkSqrtImageFilterIUS3IUS3_Superclass.SetFunctor = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIUS3IUS3_Superclass_SetFunctor,None,itkSqrtImageFilterIUS3IUS3_Superclass)
itkSqrtImageFilterIUS3IUS3_Superclass.GetPointer = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIUS3IUS3_Superclass_GetPointer,None,itkSqrtImageFilterIUS3IUS3_Superclass)
itkSqrtImageFilterIUS3IUS3_Superclass_swigregister = _itkSqrtImageFilterPython.itkSqrtImageFilterIUS3IUS3_Superclass_swigregister
itkSqrtImageFilterIUS3IUS3_Superclass_swigregister(itkSqrtImageFilterIUS3IUS3_Superclass)

def itkSqrtImageFilterIUS3IUS3_Superclass___New_orig__():
  """itkSqrtImageFilterIUS3IUS3_Superclass___New_orig__()"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS3IUS3_Superclass___New_orig__()

def itkSqrtImageFilterIUS3IUS3_Superclass_cast(*args):
  """itkSqrtImageFilterIUS3IUS3_Superclass_cast(itkLightObject obj) -> itkSqrtImageFilterIUS3IUS3_Superclass"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS3IUS3_Superclass_cast(*args)

class itkSqrtImageFilterID2ID2(itkSqrtImageFilterID2ID2_Superclass):
    """Proxy of C++ itkSqrtImageFilterID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToDoubleCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterID2ID2_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterID2ID2_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSqrtImageFilterPython.delete_itkSqrtImageFilterID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSqrtImageFilterID2ID2"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSqrtImageFilterID2ID2"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSqrtImageFilterID2ID2
        
        Create a new object of the class itkSqrtImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSqrtImageFilterID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSqrtImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSqrtImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSqrtImageFilterID2ID2.GetPointer = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterID2ID2_GetPointer,None,itkSqrtImageFilterID2ID2)
itkSqrtImageFilterID2ID2_swigregister = _itkSqrtImageFilterPython.itkSqrtImageFilterID2ID2_swigregister
itkSqrtImageFilterID2ID2_swigregister(itkSqrtImageFilterID2ID2)

def itkSqrtImageFilterID2ID2___New_orig__():
  """itkSqrtImageFilterID2ID2___New_orig__()"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterID2ID2___New_orig__()

def itkSqrtImageFilterID2ID2_cast(*args):
  """itkSqrtImageFilterID2ID2_cast(itkLightObject obj) -> itkSqrtImageFilterID2ID2"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterID2ID2_cast(*args)

class itkSqrtImageFilterID3ID3(itkSqrtImageFilterID3ID3_Superclass):
    """Proxy of C++ itkSqrtImageFilterID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToDoubleCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterID3ID3_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterID3ID3_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSqrtImageFilterPython.delete_itkSqrtImageFilterID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkSqrtImageFilterID3ID3"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSqrtImageFilterID3ID3"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSqrtImageFilterID3ID3
        
        Create a new object of the class itkSqrtImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSqrtImageFilterID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSqrtImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSqrtImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSqrtImageFilterID3ID3.GetPointer = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterID3ID3_GetPointer,None,itkSqrtImageFilterID3ID3)
itkSqrtImageFilterID3ID3_swigregister = _itkSqrtImageFilterPython.itkSqrtImageFilterID3ID3_swigregister
itkSqrtImageFilterID3ID3_swigregister(itkSqrtImageFilterID3ID3)

def itkSqrtImageFilterID3ID3___New_orig__():
  """itkSqrtImageFilterID3ID3___New_orig__()"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterID3ID3___New_orig__()

def itkSqrtImageFilterID3ID3_cast(*args):
  """itkSqrtImageFilterID3ID3_cast(itkLightObject obj) -> itkSqrtImageFilterID3ID3"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterID3ID3_cast(*args)

class itkSqrtImageFilterIF2IF2(itkSqrtImageFilterIF2IF2_Superclass):
    """Proxy of C++ itkSqrtImageFilterIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToDoubleCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterIF2IF2_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterIF2IF2_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSqrtImageFilterPython.delete_itkSqrtImageFilterIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSqrtImageFilterIF2IF2"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSqrtImageFilterIF2IF2"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSqrtImageFilterIF2IF2
        
        Create a new object of the class itkSqrtImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSqrtImageFilterIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSqrtImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSqrtImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSqrtImageFilterIF2IF2.GetPointer = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIF2IF2_GetPointer,None,itkSqrtImageFilterIF2IF2)
itkSqrtImageFilterIF2IF2_swigregister = _itkSqrtImageFilterPython.itkSqrtImageFilterIF2IF2_swigregister
itkSqrtImageFilterIF2IF2_swigregister(itkSqrtImageFilterIF2IF2)

def itkSqrtImageFilterIF2IF2___New_orig__():
  """itkSqrtImageFilterIF2IF2___New_orig__()"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIF2IF2___New_orig__()

def itkSqrtImageFilterIF2IF2_cast(*args):
  """itkSqrtImageFilterIF2IF2_cast(itkLightObject obj) -> itkSqrtImageFilterIF2IF2"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIF2IF2_cast(*args)

class itkSqrtImageFilterIF3IF3(itkSqrtImageFilterIF3IF3_Superclass):
    """Proxy of C++ itkSqrtImageFilterIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToDoubleCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterIF3IF3_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterIF3IF3_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSqrtImageFilterPython.delete_itkSqrtImageFilterIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkSqrtImageFilterIF3IF3"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSqrtImageFilterIF3IF3"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSqrtImageFilterIF3IF3
        
        Create a new object of the class itkSqrtImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSqrtImageFilterIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSqrtImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSqrtImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSqrtImageFilterIF3IF3.GetPointer = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIF3IF3_GetPointer,None,itkSqrtImageFilterIF3IF3)
itkSqrtImageFilterIF3IF3_swigregister = _itkSqrtImageFilterPython.itkSqrtImageFilterIF3IF3_swigregister
itkSqrtImageFilterIF3IF3_swigregister(itkSqrtImageFilterIF3IF3)

def itkSqrtImageFilterIF3IF3___New_orig__():
  """itkSqrtImageFilterIF3IF3___New_orig__()"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIF3IF3___New_orig__()

def itkSqrtImageFilterIF3IF3_cast(*args):
  """itkSqrtImageFilterIF3IF3_cast(itkLightObject obj) -> itkSqrtImageFilterIF3IF3"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIF3IF3_cast(*args)

class itkSqrtImageFilterIUC2IUC2(itkSqrtImageFilterIUC2IUC2_Superclass):
    """Proxy of C++ itkSqrtImageFilterIUC2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToDoubleCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterIUC2IUC2_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterIUC2IUC2_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSqrtImageFilterPython.delete_itkSqrtImageFilterIUC2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSqrtImageFilterIUC2IUC2"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSqrtImageFilterIUC2IUC2"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSqrtImageFilterIUC2IUC2
        
        Create a new object of the class itkSqrtImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSqrtImageFilterIUC2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSqrtImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSqrtImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSqrtImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIUC2IUC2_GetPointer,None,itkSqrtImageFilterIUC2IUC2)
itkSqrtImageFilterIUC2IUC2_swigregister = _itkSqrtImageFilterPython.itkSqrtImageFilterIUC2IUC2_swigregister
itkSqrtImageFilterIUC2IUC2_swigregister(itkSqrtImageFilterIUC2IUC2)

def itkSqrtImageFilterIUC2IUC2___New_orig__():
  """itkSqrtImageFilterIUC2IUC2___New_orig__()"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC2IUC2___New_orig__()

def itkSqrtImageFilterIUC2IUC2_cast(*args):
  """itkSqrtImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkSqrtImageFilterIUC2IUC2"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC2IUC2_cast(*args)

class itkSqrtImageFilterIUC3IUC3(itkSqrtImageFilterIUC3IUC3_Superclass):
    """Proxy of C++ itkSqrtImageFilterIUC3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToDoubleCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterIUC3IUC3_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterIUC3IUC3_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSqrtImageFilterPython.delete_itkSqrtImageFilterIUC3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkSqrtImageFilterIUC3IUC3"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSqrtImageFilterIUC3IUC3"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSqrtImageFilterIUC3IUC3
        
        Create a new object of the class itkSqrtImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSqrtImageFilterIUC3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSqrtImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSqrtImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSqrtImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIUC3IUC3_GetPointer,None,itkSqrtImageFilterIUC3IUC3)
itkSqrtImageFilterIUC3IUC3_swigregister = _itkSqrtImageFilterPython.itkSqrtImageFilterIUC3IUC3_swigregister
itkSqrtImageFilterIUC3IUC3_swigregister(itkSqrtImageFilterIUC3IUC3)

def itkSqrtImageFilterIUC3IUC3___New_orig__():
  """itkSqrtImageFilterIUC3IUC3___New_orig__()"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC3IUC3___New_orig__()

def itkSqrtImageFilterIUC3IUC3_cast(*args):
  """itkSqrtImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkSqrtImageFilterIUC3IUC3"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIUC3IUC3_cast(*args)

class itkSqrtImageFilterIUL2IUL2(itkSqrtImageFilterIUL2IUL2_Superclass):
    """Proxy of C++ itkSqrtImageFilterIUL2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToDoubleCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterIUL2IUL2_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterIUL2IUL2_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUL2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSqrtImageFilterPython.delete_itkSqrtImageFilterIUL2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSqrtImageFilterIUL2IUL2"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUL2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSqrtImageFilterIUL2IUL2"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUL2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSqrtImageFilterIUL2IUL2
        
        Create a new object of the class itkSqrtImageFilterIUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSqrtImageFilterIUL2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSqrtImageFilterIUL2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSqrtImageFilterIUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSqrtImageFilterIUL2IUL2.GetPointer = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIUL2IUL2_GetPointer,None,itkSqrtImageFilterIUL2IUL2)
itkSqrtImageFilterIUL2IUL2_swigregister = _itkSqrtImageFilterPython.itkSqrtImageFilterIUL2IUL2_swigregister
itkSqrtImageFilterIUL2IUL2_swigregister(itkSqrtImageFilterIUL2IUL2)

def itkSqrtImageFilterIUL2IUL2___New_orig__():
  """itkSqrtImageFilterIUL2IUL2___New_orig__()"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIUL2IUL2___New_orig__()

def itkSqrtImageFilterIUL2IUL2_cast(*args):
  """itkSqrtImageFilterIUL2IUL2_cast(itkLightObject obj) -> itkSqrtImageFilterIUL2IUL2"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIUL2IUL2_cast(*args)

class itkSqrtImageFilterIUL3IUL3(itkSqrtImageFilterIUL3IUL3_Superclass):
    """Proxy of C++ itkSqrtImageFilterIUL3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToDoubleCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterIUL3IUL3_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterIUL3IUL3_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUL3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSqrtImageFilterPython.delete_itkSqrtImageFilterIUL3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkSqrtImageFilterIUL3IUL3"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUL3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSqrtImageFilterIUL3IUL3"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUL3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSqrtImageFilterIUL3IUL3
        
        Create a new object of the class itkSqrtImageFilterIUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSqrtImageFilterIUL3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSqrtImageFilterIUL3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSqrtImageFilterIUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSqrtImageFilterIUL3IUL3.GetPointer = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIUL3IUL3_GetPointer,None,itkSqrtImageFilterIUL3IUL3)
itkSqrtImageFilterIUL3IUL3_swigregister = _itkSqrtImageFilterPython.itkSqrtImageFilterIUL3IUL3_swigregister
itkSqrtImageFilterIUL3IUL3_swigregister(itkSqrtImageFilterIUL3IUL3)

def itkSqrtImageFilterIUL3IUL3___New_orig__():
  """itkSqrtImageFilterIUL3IUL3___New_orig__()"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIUL3IUL3___New_orig__()

def itkSqrtImageFilterIUL3IUL3_cast(*args):
  """itkSqrtImageFilterIUL3IUL3_cast(itkLightObject obj) -> itkSqrtImageFilterIUL3IUL3"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIUL3IUL3_cast(*args)

class itkSqrtImageFilterIUS2IUS2(itkSqrtImageFilterIUS2IUS2_Superclass):
    """Proxy of C++ itkSqrtImageFilterIUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToDoubleCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterIUS2IUS2_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterIUS2IUS2_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSqrtImageFilterPython.delete_itkSqrtImageFilterIUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSqrtImageFilterIUS2IUS2"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSqrtImageFilterIUS2IUS2"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSqrtImageFilterIUS2IUS2
        
        Create a new object of the class itkSqrtImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSqrtImageFilterIUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSqrtImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSqrtImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSqrtImageFilterIUS2IUS2.GetPointer = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIUS2IUS2_GetPointer,None,itkSqrtImageFilterIUS2IUS2)
itkSqrtImageFilterIUS2IUS2_swigregister = _itkSqrtImageFilterPython.itkSqrtImageFilterIUS2IUS2_swigregister
itkSqrtImageFilterIUS2IUS2_swigregister(itkSqrtImageFilterIUS2IUS2)

def itkSqrtImageFilterIUS2IUS2___New_orig__():
  """itkSqrtImageFilterIUS2IUS2___New_orig__()"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS2IUS2___New_orig__()

def itkSqrtImageFilterIUS2IUS2_cast(*args):
  """itkSqrtImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkSqrtImageFilterIUS2IUS2"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS2IUS2_cast(*args)

class itkSqrtImageFilterIUS3IUS3(itkSqrtImageFilterIUS3IUS3_Superclass):
    """Proxy of C++ itkSqrtImageFilterIUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToDoubleCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterIUS3IUS3_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkSqrtImageFilterPython.itkSqrtImageFilterIUS3IUS3_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSqrtImageFilterPython.delete_itkSqrtImageFilterIUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkSqrtImageFilterIUS3IUS3"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSqrtImageFilterIUS3IUS3"""
        return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSqrtImageFilterIUS3IUS3
        
        Create a new object of the class itkSqrtImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSqrtImageFilterIUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSqrtImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSqrtImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSqrtImageFilterIUS3IUS3.GetPointer = new_instancemethod(_itkSqrtImageFilterPython.itkSqrtImageFilterIUS3IUS3_GetPointer,None,itkSqrtImageFilterIUS3IUS3)
itkSqrtImageFilterIUS3IUS3_swigregister = _itkSqrtImageFilterPython.itkSqrtImageFilterIUS3IUS3_swigregister
itkSqrtImageFilterIUS3IUS3_swigregister(itkSqrtImageFilterIUS3IUS3)

def itkSqrtImageFilterIUS3IUS3___New_orig__():
  """itkSqrtImageFilterIUS3IUS3___New_orig__()"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS3IUS3___New_orig__()

def itkSqrtImageFilterIUS3IUS3_cast(*args):
  """itkSqrtImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkSqrtImageFilterIUS3IUS3"""
  return _itkSqrtImageFilterPython.itkSqrtImageFilterIUS3IUS3_cast(*args)



