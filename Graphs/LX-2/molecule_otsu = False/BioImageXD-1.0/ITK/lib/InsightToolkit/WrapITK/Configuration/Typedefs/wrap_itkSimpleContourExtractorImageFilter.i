// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkSimpleContourExtractorImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkSimpleContourExtractorImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkSimpleContourExtractorImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkSimpleContourExtractorImageFilterJava
#endif
#ifdef SWIGLUA
%module itkSimpleContourExtractorImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkSimpleContourExtractorImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkSimpleContourExtractorImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkSimpleContourExtractorImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkSimpleContourExtractorImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkSimpleContourExtractorImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkSimpleContourExtractorImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkSimpleContourExtractorImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkSimpleContourExtractorImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkSimpleContourExtractorImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkSimpleContourExtractorImageFilterPython
#endif
#ifdef SWIGR
%module itkSimpleContourExtractorImageFilterR
#endif
#ifdef SWIGRUBY
%module itkSimpleContourExtractorImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkSimpleContourExtractorImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkSimpleContourExtractorImageFilterTcl
#endif
#ifdef SWIGXML
%module itkSimpleContourExtractorImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "EdgesAndContours.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkSize.i
%import wrap_ITKRegions.i
%import wrap_itkImageToImageFilterA.i


%include itk.i
%include wrap_itkSimpleContourExtractorImageFilter_ext.i


 class itkSimpleContourExtractorImageFilterID2ID2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkSimpleContourExtractorImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRadius(itkSize2 const _arg);
     virtual itkSize2 const & GetRadius() const;
     virtual void SetInputForegroundValue(double const _arg);
     virtual double const & GetInputForegroundValue() const;
     virtual void SetInputBackgroundValue(double const _arg);
     virtual double const & GetInputBackgroundValue() const;
     virtual void SetOutputForegroundValue(double const _arg);
     virtual double const & GetOutputForegroundValue() const;
     virtual void SetOutputBackgroundValue(double const _arg);
     virtual double const & GetOutputBackgroundValue() const;
     virtual void GenerateInputRequestedRegion();
   private:
     itkSimpleContourExtractorImageFilterID2ID2(itkSimpleContourExtractorImageFilterID2ID2 const & arg0);
     void operator=(itkSimpleContourExtractorImageFilterID2ID2 const & arg0);
   protected:
     itkSimpleContourExtractorImageFilterID2ID2();
     ~itkSimpleContourExtractorImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkSimpleContourExtractorImageFilterID2ID2_Pointer {
   public:
     itkSimpleContourExtractorImageFilterID2ID2_Pointer();
     itkSimpleContourExtractorImageFilterID2ID2_Pointer(itkSimpleContourExtractorImageFilterID2ID2_Pointer const & p);
     itkSimpleContourExtractorImageFilterID2ID2_Pointer(itkSimpleContourExtractorImageFilterID2ID2 * p);
     ~itkSimpleContourExtractorImageFilterID2ID2_Pointer();
     itkSimpleContourExtractorImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSimpleContourExtractorImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkSimpleContourExtractorImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkSimpleContourExtractorImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkSimpleContourExtractorImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkSimpleContourExtractorImageFilterID2ID2_Pointer const & r) const;
     itkSimpleContourExtractorImageFilterID2ID2_Pointer & operator=(itkSimpleContourExtractorImageFilterID2ID2_Pointer const & r);
     itkSimpleContourExtractorImageFilterID2ID2_Pointer & operator=(itkSimpleContourExtractorImageFilterID2ID2 * r);
     itkSimpleContourExtractorImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSimpleContourExtractorImageFilterID3ID3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkSimpleContourExtractorImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRadius(itkSize3 const _arg);
     virtual itkSize3 const & GetRadius() const;
     virtual void SetInputForegroundValue(double const _arg);
     virtual double const & GetInputForegroundValue() const;
     virtual void SetInputBackgroundValue(double const _arg);
     virtual double const & GetInputBackgroundValue() const;
     virtual void SetOutputForegroundValue(double const _arg);
     virtual double const & GetOutputForegroundValue() const;
     virtual void SetOutputBackgroundValue(double const _arg);
     virtual double const & GetOutputBackgroundValue() const;
     virtual void GenerateInputRequestedRegion();
   private:
     itkSimpleContourExtractorImageFilterID3ID3(itkSimpleContourExtractorImageFilterID3ID3 const & arg0);
     void operator=(itkSimpleContourExtractorImageFilterID3ID3 const & arg0);
   protected:
     itkSimpleContourExtractorImageFilterID3ID3();
     ~itkSimpleContourExtractorImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkSimpleContourExtractorImageFilterID3ID3_Pointer {
   public:
     itkSimpleContourExtractorImageFilterID3ID3_Pointer();
     itkSimpleContourExtractorImageFilterID3ID3_Pointer(itkSimpleContourExtractorImageFilterID3ID3_Pointer const & p);
     itkSimpleContourExtractorImageFilterID3ID3_Pointer(itkSimpleContourExtractorImageFilterID3ID3 * p);
     ~itkSimpleContourExtractorImageFilterID3ID3_Pointer();
     itkSimpleContourExtractorImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSimpleContourExtractorImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkSimpleContourExtractorImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkSimpleContourExtractorImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkSimpleContourExtractorImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkSimpleContourExtractorImageFilterID3ID3_Pointer const & r) const;
     itkSimpleContourExtractorImageFilterID3ID3_Pointer & operator=(itkSimpleContourExtractorImageFilterID3ID3_Pointer const & r);
     itkSimpleContourExtractorImageFilterID3ID3_Pointer & operator=(itkSimpleContourExtractorImageFilterID3ID3 * r);
     itkSimpleContourExtractorImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSimpleContourExtractorImageFilterIF2IF2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkSimpleContourExtractorImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRadius(itkSize2 const _arg);
     virtual itkSize2 const & GetRadius() const;
     virtual void SetInputForegroundValue(float const _arg);
     virtual float const & GetInputForegroundValue() const;
     virtual void SetInputBackgroundValue(float const _arg);
     virtual float const & GetInputBackgroundValue() const;
     virtual void SetOutputForegroundValue(float const _arg);
     virtual float const & GetOutputForegroundValue() const;
     virtual void SetOutputBackgroundValue(float const _arg);
     virtual float const & GetOutputBackgroundValue() const;
     virtual void GenerateInputRequestedRegion();
   private:
     itkSimpleContourExtractorImageFilterIF2IF2(itkSimpleContourExtractorImageFilterIF2IF2 const & arg0);
     void operator=(itkSimpleContourExtractorImageFilterIF2IF2 const & arg0);
   protected:
     itkSimpleContourExtractorImageFilterIF2IF2();
     ~itkSimpleContourExtractorImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkSimpleContourExtractorImageFilterIF2IF2_Pointer {
   public:
     itkSimpleContourExtractorImageFilterIF2IF2_Pointer();
     itkSimpleContourExtractorImageFilterIF2IF2_Pointer(itkSimpleContourExtractorImageFilterIF2IF2_Pointer const & p);
     itkSimpleContourExtractorImageFilterIF2IF2_Pointer(itkSimpleContourExtractorImageFilterIF2IF2 * p);
     ~itkSimpleContourExtractorImageFilterIF2IF2_Pointer();
     itkSimpleContourExtractorImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSimpleContourExtractorImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkSimpleContourExtractorImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkSimpleContourExtractorImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkSimpleContourExtractorImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkSimpleContourExtractorImageFilterIF2IF2_Pointer const & r) const;
     itkSimpleContourExtractorImageFilterIF2IF2_Pointer & operator=(itkSimpleContourExtractorImageFilterIF2IF2_Pointer const & r);
     itkSimpleContourExtractorImageFilterIF2IF2_Pointer & operator=(itkSimpleContourExtractorImageFilterIF2IF2 * r);
     itkSimpleContourExtractorImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSimpleContourExtractorImageFilterIF3IF3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkSimpleContourExtractorImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRadius(itkSize3 const _arg);
     virtual itkSize3 const & GetRadius() const;
     virtual void SetInputForegroundValue(float const _arg);
     virtual float const & GetInputForegroundValue() const;
     virtual void SetInputBackgroundValue(float const _arg);
     virtual float const & GetInputBackgroundValue() const;
     virtual void SetOutputForegroundValue(float const _arg);
     virtual float const & GetOutputForegroundValue() const;
     virtual void SetOutputBackgroundValue(float const _arg);
     virtual float const & GetOutputBackgroundValue() const;
     virtual void GenerateInputRequestedRegion();
   private:
     itkSimpleContourExtractorImageFilterIF3IF3(itkSimpleContourExtractorImageFilterIF3IF3 const & arg0);
     void operator=(itkSimpleContourExtractorImageFilterIF3IF3 const & arg0);
   protected:
     itkSimpleContourExtractorImageFilterIF3IF3();
     ~itkSimpleContourExtractorImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkSimpleContourExtractorImageFilterIF3IF3_Pointer {
   public:
     itkSimpleContourExtractorImageFilterIF3IF3_Pointer();
     itkSimpleContourExtractorImageFilterIF3IF3_Pointer(itkSimpleContourExtractorImageFilterIF3IF3_Pointer const & p);
     itkSimpleContourExtractorImageFilterIF3IF3_Pointer(itkSimpleContourExtractorImageFilterIF3IF3 * p);
     ~itkSimpleContourExtractorImageFilterIF3IF3_Pointer();
     itkSimpleContourExtractorImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSimpleContourExtractorImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkSimpleContourExtractorImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkSimpleContourExtractorImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkSimpleContourExtractorImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkSimpleContourExtractorImageFilterIF3IF3_Pointer const & r) const;
     itkSimpleContourExtractorImageFilterIF3IF3_Pointer & operator=(itkSimpleContourExtractorImageFilterIF3IF3_Pointer const & r);
     itkSimpleContourExtractorImageFilterIF3IF3_Pointer & operator=(itkSimpleContourExtractorImageFilterIF3IF3 * r);
     itkSimpleContourExtractorImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSimpleContourExtractorImageFilterIUC2IUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkSimpleContourExtractorImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRadius(itkSize2 const _arg);
     virtual itkSize2 const & GetRadius() const;
     virtual void SetInputForegroundValue(unsigned char const _arg);
     virtual unsigned char const & GetInputForegroundValue() const;
     virtual void SetInputBackgroundValue(unsigned char const _arg);
     virtual unsigned char const & GetInputBackgroundValue() const;
     virtual void SetOutputForegroundValue(unsigned char const _arg);
     virtual unsigned char const & GetOutputForegroundValue() const;
     virtual void SetOutputBackgroundValue(unsigned char const _arg);
     virtual unsigned char const & GetOutputBackgroundValue() const;
     virtual void GenerateInputRequestedRegion();
   private:
     itkSimpleContourExtractorImageFilterIUC2IUC2(itkSimpleContourExtractorImageFilterIUC2IUC2 const & arg0);
     void operator=(itkSimpleContourExtractorImageFilterIUC2IUC2 const & arg0);
   protected:
     itkSimpleContourExtractorImageFilterIUC2IUC2();
     ~itkSimpleContourExtractorImageFilterIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkSimpleContourExtractorImageFilterIUC2IUC2_Pointer {
   public:
     itkSimpleContourExtractorImageFilterIUC2IUC2_Pointer();
     itkSimpleContourExtractorImageFilterIUC2IUC2_Pointer(itkSimpleContourExtractorImageFilterIUC2IUC2_Pointer const & p);
     itkSimpleContourExtractorImageFilterIUC2IUC2_Pointer(itkSimpleContourExtractorImageFilterIUC2IUC2 * p);
     ~itkSimpleContourExtractorImageFilterIUC2IUC2_Pointer();
     itkSimpleContourExtractorImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSimpleContourExtractorImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkSimpleContourExtractorImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkSimpleContourExtractorImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkSimpleContourExtractorImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkSimpleContourExtractorImageFilterIUC2IUC2_Pointer const & r) const;
     itkSimpleContourExtractorImageFilterIUC2IUC2_Pointer & operator=(itkSimpleContourExtractorImageFilterIUC2IUC2_Pointer const & r);
     itkSimpleContourExtractorImageFilterIUC2IUC2_Pointer & operator=(itkSimpleContourExtractorImageFilterIUC2IUC2 * r);
     itkSimpleContourExtractorImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSimpleContourExtractorImageFilterIUC3IUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkSimpleContourExtractorImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRadius(itkSize3 const _arg);
     virtual itkSize3 const & GetRadius() const;
     virtual void SetInputForegroundValue(unsigned char const _arg);
     virtual unsigned char const & GetInputForegroundValue() const;
     virtual void SetInputBackgroundValue(unsigned char const _arg);
     virtual unsigned char const & GetInputBackgroundValue() const;
     virtual void SetOutputForegroundValue(unsigned char const _arg);
     virtual unsigned char const & GetOutputForegroundValue() const;
     virtual void SetOutputBackgroundValue(unsigned char const _arg);
     virtual unsigned char const & GetOutputBackgroundValue() const;
     virtual void GenerateInputRequestedRegion();
   private:
     itkSimpleContourExtractorImageFilterIUC3IUC3(itkSimpleContourExtractorImageFilterIUC3IUC3 const & arg0);
     void operator=(itkSimpleContourExtractorImageFilterIUC3IUC3 const & arg0);
   protected:
     itkSimpleContourExtractorImageFilterIUC3IUC3();
     ~itkSimpleContourExtractorImageFilterIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkSimpleContourExtractorImageFilterIUC3IUC3_Pointer {
   public:
     itkSimpleContourExtractorImageFilterIUC3IUC3_Pointer();
     itkSimpleContourExtractorImageFilterIUC3IUC3_Pointer(itkSimpleContourExtractorImageFilterIUC3IUC3_Pointer const & p);
     itkSimpleContourExtractorImageFilterIUC3IUC3_Pointer(itkSimpleContourExtractorImageFilterIUC3IUC3 * p);
     ~itkSimpleContourExtractorImageFilterIUC3IUC3_Pointer();
     itkSimpleContourExtractorImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSimpleContourExtractorImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkSimpleContourExtractorImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkSimpleContourExtractorImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkSimpleContourExtractorImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkSimpleContourExtractorImageFilterIUC3IUC3_Pointer const & r) const;
     itkSimpleContourExtractorImageFilterIUC3IUC3_Pointer & operator=(itkSimpleContourExtractorImageFilterIUC3IUC3_Pointer const & r);
     itkSimpleContourExtractorImageFilterIUC3IUC3_Pointer & operator=(itkSimpleContourExtractorImageFilterIUC3IUC3 * r);
     itkSimpleContourExtractorImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSimpleContourExtractorImageFilterIUL2IUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkSimpleContourExtractorImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRadius(itkSize2 const _arg);
     virtual itkSize2 const & GetRadius() const;
     virtual void SetInputForegroundValue(unsigned long const _arg);
     virtual unsigned long const & GetInputForegroundValue() const;
     virtual void SetInputBackgroundValue(unsigned long const _arg);
     virtual unsigned long const & GetInputBackgroundValue() const;
     virtual void SetOutputForegroundValue(unsigned long const _arg);
     virtual unsigned long const & GetOutputForegroundValue() const;
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long const & GetOutputBackgroundValue() const;
     virtual void GenerateInputRequestedRegion();
   private:
     itkSimpleContourExtractorImageFilterIUL2IUL2(itkSimpleContourExtractorImageFilterIUL2IUL2 const & arg0);
     void operator=(itkSimpleContourExtractorImageFilterIUL2IUL2 const & arg0);
   protected:
     itkSimpleContourExtractorImageFilterIUL2IUL2();
     ~itkSimpleContourExtractorImageFilterIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkSimpleContourExtractorImageFilterIUL2IUL2_Pointer {
   public:
     itkSimpleContourExtractorImageFilterIUL2IUL2_Pointer();
     itkSimpleContourExtractorImageFilterIUL2IUL2_Pointer(itkSimpleContourExtractorImageFilterIUL2IUL2_Pointer const & p);
     itkSimpleContourExtractorImageFilterIUL2IUL2_Pointer(itkSimpleContourExtractorImageFilterIUL2IUL2 * p);
     ~itkSimpleContourExtractorImageFilterIUL2IUL2_Pointer();
     itkSimpleContourExtractorImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSimpleContourExtractorImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkSimpleContourExtractorImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkSimpleContourExtractorImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkSimpleContourExtractorImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkSimpleContourExtractorImageFilterIUL2IUL2_Pointer const & r) const;
     itkSimpleContourExtractorImageFilterIUL2IUL2_Pointer & operator=(itkSimpleContourExtractorImageFilterIUL2IUL2_Pointer const & r);
     itkSimpleContourExtractorImageFilterIUL2IUL2_Pointer & operator=(itkSimpleContourExtractorImageFilterIUL2IUL2 * r);
     itkSimpleContourExtractorImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSimpleContourExtractorImageFilterIUL3IUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkSimpleContourExtractorImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRadius(itkSize3 const _arg);
     virtual itkSize3 const & GetRadius() const;
     virtual void SetInputForegroundValue(unsigned long const _arg);
     virtual unsigned long const & GetInputForegroundValue() const;
     virtual void SetInputBackgroundValue(unsigned long const _arg);
     virtual unsigned long const & GetInputBackgroundValue() const;
     virtual void SetOutputForegroundValue(unsigned long const _arg);
     virtual unsigned long const & GetOutputForegroundValue() const;
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long const & GetOutputBackgroundValue() const;
     virtual void GenerateInputRequestedRegion();
   private:
     itkSimpleContourExtractorImageFilterIUL3IUL3(itkSimpleContourExtractorImageFilterIUL3IUL3 const & arg0);
     void operator=(itkSimpleContourExtractorImageFilterIUL3IUL3 const & arg0);
   protected:
     itkSimpleContourExtractorImageFilterIUL3IUL3();
     ~itkSimpleContourExtractorImageFilterIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkSimpleContourExtractorImageFilterIUL3IUL3_Pointer {
   public:
     itkSimpleContourExtractorImageFilterIUL3IUL3_Pointer();
     itkSimpleContourExtractorImageFilterIUL3IUL3_Pointer(itkSimpleContourExtractorImageFilterIUL3IUL3_Pointer const & p);
     itkSimpleContourExtractorImageFilterIUL3IUL3_Pointer(itkSimpleContourExtractorImageFilterIUL3IUL3 * p);
     ~itkSimpleContourExtractorImageFilterIUL3IUL3_Pointer();
     itkSimpleContourExtractorImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSimpleContourExtractorImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkSimpleContourExtractorImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkSimpleContourExtractorImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkSimpleContourExtractorImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkSimpleContourExtractorImageFilterIUL3IUL3_Pointer const & r) const;
     itkSimpleContourExtractorImageFilterIUL3IUL3_Pointer & operator=(itkSimpleContourExtractorImageFilterIUL3IUL3_Pointer const & r);
     itkSimpleContourExtractorImageFilterIUL3IUL3_Pointer & operator=(itkSimpleContourExtractorImageFilterIUL3IUL3 * r);
     itkSimpleContourExtractorImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSimpleContourExtractorImageFilterIUS2IUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkSimpleContourExtractorImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRadius(itkSize2 const _arg);
     virtual itkSize2 const & GetRadius() const;
     virtual void SetInputForegroundValue(unsigned short const _arg);
     virtual unsigned short const & GetInputForegroundValue() const;
     virtual void SetInputBackgroundValue(unsigned short const _arg);
     virtual unsigned short const & GetInputBackgroundValue() const;
     virtual void SetOutputForegroundValue(unsigned short const _arg);
     virtual unsigned short const & GetOutputForegroundValue() const;
     virtual void SetOutputBackgroundValue(unsigned short const _arg);
     virtual unsigned short const & GetOutputBackgroundValue() const;
     virtual void GenerateInputRequestedRegion();
   private:
     itkSimpleContourExtractorImageFilterIUS2IUS2(itkSimpleContourExtractorImageFilterIUS2IUS2 const & arg0);
     void operator=(itkSimpleContourExtractorImageFilterIUS2IUS2 const & arg0);
   protected:
     itkSimpleContourExtractorImageFilterIUS2IUS2();
     ~itkSimpleContourExtractorImageFilterIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkSimpleContourExtractorImageFilterIUS2IUS2_Pointer {
   public:
     itkSimpleContourExtractorImageFilterIUS2IUS2_Pointer();
     itkSimpleContourExtractorImageFilterIUS2IUS2_Pointer(itkSimpleContourExtractorImageFilterIUS2IUS2_Pointer const & p);
     itkSimpleContourExtractorImageFilterIUS2IUS2_Pointer(itkSimpleContourExtractorImageFilterIUS2IUS2 * p);
     ~itkSimpleContourExtractorImageFilterIUS2IUS2_Pointer();
     itkSimpleContourExtractorImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSimpleContourExtractorImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkSimpleContourExtractorImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkSimpleContourExtractorImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkSimpleContourExtractorImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkSimpleContourExtractorImageFilterIUS2IUS2_Pointer const & r) const;
     itkSimpleContourExtractorImageFilterIUS2IUS2_Pointer & operator=(itkSimpleContourExtractorImageFilterIUS2IUS2_Pointer const & r);
     itkSimpleContourExtractorImageFilterIUS2IUS2_Pointer & operator=(itkSimpleContourExtractorImageFilterIUS2IUS2 * r);
     itkSimpleContourExtractorImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSimpleContourExtractorImageFilterIUS3IUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkSimpleContourExtractorImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRadius(itkSize3 const _arg);
     virtual itkSize3 const & GetRadius() const;
     virtual void SetInputForegroundValue(unsigned short const _arg);
     virtual unsigned short const & GetInputForegroundValue() const;
     virtual void SetInputBackgroundValue(unsigned short const _arg);
     virtual unsigned short const & GetInputBackgroundValue() const;
     virtual void SetOutputForegroundValue(unsigned short const _arg);
     virtual unsigned short const & GetOutputForegroundValue() const;
     virtual void SetOutputBackgroundValue(unsigned short const _arg);
     virtual unsigned short const & GetOutputBackgroundValue() const;
     virtual void GenerateInputRequestedRegion();
   private:
     itkSimpleContourExtractorImageFilterIUS3IUS3(itkSimpleContourExtractorImageFilterIUS3IUS3 const & arg0);
     void operator=(itkSimpleContourExtractorImageFilterIUS3IUS3 const & arg0);
   protected:
     itkSimpleContourExtractorImageFilterIUS3IUS3();
     ~itkSimpleContourExtractorImageFilterIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkSimpleContourExtractorImageFilterIUS3IUS3_Pointer {
   public:
     itkSimpleContourExtractorImageFilterIUS3IUS3_Pointer();
     itkSimpleContourExtractorImageFilterIUS3IUS3_Pointer(itkSimpleContourExtractorImageFilterIUS3IUS3_Pointer const & p);
     itkSimpleContourExtractorImageFilterIUS3IUS3_Pointer(itkSimpleContourExtractorImageFilterIUS3IUS3 * p);
     ~itkSimpleContourExtractorImageFilterIUS3IUS3_Pointer();
     itkSimpleContourExtractorImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSimpleContourExtractorImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkSimpleContourExtractorImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkSimpleContourExtractorImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkSimpleContourExtractorImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkSimpleContourExtractorImageFilterIUS3IUS3_Pointer const & r) const;
     itkSimpleContourExtractorImageFilterIUS3IUS3_Pointer & operator=(itkSimpleContourExtractorImageFilterIUS3IUS3_Pointer const & r);
     itkSimpleContourExtractorImageFilterIUS3IUS3_Pointer & operator=(itkSimpleContourExtractorImageFilterIUS3IUS3 * r);
     itkSimpleContourExtractorImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


