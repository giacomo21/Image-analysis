// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkFastMarchingExtensionImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkFastMarchingExtensionImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkFastMarchingExtensionImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkFastMarchingExtensionImageFilterJava
#endif
#ifdef SWIGLUA
%module itkFastMarchingExtensionImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkFastMarchingExtensionImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkFastMarchingExtensionImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkFastMarchingExtensionImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkFastMarchingExtensionImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkFastMarchingExtensionImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkFastMarchingExtensionImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkFastMarchingExtensionImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkFastMarchingExtensionImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkFastMarchingExtensionImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkFastMarchingExtensionImageFilterPython
#endif
#ifdef SWIGR
%module itkFastMarchingExtensionImageFilterR
#endif
#ifdef SWIGRUBY
%module itkFastMarchingExtensionImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkFastMarchingExtensionImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkFastMarchingExtensionImageFilterTcl
#endif
#ifdef SWIGXML
%module itkFastMarchingExtensionImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Numerics.includes"
#include "LevelSet.includes"
%}


%{
%}




%import wrap_itkFastMarchingImageFilter.i
%import wrap_itkIndex.i
%import wrap_itkImage.i
%import wrap_itkVectorContainer.i
%import wrap_ITKCommonBase.i


%include itk.i
%include wrap_itkFastMarchingExtensionImageFilter_ext.i


 class itkFastMarchingExtensionImageFilterID2UC1ID2 : public itkFastMarchingImageFilterID2ID2 {
   public:
     enum  {  SetDimension = 2 };
     enum  {  AuxDimension = 1 };
     enum  {  AuxValueHasNumericTraitsCheck = 1 };
     static itkFastMarchingExtensionImageFilterID2UC1ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itkImageUC2 * GetAuxiliaryImage(unsigned int idx);
     void SetAuxiliaryAliveValues(itkVectorContainerUIVUC1 * values);
     itkVectorContainerUIVUC1 * GetAuxiliaryAliveValues();
     void SetAuxiliaryTrialValues(itkVectorContainerUIVUC1 * values);
     itkVectorContainerUIVUC1_Pointer GetAuxiliaryTrialValues();
   private:
     itkFastMarchingExtensionImageFilterID2UC1ID2(itkFastMarchingExtensionImageFilterID2UC1ID2 const & arg0);
     void operator=(itkFastMarchingExtensionImageFilterID2UC1ID2 const & arg0);
   protected:
     itkFastMarchingExtensionImageFilterID2UC1ID2();
     ~itkFastMarchingExtensionImageFilterID2UC1ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void Initialize(itkImageD2 * arg0);
     virtual double UpdateValue(itkIndex2 const & index, itkImageD2 const * speed, itkImageD2 * output);
     virtual void GenerateOutputInformation();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
 };


 class itkFastMarchingExtensionImageFilterID2UC1ID2_Pointer {
   public:
     itkFastMarchingExtensionImageFilterID2UC1ID2_Pointer();
     itkFastMarchingExtensionImageFilterID2UC1ID2_Pointer(itkFastMarchingExtensionImageFilterID2UC1ID2_Pointer const & p);
     itkFastMarchingExtensionImageFilterID2UC1ID2_Pointer(itkFastMarchingExtensionImageFilterID2UC1ID2 * p);
     ~itkFastMarchingExtensionImageFilterID2UC1ID2_Pointer();
     itkFastMarchingExtensionImageFilterID2UC1ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkFastMarchingExtensionImageFilterID2UC1ID2 * GetPointer() const;
     bool operator<(itkFastMarchingExtensionImageFilterID2UC1ID2_Pointer const & r) const;
     bool operator>(itkFastMarchingExtensionImageFilterID2UC1ID2_Pointer const & r) const;
     bool operator<=(itkFastMarchingExtensionImageFilterID2UC1ID2_Pointer const & r) const;
     bool operator>=(itkFastMarchingExtensionImageFilterID2UC1ID2_Pointer const & r) const;
     itkFastMarchingExtensionImageFilterID2UC1ID2_Pointer & operator=(itkFastMarchingExtensionImageFilterID2UC1ID2_Pointer const & r);
     itkFastMarchingExtensionImageFilterID2UC1ID2_Pointer & operator=(itkFastMarchingExtensionImageFilterID2UC1ID2 * r);
     itkFastMarchingExtensionImageFilterID2UC1ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkFastMarchingExtensionImageFilterID3UC1ID3 : public itkFastMarchingImageFilterID3ID3 {
   public:
     enum  {  SetDimension = 3 };
     enum  {  AuxDimension = 1 };
     enum  {  AuxValueHasNumericTraitsCheck = 1 };
     static itkFastMarchingExtensionImageFilterID3UC1ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itkImageUC3 * GetAuxiliaryImage(unsigned int idx);
     void SetAuxiliaryAliveValues(itkVectorContainerUIVUC1 * values);
     itkVectorContainerUIVUC1 * GetAuxiliaryAliveValues();
     void SetAuxiliaryTrialValues(itkVectorContainerUIVUC1 * values);
     itkVectorContainerUIVUC1_Pointer GetAuxiliaryTrialValues();
   private:
     itkFastMarchingExtensionImageFilterID3UC1ID3(itkFastMarchingExtensionImageFilterID3UC1ID3 const & arg0);
     void operator=(itkFastMarchingExtensionImageFilterID3UC1ID3 const & arg0);
   protected:
     itkFastMarchingExtensionImageFilterID3UC1ID3();
     ~itkFastMarchingExtensionImageFilterID3UC1ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void Initialize(itkImageD3 * arg0);
     virtual double UpdateValue(itkIndex3 const & index, itkImageD3 const * speed, itkImageD3 * output);
     virtual void GenerateOutputInformation();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
 };


 class itkFastMarchingExtensionImageFilterID3UC1ID3_Pointer {
   public:
     itkFastMarchingExtensionImageFilterID3UC1ID3_Pointer();
     itkFastMarchingExtensionImageFilterID3UC1ID3_Pointer(itkFastMarchingExtensionImageFilterID3UC1ID3_Pointer const & p);
     itkFastMarchingExtensionImageFilterID3UC1ID3_Pointer(itkFastMarchingExtensionImageFilterID3UC1ID3 * p);
     ~itkFastMarchingExtensionImageFilterID3UC1ID3_Pointer();
     itkFastMarchingExtensionImageFilterID3UC1ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkFastMarchingExtensionImageFilterID3UC1ID3 * GetPointer() const;
     bool operator<(itkFastMarchingExtensionImageFilterID3UC1ID3_Pointer const & r) const;
     bool operator>(itkFastMarchingExtensionImageFilterID3UC1ID3_Pointer const & r) const;
     bool operator<=(itkFastMarchingExtensionImageFilterID3UC1ID3_Pointer const & r) const;
     bool operator>=(itkFastMarchingExtensionImageFilterID3UC1ID3_Pointer const & r) const;
     itkFastMarchingExtensionImageFilterID3UC1ID3_Pointer & operator=(itkFastMarchingExtensionImageFilterID3UC1ID3_Pointer const & r);
     itkFastMarchingExtensionImageFilterID3UC1ID3_Pointer & operator=(itkFastMarchingExtensionImageFilterID3UC1ID3 * r);
     itkFastMarchingExtensionImageFilterID3UC1ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkFastMarchingExtensionImageFilterIF2UC1IF2 : public itkFastMarchingImageFilterIF2IF2 {
   public:
     enum  {  SetDimension = 2 };
     enum  {  AuxDimension = 1 };
     enum  {  AuxValueHasNumericTraitsCheck = 1 };
     static itkFastMarchingExtensionImageFilterIF2UC1IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itkImageUC2 * GetAuxiliaryImage(unsigned int idx);
     void SetAuxiliaryAliveValues(itkVectorContainerUIVUC1 * values);
     itkVectorContainerUIVUC1 * GetAuxiliaryAliveValues();
     void SetAuxiliaryTrialValues(itkVectorContainerUIVUC1 * values);
     itkVectorContainerUIVUC1_Pointer GetAuxiliaryTrialValues();
   private:
     itkFastMarchingExtensionImageFilterIF2UC1IF2(itkFastMarchingExtensionImageFilterIF2UC1IF2 const & arg0);
     void operator=(itkFastMarchingExtensionImageFilterIF2UC1IF2 const & arg0);
   protected:
     itkFastMarchingExtensionImageFilterIF2UC1IF2();
     ~itkFastMarchingExtensionImageFilterIF2UC1IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void Initialize(itkImageF2 * arg0);
     virtual double UpdateValue(itkIndex2 const & index, itkImageF2 const * speed, itkImageF2 * output);
     virtual void GenerateOutputInformation();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
 };


 class itkFastMarchingExtensionImageFilterIF2UC1IF2_Pointer {
   public:
     itkFastMarchingExtensionImageFilterIF2UC1IF2_Pointer();
     itkFastMarchingExtensionImageFilterIF2UC1IF2_Pointer(itkFastMarchingExtensionImageFilterIF2UC1IF2_Pointer const & p);
     itkFastMarchingExtensionImageFilterIF2UC1IF2_Pointer(itkFastMarchingExtensionImageFilterIF2UC1IF2 * p);
     ~itkFastMarchingExtensionImageFilterIF2UC1IF2_Pointer();
     itkFastMarchingExtensionImageFilterIF2UC1IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkFastMarchingExtensionImageFilterIF2UC1IF2 * GetPointer() const;
     bool operator<(itkFastMarchingExtensionImageFilterIF2UC1IF2_Pointer const & r) const;
     bool operator>(itkFastMarchingExtensionImageFilterIF2UC1IF2_Pointer const & r) const;
     bool operator<=(itkFastMarchingExtensionImageFilterIF2UC1IF2_Pointer const & r) const;
     bool operator>=(itkFastMarchingExtensionImageFilterIF2UC1IF2_Pointer const & r) const;
     itkFastMarchingExtensionImageFilterIF2UC1IF2_Pointer & operator=(itkFastMarchingExtensionImageFilterIF2UC1IF2_Pointer const & r);
     itkFastMarchingExtensionImageFilterIF2UC1IF2_Pointer & operator=(itkFastMarchingExtensionImageFilterIF2UC1IF2 * r);
     itkFastMarchingExtensionImageFilterIF2UC1IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkFastMarchingExtensionImageFilterIF3UC1IF3 : public itkFastMarchingImageFilterIF3IF3 {
   public:
     enum  {  SetDimension = 3 };
     enum  {  AuxDimension = 1 };
     enum  {  AuxValueHasNumericTraitsCheck = 1 };
     static itkFastMarchingExtensionImageFilterIF3UC1IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itkImageUC3 * GetAuxiliaryImage(unsigned int idx);
     void SetAuxiliaryAliveValues(itkVectorContainerUIVUC1 * values);
     itkVectorContainerUIVUC1 * GetAuxiliaryAliveValues();
     void SetAuxiliaryTrialValues(itkVectorContainerUIVUC1 * values);
     itkVectorContainerUIVUC1_Pointer GetAuxiliaryTrialValues();
   private:
     itkFastMarchingExtensionImageFilterIF3UC1IF3(itkFastMarchingExtensionImageFilterIF3UC1IF3 const & arg0);
     void operator=(itkFastMarchingExtensionImageFilterIF3UC1IF3 const & arg0);
   protected:
     itkFastMarchingExtensionImageFilterIF3UC1IF3();
     ~itkFastMarchingExtensionImageFilterIF3UC1IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void Initialize(itkImageF3 * arg0);
     virtual double UpdateValue(itkIndex3 const & index, itkImageF3 const * speed, itkImageF3 * output);
     virtual void GenerateOutputInformation();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
 };


 class itkFastMarchingExtensionImageFilterIF3UC1IF3_Pointer {
   public:
     itkFastMarchingExtensionImageFilterIF3UC1IF3_Pointer();
     itkFastMarchingExtensionImageFilterIF3UC1IF3_Pointer(itkFastMarchingExtensionImageFilterIF3UC1IF3_Pointer const & p);
     itkFastMarchingExtensionImageFilterIF3UC1IF3_Pointer(itkFastMarchingExtensionImageFilterIF3UC1IF3 * p);
     ~itkFastMarchingExtensionImageFilterIF3UC1IF3_Pointer();
     itkFastMarchingExtensionImageFilterIF3UC1IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkFastMarchingExtensionImageFilterIF3UC1IF3 * GetPointer() const;
     bool operator<(itkFastMarchingExtensionImageFilterIF3UC1IF3_Pointer const & r) const;
     bool operator>(itkFastMarchingExtensionImageFilterIF3UC1IF3_Pointer const & r) const;
     bool operator<=(itkFastMarchingExtensionImageFilterIF3UC1IF3_Pointer const & r) const;
     bool operator>=(itkFastMarchingExtensionImageFilterIF3UC1IF3_Pointer const & r) const;
     itkFastMarchingExtensionImageFilterIF3UC1IF3_Pointer & operator=(itkFastMarchingExtensionImageFilterIF3UC1IF3_Pointer const & r);
     itkFastMarchingExtensionImageFilterIF3UC1IF3_Pointer & operator=(itkFastMarchingExtensionImageFilterIF3UC1IF3 * r);
     itkFastMarchingExtensionImageFilterIF3UC1IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


