// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkConstrainedValueDifferenceImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkConstrainedValueDifferenceImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkConstrainedValueDifferenceImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkConstrainedValueDifferenceImageFilterJava
#endif
#ifdef SWIGLUA
%module itkConstrainedValueDifferenceImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkConstrainedValueDifferenceImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkConstrainedValueDifferenceImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkConstrainedValueDifferenceImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkConstrainedValueDifferenceImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkConstrainedValueDifferenceImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkConstrainedValueDifferenceImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkConstrainedValueDifferenceImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkConstrainedValueDifferenceImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkConstrainedValueDifferenceImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkConstrainedValueDifferenceImageFilterPython
#endif
#ifdef SWIGR
%module itkConstrainedValueDifferenceImageFilterR
#endif
#ifdef SWIGRUBY
%module itkConstrainedValueDifferenceImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkConstrainedValueDifferenceImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkConstrainedValueDifferenceImageFilterTcl
#endif
#ifdef SWIGXML
%module itkConstrainedValueDifferenceImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "PixelMath.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkInPlaceImageFilterA.i
%import wrap_ITKRegions.i
%import wrap_itkImage.i


%include itk.i
%include wrap_itkConstrainedValueDifferenceImageFilter_ext.i


 class itkConstrainedValueDifferenceImageFilterID2ID2ID2_Pointer {
   public:
     itkConstrainedValueDifferenceImageFilterID2ID2ID2_Pointer();
     itkConstrainedValueDifferenceImageFilterID2ID2ID2_Pointer(itkConstrainedValueDifferenceImageFilterID2ID2ID2_Pointer const & p);
     itkConstrainedValueDifferenceImageFilterID2ID2ID2_Pointer(itkConstrainedValueDifferenceImageFilterID2ID2ID2 * p);
     ~itkConstrainedValueDifferenceImageFilterID2ID2ID2_Pointer();
     itkConstrainedValueDifferenceImageFilterID2ID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueDifferenceImageFilterID2ID2ID2 * GetPointer() const;
     bool operator<(itkConstrainedValueDifferenceImageFilterID2ID2ID2_Pointer const & r) const;
     bool operator>(itkConstrainedValueDifferenceImageFilterID2ID2ID2_Pointer const & r) const;
     bool operator<=(itkConstrainedValueDifferenceImageFilterID2ID2ID2_Pointer const & r) const;
     bool operator>=(itkConstrainedValueDifferenceImageFilterID2ID2ID2_Pointer const & r) const;
     itkConstrainedValueDifferenceImageFilterID2ID2ID2_Pointer & operator=(itkConstrainedValueDifferenceImageFilterID2ID2ID2_Pointer const & r);
     itkConstrainedValueDifferenceImageFilterID2ID2ID2_Pointer & operator=(itkConstrainedValueDifferenceImageFilterID2ID2ID2 * r);
     itkConstrainedValueDifferenceImageFilterID2ID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueDifferenceImageFilterID2ID2ID2_Superclass : public itkInPlaceImageFilterID2ID2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkConstrainedValueDifferenceImageFilterID2ID2ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageD2 const * image1);
     void SetInput2(itkImageD2 const * image2);
     itk::Functor::ConstrainedValueDifference< double, double, double > & GetFunctor();
     itk::Functor::ConstrainedValueDifference< double, double, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ConstrainedValueDifference< double, double, double > const & functor);
   private:
     itkConstrainedValueDifferenceImageFilterID2ID2ID2_Superclass(itkConstrainedValueDifferenceImageFilterID2ID2ID2_Superclass const & arg0);
     void operator=(itkConstrainedValueDifferenceImageFilterID2ID2ID2_Superclass const & arg0);
   protected:
     itkConstrainedValueDifferenceImageFilterID2ID2ID2_Superclass();
     ~itkConstrainedValueDifferenceImageFilterID2ID2ID2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkConstrainedValueDifferenceImageFilterID2ID2ID2_Superclass_Pointer {
   public:
     itkConstrainedValueDifferenceImageFilterID2ID2ID2_Superclass_Pointer();
     itkConstrainedValueDifferenceImageFilterID2ID2ID2_Superclass_Pointer(itkConstrainedValueDifferenceImageFilterID2ID2ID2_Superclass_Pointer const & p);
     itkConstrainedValueDifferenceImageFilterID2ID2ID2_Superclass_Pointer(itkConstrainedValueDifferenceImageFilterID2ID2ID2_Superclass * p);
     ~itkConstrainedValueDifferenceImageFilterID2ID2ID2_Superclass_Pointer();
     itkConstrainedValueDifferenceImageFilterID2ID2ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueDifferenceImageFilterID2ID2ID2_Superclass * GetPointer() const;
     bool operator<(itkConstrainedValueDifferenceImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     bool operator>(itkConstrainedValueDifferenceImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkConstrainedValueDifferenceImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkConstrainedValueDifferenceImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     itkConstrainedValueDifferenceImageFilterID2ID2ID2_Superclass_Pointer & operator=(itkConstrainedValueDifferenceImageFilterID2ID2ID2_Superclass_Pointer const & r);
     itkConstrainedValueDifferenceImageFilterID2ID2ID2_Superclass_Pointer & operator=(itkConstrainedValueDifferenceImageFilterID2ID2ID2_Superclass * r);
     itkConstrainedValueDifferenceImageFilterID2ID2ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueDifferenceImageFilterID3ID3ID3_Pointer {
   public:
     itkConstrainedValueDifferenceImageFilterID3ID3ID3_Pointer();
     itkConstrainedValueDifferenceImageFilterID3ID3ID3_Pointer(itkConstrainedValueDifferenceImageFilterID3ID3ID3_Pointer const & p);
     itkConstrainedValueDifferenceImageFilterID3ID3ID3_Pointer(itkConstrainedValueDifferenceImageFilterID3ID3ID3 * p);
     ~itkConstrainedValueDifferenceImageFilterID3ID3ID3_Pointer();
     itkConstrainedValueDifferenceImageFilterID3ID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueDifferenceImageFilterID3ID3ID3 * GetPointer() const;
     bool operator<(itkConstrainedValueDifferenceImageFilterID3ID3ID3_Pointer const & r) const;
     bool operator>(itkConstrainedValueDifferenceImageFilterID3ID3ID3_Pointer const & r) const;
     bool operator<=(itkConstrainedValueDifferenceImageFilterID3ID3ID3_Pointer const & r) const;
     bool operator>=(itkConstrainedValueDifferenceImageFilterID3ID3ID3_Pointer const & r) const;
     itkConstrainedValueDifferenceImageFilterID3ID3ID3_Pointer & operator=(itkConstrainedValueDifferenceImageFilterID3ID3ID3_Pointer const & r);
     itkConstrainedValueDifferenceImageFilterID3ID3ID3_Pointer & operator=(itkConstrainedValueDifferenceImageFilterID3ID3ID3 * r);
     itkConstrainedValueDifferenceImageFilterID3ID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueDifferenceImageFilterID3ID3ID3_Superclass : public itkInPlaceImageFilterID3ID3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkConstrainedValueDifferenceImageFilterID3ID3ID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageD3 const * image1);
     void SetInput2(itkImageD3 const * image2);
     itk::Functor::ConstrainedValueDifference< double, double, double > & GetFunctor();
     itk::Functor::ConstrainedValueDifference< double, double, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ConstrainedValueDifference< double, double, double > const & functor);
   private:
     itkConstrainedValueDifferenceImageFilterID3ID3ID3_Superclass(itkConstrainedValueDifferenceImageFilterID3ID3ID3_Superclass const & arg0);
     void operator=(itkConstrainedValueDifferenceImageFilterID3ID3ID3_Superclass const & arg0);
   protected:
     itkConstrainedValueDifferenceImageFilterID3ID3ID3_Superclass();
     ~itkConstrainedValueDifferenceImageFilterID3ID3ID3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkConstrainedValueDifferenceImageFilterID3ID3ID3_Superclass_Pointer {
   public:
     itkConstrainedValueDifferenceImageFilterID3ID3ID3_Superclass_Pointer();
     itkConstrainedValueDifferenceImageFilterID3ID3ID3_Superclass_Pointer(itkConstrainedValueDifferenceImageFilterID3ID3ID3_Superclass_Pointer const & p);
     itkConstrainedValueDifferenceImageFilterID3ID3ID3_Superclass_Pointer(itkConstrainedValueDifferenceImageFilterID3ID3ID3_Superclass * p);
     ~itkConstrainedValueDifferenceImageFilterID3ID3ID3_Superclass_Pointer();
     itkConstrainedValueDifferenceImageFilterID3ID3ID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueDifferenceImageFilterID3ID3ID3_Superclass * GetPointer() const;
     bool operator<(itkConstrainedValueDifferenceImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     bool operator>(itkConstrainedValueDifferenceImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     bool operator<=(itkConstrainedValueDifferenceImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     bool operator>=(itkConstrainedValueDifferenceImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     itkConstrainedValueDifferenceImageFilterID3ID3ID3_Superclass_Pointer & operator=(itkConstrainedValueDifferenceImageFilterID3ID3ID3_Superclass_Pointer const & r);
     itkConstrainedValueDifferenceImageFilterID3ID3ID3_Superclass_Pointer & operator=(itkConstrainedValueDifferenceImageFilterID3ID3ID3_Superclass * r);
     itkConstrainedValueDifferenceImageFilterID3ID3ID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Pointer {
   public:
     itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Pointer();
     itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Pointer(itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Pointer const & p);
     itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Pointer(itkConstrainedValueDifferenceImageFilterIF2IF2IF2 * p);
     ~itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Pointer();
     itkConstrainedValueDifferenceImageFilterIF2IF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueDifferenceImageFilterIF2IF2IF2 * GetPointer() const;
     bool operator<(itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Pointer const & r) const;
     bool operator>(itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Pointer const & r) const;
     bool operator<=(itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Pointer const & r) const;
     bool operator>=(itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Pointer const & r) const;
     itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Pointer const & r);
     itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIF2IF2IF2 * r);
     itkConstrainedValueDifferenceImageFilterIF2IF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Superclass : public itkInPlaceImageFilterIF2IF2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageF2 const * image1);
     void SetInput2(itkImageF2 const * image2);
     itk::Functor::ConstrainedValueDifference< float, float, float > & GetFunctor();
     itk::Functor::ConstrainedValueDifference< float, float, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ConstrainedValueDifference< float, float, float > const & functor);
   private:
     itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Superclass(itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Superclass const & arg0);
     void operator=(itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Superclass const & arg0);
   protected:
     itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Superclass();
     ~itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Superclass_Pointer {
   public:
     itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Superclass_Pointer();
     itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Superclass_Pointer(itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Superclass_Pointer const & p);
     itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Superclass_Pointer(itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Superclass * p);
     ~itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Superclass_Pointer();
     itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Superclass * GetPointer() const;
     bool operator<(itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     bool operator>(itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Superclass_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Superclass_Pointer const & r);
     itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Superclass_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Superclass * r);
     itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Pointer {
   public:
     itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Pointer();
     itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Pointer(itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Pointer const & p);
     itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Pointer(itkConstrainedValueDifferenceImageFilterIF3IF3IF3 * p);
     ~itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Pointer();
     itkConstrainedValueDifferenceImageFilterIF3IF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueDifferenceImageFilterIF3IF3IF3 * GetPointer() const;
     bool operator<(itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Pointer const & r) const;
     bool operator>(itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Pointer const & r) const;
     bool operator<=(itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Pointer const & r) const;
     bool operator>=(itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Pointer const & r) const;
     itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Pointer const & r);
     itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIF3IF3IF3 * r);
     itkConstrainedValueDifferenceImageFilterIF3IF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Superclass : public itkInPlaceImageFilterIF3IF3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageF3 const * image1);
     void SetInput2(itkImageF3 const * image2);
     itk::Functor::ConstrainedValueDifference< float, float, float > & GetFunctor();
     itk::Functor::ConstrainedValueDifference< float, float, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ConstrainedValueDifference< float, float, float > const & functor);
   private:
     itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Superclass(itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Superclass const & arg0);
     void operator=(itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Superclass const & arg0);
   protected:
     itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Superclass();
     ~itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Superclass_Pointer {
   public:
     itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Superclass_Pointer();
     itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Superclass_Pointer(itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Superclass_Pointer const & p);
     itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Superclass_Pointer(itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Superclass * p);
     ~itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Superclass_Pointer();
     itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Superclass * GetPointer() const;
     bool operator<(itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     bool operator>(itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Superclass_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Superclass_Pointer const & r);
     itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Superclass_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Superclass * r);
     itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Pointer {
   public:
     itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Pointer();
     itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Pointer(itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Pointer const & p);
     itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Pointer(itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2 * p);
     ~itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Pointer();
     itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2 * GetPointer() const;
     bool operator<(itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator>(itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator<=(itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator>=(itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Pointer const & r);
     itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2 * r);
     itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Superclass : public itkInPlaceImageFilterIUC2IUC2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUC2 const * image1);
     void SetInput2(itkImageUC2 const * image2);
     itk::Functor::ConstrainedValueDifference< unsigned char, unsigned char, unsigned char > & GetFunctor();
     itk::Functor::ConstrainedValueDifference< unsigned char, unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ConstrainedValueDifference< unsigned char, unsigned char, unsigned char > const & functor);
   private:
     itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Superclass(itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Superclass const & arg0);
     void operator=(itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Superclass const & arg0);
   protected:
     itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Superclass();
     ~itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Superclass_Pointer {
   public:
     itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Superclass_Pointer();
     itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Superclass_Pointer(itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Superclass_Pointer const & p);
     itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Superclass_Pointer(itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Superclass * p);
     ~itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Superclass_Pointer();
     itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Superclass * GetPointer() const;
     bool operator<(itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Superclass_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r);
     itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Superclass_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Superclass * r);
     itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Pointer {
   public:
     itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Pointer();
     itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Pointer(itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Pointer const & p);
     itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Pointer(itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3 * p);
     ~itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Pointer();
     itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3 * GetPointer() const;
     bool operator<(itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     bool operator>(itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     bool operator<=(itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     bool operator>=(itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Pointer const & r);
     itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3 * r);
     itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Superclass : public itkInPlaceImageFilterIUC3IUC3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUC3 const * image1);
     void SetInput2(itkImageUC3 const * image2);
     itk::Functor::ConstrainedValueDifference< unsigned char, unsigned char, unsigned char > & GetFunctor();
     itk::Functor::ConstrainedValueDifference< unsigned char, unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ConstrainedValueDifference< unsigned char, unsigned char, unsigned char > const & functor);
   private:
     itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Superclass(itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Superclass const & arg0);
     void operator=(itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Superclass const & arg0);
   protected:
     itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Superclass();
     ~itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Superclass_Pointer {
   public:
     itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Superclass_Pointer();
     itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Superclass_Pointer(itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Superclass_Pointer const & p);
     itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Superclass_Pointer(itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Superclass * p);
     ~itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Superclass_Pointer();
     itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Superclass * GetPointer() const;
     bool operator<(itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>(itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     bool operator<=(itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>=(itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Superclass_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r);
     itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Superclass_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Superclass * r);
     itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Pointer {
   public:
     itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Pointer();
     itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Pointer(itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Pointer const & p);
     itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Pointer(itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2 * p);
     ~itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Pointer();
     itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2 * GetPointer() const;
     bool operator<(itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator>(itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator<=(itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator>=(itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Pointer const & r);
     itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2 * r);
     itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Superclass : public itkInPlaceImageFilterIUL2IUL2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUL2 const * image1);
     void SetInput2(itkImageUL2 const * image2);
     itk::Functor::ConstrainedValueDifference< unsigned long, unsigned long, unsigned long > & GetFunctor();
     itk::Functor::ConstrainedValueDifference< unsigned long, unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ConstrainedValueDifference< unsigned long, unsigned long, unsigned long > const & functor);
   private:
     itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Superclass(itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Superclass const & arg0);
     void operator=(itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Superclass const & arg0);
   protected:
     itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Superclass();
     ~itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Superclass_Pointer {
   public:
     itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Superclass_Pointer();
     itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Superclass_Pointer(itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Superclass_Pointer const & p);
     itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Superclass_Pointer(itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Superclass * p);
     ~itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Superclass_Pointer();
     itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Superclass * GetPointer() const;
     bool operator<(itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>(itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Superclass_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r);
     itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Superclass_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Superclass * r);
     itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Pointer {
   public:
     itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Pointer();
     itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Pointer(itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Pointer const & p);
     itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Pointer(itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3 * p);
     ~itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Pointer();
     itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3 * GetPointer() const;
     bool operator<(itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     bool operator>(itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     bool operator<=(itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     bool operator>=(itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Pointer const & r);
     itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3 * r);
     itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Superclass : public itkInPlaceImageFilterIUL3IUL3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUL3 const * image1);
     void SetInput2(itkImageUL3 const * image2);
     itk::Functor::ConstrainedValueDifference< unsigned long, unsigned long, unsigned long > & GetFunctor();
     itk::Functor::ConstrainedValueDifference< unsigned long, unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ConstrainedValueDifference< unsigned long, unsigned long, unsigned long > const & functor);
   private:
     itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Superclass(itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Superclass const & arg0);
     void operator=(itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Superclass const & arg0);
   protected:
     itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Superclass();
     ~itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Superclass_Pointer {
   public:
     itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Superclass_Pointer();
     itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Superclass_Pointer(itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Superclass_Pointer const & p);
     itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Superclass_Pointer(itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Superclass * p);
     ~itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Superclass_Pointer();
     itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Superclass * GetPointer() const;
     bool operator<(itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>(itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     bool operator<=(itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>=(itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Superclass_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r);
     itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Superclass_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Superclass * r);
     itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Pointer {
   public:
     itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Pointer();
     itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Pointer(itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Pointer const & p);
     itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Pointer(itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2 * p);
     ~itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Pointer();
     itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2 * GetPointer() const;
     bool operator<(itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator>(itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator<=(itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator>=(itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Pointer const & r);
     itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2 * r);
     itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Superclass : public itkInPlaceImageFilterIUS2IUS2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUS2 const * image1);
     void SetInput2(itkImageUS2 const * image2);
     itk::Functor::ConstrainedValueDifference< unsigned short, unsigned short, unsigned short > & GetFunctor();
     itk::Functor::ConstrainedValueDifference< unsigned short, unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ConstrainedValueDifference< unsigned short, unsigned short, unsigned short > const & functor);
   private:
     itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Superclass(itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Superclass const & arg0);
     void operator=(itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Superclass const & arg0);
   protected:
     itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Superclass();
     ~itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Superclass_Pointer {
   public:
     itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Superclass_Pointer();
     itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Superclass_Pointer(itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Superclass_Pointer const & p);
     itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Superclass_Pointer(itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Superclass * p);
     ~itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Superclass_Pointer();
     itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Superclass * GetPointer() const;
     bool operator<(itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Superclass_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r);
     itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Superclass_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Superclass * r);
     itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Pointer {
   public:
     itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Pointer();
     itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Pointer(itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Pointer const & p);
     itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Pointer(itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3 * p);
     ~itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Pointer();
     itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3 * GetPointer() const;
     bool operator<(itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     bool operator>(itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     bool operator<=(itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     bool operator>=(itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Pointer const & r);
     itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3 * r);
     itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Superclass : public itkInPlaceImageFilterIUS3IUS3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUS3 const * image1);
     void SetInput2(itkImageUS3 const * image2);
     itk::Functor::ConstrainedValueDifference< unsigned short, unsigned short, unsigned short > & GetFunctor();
     itk::Functor::ConstrainedValueDifference< unsigned short, unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ConstrainedValueDifference< unsigned short, unsigned short, unsigned short > const & functor);
   private:
     itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Superclass(itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Superclass const & arg0);
     void operator=(itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Superclass const & arg0);
   protected:
     itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Superclass();
     ~itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Superclass_Pointer {
   public:
     itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Superclass_Pointer();
     itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Superclass_Pointer(itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Superclass_Pointer const & p);
     itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Superclass_Pointer(itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Superclass * p);
     ~itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Superclass_Pointer();
     itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Superclass * GetPointer() const;
     bool operator<(itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>(itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Superclass_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r);
     itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Superclass_Pointer & operator=(itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Superclass * r);
     itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueDifferenceImageFilterID2ID2ID2 : public itkConstrainedValueDifferenceImageFilterID2ID2ID2_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  DoubleGreaterThanOutputCheck = 1 };
     static itkConstrainedValueDifferenceImageFilterID2ID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkConstrainedValueDifferenceImageFilterID2ID2ID2(itkConstrainedValueDifferenceImageFilterID2ID2ID2 const & arg0);
     void operator=(itkConstrainedValueDifferenceImageFilterID2ID2ID2 const & arg0);
   protected:
     itkConstrainedValueDifferenceImageFilterID2ID2ID2();
     ~itkConstrainedValueDifferenceImageFilterID2ID2ID2();
 };


 class itkConstrainedValueDifferenceImageFilterID3ID3ID3 : public itkConstrainedValueDifferenceImageFilterID3ID3ID3_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  DoubleGreaterThanOutputCheck = 1 };
     static itkConstrainedValueDifferenceImageFilterID3ID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkConstrainedValueDifferenceImageFilterID3ID3ID3(itkConstrainedValueDifferenceImageFilterID3ID3ID3 const & arg0);
     void operator=(itkConstrainedValueDifferenceImageFilterID3ID3ID3 const & arg0);
   protected:
     itkConstrainedValueDifferenceImageFilterID3ID3ID3();
     ~itkConstrainedValueDifferenceImageFilterID3ID3ID3();
 };


 class itkConstrainedValueDifferenceImageFilterIF2IF2IF2 : public itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  DoubleGreaterThanOutputCheck = 1 };
     static itkConstrainedValueDifferenceImageFilterIF2IF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkConstrainedValueDifferenceImageFilterIF2IF2IF2(itkConstrainedValueDifferenceImageFilterIF2IF2IF2 const & arg0);
     void operator=(itkConstrainedValueDifferenceImageFilterIF2IF2IF2 const & arg0);
   protected:
     itkConstrainedValueDifferenceImageFilterIF2IF2IF2();
     ~itkConstrainedValueDifferenceImageFilterIF2IF2IF2();
 };


 class itkConstrainedValueDifferenceImageFilterIF3IF3IF3 : public itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  DoubleGreaterThanOutputCheck = 1 };
     static itkConstrainedValueDifferenceImageFilterIF3IF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkConstrainedValueDifferenceImageFilterIF3IF3IF3(itkConstrainedValueDifferenceImageFilterIF3IF3IF3 const & arg0);
     void operator=(itkConstrainedValueDifferenceImageFilterIF3IF3IF3 const & arg0);
   protected:
     itkConstrainedValueDifferenceImageFilterIF3IF3IF3();
     ~itkConstrainedValueDifferenceImageFilterIF3IF3IF3();
 };


 class itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2 : public itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  DoubleGreaterThanOutputCheck = 1 };
     static itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2(itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2 const & arg0);
     void operator=(itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2 const & arg0);
   protected:
     itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2();
     ~itkConstrainedValueDifferenceImageFilterIUC2IUC2IUC2();
 };


 class itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3 : public itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  DoubleGreaterThanOutputCheck = 1 };
     static itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3(itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3 const & arg0);
     void operator=(itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3 const & arg0);
   protected:
     itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3();
     ~itkConstrainedValueDifferenceImageFilterIUC3IUC3IUC3();
 };


 class itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2 : public itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  DoubleGreaterThanOutputCheck = 1 };
     static itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2(itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2 const & arg0);
     void operator=(itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2 const & arg0);
   protected:
     itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2();
     ~itkConstrainedValueDifferenceImageFilterIUL2IUL2IUL2();
 };


 class itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3 : public itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  DoubleGreaterThanOutputCheck = 1 };
     static itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3(itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3 const & arg0);
     void operator=(itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3 const & arg0);
   protected:
     itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3();
     ~itkConstrainedValueDifferenceImageFilterIUL3IUL3IUL3();
 };


 class itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2 : public itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  DoubleGreaterThanOutputCheck = 1 };
     static itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2(itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2 const & arg0);
     void operator=(itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2 const & arg0);
   protected:
     itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2();
     ~itkConstrainedValueDifferenceImageFilterIUS2IUS2IUS2();
 };


 class itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3 : public itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  DoubleGreaterThanOutputCheck = 1 };
     static itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3(itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3 const & arg0);
     void operator=(itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3 const & arg0);
   protected:
     itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3();
     ~itkConstrainedValueDifferenceImageFilterIUS3IUS3IUS3();
 };


