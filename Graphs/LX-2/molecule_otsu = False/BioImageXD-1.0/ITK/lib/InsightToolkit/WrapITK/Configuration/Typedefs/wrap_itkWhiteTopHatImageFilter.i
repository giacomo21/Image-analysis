// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkWhiteTopHatImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkWhiteTopHatImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkWhiteTopHatImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkWhiteTopHatImageFilterJava
#endif
#ifdef SWIGLUA
%module itkWhiteTopHatImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkWhiteTopHatImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkWhiteTopHatImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkWhiteTopHatImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkWhiteTopHatImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkWhiteTopHatImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkWhiteTopHatImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkWhiteTopHatImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkWhiteTopHatImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkWhiteTopHatImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkWhiteTopHatImageFilterPython
#endif
#ifdef SWIGR
%module itkWhiteTopHatImageFilterR
#endif
#ifdef SWIGRUBY
%module itkWhiteTopHatImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkWhiteTopHatImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkWhiteTopHatImageFilterTcl
#endif
#ifdef SWIGXML
%module itkWhiteTopHatImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Morphology.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImageToImageFilterA.i
%import wrap_itkFlatStructuringElement.i


%include itk.i
%include wrap_itkWhiteTopHatImageFilter_ext.i


 class itkWhiteTopHatImageFilterID2ID2SE2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputAdditiveOperatorsCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  InputGreaterThanComparableCheck = 1 };
     enum  {  KernelGreaterThanComparableCheck = 1 };
     static itkWhiteTopHatImageFilterID2ID2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetKernel(itkFlatStructuringElement2 const _arg);
     virtual itkFlatStructuringElement2 const & GetKernel() const;
     virtual void SetSafeBorder(bool const _arg);
     virtual bool const & GetSafeBorder() const;
     virtual void SafeBorderOn();
     virtual void SafeBorderOff();
   private:
     itkWhiteTopHatImageFilterID2ID2SE2(itkWhiteTopHatImageFilterID2ID2SE2 const & arg0);
     void operator=(itkWhiteTopHatImageFilterID2ID2SE2 const & arg0);
   protected:
     itkWhiteTopHatImageFilterID2ID2SE2();
     ~itkWhiteTopHatImageFilterID2ID2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkWhiteTopHatImageFilterID2ID2SE2_Pointer {
   public:
     itkWhiteTopHatImageFilterID2ID2SE2_Pointer();
     itkWhiteTopHatImageFilterID2ID2SE2_Pointer(itkWhiteTopHatImageFilterID2ID2SE2_Pointer const & p);
     itkWhiteTopHatImageFilterID2ID2SE2_Pointer(itkWhiteTopHatImageFilterID2ID2SE2 * p);
     ~itkWhiteTopHatImageFilterID2ID2SE2_Pointer();
     itkWhiteTopHatImageFilterID2ID2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkWhiteTopHatImageFilterID2ID2SE2 * GetPointer() const;
     bool operator<(itkWhiteTopHatImageFilterID2ID2SE2_Pointer const & r) const;
     bool operator>(itkWhiteTopHatImageFilterID2ID2SE2_Pointer const & r) const;
     bool operator<=(itkWhiteTopHatImageFilterID2ID2SE2_Pointer const & r) const;
     bool operator>=(itkWhiteTopHatImageFilterID2ID2SE2_Pointer const & r) const;
     itkWhiteTopHatImageFilterID2ID2SE2_Pointer & operator=(itkWhiteTopHatImageFilterID2ID2SE2_Pointer const & r);
     itkWhiteTopHatImageFilterID2ID2SE2_Pointer & operator=(itkWhiteTopHatImageFilterID2ID2SE2 * r);
     itkWhiteTopHatImageFilterID2ID2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkWhiteTopHatImageFilterID3ID3SE3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputAdditiveOperatorsCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  InputGreaterThanComparableCheck = 1 };
     enum  {  KernelGreaterThanComparableCheck = 1 };
     static itkWhiteTopHatImageFilterID3ID3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetKernel(itkFlatStructuringElement3 const _arg);
     virtual itkFlatStructuringElement3 const & GetKernel() const;
     virtual void SetSafeBorder(bool const _arg);
     virtual bool const & GetSafeBorder() const;
     virtual void SafeBorderOn();
     virtual void SafeBorderOff();
   private:
     itkWhiteTopHatImageFilterID3ID3SE3(itkWhiteTopHatImageFilterID3ID3SE3 const & arg0);
     void operator=(itkWhiteTopHatImageFilterID3ID3SE3 const & arg0);
   protected:
     itkWhiteTopHatImageFilterID3ID3SE3();
     ~itkWhiteTopHatImageFilterID3ID3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkWhiteTopHatImageFilterID3ID3SE3_Pointer {
   public:
     itkWhiteTopHatImageFilterID3ID3SE3_Pointer();
     itkWhiteTopHatImageFilterID3ID3SE3_Pointer(itkWhiteTopHatImageFilterID3ID3SE3_Pointer const & p);
     itkWhiteTopHatImageFilterID3ID3SE3_Pointer(itkWhiteTopHatImageFilterID3ID3SE3 * p);
     ~itkWhiteTopHatImageFilterID3ID3SE3_Pointer();
     itkWhiteTopHatImageFilterID3ID3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkWhiteTopHatImageFilterID3ID3SE3 * GetPointer() const;
     bool operator<(itkWhiteTopHatImageFilterID3ID3SE3_Pointer const & r) const;
     bool operator>(itkWhiteTopHatImageFilterID3ID3SE3_Pointer const & r) const;
     bool operator<=(itkWhiteTopHatImageFilterID3ID3SE3_Pointer const & r) const;
     bool operator>=(itkWhiteTopHatImageFilterID3ID3SE3_Pointer const & r) const;
     itkWhiteTopHatImageFilterID3ID3SE3_Pointer & operator=(itkWhiteTopHatImageFilterID3ID3SE3_Pointer const & r);
     itkWhiteTopHatImageFilterID3ID3SE3_Pointer & operator=(itkWhiteTopHatImageFilterID3ID3SE3 * r);
     itkWhiteTopHatImageFilterID3ID3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkWhiteTopHatImageFilterIF2IF2SE2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputAdditiveOperatorsCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  InputGreaterThanComparableCheck = 1 };
     enum  {  KernelGreaterThanComparableCheck = 1 };
     static itkWhiteTopHatImageFilterIF2IF2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetKernel(itkFlatStructuringElement2 const _arg);
     virtual itkFlatStructuringElement2 const & GetKernel() const;
     virtual void SetSafeBorder(bool const _arg);
     virtual bool const & GetSafeBorder() const;
     virtual void SafeBorderOn();
     virtual void SafeBorderOff();
   private:
     itkWhiteTopHatImageFilterIF2IF2SE2(itkWhiteTopHatImageFilterIF2IF2SE2 const & arg0);
     void operator=(itkWhiteTopHatImageFilterIF2IF2SE2 const & arg0);
   protected:
     itkWhiteTopHatImageFilterIF2IF2SE2();
     ~itkWhiteTopHatImageFilterIF2IF2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkWhiteTopHatImageFilterIF2IF2SE2_Pointer {
   public:
     itkWhiteTopHatImageFilterIF2IF2SE2_Pointer();
     itkWhiteTopHatImageFilterIF2IF2SE2_Pointer(itkWhiteTopHatImageFilterIF2IF2SE2_Pointer const & p);
     itkWhiteTopHatImageFilterIF2IF2SE2_Pointer(itkWhiteTopHatImageFilterIF2IF2SE2 * p);
     ~itkWhiteTopHatImageFilterIF2IF2SE2_Pointer();
     itkWhiteTopHatImageFilterIF2IF2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkWhiteTopHatImageFilterIF2IF2SE2 * GetPointer() const;
     bool operator<(itkWhiteTopHatImageFilterIF2IF2SE2_Pointer const & r) const;
     bool operator>(itkWhiteTopHatImageFilterIF2IF2SE2_Pointer const & r) const;
     bool operator<=(itkWhiteTopHatImageFilterIF2IF2SE2_Pointer const & r) const;
     bool operator>=(itkWhiteTopHatImageFilterIF2IF2SE2_Pointer const & r) const;
     itkWhiteTopHatImageFilterIF2IF2SE2_Pointer & operator=(itkWhiteTopHatImageFilterIF2IF2SE2_Pointer const & r);
     itkWhiteTopHatImageFilterIF2IF2SE2_Pointer & operator=(itkWhiteTopHatImageFilterIF2IF2SE2 * r);
     itkWhiteTopHatImageFilterIF2IF2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkWhiteTopHatImageFilterIF3IF3SE3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputAdditiveOperatorsCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  InputGreaterThanComparableCheck = 1 };
     enum  {  KernelGreaterThanComparableCheck = 1 };
     static itkWhiteTopHatImageFilterIF3IF3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetKernel(itkFlatStructuringElement3 const _arg);
     virtual itkFlatStructuringElement3 const & GetKernel() const;
     virtual void SetSafeBorder(bool const _arg);
     virtual bool const & GetSafeBorder() const;
     virtual void SafeBorderOn();
     virtual void SafeBorderOff();
   private:
     itkWhiteTopHatImageFilterIF3IF3SE3(itkWhiteTopHatImageFilterIF3IF3SE3 const & arg0);
     void operator=(itkWhiteTopHatImageFilterIF3IF3SE3 const & arg0);
   protected:
     itkWhiteTopHatImageFilterIF3IF3SE3();
     ~itkWhiteTopHatImageFilterIF3IF3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkWhiteTopHatImageFilterIF3IF3SE3_Pointer {
   public:
     itkWhiteTopHatImageFilterIF3IF3SE3_Pointer();
     itkWhiteTopHatImageFilterIF3IF3SE3_Pointer(itkWhiteTopHatImageFilterIF3IF3SE3_Pointer const & p);
     itkWhiteTopHatImageFilterIF3IF3SE3_Pointer(itkWhiteTopHatImageFilterIF3IF3SE3 * p);
     ~itkWhiteTopHatImageFilterIF3IF3SE3_Pointer();
     itkWhiteTopHatImageFilterIF3IF3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkWhiteTopHatImageFilterIF3IF3SE3 * GetPointer() const;
     bool operator<(itkWhiteTopHatImageFilterIF3IF3SE3_Pointer const & r) const;
     bool operator>(itkWhiteTopHatImageFilterIF3IF3SE3_Pointer const & r) const;
     bool operator<=(itkWhiteTopHatImageFilterIF3IF3SE3_Pointer const & r) const;
     bool operator>=(itkWhiteTopHatImageFilterIF3IF3SE3_Pointer const & r) const;
     itkWhiteTopHatImageFilterIF3IF3SE3_Pointer & operator=(itkWhiteTopHatImageFilterIF3IF3SE3_Pointer const & r);
     itkWhiteTopHatImageFilterIF3IF3SE3_Pointer & operator=(itkWhiteTopHatImageFilterIF3IF3SE3 * r);
     itkWhiteTopHatImageFilterIF3IF3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkWhiteTopHatImageFilterIUC2IUC2SE2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputAdditiveOperatorsCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  InputGreaterThanComparableCheck = 1 };
     enum  {  KernelGreaterThanComparableCheck = 1 };
     static itkWhiteTopHatImageFilterIUC2IUC2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetKernel(itkFlatStructuringElement2 const _arg);
     virtual itkFlatStructuringElement2 const & GetKernel() const;
     virtual void SetSafeBorder(bool const _arg);
     virtual bool const & GetSafeBorder() const;
     virtual void SafeBorderOn();
     virtual void SafeBorderOff();
   private:
     itkWhiteTopHatImageFilterIUC2IUC2SE2(itkWhiteTopHatImageFilterIUC2IUC2SE2 const & arg0);
     void operator=(itkWhiteTopHatImageFilterIUC2IUC2SE2 const & arg0);
   protected:
     itkWhiteTopHatImageFilterIUC2IUC2SE2();
     ~itkWhiteTopHatImageFilterIUC2IUC2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkWhiteTopHatImageFilterIUC2IUC2SE2_Pointer {
   public:
     itkWhiteTopHatImageFilterIUC2IUC2SE2_Pointer();
     itkWhiteTopHatImageFilterIUC2IUC2SE2_Pointer(itkWhiteTopHatImageFilterIUC2IUC2SE2_Pointer const & p);
     itkWhiteTopHatImageFilterIUC2IUC2SE2_Pointer(itkWhiteTopHatImageFilterIUC2IUC2SE2 * p);
     ~itkWhiteTopHatImageFilterIUC2IUC2SE2_Pointer();
     itkWhiteTopHatImageFilterIUC2IUC2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkWhiteTopHatImageFilterIUC2IUC2SE2 * GetPointer() const;
     bool operator<(itkWhiteTopHatImageFilterIUC2IUC2SE2_Pointer const & r) const;
     bool operator>(itkWhiteTopHatImageFilterIUC2IUC2SE2_Pointer const & r) const;
     bool operator<=(itkWhiteTopHatImageFilterIUC2IUC2SE2_Pointer const & r) const;
     bool operator>=(itkWhiteTopHatImageFilterIUC2IUC2SE2_Pointer const & r) const;
     itkWhiteTopHatImageFilterIUC2IUC2SE2_Pointer & operator=(itkWhiteTopHatImageFilterIUC2IUC2SE2_Pointer const & r);
     itkWhiteTopHatImageFilterIUC2IUC2SE2_Pointer & operator=(itkWhiteTopHatImageFilterIUC2IUC2SE2 * r);
     itkWhiteTopHatImageFilterIUC2IUC2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkWhiteTopHatImageFilterIUC3IUC3SE3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputAdditiveOperatorsCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  InputGreaterThanComparableCheck = 1 };
     enum  {  KernelGreaterThanComparableCheck = 1 };
     static itkWhiteTopHatImageFilterIUC3IUC3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetKernel(itkFlatStructuringElement3 const _arg);
     virtual itkFlatStructuringElement3 const & GetKernel() const;
     virtual void SetSafeBorder(bool const _arg);
     virtual bool const & GetSafeBorder() const;
     virtual void SafeBorderOn();
     virtual void SafeBorderOff();
   private:
     itkWhiteTopHatImageFilterIUC3IUC3SE3(itkWhiteTopHatImageFilterIUC3IUC3SE3 const & arg0);
     void operator=(itkWhiteTopHatImageFilterIUC3IUC3SE3 const & arg0);
   protected:
     itkWhiteTopHatImageFilterIUC3IUC3SE3();
     ~itkWhiteTopHatImageFilterIUC3IUC3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkWhiteTopHatImageFilterIUC3IUC3SE3_Pointer {
   public:
     itkWhiteTopHatImageFilterIUC3IUC3SE3_Pointer();
     itkWhiteTopHatImageFilterIUC3IUC3SE3_Pointer(itkWhiteTopHatImageFilterIUC3IUC3SE3_Pointer const & p);
     itkWhiteTopHatImageFilterIUC3IUC3SE3_Pointer(itkWhiteTopHatImageFilterIUC3IUC3SE3 * p);
     ~itkWhiteTopHatImageFilterIUC3IUC3SE3_Pointer();
     itkWhiteTopHatImageFilterIUC3IUC3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkWhiteTopHatImageFilterIUC3IUC3SE3 * GetPointer() const;
     bool operator<(itkWhiteTopHatImageFilterIUC3IUC3SE3_Pointer const & r) const;
     bool operator>(itkWhiteTopHatImageFilterIUC3IUC3SE3_Pointer const & r) const;
     bool operator<=(itkWhiteTopHatImageFilterIUC3IUC3SE3_Pointer const & r) const;
     bool operator>=(itkWhiteTopHatImageFilterIUC3IUC3SE3_Pointer const & r) const;
     itkWhiteTopHatImageFilterIUC3IUC3SE3_Pointer & operator=(itkWhiteTopHatImageFilterIUC3IUC3SE3_Pointer const & r);
     itkWhiteTopHatImageFilterIUC3IUC3SE3_Pointer & operator=(itkWhiteTopHatImageFilterIUC3IUC3SE3 * r);
     itkWhiteTopHatImageFilterIUC3IUC3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkWhiteTopHatImageFilterIUL2IUL2SE2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputAdditiveOperatorsCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  InputGreaterThanComparableCheck = 1 };
     enum  {  KernelGreaterThanComparableCheck = 1 };
     static itkWhiteTopHatImageFilterIUL2IUL2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetKernel(itkFlatStructuringElement2 const _arg);
     virtual itkFlatStructuringElement2 const & GetKernel() const;
     virtual void SetSafeBorder(bool const _arg);
     virtual bool const & GetSafeBorder() const;
     virtual void SafeBorderOn();
     virtual void SafeBorderOff();
   private:
     itkWhiteTopHatImageFilterIUL2IUL2SE2(itkWhiteTopHatImageFilterIUL2IUL2SE2 const & arg0);
     void operator=(itkWhiteTopHatImageFilterIUL2IUL2SE2 const & arg0);
   protected:
     itkWhiteTopHatImageFilterIUL2IUL2SE2();
     ~itkWhiteTopHatImageFilterIUL2IUL2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkWhiteTopHatImageFilterIUL2IUL2SE2_Pointer {
   public:
     itkWhiteTopHatImageFilterIUL2IUL2SE2_Pointer();
     itkWhiteTopHatImageFilterIUL2IUL2SE2_Pointer(itkWhiteTopHatImageFilterIUL2IUL2SE2_Pointer const & p);
     itkWhiteTopHatImageFilterIUL2IUL2SE2_Pointer(itkWhiteTopHatImageFilterIUL2IUL2SE2 * p);
     ~itkWhiteTopHatImageFilterIUL2IUL2SE2_Pointer();
     itkWhiteTopHatImageFilterIUL2IUL2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkWhiteTopHatImageFilterIUL2IUL2SE2 * GetPointer() const;
     bool operator<(itkWhiteTopHatImageFilterIUL2IUL2SE2_Pointer const & r) const;
     bool operator>(itkWhiteTopHatImageFilterIUL2IUL2SE2_Pointer const & r) const;
     bool operator<=(itkWhiteTopHatImageFilterIUL2IUL2SE2_Pointer const & r) const;
     bool operator>=(itkWhiteTopHatImageFilterIUL2IUL2SE2_Pointer const & r) const;
     itkWhiteTopHatImageFilterIUL2IUL2SE2_Pointer & operator=(itkWhiteTopHatImageFilterIUL2IUL2SE2_Pointer const & r);
     itkWhiteTopHatImageFilterIUL2IUL2SE2_Pointer & operator=(itkWhiteTopHatImageFilterIUL2IUL2SE2 * r);
     itkWhiteTopHatImageFilterIUL2IUL2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkWhiteTopHatImageFilterIUL3IUL3SE3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputAdditiveOperatorsCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  InputGreaterThanComparableCheck = 1 };
     enum  {  KernelGreaterThanComparableCheck = 1 };
     static itkWhiteTopHatImageFilterIUL3IUL3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetKernel(itkFlatStructuringElement3 const _arg);
     virtual itkFlatStructuringElement3 const & GetKernel() const;
     virtual void SetSafeBorder(bool const _arg);
     virtual bool const & GetSafeBorder() const;
     virtual void SafeBorderOn();
     virtual void SafeBorderOff();
   private:
     itkWhiteTopHatImageFilterIUL3IUL3SE3(itkWhiteTopHatImageFilterIUL3IUL3SE3 const & arg0);
     void operator=(itkWhiteTopHatImageFilterIUL3IUL3SE3 const & arg0);
   protected:
     itkWhiteTopHatImageFilterIUL3IUL3SE3();
     ~itkWhiteTopHatImageFilterIUL3IUL3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkWhiteTopHatImageFilterIUL3IUL3SE3_Pointer {
   public:
     itkWhiteTopHatImageFilterIUL3IUL3SE3_Pointer();
     itkWhiteTopHatImageFilterIUL3IUL3SE3_Pointer(itkWhiteTopHatImageFilterIUL3IUL3SE3_Pointer const & p);
     itkWhiteTopHatImageFilterIUL3IUL3SE3_Pointer(itkWhiteTopHatImageFilterIUL3IUL3SE3 * p);
     ~itkWhiteTopHatImageFilterIUL3IUL3SE3_Pointer();
     itkWhiteTopHatImageFilterIUL3IUL3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkWhiteTopHatImageFilterIUL3IUL3SE3 * GetPointer() const;
     bool operator<(itkWhiteTopHatImageFilterIUL3IUL3SE3_Pointer const & r) const;
     bool operator>(itkWhiteTopHatImageFilterIUL3IUL3SE3_Pointer const & r) const;
     bool operator<=(itkWhiteTopHatImageFilterIUL3IUL3SE3_Pointer const & r) const;
     bool operator>=(itkWhiteTopHatImageFilterIUL3IUL3SE3_Pointer const & r) const;
     itkWhiteTopHatImageFilterIUL3IUL3SE3_Pointer & operator=(itkWhiteTopHatImageFilterIUL3IUL3SE3_Pointer const & r);
     itkWhiteTopHatImageFilterIUL3IUL3SE3_Pointer & operator=(itkWhiteTopHatImageFilterIUL3IUL3SE3 * r);
     itkWhiteTopHatImageFilterIUL3IUL3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkWhiteTopHatImageFilterIUS2IUS2SE2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputAdditiveOperatorsCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  InputGreaterThanComparableCheck = 1 };
     enum  {  KernelGreaterThanComparableCheck = 1 };
     static itkWhiteTopHatImageFilterIUS2IUS2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetKernel(itkFlatStructuringElement2 const _arg);
     virtual itkFlatStructuringElement2 const & GetKernel() const;
     virtual void SetSafeBorder(bool const _arg);
     virtual bool const & GetSafeBorder() const;
     virtual void SafeBorderOn();
     virtual void SafeBorderOff();
   private:
     itkWhiteTopHatImageFilterIUS2IUS2SE2(itkWhiteTopHatImageFilterIUS2IUS2SE2 const & arg0);
     void operator=(itkWhiteTopHatImageFilterIUS2IUS2SE2 const & arg0);
   protected:
     itkWhiteTopHatImageFilterIUS2IUS2SE2();
     ~itkWhiteTopHatImageFilterIUS2IUS2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkWhiteTopHatImageFilterIUS2IUS2SE2_Pointer {
   public:
     itkWhiteTopHatImageFilterIUS2IUS2SE2_Pointer();
     itkWhiteTopHatImageFilterIUS2IUS2SE2_Pointer(itkWhiteTopHatImageFilterIUS2IUS2SE2_Pointer const & p);
     itkWhiteTopHatImageFilterIUS2IUS2SE2_Pointer(itkWhiteTopHatImageFilterIUS2IUS2SE2 * p);
     ~itkWhiteTopHatImageFilterIUS2IUS2SE2_Pointer();
     itkWhiteTopHatImageFilterIUS2IUS2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkWhiteTopHatImageFilterIUS2IUS2SE2 * GetPointer() const;
     bool operator<(itkWhiteTopHatImageFilterIUS2IUS2SE2_Pointer const & r) const;
     bool operator>(itkWhiteTopHatImageFilterIUS2IUS2SE2_Pointer const & r) const;
     bool operator<=(itkWhiteTopHatImageFilterIUS2IUS2SE2_Pointer const & r) const;
     bool operator>=(itkWhiteTopHatImageFilterIUS2IUS2SE2_Pointer const & r) const;
     itkWhiteTopHatImageFilterIUS2IUS2SE2_Pointer & operator=(itkWhiteTopHatImageFilterIUS2IUS2SE2_Pointer const & r);
     itkWhiteTopHatImageFilterIUS2IUS2SE2_Pointer & operator=(itkWhiteTopHatImageFilterIUS2IUS2SE2 * r);
     itkWhiteTopHatImageFilterIUS2IUS2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkWhiteTopHatImageFilterIUS3IUS3SE3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputAdditiveOperatorsCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  InputGreaterThanComparableCheck = 1 };
     enum  {  KernelGreaterThanComparableCheck = 1 };
     static itkWhiteTopHatImageFilterIUS3IUS3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetKernel(itkFlatStructuringElement3 const _arg);
     virtual itkFlatStructuringElement3 const & GetKernel() const;
     virtual void SetSafeBorder(bool const _arg);
     virtual bool const & GetSafeBorder() const;
     virtual void SafeBorderOn();
     virtual void SafeBorderOff();
   private:
     itkWhiteTopHatImageFilterIUS3IUS3SE3(itkWhiteTopHatImageFilterIUS3IUS3SE3 const & arg0);
     void operator=(itkWhiteTopHatImageFilterIUS3IUS3SE3 const & arg0);
   protected:
     itkWhiteTopHatImageFilterIUS3IUS3SE3();
     ~itkWhiteTopHatImageFilterIUS3IUS3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkWhiteTopHatImageFilterIUS3IUS3SE3_Pointer {
   public:
     itkWhiteTopHatImageFilterIUS3IUS3SE3_Pointer();
     itkWhiteTopHatImageFilterIUS3IUS3SE3_Pointer(itkWhiteTopHatImageFilterIUS3IUS3SE3_Pointer const & p);
     itkWhiteTopHatImageFilterIUS3IUS3SE3_Pointer(itkWhiteTopHatImageFilterIUS3IUS3SE3 * p);
     ~itkWhiteTopHatImageFilterIUS3IUS3SE3_Pointer();
     itkWhiteTopHatImageFilterIUS3IUS3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkWhiteTopHatImageFilterIUS3IUS3SE3 * GetPointer() const;
     bool operator<(itkWhiteTopHatImageFilterIUS3IUS3SE3_Pointer const & r) const;
     bool operator>(itkWhiteTopHatImageFilterIUS3IUS3SE3_Pointer const & r) const;
     bool operator<=(itkWhiteTopHatImageFilterIUS3IUS3SE3_Pointer const & r) const;
     bool operator>=(itkWhiteTopHatImageFilterIUS3IUS3SE3_Pointer const & r) const;
     itkWhiteTopHatImageFilterIUS3IUS3SE3_Pointer & operator=(itkWhiteTopHatImageFilterIUS3IUS3SE3_Pointer const & r);
     itkWhiteTopHatImageFilterIUS3IUS3SE3_Pointer & operator=(itkWhiteTopHatImageFilterIUS3IUS3SE3 * r);
     itkWhiteTopHatImageFilterIUS3IUS3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


