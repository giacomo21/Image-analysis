# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkConvolutionImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkConvolutionImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkConvolutionImageFilterPython
            return _itkConvolutionImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkConvolutionImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkConvolutionImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkConvolutionImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageToImageFilterAPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
def itkConvolutionImageFilterID3ID3_New():
  return itkConvolutionImageFilterID3ID3.New()

def itkConvolutionImageFilterID2ID2_New():
  return itkConvolutionImageFilterID2ID2.New()

def itkConvolutionImageFilterIF3IF3_New():
  return itkConvolutionImageFilterIF3IF3.New()

def itkConvolutionImageFilterIF2IF2_New():
  return itkConvolutionImageFilterIF2IF2.New()

def itkConvolutionImageFilterIUS3IUS3_New():
  return itkConvolutionImageFilterIUS3IUS3.New()

def itkConvolutionImageFilterIUS2IUS2_New():
  return itkConvolutionImageFilterIUS2IUS2.New()

def itkConvolutionImageFilterIUL3IUL3_New():
  return itkConvolutionImageFilterIUL3IUL3.New()

def itkConvolutionImageFilterIUL2IUL2_New():
  return itkConvolutionImageFilterIUL2IUL2.New()

def itkConvolutionImageFilterIUC3IUC3_New():
  return itkConvolutionImageFilterIUC3IUC3.New()

def itkConvolutionImageFilterIUC2IUC2_New():
  return itkConvolutionImageFilterIUC2IUC2.New()

class itkConvolutionImageFilterID2ID2(itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    """Proxy of C++ itkConvolutionImageFilterID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkConvolutionImageFilterPython.itkConvolutionImageFilterID2ID2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetImageKernelInput(self, *args):
        """SetImageKernelInput(self, itkImageD2 _arg)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterID2ID2_SetImageKernelInput(self, *args)

    def SetInput1(self, *args):
        """SetInput1(self, itkImageD2 _arg)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterID2ID2_SetInput1(self, *args)

    def GetImageKernelInput(self):
        """GetImageKernelInput(self) -> itkImageD2"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterID2ID2_GetImageKernelInput(self)

    def GetInput1(self):
        """GetInput1(self) -> itkImageD2"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterID2ID2_GetInput1(self)

    def SetNormalize(self, *args):
        """SetNormalize(self, bool _arg)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterID2ID2_SetNormalize(self, *args)

    def GetNormalize(self):
        """GetNormalize(self) -> bool"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterID2ID2_GetNormalize(self)

    def NormalizeOn(self):
        """NormalizeOn(self)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterID2ID2_NormalizeOn(self)

    def NormalizeOff(self):
        """NormalizeOff(self)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterID2ID2_NormalizeOff(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterID2ID2_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkConvolutionImageFilterPython.delete_itkConvolutionImageFilterID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkConvolutionImageFilterID2ID2"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkConvolutionImageFilterID2ID2"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkConvolutionImageFilterID2ID2
        
        Create a new object of the class itkConvolutionImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkConvolutionImageFilterID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkConvolutionImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConvolutionImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConvolutionImageFilterID2ID2.SetImageKernelInput = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterID2ID2_SetImageKernelInput,None,itkConvolutionImageFilterID2ID2)
itkConvolutionImageFilterID2ID2.SetInput1 = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterID2ID2_SetInput1,None,itkConvolutionImageFilterID2ID2)
itkConvolutionImageFilterID2ID2.GetImageKernelInput = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterID2ID2_GetImageKernelInput,None,itkConvolutionImageFilterID2ID2)
itkConvolutionImageFilterID2ID2.GetInput1 = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterID2ID2_GetInput1,None,itkConvolutionImageFilterID2ID2)
itkConvolutionImageFilterID2ID2.SetNormalize = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterID2ID2_SetNormalize,None,itkConvolutionImageFilterID2ID2)
itkConvolutionImageFilterID2ID2.GetNormalize = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterID2ID2_GetNormalize,None,itkConvolutionImageFilterID2ID2)
itkConvolutionImageFilterID2ID2.NormalizeOn = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterID2ID2_NormalizeOn,None,itkConvolutionImageFilterID2ID2)
itkConvolutionImageFilterID2ID2.NormalizeOff = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterID2ID2_NormalizeOff,None,itkConvolutionImageFilterID2ID2)
itkConvolutionImageFilterID2ID2.GenerateInputRequestedRegion = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterID2ID2_GenerateInputRequestedRegion,None,itkConvolutionImageFilterID2ID2)
itkConvolutionImageFilterID2ID2.GetPointer = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterID2ID2_GetPointer,None,itkConvolutionImageFilterID2ID2)
itkConvolutionImageFilterID2ID2_swigregister = _itkConvolutionImageFilterPython.itkConvolutionImageFilterID2ID2_swigregister
itkConvolutionImageFilterID2ID2_swigregister(itkConvolutionImageFilterID2ID2)

def itkConvolutionImageFilterID2ID2___New_orig__():
  """itkConvolutionImageFilterID2ID2___New_orig__()"""
  return _itkConvolutionImageFilterPython.itkConvolutionImageFilterID2ID2___New_orig__()

def itkConvolutionImageFilterID2ID2_cast(*args):
  """itkConvolutionImageFilterID2ID2_cast(itkLightObject obj) -> itkConvolutionImageFilterID2ID2"""
  return _itkConvolutionImageFilterPython.itkConvolutionImageFilterID2ID2_cast(*args)

class itkConvolutionImageFilterID3ID3(itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    """Proxy of C++ itkConvolutionImageFilterID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkConvolutionImageFilterPython.itkConvolutionImageFilterID3ID3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetImageKernelInput(self, *args):
        """SetImageKernelInput(self, itkImageD3 _arg)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterID3ID3_SetImageKernelInput(self, *args)

    def SetInput1(self, *args):
        """SetInput1(self, itkImageD3 _arg)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterID3ID3_SetInput1(self, *args)

    def GetImageKernelInput(self):
        """GetImageKernelInput(self) -> itkImageD3"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterID3ID3_GetImageKernelInput(self)

    def GetInput1(self):
        """GetInput1(self) -> itkImageD3"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterID3ID3_GetInput1(self)

    def SetNormalize(self, *args):
        """SetNormalize(self, bool _arg)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterID3ID3_SetNormalize(self, *args)

    def GetNormalize(self):
        """GetNormalize(self) -> bool"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterID3ID3_GetNormalize(self)

    def NormalizeOn(self):
        """NormalizeOn(self)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterID3ID3_NormalizeOn(self)

    def NormalizeOff(self):
        """NormalizeOff(self)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterID3ID3_NormalizeOff(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterID3ID3_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkConvolutionImageFilterPython.delete_itkConvolutionImageFilterID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkConvolutionImageFilterID3ID3"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkConvolutionImageFilterID3ID3"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkConvolutionImageFilterID3ID3
        
        Create a new object of the class itkConvolutionImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkConvolutionImageFilterID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkConvolutionImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConvolutionImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConvolutionImageFilterID3ID3.SetImageKernelInput = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterID3ID3_SetImageKernelInput,None,itkConvolutionImageFilterID3ID3)
itkConvolutionImageFilterID3ID3.SetInput1 = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterID3ID3_SetInput1,None,itkConvolutionImageFilterID3ID3)
itkConvolutionImageFilterID3ID3.GetImageKernelInput = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterID3ID3_GetImageKernelInput,None,itkConvolutionImageFilterID3ID3)
itkConvolutionImageFilterID3ID3.GetInput1 = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterID3ID3_GetInput1,None,itkConvolutionImageFilterID3ID3)
itkConvolutionImageFilterID3ID3.SetNormalize = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterID3ID3_SetNormalize,None,itkConvolutionImageFilterID3ID3)
itkConvolutionImageFilterID3ID3.GetNormalize = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterID3ID3_GetNormalize,None,itkConvolutionImageFilterID3ID3)
itkConvolutionImageFilterID3ID3.NormalizeOn = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterID3ID3_NormalizeOn,None,itkConvolutionImageFilterID3ID3)
itkConvolutionImageFilterID3ID3.NormalizeOff = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterID3ID3_NormalizeOff,None,itkConvolutionImageFilterID3ID3)
itkConvolutionImageFilterID3ID3.GenerateInputRequestedRegion = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterID3ID3_GenerateInputRequestedRegion,None,itkConvolutionImageFilterID3ID3)
itkConvolutionImageFilterID3ID3.GetPointer = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterID3ID3_GetPointer,None,itkConvolutionImageFilterID3ID3)
itkConvolutionImageFilterID3ID3_swigregister = _itkConvolutionImageFilterPython.itkConvolutionImageFilterID3ID3_swigregister
itkConvolutionImageFilterID3ID3_swigregister(itkConvolutionImageFilterID3ID3)

def itkConvolutionImageFilterID3ID3___New_orig__():
  """itkConvolutionImageFilterID3ID3___New_orig__()"""
  return _itkConvolutionImageFilterPython.itkConvolutionImageFilterID3ID3___New_orig__()

def itkConvolutionImageFilterID3ID3_cast(*args):
  """itkConvolutionImageFilterID3ID3_cast(itkLightObject obj) -> itkConvolutionImageFilterID3ID3"""
  return _itkConvolutionImageFilterPython.itkConvolutionImageFilterID3ID3_cast(*args)

class itkConvolutionImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkConvolutionImageFilterIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF2IF2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetImageKernelInput(self, *args):
        """SetImageKernelInput(self, itkImageF2 _arg)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF2IF2_SetImageKernelInput(self, *args)

    def SetInput1(self, *args):
        """SetInput1(self, itkImageF2 _arg)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF2IF2_SetInput1(self, *args)

    def GetImageKernelInput(self):
        """GetImageKernelInput(self) -> itkImageF2"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF2IF2_GetImageKernelInput(self)

    def GetInput1(self):
        """GetInput1(self) -> itkImageF2"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF2IF2_GetInput1(self)

    def SetNormalize(self, *args):
        """SetNormalize(self, bool _arg)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF2IF2_SetNormalize(self, *args)

    def GetNormalize(self):
        """GetNormalize(self) -> bool"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF2IF2_GetNormalize(self)

    def NormalizeOn(self):
        """NormalizeOn(self)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF2IF2_NormalizeOn(self)

    def NormalizeOff(self):
        """NormalizeOff(self)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF2IF2_NormalizeOff(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF2IF2_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkConvolutionImageFilterPython.delete_itkConvolutionImageFilterIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkConvolutionImageFilterIF2IF2"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkConvolutionImageFilterIF2IF2"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkConvolutionImageFilterIF2IF2
        
        Create a new object of the class itkConvolutionImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkConvolutionImageFilterIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkConvolutionImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConvolutionImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConvolutionImageFilterIF2IF2.SetImageKernelInput = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIF2IF2_SetImageKernelInput,None,itkConvolutionImageFilterIF2IF2)
itkConvolutionImageFilterIF2IF2.SetInput1 = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIF2IF2_SetInput1,None,itkConvolutionImageFilterIF2IF2)
itkConvolutionImageFilterIF2IF2.GetImageKernelInput = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIF2IF2_GetImageKernelInput,None,itkConvolutionImageFilterIF2IF2)
itkConvolutionImageFilterIF2IF2.GetInput1 = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIF2IF2_GetInput1,None,itkConvolutionImageFilterIF2IF2)
itkConvolutionImageFilterIF2IF2.SetNormalize = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIF2IF2_SetNormalize,None,itkConvolutionImageFilterIF2IF2)
itkConvolutionImageFilterIF2IF2.GetNormalize = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIF2IF2_GetNormalize,None,itkConvolutionImageFilterIF2IF2)
itkConvolutionImageFilterIF2IF2.NormalizeOn = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIF2IF2_NormalizeOn,None,itkConvolutionImageFilterIF2IF2)
itkConvolutionImageFilterIF2IF2.NormalizeOff = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIF2IF2_NormalizeOff,None,itkConvolutionImageFilterIF2IF2)
itkConvolutionImageFilterIF2IF2.GenerateInputRequestedRegion = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIF2IF2_GenerateInputRequestedRegion,None,itkConvolutionImageFilterIF2IF2)
itkConvolutionImageFilterIF2IF2.GetPointer = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIF2IF2_GetPointer,None,itkConvolutionImageFilterIF2IF2)
itkConvolutionImageFilterIF2IF2_swigregister = _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF2IF2_swigregister
itkConvolutionImageFilterIF2IF2_swigregister(itkConvolutionImageFilterIF2IF2)

def itkConvolutionImageFilterIF2IF2___New_orig__():
  """itkConvolutionImageFilterIF2IF2___New_orig__()"""
  return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF2IF2___New_orig__()

def itkConvolutionImageFilterIF2IF2_cast(*args):
  """itkConvolutionImageFilterIF2IF2_cast(itkLightObject obj) -> itkConvolutionImageFilterIF2IF2"""
  return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF2IF2_cast(*args)

class itkConvolutionImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkConvolutionImageFilterIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF3IF3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetImageKernelInput(self, *args):
        """SetImageKernelInput(self, itkImageF3 _arg)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF3IF3_SetImageKernelInput(self, *args)

    def SetInput1(self, *args):
        """SetInput1(self, itkImageF3 _arg)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF3IF3_SetInput1(self, *args)

    def GetImageKernelInput(self):
        """GetImageKernelInput(self) -> itkImageF3"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF3IF3_GetImageKernelInput(self)

    def GetInput1(self):
        """GetInput1(self) -> itkImageF3"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF3IF3_GetInput1(self)

    def SetNormalize(self, *args):
        """SetNormalize(self, bool _arg)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF3IF3_SetNormalize(self, *args)

    def GetNormalize(self):
        """GetNormalize(self) -> bool"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF3IF3_GetNormalize(self)

    def NormalizeOn(self):
        """NormalizeOn(self)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF3IF3_NormalizeOn(self)

    def NormalizeOff(self):
        """NormalizeOff(self)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF3IF3_NormalizeOff(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF3IF3_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkConvolutionImageFilterPython.delete_itkConvolutionImageFilterIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkConvolutionImageFilterIF3IF3"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkConvolutionImageFilterIF3IF3"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkConvolutionImageFilterIF3IF3
        
        Create a new object of the class itkConvolutionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkConvolutionImageFilterIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkConvolutionImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConvolutionImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConvolutionImageFilterIF3IF3.SetImageKernelInput = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIF3IF3_SetImageKernelInput,None,itkConvolutionImageFilterIF3IF3)
itkConvolutionImageFilterIF3IF3.SetInput1 = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIF3IF3_SetInput1,None,itkConvolutionImageFilterIF3IF3)
itkConvolutionImageFilterIF3IF3.GetImageKernelInput = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIF3IF3_GetImageKernelInput,None,itkConvolutionImageFilterIF3IF3)
itkConvolutionImageFilterIF3IF3.GetInput1 = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIF3IF3_GetInput1,None,itkConvolutionImageFilterIF3IF3)
itkConvolutionImageFilterIF3IF3.SetNormalize = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIF3IF3_SetNormalize,None,itkConvolutionImageFilterIF3IF3)
itkConvolutionImageFilterIF3IF3.GetNormalize = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIF3IF3_GetNormalize,None,itkConvolutionImageFilterIF3IF3)
itkConvolutionImageFilterIF3IF3.NormalizeOn = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIF3IF3_NormalizeOn,None,itkConvolutionImageFilterIF3IF3)
itkConvolutionImageFilterIF3IF3.NormalizeOff = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIF3IF3_NormalizeOff,None,itkConvolutionImageFilterIF3IF3)
itkConvolutionImageFilterIF3IF3.GenerateInputRequestedRegion = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIF3IF3_GenerateInputRequestedRegion,None,itkConvolutionImageFilterIF3IF3)
itkConvolutionImageFilterIF3IF3.GetPointer = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIF3IF3_GetPointer,None,itkConvolutionImageFilterIF3IF3)
itkConvolutionImageFilterIF3IF3_swigregister = _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF3IF3_swigregister
itkConvolutionImageFilterIF3IF3_swigregister(itkConvolutionImageFilterIF3IF3)

def itkConvolutionImageFilterIF3IF3___New_orig__():
  """itkConvolutionImageFilterIF3IF3___New_orig__()"""
  return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF3IF3___New_orig__()

def itkConvolutionImageFilterIF3IF3_cast(*args):
  """itkConvolutionImageFilterIF3IF3_cast(itkLightObject obj) -> itkConvolutionImageFilterIF3IF3"""
  return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIF3IF3_cast(*args)

class itkConvolutionImageFilterIUC2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """Proxy of C++ itkConvolutionImageFilterIUC2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC2IUC2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetImageKernelInput(self, *args):
        """SetImageKernelInput(self, itkImageUC2 _arg)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC2IUC2_SetImageKernelInput(self, *args)

    def SetInput1(self, *args):
        """SetInput1(self, itkImageUC2 _arg)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC2IUC2_SetInput1(self, *args)

    def GetImageKernelInput(self):
        """GetImageKernelInput(self) -> itkImageUC2"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC2IUC2_GetImageKernelInput(self)

    def GetInput1(self):
        """GetInput1(self) -> itkImageUC2"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC2IUC2_GetInput1(self)

    def SetNormalize(self, *args):
        """SetNormalize(self, bool _arg)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC2IUC2_SetNormalize(self, *args)

    def GetNormalize(self):
        """GetNormalize(self) -> bool"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC2IUC2_GetNormalize(self)

    def NormalizeOn(self):
        """NormalizeOn(self)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC2IUC2_NormalizeOn(self)

    def NormalizeOff(self):
        """NormalizeOff(self)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC2IUC2_NormalizeOff(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC2IUC2_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkConvolutionImageFilterPython.delete_itkConvolutionImageFilterIUC2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkConvolutionImageFilterIUC2IUC2"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkConvolutionImageFilterIUC2IUC2"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkConvolutionImageFilterIUC2IUC2
        
        Create a new object of the class itkConvolutionImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkConvolutionImageFilterIUC2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkConvolutionImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConvolutionImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConvolutionImageFilterIUC2IUC2.SetImageKernelInput = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC2IUC2_SetImageKernelInput,None,itkConvolutionImageFilterIUC2IUC2)
itkConvolutionImageFilterIUC2IUC2.SetInput1 = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC2IUC2_SetInput1,None,itkConvolutionImageFilterIUC2IUC2)
itkConvolutionImageFilterIUC2IUC2.GetImageKernelInput = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC2IUC2_GetImageKernelInput,None,itkConvolutionImageFilterIUC2IUC2)
itkConvolutionImageFilterIUC2IUC2.GetInput1 = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC2IUC2_GetInput1,None,itkConvolutionImageFilterIUC2IUC2)
itkConvolutionImageFilterIUC2IUC2.SetNormalize = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC2IUC2_SetNormalize,None,itkConvolutionImageFilterIUC2IUC2)
itkConvolutionImageFilterIUC2IUC2.GetNormalize = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC2IUC2_GetNormalize,None,itkConvolutionImageFilterIUC2IUC2)
itkConvolutionImageFilterIUC2IUC2.NormalizeOn = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC2IUC2_NormalizeOn,None,itkConvolutionImageFilterIUC2IUC2)
itkConvolutionImageFilterIUC2IUC2.NormalizeOff = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC2IUC2_NormalizeOff,None,itkConvolutionImageFilterIUC2IUC2)
itkConvolutionImageFilterIUC2IUC2.GenerateInputRequestedRegion = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC2IUC2_GenerateInputRequestedRegion,None,itkConvolutionImageFilterIUC2IUC2)
itkConvolutionImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC2IUC2_GetPointer,None,itkConvolutionImageFilterIUC2IUC2)
itkConvolutionImageFilterIUC2IUC2_swigregister = _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC2IUC2_swigregister
itkConvolutionImageFilterIUC2IUC2_swigregister(itkConvolutionImageFilterIUC2IUC2)

def itkConvolutionImageFilterIUC2IUC2___New_orig__():
  """itkConvolutionImageFilterIUC2IUC2___New_orig__()"""
  return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC2IUC2___New_orig__()

def itkConvolutionImageFilterIUC2IUC2_cast(*args):
  """itkConvolutionImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkConvolutionImageFilterIUC2IUC2"""
  return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC2IUC2_cast(*args)

class itkConvolutionImageFilterIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """Proxy of C++ itkConvolutionImageFilterIUC3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC3IUC3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetImageKernelInput(self, *args):
        """SetImageKernelInput(self, itkImageUC3 _arg)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC3IUC3_SetImageKernelInput(self, *args)

    def SetInput1(self, *args):
        """SetInput1(self, itkImageUC3 _arg)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC3IUC3_SetInput1(self, *args)

    def GetImageKernelInput(self):
        """GetImageKernelInput(self) -> itkImageUC3"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC3IUC3_GetImageKernelInput(self)

    def GetInput1(self):
        """GetInput1(self) -> itkImageUC3"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC3IUC3_GetInput1(self)

    def SetNormalize(self, *args):
        """SetNormalize(self, bool _arg)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC3IUC3_SetNormalize(self, *args)

    def GetNormalize(self):
        """GetNormalize(self) -> bool"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC3IUC3_GetNormalize(self)

    def NormalizeOn(self):
        """NormalizeOn(self)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC3IUC3_NormalizeOn(self)

    def NormalizeOff(self):
        """NormalizeOff(self)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC3IUC3_NormalizeOff(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC3IUC3_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkConvolutionImageFilterPython.delete_itkConvolutionImageFilterIUC3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkConvolutionImageFilterIUC3IUC3"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkConvolutionImageFilterIUC3IUC3"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkConvolutionImageFilterIUC3IUC3
        
        Create a new object of the class itkConvolutionImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkConvolutionImageFilterIUC3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkConvolutionImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConvolutionImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConvolutionImageFilterIUC3IUC3.SetImageKernelInput = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC3IUC3_SetImageKernelInput,None,itkConvolutionImageFilterIUC3IUC3)
itkConvolutionImageFilterIUC3IUC3.SetInput1 = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC3IUC3_SetInput1,None,itkConvolutionImageFilterIUC3IUC3)
itkConvolutionImageFilterIUC3IUC3.GetImageKernelInput = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC3IUC3_GetImageKernelInput,None,itkConvolutionImageFilterIUC3IUC3)
itkConvolutionImageFilterIUC3IUC3.GetInput1 = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC3IUC3_GetInput1,None,itkConvolutionImageFilterIUC3IUC3)
itkConvolutionImageFilterIUC3IUC3.SetNormalize = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC3IUC3_SetNormalize,None,itkConvolutionImageFilterIUC3IUC3)
itkConvolutionImageFilterIUC3IUC3.GetNormalize = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC3IUC3_GetNormalize,None,itkConvolutionImageFilterIUC3IUC3)
itkConvolutionImageFilterIUC3IUC3.NormalizeOn = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC3IUC3_NormalizeOn,None,itkConvolutionImageFilterIUC3IUC3)
itkConvolutionImageFilterIUC3IUC3.NormalizeOff = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC3IUC3_NormalizeOff,None,itkConvolutionImageFilterIUC3IUC3)
itkConvolutionImageFilterIUC3IUC3.GenerateInputRequestedRegion = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC3IUC3_GenerateInputRequestedRegion,None,itkConvolutionImageFilterIUC3IUC3)
itkConvolutionImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC3IUC3_GetPointer,None,itkConvolutionImageFilterIUC3IUC3)
itkConvolutionImageFilterIUC3IUC3_swigregister = _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC3IUC3_swigregister
itkConvolutionImageFilterIUC3IUC3_swigregister(itkConvolutionImageFilterIUC3IUC3)

def itkConvolutionImageFilterIUC3IUC3___New_orig__():
  """itkConvolutionImageFilterIUC3IUC3___New_orig__()"""
  return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC3IUC3___New_orig__()

def itkConvolutionImageFilterIUC3IUC3_cast(*args):
  """itkConvolutionImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkConvolutionImageFilterIUC3IUC3"""
  return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUC3IUC3_cast(*args)

class itkConvolutionImageFilterIUL2IUL2(itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2):
    """Proxy of C++ itkConvolutionImageFilterIUL2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL2IUL2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetImageKernelInput(self, *args):
        """SetImageKernelInput(self, itkImageUL2 _arg)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL2IUL2_SetImageKernelInput(self, *args)

    def SetInput1(self, *args):
        """SetInput1(self, itkImageUL2 _arg)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL2IUL2_SetInput1(self, *args)

    def GetImageKernelInput(self):
        """GetImageKernelInput(self) -> itkImageUL2"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL2IUL2_GetImageKernelInput(self)

    def GetInput1(self):
        """GetInput1(self) -> itkImageUL2"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL2IUL2_GetInput1(self)

    def SetNormalize(self, *args):
        """SetNormalize(self, bool _arg)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL2IUL2_SetNormalize(self, *args)

    def GetNormalize(self):
        """GetNormalize(self) -> bool"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL2IUL2_GetNormalize(self)

    def NormalizeOn(self):
        """NormalizeOn(self)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL2IUL2_NormalizeOn(self)

    def NormalizeOff(self):
        """NormalizeOff(self)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL2IUL2_NormalizeOff(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL2IUL2_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkConvolutionImageFilterPython.delete_itkConvolutionImageFilterIUL2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkConvolutionImageFilterIUL2IUL2"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkConvolutionImageFilterIUL2IUL2"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkConvolutionImageFilterIUL2IUL2
        
        Create a new object of the class itkConvolutionImageFilterIUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkConvolutionImageFilterIUL2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkConvolutionImageFilterIUL2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConvolutionImageFilterIUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConvolutionImageFilterIUL2IUL2.SetImageKernelInput = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL2IUL2_SetImageKernelInput,None,itkConvolutionImageFilterIUL2IUL2)
itkConvolutionImageFilterIUL2IUL2.SetInput1 = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL2IUL2_SetInput1,None,itkConvolutionImageFilterIUL2IUL2)
itkConvolutionImageFilterIUL2IUL2.GetImageKernelInput = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL2IUL2_GetImageKernelInput,None,itkConvolutionImageFilterIUL2IUL2)
itkConvolutionImageFilterIUL2IUL2.GetInput1 = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL2IUL2_GetInput1,None,itkConvolutionImageFilterIUL2IUL2)
itkConvolutionImageFilterIUL2IUL2.SetNormalize = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL2IUL2_SetNormalize,None,itkConvolutionImageFilterIUL2IUL2)
itkConvolutionImageFilterIUL2IUL2.GetNormalize = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL2IUL2_GetNormalize,None,itkConvolutionImageFilterIUL2IUL2)
itkConvolutionImageFilterIUL2IUL2.NormalizeOn = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL2IUL2_NormalizeOn,None,itkConvolutionImageFilterIUL2IUL2)
itkConvolutionImageFilterIUL2IUL2.NormalizeOff = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL2IUL2_NormalizeOff,None,itkConvolutionImageFilterIUL2IUL2)
itkConvolutionImageFilterIUL2IUL2.GenerateInputRequestedRegion = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL2IUL2_GenerateInputRequestedRegion,None,itkConvolutionImageFilterIUL2IUL2)
itkConvolutionImageFilterIUL2IUL2.GetPointer = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL2IUL2_GetPointer,None,itkConvolutionImageFilterIUL2IUL2)
itkConvolutionImageFilterIUL2IUL2_swigregister = _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL2IUL2_swigregister
itkConvolutionImageFilterIUL2IUL2_swigregister(itkConvolutionImageFilterIUL2IUL2)

def itkConvolutionImageFilterIUL2IUL2___New_orig__():
  """itkConvolutionImageFilterIUL2IUL2___New_orig__()"""
  return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL2IUL2___New_orig__()

def itkConvolutionImageFilterIUL2IUL2_cast(*args):
  """itkConvolutionImageFilterIUL2IUL2_cast(itkLightObject obj) -> itkConvolutionImageFilterIUL2IUL2"""
  return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL2IUL2_cast(*args)

class itkConvolutionImageFilterIUL3IUL3(itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3):
    """Proxy of C++ itkConvolutionImageFilterIUL3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL3IUL3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetImageKernelInput(self, *args):
        """SetImageKernelInput(self, itkImageUL3 _arg)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL3IUL3_SetImageKernelInput(self, *args)

    def SetInput1(self, *args):
        """SetInput1(self, itkImageUL3 _arg)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL3IUL3_SetInput1(self, *args)

    def GetImageKernelInput(self):
        """GetImageKernelInput(self) -> itkImageUL3"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL3IUL3_GetImageKernelInput(self)

    def GetInput1(self):
        """GetInput1(self) -> itkImageUL3"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL3IUL3_GetInput1(self)

    def SetNormalize(self, *args):
        """SetNormalize(self, bool _arg)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL3IUL3_SetNormalize(self, *args)

    def GetNormalize(self):
        """GetNormalize(self) -> bool"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL3IUL3_GetNormalize(self)

    def NormalizeOn(self):
        """NormalizeOn(self)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL3IUL3_NormalizeOn(self)

    def NormalizeOff(self):
        """NormalizeOff(self)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL3IUL3_NormalizeOff(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL3IUL3_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkConvolutionImageFilterPython.delete_itkConvolutionImageFilterIUL3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkConvolutionImageFilterIUL3IUL3"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkConvolutionImageFilterIUL3IUL3"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkConvolutionImageFilterIUL3IUL3
        
        Create a new object of the class itkConvolutionImageFilterIUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkConvolutionImageFilterIUL3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkConvolutionImageFilterIUL3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConvolutionImageFilterIUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConvolutionImageFilterIUL3IUL3.SetImageKernelInput = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL3IUL3_SetImageKernelInput,None,itkConvolutionImageFilterIUL3IUL3)
itkConvolutionImageFilterIUL3IUL3.SetInput1 = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL3IUL3_SetInput1,None,itkConvolutionImageFilterIUL3IUL3)
itkConvolutionImageFilterIUL3IUL3.GetImageKernelInput = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL3IUL3_GetImageKernelInput,None,itkConvolutionImageFilterIUL3IUL3)
itkConvolutionImageFilterIUL3IUL3.GetInput1 = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL3IUL3_GetInput1,None,itkConvolutionImageFilterIUL3IUL3)
itkConvolutionImageFilterIUL3IUL3.SetNormalize = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL3IUL3_SetNormalize,None,itkConvolutionImageFilterIUL3IUL3)
itkConvolutionImageFilterIUL3IUL3.GetNormalize = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL3IUL3_GetNormalize,None,itkConvolutionImageFilterIUL3IUL3)
itkConvolutionImageFilterIUL3IUL3.NormalizeOn = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL3IUL3_NormalizeOn,None,itkConvolutionImageFilterIUL3IUL3)
itkConvolutionImageFilterIUL3IUL3.NormalizeOff = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL3IUL3_NormalizeOff,None,itkConvolutionImageFilterIUL3IUL3)
itkConvolutionImageFilterIUL3IUL3.GenerateInputRequestedRegion = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL3IUL3_GenerateInputRequestedRegion,None,itkConvolutionImageFilterIUL3IUL3)
itkConvolutionImageFilterIUL3IUL3.GetPointer = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL3IUL3_GetPointer,None,itkConvolutionImageFilterIUL3IUL3)
itkConvolutionImageFilterIUL3IUL3_swigregister = _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL3IUL3_swigregister
itkConvolutionImageFilterIUL3IUL3_swigregister(itkConvolutionImageFilterIUL3IUL3)

def itkConvolutionImageFilterIUL3IUL3___New_orig__():
  """itkConvolutionImageFilterIUL3IUL3___New_orig__()"""
  return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL3IUL3___New_orig__()

def itkConvolutionImageFilterIUL3IUL3_cast(*args):
  """itkConvolutionImageFilterIUL3IUL3_cast(itkLightObject obj) -> itkConvolutionImageFilterIUL3IUL3"""
  return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUL3IUL3_cast(*args)

class itkConvolutionImageFilterIUS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """Proxy of C++ itkConvolutionImageFilterIUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS2IUS2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetImageKernelInput(self, *args):
        """SetImageKernelInput(self, itkImageUS2 _arg)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS2IUS2_SetImageKernelInput(self, *args)

    def SetInput1(self, *args):
        """SetInput1(self, itkImageUS2 _arg)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS2IUS2_SetInput1(self, *args)

    def GetImageKernelInput(self):
        """GetImageKernelInput(self) -> itkImageUS2"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS2IUS2_GetImageKernelInput(self)

    def GetInput1(self):
        """GetInput1(self) -> itkImageUS2"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS2IUS2_GetInput1(self)

    def SetNormalize(self, *args):
        """SetNormalize(self, bool _arg)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS2IUS2_SetNormalize(self, *args)

    def GetNormalize(self):
        """GetNormalize(self) -> bool"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS2IUS2_GetNormalize(self)

    def NormalizeOn(self):
        """NormalizeOn(self)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS2IUS2_NormalizeOn(self)

    def NormalizeOff(self):
        """NormalizeOff(self)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS2IUS2_NormalizeOff(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS2IUS2_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkConvolutionImageFilterPython.delete_itkConvolutionImageFilterIUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkConvolutionImageFilterIUS2IUS2"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkConvolutionImageFilterIUS2IUS2"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkConvolutionImageFilterIUS2IUS2
        
        Create a new object of the class itkConvolutionImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkConvolutionImageFilterIUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkConvolutionImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConvolutionImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConvolutionImageFilterIUS2IUS2.SetImageKernelInput = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS2IUS2_SetImageKernelInput,None,itkConvolutionImageFilterIUS2IUS2)
itkConvolutionImageFilterIUS2IUS2.SetInput1 = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS2IUS2_SetInput1,None,itkConvolutionImageFilterIUS2IUS2)
itkConvolutionImageFilterIUS2IUS2.GetImageKernelInput = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS2IUS2_GetImageKernelInput,None,itkConvolutionImageFilterIUS2IUS2)
itkConvolutionImageFilterIUS2IUS2.GetInput1 = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS2IUS2_GetInput1,None,itkConvolutionImageFilterIUS2IUS2)
itkConvolutionImageFilterIUS2IUS2.SetNormalize = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS2IUS2_SetNormalize,None,itkConvolutionImageFilterIUS2IUS2)
itkConvolutionImageFilterIUS2IUS2.GetNormalize = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS2IUS2_GetNormalize,None,itkConvolutionImageFilterIUS2IUS2)
itkConvolutionImageFilterIUS2IUS2.NormalizeOn = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS2IUS2_NormalizeOn,None,itkConvolutionImageFilterIUS2IUS2)
itkConvolutionImageFilterIUS2IUS2.NormalizeOff = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS2IUS2_NormalizeOff,None,itkConvolutionImageFilterIUS2IUS2)
itkConvolutionImageFilterIUS2IUS2.GenerateInputRequestedRegion = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS2IUS2_GenerateInputRequestedRegion,None,itkConvolutionImageFilterIUS2IUS2)
itkConvolutionImageFilterIUS2IUS2.GetPointer = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS2IUS2_GetPointer,None,itkConvolutionImageFilterIUS2IUS2)
itkConvolutionImageFilterIUS2IUS2_swigregister = _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS2IUS2_swigregister
itkConvolutionImageFilterIUS2IUS2_swigregister(itkConvolutionImageFilterIUS2IUS2)

def itkConvolutionImageFilterIUS2IUS2___New_orig__():
  """itkConvolutionImageFilterIUS2IUS2___New_orig__()"""
  return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS2IUS2___New_orig__()

def itkConvolutionImageFilterIUS2IUS2_cast(*args):
  """itkConvolutionImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkConvolutionImageFilterIUS2IUS2"""
  return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS2IUS2_cast(*args)

class itkConvolutionImageFilterIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """Proxy of C++ itkConvolutionImageFilterIUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS3IUS3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetImageKernelInput(self, *args):
        """SetImageKernelInput(self, itkImageUS3 _arg)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS3IUS3_SetImageKernelInput(self, *args)

    def SetInput1(self, *args):
        """SetInput1(self, itkImageUS3 _arg)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS3IUS3_SetInput1(self, *args)

    def GetImageKernelInput(self):
        """GetImageKernelInput(self) -> itkImageUS3"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS3IUS3_GetImageKernelInput(self)

    def GetInput1(self):
        """GetInput1(self) -> itkImageUS3"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS3IUS3_GetInput1(self)

    def SetNormalize(self, *args):
        """SetNormalize(self, bool _arg)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS3IUS3_SetNormalize(self, *args)

    def GetNormalize(self):
        """GetNormalize(self) -> bool"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS3IUS3_GetNormalize(self)

    def NormalizeOn(self):
        """NormalizeOn(self)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS3IUS3_NormalizeOn(self)

    def NormalizeOff(self):
        """NormalizeOff(self)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS3IUS3_NormalizeOff(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS3IUS3_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkConvolutionImageFilterPython.delete_itkConvolutionImageFilterIUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkConvolutionImageFilterIUS3IUS3"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkConvolutionImageFilterIUS3IUS3"""
        return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkConvolutionImageFilterIUS3IUS3
        
        Create a new object of the class itkConvolutionImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkConvolutionImageFilterIUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkConvolutionImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConvolutionImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConvolutionImageFilterIUS3IUS3.SetImageKernelInput = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS3IUS3_SetImageKernelInput,None,itkConvolutionImageFilterIUS3IUS3)
itkConvolutionImageFilterIUS3IUS3.SetInput1 = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS3IUS3_SetInput1,None,itkConvolutionImageFilterIUS3IUS3)
itkConvolutionImageFilterIUS3IUS3.GetImageKernelInput = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS3IUS3_GetImageKernelInput,None,itkConvolutionImageFilterIUS3IUS3)
itkConvolutionImageFilterIUS3IUS3.GetInput1 = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS3IUS3_GetInput1,None,itkConvolutionImageFilterIUS3IUS3)
itkConvolutionImageFilterIUS3IUS3.SetNormalize = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS3IUS3_SetNormalize,None,itkConvolutionImageFilterIUS3IUS3)
itkConvolutionImageFilterIUS3IUS3.GetNormalize = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS3IUS3_GetNormalize,None,itkConvolutionImageFilterIUS3IUS3)
itkConvolutionImageFilterIUS3IUS3.NormalizeOn = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS3IUS3_NormalizeOn,None,itkConvolutionImageFilterIUS3IUS3)
itkConvolutionImageFilterIUS3IUS3.NormalizeOff = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS3IUS3_NormalizeOff,None,itkConvolutionImageFilterIUS3IUS3)
itkConvolutionImageFilterIUS3IUS3.GenerateInputRequestedRegion = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS3IUS3_GenerateInputRequestedRegion,None,itkConvolutionImageFilterIUS3IUS3)
itkConvolutionImageFilterIUS3IUS3.GetPointer = new_instancemethod(_itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS3IUS3_GetPointer,None,itkConvolutionImageFilterIUS3IUS3)
itkConvolutionImageFilterIUS3IUS3_swigregister = _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS3IUS3_swigregister
itkConvolutionImageFilterIUS3IUS3_swigregister(itkConvolutionImageFilterIUS3IUS3)

def itkConvolutionImageFilterIUS3IUS3___New_orig__():
  """itkConvolutionImageFilterIUS3IUS3___New_orig__()"""
  return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS3IUS3___New_orig__()

def itkConvolutionImageFilterIUS3IUS3_cast(*args):
  """itkConvolutionImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkConvolutionImageFilterIUS3IUS3"""
  return _itkConvolutionImageFilterPython.itkConvolutionImageFilterIUS3IUS3_cast(*args)



