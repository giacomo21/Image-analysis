// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkIntensityWindowingImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkIntensityWindowingImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkIntensityWindowingImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkIntensityWindowingImageFilterJava
#endif
#ifdef SWIGLUA
%module itkIntensityWindowingImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkIntensityWindowingImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkIntensityWindowingImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkIntensityWindowingImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkIntensityWindowingImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkIntensityWindowingImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkIntensityWindowingImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkIntensityWindowingImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkIntensityWindowingImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkIntensityWindowingImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkIntensityWindowingImageFilterPython
#endif
#ifdef SWIGR
%module itkIntensityWindowingImageFilterR
#endif
#ifdef SWIGRUBY
%module itkIntensityWindowingImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkIntensityWindowingImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkIntensityWindowingImageFilterTcl
#endif
#ifdef SWIGXML
%module itkIntensityWindowingImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Numerics.includes"
#include "IntensityFilters.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkInPlaceImageFilterA.i
%import wrap_ITKRegions.i


%include itk.i
%include wrap_itkIntensityWindowingImageFilter_ext.i


 class itkIntensityWindowingImageFilterID2ID2_Pointer {
   public:
     itkIntensityWindowingImageFilterID2ID2_Pointer();
     itkIntensityWindowingImageFilterID2ID2_Pointer(itkIntensityWindowingImageFilterID2ID2_Pointer const & p);
     itkIntensityWindowingImageFilterID2ID2_Pointer(itkIntensityWindowingImageFilterID2ID2 * p);
     ~itkIntensityWindowingImageFilterID2ID2_Pointer();
     itkIntensityWindowingImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterID2ID2_Pointer const & r) const;
     itkIntensityWindowingImageFilterID2ID2_Pointer & operator=(itkIntensityWindowingImageFilterID2ID2_Pointer const & r);
     itkIntensityWindowingImageFilterID2ID2_Pointer & operator=(itkIntensityWindowingImageFilterID2ID2 * r);
     itkIntensityWindowingImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterID2ID2_Superclass : public itkInPlaceImageFilterID2ID2 {
   public:
     static itkIntensityWindowingImageFilterID2ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< double, double > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< double, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< double, double > const & functor);
   private:
     itkIntensityWindowingImageFilterID2ID2_Superclass(itkIntensityWindowingImageFilterID2ID2_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterID2ID2_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterID2ID2_Superclass();
     ~itkIntensityWindowingImageFilterID2ID2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterID2ID2_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterID2ID2_Superclass_Pointer();
     itkIntensityWindowingImageFilterID2ID2_Superclass_Pointer(itkIntensityWindowingImageFilterID2ID2_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterID2ID2_Superclass_Pointer(itkIntensityWindowingImageFilterID2ID2_Superclass * p);
     ~itkIntensityWindowingImageFilterID2ID2_Superclass_Pointer();
     itkIntensityWindowingImageFilterID2ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterID2ID2_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterID2ID2_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterID2ID2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterID2ID2_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterID2ID2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterID2ID2_Superclass * r);
     itkIntensityWindowingImageFilterID2ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterID2IF2_Pointer {
   public:
     itkIntensityWindowingImageFilterID2IF2_Pointer();
     itkIntensityWindowingImageFilterID2IF2_Pointer(itkIntensityWindowingImageFilterID2IF2_Pointer const & p);
     itkIntensityWindowingImageFilterID2IF2_Pointer(itkIntensityWindowingImageFilterID2IF2 * p);
     ~itkIntensityWindowingImageFilterID2IF2_Pointer();
     itkIntensityWindowingImageFilterID2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterID2IF2 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterID2IF2_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterID2IF2_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterID2IF2_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterID2IF2_Pointer const & r) const;
     itkIntensityWindowingImageFilterID2IF2_Pointer & operator=(itkIntensityWindowingImageFilterID2IF2_Pointer const & r);
     itkIntensityWindowingImageFilterID2IF2_Pointer & operator=(itkIntensityWindowingImageFilterID2IF2 * r);
     itkIntensityWindowingImageFilterID2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterID2IF2_Superclass : public itkInPlaceImageFilterID2IF2 {
   public:
     static itkIntensityWindowingImageFilterID2IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< double, float > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< double, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< double, float > const & functor);
   private:
     itkIntensityWindowingImageFilterID2IF2_Superclass(itkIntensityWindowingImageFilterID2IF2_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterID2IF2_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterID2IF2_Superclass();
     ~itkIntensityWindowingImageFilterID2IF2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterID2IF2_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterID2IF2_Superclass_Pointer();
     itkIntensityWindowingImageFilterID2IF2_Superclass_Pointer(itkIntensityWindowingImageFilterID2IF2_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterID2IF2_Superclass_Pointer(itkIntensityWindowingImageFilterID2IF2_Superclass * p);
     ~itkIntensityWindowingImageFilterID2IF2_Superclass_Pointer();
     itkIntensityWindowingImageFilterID2IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterID2IF2_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterID2IF2_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterID2IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterID2IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterID2IF2_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterID2IF2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterID2IF2_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterID2IF2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterID2IF2_Superclass * r);
     itkIntensityWindowingImageFilterID2IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterID2IUC2_Pointer {
   public:
     itkIntensityWindowingImageFilterID2IUC2_Pointer();
     itkIntensityWindowingImageFilterID2IUC2_Pointer(itkIntensityWindowingImageFilterID2IUC2_Pointer const & p);
     itkIntensityWindowingImageFilterID2IUC2_Pointer(itkIntensityWindowingImageFilterID2IUC2 * p);
     ~itkIntensityWindowingImageFilterID2IUC2_Pointer();
     itkIntensityWindowingImageFilterID2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterID2IUC2 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterID2IUC2_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterID2IUC2_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterID2IUC2_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterID2IUC2_Pointer const & r) const;
     itkIntensityWindowingImageFilterID2IUC2_Pointer & operator=(itkIntensityWindowingImageFilterID2IUC2_Pointer const & r);
     itkIntensityWindowingImageFilterID2IUC2_Pointer & operator=(itkIntensityWindowingImageFilterID2IUC2 * r);
     itkIntensityWindowingImageFilterID2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterID2IUC2_Superclass : public itkInPlaceImageFilterID2IUC2 {
   public:
     static itkIntensityWindowingImageFilterID2IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< double, unsigned char > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< double, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< double, unsigned char > const & functor);
   private:
     itkIntensityWindowingImageFilterID2IUC2_Superclass(itkIntensityWindowingImageFilterID2IUC2_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterID2IUC2_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterID2IUC2_Superclass();
     ~itkIntensityWindowingImageFilterID2IUC2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterID2IUC2_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterID2IUC2_Superclass_Pointer();
     itkIntensityWindowingImageFilterID2IUC2_Superclass_Pointer(itkIntensityWindowingImageFilterID2IUC2_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterID2IUC2_Superclass_Pointer(itkIntensityWindowingImageFilterID2IUC2_Superclass * p);
     ~itkIntensityWindowingImageFilterID2IUC2_Superclass_Pointer();
     itkIntensityWindowingImageFilterID2IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterID2IUC2_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterID2IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterID2IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterID2IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterID2IUC2_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterID2IUC2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterID2IUC2_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterID2IUC2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterID2IUC2_Superclass * r);
     itkIntensityWindowingImageFilterID2IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterID2IUL2_Pointer {
   public:
     itkIntensityWindowingImageFilterID2IUL2_Pointer();
     itkIntensityWindowingImageFilterID2IUL2_Pointer(itkIntensityWindowingImageFilterID2IUL2_Pointer const & p);
     itkIntensityWindowingImageFilterID2IUL2_Pointer(itkIntensityWindowingImageFilterID2IUL2 * p);
     ~itkIntensityWindowingImageFilterID2IUL2_Pointer();
     itkIntensityWindowingImageFilterID2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterID2IUL2 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterID2IUL2_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterID2IUL2_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterID2IUL2_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterID2IUL2_Pointer const & r) const;
     itkIntensityWindowingImageFilterID2IUL2_Pointer & operator=(itkIntensityWindowingImageFilterID2IUL2_Pointer const & r);
     itkIntensityWindowingImageFilterID2IUL2_Pointer & operator=(itkIntensityWindowingImageFilterID2IUL2 * r);
     itkIntensityWindowingImageFilterID2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterID2IUL2_Superclass : public itkInPlaceImageFilterID2IUL2 {
   public:
     static itkIntensityWindowingImageFilterID2IUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< double, unsigned long > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< double, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< double, unsigned long > const & functor);
   private:
     itkIntensityWindowingImageFilterID2IUL2_Superclass(itkIntensityWindowingImageFilterID2IUL2_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterID2IUL2_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterID2IUL2_Superclass();
     ~itkIntensityWindowingImageFilterID2IUL2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterID2IUL2_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterID2IUL2_Superclass_Pointer();
     itkIntensityWindowingImageFilterID2IUL2_Superclass_Pointer(itkIntensityWindowingImageFilterID2IUL2_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterID2IUL2_Superclass_Pointer(itkIntensityWindowingImageFilterID2IUL2_Superclass * p);
     ~itkIntensityWindowingImageFilterID2IUL2_Superclass_Pointer();
     itkIntensityWindowingImageFilterID2IUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterID2IUL2_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterID2IUL2_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterID2IUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterID2IUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterID2IUL2_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterID2IUL2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterID2IUL2_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterID2IUL2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterID2IUL2_Superclass * r);
     itkIntensityWindowingImageFilterID2IUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterID2IUS2_Pointer {
   public:
     itkIntensityWindowingImageFilterID2IUS2_Pointer();
     itkIntensityWindowingImageFilterID2IUS2_Pointer(itkIntensityWindowingImageFilterID2IUS2_Pointer const & p);
     itkIntensityWindowingImageFilterID2IUS2_Pointer(itkIntensityWindowingImageFilterID2IUS2 * p);
     ~itkIntensityWindowingImageFilterID2IUS2_Pointer();
     itkIntensityWindowingImageFilterID2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterID2IUS2 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterID2IUS2_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterID2IUS2_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterID2IUS2_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterID2IUS2_Pointer const & r) const;
     itkIntensityWindowingImageFilterID2IUS2_Pointer & operator=(itkIntensityWindowingImageFilterID2IUS2_Pointer const & r);
     itkIntensityWindowingImageFilterID2IUS2_Pointer & operator=(itkIntensityWindowingImageFilterID2IUS2 * r);
     itkIntensityWindowingImageFilterID2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterID2IUS2_Superclass : public itkInPlaceImageFilterID2IUS2 {
   public:
     static itkIntensityWindowingImageFilterID2IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< double, unsigned short > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< double, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< double, unsigned short > const & functor);
   private:
     itkIntensityWindowingImageFilterID2IUS2_Superclass(itkIntensityWindowingImageFilterID2IUS2_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterID2IUS2_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterID2IUS2_Superclass();
     ~itkIntensityWindowingImageFilterID2IUS2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterID2IUS2_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterID2IUS2_Superclass_Pointer();
     itkIntensityWindowingImageFilterID2IUS2_Superclass_Pointer(itkIntensityWindowingImageFilterID2IUS2_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterID2IUS2_Superclass_Pointer(itkIntensityWindowingImageFilterID2IUS2_Superclass * p);
     ~itkIntensityWindowingImageFilterID2IUS2_Superclass_Pointer();
     itkIntensityWindowingImageFilterID2IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterID2IUS2_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterID2IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterID2IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterID2IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterID2IUS2_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterID2IUS2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterID2IUS2_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterID2IUS2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterID2IUS2_Superclass * r);
     itkIntensityWindowingImageFilterID2IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterID3ID3_Pointer {
   public:
     itkIntensityWindowingImageFilterID3ID3_Pointer();
     itkIntensityWindowingImageFilterID3ID3_Pointer(itkIntensityWindowingImageFilterID3ID3_Pointer const & p);
     itkIntensityWindowingImageFilterID3ID3_Pointer(itkIntensityWindowingImageFilterID3ID3 * p);
     ~itkIntensityWindowingImageFilterID3ID3_Pointer();
     itkIntensityWindowingImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterID3ID3_Pointer const & r) const;
     itkIntensityWindowingImageFilterID3ID3_Pointer & operator=(itkIntensityWindowingImageFilterID3ID3_Pointer const & r);
     itkIntensityWindowingImageFilterID3ID3_Pointer & operator=(itkIntensityWindowingImageFilterID3ID3 * r);
     itkIntensityWindowingImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterID3ID3_Superclass : public itkInPlaceImageFilterID3ID3 {
   public:
     static itkIntensityWindowingImageFilterID3ID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< double, double > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< double, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< double, double > const & functor);
   private:
     itkIntensityWindowingImageFilterID3ID3_Superclass(itkIntensityWindowingImageFilterID3ID3_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterID3ID3_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterID3ID3_Superclass();
     ~itkIntensityWindowingImageFilterID3ID3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterID3ID3_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterID3ID3_Superclass_Pointer();
     itkIntensityWindowingImageFilterID3ID3_Superclass_Pointer(itkIntensityWindowingImageFilterID3ID3_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterID3ID3_Superclass_Pointer(itkIntensityWindowingImageFilterID3ID3_Superclass * p);
     ~itkIntensityWindowingImageFilterID3ID3_Superclass_Pointer();
     itkIntensityWindowingImageFilterID3ID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterID3ID3_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterID3ID3_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterID3ID3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterID3ID3_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterID3ID3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterID3ID3_Superclass * r);
     itkIntensityWindowingImageFilterID3ID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterID3IF3_Pointer {
   public:
     itkIntensityWindowingImageFilterID3IF3_Pointer();
     itkIntensityWindowingImageFilterID3IF3_Pointer(itkIntensityWindowingImageFilterID3IF3_Pointer const & p);
     itkIntensityWindowingImageFilterID3IF3_Pointer(itkIntensityWindowingImageFilterID3IF3 * p);
     ~itkIntensityWindowingImageFilterID3IF3_Pointer();
     itkIntensityWindowingImageFilterID3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterID3IF3 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterID3IF3_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterID3IF3_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterID3IF3_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterID3IF3_Pointer const & r) const;
     itkIntensityWindowingImageFilterID3IF3_Pointer & operator=(itkIntensityWindowingImageFilterID3IF3_Pointer const & r);
     itkIntensityWindowingImageFilterID3IF3_Pointer & operator=(itkIntensityWindowingImageFilterID3IF3 * r);
     itkIntensityWindowingImageFilterID3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterID3IF3_Superclass : public itkInPlaceImageFilterID3IF3 {
   public:
     static itkIntensityWindowingImageFilterID3IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< double, float > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< double, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< double, float > const & functor);
   private:
     itkIntensityWindowingImageFilterID3IF3_Superclass(itkIntensityWindowingImageFilterID3IF3_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterID3IF3_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterID3IF3_Superclass();
     ~itkIntensityWindowingImageFilterID3IF3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterID3IF3_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterID3IF3_Superclass_Pointer();
     itkIntensityWindowingImageFilterID3IF3_Superclass_Pointer(itkIntensityWindowingImageFilterID3IF3_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterID3IF3_Superclass_Pointer(itkIntensityWindowingImageFilterID3IF3_Superclass * p);
     ~itkIntensityWindowingImageFilterID3IF3_Superclass_Pointer();
     itkIntensityWindowingImageFilterID3IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterID3IF3_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterID3IF3_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterID3IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterID3IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterID3IF3_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterID3IF3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterID3IF3_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterID3IF3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterID3IF3_Superclass * r);
     itkIntensityWindowingImageFilterID3IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterID3IUC3_Pointer {
   public:
     itkIntensityWindowingImageFilterID3IUC3_Pointer();
     itkIntensityWindowingImageFilterID3IUC3_Pointer(itkIntensityWindowingImageFilterID3IUC3_Pointer const & p);
     itkIntensityWindowingImageFilterID3IUC3_Pointer(itkIntensityWindowingImageFilterID3IUC3 * p);
     ~itkIntensityWindowingImageFilterID3IUC3_Pointer();
     itkIntensityWindowingImageFilterID3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterID3IUC3 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterID3IUC3_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterID3IUC3_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterID3IUC3_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterID3IUC3_Pointer const & r) const;
     itkIntensityWindowingImageFilterID3IUC3_Pointer & operator=(itkIntensityWindowingImageFilterID3IUC3_Pointer const & r);
     itkIntensityWindowingImageFilterID3IUC3_Pointer & operator=(itkIntensityWindowingImageFilterID3IUC3 * r);
     itkIntensityWindowingImageFilterID3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterID3IUC3_Superclass : public itkInPlaceImageFilterID3IUC3 {
   public:
     static itkIntensityWindowingImageFilterID3IUC3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< double, unsigned char > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< double, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< double, unsigned char > const & functor);
   private:
     itkIntensityWindowingImageFilterID3IUC3_Superclass(itkIntensityWindowingImageFilterID3IUC3_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterID3IUC3_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterID3IUC3_Superclass();
     ~itkIntensityWindowingImageFilterID3IUC3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterID3IUC3_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterID3IUC3_Superclass_Pointer();
     itkIntensityWindowingImageFilterID3IUC3_Superclass_Pointer(itkIntensityWindowingImageFilterID3IUC3_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterID3IUC3_Superclass_Pointer(itkIntensityWindowingImageFilterID3IUC3_Superclass * p);
     ~itkIntensityWindowingImageFilterID3IUC3_Superclass_Pointer();
     itkIntensityWindowingImageFilterID3IUC3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterID3IUC3_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterID3IUC3_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterID3IUC3_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterID3IUC3_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterID3IUC3_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterID3IUC3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterID3IUC3_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterID3IUC3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterID3IUC3_Superclass * r);
     itkIntensityWindowingImageFilterID3IUC3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterID3IUL3_Pointer {
   public:
     itkIntensityWindowingImageFilterID3IUL3_Pointer();
     itkIntensityWindowingImageFilterID3IUL3_Pointer(itkIntensityWindowingImageFilterID3IUL3_Pointer const & p);
     itkIntensityWindowingImageFilterID3IUL3_Pointer(itkIntensityWindowingImageFilterID3IUL3 * p);
     ~itkIntensityWindowingImageFilterID3IUL3_Pointer();
     itkIntensityWindowingImageFilterID3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterID3IUL3 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterID3IUL3_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterID3IUL3_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterID3IUL3_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterID3IUL3_Pointer const & r) const;
     itkIntensityWindowingImageFilterID3IUL3_Pointer & operator=(itkIntensityWindowingImageFilterID3IUL3_Pointer const & r);
     itkIntensityWindowingImageFilterID3IUL3_Pointer & operator=(itkIntensityWindowingImageFilterID3IUL3 * r);
     itkIntensityWindowingImageFilterID3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterID3IUL3_Superclass : public itkInPlaceImageFilterID3IUL3 {
   public:
     static itkIntensityWindowingImageFilterID3IUL3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< double, unsigned long > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< double, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< double, unsigned long > const & functor);
   private:
     itkIntensityWindowingImageFilterID3IUL3_Superclass(itkIntensityWindowingImageFilterID3IUL3_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterID3IUL3_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterID3IUL3_Superclass();
     ~itkIntensityWindowingImageFilterID3IUL3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterID3IUL3_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterID3IUL3_Superclass_Pointer();
     itkIntensityWindowingImageFilterID3IUL3_Superclass_Pointer(itkIntensityWindowingImageFilterID3IUL3_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterID3IUL3_Superclass_Pointer(itkIntensityWindowingImageFilterID3IUL3_Superclass * p);
     ~itkIntensityWindowingImageFilterID3IUL3_Superclass_Pointer();
     itkIntensityWindowingImageFilterID3IUL3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterID3IUL3_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterID3IUL3_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterID3IUL3_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterID3IUL3_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterID3IUL3_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterID3IUL3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterID3IUL3_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterID3IUL3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterID3IUL3_Superclass * r);
     itkIntensityWindowingImageFilterID3IUL3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterID3IUS3_Pointer {
   public:
     itkIntensityWindowingImageFilterID3IUS3_Pointer();
     itkIntensityWindowingImageFilterID3IUS3_Pointer(itkIntensityWindowingImageFilterID3IUS3_Pointer const & p);
     itkIntensityWindowingImageFilterID3IUS3_Pointer(itkIntensityWindowingImageFilterID3IUS3 * p);
     ~itkIntensityWindowingImageFilterID3IUS3_Pointer();
     itkIntensityWindowingImageFilterID3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterID3IUS3 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterID3IUS3_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterID3IUS3_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterID3IUS3_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterID3IUS3_Pointer const & r) const;
     itkIntensityWindowingImageFilterID3IUS3_Pointer & operator=(itkIntensityWindowingImageFilterID3IUS3_Pointer const & r);
     itkIntensityWindowingImageFilterID3IUS3_Pointer & operator=(itkIntensityWindowingImageFilterID3IUS3 * r);
     itkIntensityWindowingImageFilterID3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterID3IUS3_Superclass : public itkInPlaceImageFilterID3IUS3 {
   public:
     static itkIntensityWindowingImageFilterID3IUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< double, unsigned short > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< double, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< double, unsigned short > const & functor);
   private:
     itkIntensityWindowingImageFilterID3IUS3_Superclass(itkIntensityWindowingImageFilterID3IUS3_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterID3IUS3_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterID3IUS3_Superclass();
     ~itkIntensityWindowingImageFilterID3IUS3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterID3IUS3_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterID3IUS3_Superclass_Pointer();
     itkIntensityWindowingImageFilterID3IUS3_Superclass_Pointer(itkIntensityWindowingImageFilterID3IUS3_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterID3IUS3_Superclass_Pointer(itkIntensityWindowingImageFilterID3IUS3_Superclass * p);
     ~itkIntensityWindowingImageFilterID3IUS3_Superclass_Pointer();
     itkIntensityWindowingImageFilterID3IUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterID3IUS3_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterID3IUS3_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterID3IUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterID3IUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterID3IUS3_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterID3IUS3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterID3IUS3_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterID3IUS3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterID3IUS3_Superclass * r);
     itkIntensityWindowingImageFilterID3IUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIF2ID2_Pointer {
   public:
     itkIntensityWindowingImageFilterIF2ID2_Pointer();
     itkIntensityWindowingImageFilterIF2ID2_Pointer(itkIntensityWindowingImageFilterIF2ID2_Pointer const & p);
     itkIntensityWindowingImageFilterIF2ID2_Pointer(itkIntensityWindowingImageFilterIF2ID2 * p);
     ~itkIntensityWindowingImageFilterIF2ID2_Pointer();
     itkIntensityWindowingImageFilterIF2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIF2ID2 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIF2ID2_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIF2ID2_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIF2ID2_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIF2ID2_Pointer const & r) const;
     itkIntensityWindowingImageFilterIF2ID2_Pointer & operator=(itkIntensityWindowingImageFilterIF2ID2_Pointer const & r);
     itkIntensityWindowingImageFilterIF2ID2_Pointer & operator=(itkIntensityWindowingImageFilterIF2ID2 * r);
     itkIntensityWindowingImageFilterIF2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIF2ID2_Superclass : public itkInPlaceImageFilterIF2ID2 {
   public:
     static itkIntensityWindowingImageFilterIF2ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< float, double > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< float, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< float, double > const & functor);
   private:
     itkIntensityWindowingImageFilterIF2ID2_Superclass(itkIntensityWindowingImageFilterIF2ID2_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIF2ID2_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIF2ID2_Superclass();
     ~itkIntensityWindowingImageFilterIF2ID2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIF2ID2_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIF2ID2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIF2ID2_Superclass_Pointer(itkIntensityWindowingImageFilterIF2ID2_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIF2ID2_Superclass_Pointer(itkIntensityWindowingImageFilterIF2ID2_Superclass * p);
     ~itkIntensityWindowingImageFilterIF2ID2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIF2ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIF2ID2_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIF2ID2_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIF2ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIF2ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIF2ID2_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIF2ID2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIF2ID2_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIF2ID2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIF2ID2_Superclass * r);
     itkIntensityWindowingImageFilterIF2ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIF2IF2_Pointer {
   public:
     itkIntensityWindowingImageFilterIF2IF2_Pointer();
     itkIntensityWindowingImageFilterIF2IF2_Pointer(itkIntensityWindowingImageFilterIF2IF2_Pointer const & p);
     itkIntensityWindowingImageFilterIF2IF2_Pointer(itkIntensityWindowingImageFilterIF2IF2 * p);
     ~itkIntensityWindowingImageFilterIF2IF2_Pointer();
     itkIntensityWindowingImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIF2IF2_Pointer const & r) const;
     itkIntensityWindowingImageFilterIF2IF2_Pointer & operator=(itkIntensityWindowingImageFilterIF2IF2_Pointer const & r);
     itkIntensityWindowingImageFilterIF2IF2_Pointer & operator=(itkIntensityWindowingImageFilterIF2IF2 * r);
     itkIntensityWindowingImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIF2IF2_Superclass : public itkInPlaceImageFilterIF2IF2 {
   public:
     static itkIntensityWindowingImageFilterIF2IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< float, float > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< float, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< float, float > const & functor);
   private:
     itkIntensityWindowingImageFilterIF2IF2_Superclass(itkIntensityWindowingImageFilterIF2IF2_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIF2IF2_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIF2IF2_Superclass();
     ~itkIntensityWindowingImageFilterIF2IF2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIF2IF2_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIF2IF2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIF2IF2_Superclass_Pointer(itkIntensityWindowingImageFilterIF2IF2_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIF2IF2_Superclass_Pointer(itkIntensityWindowingImageFilterIF2IF2_Superclass * p);
     ~itkIntensityWindowingImageFilterIF2IF2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIF2IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIF2IF2_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIF2IF2_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIF2IF2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIF2IF2_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIF2IF2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIF2IF2_Superclass * r);
     itkIntensityWindowingImageFilterIF2IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIF2IUC2_Pointer {
   public:
     itkIntensityWindowingImageFilterIF2IUC2_Pointer();
     itkIntensityWindowingImageFilterIF2IUC2_Pointer(itkIntensityWindowingImageFilterIF2IUC2_Pointer const & p);
     itkIntensityWindowingImageFilterIF2IUC2_Pointer(itkIntensityWindowingImageFilterIF2IUC2 * p);
     ~itkIntensityWindowingImageFilterIF2IUC2_Pointer();
     itkIntensityWindowingImageFilterIF2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIF2IUC2 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIF2IUC2_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIF2IUC2_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIF2IUC2_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIF2IUC2_Pointer const & r) const;
     itkIntensityWindowingImageFilterIF2IUC2_Pointer & operator=(itkIntensityWindowingImageFilterIF2IUC2_Pointer const & r);
     itkIntensityWindowingImageFilterIF2IUC2_Pointer & operator=(itkIntensityWindowingImageFilterIF2IUC2 * r);
     itkIntensityWindowingImageFilterIF2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIF2IUC2_Superclass : public itkInPlaceImageFilterIF2IUC2 {
   public:
     static itkIntensityWindowingImageFilterIF2IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< float, unsigned char > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< float, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< float, unsigned char > const & functor);
   private:
     itkIntensityWindowingImageFilterIF2IUC2_Superclass(itkIntensityWindowingImageFilterIF2IUC2_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIF2IUC2_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIF2IUC2_Superclass();
     ~itkIntensityWindowingImageFilterIF2IUC2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIF2IUC2_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIF2IUC2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIF2IUC2_Superclass_Pointer(itkIntensityWindowingImageFilterIF2IUC2_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIF2IUC2_Superclass_Pointer(itkIntensityWindowingImageFilterIF2IUC2_Superclass * p);
     ~itkIntensityWindowingImageFilterIF2IUC2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIF2IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIF2IUC2_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIF2IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIF2IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIF2IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIF2IUC2_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIF2IUC2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIF2IUC2_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIF2IUC2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIF2IUC2_Superclass * r);
     itkIntensityWindowingImageFilterIF2IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIF2IUL2_Pointer {
   public:
     itkIntensityWindowingImageFilterIF2IUL2_Pointer();
     itkIntensityWindowingImageFilterIF2IUL2_Pointer(itkIntensityWindowingImageFilterIF2IUL2_Pointer const & p);
     itkIntensityWindowingImageFilterIF2IUL2_Pointer(itkIntensityWindowingImageFilterIF2IUL2 * p);
     ~itkIntensityWindowingImageFilterIF2IUL2_Pointer();
     itkIntensityWindowingImageFilterIF2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIF2IUL2 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIF2IUL2_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIF2IUL2_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIF2IUL2_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIF2IUL2_Pointer const & r) const;
     itkIntensityWindowingImageFilterIF2IUL2_Pointer & operator=(itkIntensityWindowingImageFilterIF2IUL2_Pointer const & r);
     itkIntensityWindowingImageFilterIF2IUL2_Pointer & operator=(itkIntensityWindowingImageFilterIF2IUL2 * r);
     itkIntensityWindowingImageFilterIF2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIF2IUL2_Superclass : public itkInPlaceImageFilterIF2IUL2 {
   public:
     static itkIntensityWindowingImageFilterIF2IUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< float, unsigned long > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< float, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< float, unsigned long > const & functor);
   private:
     itkIntensityWindowingImageFilterIF2IUL2_Superclass(itkIntensityWindowingImageFilterIF2IUL2_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIF2IUL2_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIF2IUL2_Superclass();
     ~itkIntensityWindowingImageFilterIF2IUL2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIF2IUL2_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIF2IUL2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIF2IUL2_Superclass_Pointer(itkIntensityWindowingImageFilterIF2IUL2_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIF2IUL2_Superclass_Pointer(itkIntensityWindowingImageFilterIF2IUL2_Superclass * p);
     ~itkIntensityWindowingImageFilterIF2IUL2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIF2IUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIF2IUL2_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIF2IUL2_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIF2IUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIF2IUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIF2IUL2_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIF2IUL2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIF2IUL2_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIF2IUL2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIF2IUL2_Superclass * r);
     itkIntensityWindowingImageFilterIF2IUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIF2IUS2_Pointer {
   public:
     itkIntensityWindowingImageFilterIF2IUS2_Pointer();
     itkIntensityWindowingImageFilterIF2IUS2_Pointer(itkIntensityWindowingImageFilterIF2IUS2_Pointer const & p);
     itkIntensityWindowingImageFilterIF2IUS2_Pointer(itkIntensityWindowingImageFilterIF2IUS2 * p);
     ~itkIntensityWindowingImageFilterIF2IUS2_Pointer();
     itkIntensityWindowingImageFilterIF2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIF2IUS2 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIF2IUS2_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIF2IUS2_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIF2IUS2_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIF2IUS2_Pointer const & r) const;
     itkIntensityWindowingImageFilterIF2IUS2_Pointer & operator=(itkIntensityWindowingImageFilterIF2IUS2_Pointer const & r);
     itkIntensityWindowingImageFilterIF2IUS2_Pointer & operator=(itkIntensityWindowingImageFilterIF2IUS2 * r);
     itkIntensityWindowingImageFilterIF2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIF2IUS2_Superclass : public itkInPlaceImageFilterIF2IUS2 {
   public:
     static itkIntensityWindowingImageFilterIF2IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< float, unsigned short > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< float, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< float, unsigned short > const & functor);
   private:
     itkIntensityWindowingImageFilterIF2IUS2_Superclass(itkIntensityWindowingImageFilterIF2IUS2_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIF2IUS2_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIF2IUS2_Superclass();
     ~itkIntensityWindowingImageFilterIF2IUS2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIF2IUS2_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIF2IUS2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIF2IUS2_Superclass_Pointer(itkIntensityWindowingImageFilterIF2IUS2_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIF2IUS2_Superclass_Pointer(itkIntensityWindowingImageFilterIF2IUS2_Superclass * p);
     ~itkIntensityWindowingImageFilterIF2IUS2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIF2IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIF2IUS2_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIF2IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIF2IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIF2IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIF2IUS2_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIF2IUS2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIF2IUS2_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIF2IUS2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIF2IUS2_Superclass * r);
     itkIntensityWindowingImageFilterIF2IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIF3ID3_Pointer {
   public:
     itkIntensityWindowingImageFilterIF3ID3_Pointer();
     itkIntensityWindowingImageFilterIF3ID3_Pointer(itkIntensityWindowingImageFilterIF3ID3_Pointer const & p);
     itkIntensityWindowingImageFilterIF3ID3_Pointer(itkIntensityWindowingImageFilterIF3ID3 * p);
     ~itkIntensityWindowingImageFilterIF3ID3_Pointer();
     itkIntensityWindowingImageFilterIF3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIF3ID3 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIF3ID3_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIF3ID3_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIF3ID3_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIF3ID3_Pointer const & r) const;
     itkIntensityWindowingImageFilterIF3ID3_Pointer & operator=(itkIntensityWindowingImageFilterIF3ID3_Pointer const & r);
     itkIntensityWindowingImageFilterIF3ID3_Pointer & operator=(itkIntensityWindowingImageFilterIF3ID3 * r);
     itkIntensityWindowingImageFilterIF3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIF3ID3_Superclass : public itkInPlaceImageFilterIF3ID3 {
   public:
     static itkIntensityWindowingImageFilterIF3ID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< float, double > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< float, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< float, double > const & functor);
   private:
     itkIntensityWindowingImageFilterIF3ID3_Superclass(itkIntensityWindowingImageFilterIF3ID3_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIF3ID3_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIF3ID3_Superclass();
     ~itkIntensityWindowingImageFilterIF3ID3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIF3ID3_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIF3ID3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIF3ID3_Superclass_Pointer(itkIntensityWindowingImageFilterIF3ID3_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIF3ID3_Superclass_Pointer(itkIntensityWindowingImageFilterIF3ID3_Superclass * p);
     ~itkIntensityWindowingImageFilterIF3ID3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIF3ID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIF3ID3_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIF3ID3_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIF3ID3_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIF3ID3_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIF3ID3_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIF3ID3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIF3ID3_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIF3ID3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIF3ID3_Superclass * r);
     itkIntensityWindowingImageFilterIF3ID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIF3IF3_Pointer {
   public:
     itkIntensityWindowingImageFilterIF3IF3_Pointer();
     itkIntensityWindowingImageFilterIF3IF3_Pointer(itkIntensityWindowingImageFilterIF3IF3_Pointer const & p);
     itkIntensityWindowingImageFilterIF3IF3_Pointer(itkIntensityWindowingImageFilterIF3IF3 * p);
     ~itkIntensityWindowingImageFilterIF3IF3_Pointer();
     itkIntensityWindowingImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIF3IF3_Pointer const & r) const;
     itkIntensityWindowingImageFilterIF3IF3_Pointer & operator=(itkIntensityWindowingImageFilterIF3IF3_Pointer const & r);
     itkIntensityWindowingImageFilterIF3IF3_Pointer & operator=(itkIntensityWindowingImageFilterIF3IF3 * r);
     itkIntensityWindowingImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIF3IF3_Superclass : public itkInPlaceImageFilterIF3IF3 {
   public:
     static itkIntensityWindowingImageFilterIF3IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< float, float > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< float, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< float, float > const & functor);
   private:
     itkIntensityWindowingImageFilterIF3IF3_Superclass(itkIntensityWindowingImageFilterIF3IF3_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIF3IF3_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIF3IF3_Superclass();
     ~itkIntensityWindowingImageFilterIF3IF3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIF3IF3_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIF3IF3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIF3IF3_Superclass_Pointer(itkIntensityWindowingImageFilterIF3IF3_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIF3IF3_Superclass_Pointer(itkIntensityWindowingImageFilterIF3IF3_Superclass * p);
     ~itkIntensityWindowingImageFilterIF3IF3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIF3IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIF3IF3_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIF3IF3_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIF3IF3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIF3IF3_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIF3IF3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIF3IF3_Superclass * r);
     itkIntensityWindowingImageFilterIF3IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIF3IUC3_Pointer {
   public:
     itkIntensityWindowingImageFilterIF3IUC3_Pointer();
     itkIntensityWindowingImageFilterIF3IUC3_Pointer(itkIntensityWindowingImageFilterIF3IUC3_Pointer const & p);
     itkIntensityWindowingImageFilterIF3IUC3_Pointer(itkIntensityWindowingImageFilterIF3IUC3 * p);
     ~itkIntensityWindowingImageFilterIF3IUC3_Pointer();
     itkIntensityWindowingImageFilterIF3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIF3IUC3 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIF3IUC3_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIF3IUC3_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIF3IUC3_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIF3IUC3_Pointer const & r) const;
     itkIntensityWindowingImageFilterIF3IUC3_Pointer & operator=(itkIntensityWindowingImageFilterIF3IUC3_Pointer const & r);
     itkIntensityWindowingImageFilterIF3IUC3_Pointer & operator=(itkIntensityWindowingImageFilterIF3IUC3 * r);
     itkIntensityWindowingImageFilterIF3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIF3IUC3_Superclass : public itkInPlaceImageFilterIF3IUC3 {
   public:
     static itkIntensityWindowingImageFilterIF3IUC3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< float, unsigned char > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< float, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< float, unsigned char > const & functor);
   private:
     itkIntensityWindowingImageFilterIF3IUC3_Superclass(itkIntensityWindowingImageFilterIF3IUC3_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIF3IUC3_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIF3IUC3_Superclass();
     ~itkIntensityWindowingImageFilterIF3IUC3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIF3IUC3_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIF3IUC3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIF3IUC3_Superclass_Pointer(itkIntensityWindowingImageFilterIF3IUC3_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIF3IUC3_Superclass_Pointer(itkIntensityWindowingImageFilterIF3IUC3_Superclass * p);
     ~itkIntensityWindowingImageFilterIF3IUC3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIF3IUC3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIF3IUC3_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIF3IUC3_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIF3IUC3_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIF3IUC3_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIF3IUC3_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIF3IUC3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIF3IUC3_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIF3IUC3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIF3IUC3_Superclass * r);
     itkIntensityWindowingImageFilterIF3IUC3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIF3IUL3_Pointer {
   public:
     itkIntensityWindowingImageFilterIF3IUL3_Pointer();
     itkIntensityWindowingImageFilterIF3IUL3_Pointer(itkIntensityWindowingImageFilterIF3IUL3_Pointer const & p);
     itkIntensityWindowingImageFilterIF3IUL3_Pointer(itkIntensityWindowingImageFilterIF3IUL3 * p);
     ~itkIntensityWindowingImageFilterIF3IUL3_Pointer();
     itkIntensityWindowingImageFilterIF3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIF3IUL3 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIF3IUL3_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIF3IUL3_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIF3IUL3_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIF3IUL3_Pointer const & r) const;
     itkIntensityWindowingImageFilterIF3IUL3_Pointer & operator=(itkIntensityWindowingImageFilterIF3IUL3_Pointer const & r);
     itkIntensityWindowingImageFilterIF3IUL3_Pointer & operator=(itkIntensityWindowingImageFilterIF3IUL3 * r);
     itkIntensityWindowingImageFilterIF3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIF3IUL3_Superclass : public itkInPlaceImageFilterIF3IUL3 {
   public:
     static itkIntensityWindowingImageFilterIF3IUL3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< float, unsigned long > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< float, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< float, unsigned long > const & functor);
   private:
     itkIntensityWindowingImageFilterIF3IUL3_Superclass(itkIntensityWindowingImageFilterIF3IUL3_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIF3IUL3_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIF3IUL3_Superclass();
     ~itkIntensityWindowingImageFilterIF3IUL3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIF3IUL3_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIF3IUL3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIF3IUL3_Superclass_Pointer(itkIntensityWindowingImageFilterIF3IUL3_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIF3IUL3_Superclass_Pointer(itkIntensityWindowingImageFilterIF3IUL3_Superclass * p);
     ~itkIntensityWindowingImageFilterIF3IUL3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIF3IUL3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIF3IUL3_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIF3IUL3_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIF3IUL3_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIF3IUL3_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIF3IUL3_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIF3IUL3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIF3IUL3_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIF3IUL3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIF3IUL3_Superclass * r);
     itkIntensityWindowingImageFilterIF3IUL3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIF3IUS3_Pointer {
   public:
     itkIntensityWindowingImageFilterIF3IUS3_Pointer();
     itkIntensityWindowingImageFilterIF3IUS3_Pointer(itkIntensityWindowingImageFilterIF3IUS3_Pointer const & p);
     itkIntensityWindowingImageFilterIF3IUS3_Pointer(itkIntensityWindowingImageFilterIF3IUS3 * p);
     ~itkIntensityWindowingImageFilterIF3IUS3_Pointer();
     itkIntensityWindowingImageFilterIF3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIF3IUS3 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIF3IUS3_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIF3IUS3_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIF3IUS3_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIF3IUS3_Pointer const & r) const;
     itkIntensityWindowingImageFilterIF3IUS3_Pointer & operator=(itkIntensityWindowingImageFilterIF3IUS3_Pointer const & r);
     itkIntensityWindowingImageFilterIF3IUS3_Pointer & operator=(itkIntensityWindowingImageFilterIF3IUS3 * r);
     itkIntensityWindowingImageFilterIF3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIF3IUS3_Superclass : public itkInPlaceImageFilterIF3IUS3 {
   public:
     static itkIntensityWindowingImageFilterIF3IUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< float, unsigned short > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< float, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< float, unsigned short > const & functor);
   private:
     itkIntensityWindowingImageFilterIF3IUS3_Superclass(itkIntensityWindowingImageFilterIF3IUS3_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIF3IUS3_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIF3IUS3_Superclass();
     ~itkIntensityWindowingImageFilterIF3IUS3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIF3IUS3_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIF3IUS3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIF3IUS3_Superclass_Pointer(itkIntensityWindowingImageFilterIF3IUS3_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIF3IUS3_Superclass_Pointer(itkIntensityWindowingImageFilterIF3IUS3_Superclass * p);
     ~itkIntensityWindowingImageFilterIF3IUS3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIF3IUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIF3IUS3_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIF3IUS3_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIF3IUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIF3IUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIF3IUS3_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIF3IUS3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIF3IUS3_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIF3IUS3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIF3IUS3_Superclass * r);
     itkIntensityWindowingImageFilterIF3IUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUC2ID2_Pointer {
   public:
     itkIntensityWindowingImageFilterIUC2ID2_Pointer();
     itkIntensityWindowingImageFilterIUC2ID2_Pointer(itkIntensityWindowingImageFilterIUC2ID2_Pointer const & p);
     itkIntensityWindowingImageFilterIUC2ID2_Pointer(itkIntensityWindowingImageFilterIUC2ID2 * p);
     ~itkIntensityWindowingImageFilterIUC2ID2_Pointer();
     itkIntensityWindowingImageFilterIUC2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUC2ID2 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUC2ID2_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUC2ID2_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUC2ID2_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUC2ID2_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUC2ID2_Pointer & operator=(itkIntensityWindowingImageFilterIUC2ID2_Pointer const & r);
     itkIntensityWindowingImageFilterIUC2ID2_Pointer & operator=(itkIntensityWindowingImageFilterIUC2ID2 * r);
     itkIntensityWindowingImageFilterIUC2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUC2ID2_Superclass : public itkInPlaceImageFilterIUC2ID2 {
   public:
     static itkIntensityWindowingImageFilterIUC2ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< unsigned char, double > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< unsigned char, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< unsigned char, double > const & functor);
   private:
     itkIntensityWindowingImageFilterIUC2ID2_Superclass(itkIntensityWindowingImageFilterIUC2ID2_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUC2ID2_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUC2ID2_Superclass();
     ~itkIntensityWindowingImageFilterIUC2ID2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIUC2ID2_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIUC2ID2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUC2ID2_Superclass_Pointer(itkIntensityWindowingImageFilterIUC2ID2_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIUC2ID2_Superclass_Pointer(itkIntensityWindowingImageFilterIUC2ID2_Superclass * p);
     ~itkIntensityWindowingImageFilterIUC2ID2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUC2ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUC2ID2_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUC2ID2_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUC2ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUC2ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUC2ID2_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUC2ID2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUC2ID2_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIUC2ID2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUC2ID2_Superclass * r);
     itkIntensityWindowingImageFilterIUC2ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUC2IF2_Pointer {
   public:
     itkIntensityWindowingImageFilterIUC2IF2_Pointer();
     itkIntensityWindowingImageFilterIUC2IF2_Pointer(itkIntensityWindowingImageFilterIUC2IF2_Pointer const & p);
     itkIntensityWindowingImageFilterIUC2IF2_Pointer(itkIntensityWindowingImageFilterIUC2IF2 * p);
     ~itkIntensityWindowingImageFilterIUC2IF2_Pointer();
     itkIntensityWindowingImageFilterIUC2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUC2IF2 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUC2IF2_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUC2IF2_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUC2IF2_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUC2IF2_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUC2IF2_Pointer & operator=(itkIntensityWindowingImageFilterIUC2IF2_Pointer const & r);
     itkIntensityWindowingImageFilterIUC2IF2_Pointer & operator=(itkIntensityWindowingImageFilterIUC2IF2 * r);
     itkIntensityWindowingImageFilterIUC2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUC2IF2_Superclass : public itkInPlaceImageFilterIUC2IF2 {
   public:
     static itkIntensityWindowingImageFilterIUC2IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< unsigned char, float > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< unsigned char, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< unsigned char, float > const & functor);
   private:
     itkIntensityWindowingImageFilterIUC2IF2_Superclass(itkIntensityWindowingImageFilterIUC2IF2_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUC2IF2_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUC2IF2_Superclass();
     ~itkIntensityWindowingImageFilterIUC2IF2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIUC2IF2_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIUC2IF2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUC2IF2_Superclass_Pointer(itkIntensityWindowingImageFilterIUC2IF2_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIUC2IF2_Superclass_Pointer(itkIntensityWindowingImageFilterIUC2IF2_Superclass * p);
     ~itkIntensityWindowingImageFilterIUC2IF2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUC2IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUC2IF2_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUC2IF2_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUC2IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUC2IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUC2IF2_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUC2IF2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUC2IF2_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIUC2IF2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUC2IF2_Superclass * r);
     itkIntensityWindowingImageFilterIUC2IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUC2IUC2_Pointer {
   public:
     itkIntensityWindowingImageFilterIUC2IUC2_Pointer();
     itkIntensityWindowingImageFilterIUC2IUC2_Pointer(itkIntensityWindowingImageFilterIUC2IUC2_Pointer const & p);
     itkIntensityWindowingImageFilterIUC2IUC2_Pointer(itkIntensityWindowingImageFilterIUC2IUC2 * p);
     ~itkIntensityWindowingImageFilterIUC2IUC2_Pointer();
     itkIntensityWindowingImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUC2IUC2_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUC2IUC2_Pointer & operator=(itkIntensityWindowingImageFilterIUC2IUC2_Pointer const & r);
     itkIntensityWindowingImageFilterIUC2IUC2_Pointer & operator=(itkIntensityWindowingImageFilterIUC2IUC2 * r);
     itkIntensityWindowingImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUC2IUC2_Superclass : public itkInPlaceImageFilterIUC2IUC2 {
   public:
     static itkIntensityWindowingImageFilterIUC2IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< unsigned char, unsigned char > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< unsigned char, unsigned char > const & functor);
   private:
     itkIntensityWindowingImageFilterIUC2IUC2_Superclass(itkIntensityWindowingImageFilterIUC2IUC2_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUC2IUC2_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUC2IUC2_Superclass();
     ~itkIntensityWindowingImageFilterIUC2IUC2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIUC2IUC2_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIUC2IUC2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUC2IUC2_Superclass_Pointer(itkIntensityWindowingImageFilterIUC2IUC2_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIUC2IUC2_Superclass_Pointer(itkIntensityWindowingImageFilterIUC2IUC2_Superclass * p);
     ~itkIntensityWindowingImageFilterIUC2IUC2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUC2IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUC2IUC2_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUC2IUC2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUC2IUC2_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIUC2IUC2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUC2IUC2_Superclass * r);
     itkIntensityWindowingImageFilterIUC2IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUC2IUL2_Pointer {
   public:
     itkIntensityWindowingImageFilterIUC2IUL2_Pointer();
     itkIntensityWindowingImageFilterIUC2IUL2_Pointer(itkIntensityWindowingImageFilterIUC2IUL2_Pointer const & p);
     itkIntensityWindowingImageFilterIUC2IUL2_Pointer(itkIntensityWindowingImageFilterIUC2IUL2 * p);
     ~itkIntensityWindowingImageFilterIUC2IUL2_Pointer();
     itkIntensityWindowingImageFilterIUC2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUC2IUL2 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUC2IUL2_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUC2IUL2_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUC2IUL2_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUC2IUL2_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUC2IUL2_Pointer & operator=(itkIntensityWindowingImageFilterIUC2IUL2_Pointer const & r);
     itkIntensityWindowingImageFilterIUC2IUL2_Pointer & operator=(itkIntensityWindowingImageFilterIUC2IUL2 * r);
     itkIntensityWindowingImageFilterIUC2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUC2IUL2_Superclass : public itkInPlaceImageFilterIUC2IUL2 {
   public:
     static itkIntensityWindowingImageFilterIUC2IUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< unsigned char, unsigned long > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< unsigned char, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< unsigned char, unsigned long > const & functor);
   private:
     itkIntensityWindowingImageFilterIUC2IUL2_Superclass(itkIntensityWindowingImageFilterIUC2IUL2_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUC2IUL2_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUC2IUL2_Superclass();
     ~itkIntensityWindowingImageFilterIUC2IUL2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIUC2IUL2_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIUC2IUL2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUC2IUL2_Superclass_Pointer(itkIntensityWindowingImageFilterIUC2IUL2_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIUC2IUL2_Superclass_Pointer(itkIntensityWindowingImageFilterIUC2IUL2_Superclass * p);
     ~itkIntensityWindowingImageFilterIUC2IUL2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUC2IUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUC2IUL2_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUC2IUL2_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUC2IUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUC2IUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUC2IUL2_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUC2IUL2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUC2IUL2_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIUC2IUL2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUC2IUL2_Superclass * r);
     itkIntensityWindowingImageFilterIUC2IUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUC2IUS2_Pointer {
   public:
     itkIntensityWindowingImageFilterIUC2IUS2_Pointer();
     itkIntensityWindowingImageFilterIUC2IUS2_Pointer(itkIntensityWindowingImageFilterIUC2IUS2_Pointer const & p);
     itkIntensityWindowingImageFilterIUC2IUS2_Pointer(itkIntensityWindowingImageFilterIUC2IUS2 * p);
     ~itkIntensityWindowingImageFilterIUC2IUS2_Pointer();
     itkIntensityWindowingImageFilterIUC2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUC2IUS2 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUC2IUS2_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUC2IUS2_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUC2IUS2_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUC2IUS2_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUC2IUS2_Pointer & operator=(itkIntensityWindowingImageFilterIUC2IUS2_Pointer const & r);
     itkIntensityWindowingImageFilterIUC2IUS2_Pointer & operator=(itkIntensityWindowingImageFilterIUC2IUS2 * r);
     itkIntensityWindowingImageFilterIUC2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUC2IUS2_Superclass : public itkInPlaceImageFilterIUC2IUS2 {
   public:
     static itkIntensityWindowingImageFilterIUC2IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< unsigned char, unsigned short > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< unsigned char, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< unsigned char, unsigned short > const & functor);
   private:
     itkIntensityWindowingImageFilterIUC2IUS2_Superclass(itkIntensityWindowingImageFilterIUC2IUS2_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUC2IUS2_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUC2IUS2_Superclass();
     ~itkIntensityWindowingImageFilterIUC2IUS2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIUC2IUS2_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIUC2IUS2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUC2IUS2_Superclass_Pointer(itkIntensityWindowingImageFilterIUC2IUS2_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIUC2IUS2_Superclass_Pointer(itkIntensityWindowingImageFilterIUC2IUS2_Superclass * p);
     ~itkIntensityWindowingImageFilterIUC2IUS2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUC2IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUC2IUS2_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUC2IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUC2IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUC2IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUC2IUS2_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUC2IUS2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUC2IUS2_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIUC2IUS2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUC2IUS2_Superclass * r);
     itkIntensityWindowingImageFilterIUC2IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUC3ID3_Pointer {
   public:
     itkIntensityWindowingImageFilterIUC3ID3_Pointer();
     itkIntensityWindowingImageFilterIUC3ID3_Pointer(itkIntensityWindowingImageFilterIUC3ID3_Pointer const & p);
     itkIntensityWindowingImageFilterIUC3ID3_Pointer(itkIntensityWindowingImageFilterIUC3ID3 * p);
     ~itkIntensityWindowingImageFilterIUC3ID3_Pointer();
     itkIntensityWindowingImageFilterIUC3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUC3ID3 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUC3ID3_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUC3ID3_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUC3ID3_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUC3ID3_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUC3ID3_Pointer & operator=(itkIntensityWindowingImageFilterIUC3ID3_Pointer const & r);
     itkIntensityWindowingImageFilterIUC3ID3_Pointer & operator=(itkIntensityWindowingImageFilterIUC3ID3 * r);
     itkIntensityWindowingImageFilterIUC3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUC3ID3_Superclass : public itkInPlaceImageFilterIUC3ID3 {
   public:
     static itkIntensityWindowingImageFilterIUC3ID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< unsigned char, double > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< unsigned char, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< unsigned char, double > const & functor);
   private:
     itkIntensityWindowingImageFilterIUC3ID3_Superclass(itkIntensityWindowingImageFilterIUC3ID3_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUC3ID3_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUC3ID3_Superclass();
     ~itkIntensityWindowingImageFilterIUC3ID3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIUC3ID3_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIUC3ID3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUC3ID3_Superclass_Pointer(itkIntensityWindowingImageFilterIUC3ID3_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIUC3ID3_Superclass_Pointer(itkIntensityWindowingImageFilterIUC3ID3_Superclass * p);
     ~itkIntensityWindowingImageFilterIUC3ID3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUC3ID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUC3ID3_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUC3ID3_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUC3ID3_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUC3ID3_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUC3ID3_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUC3ID3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUC3ID3_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIUC3ID3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUC3ID3_Superclass * r);
     itkIntensityWindowingImageFilterIUC3ID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUC3IF3_Pointer {
   public:
     itkIntensityWindowingImageFilterIUC3IF3_Pointer();
     itkIntensityWindowingImageFilterIUC3IF3_Pointer(itkIntensityWindowingImageFilterIUC3IF3_Pointer const & p);
     itkIntensityWindowingImageFilterIUC3IF3_Pointer(itkIntensityWindowingImageFilterIUC3IF3 * p);
     ~itkIntensityWindowingImageFilterIUC3IF3_Pointer();
     itkIntensityWindowingImageFilterIUC3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUC3IF3 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUC3IF3_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUC3IF3_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUC3IF3_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUC3IF3_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUC3IF3_Pointer & operator=(itkIntensityWindowingImageFilterIUC3IF3_Pointer const & r);
     itkIntensityWindowingImageFilterIUC3IF3_Pointer & operator=(itkIntensityWindowingImageFilterIUC3IF3 * r);
     itkIntensityWindowingImageFilterIUC3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUC3IF3_Superclass : public itkInPlaceImageFilterIUC3IF3 {
   public:
     static itkIntensityWindowingImageFilterIUC3IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< unsigned char, float > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< unsigned char, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< unsigned char, float > const & functor);
   private:
     itkIntensityWindowingImageFilterIUC3IF3_Superclass(itkIntensityWindowingImageFilterIUC3IF3_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUC3IF3_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUC3IF3_Superclass();
     ~itkIntensityWindowingImageFilterIUC3IF3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIUC3IF3_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIUC3IF3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUC3IF3_Superclass_Pointer(itkIntensityWindowingImageFilterIUC3IF3_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIUC3IF3_Superclass_Pointer(itkIntensityWindowingImageFilterIUC3IF3_Superclass * p);
     ~itkIntensityWindowingImageFilterIUC3IF3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUC3IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUC3IF3_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUC3IF3_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUC3IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUC3IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUC3IF3_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUC3IF3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUC3IF3_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIUC3IF3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUC3IF3_Superclass * r);
     itkIntensityWindowingImageFilterIUC3IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUC3IUC3_Pointer {
   public:
     itkIntensityWindowingImageFilterIUC3IUC3_Pointer();
     itkIntensityWindowingImageFilterIUC3IUC3_Pointer(itkIntensityWindowingImageFilterIUC3IUC3_Pointer const & p);
     itkIntensityWindowingImageFilterIUC3IUC3_Pointer(itkIntensityWindowingImageFilterIUC3IUC3 * p);
     ~itkIntensityWindowingImageFilterIUC3IUC3_Pointer();
     itkIntensityWindowingImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUC3IUC3_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUC3IUC3_Pointer & operator=(itkIntensityWindowingImageFilterIUC3IUC3_Pointer const & r);
     itkIntensityWindowingImageFilterIUC3IUC3_Pointer & operator=(itkIntensityWindowingImageFilterIUC3IUC3 * r);
     itkIntensityWindowingImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUC3IUC3_Superclass : public itkInPlaceImageFilterIUC3IUC3 {
   public:
     static itkIntensityWindowingImageFilterIUC3IUC3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< unsigned char, unsigned char > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< unsigned char, unsigned char > const & functor);
   private:
     itkIntensityWindowingImageFilterIUC3IUC3_Superclass(itkIntensityWindowingImageFilterIUC3IUC3_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUC3IUC3_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUC3IUC3_Superclass();
     ~itkIntensityWindowingImageFilterIUC3IUC3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIUC3IUC3_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIUC3IUC3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUC3IUC3_Superclass_Pointer(itkIntensityWindowingImageFilterIUC3IUC3_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIUC3IUC3_Superclass_Pointer(itkIntensityWindowingImageFilterIUC3IUC3_Superclass * p);
     ~itkIntensityWindowingImageFilterIUC3IUC3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUC3IUC3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUC3IUC3_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUC3IUC3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUC3IUC3_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIUC3IUC3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUC3IUC3_Superclass * r);
     itkIntensityWindowingImageFilterIUC3IUC3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUC3IUL3_Pointer {
   public:
     itkIntensityWindowingImageFilterIUC3IUL3_Pointer();
     itkIntensityWindowingImageFilterIUC3IUL3_Pointer(itkIntensityWindowingImageFilterIUC3IUL3_Pointer const & p);
     itkIntensityWindowingImageFilterIUC3IUL3_Pointer(itkIntensityWindowingImageFilterIUC3IUL3 * p);
     ~itkIntensityWindowingImageFilterIUC3IUL3_Pointer();
     itkIntensityWindowingImageFilterIUC3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUC3IUL3 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUC3IUL3_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUC3IUL3_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUC3IUL3_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUC3IUL3_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUC3IUL3_Pointer & operator=(itkIntensityWindowingImageFilterIUC3IUL3_Pointer const & r);
     itkIntensityWindowingImageFilterIUC3IUL3_Pointer & operator=(itkIntensityWindowingImageFilterIUC3IUL3 * r);
     itkIntensityWindowingImageFilterIUC3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUC3IUL3_Superclass : public itkInPlaceImageFilterIUC3IUL3 {
   public:
     static itkIntensityWindowingImageFilterIUC3IUL3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< unsigned char, unsigned long > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< unsigned char, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< unsigned char, unsigned long > const & functor);
   private:
     itkIntensityWindowingImageFilterIUC3IUL3_Superclass(itkIntensityWindowingImageFilterIUC3IUL3_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUC3IUL3_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUC3IUL3_Superclass();
     ~itkIntensityWindowingImageFilterIUC3IUL3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIUC3IUL3_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIUC3IUL3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUC3IUL3_Superclass_Pointer(itkIntensityWindowingImageFilterIUC3IUL3_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIUC3IUL3_Superclass_Pointer(itkIntensityWindowingImageFilterIUC3IUL3_Superclass * p);
     ~itkIntensityWindowingImageFilterIUC3IUL3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUC3IUL3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUC3IUL3_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUC3IUL3_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUC3IUL3_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUC3IUL3_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUC3IUL3_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUC3IUL3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUC3IUL3_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIUC3IUL3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUC3IUL3_Superclass * r);
     itkIntensityWindowingImageFilterIUC3IUL3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUC3IUS3_Pointer {
   public:
     itkIntensityWindowingImageFilterIUC3IUS3_Pointer();
     itkIntensityWindowingImageFilterIUC3IUS3_Pointer(itkIntensityWindowingImageFilterIUC3IUS3_Pointer const & p);
     itkIntensityWindowingImageFilterIUC3IUS3_Pointer(itkIntensityWindowingImageFilterIUC3IUS3 * p);
     ~itkIntensityWindowingImageFilterIUC3IUS3_Pointer();
     itkIntensityWindowingImageFilterIUC3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUC3IUS3 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUC3IUS3_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUC3IUS3_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUC3IUS3_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUC3IUS3_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUC3IUS3_Pointer & operator=(itkIntensityWindowingImageFilterIUC3IUS3_Pointer const & r);
     itkIntensityWindowingImageFilterIUC3IUS3_Pointer & operator=(itkIntensityWindowingImageFilterIUC3IUS3 * r);
     itkIntensityWindowingImageFilterIUC3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUC3IUS3_Superclass : public itkInPlaceImageFilterIUC3IUS3 {
   public:
     static itkIntensityWindowingImageFilterIUC3IUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< unsigned char, unsigned short > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< unsigned char, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< unsigned char, unsigned short > const & functor);
   private:
     itkIntensityWindowingImageFilterIUC3IUS3_Superclass(itkIntensityWindowingImageFilterIUC3IUS3_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUC3IUS3_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUC3IUS3_Superclass();
     ~itkIntensityWindowingImageFilterIUC3IUS3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIUC3IUS3_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIUC3IUS3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUC3IUS3_Superclass_Pointer(itkIntensityWindowingImageFilterIUC3IUS3_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIUC3IUS3_Superclass_Pointer(itkIntensityWindowingImageFilterIUC3IUS3_Superclass * p);
     ~itkIntensityWindowingImageFilterIUC3IUS3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUC3IUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUC3IUS3_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUC3IUS3_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUC3IUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUC3IUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUC3IUS3_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUC3IUS3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUC3IUS3_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIUC3IUS3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUC3IUS3_Superclass * r);
     itkIntensityWindowingImageFilterIUC3IUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUL2ID2_Pointer {
   public:
     itkIntensityWindowingImageFilterIUL2ID2_Pointer();
     itkIntensityWindowingImageFilterIUL2ID2_Pointer(itkIntensityWindowingImageFilterIUL2ID2_Pointer const & p);
     itkIntensityWindowingImageFilterIUL2ID2_Pointer(itkIntensityWindowingImageFilterIUL2ID2 * p);
     ~itkIntensityWindowingImageFilterIUL2ID2_Pointer();
     itkIntensityWindowingImageFilterIUL2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUL2ID2 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUL2ID2_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUL2ID2_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUL2ID2_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUL2ID2_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUL2ID2_Pointer & operator=(itkIntensityWindowingImageFilterIUL2ID2_Pointer const & r);
     itkIntensityWindowingImageFilterIUL2ID2_Pointer & operator=(itkIntensityWindowingImageFilterIUL2ID2 * r);
     itkIntensityWindowingImageFilterIUL2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUL2ID2_Superclass : public itkInPlaceImageFilterIUL2ID2 {
   public:
     static itkIntensityWindowingImageFilterIUL2ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< unsigned long, double > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< unsigned long, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< unsigned long, double > const & functor);
   private:
     itkIntensityWindowingImageFilterIUL2ID2_Superclass(itkIntensityWindowingImageFilterIUL2ID2_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUL2ID2_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUL2ID2_Superclass();
     ~itkIntensityWindowingImageFilterIUL2ID2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIUL2ID2_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIUL2ID2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUL2ID2_Superclass_Pointer(itkIntensityWindowingImageFilterIUL2ID2_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIUL2ID2_Superclass_Pointer(itkIntensityWindowingImageFilterIUL2ID2_Superclass * p);
     ~itkIntensityWindowingImageFilterIUL2ID2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUL2ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUL2ID2_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUL2ID2_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUL2ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUL2ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUL2ID2_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUL2ID2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUL2ID2_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIUL2ID2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUL2ID2_Superclass * r);
     itkIntensityWindowingImageFilterIUL2ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUL2IF2_Pointer {
   public:
     itkIntensityWindowingImageFilterIUL2IF2_Pointer();
     itkIntensityWindowingImageFilterIUL2IF2_Pointer(itkIntensityWindowingImageFilterIUL2IF2_Pointer const & p);
     itkIntensityWindowingImageFilterIUL2IF2_Pointer(itkIntensityWindowingImageFilterIUL2IF2 * p);
     ~itkIntensityWindowingImageFilterIUL2IF2_Pointer();
     itkIntensityWindowingImageFilterIUL2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUL2IF2 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUL2IF2_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUL2IF2_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUL2IF2_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUL2IF2_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUL2IF2_Pointer & operator=(itkIntensityWindowingImageFilterIUL2IF2_Pointer const & r);
     itkIntensityWindowingImageFilterIUL2IF2_Pointer & operator=(itkIntensityWindowingImageFilterIUL2IF2 * r);
     itkIntensityWindowingImageFilterIUL2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUL2IF2_Superclass : public itkInPlaceImageFilterIUL2IF2 {
   public:
     static itkIntensityWindowingImageFilterIUL2IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< unsigned long, float > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< unsigned long, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< unsigned long, float > const & functor);
   private:
     itkIntensityWindowingImageFilterIUL2IF2_Superclass(itkIntensityWindowingImageFilterIUL2IF2_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUL2IF2_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUL2IF2_Superclass();
     ~itkIntensityWindowingImageFilterIUL2IF2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIUL2IF2_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIUL2IF2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUL2IF2_Superclass_Pointer(itkIntensityWindowingImageFilterIUL2IF2_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIUL2IF2_Superclass_Pointer(itkIntensityWindowingImageFilterIUL2IF2_Superclass * p);
     ~itkIntensityWindowingImageFilterIUL2IF2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUL2IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUL2IF2_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUL2IF2_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUL2IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUL2IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUL2IF2_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUL2IF2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUL2IF2_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIUL2IF2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUL2IF2_Superclass * r);
     itkIntensityWindowingImageFilterIUL2IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUL2IUC2_Pointer {
   public:
     itkIntensityWindowingImageFilterIUL2IUC2_Pointer();
     itkIntensityWindowingImageFilterIUL2IUC2_Pointer(itkIntensityWindowingImageFilterIUL2IUC2_Pointer const & p);
     itkIntensityWindowingImageFilterIUL2IUC2_Pointer(itkIntensityWindowingImageFilterIUL2IUC2 * p);
     ~itkIntensityWindowingImageFilterIUL2IUC2_Pointer();
     itkIntensityWindowingImageFilterIUL2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUL2IUC2 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUL2IUC2_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUL2IUC2_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUL2IUC2_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUL2IUC2_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUL2IUC2_Pointer & operator=(itkIntensityWindowingImageFilterIUL2IUC2_Pointer const & r);
     itkIntensityWindowingImageFilterIUL2IUC2_Pointer & operator=(itkIntensityWindowingImageFilterIUL2IUC2 * r);
     itkIntensityWindowingImageFilterIUL2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUL2IUC2_Superclass : public itkInPlaceImageFilterIUL2IUC2 {
   public:
     static itkIntensityWindowingImageFilterIUL2IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< unsigned long, unsigned char > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< unsigned long, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< unsigned long, unsigned char > const & functor);
   private:
     itkIntensityWindowingImageFilterIUL2IUC2_Superclass(itkIntensityWindowingImageFilterIUL2IUC2_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUL2IUC2_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUL2IUC2_Superclass();
     ~itkIntensityWindowingImageFilterIUL2IUC2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIUL2IUC2_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIUL2IUC2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUL2IUC2_Superclass_Pointer(itkIntensityWindowingImageFilterIUL2IUC2_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIUL2IUC2_Superclass_Pointer(itkIntensityWindowingImageFilterIUL2IUC2_Superclass * p);
     ~itkIntensityWindowingImageFilterIUL2IUC2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUL2IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUL2IUC2_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUL2IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUL2IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUL2IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUL2IUC2_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUL2IUC2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUL2IUC2_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIUL2IUC2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUL2IUC2_Superclass * r);
     itkIntensityWindowingImageFilterIUL2IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUL2IUL2_Pointer {
   public:
     itkIntensityWindowingImageFilterIUL2IUL2_Pointer();
     itkIntensityWindowingImageFilterIUL2IUL2_Pointer(itkIntensityWindowingImageFilterIUL2IUL2_Pointer const & p);
     itkIntensityWindowingImageFilterIUL2IUL2_Pointer(itkIntensityWindowingImageFilterIUL2IUL2 * p);
     ~itkIntensityWindowingImageFilterIUL2IUL2_Pointer();
     itkIntensityWindowingImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUL2IUL2_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUL2IUL2_Pointer & operator=(itkIntensityWindowingImageFilterIUL2IUL2_Pointer const & r);
     itkIntensityWindowingImageFilterIUL2IUL2_Pointer & operator=(itkIntensityWindowingImageFilterIUL2IUL2 * r);
     itkIntensityWindowingImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUL2IUL2_Superclass : public itkInPlaceImageFilterIUL2IUL2 {
   public:
     static itkIntensityWindowingImageFilterIUL2IUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< unsigned long, unsigned long > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< unsigned long, unsigned long > const & functor);
   private:
     itkIntensityWindowingImageFilterIUL2IUL2_Superclass(itkIntensityWindowingImageFilterIUL2IUL2_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUL2IUL2_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUL2IUL2_Superclass();
     ~itkIntensityWindowingImageFilterIUL2IUL2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIUL2IUL2_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIUL2IUL2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUL2IUL2_Superclass_Pointer(itkIntensityWindowingImageFilterIUL2IUL2_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIUL2IUL2_Superclass_Pointer(itkIntensityWindowingImageFilterIUL2IUL2_Superclass * p);
     ~itkIntensityWindowingImageFilterIUL2IUL2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUL2IUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUL2IUL2_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUL2IUL2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUL2IUL2_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIUL2IUL2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUL2IUL2_Superclass * r);
     itkIntensityWindowingImageFilterIUL2IUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUL2IUS2_Pointer {
   public:
     itkIntensityWindowingImageFilterIUL2IUS2_Pointer();
     itkIntensityWindowingImageFilterIUL2IUS2_Pointer(itkIntensityWindowingImageFilterIUL2IUS2_Pointer const & p);
     itkIntensityWindowingImageFilterIUL2IUS2_Pointer(itkIntensityWindowingImageFilterIUL2IUS2 * p);
     ~itkIntensityWindowingImageFilterIUL2IUS2_Pointer();
     itkIntensityWindowingImageFilterIUL2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUL2IUS2 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUL2IUS2_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUL2IUS2_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUL2IUS2_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUL2IUS2_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUL2IUS2_Pointer & operator=(itkIntensityWindowingImageFilterIUL2IUS2_Pointer const & r);
     itkIntensityWindowingImageFilterIUL2IUS2_Pointer & operator=(itkIntensityWindowingImageFilterIUL2IUS2 * r);
     itkIntensityWindowingImageFilterIUL2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUL2IUS2_Superclass : public itkInPlaceImageFilterIUL2IUS2 {
   public:
     static itkIntensityWindowingImageFilterIUL2IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< unsigned long, unsigned short > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< unsigned long, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< unsigned long, unsigned short > const & functor);
   private:
     itkIntensityWindowingImageFilterIUL2IUS2_Superclass(itkIntensityWindowingImageFilterIUL2IUS2_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUL2IUS2_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUL2IUS2_Superclass();
     ~itkIntensityWindowingImageFilterIUL2IUS2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIUL2IUS2_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIUL2IUS2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUL2IUS2_Superclass_Pointer(itkIntensityWindowingImageFilterIUL2IUS2_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIUL2IUS2_Superclass_Pointer(itkIntensityWindowingImageFilterIUL2IUS2_Superclass * p);
     ~itkIntensityWindowingImageFilterIUL2IUS2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUL2IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUL2IUS2_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUL2IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUL2IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUL2IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUL2IUS2_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUL2IUS2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUL2IUS2_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIUL2IUS2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUL2IUS2_Superclass * r);
     itkIntensityWindowingImageFilterIUL2IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUL3ID3_Pointer {
   public:
     itkIntensityWindowingImageFilterIUL3ID3_Pointer();
     itkIntensityWindowingImageFilterIUL3ID3_Pointer(itkIntensityWindowingImageFilterIUL3ID3_Pointer const & p);
     itkIntensityWindowingImageFilterIUL3ID3_Pointer(itkIntensityWindowingImageFilterIUL3ID3 * p);
     ~itkIntensityWindowingImageFilterIUL3ID3_Pointer();
     itkIntensityWindowingImageFilterIUL3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUL3ID3 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUL3ID3_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUL3ID3_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUL3ID3_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUL3ID3_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUL3ID3_Pointer & operator=(itkIntensityWindowingImageFilterIUL3ID3_Pointer const & r);
     itkIntensityWindowingImageFilterIUL3ID3_Pointer & operator=(itkIntensityWindowingImageFilterIUL3ID3 * r);
     itkIntensityWindowingImageFilterIUL3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUL3ID3_Superclass : public itkInPlaceImageFilterIUL3ID3 {
   public:
     static itkIntensityWindowingImageFilterIUL3ID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< unsigned long, double > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< unsigned long, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< unsigned long, double > const & functor);
   private:
     itkIntensityWindowingImageFilterIUL3ID3_Superclass(itkIntensityWindowingImageFilterIUL3ID3_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUL3ID3_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUL3ID3_Superclass();
     ~itkIntensityWindowingImageFilterIUL3ID3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIUL3ID3_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIUL3ID3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUL3ID3_Superclass_Pointer(itkIntensityWindowingImageFilterIUL3ID3_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIUL3ID3_Superclass_Pointer(itkIntensityWindowingImageFilterIUL3ID3_Superclass * p);
     ~itkIntensityWindowingImageFilterIUL3ID3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUL3ID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUL3ID3_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUL3ID3_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUL3ID3_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUL3ID3_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUL3ID3_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUL3ID3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUL3ID3_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIUL3ID3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUL3ID3_Superclass * r);
     itkIntensityWindowingImageFilterIUL3ID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUL3IF3_Pointer {
   public:
     itkIntensityWindowingImageFilterIUL3IF3_Pointer();
     itkIntensityWindowingImageFilterIUL3IF3_Pointer(itkIntensityWindowingImageFilterIUL3IF3_Pointer const & p);
     itkIntensityWindowingImageFilterIUL3IF3_Pointer(itkIntensityWindowingImageFilterIUL3IF3 * p);
     ~itkIntensityWindowingImageFilterIUL3IF3_Pointer();
     itkIntensityWindowingImageFilterIUL3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUL3IF3 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUL3IF3_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUL3IF3_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUL3IF3_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUL3IF3_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUL3IF3_Pointer & operator=(itkIntensityWindowingImageFilterIUL3IF3_Pointer const & r);
     itkIntensityWindowingImageFilterIUL3IF3_Pointer & operator=(itkIntensityWindowingImageFilterIUL3IF3 * r);
     itkIntensityWindowingImageFilterIUL3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUL3IF3_Superclass : public itkInPlaceImageFilterIUL3IF3 {
   public:
     static itkIntensityWindowingImageFilterIUL3IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< unsigned long, float > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< unsigned long, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< unsigned long, float > const & functor);
   private:
     itkIntensityWindowingImageFilterIUL3IF3_Superclass(itkIntensityWindowingImageFilterIUL3IF3_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUL3IF3_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUL3IF3_Superclass();
     ~itkIntensityWindowingImageFilterIUL3IF3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIUL3IF3_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIUL3IF3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUL3IF3_Superclass_Pointer(itkIntensityWindowingImageFilterIUL3IF3_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIUL3IF3_Superclass_Pointer(itkIntensityWindowingImageFilterIUL3IF3_Superclass * p);
     ~itkIntensityWindowingImageFilterIUL3IF3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUL3IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUL3IF3_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUL3IF3_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUL3IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUL3IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUL3IF3_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUL3IF3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUL3IF3_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIUL3IF3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUL3IF3_Superclass * r);
     itkIntensityWindowingImageFilterIUL3IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUL3IUC3_Pointer {
   public:
     itkIntensityWindowingImageFilterIUL3IUC3_Pointer();
     itkIntensityWindowingImageFilterIUL3IUC3_Pointer(itkIntensityWindowingImageFilterIUL3IUC3_Pointer const & p);
     itkIntensityWindowingImageFilterIUL3IUC3_Pointer(itkIntensityWindowingImageFilterIUL3IUC3 * p);
     ~itkIntensityWindowingImageFilterIUL3IUC3_Pointer();
     itkIntensityWindowingImageFilterIUL3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUL3IUC3 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUL3IUC3_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUL3IUC3_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUL3IUC3_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUL3IUC3_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUL3IUC3_Pointer & operator=(itkIntensityWindowingImageFilterIUL3IUC3_Pointer const & r);
     itkIntensityWindowingImageFilterIUL3IUC3_Pointer & operator=(itkIntensityWindowingImageFilterIUL3IUC3 * r);
     itkIntensityWindowingImageFilterIUL3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUL3IUC3_Superclass : public itkInPlaceImageFilterIUL3IUC3 {
   public:
     static itkIntensityWindowingImageFilterIUL3IUC3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< unsigned long, unsigned char > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< unsigned long, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< unsigned long, unsigned char > const & functor);
   private:
     itkIntensityWindowingImageFilterIUL3IUC3_Superclass(itkIntensityWindowingImageFilterIUL3IUC3_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUL3IUC3_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUL3IUC3_Superclass();
     ~itkIntensityWindowingImageFilterIUL3IUC3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIUL3IUC3_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIUL3IUC3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUL3IUC3_Superclass_Pointer(itkIntensityWindowingImageFilterIUL3IUC3_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIUL3IUC3_Superclass_Pointer(itkIntensityWindowingImageFilterIUL3IUC3_Superclass * p);
     ~itkIntensityWindowingImageFilterIUL3IUC3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUL3IUC3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUL3IUC3_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUL3IUC3_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUL3IUC3_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUL3IUC3_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUL3IUC3_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUL3IUC3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUL3IUC3_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIUL3IUC3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUL3IUC3_Superclass * r);
     itkIntensityWindowingImageFilterIUL3IUC3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUL3IUL3_Pointer {
   public:
     itkIntensityWindowingImageFilterIUL3IUL3_Pointer();
     itkIntensityWindowingImageFilterIUL3IUL3_Pointer(itkIntensityWindowingImageFilterIUL3IUL3_Pointer const & p);
     itkIntensityWindowingImageFilterIUL3IUL3_Pointer(itkIntensityWindowingImageFilterIUL3IUL3 * p);
     ~itkIntensityWindowingImageFilterIUL3IUL3_Pointer();
     itkIntensityWindowingImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUL3IUL3_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUL3IUL3_Pointer & operator=(itkIntensityWindowingImageFilterIUL3IUL3_Pointer const & r);
     itkIntensityWindowingImageFilterIUL3IUL3_Pointer & operator=(itkIntensityWindowingImageFilterIUL3IUL3 * r);
     itkIntensityWindowingImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUL3IUL3_Superclass : public itkInPlaceImageFilterIUL3IUL3 {
   public:
     static itkIntensityWindowingImageFilterIUL3IUL3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< unsigned long, unsigned long > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< unsigned long, unsigned long > const & functor);
   private:
     itkIntensityWindowingImageFilterIUL3IUL3_Superclass(itkIntensityWindowingImageFilterIUL3IUL3_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUL3IUL3_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUL3IUL3_Superclass();
     ~itkIntensityWindowingImageFilterIUL3IUL3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIUL3IUL3_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIUL3IUL3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUL3IUL3_Superclass_Pointer(itkIntensityWindowingImageFilterIUL3IUL3_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIUL3IUL3_Superclass_Pointer(itkIntensityWindowingImageFilterIUL3IUL3_Superclass * p);
     ~itkIntensityWindowingImageFilterIUL3IUL3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUL3IUL3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUL3IUL3_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUL3IUL3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUL3IUL3_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIUL3IUL3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUL3IUL3_Superclass * r);
     itkIntensityWindowingImageFilterIUL3IUL3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUL3IUS3_Pointer {
   public:
     itkIntensityWindowingImageFilterIUL3IUS3_Pointer();
     itkIntensityWindowingImageFilterIUL3IUS3_Pointer(itkIntensityWindowingImageFilterIUL3IUS3_Pointer const & p);
     itkIntensityWindowingImageFilterIUL3IUS3_Pointer(itkIntensityWindowingImageFilterIUL3IUS3 * p);
     ~itkIntensityWindowingImageFilterIUL3IUS3_Pointer();
     itkIntensityWindowingImageFilterIUL3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUL3IUS3 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUL3IUS3_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUL3IUS3_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUL3IUS3_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUL3IUS3_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUL3IUS3_Pointer & operator=(itkIntensityWindowingImageFilterIUL3IUS3_Pointer const & r);
     itkIntensityWindowingImageFilterIUL3IUS3_Pointer & operator=(itkIntensityWindowingImageFilterIUL3IUS3 * r);
     itkIntensityWindowingImageFilterIUL3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUL3IUS3_Superclass : public itkInPlaceImageFilterIUL3IUS3 {
   public:
     static itkIntensityWindowingImageFilterIUL3IUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< unsigned long, unsigned short > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< unsigned long, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< unsigned long, unsigned short > const & functor);
   private:
     itkIntensityWindowingImageFilterIUL3IUS3_Superclass(itkIntensityWindowingImageFilterIUL3IUS3_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUL3IUS3_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUL3IUS3_Superclass();
     ~itkIntensityWindowingImageFilterIUL3IUS3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIUL3IUS3_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIUL3IUS3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUL3IUS3_Superclass_Pointer(itkIntensityWindowingImageFilterIUL3IUS3_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIUL3IUS3_Superclass_Pointer(itkIntensityWindowingImageFilterIUL3IUS3_Superclass * p);
     ~itkIntensityWindowingImageFilterIUL3IUS3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUL3IUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUL3IUS3_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUL3IUS3_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUL3IUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUL3IUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUL3IUS3_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUL3IUS3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUL3IUS3_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIUL3IUS3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUL3IUS3_Superclass * r);
     itkIntensityWindowingImageFilterIUL3IUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUS2ID2_Pointer {
   public:
     itkIntensityWindowingImageFilterIUS2ID2_Pointer();
     itkIntensityWindowingImageFilterIUS2ID2_Pointer(itkIntensityWindowingImageFilterIUS2ID2_Pointer const & p);
     itkIntensityWindowingImageFilterIUS2ID2_Pointer(itkIntensityWindowingImageFilterIUS2ID2 * p);
     ~itkIntensityWindowingImageFilterIUS2ID2_Pointer();
     itkIntensityWindowingImageFilterIUS2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUS2ID2 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUS2ID2_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUS2ID2_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUS2ID2_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUS2ID2_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUS2ID2_Pointer & operator=(itkIntensityWindowingImageFilterIUS2ID2_Pointer const & r);
     itkIntensityWindowingImageFilterIUS2ID2_Pointer & operator=(itkIntensityWindowingImageFilterIUS2ID2 * r);
     itkIntensityWindowingImageFilterIUS2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUS2ID2_Superclass : public itkInPlaceImageFilterIUS2ID2 {
   public:
     static itkIntensityWindowingImageFilterIUS2ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< unsigned short, double > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< unsigned short, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< unsigned short, double > const & functor);
   private:
     itkIntensityWindowingImageFilterIUS2ID2_Superclass(itkIntensityWindowingImageFilterIUS2ID2_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUS2ID2_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUS2ID2_Superclass();
     ~itkIntensityWindowingImageFilterIUS2ID2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIUS2ID2_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIUS2ID2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUS2ID2_Superclass_Pointer(itkIntensityWindowingImageFilterIUS2ID2_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIUS2ID2_Superclass_Pointer(itkIntensityWindowingImageFilterIUS2ID2_Superclass * p);
     ~itkIntensityWindowingImageFilterIUS2ID2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUS2ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUS2ID2_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUS2ID2_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUS2ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUS2ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUS2ID2_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUS2ID2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUS2ID2_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIUS2ID2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUS2ID2_Superclass * r);
     itkIntensityWindowingImageFilterIUS2ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUS2IF2_Pointer {
   public:
     itkIntensityWindowingImageFilterIUS2IF2_Pointer();
     itkIntensityWindowingImageFilterIUS2IF2_Pointer(itkIntensityWindowingImageFilterIUS2IF2_Pointer const & p);
     itkIntensityWindowingImageFilterIUS2IF2_Pointer(itkIntensityWindowingImageFilterIUS2IF2 * p);
     ~itkIntensityWindowingImageFilterIUS2IF2_Pointer();
     itkIntensityWindowingImageFilterIUS2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUS2IF2 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUS2IF2_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUS2IF2_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUS2IF2_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUS2IF2_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUS2IF2_Pointer & operator=(itkIntensityWindowingImageFilterIUS2IF2_Pointer const & r);
     itkIntensityWindowingImageFilterIUS2IF2_Pointer & operator=(itkIntensityWindowingImageFilterIUS2IF2 * r);
     itkIntensityWindowingImageFilterIUS2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUS2IF2_Superclass : public itkInPlaceImageFilterIUS2IF2 {
   public:
     static itkIntensityWindowingImageFilterIUS2IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< unsigned short, float > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< unsigned short, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< unsigned short, float > const & functor);
   private:
     itkIntensityWindowingImageFilterIUS2IF2_Superclass(itkIntensityWindowingImageFilterIUS2IF2_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUS2IF2_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUS2IF2_Superclass();
     ~itkIntensityWindowingImageFilterIUS2IF2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIUS2IF2_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIUS2IF2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUS2IF2_Superclass_Pointer(itkIntensityWindowingImageFilterIUS2IF2_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIUS2IF2_Superclass_Pointer(itkIntensityWindowingImageFilterIUS2IF2_Superclass * p);
     ~itkIntensityWindowingImageFilterIUS2IF2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUS2IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUS2IF2_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUS2IF2_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUS2IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUS2IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUS2IF2_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUS2IF2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUS2IF2_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIUS2IF2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUS2IF2_Superclass * r);
     itkIntensityWindowingImageFilterIUS2IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUS2IUC2_Pointer {
   public:
     itkIntensityWindowingImageFilterIUS2IUC2_Pointer();
     itkIntensityWindowingImageFilterIUS2IUC2_Pointer(itkIntensityWindowingImageFilterIUS2IUC2_Pointer const & p);
     itkIntensityWindowingImageFilterIUS2IUC2_Pointer(itkIntensityWindowingImageFilterIUS2IUC2 * p);
     ~itkIntensityWindowingImageFilterIUS2IUC2_Pointer();
     itkIntensityWindowingImageFilterIUS2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUS2IUC2 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUS2IUC2_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUS2IUC2_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUS2IUC2_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUS2IUC2_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUS2IUC2_Pointer & operator=(itkIntensityWindowingImageFilterIUS2IUC2_Pointer const & r);
     itkIntensityWindowingImageFilterIUS2IUC2_Pointer & operator=(itkIntensityWindowingImageFilterIUS2IUC2 * r);
     itkIntensityWindowingImageFilterIUS2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUS2IUC2_Superclass : public itkInPlaceImageFilterIUS2IUC2 {
   public:
     static itkIntensityWindowingImageFilterIUS2IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< unsigned short, unsigned char > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< unsigned short, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< unsigned short, unsigned char > const & functor);
   private:
     itkIntensityWindowingImageFilterIUS2IUC2_Superclass(itkIntensityWindowingImageFilterIUS2IUC2_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUS2IUC2_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUS2IUC2_Superclass();
     ~itkIntensityWindowingImageFilterIUS2IUC2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIUS2IUC2_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIUS2IUC2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUS2IUC2_Superclass_Pointer(itkIntensityWindowingImageFilterIUS2IUC2_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIUS2IUC2_Superclass_Pointer(itkIntensityWindowingImageFilterIUS2IUC2_Superclass * p);
     ~itkIntensityWindowingImageFilterIUS2IUC2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUS2IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUS2IUC2_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUS2IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUS2IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUS2IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUS2IUC2_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUS2IUC2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUS2IUC2_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIUS2IUC2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUS2IUC2_Superclass * r);
     itkIntensityWindowingImageFilterIUS2IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUS2IUL2_Pointer {
   public:
     itkIntensityWindowingImageFilterIUS2IUL2_Pointer();
     itkIntensityWindowingImageFilterIUS2IUL2_Pointer(itkIntensityWindowingImageFilterIUS2IUL2_Pointer const & p);
     itkIntensityWindowingImageFilterIUS2IUL2_Pointer(itkIntensityWindowingImageFilterIUS2IUL2 * p);
     ~itkIntensityWindowingImageFilterIUS2IUL2_Pointer();
     itkIntensityWindowingImageFilterIUS2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUS2IUL2 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUS2IUL2_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUS2IUL2_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUS2IUL2_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUS2IUL2_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUS2IUL2_Pointer & operator=(itkIntensityWindowingImageFilterIUS2IUL2_Pointer const & r);
     itkIntensityWindowingImageFilterIUS2IUL2_Pointer & operator=(itkIntensityWindowingImageFilterIUS2IUL2 * r);
     itkIntensityWindowingImageFilterIUS2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUS2IUL2_Superclass : public itkInPlaceImageFilterIUS2IUL2 {
   public:
     static itkIntensityWindowingImageFilterIUS2IUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< unsigned short, unsigned long > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< unsigned short, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< unsigned short, unsigned long > const & functor);
   private:
     itkIntensityWindowingImageFilterIUS2IUL2_Superclass(itkIntensityWindowingImageFilterIUS2IUL2_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUS2IUL2_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUS2IUL2_Superclass();
     ~itkIntensityWindowingImageFilterIUS2IUL2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIUS2IUL2_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIUS2IUL2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUS2IUL2_Superclass_Pointer(itkIntensityWindowingImageFilterIUS2IUL2_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIUS2IUL2_Superclass_Pointer(itkIntensityWindowingImageFilterIUS2IUL2_Superclass * p);
     ~itkIntensityWindowingImageFilterIUS2IUL2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUS2IUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUS2IUL2_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUS2IUL2_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUS2IUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUS2IUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUS2IUL2_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUS2IUL2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUS2IUL2_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIUS2IUL2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUS2IUL2_Superclass * r);
     itkIntensityWindowingImageFilterIUS2IUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUS2IUS2_Pointer {
   public:
     itkIntensityWindowingImageFilterIUS2IUS2_Pointer();
     itkIntensityWindowingImageFilterIUS2IUS2_Pointer(itkIntensityWindowingImageFilterIUS2IUS2_Pointer const & p);
     itkIntensityWindowingImageFilterIUS2IUS2_Pointer(itkIntensityWindowingImageFilterIUS2IUS2 * p);
     ~itkIntensityWindowingImageFilterIUS2IUS2_Pointer();
     itkIntensityWindowingImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUS2IUS2_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUS2IUS2_Pointer & operator=(itkIntensityWindowingImageFilterIUS2IUS2_Pointer const & r);
     itkIntensityWindowingImageFilterIUS2IUS2_Pointer & operator=(itkIntensityWindowingImageFilterIUS2IUS2 * r);
     itkIntensityWindowingImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUS2IUS2_Superclass : public itkInPlaceImageFilterIUS2IUS2 {
   public:
     static itkIntensityWindowingImageFilterIUS2IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< unsigned short, unsigned short > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< unsigned short, unsigned short > const & functor);
   private:
     itkIntensityWindowingImageFilterIUS2IUS2_Superclass(itkIntensityWindowingImageFilterIUS2IUS2_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUS2IUS2_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUS2IUS2_Superclass();
     ~itkIntensityWindowingImageFilterIUS2IUS2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIUS2IUS2_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIUS2IUS2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUS2IUS2_Superclass_Pointer(itkIntensityWindowingImageFilterIUS2IUS2_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIUS2IUS2_Superclass_Pointer(itkIntensityWindowingImageFilterIUS2IUS2_Superclass * p);
     ~itkIntensityWindowingImageFilterIUS2IUS2_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUS2IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUS2IUS2_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUS2IUS2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUS2IUS2_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIUS2IUS2_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUS2IUS2_Superclass * r);
     itkIntensityWindowingImageFilterIUS2IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUS3ID3_Pointer {
   public:
     itkIntensityWindowingImageFilterIUS3ID3_Pointer();
     itkIntensityWindowingImageFilterIUS3ID3_Pointer(itkIntensityWindowingImageFilterIUS3ID3_Pointer const & p);
     itkIntensityWindowingImageFilterIUS3ID3_Pointer(itkIntensityWindowingImageFilterIUS3ID3 * p);
     ~itkIntensityWindowingImageFilterIUS3ID3_Pointer();
     itkIntensityWindowingImageFilterIUS3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUS3ID3 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUS3ID3_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUS3ID3_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUS3ID3_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUS3ID3_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUS3ID3_Pointer & operator=(itkIntensityWindowingImageFilterIUS3ID3_Pointer const & r);
     itkIntensityWindowingImageFilterIUS3ID3_Pointer & operator=(itkIntensityWindowingImageFilterIUS3ID3 * r);
     itkIntensityWindowingImageFilterIUS3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUS3ID3_Superclass : public itkInPlaceImageFilterIUS3ID3 {
   public:
     static itkIntensityWindowingImageFilterIUS3ID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< unsigned short, double > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< unsigned short, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< unsigned short, double > const & functor);
   private:
     itkIntensityWindowingImageFilterIUS3ID3_Superclass(itkIntensityWindowingImageFilterIUS3ID3_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUS3ID3_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUS3ID3_Superclass();
     ~itkIntensityWindowingImageFilterIUS3ID3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIUS3ID3_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIUS3ID3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUS3ID3_Superclass_Pointer(itkIntensityWindowingImageFilterIUS3ID3_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIUS3ID3_Superclass_Pointer(itkIntensityWindowingImageFilterIUS3ID3_Superclass * p);
     ~itkIntensityWindowingImageFilterIUS3ID3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUS3ID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUS3ID3_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUS3ID3_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUS3ID3_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUS3ID3_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUS3ID3_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUS3ID3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUS3ID3_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIUS3ID3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUS3ID3_Superclass * r);
     itkIntensityWindowingImageFilterIUS3ID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUS3IF3_Pointer {
   public:
     itkIntensityWindowingImageFilterIUS3IF3_Pointer();
     itkIntensityWindowingImageFilterIUS3IF3_Pointer(itkIntensityWindowingImageFilterIUS3IF3_Pointer const & p);
     itkIntensityWindowingImageFilterIUS3IF3_Pointer(itkIntensityWindowingImageFilterIUS3IF3 * p);
     ~itkIntensityWindowingImageFilterIUS3IF3_Pointer();
     itkIntensityWindowingImageFilterIUS3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUS3IF3 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUS3IF3_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUS3IF3_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUS3IF3_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUS3IF3_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUS3IF3_Pointer & operator=(itkIntensityWindowingImageFilterIUS3IF3_Pointer const & r);
     itkIntensityWindowingImageFilterIUS3IF3_Pointer & operator=(itkIntensityWindowingImageFilterIUS3IF3 * r);
     itkIntensityWindowingImageFilterIUS3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUS3IF3_Superclass : public itkInPlaceImageFilterIUS3IF3 {
   public:
     static itkIntensityWindowingImageFilterIUS3IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< unsigned short, float > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< unsigned short, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< unsigned short, float > const & functor);
   private:
     itkIntensityWindowingImageFilterIUS3IF3_Superclass(itkIntensityWindowingImageFilterIUS3IF3_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUS3IF3_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUS3IF3_Superclass();
     ~itkIntensityWindowingImageFilterIUS3IF3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIUS3IF3_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIUS3IF3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUS3IF3_Superclass_Pointer(itkIntensityWindowingImageFilterIUS3IF3_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIUS3IF3_Superclass_Pointer(itkIntensityWindowingImageFilterIUS3IF3_Superclass * p);
     ~itkIntensityWindowingImageFilterIUS3IF3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUS3IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUS3IF3_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUS3IF3_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUS3IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUS3IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUS3IF3_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUS3IF3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUS3IF3_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIUS3IF3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUS3IF3_Superclass * r);
     itkIntensityWindowingImageFilterIUS3IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUS3IUC3_Pointer {
   public:
     itkIntensityWindowingImageFilterIUS3IUC3_Pointer();
     itkIntensityWindowingImageFilterIUS3IUC3_Pointer(itkIntensityWindowingImageFilterIUS3IUC3_Pointer const & p);
     itkIntensityWindowingImageFilterIUS3IUC3_Pointer(itkIntensityWindowingImageFilterIUS3IUC3 * p);
     ~itkIntensityWindowingImageFilterIUS3IUC3_Pointer();
     itkIntensityWindowingImageFilterIUS3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUS3IUC3 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUS3IUC3_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUS3IUC3_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUS3IUC3_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUS3IUC3_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUS3IUC3_Pointer & operator=(itkIntensityWindowingImageFilterIUS3IUC3_Pointer const & r);
     itkIntensityWindowingImageFilterIUS3IUC3_Pointer & operator=(itkIntensityWindowingImageFilterIUS3IUC3 * r);
     itkIntensityWindowingImageFilterIUS3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUS3IUC3_Superclass : public itkInPlaceImageFilterIUS3IUC3 {
   public:
     static itkIntensityWindowingImageFilterIUS3IUC3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< unsigned short, unsigned char > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< unsigned short, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< unsigned short, unsigned char > const & functor);
   private:
     itkIntensityWindowingImageFilterIUS3IUC3_Superclass(itkIntensityWindowingImageFilterIUS3IUC3_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUS3IUC3_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUS3IUC3_Superclass();
     ~itkIntensityWindowingImageFilterIUS3IUC3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIUS3IUC3_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIUS3IUC3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUS3IUC3_Superclass_Pointer(itkIntensityWindowingImageFilterIUS3IUC3_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIUS3IUC3_Superclass_Pointer(itkIntensityWindowingImageFilterIUS3IUC3_Superclass * p);
     ~itkIntensityWindowingImageFilterIUS3IUC3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUS3IUC3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUS3IUC3_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUS3IUC3_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUS3IUC3_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUS3IUC3_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUS3IUC3_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUS3IUC3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUS3IUC3_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIUS3IUC3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUS3IUC3_Superclass * r);
     itkIntensityWindowingImageFilterIUS3IUC3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUS3IUL3_Pointer {
   public:
     itkIntensityWindowingImageFilterIUS3IUL3_Pointer();
     itkIntensityWindowingImageFilterIUS3IUL3_Pointer(itkIntensityWindowingImageFilterIUS3IUL3_Pointer const & p);
     itkIntensityWindowingImageFilterIUS3IUL3_Pointer(itkIntensityWindowingImageFilterIUS3IUL3 * p);
     ~itkIntensityWindowingImageFilterIUS3IUL3_Pointer();
     itkIntensityWindowingImageFilterIUS3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUS3IUL3 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUS3IUL3_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUS3IUL3_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUS3IUL3_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUS3IUL3_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUS3IUL3_Pointer & operator=(itkIntensityWindowingImageFilterIUS3IUL3_Pointer const & r);
     itkIntensityWindowingImageFilterIUS3IUL3_Pointer & operator=(itkIntensityWindowingImageFilterIUS3IUL3 * r);
     itkIntensityWindowingImageFilterIUS3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUS3IUL3_Superclass : public itkInPlaceImageFilterIUS3IUL3 {
   public:
     static itkIntensityWindowingImageFilterIUS3IUL3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< unsigned short, unsigned long > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< unsigned short, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< unsigned short, unsigned long > const & functor);
   private:
     itkIntensityWindowingImageFilterIUS3IUL3_Superclass(itkIntensityWindowingImageFilterIUS3IUL3_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUS3IUL3_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUS3IUL3_Superclass();
     ~itkIntensityWindowingImageFilterIUS3IUL3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIUS3IUL3_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIUS3IUL3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUS3IUL3_Superclass_Pointer(itkIntensityWindowingImageFilterIUS3IUL3_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIUS3IUL3_Superclass_Pointer(itkIntensityWindowingImageFilterIUS3IUL3_Superclass * p);
     ~itkIntensityWindowingImageFilterIUS3IUL3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUS3IUL3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUS3IUL3_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUS3IUL3_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUS3IUL3_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUS3IUL3_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUS3IUL3_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUS3IUL3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUS3IUL3_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIUS3IUL3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUS3IUL3_Superclass * r);
     itkIntensityWindowingImageFilterIUS3IUL3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUS3IUS3_Pointer {
   public:
     itkIntensityWindowingImageFilterIUS3IUS3_Pointer();
     itkIntensityWindowingImageFilterIUS3IUS3_Pointer(itkIntensityWindowingImageFilterIUS3IUS3_Pointer const & p);
     itkIntensityWindowingImageFilterIUS3IUS3_Pointer(itkIntensityWindowingImageFilterIUS3IUS3 * p);
     ~itkIntensityWindowingImageFilterIUS3IUS3_Pointer();
     itkIntensityWindowingImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUS3IUS3_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUS3IUS3_Pointer & operator=(itkIntensityWindowingImageFilterIUS3IUS3_Pointer const & r);
     itkIntensityWindowingImageFilterIUS3IUS3_Pointer & operator=(itkIntensityWindowingImageFilterIUS3IUS3 * r);
     itkIntensityWindowingImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterIUS3IUS3_Superclass : public itkInPlaceImageFilterIUS3IUS3 {
   public:
     static itkIntensityWindowingImageFilterIUS3IUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::IntensityWindowingTransform< unsigned short, unsigned short > & GetFunctor();
     itk::Functor::IntensityWindowingTransform< unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::IntensityWindowingTransform< unsigned short, unsigned short > const & functor);
   private:
     itkIntensityWindowingImageFilterIUS3IUS3_Superclass(itkIntensityWindowingImageFilterIUS3IUS3_Superclass const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUS3IUS3_Superclass const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUS3IUS3_Superclass();
     ~itkIntensityWindowingImageFilterIUS3IUS3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkIntensityWindowingImageFilterIUS3IUS3_Superclass_Pointer {
   public:
     itkIntensityWindowingImageFilterIUS3IUS3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUS3IUS3_Superclass_Pointer(itkIntensityWindowingImageFilterIUS3IUS3_Superclass_Pointer const & p);
     itkIntensityWindowingImageFilterIUS3IUS3_Superclass_Pointer(itkIntensityWindowingImageFilterIUS3IUS3_Superclass * p);
     ~itkIntensityWindowingImageFilterIUS3IUS3_Superclass_Pointer();
     itkIntensityWindowingImageFilterIUS3IUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIntensityWindowingImageFilterIUS3IUS3_Superclass * GetPointer() const;
     bool operator<(itkIntensityWindowingImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>(itkIntensityWindowingImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkIntensityWindowingImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkIntensityWindowingImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     itkIntensityWindowingImageFilterIUS3IUS3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUS3IUS3_Superclass_Pointer const & r);
     itkIntensityWindowingImageFilterIUS3IUS3_Superclass_Pointer & operator=(itkIntensityWindowingImageFilterIUS3IUS3_Superclass * r);
     itkIntensityWindowingImageFilterIUS3IUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIntensityWindowingImageFilterID2ID2 : public itkIntensityWindowingImageFilterID2ID2_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(double const _arg);
     virtual void SetOutputMaximum(double const _arg);
     virtual double const & GetOutputMinimum() const;
     virtual double const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(double const _arg);
     virtual void SetWindowMaximum(double const _arg);
     virtual double const & GetWindowMinimum() const;
     virtual double const & GetWindowMaximum() const;
     void SetWindowLevel(double const & window, double const & level);
     double GetWindow() const;
     double GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterID2ID2(itkIntensityWindowingImageFilterID2ID2 const & arg0);
     void operator=(itkIntensityWindowingImageFilterID2ID2 const & arg0);
   protected:
     itkIntensityWindowingImageFilterID2ID2();
     ~itkIntensityWindowingImageFilterID2ID2();
 };


 class itkIntensityWindowingImageFilterID2IF2 : public itkIntensityWindowingImageFilterID2IF2_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterID2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(float const _arg);
     virtual void SetOutputMaximum(float const _arg);
     virtual float const & GetOutputMinimum() const;
     virtual float const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(double const _arg);
     virtual void SetWindowMaximum(double const _arg);
     virtual double const & GetWindowMinimum() const;
     virtual double const & GetWindowMaximum() const;
     void SetWindowLevel(double const & window, double const & level);
     double GetWindow() const;
     double GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterID2IF2(itkIntensityWindowingImageFilterID2IF2 const & arg0);
     void operator=(itkIntensityWindowingImageFilterID2IF2 const & arg0);
   protected:
     itkIntensityWindowingImageFilterID2IF2();
     ~itkIntensityWindowingImageFilterID2IF2();
 };


 class itkIntensityWindowingImageFilterID2IUC2 : public itkIntensityWindowingImageFilterID2IUC2_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterID2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(unsigned char const _arg);
     virtual void SetOutputMaximum(unsigned char const _arg);
     virtual unsigned char const & GetOutputMinimum() const;
     virtual unsigned char const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(double const _arg);
     virtual void SetWindowMaximum(double const _arg);
     virtual double const & GetWindowMinimum() const;
     virtual double const & GetWindowMaximum() const;
     void SetWindowLevel(double const & window, double const & level);
     double GetWindow() const;
     double GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterID2IUC2(itkIntensityWindowingImageFilterID2IUC2 const & arg0);
     void operator=(itkIntensityWindowingImageFilterID2IUC2 const & arg0);
   protected:
     itkIntensityWindowingImageFilterID2IUC2();
     ~itkIntensityWindowingImageFilterID2IUC2();
 };


 class itkIntensityWindowingImageFilterID2IUL2 : public itkIntensityWindowingImageFilterID2IUL2_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterID2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(unsigned long const _arg);
     virtual void SetOutputMaximum(unsigned long const _arg);
     virtual unsigned long const & GetOutputMinimum() const;
     virtual unsigned long const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(double const _arg);
     virtual void SetWindowMaximum(double const _arg);
     virtual double const & GetWindowMinimum() const;
     virtual double const & GetWindowMaximum() const;
     void SetWindowLevel(double const & window, double const & level);
     double GetWindow() const;
     double GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterID2IUL2(itkIntensityWindowingImageFilterID2IUL2 const & arg0);
     void operator=(itkIntensityWindowingImageFilterID2IUL2 const & arg0);
   protected:
     itkIntensityWindowingImageFilterID2IUL2();
     ~itkIntensityWindowingImageFilterID2IUL2();
 };


 class itkIntensityWindowingImageFilterID2IUS2 : public itkIntensityWindowingImageFilterID2IUS2_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterID2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(unsigned short const _arg);
     virtual void SetOutputMaximum(unsigned short const _arg);
     virtual unsigned short const & GetOutputMinimum() const;
     virtual unsigned short const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(double const _arg);
     virtual void SetWindowMaximum(double const _arg);
     virtual double const & GetWindowMinimum() const;
     virtual double const & GetWindowMaximum() const;
     void SetWindowLevel(double const & window, double const & level);
     double GetWindow() const;
     double GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterID2IUS2(itkIntensityWindowingImageFilterID2IUS2 const & arg0);
     void operator=(itkIntensityWindowingImageFilterID2IUS2 const & arg0);
   protected:
     itkIntensityWindowingImageFilterID2IUS2();
     ~itkIntensityWindowingImageFilterID2IUS2();
 };


 class itkIntensityWindowingImageFilterID3ID3 : public itkIntensityWindowingImageFilterID3ID3_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(double const _arg);
     virtual void SetOutputMaximum(double const _arg);
     virtual double const & GetOutputMinimum() const;
     virtual double const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(double const _arg);
     virtual void SetWindowMaximum(double const _arg);
     virtual double const & GetWindowMinimum() const;
     virtual double const & GetWindowMaximum() const;
     void SetWindowLevel(double const & window, double const & level);
     double GetWindow() const;
     double GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterID3ID3(itkIntensityWindowingImageFilterID3ID3 const & arg0);
     void operator=(itkIntensityWindowingImageFilterID3ID3 const & arg0);
   protected:
     itkIntensityWindowingImageFilterID3ID3();
     ~itkIntensityWindowingImageFilterID3ID3();
 };


 class itkIntensityWindowingImageFilterID3IF3 : public itkIntensityWindowingImageFilterID3IF3_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterID3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(float const _arg);
     virtual void SetOutputMaximum(float const _arg);
     virtual float const & GetOutputMinimum() const;
     virtual float const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(double const _arg);
     virtual void SetWindowMaximum(double const _arg);
     virtual double const & GetWindowMinimum() const;
     virtual double const & GetWindowMaximum() const;
     void SetWindowLevel(double const & window, double const & level);
     double GetWindow() const;
     double GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterID3IF3(itkIntensityWindowingImageFilterID3IF3 const & arg0);
     void operator=(itkIntensityWindowingImageFilterID3IF3 const & arg0);
   protected:
     itkIntensityWindowingImageFilterID3IF3();
     ~itkIntensityWindowingImageFilterID3IF3();
 };


 class itkIntensityWindowingImageFilterID3IUC3 : public itkIntensityWindowingImageFilterID3IUC3_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterID3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(unsigned char const _arg);
     virtual void SetOutputMaximum(unsigned char const _arg);
     virtual unsigned char const & GetOutputMinimum() const;
     virtual unsigned char const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(double const _arg);
     virtual void SetWindowMaximum(double const _arg);
     virtual double const & GetWindowMinimum() const;
     virtual double const & GetWindowMaximum() const;
     void SetWindowLevel(double const & window, double const & level);
     double GetWindow() const;
     double GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterID3IUC3(itkIntensityWindowingImageFilterID3IUC3 const & arg0);
     void operator=(itkIntensityWindowingImageFilterID3IUC3 const & arg0);
   protected:
     itkIntensityWindowingImageFilterID3IUC3();
     ~itkIntensityWindowingImageFilterID3IUC3();
 };


 class itkIntensityWindowingImageFilterID3IUL3 : public itkIntensityWindowingImageFilterID3IUL3_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterID3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(unsigned long const _arg);
     virtual void SetOutputMaximum(unsigned long const _arg);
     virtual unsigned long const & GetOutputMinimum() const;
     virtual unsigned long const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(double const _arg);
     virtual void SetWindowMaximum(double const _arg);
     virtual double const & GetWindowMinimum() const;
     virtual double const & GetWindowMaximum() const;
     void SetWindowLevel(double const & window, double const & level);
     double GetWindow() const;
     double GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterID3IUL3(itkIntensityWindowingImageFilterID3IUL3 const & arg0);
     void operator=(itkIntensityWindowingImageFilterID3IUL3 const & arg0);
   protected:
     itkIntensityWindowingImageFilterID3IUL3();
     ~itkIntensityWindowingImageFilterID3IUL3();
 };


 class itkIntensityWindowingImageFilterID3IUS3 : public itkIntensityWindowingImageFilterID3IUS3_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterID3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(unsigned short const _arg);
     virtual void SetOutputMaximum(unsigned short const _arg);
     virtual unsigned short const & GetOutputMinimum() const;
     virtual unsigned short const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(double const _arg);
     virtual void SetWindowMaximum(double const _arg);
     virtual double const & GetWindowMinimum() const;
     virtual double const & GetWindowMaximum() const;
     void SetWindowLevel(double const & window, double const & level);
     double GetWindow() const;
     double GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterID3IUS3(itkIntensityWindowingImageFilterID3IUS3 const & arg0);
     void operator=(itkIntensityWindowingImageFilterID3IUS3 const & arg0);
   protected:
     itkIntensityWindowingImageFilterID3IUS3();
     ~itkIntensityWindowingImageFilterID3IUS3();
 };


 class itkIntensityWindowingImageFilterIF2ID2 : public itkIntensityWindowingImageFilterIF2ID2_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIF2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(double const _arg);
     virtual void SetOutputMaximum(double const _arg);
     virtual double const & GetOutputMinimum() const;
     virtual double const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(float const _arg);
     virtual void SetWindowMaximum(float const _arg);
     virtual float const & GetWindowMinimum() const;
     virtual float const & GetWindowMaximum() const;
     void SetWindowLevel(float const & window, float const & level);
     float GetWindow() const;
     float GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIF2ID2(itkIntensityWindowingImageFilterIF2ID2 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIF2ID2 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIF2ID2();
     ~itkIntensityWindowingImageFilterIF2ID2();
 };


 class itkIntensityWindowingImageFilterIF2IF2 : public itkIntensityWindowingImageFilterIF2IF2_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(float const _arg);
     virtual void SetOutputMaximum(float const _arg);
     virtual float const & GetOutputMinimum() const;
     virtual float const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(float const _arg);
     virtual void SetWindowMaximum(float const _arg);
     virtual float const & GetWindowMinimum() const;
     virtual float const & GetWindowMaximum() const;
     void SetWindowLevel(float const & window, float const & level);
     float GetWindow() const;
     float GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIF2IF2(itkIntensityWindowingImageFilterIF2IF2 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIF2IF2 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIF2IF2();
     ~itkIntensityWindowingImageFilterIF2IF2();
 };


 class itkIntensityWindowingImageFilterIF2IUC2 : public itkIntensityWindowingImageFilterIF2IUC2_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIF2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(unsigned char const _arg);
     virtual void SetOutputMaximum(unsigned char const _arg);
     virtual unsigned char const & GetOutputMinimum() const;
     virtual unsigned char const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(float const _arg);
     virtual void SetWindowMaximum(float const _arg);
     virtual float const & GetWindowMinimum() const;
     virtual float const & GetWindowMaximum() const;
     void SetWindowLevel(float const & window, float const & level);
     float GetWindow() const;
     float GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIF2IUC2(itkIntensityWindowingImageFilterIF2IUC2 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIF2IUC2 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIF2IUC2();
     ~itkIntensityWindowingImageFilterIF2IUC2();
 };


 class itkIntensityWindowingImageFilterIF2IUL2 : public itkIntensityWindowingImageFilterIF2IUL2_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIF2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(unsigned long const _arg);
     virtual void SetOutputMaximum(unsigned long const _arg);
     virtual unsigned long const & GetOutputMinimum() const;
     virtual unsigned long const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(float const _arg);
     virtual void SetWindowMaximum(float const _arg);
     virtual float const & GetWindowMinimum() const;
     virtual float const & GetWindowMaximum() const;
     void SetWindowLevel(float const & window, float const & level);
     float GetWindow() const;
     float GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIF2IUL2(itkIntensityWindowingImageFilterIF2IUL2 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIF2IUL2 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIF2IUL2();
     ~itkIntensityWindowingImageFilterIF2IUL2();
 };


 class itkIntensityWindowingImageFilterIF2IUS2 : public itkIntensityWindowingImageFilterIF2IUS2_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIF2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(unsigned short const _arg);
     virtual void SetOutputMaximum(unsigned short const _arg);
     virtual unsigned short const & GetOutputMinimum() const;
     virtual unsigned short const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(float const _arg);
     virtual void SetWindowMaximum(float const _arg);
     virtual float const & GetWindowMinimum() const;
     virtual float const & GetWindowMaximum() const;
     void SetWindowLevel(float const & window, float const & level);
     float GetWindow() const;
     float GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIF2IUS2(itkIntensityWindowingImageFilterIF2IUS2 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIF2IUS2 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIF2IUS2();
     ~itkIntensityWindowingImageFilterIF2IUS2();
 };


 class itkIntensityWindowingImageFilterIF3ID3 : public itkIntensityWindowingImageFilterIF3ID3_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIF3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(double const _arg);
     virtual void SetOutputMaximum(double const _arg);
     virtual double const & GetOutputMinimum() const;
     virtual double const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(float const _arg);
     virtual void SetWindowMaximum(float const _arg);
     virtual float const & GetWindowMinimum() const;
     virtual float const & GetWindowMaximum() const;
     void SetWindowLevel(float const & window, float const & level);
     float GetWindow() const;
     float GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIF3ID3(itkIntensityWindowingImageFilterIF3ID3 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIF3ID3 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIF3ID3();
     ~itkIntensityWindowingImageFilterIF3ID3();
 };


 class itkIntensityWindowingImageFilterIF3IF3 : public itkIntensityWindowingImageFilterIF3IF3_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(float const _arg);
     virtual void SetOutputMaximum(float const _arg);
     virtual float const & GetOutputMinimum() const;
     virtual float const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(float const _arg);
     virtual void SetWindowMaximum(float const _arg);
     virtual float const & GetWindowMinimum() const;
     virtual float const & GetWindowMaximum() const;
     void SetWindowLevel(float const & window, float const & level);
     float GetWindow() const;
     float GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIF3IF3(itkIntensityWindowingImageFilterIF3IF3 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIF3IF3 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIF3IF3();
     ~itkIntensityWindowingImageFilterIF3IF3();
 };


 class itkIntensityWindowingImageFilterIF3IUC3 : public itkIntensityWindowingImageFilterIF3IUC3_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIF3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(unsigned char const _arg);
     virtual void SetOutputMaximum(unsigned char const _arg);
     virtual unsigned char const & GetOutputMinimum() const;
     virtual unsigned char const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(float const _arg);
     virtual void SetWindowMaximum(float const _arg);
     virtual float const & GetWindowMinimum() const;
     virtual float const & GetWindowMaximum() const;
     void SetWindowLevel(float const & window, float const & level);
     float GetWindow() const;
     float GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIF3IUC3(itkIntensityWindowingImageFilterIF3IUC3 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIF3IUC3 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIF3IUC3();
     ~itkIntensityWindowingImageFilterIF3IUC3();
 };


 class itkIntensityWindowingImageFilterIF3IUL3 : public itkIntensityWindowingImageFilterIF3IUL3_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIF3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(unsigned long const _arg);
     virtual void SetOutputMaximum(unsigned long const _arg);
     virtual unsigned long const & GetOutputMinimum() const;
     virtual unsigned long const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(float const _arg);
     virtual void SetWindowMaximum(float const _arg);
     virtual float const & GetWindowMinimum() const;
     virtual float const & GetWindowMaximum() const;
     void SetWindowLevel(float const & window, float const & level);
     float GetWindow() const;
     float GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIF3IUL3(itkIntensityWindowingImageFilterIF3IUL3 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIF3IUL3 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIF3IUL3();
     ~itkIntensityWindowingImageFilterIF3IUL3();
 };


 class itkIntensityWindowingImageFilterIF3IUS3 : public itkIntensityWindowingImageFilterIF3IUS3_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIF3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(unsigned short const _arg);
     virtual void SetOutputMaximum(unsigned short const _arg);
     virtual unsigned short const & GetOutputMinimum() const;
     virtual unsigned short const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(float const _arg);
     virtual void SetWindowMaximum(float const _arg);
     virtual float const & GetWindowMinimum() const;
     virtual float const & GetWindowMaximum() const;
     void SetWindowLevel(float const & window, float const & level);
     float GetWindow() const;
     float GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIF3IUS3(itkIntensityWindowingImageFilterIF3IUS3 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIF3IUS3 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIF3IUS3();
     ~itkIntensityWindowingImageFilterIF3IUS3();
 };


 class itkIntensityWindowingImageFilterIUC2ID2 : public itkIntensityWindowingImageFilterIUC2ID2_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIUC2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(double const _arg);
     virtual void SetOutputMaximum(double const _arg);
     virtual double const & GetOutputMinimum() const;
     virtual double const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(unsigned char const _arg);
     virtual void SetWindowMaximum(unsigned char const _arg);
     virtual unsigned char const & GetWindowMinimum() const;
     virtual unsigned char const & GetWindowMaximum() const;
     void SetWindowLevel(unsigned char const & window, unsigned char const & level);
     unsigned char GetWindow() const;
     unsigned char GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIUC2ID2(itkIntensityWindowingImageFilterIUC2ID2 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUC2ID2 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUC2ID2();
     ~itkIntensityWindowingImageFilterIUC2ID2();
 };


 class itkIntensityWindowingImageFilterIUC2IF2 : public itkIntensityWindowingImageFilterIUC2IF2_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIUC2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(float const _arg);
     virtual void SetOutputMaximum(float const _arg);
     virtual float const & GetOutputMinimum() const;
     virtual float const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(unsigned char const _arg);
     virtual void SetWindowMaximum(unsigned char const _arg);
     virtual unsigned char const & GetWindowMinimum() const;
     virtual unsigned char const & GetWindowMaximum() const;
     void SetWindowLevel(unsigned char const & window, unsigned char const & level);
     unsigned char GetWindow() const;
     unsigned char GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIUC2IF2(itkIntensityWindowingImageFilterIUC2IF2 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUC2IF2 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUC2IF2();
     ~itkIntensityWindowingImageFilterIUC2IF2();
 };


 class itkIntensityWindowingImageFilterIUC2IUC2 : public itkIntensityWindowingImageFilterIUC2IUC2_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(unsigned char const _arg);
     virtual void SetOutputMaximum(unsigned char const _arg);
     virtual unsigned char const & GetOutputMinimum() const;
     virtual unsigned char const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(unsigned char const _arg);
     virtual void SetWindowMaximum(unsigned char const _arg);
     virtual unsigned char const & GetWindowMinimum() const;
     virtual unsigned char const & GetWindowMaximum() const;
     void SetWindowLevel(unsigned char const & window, unsigned char const & level);
     unsigned char GetWindow() const;
     unsigned char GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIUC2IUC2(itkIntensityWindowingImageFilterIUC2IUC2 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUC2IUC2 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUC2IUC2();
     ~itkIntensityWindowingImageFilterIUC2IUC2();
 };


 class itkIntensityWindowingImageFilterIUC2IUL2 : public itkIntensityWindowingImageFilterIUC2IUL2_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIUC2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(unsigned long const _arg);
     virtual void SetOutputMaximum(unsigned long const _arg);
     virtual unsigned long const & GetOutputMinimum() const;
     virtual unsigned long const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(unsigned char const _arg);
     virtual void SetWindowMaximum(unsigned char const _arg);
     virtual unsigned char const & GetWindowMinimum() const;
     virtual unsigned char const & GetWindowMaximum() const;
     void SetWindowLevel(unsigned char const & window, unsigned char const & level);
     unsigned char GetWindow() const;
     unsigned char GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIUC2IUL2(itkIntensityWindowingImageFilterIUC2IUL2 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUC2IUL2 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUC2IUL2();
     ~itkIntensityWindowingImageFilterIUC2IUL2();
 };


 class itkIntensityWindowingImageFilterIUC2IUS2 : public itkIntensityWindowingImageFilterIUC2IUS2_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIUC2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(unsigned short const _arg);
     virtual void SetOutputMaximum(unsigned short const _arg);
     virtual unsigned short const & GetOutputMinimum() const;
     virtual unsigned short const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(unsigned char const _arg);
     virtual void SetWindowMaximum(unsigned char const _arg);
     virtual unsigned char const & GetWindowMinimum() const;
     virtual unsigned char const & GetWindowMaximum() const;
     void SetWindowLevel(unsigned char const & window, unsigned char const & level);
     unsigned char GetWindow() const;
     unsigned char GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIUC2IUS2(itkIntensityWindowingImageFilterIUC2IUS2 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUC2IUS2 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUC2IUS2();
     ~itkIntensityWindowingImageFilterIUC2IUS2();
 };


 class itkIntensityWindowingImageFilterIUC3ID3 : public itkIntensityWindowingImageFilterIUC3ID3_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIUC3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(double const _arg);
     virtual void SetOutputMaximum(double const _arg);
     virtual double const & GetOutputMinimum() const;
     virtual double const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(unsigned char const _arg);
     virtual void SetWindowMaximum(unsigned char const _arg);
     virtual unsigned char const & GetWindowMinimum() const;
     virtual unsigned char const & GetWindowMaximum() const;
     void SetWindowLevel(unsigned char const & window, unsigned char const & level);
     unsigned char GetWindow() const;
     unsigned char GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIUC3ID3(itkIntensityWindowingImageFilterIUC3ID3 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUC3ID3 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUC3ID3();
     ~itkIntensityWindowingImageFilterIUC3ID3();
 };


 class itkIntensityWindowingImageFilterIUC3IF3 : public itkIntensityWindowingImageFilterIUC3IF3_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIUC3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(float const _arg);
     virtual void SetOutputMaximum(float const _arg);
     virtual float const & GetOutputMinimum() const;
     virtual float const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(unsigned char const _arg);
     virtual void SetWindowMaximum(unsigned char const _arg);
     virtual unsigned char const & GetWindowMinimum() const;
     virtual unsigned char const & GetWindowMaximum() const;
     void SetWindowLevel(unsigned char const & window, unsigned char const & level);
     unsigned char GetWindow() const;
     unsigned char GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIUC3IF3(itkIntensityWindowingImageFilterIUC3IF3 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUC3IF3 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUC3IF3();
     ~itkIntensityWindowingImageFilterIUC3IF3();
 };


 class itkIntensityWindowingImageFilterIUC3IUC3 : public itkIntensityWindowingImageFilterIUC3IUC3_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(unsigned char const _arg);
     virtual void SetOutputMaximum(unsigned char const _arg);
     virtual unsigned char const & GetOutputMinimum() const;
     virtual unsigned char const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(unsigned char const _arg);
     virtual void SetWindowMaximum(unsigned char const _arg);
     virtual unsigned char const & GetWindowMinimum() const;
     virtual unsigned char const & GetWindowMaximum() const;
     void SetWindowLevel(unsigned char const & window, unsigned char const & level);
     unsigned char GetWindow() const;
     unsigned char GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIUC3IUC3(itkIntensityWindowingImageFilterIUC3IUC3 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUC3IUC3 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUC3IUC3();
     ~itkIntensityWindowingImageFilterIUC3IUC3();
 };


 class itkIntensityWindowingImageFilterIUC3IUL3 : public itkIntensityWindowingImageFilterIUC3IUL3_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIUC3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(unsigned long const _arg);
     virtual void SetOutputMaximum(unsigned long const _arg);
     virtual unsigned long const & GetOutputMinimum() const;
     virtual unsigned long const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(unsigned char const _arg);
     virtual void SetWindowMaximum(unsigned char const _arg);
     virtual unsigned char const & GetWindowMinimum() const;
     virtual unsigned char const & GetWindowMaximum() const;
     void SetWindowLevel(unsigned char const & window, unsigned char const & level);
     unsigned char GetWindow() const;
     unsigned char GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIUC3IUL3(itkIntensityWindowingImageFilterIUC3IUL3 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUC3IUL3 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUC3IUL3();
     ~itkIntensityWindowingImageFilterIUC3IUL3();
 };


 class itkIntensityWindowingImageFilterIUC3IUS3 : public itkIntensityWindowingImageFilterIUC3IUS3_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIUC3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(unsigned short const _arg);
     virtual void SetOutputMaximum(unsigned short const _arg);
     virtual unsigned short const & GetOutputMinimum() const;
     virtual unsigned short const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(unsigned char const _arg);
     virtual void SetWindowMaximum(unsigned char const _arg);
     virtual unsigned char const & GetWindowMinimum() const;
     virtual unsigned char const & GetWindowMaximum() const;
     void SetWindowLevel(unsigned char const & window, unsigned char const & level);
     unsigned char GetWindow() const;
     unsigned char GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIUC3IUS3(itkIntensityWindowingImageFilterIUC3IUS3 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUC3IUS3 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUC3IUS3();
     ~itkIntensityWindowingImageFilterIUC3IUS3();
 };


 class itkIntensityWindowingImageFilterIUL2ID2 : public itkIntensityWindowingImageFilterIUL2ID2_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIUL2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(double const _arg);
     virtual void SetOutputMaximum(double const _arg);
     virtual double const & GetOutputMinimum() const;
     virtual double const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(unsigned long const _arg);
     virtual void SetWindowMaximum(unsigned long const _arg);
     virtual unsigned long const & GetWindowMinimum() const;
     virtual unsigned long const & GetWindowMaximum() const;
     void SetWindowLevel(unsigned long const & window, unsigned long const & level);
     unsigned long GetWindow() const;
     unsigned long GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIUL2ID2(itkIntensityWindowingImageFilterIUL2ID2 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUL2ID2 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUL2ID2();
     ~itkIntensityWindowingImageFilterIUL2ID2();
 };


 class itkIntensityWindowingImageFilterIUL2IF2 : public itkIntensityWindowingImageFilterIUL2IF2_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIUL2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(float const _arg);
     virtual void SetOutputMaximum(float const _arg);
     virtual float const & GetOutputMinimum() const;
     virtual float const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(unsigned long const _arg);
     virtual void SetWindowMaximum(unsigned long const _arg);
     virtual unsigned long const & GetWindowMinimum() const;
     virtual unsigned long const & GetWindowMaximum() const;
     void SetWindowLevel(unsigned long const & window, unsigned long const & level);
     unsigned long GetWindow() const;
     unsigned long GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIUL2IF2(itkIntensityWindowingImageFilterIUL2IF2 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUL2IF2 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUL2IF2();
     ~itkIntensityWindowingImageFilterIUL2IF2();
 };


 class itkIntensityWindowingImageFilterIUL2IUC2 : public itkIntensityWindowingImageFilterIUL2IUC2_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIUL2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(unsigned char const _arg);
     virtual void SetOutputMaximum(unsigned char const _arg);
     virtual unsigned char const & GetOutputMinimum() const;
     virtual unsigned char const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(unsigned long const _arg);
     virtual void SetWindowMaximum(unsigned long const _arg);
     virtual unsigned long const & GetWindowMinimum() const;
     virtual unsigned long const & GetWindowMaximum() const;
     void SetWindowLevel(unsigned long const & window, unsigned long const & level);
     unsigned long GetWindow() const;
     unsigned long GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIUL2IUC2(itkIntensityWindowingImageFilterIUL2IUC2 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUL2IUC2 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUL2IUC2();
     ~itkIntensityWindowingImageFilterIUL2IUC2();
 };


 class itkIntensityWindowingImageFilterIUL2IUL2 : public itkIntensityWindowingImageFilterIUL2IUL2_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(unsigned long const _arg);
     virtual void SetOutputMaximum(unsigned long const _arg);
     virtual unsigned long const & GetOutputMinimum() const;
     virtual unsigned long const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(unsigned long const _arg);
     virtual void SetWindowMaximum(unsigned long const _arg);
     virtual unsigned long const & GetWindowMinimum() const;
     virtual unsigned long const & GetWindowMaximum() const;
     void SetWindowLevel(unsigned long const & window, unsigned long const & level);
     unsigned long GetWindow() const;
     unsigned long GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIUL2IUL2(itkIntensityWindowingImageFilterIUL2IUL2 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUL2IUL2 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUL2IUL2();
     ~itkIntensityWindowingImageFilterIUL2IUL2();
 };


 class itkIntensityWindowingImageFilterIUL2IUS2 : public itkIntensityWindowingImageFilterIUL2IUS2_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIUL2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(unsigned short const _arg);
     virtual void SetOutputMaximum(unsigned short const _arg);
     virtual unsigned short const & GetOutputMinimum() const;
     virtual unsigned short const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(unsigned long const _arg);
     virtual void SetWindowMaximum(unsigned long const _arg);
     virtual unsigned long const & GetWindowMinimum() const;
     virtual unsigned long const & GetWindowMaximum() const;
     void SetWindowLevel(unsigned long const & window, unsigned long const & level);
     unsigned long GetWindow() const;
     unsigned long GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIUL2IUS2(itkIntensityWindowingImageFilterIUL2IUS2 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUL2IUS2 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUL2IUS2();
     ~itkIntensityWindowingImageFilterIUL2IUS2();
 };


 class itkIntensityWindowingImageFilterIUL3ID3 : public itkIntensityWindowingImageFilterIUL3ID3_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIUL3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(double const _arg);
     virtual void SetOutputMaximum(double const _arg);
     virtual double const & GetOutputMinimum() const;
     virtual double const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(unsigned long const _arg);
     virtual void SetWindowMaximum(unsigned long const _arg);
     virtual unsigned long const & GetWindowMinimum() const;
     virtual unsigned long const & GetWindowMaximum() const;
     void SetWindowLevel(unsigned long const & window, unsigned long const & level);
     unsigned long GetWindow() const;
     unsigned long GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIUL3ID3(itkIntensityWindowingImageFilterIUL3ID3 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUL3ID3 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUL3ID3();
     ~itkIntensityWindowingImageFilterIUL3ID3();
 };


 class itkIntensityWindowingImageFilterIUL3IF3 : public itkIntensityWindowingImageFilterIUL3IF3_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIUL3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(float const _arg);
     virtual void SetOutputMaximum(float const _arg);
     virtual float const & GetOutputMinimum() const;
     virtual float const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(unsigned long const _arg);
     virtual void SetWindowMaximum(unsigned long const _arg);
     virtual unsigned long const & GetWindowMinimum() const;
     virtual unsigned long const & GetWindowMaximum() const;
     void SetWindowLevel(unsigned long const & window, unsigned long const & level);
     unsigned long GetWindow() const;
     unsigned long GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIUL3IF3(itkIntensityWindowingImageFilterIUL3IF3 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUL3IF3 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUL3IF3();
     ~itkIntensityWindowingImageFilterIUL3IF3();
 };


 class itkIntensityWindowingImageFilterIUL3IUC3 : public itkIntensityWindowingImageFilterIUL3IUC3_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIUL3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(unsigned char const _arg);
     virtual void SetOutputMaximum(unsigned char const _arg);
     virtual unsigned char const & GetOutputMinimum() const;
     virtual unsigned char const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(unsigned long const _arg);
     virtual void SetWindowMaximum(unsigned long const _arg);
     virtual unsigned long const & GetWindowMinimum() const;
     virtual unsigned long const & GetWindowMaximum() const;
     void SetWindowLevel(unsigned long const & window, unsigned long const & level);
     unsigned long GetWindow() const;
     unsigned long GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIUL3IUC3(itkIntensityWindowingImageFilterIUL3IUC3 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUL3IUC3 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUL3IUC3();
     ~itkIntensityWindowingImageFilterIUL3IUC3();
 };


 class itkIntensityWindowingImageFilterIUL3IUL3 : public itkIntensityWindowingImageFilterIUL3IUL3_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(unsigned long const _arg);
     virtual void SetOutputMaximum(unsigned long const _arg);
     virtual unsigned long const & GetOutputMinimum() const;
     virtual unsigned long const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(unsigned long const _arg);
     virtual void SetWindowMaximum(unsigned long const _arg);
     virtual unsigned long const & GetWindowMinimum() const;
     virtual unsigned long const & GetWindowMaximum() const;
     void SetWindowLevel(unsigned long const & window, unsigned long const & level);
     unsigned long GetWindow() const;
     unsigned long GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIUL3IUL3(itkIntensityWindowingImageFilterIUL3IUL3 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUL3IUL3 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUL3IUL3();
     ~itkIntensityWindowingImageFilterIUL3IUL3();
 };


 class itkIntensityWindowingImageFilterIUL3IUS3 : public itkIntensityWindowingImageFilterIUL3IUS3_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIUL3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(unsigned short const _arg);
     virtual void SetOutputMaximum(unsigned short const _arg);
     virtual unsigned short const & GetOutputMinimum() const;
     virtual unsigned short const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(unsigned long const _arg);
     virtual void SetWindowMaximum(unsigned long const _arg);
     virtual unsigned long const & GetWindowMinimum() const;
     virtual unsigned long const & GetWindowMaximum() const;
     void SetWindowLevel(unsigned long const & window, unsigned long const & level);
     unsigned long GetWindow() const;
     unsigned long GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIUL3IUS3(itkIntensityWindowingImageFilterIUL3IUS3 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUL3IUS3 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUL3IUS3();
     ~itkIntensityWindowingImageFilterIUL3IUS3();
 };


 class itkIntensityWindowingImageFilterIUS2ID2 : public itkIntensityWindowingImageFilterIUS2ID2_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIUS2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(double const _arg);
     virtual void SetOutputMaximum(double const _arg);
     virtual double const & GetOutputMinimum() const;
     virtual double const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(unsigned short const _arg);
     virtual void SetWindowMaximum(unsigned short const _arg);
     virtual unsigned short const & GetWindowMinimum() const;
     virtual unsigned short const & GetWindowMaximum() const;
     void SetWindowLevel(unsigned short const & window, unsigned short const & level);
     unsigned short GetWindow() const;
     unsigned short GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIUS2ID2(itkIntensityWindowingImageFilterIUS2ID2 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUS2ID2 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUS2ID2();
     ~itkIntensityWindowingImageFilterIUS2ID2();
 };


 class itkIntensityWindowingImageFilterIUS2IF2 : public itkIntensityWindowingImageFilterIUS2IF2_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIUS2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(float const _arg);
     virtual void SetOutputMaximum(float const _arg);
     virtual float const & GetOutputMinimum() const;
     virtual float const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(unsigned short const _arg);
     virtual void SetWindowMaximum(unsigned short const _arg);
     virtual unsigned short const & GetWindowMinimum() const;
     virtual unsigned short const & GetWindowMaximum() const;
     void SetWindowLevel(unsigned short const & window, unsigned short const & level);
     unsigned short GetWindow() const;
     unsigned short GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIUS2IF2(itkIntensityWindowingImageFilterIUS2IF2 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUS2IF2 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUS2IF2();
     ~itkIntensityWindowingImageFilterIUS2IF2();
 };


 class itkIntensityWindowingImageFilterIUS2IUC2 : public itkIntensityWindowingImageFilterIUS2IUC2_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIUS2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(unsigned char const _arg);
     virtual void SetOutputMaximum(unsigned char const _arg);
     virtual unsigned char const & GetOutputMinimum() const;
     virtual unsigned char const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(unsigned short const _arg);
     virtual void SetWindowMaximum(unsigned short const _arg);
     virtual unsigned short const & GetWindowMinimum() const;
     virtual unsigned short const & GetWindowMaximum() const;
     void SetWindowLevel(unsigned short const & window, unsigned short const & level);
     unsigned short GetWindow() const;
     unsigned short GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIUS2IUC2(itkIntensityWindowingImageFilterIUS2IUC2 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUS2IUC2 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUS2IUC2();
     ~itkIntensityWindowingImageFilterIUS2IUC2();
 };


 class itkIntensityWindowingImageFilterIUS2IUL2 : public itkIntensityWindowingImageFilterIUS2IUL2_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIUS2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(unsigned long const _arg);
     virtual void SetOutputMaximum(unsigned long const _arg);
     virtual unsigned long const & GetOutputMinimum() const;
     virtual unsigned long const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(unsigned short const _arg);
     virtual void SetWindowMaximum(unsigned short const _arg);
     virtual unsigned short const & GetWindowMinimum() const;
     virtual unsigned short const & GetWindowMaximum() const;
     void SetWindowLevel(unsigned short const & window, unsigned short const & level);
     unsigned short GetWindow() const;
     unsigned short GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIUS2IUL2(itkIntensityWindowingImageFilterIUS2IUL2 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUS2IUL2 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUS2IUL2();
     ~itkIntensityWindowingImageFilterIUS2IUL2();
 };


 class itkIntensityWindowingImageFilterIUS2IUS2 : public itkIntensityWindowingImageFilterIUS2IUS2_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(unsigned short const _arg);
     virtual void SetOutputMaximum(unsigned short const _arg);
     virtual unsigned short const & GetOutputMinimum() const;
     virtual unsigned short const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(unsigned short const _arg);
     virtual void SetWindowMaximum(unsigned short const _arg);
     virtual unsigned short const & GetWindowMinimum() const;
     virtual unsigned short const & GetWindowMaximum() const;
     void SetWindowLevel(unsigned short const & window, unsigned short const & level);
     unsigned short GetWindow() const;
     unsigned short GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIUS2IUS2(itkIntensityWindowingImageFilterIUS2IUS2 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUS2IUS2 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUS2IUS2();
     ~itkIntensityWindowingImageFilterIUS2IUS2();
 };


 class itkIntensityWindowingImageFilterIUS3ID3 : public itkIntensityWindowingImageFilterIUS3ID3_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIUS3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(double const _arg);
     virtual void SetOutputMaximum(double const _arg);
     virtual double const & GetOutputMinimum() const;
     virtual double const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(unsigned short const _arg);
     virtual void SetWindowMaximum(unsigned short const _arg);
     virtual unsigned short const & GetWindowMinimum() const;
     virtual unsigned short const & GetWindowMaximum() const;
     void SetWindowLevel(unsigned short const & window, unsigned short const & level);
     unsigned short GetWindow() const;
     unsigned short GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIUS3ID3(itkIntensityWindowingImageFilterIUS3ID3 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUS3ID3 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUS3ID3();
     ~itkIntensityWindowingImageFilterIUS3ID3();
 };


 class itkIntensityWindowingImageFilterIUS3IF3 : public itkIntensityWindowingImageFilterIUS3IF3_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIUS3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(float const _arg);
     virtual void SetOutputMaximum(float const _arg);
     virtual float const & GetOutputMinimum() const;
     virtual float const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(unsigned short const _arg);
     virtual void SetWindowMaximum(unsigned short const _arg);
     virtual unsigned short const & GetWindowMinimum() const;
     virtual unsigned short const & GetWindowMaximum() const;
     void SetWindowLevel(unsigned short const & window, unsigned short const & level);
     unsigned short GetWindow() const;
     unsigned short GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIUS3IF3(itkIntensityWindowingImageFilterIUS3IF3 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUS3IF3 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUS3IF3();
     ~itkIntensityWindowingImageFilterIUS3IF3();
 };


 class itkIntensityWindowingImageFilterIUS3IUC3 : public itkIntensityWindowingImageFilterIUS3IUC3_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIUS3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(unsigned char const _arg);
     virtual void SetOutputMaximum(unsigned char const _arg);
     virtual unsigned char const & GetOutputMinimum() const;
     virtual unsigned char const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(unsigned short const _arg);
     virtual void SetWindowMaximum(unsigned short const _arg);
     virtual unsigned short const & GetWindowMinimum() const;
     virtual unsigned short const & GetWindowMaximum() const;
     void SetWindowLevel(unsigned short const & window, unsigned short const & level);
     unsigned short GetWindow() const;
     unsigned short GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIUS3IUC3(itkIntensityWindowingImageFilterIUS3IUC3 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUS3IUC3 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUS3IUC3();
     ~itkIntensityWindowingImageFilterIUS3IUC3();
 };


 class itkIntensityWindowingImageFilterIUS3IUL3 : public itkIntensityWindowingImageFilterIUS3IUL3_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIUS3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(unsigned long const _arg);
     virtual void SetOutputMaximum(unsigned long const _arg);
     virtual unsigned long const & GetOutputMinimum() const;
     virtual unsigned long const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(unsigned short const _arg);
     virtual void SetWindowMaximum(unsigned short const _arg);
     virtual unsigned short const & GetWindowMinimum() const;
     virtual unsigned short const & GetWindowMaximum() const;
     void SetWindowLevel(unsigned short const & window, unsigned short const & level);
     unsigned short GetWindow() const;
     unsigned short GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIUS3IUL3(itkIntensityWindowingImageFilterIUS3IUL3 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUS3IUL3 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUS3IUL3();
     ~itkIntensityWindowingImageFilterIUS3IUL3();
 };


 class itkIntensityWindowingImageFilterIUS3IUS3 : public itkIntensityWindowingImageFilterIUS3IUS3_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkIntensityWindowingImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutputMinimum(unsigned short const _arg);
     virtual void SetOutputMaximum(unsigned short const _arg);
     virtual unsigned short const & GetOutputMinimum() const;
     virtual unsigned short const & GetOutputMaximum() const;
     virtual void SetWindowMinimum(unsigned short const _arg);
     virtual void SetWindowMaximum(unsigned short const _arg);
     virtual unsigned short const & GetWindowMinimum() const;
     virtual unsigned short const & GetWindowMaximum() const;
     void SetWindowLevel(unsigned short const & window, unsigned short const & level);
     unsigned short GetWindow() const;
     unsigned short GetLevel() const;
     virtual double const & GetScale() const;
     virtual double const & GetShift() const;
     virtual void BeforeThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
   private:
     itkIntensityWindowingImageFilterIUS3IUS3(itkIntensityWindowingImageFilterIUS3IUS3 const & arg0);
     void operator=(itkIntensityWindowingImageFilterIUS3IUS3 const & arg0);
   protected:
     itkIntensityWindowingImageFilterIUS3IUS3();
     ~itkIntensityWindowingImageFilterIUS3IUS3();
 };


