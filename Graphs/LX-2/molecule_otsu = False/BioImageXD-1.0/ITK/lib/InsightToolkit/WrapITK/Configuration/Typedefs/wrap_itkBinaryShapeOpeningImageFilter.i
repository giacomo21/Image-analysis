// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkBinaryShapeOpeningImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkBinaryShapeOpeningImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkBinaryShapeOpeningImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkBinaryShapeOpeningImageFilterJava
#endif
#ifdef SWIGLUA
%module itkBinaryShapeOpeningImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkBinaryShapeOpeningImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkBinaryShapeOpeningImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkBinaryShapeOpeningImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkBinaryShapeOpeningImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkBinaryShapeOpeningImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkBinaryShapeOpeningImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkBinaryShapeOpeningImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkBinaryShapeOpeningImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkBinaryShapeOpeningImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkBinaryShapeOpeningImageFilterPython
#endif
#ifdef SWIGR
%module itkBinaryShapeOpeningImageFilterR
#endif
#ifdef SWIGRUBY
%module itkBinaryShapeOpeningImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkBinaryShapeOpeningImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkBinaryShapeOpeningImageFilterTcl
#endif
#ifdef SWIGXML
%module itkBinaryShapeOpeningImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "Numerics.includes"
#include "BinaryMorphology.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImageToImageFilterA.i


%include itk.i
%include wrap_itkBinaryShapeOpeningImageFilter_ext.i


 class itkBinaryShapeOpeningImageFilterIUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryShapeOpeningImageFilterIUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned char const _arg);
     virtual unsigned char GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
   private:
     itkBinaryShapeOpeningImageFilterIUC2(itkBinaryShapeOpeningImageFilterIUC2 const & arg0);
     void operator=(itkBinaryShapeOpeningImageFilterIUC2 const & arg0);
   protected:
     itkBinaryShapeOpeningImageFilterIUC2();
     ~itkBinaryShapeOpeningImageFilterIUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryShapeOpeningImageFilterIUC2_Pointer {
   public:
     itkBinaryShapeOpeningImageFilterIUC2_Pointer();
     itkBinaryShapeOpeningImageFilterIUC2_Pointer(itkBinaryShapeOpeningImageFilterIUC2_Pointer const & p);
     itkBinaryShapeOpeningImageFilterIUC2_Pointer(itkBinaryShapeOpeningImageFilterIUC2 * p);
     ~itkBinaryShapeOpeningImageFilterIUC2_Pointer();
     itkBinaryShapeOpeningImageFilterIUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryShapeOpeningImageFilterIUC2 * GetPointer() const;
     bool operator<(itkBinaryShapeOpeningImageFilterIUC2_Pointer const & r) const;
     bool operator>(itkBinaryShapeOpeningImageFilterIUC2_Pointer const & r) const;
     bool operator<=(itkBinaryShapeOpeningImageFilterIUC2_Pointer const & r) const;
     bool operator>=(itkBinaryShapeOpeningImageFilterIUC2_Pointer const & r) const;
     itkBinaryShapeOpeningImageFilterIUC2_Pointer & operator=(itkBinaryShapeOpeningImageFilterIUC2_Pointer const & r);
     itkBinaryShapeOpeningImageFilterIUC2_Pointer & operator=(itkBinaryShapeOpeningImageFilterIUC2 * r);
     itkBinaryShapeOpeningImageFilterIUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryShapeOpeningImageFilterIUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryShapeOpeningImageFilterIUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned char const _arg);
     virtual unsigned char GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
   private:
     itkBinaryShapeOpeningImageFilterIUC3(itkBinaryShapeOpeningImageFilterIUC3 const & arg0);
     void operator=(itkBinaryShapeOpeningImageFilterIUC3 const & arg0);
   protected:
     itkBinaryShapeOpeningImageFilterIUC3();
     ~itkBinaryShapeOpeningImageFilterIUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryShapeOpeningImageFilterIUC3_Pointer {
   public:
     itkBinaryShapeOpeningImageFilterIUC3_Pointer();
     itkBinaryShapeOpeningImageFilterIUC3_Pointer(itkBinaryShapeOpeningImageFilterIUC3_Pointer const & p);
     itkBinaryShapeOpeningImageFilterIUC3_Pointer(itkBinaryShapeOpeningImageFilterIUC3 * p);
     ~itkBinaryShapeOpeningImageFilterIUC3_Pointer();
     itkBinaryShapeOpeningImageFilterIUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryShapeOpeningImageFilterIUC3 * GetPointer() const;
     bool operator<(itkBinaryShapeOpeningImageFilterIUC3_Pointer const & r) const;
     bool operator>(itkBinaryShapeOpeningImageFilterIUC3_Pointer const & r) const;
     bool operator<=(itkBinaryShapeOpeningImageFilterIUC3_Pointer const & r) const;
     bool operator>=(itkBinaryShapeOpeningImageFilterIUC3_Pointer const & r) const;
     itkBinaryShapeOpeningImageFilterIUC3_Pointer & operator=(itkBinaryShapeOpeningImageFilterIUC3_Pointer const & r);
     itkBinaryShapeOpeningImageFilterIUC3_Pointer & operator=(itkBinaryShapeOpeningImageFilterIUC3 * r);
     itkBinaryShapeOpeningImageFilterIUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryShapeOpeningImageFilterIUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryShapeOpeningImageFilterIUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned long const _arg);
     virtual unsigned long GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
   private:
     itkBinaryShapeOpeningImageFilterIUL2(itkBinaryShapeOpeningImageFilterIUL2 const & arg0);
     void operator=(itkBinaryShapeOpeningImageFilterIUL2 const & arg0);
   protected:
     itkBinaryShapeOpeningImageFilterIUL2();
     ~itkBinaryShapeOpeningImageFilterIUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryShapeOpeningImageFilterIUL2_Pointer {
   public:
     itkBinaryShapeOpeningImageFilterIUL2_Pointer();
     itkBinaryShapeOpeningImageFilterIUL2_Pointer(itkBinaryShapeOpeningImageFilterIUL2_Pointer const & p);
     itkBinaryShapeOpeningImageFilterIUL2_Pointer(itkBinaryShapeOpeningImageFilterIUL2 * p);
     ~itkBinaryShapeOpeningImageFilterIUL2_Pointer();
     itkBinaryShapeOpeningImageFilterIUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryShapeOpeningImageFilterIUL2 * GetPointer() const;
     bool operator<(itkBinaryShapeOpeningImageFilterIUL2_Pointer const & r) const;
     bool operator>(itkBinaryShapeOpeningImageFilterIUL2_Pointer const & r) const;
     bool operator<=(itkBinaryShapeOpeningImageFilterIUL2_Pointer const & r) const;
     bool operator>=(itkBinaryShapeOpeningImageFilterIUL2_Pointer const & r) const;
     itkBinaryShapeOpeningImageFilterIUL2_Pointer & operator=(itkBinaryShapeOpeningImageFilterIUL2_Pointer const & r);
     itkBinaryShapeOpeningImageFilterIUL2_Pointer & operator=(itkBinaryShapeOpeningImageFilterIUL2 * r);
     itkBinaryShapeOpeningImageFilterIUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryShapeOpeningImageFilterIUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryShapeOpeningImageFilterIUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned long const _arg);
     virtual unsigned long GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
   private:
     itkBinaryShapeOpeningImageFilterIUL3(itkBinaryShapeOpeningImageFilterIUL3 const & arg0);
     void operator=(itkBinaryShapeOpeningImageFilterIUL3 const & arg0);
   protected:
     itkBinaryShapeOpeningImageFilterIUL3();
     ~itkBinaryShapeOpeningImageFilterIUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryShapeOpeningImageFilterIUL3_Pointer {
   public:
     itkBinaryShapeOpeningImageFilterIUL3_Pointer();
     itkBinaryShapeOpeningImageFilterIUL3_Pointer(itkBinaryShapeOpeningImageFilterIUL3_Pointer const & p);
     itkBinaryShapeOpeningImageFilterIUL3_Pointer(itkBinaryShapeOpeningImageFilterIUL3 * p);
     ~itkBinaryShapeOpeningImageFilterIUL3_Pointer();
     itkBinaryShapeOpeningImageFilterIUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryShapeOpeningImageFilterIUL3 * GetPointer() const;
     bool operator<(itkBinaryShapeOpeningImageFilterIUL3_Pointer const & r) const;
     bool operator>(itkBinaryShapeOpeningImageFilterIUL3_Pointer const & r) const;
     bool operator<=(itkBinaryShapeOpeningImageFilterIUL3_Pointer const & r) const;
     bool operator>=(itkBinaryShapeOpeningImageFilterIUL3_Pointer const & r) const;
     itkBinaryShapeOpeningImageFilterIUL3_Pointer & operator=(itkBinaryShapeOpeningImageFilterIUL3_Pointer const & r);
     itkBinaryShapeOpeningImageFilterIUL3_Pointer & operator=(itkBinaryShapeOpeningImageFilterIUL3 * r);
     itkBinaryShapeOpeningImageFilterIUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryShapeOpeningImageFilterIUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryShapeOpeningImageFilterIUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned short const _arg);
     virtual unsigned short GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
   private:
     itkBinaryShapeOpeningImageFilterIUS2(itkBinaryShapeOpeningImageFilterIUS2 const & arg0);
     void operator=(itkBinaryShapeOpeningImageFilterIUS2 const & arg0);
   protected:
     itkBinaryShapeOpeningImageFilterIUS2();
     ~itkBinaryShapeOpeningImageFilterIUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryShapeOpeningImageFilterIUS2_Pointer {
   public:
     itkBinaryShapeOpeningImageFilterIUS2_Pointer();
     itkBinaryShapeOpeningImageFilterIUS2_Pointer(itkBinaryShapeOpeningImageFilterIUS2_Pointer const & p);
     itkBinaryShapeOpeningImageFilterIUS2_Pointer(itkBinaryShapeOpeningImageFilterIUS2 * p);
     ~itkBinaryShapeOpeningImageFilterIUS2_Pointer();
     itkBinaryShapeOpeningImageFilterIUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryShapeOpeningImageFilterIUS2 * GetPointer() const;
     bool operator<(itkBinaryShapeOpeningImageFilterIUS2_Pointer const & r) const;
     bool operator>(itkBinaryShapeOpeningImageFilterIUS2_Pointer const & r) const;
     bool operator<=(itkBinaryShapeOpeningImageFilterIUS2_Pointer const & r) const;
     bool operator>=(itkBinaryShapeOpeningImageFilterIUS2_Pointer const & r) const;
     itkBinaryShapeOpeningImageFilterIUS2_Pointer & operator=(itkBinaryShapeOpeningImageFilterIUS2_Pointer const & r);
     itkBinaryShapeOpeningImageFilterIUS2_Pointer & operator=(itkBinaryShapeOpeningImageFilterIUS2 * r);
     itkBinaryShapeOpeningImageFilterIUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryShapeOpeningImageFilterIUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryShapeOpeningImageFilterIUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned short const _arg);
     virtual unsigned short GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
   private:
     itkBinaryShapeOpeningImageFilterIUS3(itkBinaryShapeOpeningImageFilterIUS3 const & arg0);
     void operator=(itkBinaryShapeOpeningImageFilterIUS3 const & arg0);
   protected:
     itkBinaryShapeOpeningImageFilterIUS3();
     ~itkBinaryShapeOpeningImageFilterIUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryShapeOpeningImageFilterIUS3_Pointer {
   public:
     itkBinaryShapeOpeningImageFilterIUS3_Pointer();
     itkBinaryShapeOpeningImageFilterIUS3_Pointer(itkBinaryShapeOpeningImageFilterIUS3_Pointer const & p);
     itkBinaryShapeOpeningImageFilterIUS3_Pointer(itkBinaryShapeOpeningImageFilterIUS3 * p);
     ~itkBinaryShapeOpeningImageFilterIUS3_Pointer();
     itkBinaryShapeOpeningImageFilterIUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryShapeOpeningImageFilterIUS3 * GetPointer() const;
     bool operator<(itkBinaryShapeOpeningImageFilterIUS3_Pointer const & r) const;
     bool operator>(itkBinaryShapeOpeningImageFilterIUS3_Pointer const & r) const;
     bool operator<=(itkBinaryShapeOpeningImageFilterIUS3_Pointer const & r) const;
     bool operator>=(itkBinaryShapeOpeningImageFilterIUS3_Pointer const & r) const;
     itkBinaryShapeOpeningImageFilterIUS3_Pointer & operator=(itkBinaryShapeOpeningImageFilterIUS3_Pointer const & r);
     itkBinaryShapeOpeningImageFilterIUS3_Pointer & operator=(itkBinaryShapeOpeningImageFilterIUS3 * r);
     itkBinaryShapeOpeningImageFilterIUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


