# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkCannySegmentationLevelSetImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkCannySegmentationLevelSetImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkCannySegmentationLevelSetImageFilterPython
            return _itkCannySegmentationLevelSetImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkCannySegmentationLevelSetImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkCannySegmentationLevelSetImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkCannySegmentationLevelSetImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkSegmentationLevelSetImageFilterPython
import itkSegmentationLevelSetFunctionPython
import itkLevelSetFunctionPython
import itkFiniteDifferenceFunctionPython
import itkSparseFieldLevelSetImageFilterPython
import itkFiniteDifferenceImageFilterPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterAPython
def itkCannySegmentationLevelSetImageFilterID3ID3D_New():
  return itkCannySegmentationLevelSetImageFilterID3ID3D.New()

def itkCannySegmentationLevelSetImageFilterIF3IF3F_New():
  return itkCannySegmentationLevelSetImageFilterIF3IF3F.New()

def itkCannySegmentationLevelSetImageFilterID2ID2D_New():
  return itkCannySegmentationLevelSetImageFilterID2ID2D.New()

def itkCannySegmentationLevelSetImageFilterIF2IF2F_New():
  return itkCannySegmentationLevelSetImageFilterIF2IF2F.New()

class itkCannySegmentationLevelSetImageFilterID2ID2D(itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterID2ID2D):
    """Proxy of C++ itkCannySegmentationLevelSetImageFilterID2ID2D class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputHasNumericTraitsCheck = _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID2ID2D_OutputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID2ID2D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetThreshold(self, *args):
        """SetThreshold(self, double v)"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID2ID2D_SetThreshold(self, *args)

    def GetThreshold(self):
        """GetThreshold(self) -> double"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID2ID2D_GetThreshold(self)

    def SetVariance(self, *args):
        """SetVariance(self, double v)"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID2ID2D_SetVariance(self, *args)

    def GetVariance(self):
        """GetVariance(self) -> double"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID2ID2D_GetVariance(self)

    def GetCannyImage(self):
        """GetCannyImage(self) -> itkImageD2"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID2ID2D_GetCannyImage(self)

    __swig_destroy__ = _itkCannySegmentationLevelSetImageFilterPython.delete_itkCannySegmentationLevelSetImageFilterID2ID2D
    def cast(*args):
        """cast(itkLightObject obj) -> itkCannySegmentationLevelSetImageFilterID2ID2D"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID2ID2D_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkCannySegmentationLevelSetImageFilterID2ID2D"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID2ID2D_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkCannySegmentationLevelSetImageFilterID2ID2D
        
        Create a new object of the class itkCannySegmentationLevelSetImageFilterID2ID2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkCannySegmentationLevelSetImageFilterID2ID2D.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkCannySegmentationLevelSetImageFilterID2ID2D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkCannySegmentationLevelSetImageFilterID2ID2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkCannySegmentationLevelSetImageFilterID2ID2D.SetThreshold = new_instancemethod(_itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID2ID2D_SetThreshold,None,itkCannySegmentationLevelSetImageFilterID2ID2D)
itkCannySegmentationLevelSetImageFilterID2ID2D.GetThreshold = new_instancemethod(_itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID2ID2D_GetThreshold,None,itkCannySegmentationLevelSetImageFilterID2ID2D)
itkCannySegmentationLevelSetImageFilterID2ID2D.SetVariance = new_instancemethod(_itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID2ID2D_SetVariance,None,itkCannySegmentationLevelSetImageFilterID2ID2D)
itkCannySegmentationLevelSetImageFilterID2ID2D.GetVariance = new_instancemethod(_itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID2ID2D_GetVariance,None,itkCannySegmentationLevelSetImageFilterID2ID2D)
itkCannySegmentationLevelSetImageFilterID2ID2D.GetCannyImage = new_instancemethod(_itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID2ID2D_GetCannyImage,None,itkCannySegmentationLevelSetImageFilterID2ID2D)
itkCannySegmentationLevelSetImageFilterID2ID2D.GetPointer = new_instancemethod(_itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID2ID2D_GetPointer,None,itkCannySegmentationLevelSetImageFilterID2ID2D)
itkCannySegmentationLevelSetImageFilterID2ID2D_swigregister = _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID2ID2D_swigregister
itkCannySegmentationLevelSetImageFilterID2ID2D_swigregister(itkCannySegmentationLevelSetImageFilterID2ID2D)

def itkCannySegmentationLevelSetImageFilterID2ID2D___New_orig__():
  """itkCannySegmentationLevelSetImageFilterID2ID2D___New_orig__()"""
  return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID2ID2D___New_orig__()

def itkCannySegmentationLevelSetImageFilterID2ID2D_cast(*args):
  """itkCannySegmentationLevelSetImageFilterID2ID2D_cast(itkLightObject obj) -> itkCannySegmentationLevelSetImageFilterID2ID2D"""
  return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID2ID2D_cast(*args)

class itkCannySegmentationLevelSetImageFilterID3ID3D(itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterID3ID3D):
    """Proxy of C++ itkCannySegmentationLevelSetImageFilterID3ID3D class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputHasNumericTraitsCheck = _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID3ID3D_OutputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID3ID3D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetThreshold(self, *args):
        """SetThreshold(self, double v)"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID3ID3D_SetThreshold(self, *args)

    def GetThreshold(self):
        """GetThreshold(self) -> double"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID3ID3D_GetThreshold(self)

    def SetVariance(self, *args):
        """SetVariance(self, double v)"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID3ID3D_SetVariance(self, *args)

    def GetVariance(self):
        """GetVariance(self) -> double"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID3ID3D_GetVariance(self)

    def GetCannyImage(self):
        """GetCannyImage(self) -> itkImageD3"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID3ID3D_GetCannyImage(self)

    __swig_destroy__ = _itkCannySegmentationLevelSetImageFilterPython.delete_itkCannySegmentationLevelSetImageFilterID3ID3D
    def cast(*args):
        """cast(itkLightObject obj) -> itkCannySegmentationLevelSetImageFilterID3ID3D"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID3ID3D_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkCannySegmentationLevelSetImageFilterID3ID3D"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID3ID3D_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkCannySegmentationLevelSetImageFilterID3ID3D
        
        Create a new object of the class itkCannySegmentationLevelSetImageFilterID3ID3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkCannySegmentationLevelSetImageFilterID3ID3D.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkCannySegmentationLevelSetImageFilterID3ID3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkCannySegmentationLevelSetImageFilterID3ID3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkCannySegmentationLevelSetImageFilterID3ID3D.SetThreshold = new_instancemethod(_itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID3ID3D_SetThreshold,None,itkCannySegmentationLevelSetImageFilterID3ID3D)
itkCannySegmentationLevelSetImageFilterID3ID3D.GetThreshold = new_instancemethod(_itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID3ID3D_GetThreshold,None,itkCannySegmentationLevelSetImageFilterID3ID3D)
itkCannySegmentationLevelSetImageFilterID3ID3D.SetVariance = new_instancemethod(_itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID3ID3D_SetVariance,None,itkCannySegmentationLevelSetImageFilterID3ID3D)
itkCannySegmentationLevelSetImageFilterID3ID3D.GetVariance = new_instancemethod(_itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID3ID3D_GetVariance,None,itkCannySegmentationLevelSetImageFilterID3ID3D)
itkCannySegmentationLevelSetImageFilterID3ID3D.GetCannyImage = new_instancemethod(_itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID3ID3D_GetCannyImage,None,itkCannySegmentationLevelSetImageFilterID3ID3D)
itkCannySegmentationLevelSetImageFilterID3ID3D.GetPointer = new_instancemethod(_itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID3ID3D_GetPointer,None,itkCannySegmentationLevelSetImageFilterID3ID3D)
itkCannySegmentationLevelSetImageFilterID3ID3D_swigregister = _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID3ID3D_swigregister
itkCannySegmentationLevelSetImageFilterID3ID3D_swigregister(itkCannySegmentationLevelSetImageFilterID3ID3D)

def itkCannySegmentationLevelSetImageFilterID3ID3D___New_orig__():
  """itkCannySegmentationLevelSetImageFilterID3ID3D___New_orig__()"""
  return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID3ID3D___New_orig__()

def itkCannySegmentationLevelSetImageFilterID3ID3D_cast(*args):
  """itkCannySegmentationLevelSetImageFilterID3ID3D_cast(itkLightObject obj) -> itkCannySegmentationLevelSetImageFilterID3ID3D"""
  return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterID3ID3D_cast(*args)

class itkCannySegmentationLevelSetImageFilterIF2IF2F(itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F):
    """Proxy of C++ itkCannySegmentationLevelSetImageFilterIF2IF2F class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputHasNumericTraitsCheck = _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF2IF2F_OutputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF2IF2F___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetThreshold(self, *args):
        """SetThreshold(self, float v)"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF2IF2F_SetThreshold(self, *args)

    def GetThreshold(self):
        """GetThreshold(self) -> float"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF2IF2F_GetThreshold(self)

    def SetVariance(self, *args):
        """SetVariance(self, double v)"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF2IF2F_SetVariance(self, *args)

    def GetVariance(self):
        """GetVariance(self) -> double"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF2IF2F_GetVariance(self)

    def GetCannyImage(self):
        """GetCannyImage(self) -> itkImageF2"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF2IF2F_GetCannyImage(self)

    __swig_destroy__ = _itkCannySegmentationLevelSetImageFilterPython.delete_itkCannySegmentationLevelSetImageFilterIF2IF2F
    def cast(*args):
        """cast(itkLightObject obj) -> itkCannySegmentationLevelSetImageFilterIF2IF2F"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF2IF2F_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkCannySegmentationLevelSetImageFilterIF2IF2F"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF2IF2F_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkCannySegmentationLevelSetImageFilterIF2IF2F
        
        Create a new object of the class itkCannySegmentationLevelSetImageFilterIF2IF2F and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkCannySegmentationLevelSetImageFilterIF2IF2F.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkCannySegmentationLevelSetImageFilterIF2IF2F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkCannySegmentationLevelSetImageFilterIF2IF2F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkCannySegmentationLevelSetImageFilterIF2IF2F.SetThreshold = new_instancemethod(_itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF2IF2F_SetThreshold,None,itkCannySegmentationLevelSetImageFilterIF2IF2F)
itkCannySegmentationLevelSetImageFilterIF2IF2F.GetThreshold = new_instancemethod(_itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF2IF2F_GetThreshold,None,itkCannySegmentationLevelSetImageFilterIF2IF2F)
itkCannySegmentationLevelSetImageFilterIF2IF2F.SetVariance = new_instancemethod(_itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF2IF2F_SetVariance,None,itkCannySegmentationLevelSetImageFilterIF2IF2F)
itkCannySegmentationLevelSetImageFilterIF2IF2F.GetVariance = new_instancemethod(_itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF2IF2F_GetVariance,None,itkCannySegmentationLevelSetImageFilterIF2IF2F)
itkCannySegmentationLevelSetImageFilterIF2IF2F.GetCannyImage = new_instancemethod(_itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF2IF2F_GetCannyImage,None,itkCannySegmentationLevelSetImageFilterIF2IF2F)
itkCannySegmentationLevelSetImageFilterIF2IF2F.GetPointer = new_instancemethod(_itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF2IF2F_GetPointer,None,itkCannySegmentationLevelSetImageFilterIF2IF2F)
itkCannySegmentationLevelSetImageFilterIF2IF2F_swigregister = _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF2IF2F_swigregister
itkCannySegmentationLevelSetImageFilterIF2IF2F_swigregister(itkCannySegmentationLevelSetImageFilterIF2IF2F)

def itkCannySegmentationLevelSetImageFilterIF2IF2F___New_orig__():
  """itkCannySegmentationLevelSetImageFilterIF2IF2F___New_orig__()"""
  return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF2IF2F___New_orig__()

def itkCannySegmentationLevelSetImageFilterIF2IF2F_cast(*args):
  """itkCannySegmentationLevelSetImageFilterIF2IF2F_cast(itkLightObject obj) -> itkCannySegmentationLevelSetImageFilterIF2IF2F"""
  return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF2IF2F_cast(*args)

class itkCannySegmentationLevelSetImageFilterIF3IF3F(itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F):
    """Proxy of C++ itkCannySegmentationLevelSetImageFilterIF3IF3F class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputHasNumericTraitsCheck = _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF3IF3F_OutputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF3IF3F___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetThreshold(self, *args):
        """SetThreshold(self, float v)"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF3IF3F_SetThreshold(self, *args)

    def GetThreshold(self):
        """GetThreshold(self) -> float"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF3IF3F_GetThreshold(self)

    def SetVariance(self, *args):
        """SetVariance(self, double v)"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF3IF3F_SetVariance(self, *args)

    def GetVariance(self):
        """GetVariance(self) -> double"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF3IF3F_GetVariance(self)

    def GetCannyImage(self):
        """GetCannyImage(self) -> itkImageF3"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF3IF3F_GetCannyImage(self)

    __swig_destroy__ = _itkCannySegmentationLevelSetImageFilterPython.delete_itkCannySegmentationLevelSetImageFilterIF3IF3F
    def cast(*args):
        """cast(itkLightObject obj) -> itkCannySegmentationLevelSetImageFilterIF3IF3F"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF3IF3F_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkCannySegmentationLevelSetImageFilterIF3IF3F"""
        return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF3IF3F_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkCannySegmentationLevelSetImageFilterIF3IF3F
        
        Create a new object of the class itkCannySegmentationLevelSetImageFilterIF3IF3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkCannySegmentationLevelSetImageFilterIF3IF3F.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkCannySegmentationLevelSetImageFilterIF3IF3F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkCannySegmentationLevelSetImageFilterIF3IF3F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkCannySegmentationLevelSetImageFilterIF3IF3F.SetThreshold = new_instancemethod(_itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF3IF3F_SetThreshold,None,itkCannySegmentationLevelSetImageFilterIF3IF3F)
itkCannySegmentationLevelSetImageFilterIF3IF3F.GetThreshold = new_instancemethod(_itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF3IF3F_GetThreshold,None,itkCannySegmentationLevelSetImageFilterIF3IF3F)
itkCannySegmentationLevelSetImageFilterIF3IF3F.SetVariance = new_instancemethod(_itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF3IF3F_SetVariance,None,itkCannySegmentationLevelSetImageFilterIF3IF3F)
itkCannySegmentationLevelSetImageFilterIF3IF3F.GetVariance = new_instancemethod(_itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF3IF3F_GetVariance,None,itkCannySegmentationLevelSetImageFilterIF3IF3F)
itkCannySegmentationLevelSetImageFilterIF3IF3F.GetCannyImage = new_instancemethod(_itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF3IF3F_GetCannyImage,None,itkCannySegmentationLevelSetImageFilterIF3IF3F)
itkCannySegmentationLevelSetImageFilterIF3IF3F.GetPointer = new_instancemethod(_itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF3IF3F_GetPointer,None,itkCannySegmentationLevelSetImageFilterIF3IF3F)
itkCannySegmentationLevelSetImageFilterIF3IF3F_swigregister = _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF3IF3F_swigregister
itkCannySegmentationLevelSetImageFilterIF3IF3F_swigregister(itkCannySegmentationLevelSetImageFilterIF3IF3F)

def itkCannySegmentationLevelSetImageFilterIF3IF3F___New_orig__():
  """itkCannySegmentationLevelSetImageFilterIF3IF3F___New_orig__()"""
  return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF3IF3F___New_orig__()

def itkCannySegmentationLevelSetImageFilterIF3IF3F_cast(*args):
  """itkCannySegmentationLevelSetImageFilterIF3IF3F_cast(itkLightObject obj) -> itkCannySegmentationLevelSetImageFilterIF3IF3F"""
  return _itkCannySegmentationLevelSetImageFilterPython.itkCannySegmentationLevelSetImageFilterIF3IF3F_cast(*args)



