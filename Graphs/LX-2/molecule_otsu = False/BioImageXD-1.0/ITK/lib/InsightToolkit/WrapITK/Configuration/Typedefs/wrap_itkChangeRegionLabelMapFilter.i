// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkChangeRegionLabelMapFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkChangeRegionLabelMapFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkChangeRegionLabelMapFilterGuile
#endif
#ifdef SWIGJAVA
%module itkChangeRegionLabelMapFilterJava
#endif
#ifdef SWIGLUA
%module itkChangeRegionLabelMapFilterLua
#endif
#ifdef SWIGMODULA3
%module itkChangeRegionLabelMapFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkChangeRegionLabelMapFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkChangeRegionLabelMapFilterOcaml
#endif
#ifdef SWIGPERL
%module itkChangeRegionLabelMapFilterPerl
#endif
#ifdef SWIGPERL5
%module itkChangeRegionLabelMapFilterPerl5
#endif
#ifdef SWIGPHP
%module itkChangeRegionLabelMapFilterPhp
#endif
#ifdef SWIGPHP4
%module itkChangeRegionLabelMapFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkChangeRegionLabelMapFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkChangeRegionLabelMapFilterPike
#endif
#ifdef SWIGPYTHON
%module itkChangeRegionLabelMapFilterPython
#endif
#ifdef SWIGR
%module itkChangeRegionLabelMapFilterR
#endif
#ifdef SWIGRUBY
%module itkChangeRegionLabelMapFilterRuby
#endif
#ifdef SWIGSEXP
%module itkChangeRegionLabelMapFilterSexp
#endif
#ifdef SWIGTCL
%module itkChangeRegionLabelMapFilterTcl
#endif
#ifdef SWIGXML
%module itkChangeRegionLabelMapFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "Numerics.includes"
#include "BinaryMorphology.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_ITKRegions.i
%import wrap_itkStatisticsLabelObject.i
%import wrap_itkInPlaceLabelMapFilter.i


%include itk.i
%include wrap_itkChangeRegionLabelMapFilter_ext.i


 class itkChangeRegionLabelMapFilterLM2 : public itkInPlaceLabelMapFilterLM2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     static itkChangeRegionLabelMapFilterLM2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetRegion(itkImageRegion2 const _arg);
     virtual itkImageRegion2 const & GetRegion() const;
   private:
     itkChangeRegionLabelMapFilterLM2(itkChangeRegionLabelMapFilterLM2 const & arg0);
     void operator=(itkChangeRegionLabelMapFilterLM2 const & arg0);
   protected:
     itkChangeRegionLabelMapFilterLM2();
     ~itkChangeRegionLabelMapFilterLM2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedProcessLabelObject(itkStatisticsLabelObjectUL2 * labelObject);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateOutputInformation();
     virtual void GenerateData();
 };


 class itkChangeRegionLabelMapFilterLM2_Pointer {
   public:
     itkChangeRegionLabelMapFilterLM2_Pointer();
     itkChangeRegionLabelMapFilterLM2_Pointer(itkChangeRegionLabelMapFilterLM2_Pointer const & p);
     itkChangeRegionLabelMapFilterLM2_Pointer(itkChangeRegionLabelMapFilterLM2 * p);
     ~itkChangeRegionLabelMapFilterLM2_Pointer();
     itkChangeRegionLabelMapFilterLM2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkChangeRegionLabelMapFilterLM2 * GetPointer() const;
     bool operator<(itkChangeRegionLabelMapFilterLM2_Pointer const & r) const;
     bool operator>(itkChangeRegionLabelMapFilterLM2_Pointer const & r) const;
     bool operator<=(itkChangeRegionLabelMapFilterLM2_Pointer const & r) const;
     bool operator>=(itkChangeRegionLabelMapFilterLM2_Pointer const & r) const;
     itkChangeRegionLabelMapFilterLM2_Pointer & operator=(itkChangeRegionLabelMapFilterLM2_Pointer const & r);
     itkChangeRegionLabelMapFilterLM2_Pointer & operator=(itkChangeRegionLabelMapFilterLM2 * r);
     itkChangeRegionLabelMapFilterLM2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkChangeRegionLabelMapFilterLM3 : public itkInPlaceLabelMapFilterLM3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     static itkChangeRegionLabelMapFilterLM3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetRegion(itkImageRegion3 const _arg);
     virtual itkImageRegion3 const & GetRegion() const;
   private:
     itkChangeRegionLabelMapFilterLM3(itkChangeRegionLabelMapFilterLM3 const & arg0);
     void operator=(itkChangeRegionLabelMapFilterLM3 const & arg0);
   protected:
     itkChangeRegionLabelMapFilterLM3();
     ~itkChangeRegionLabelMapFilterLM3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedProcessLabelObject(itkStatisticsLabelObjectUL3 * labelObject);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateOutputInformation();
     virtual void GenerateData();
 };


 class itkChangeRegionLabelMapFilterLM3_Pointer {
   public:
     itkChangeRegionLabelMapFilterLM3_Pointer();
     itkChangeRegionLabelMapFilterLM3_Pointer(itkChangeRegionLabelMapFilterLM3_Pointer const & p);
     itkChangeRegionLabelMapFilterLM3_Pointer(itkChangeRegionLabelMapFilterLM3 * p);
     ~itkChangeRegionLabelMapFilterLM3_Pointer();
     itkChangeRegionLabelMapFilterLM3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkChangeRegionLabelMapFilterLM3 * GetPointer() const;
     bool operator<(itkChangeRegionLabelMapFilterLM3_Pointer const & r) const;
     bool operator>(itkChangeRegionLabelMapFilterLM3_Pointer const & r) const;
     bool operator<=(itkChangeRegionLabelMapFilterLM3_Pointer const & r) const;
     bool operator>=(itkChangeRegionLabelMapFilterLM3_Pointer const & r) const;
     itkChangeRegionLabelMapFilterLM3_Pointer & operator=(itkChangeRegionLabelMapFilterLM3_Pointer const & r);
     itkChangeRegionLabelMapFilterLM3_Pointer & operator=(itkChangeRegionLabelMapFilterLM3 * r);
     itkChangeRegionLabelMapFilterLM3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


