// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkVectorCurvatureAnisotropicDiffusionImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkVectorCurvatureAnisotropicDiffusionImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkVectorCurvatureAnisotropicDiffusionImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkVectorCurvatureAnisotropicDiffusionImageFilterJava
#endif
#ifdef SWIGLUA
%module itkVectorCurvatureAnisotropicDiffusionImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkVectorCurvatureAnisotropicDiffusionImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkVectorCurvatureAnisotropicDiffusionImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkVectorCurvatureAnisotropicDiffusionImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkVectorCurvatureAnisotropicDiffusionImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkVectorCurvatureAnisotropicDiffusionImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkVectorCurvatureAnisotropicDiffusionImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkVectorCurvatureAnisotropicDiffusionImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkVectorCurvatureAnisotropicDiffusionImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkVectorCurvatureAnisotropicDiffusionImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkVectorCurvatureAnisotropicDiffusionImageFilterPython
#endif
#ifdef SWIGR
%module itkVectorCurvatureAnisotropicDiffusionImageFilterR
#endif
#ifdef SWIGRUBY
%module itkVectorCurvatureAnisotropicDiffusionImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkVectorCurvatureAnisotropicDiffusionImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkVectorCurvatureAnisotropicDiffusionImageFilterTcl
#endif
#ifdef SWIGXML
%module itkVectorCurvatureAnisotropicDiffusionImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Denoising.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkAnisotropicDiffusionImageFilter.i


%include itk.i
%include wrap_itkVectorCurvatureAnisotropicDiffusionImageFilter_ext.i


 class itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22 : public itkAnisotropicDiffusionImageFilterICVF22ICVF22 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22(itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22 const & arg0);
     void operator=(itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22 const & arg0);
   protected:
     itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22();
     ~itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22();
     virtual void InitializeIteration();
 };


 class itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer {
   public:
     itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer();
     itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer(itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer const & p);
     itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer(itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22 * p);
     ~itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer();
     itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22 * GetPointer() const;
     bool operator<(itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer const & r) const;
     bool operator>(itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer const & r) const;
     bool operator<=(itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer const & r) const;
     bool operator>=(itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer const & r) const;
     itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer & operator=(itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer const & r);
     itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer & operator=(itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22 * r);
     itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33 : public itkAnisotropicDiffusionImageFilterICVF33ICVF33 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33(itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33 const & arg0);
     void operator=(itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33 const & arg0);
   protected:
     itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33();
     ~itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33();
     virtual void InitializeIteration();
 };


 class itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer {
   public:
     itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer();
     itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer(itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer const & p);
     itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer(itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33 * p);
     ~itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer();
     itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33 * GetPointer() const;
     bool operator<(itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer const & r) const;
     bool operator>(itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer const & r) const;
     bool operator<=(itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer const & r) const;
     bool operator>=(itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer const & r) const;
     itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer & operator=(itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer const & r);
     itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer & operator=(itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33 * r);
     itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22 : public itkAnisotropicDiffusionImageFilterIVF22IVF22 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22(itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22 const & arg0);
     void operator=(itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22 const & arg0);
   protected:
     itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22();
     ~itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22();
     virtual void InitializeIteration();
 };


 class itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_Pointer {
   public:
     itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_Pointer();
     itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_Pointer(itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_Pointer const & p);
     itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_Pointer(itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22 * p);
     ~itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_Pointer();
     itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22 * GetPointer() const;
     bool operator<(itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_Pointer const & r) const;
     bool operator>(itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_Pointer const & r) const;
     bool operator<=(itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_Pointer const & r) const;
     bool operator>=(itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_Pointer const & r) const;
     itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_Pointer & operator=(itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_Pointer const & r);
     itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_Pointer & operator=(itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22 * r);
     itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33 : public itkAnisotropicDiffusionImageFilterIVF33IVF33 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33(itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33 const & arg0);
     void operator=(itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33 const & arg0);
   protected:
     itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33();
     ~itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33();
     virtual void InitializeIteration();
 };


 class itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_Pointer {
   public:
     itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_Pointer();
     itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_Pointer(itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_Pointer const & p);
     itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_Pointer(itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33 * p);
     ~itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_Pointer();
     itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33 * GetPointer() const;
     bool operator<(itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_Pointer const & r) const;
     bool operator>(itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_Pointer const & r) const;
     bool operator<=(itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_Pointer const & r) const;
     bool operator>=(itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_Pointer const & r) const;
     itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_Pointer & operator=(itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_Pointer const & r);
     itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_Pointer & operator=(itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33 * r);
     itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


