// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkSignedMaurerDistanceMapImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkSignedMaurerDistanceMapImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkSignedMaurerDistanceMapImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkSignedMaurerDistanceMapImageFilterJava
#endif
#ifdef SWIGLUA
%module itkSignedMaurerDistanceMapImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkSignedMaurerDistanceMapImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkSignedMaurerDistanceMapImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkSignedMaurerDistanceMapImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkSignedMaurerDistanceMapImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkSignedMaurerDistanceMapImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkSignedMaurerDistanceMapImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkSignedMaurerDistanceMapImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkSignedMaurerDistanceMapImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkSignedMaurerDistanceMapImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkSignedMaurerDistanceMapImageFilterPython
#endif
#ifdef SWIGR
%module itkSignedMaurerDistanceMapImageFilterR
#endif
#ifdef SWIGRUBY
%module itkSignedMaurerDistanceMapImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkSignedMaurerDistanceMapImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkSignedMaurerDistanceMapImageFilterTcl
#endif
#ifdef SWIGXML
%module itkSignedMaurerDistanceMapImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "DistanceMap.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_ITKRegions.i
%import wrap_itkImageToImageFilterA.i
%import wrap_itkIndex.i


%include itk.i
%include wrap_itkSignedMaurerDistanceMapImageFilter_ext.i


 class itkSignedMaurerDistanceMapImageFilterID2ID2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     static itkSignedMaurerDistanceMapImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetBackgroundValue(double const _arg);
     virtual double const & GetBackgroundValue() const;
   private:
     itkSignedMaurerDistanceMapImageFilterID2ID2(itkSignedMaurerDistanceMapImageFilterID2ID2 const & arg0);
     void operator=(itkSignedMaurerDistanceMapImageFilterID2ID2 const & arg0);
     void Voronoi(unsigned int arg0, itkIndex2 arg1);
     bool Remove(double arg0, double arg1, double arg2, double arg3, double arg4, double arg5);
   protected:
     itkSignedMaurerDistanceMapImageFilterID2ID2();
     ~itkSignedMaurerDistanceMapImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual int SplitRequestedRegion(int i, int num, itkImageRegion2 & splitRegion);
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkSignedMaurerDistanceMapImageFilterID2ID2_Pointer {
   public:
     itkSignedMaurerDistanceMapImageFilterID2ID2_Pointer();
     itkSignedMaurerDistanceMapImageFilterID2ID2_Pointer(itkSignedMaurerDistanceMapImageFilterID2ID2_Pointer const & p);
     itkSignedMaurerDistanceMapImageFilterID2ID2_Pointer(itkSignedMaurerDistanceMapImageFilterID2ID2 * p);
     ~itkSignedMaurerDistanceMapImageFilterID2ID2_Pointer();
     itkSignedMaurerDistanceMapImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedMaurerDistanceMapImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkSignedMaurerDistanceMapImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkSignedMaurerDistanceMapImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkSignedMaurerDistanceMapImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkSignedMaurerDistanceMapImageFilterID2ID2_Pointer const & r) const;
     itkSignedMaurerDistanceMapImageFilterID2ID2_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterID2ID2_Pointer const & r);
     itkSignedMaurerDistanceMapImageFilterID2ID2_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterID2ID2 * r);
     itkSignedMaurerDistanceMapImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSignedMaurerDistanceMapImageFilterID3ID3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     static itkSignedMaurerDistanceMapImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetBackgroundValue(double const _arg);
     virtual double const & GetBackgroundValue() const;
   private:
     itkSignedMaurerDistanceMapImageFilterID3ID3(itkSignedMaurerDistanceMapImageFilterID3ID3 const & arg0);
     void operator=(itkSignedMaurerDistanceMapImageFilterID3ID3 const & arg0);
     void Voronoi(unsigned int arg0, itkIndex3 arg1);
     bool Remove(double arg0, double arg1, double arg2, double arg3, double arg4, double arg5);
   protected:
     itkSignedMaurerDistanceMapImageFilterID3ID3();
     ~itkSignedMaurerDistanceMapImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual int SplitRequestedRegion(int i, int num, itkImageRegion3 & splitRegion);
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkSignedMaurerDistanceMapImageFilterID3ID3_Pointer {
   public:
     itkSignedMaurerDistanceMapImageFilterID3ID3_Pointer();
     itkSignedMaurerDistanceMapImageFilterID3ID3_Pointer(itkSignedMaurerDistanceMapImageFilterID3ID3_Pointer const & p);
     itkSignedMaurerDistanceMapImageFilterID3ID3_Pointer(itkSignedMaurerDistanceMapImageFilterID3ID3 * p);
     ~itkSignedMaurerDistanceMapImageFilterID3ID3_Pointer();
     itkSignedMaurerDistanceMapImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedMaurerDistanceMapImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkSignedMaurerDistanceMapImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkSignedMaurerDistanceMapImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkSignedMaurerDistanceMapImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkSignedMaurerDistanceMapImageFilterID3ID3_Pointer const & r) const;
     itkSignedMaurerDistanceMapImageFilterID3ID3_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterID3ID3_Pointer const & r);
     itkSignedMaurerDistanceMapImageFilterID3ID3_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterID3ID3 * r);
     itkSignedMaurerDistanceMapImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSignedMaurerDistanceMapImageFilterIF2IF2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     static itkSignedMaurerDistanceMapImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetBackgroundValue(float const _arg);
     virtual float const & GetBackgroundValue() const;
   private:
     itkSignedMaurerDistanceMapImageFilterIF2IF2(itkSignedMaurerDistanceMapImageFilterIF2IF2 const & arg0);
     void operator=(itkSignedMaurerDistanceMapImageFilterIF2IF2 const & arg0);
     void Voronoi(unsigned int arg0, itkIndex2 arg1);
     bool Remove(float arg0, float arg1, float arg2, float arg3, float arg4, float arg5);
   protected:
     itkSignedMaurerDistanceMapImageFilterIF2IF2();
     ~itkSignedMaurerDistanceMapImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual int SplitRequestedRegion(int i, int num, itkImageRegion2 & splitRegion);
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkSignedMaurerDistanceMapImageFilterIF2IF2_Pointer {
   public:
     itkSignedMaurerDistanceMapImageFilterIF2IF2_Pointer();
     itkSignedMaurerDistanceMapImageFilterIF2IF2_Pointer(itkSignedMaurerDistanceMapImageFilterIF2IF2_Pointer const & p);
     itkSignedMaurerDistanceMapImageFilterIF2IF2_Pointer(itkSignedMaurerDistanceMapImageFilterIF2IF2 * p);
     ~itkSignedMaurerDistanceMapImageFilterIF2IF2_Pointer();
     itkSignedMaurerDistanceMapImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedMaurerDistanceMapImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkSignedMaurerDistanceMapImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkSignedMaurerDistanceMapImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkSignedMaurerDistanceMapImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkSignedMaurerDistanceMapImageFilterIF2IF2_Pointer const & r) const;
     itkSignedMaurerDistanceMapImageFilterIF2IF2_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterIF2IF2_Pointer const & r);
     itkSignedMaurerDistanceMapImageFilterIF2IF2_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterIF2IF2 * r);
     itkSignedMaurerDistanceMapImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSignedMaurerDistanceMapImageFilterIF3IF3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     static itkSignedMaurerDistanceMapImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetBackgroundValue(float const _arg);
     virtual float const & GetBackgroundValue() const;
   private:
     itkSignedMaurerDistanceMapImageFilterIF3IF3(itkSignedMaurerDistanceMapImageFilterIF3IF3 const & arg0);
     void operator=(itkSignedMaurerDistanceMapImageFilterIF3IF3 const & arg0);
     void Voronoi(unsigned int arg0, itkIndex3 arg1);
     bool Remove(float arg0, float arg1, float arg2, float arg3, float arg4, float arg5);
   protected:
     itkSignedMaurerDistanceMapImageFilterIF3IF3();
     ~itkSignedMaurerDistanceMapImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual int SplitRequestedRegion(int i, int num, itkImageRegion3 & splitRegion);
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkSignedMaurerDistanceMapImageFilterIF3IF3_Pointer {
   public:
     itkSignedMaurerDistanceMapImageFilterIF3IF3_Pointer();
     itkSignedMaurerDistanceMapImageFilterIF3IF3_Pointer(itkSignedMaurerDistanceMapImageFilterIF3IF3_Pointer const & p);
     itkSignedMaurerDistanceMapImageFilterIF3IF3_Pointer(itkSignedMaurerDistanceMapImageFilterIF3IF3 * p);
     ~itkSignedMaurerDistanceMapImageFilterIF3IF3_Pointer();
     itkSignedMaurerDistanceMapImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedMaurerDistanceMapImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkSignedMaurerDistanceMapImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkSignedMaurerDistanceMapImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkSignedMaurerDistanceMapImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkSignedMaurerDistanceMapImageFilterIF3IF3_Pointer const & r) const;
     itkSignedMaurerDistanceMapImageFilterIF3IF3_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterIF3IF3_Pointer const & r);
     itkSignedMaurerDistanceMapImageFilterIF3IF3_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterIF3IF3 * r);
     itkSignedMaurerDistanceMapImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSignedMaurerDistanceMapImageFilterIUC2ID2 : public itkImageToImageFilterIUC2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     static itkSignedMaurerDistanceMapImageFilterIUC2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char const & GetBackgroundValue() const;
   private:
     itkSignedMaurerDistanceMapImageFilterIUC2ID2(itkSignedMaurerDistanceMapImageFilterIUC2ID2 const & arg0);
     void operator=(itkSignedMaurerDistanceMapImageFilterIUC2ID2 const & arg0);
     void Voronoi(unsigned int arg0, itkIndex2 arg1);
     bool Remove(double arg0, double arg1, double arg2, double arg3, double arg4, double arg5);
   protected:
     itkSignedMaurerDistanceMapImageFilterIUC2ID2();
     ~itkSignedMaurerDistanceMapImageFilterIUC2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual int SplitRequestedRegion(int i, int num, itkImageRegion2 & splitRegion);
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkSignedMaurerDistanceMapImageFilterIUC2ID2_Pointer {
   public:
     itkSignedMaurerDistanceMapImageFilterIUC2ID2_Pointer();
     itkSignedMaurerDistanceMapImageFilterIUC2ID2_Pointer(itkSignedMaurerDistanceMapImageFilterIUC2ID2_Pointer const & p);
     itkSignedMaurerDistanceMapImageFilterIUC2ID2_Pointer(itkSignedMaurerDistanceMapImageFilterIUC2ID2 * p);
     ~itkSignedMaurerDistanceMapImageFilterIUC2ID2_Pointer();
     itkSignedMaurerDistanceMapImageFilterIUC2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedMaurerDistanceMapImageFilterIUC2ID2 * GetPointer() const;
     bool operator<(itkSignedMaurerDistanceMapImageFilterIUC2ID2_Pointer const & r) const;
     bool operator>(itkSignedMaurerDistanceMapImageFilterIUC2ID2_Pointer const & r) const;
     bool operator<=(itkSignedMaurerDistanceMapImageFilterIUC2ID2_Pointer const & r) const;
     bool operator>=(itkSignedMaurerDistanceMapImageFilterIUC2ID2_Pointer const & r) const;
     itkSignedMaurerDistanceMapImageFilterIUC2ID2_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterIUC2ID2_Pointer const & r);
     itkSignedMaurerDistanceMapImageFilterIUC2ID2_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterIUC2ID2 * r);
     itkSignedMaurerDistanceMapImageFilterIUC2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSignedMaurerDistanceMapImageFilterIUC2IF2 : public itkImageToImageFilterIUC2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     static itkSignedMaurerDistanceMapImageFilterIUC2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char const & GetBackgroundValue() const;
   private:
     itkSignedMaurerDistanceMapImageFilterIUC2IF2(itkSignedMaurerDistanceMapImageFilterIUC2IF2 const & arg0);
     void operator=(itkSignedMaurerDistanceMapImageFilterIUC2IF2 const & arg0);
     void Voronoi(unsigned int arg0, itkIndex2 arg1);
     bool Remove(float arg0, float arg1, float arg2, float arg3, float arg4, float arg5);
   protected:
     itkSignedMaurerDistanceMapImageFilterIUC2IF2();
     ~itkSignedMaurerDistanceMapImageFilterIUC2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual int SplitRequestedRegion(int i, int num, itkImageRegion2 & splitRegion);
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkSignedMaurerDistanceMapImageFilterIUC2IF2_Pointer {
   public:
     itkSignedMaurerDistanceMapImageFilterIUC2IF2_Pointer();
     itkSignedMaurerDistanceMapImageFilterIUC2IF2_Pointer(itkSignedMaurerDistanceMapImageFilterIUC2IF2_Pointer const & p);
     itkSignedMaurerDistanceMapImageFilterIUC2IF2_Pointer(itkSignedMaurerDistanceMapImageFilterIUC2IF2 * p);
     ~itkSignedMaurerDistanceMapImageFilterIUC2IF2_Pointer();
     itkSignedMaurerDistanceMapImageFilterIUC2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedMaurerDistanceMapImageFilterIUC2IF2 * GetPointer() const;
     bool operator<(itkSignedMaurerDistanceMapImageFilterIUC2IF2_Pointer const & r) const;
     bool operator>(itkSignedMaurerDistanceMapImageFilterIUC2IF2_Pointer const & r) const;
     bool operator<=(itkSignedMaurerDistanceMapImageFilterIUC2IF2_Pointer const & r) const;
     bool operator>=(itkSignedMaurerDistanceMapImageFilterIUC2IF2_Pointer const & r) const;
     itkSignedMaurerDistanceMapImageFilterIUC2IF2_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterIUC2IF2_Pointer const & r);
     itkSignedMaurerDistanceMapImageFilterIUC2IF2_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterIUC2IF2 * r);
     itkSignedMaurerDistanceMapImageFilterIUC2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSignedMaurerDistanceMapImageFilterIUC3ID3 : public itkImageToImageFilterIUC3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     static itkSignedMaurerDistanceMapImageFilterIUC3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char const & GetBackgroundValue() const;
   private:
     itkSignedMaurerDistanceMapImageFilterIUC3ID3(itkSignedMaurerDistanceMapImageFilterIUC3ID3 const & arg0);
     void operator=(itkSignedMaurerDistanceMapImageFilterIUC3ID3 const & arg0);
     void Voronoi(unsigned int arg0, itkIndex3 arg1);
     bool Remove(double arg0, double arg1, double arg2, double arg3, double arg4, double arg5);
   protected:
     itkSignedMaurerDistanceMapImageFilterIUC3ID3();
     ~itkSignedMaurerDistanceMapImageFilterIUC3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual int SplitRequestedRegion(int i, int num, itkImageRegion3 & splitRegion);
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkSignedMaurerDistanceMapImageFilterIUC3ID3_Pointer {
   public:
     itkSignedMaurerDistanceMapImageFilterIUC3ID3_Pointer();
     itkSignedMaurerDistanceMapImageFilterIUC3ID3_Pointer(itkSignedMaurerDistanceMapImageFilterIUC3ID3_Pointer const & p);
     itkSignedMaurerDistanceMapImageFilterIUC3ID3_Pointer(itkSignedMaurerDistanceMapImageFilterIUC3ID3 * p);
     ~itkSignedMaurerDistanceMapImageFilterIUC3ID3_Pointer();
     itkSignedMaurerDistanceMapImageFilterIUC3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedMaurerDistanceMapImageFilterIUC3ID3 * GetPointer() const;
     bool operator<(itkSignedMaurerDistanceMapImageFilterIUC3ID3_Pointer const & r) const;
     bool operator>(itkSignedMaurerDistanceMapImageFilterIUC3ID3_Pointer const & r) const;
     bool operator<=(itkSignedMaurerDistanceMapImageFilterIUC3ID3_Pointer const & r) const;
     bool operator>=(itkSignedMaurerDistanceMapImageFilterIUC3ID3_Pointer const & r) const;
     itkSignedMaurerDistanceMapImageFilterIUC3ID3_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterIUC3ID3_Pointer const & r);
     itkSignedMaurerDistanceMapImageFilterIUC3ID3_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterIUC3ID3 * r);
     itkSignedMaurerDistanceMapImageFilterIUC3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSignedMaurerDistanceMapImageFilterIUC3IF3 : public itkImageToImageFilterIUC3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     static itkSignedMaurerDistanceMapImageFilterIUC3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char const & GetBackgroundValue() const;
   private:
     itkSignedMaurerDistanceMapImageFilterIUC3IF3(itkSignedMaurerDistanceMapImageFilterIUC3IF3 const & arg0);
     void operator=(itkSignedMaurerDistanceMapImageFilterIUC3IF3 const & arg0);
     void Voronoi(unsigned int arg0, itkIndex3 arg1);
     bool Remove(float arg0, float arg1, float arg2, float arg3, float arg4, float arg5);
   protected:
     itkSignedMaurerDistanceMapImageFilterIUC3IF3();
     ~itkSignedMaurerDistanceMapImageFilterIUC3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual int SplitRequestedRegion(int i, int num, itkImageRegion3 & splitRegion);
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkSignedMaurerDistanceMapImageFilterIUC3IF3_Pointer {
   public:
     itkSignedMaurerDistanceMapImageFilterIUC3IF3_Pointer();
     itkSignedMaurerDistanceMapImageFilterIUC3IF3_Pointer(itkSignedMaurerDistanceMapImageFilterIUC3IF3_Pointer const & p);
     itkSignedMaurerDistanceMapImageFilterIUC3IF3_Pointer(itkSignedMaurerDistanceMapImageFilterIUC3IF3 * p);
     ~itkSignedMaurerDistanceMapImageFilterIUC3IF3_Pointer();
     itkSignedMaurerDistanceMapImageFilterIUC3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedMaurerDistanceMapImageFilterIUC3IF3 * GetPointer() const;
     bool operator<(itkSignedMaurerDistanceMapImageFilterIUC3IF3_Pointer const & r) const;
     bool operator>(itkSignedMaurerDistanceMapImageFilterIUC3IF3_Pointer const & r) const;
     bool operator<=(itkSignedMaurerDistanceMapImageFilterIUC3IF3_Pointer const & r) const;
     bool operator>=(itkSignedMaurerDistanceMapImageFilterIUC3IF3_Pointer const & r) const;
     itkSignedMaurerDistanceMapImageFilterIUC3IF3_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterIUC3IF3_Pointer const & r);
     itkSignedMaurerDistanceMapImageFilterIUC3IF3_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterIUC3IF3 * r);
     itkSignedMaurerDistanceMapImageFilterIUC3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSignedMaurerDistanceMapImageFilterIUL2ID2 : public itkImageToImageFilterIUL2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     static itkSignedMaurerDistanceMapImageFilterIUL2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long const & GetBackgroundValue() const;
   private:
     itkSignedMaurerDistanceMapImageFilterIUL2ID2(itkSignedMaurerDistanceMapImageFilterIUL2ID2 const & arg0);
     void operator=(itkSignedMaurerDistanceMapImageFilterIUL2ID2 const & arg0);
     void Voronoi(unsigned int arg0, itkIndex2 arg1);
     bool Remove(double arg0, double arg1, double arg2, double arg3, double arg4, double arg5);
   protected:
     itkSignedMaurerDistanceMapImageFilterIUL2ID2();
     ~itkSignedMaurerDistanceMapImageFilterIUL2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual int SplitRequestedRegion(int i, int num, itkImageRegion2 & splitRegion);
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkSignedMaurerDistanceMapImageFilterIUL2ID2_Pointer {
   public:
     itkSignedMaurerDistanceMapImageFilterIUL2ID2_Pointer();
     itkSignedMaurerDistanceMapImageFilterIUL2ID2_Pointer(itkSignedMaurerDistanceMapImageFilterIUL2ID2_Pointer const & p);
     itkSignedMaurerDistanceMapImageFilterIUL2ID2_Pointer(itkSignedMaurerDistanceMapImageFilterIUL2ID2 * p);
     ~itkSignedMaurerDistanceMapImageFilterIUL2ID2_Pointer();
     itkSignedMaurerDistanceMapImageFilterIUL2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedMaurerDistanceMapImageFilterIUL2ID2 * GetPointer() const;
     bool operator<(itkSignedMaurerDistanceMapImageFilterIUL2ID2_Pointer const & r) const;
     bool operator>(itkSignedMaurerDistanceMapImageFilterIUL2ID2_Pointer const & r) const;
     bool operator<=(itkSignedMaurerDistanceMapImageFilterIUL2ID2_Pointer const & r) const;
     bool operator>=(itkSignedMaurerDistanceMapImageFilterIUL2ID2_Pointer const & r) const;
     itkSignedMaurerDistanceMapImageFilterIUL2ID2_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterIUL2ID2_Pointer const & r);
     itkSignedMaurerDistanceMapImageFilterIUL2ID2_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterIUL2ID2 * r);
     itkSignedMaurerDistanceMapImageFilterIUL2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSignedMaurerDistanceMapImageFilterIUL2IF2 : public itkImageToImageFilterIUL2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     static itkSignedMaurerDistanceMapImageFilterIUL2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long const & GetBackgroundValue() const;
   private:
     itkSignedMaurerDistanceMapImageFilterIUL2IF2(itkSignedMaurerDistanceMapImageFilterIUL2IF2 const & arg0);
     void operator=(itkSignedMaurerDistanceMapImageFilterIUL2IF2 const & arg0);
     void Voronoi(unsigned int arg0, itkIndex2 arg1);
     bool Remove(float arg0, float arg1, float arg2, float arg3, float arg4, float arg5);
   protected:
     itkSignedMaurerDistanceMapImageFilterIUL2IF2();
     ~itkSignedMaurerDistanceMapImageFilterIUL2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual int SplitRequestedRegion(int i, int num, itkImageRegion2 & splitRegion);
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkSignedMaurerDistanceMapImageFilterIUL2IF2_Pointer {
   public:
     itkSignedMaurerDistanceMapImageFilterIUL2IF2_Pointer();
     itkSignedMaurerDistanceMapImageFilterIUL2IF2_Pointer(itkSignedMaurerDistanceMapImageFilterIUL2IF2_Pointer const & p);
     itkSignedMaurerDistanceMapImageFilterIUL2IF2_Pointer(itkSignedMaurerDistanceMapImageFilterIUL2IF2 * p);
     ~itkSignedMaurerDistanceMapImageFilterIUL2IF2_Pointer();
     itkSignedMaurerDistanceMapImageFilterIUL2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedMaurerDistanceMapImageFilterIUL2IF2 * GetPointer() const;
     bool operator<(itkSignedMaurerDistanceMapImageFilterIUL2IF2_Pointer const & r) const;
     bool operator>(itkSignedMaurerDistanceMapImageFilterIUL2IF2_Pointer const & r) const;
     bool operator<=(itkSignedMaurerDistanceMapImageFilterIUL2IF2_Pointer const & r) const;
     bool operator>=(itkSignedMaurerDistanceMapImageFilterIUL2IF2_Pointer const & r) const;
     itkSignedMaurerDistanceMapImageFilterIUL2IF2_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterIUL2IF2_Pointer const & r);
     itkSignedMaurerDistanceMapImageFilterIUL2IF2_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterIUL2IF2 * r);
     itkSignedMaurerDistanceMapImageFilterIUL2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSignedMaurerDistanceMapImageFilterIUL3ID3 : public itkImageToImageFilterIUL3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     static itkSignedMaurerDistanceMapImageFilterIUL3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long const & GetBackgroundValue() const;
   private:
     itkSignedMaurerDistanceMapImageFilterIUL3ID3(itkSignedMaurerDistanceMapImageFilterIUL3ID3 const & arg0);
     void operator=(itkSignedMaurerDistanceMapImageFilterIUL3ID3 const & arg0);
     void Voronoi(unsigned int arg0, itkIndex3 arg1);
     bool Remove(double arg0, double arg1, double arg2, double arg3, double arg4, double arg5);
   protected:
     itkSignedMaurerDistanceMapImageFilterIUL3ID3();
     ~itkSignedMaurerDistanceMapImageFilterIUL3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual int SplitRequestedRegion(int i, int num, itkImageRegion3 & splitRegion);
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkSignedMaurerDistanceMapImageFilterIUL3ID3_Pointer {
   public:
     itkSignedMaurerDistanceMapImageFilterIUL3ID3_Pointer();
     itkSignedMaurerDistanceMapImageFilterIUL3ID3_Pointer(itkSignedMaurerDistanceMapImageFilterIUL3ID3_Pointer const & p);
     itkSignedMaurerDistanceMapImageFilterIUL3ID3_Pointer(itkSignedMaurerDistanceMapImageFilterIUL3ID3 * p);
     ~itkSignedMaurerDistanceMapImageFilterIUL3ID3_Pointer();
     itkSignedMaurerDistanceMapImageFilterIUL3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedMaurerDistanceMapImageFilterIUL3ID3 * GetPointer() const;
     bool operator<(itkSignedMaurerDistanceMapImageFilterIUL3ID3_Pointer const & r) const;
     bool operator>(itkSignedMaurerDistanceMapImageFilterIUL3ID3_Pointer const & r) const;
     bool operator<=(itkSignedMaurerDistanceMapImageFilterIUL3ID3_Pointer const & r) const;
     bool operator>=(itkSignedMaurerDistanceMapImageFilterIUL3ID3_Pointer const & r) const;
     itkSignedMaurerDistanceMapImageFilterIUL3ID3_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterIUL3ID3_Pointer const & r);
     itkSignedMaurerDistanceMapImageFilterIUL3ID3_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterIUL3ID3 * r);
     itkSignedMaurerDistanceMapImageFilterIUL3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSignedMaurerDistanceMapImageFilterIUL3IF3 : public itkImageToImageFilterIUL3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     static itkSignedMaurerDistanceMapImageFilterIUL3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long const & GetBackgroundValue() const;
   private:
     itkSignedMaurerDistanceMapImageFilterIUL3IF3(itkSignedMaurerDistanceMapImageFilterIUL3IF3 const & arg0);
     void operator=(itkSignedMaurerDistanceMapImageFilterIUL3IF3 const & arg0);
     void Voronoi(unsigned int arg0, itkIndex3 arg1);
     bool Remove(float arg0, float arg1, float arg2, float arg3, float arg4, float arg5);
   protected:
     itkSignedMaurerDistanceMapImageFilterIUL3IF3();
     ~itkSignedMaurerDistanceMapImageFilterIUL3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual int SplitRequestedRegion(int i, int num, itkImageRegion3 & splitRegion);
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkSignedMaurerDistanceMapImageFilterIUL3IF3_Pointer {
   public:
     itkSignedMaurerDistanceMapImageFilterIUL3IF3_Pointer();
     itkSignedMaurerDistanceMapImageFilterIUL3IF3_Pointer(itkSignedMaurerDistanceMapImageFilterIUL3IF3_Pointer const & p);
     itkSignedMaurerDistanceMapImageFilterIUL3IF3_Pointer(itkSignedMaurerDistanceMapImageFilterIUL3IF3 * p);
     ~itkSignedMaurerDistanceMapImageFilterIUL3IF3_Pointer();
     itkSignedMaurerDistanceMapImageFilterIUL3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedMaurerDistanceMapImageFilterIUL3IF3 * GetPointer() const;
     bool operator<(itkSignedMaurerDistanceMapImageFilterIUL3IF3_Pointer const & r) const;
     bool operator>(itkSignedMaurerDistanceMapImageFilterIUL3IF3_Pointer const & r) const;
     bool operator<=(itkSignedMaurerDistanceMapImageFilterIUL3IF3_Pointer const & r) const;
     bool operator>=(itkSignedMaurerDistanceMapImageFilterIUL3IF3_Pointer const & r) const;
     itkSignedMaurerDistanceMapImageFilterIUL3IF3_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterIUL3IF3_Pointer const & r);
     itkSignedMaurerDistanceMapImageFilterIUL3IF3_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterIUL3IF3 * r);
     itkSignedMaurerDistanceMapImageFilterIUL3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSignedMaurerDistanceMapImageFilterIUS2ID2 : public itkImageToImageFilterIUS2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     static itkSignedMaurerDistanceMapImageFilterIUS2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short const & GetBackgroundValue() const;
   private:
     itkSignedMaurerDistanceMapImageFilterIUS2ID2(itkSignedMaurerDistanceMapImageFilterIUS2ID2 const & arg0);
     void operator=(itkSignedMaurerDistanceMapImageFilterIUS2ID2 const & arg0);
     void Voronoi(unsigned int arg0, itkIndex2 arg1);
     bool Remove(double arg0, double arg1, double arg2, double arg3, double arg4, double arg5);
   protected:
     itkSignedMaurerDistanceMapImageFilterIUS2ID2();
     ~itkSignedMaurerDistanceMapImageFilterIUS2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual int SplitRequestedRegion(int i, int num, itkImageRegion2 & splitRegion);
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkSignedMaurerDistanceMapImageFilterIUS2ID2_Pointer {
   public:
     itkSignedMaurerDistanceMapImageFilterIUS2ID2_Pointer();
     itkSignedMaurerDistanceMapImageFilterIUS2ID2_Pointer(itkSignedMaurerDistanceMapImageFilterIUS2ID2_Pointer const & p);
     itkSignedMaurerDistanceMapImageFilterIUS2ID2_Pointer(itkSignedMaurerDistanceMapImageFilterIUS2ID2 * p);
     ~itkSignedMaurerDistanceMapImageFilterIUS2ID2_Pointer();
     itkSignedMaurerDistanceMapImageFilterIUS2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedMaurerDistanceMapImageFilterIUS2ID2 * GetPointer() const;
     bool operator<(itkSignedMaurerDistanceMapImageFilterIUS2ID2_Pointer const & r) const;
     bool operator>(itkSignedMaurerDistanceMapImageFilterIUS2ID2_Pointer const & r) const;
     bool operator<=(itkSignedMaurerDistanceMapImageFilterIUS2ID2_Pointer const & r) const;
     bool operator>=(itkSignedMaurerDistanceMapImageFilterIUS2ID2_Pointer const & r) const;
     itkSignedMaurerDistanceMapImageFilterIUS2ID2_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterIUS2ID2_Pointer const & r);
     itkSignedMaurerDistanceMapImageFilterIUS2ID2_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterIUS2ID2 * r);
     itkSignedMaurerDistanceMapImageFilterIUS2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSignedMaurerDistanceMapImageFilterIUS2IF2 : public itkImageToImageFilterIUS2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     static itkSignedMaurerDistanceMapImageFilterIUS2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short const & GetBackgroundValue() const;
   private:
     itkSignedMaurerDistanceMapImageFilterIUS2IF2(itkSignedMaurerDistanceMapImageFilterIUS2IF2 const & arg0);
     void operator=(itkSignedMaurerDistanceMapImageFilterIUS2IF2 const & arg0);
     void Voronoi(unsigned int arg0, itkIndex2 arg1);
     bool Remove(float arg0, float arg1, float arg2, float arg3, float arg4, float arg5);
   protected:
     itkSignedMaurerDistanceMapImageFilterIUS2IF2();
     ~itkSignedMaurerDistanceMapImageFilterIUS2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual int SplitRequestedRegion(int i, int num, itkImageRegion2 & splitRegion);
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkSignedMaurerDistanceMapImageFilterIUS2IF2_Pointer {
   public:
     itkSignedMaurerDistanceMapImageFilterIUS2IF2_Pointer();
     itkSignedMaurerDistanceMapImageFilterIUS2IF2_Pointer(itkSignedMaurerDistanceMapImageFilterIUS2IF2_Pointer const & p);
     itkSignedMaurerDistanceMapImageFilterIUS2IF2_Pointer(itkSignedMaurerDistanceMapImageFilterIUS2IF2 * p);
     ~itkSignedMaurerDistanceMapImageFilterIUS2IF2_Pointer();
     itkSignedMaurerDistanceMapImageFilterIUS2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedMaurerDistanceMapImageFilterIUS2IF2 * GetPointer() const;
     bool operator<(itkSignedMaurerDistanceMapImageFilterIUS2IF2_Pointer const & r) const;
     bool operator>(itkSignedMaurerDistanceMapImageFilterIUS2IF2_Pointer const & r) const;
     bool operator<=(itkSignedMaurerDistanceMapImageFilterIUS2IF2_Pointer const & r) const;
     bool operator>=(itkSignedMaurerDistanceMapImageFilterIUS2IF2_Pointer const & r) const;
     itkSignedMaurerDistanceMapImageFilterIUS2IF2_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterIUS2IF2_Pointer const & r);
     itkSignedMaurerDistanceMapImageFilterIUS2IF2_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterIUS2IF2 * r);
     itkSignedMaurerDistanceMapImageFilterIUS2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSignedMaurerDistanceMapImageFilterIUS3ID3 : public itkImageToImageFilterIUS3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     static itkSignedMaurerDistanceMapImageFilterIUS3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short const & GetBackgroundValue() const;
   private:
     itkSignedMaurerDistanceMapImageFilterIUS3ID3(itkSignedMaurerDistanceMapImageFilterIUS3ID3 const & arg0);
     void operator=(itkSignedMaurerDistanceMapImageFilterIUS3ID3 const & arg0);
     void Voronoi(unsigned int arg0, itkIndex3 arg1);
     bool Remove(double arg0, double arg1, double arg2, double arg3, double arg4, double arg5);
   protected:
     itkSignedMaurerDistanceMapImageFilterIUS3ID3();
     ~itkSignedMaurerDistanceMapImageFilterIUS3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual int SplitRequestedRegion(int i, int num, itkImageRegion3 & splitRegion);
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkSignedMaurerDistanceMapImageFilterIUS3ID3_Pointer {
   public:
     itkSignedMaurerDistanceMapImageFilterIUS3ID3_Pointer();
     itkSignedMaurerDistanceMapImageFilterIUS3ID3_Pointer(itkSignedMaurerDistanceMapImageFilterIUS3ID3_Pointer const & p);
     itkSignedMaurerDistanceMapImageFilterIUS3ID3_Pointer(itkSignedMaurerDistanceMapImageFilterIUS3ID3 * p);
     ~itkSignedMaurerDistanceMapImageFilterIUS3ID3_Pointer();
     itkSignedMaurerDistanceMapImageFilterIUS3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedMaurerDistanceMapImageFilterIUS3ID3 * GetPointer() const;
     bool operator<(itkSignedMaurerDistanceMapImageFilterIUS3ID3_Pointer const & r) const;
     bool operator>(itkSignedMaurerDistanceMapImageFilterIUS3ID3_Pointer const & r) const;
     bool operator<=(itkSignedMaurerDistanceMapImageFilterIUS3ID3_Pointer const & r) const;
     bool operator>=(itkSignedMaurerDistanceMapImageFilterIUS3ID3_Pointer const & r) const;
     itkSignedMaurerDistanceMapImageFilterIUS3ID3_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterIUS3ID3_Pointer const & r);
     itkSignedMaurerDistanceMapImageFilterIUS3ID3_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterIUS3ID3 * r);
     itkSignedMaurerDistanceMapImageFilterIUS3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSignedMaurerDistanceMapImageFilterIUS3IF3 : public itkImageToImageFilterIUS3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     static itkSignedMaurerDistanceMapImageFilterIUS3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short const & GetBackgroundValue() const;
   private:
     itkSignedMaurerDistanceMapImageFilterIUS3IF3(itkSignedMaurerDistanceMapImageFilterIUS3IF3 const & arg0);
     void operator=(itkSignedMaurerDistanceMapImageFilterIUS3IF3 const & arg0);
     void Voronoi(unsigned int arg0, itkIndex3 arg1);
     bool Remove(float arg0, float arg1, float arg2, float arg3, float arg4, float arg5);
   protected:
     itkSignedMaurerDistanceMapImageFilterIUS3IF3();
     ~itkSignedMaurerDistanceMapImageFilterIUS3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual int SplitRequestedRegion(int i, int num, itkImageRegion3 & splitRegion);
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkSignedMaurerDistanceMapImageFilterIUS3IF3_Pointer {
   public:
     itkSignedMaurerDistanceMapImageFilterIUS3IF3_Pointer();
     itkSignedMaurerDistanceMapImageFilterIUS3IF3_Pointer(itkSignedMaurerDistanceMapImageFilterIUS3IF3_Pointer const & p);
     itkSignedMaurerDistanceMapImageFilterIUS3IF3_Pointer(itkSignedMaurerDistanceMapImageFilterIUS3IF3 * p);
     ~itkSignedMaurerDistanceMapImageFilterIUS3IF3_Pointer();
     itkSignedMaurerDistanceMapImageFilterIUS3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedMaurerDistanceMapImageFilterIUS3IF3 * GetPointer() const;
     bool operator<(itkSignedMaurerDistanceMapImageFilterIUS3IF3_Pointer const & r) const;
     bool operator>(itkSignedMaurerDistanceMapImageFilterIUS3IF3_Pointer const & r) const;
     bool operator<=(itkSignedMaurerDistanceMapImageFilterIUS3IF3_Pointer const & r) const;
     bool operator>=(itkSignedMaurerDistanceMapImageFilterIUS3IF3_Pointer const & r) const;
     itkSignedMaurerDistanceMapImageFilterIUS3IF3_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterIUS3IF3_Pointer const & r);
     itkSignedMaurerDistanceMapImageFilterIUS3IF3_Pointer & operator=(itkSignedMaurerDistanceMapImageFilterIUS3IF3 * r);
     itkSignedMaurerDistanceMapImageFilterIUS3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


