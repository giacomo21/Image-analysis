// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkHausdorffDistanceImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkHausdorffDistanceImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkHausdorffDistanceImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkHausdorffDistanceImageFilterJava
#endif
#ifdef SWIGLUA
%module itkHausdorffDistanceImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkHausdorffDistanceImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkHausdorffDistanceImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkHausdorffDistanceImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkHausdorffDistanceImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkHausdorffDistanceImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkHausdorffDistanceImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkHausdorffDistanceImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkHausdorffDistanceImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkHausdorffDistanceImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkHausdorffDistanceImageFilterPython
#endif
#ifdef SWIGR
%module itkHausdorffDistanceImageFilterR
#endif
#ifdef SWIGRUBY
%module itkHausdorffDistanceImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkHausdorffDistanceImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkHausdorffDistanceImageFilterTcl
#endif
#ifdef SWIGXML
%module itkHausdorffDistanceImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "SegmentationValidation.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImage.i
%import wrap_itkImageToImageFilterA.i


%include itk.i
%include wrap_itkHausdorffDistanceImageFilter_ext.i


 class itkHausdorffDistanceImageFilterID2ID2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  Input1HasNumericTraitsCheck = 1 };
     static itkHausdorffDistanceImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageD2 const * image);
     void SetInput2(itkImageD2 const * image);
     itkImageD2 const * GetInput1();
     itkImageD2 const * GetInput2();
     virtual double GetHausdorffDistance() const;
     virtual double GetAverageHausdorffDistance() const;
   private:
     itkHausdorffDistanceImageFilterID2ID2(itkHausdorffDistanceImageFilterID2ID2 const & arg0);
     void operator=(itkHausdorffDistanceImageFilterID2ID2 const & arg0);
   protected:
     itkHausdorffDistanceImageFilterID2ID2();
     ~itkHausdorffDistanceImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * data);
 };


 class itkHausdorffDistanceImageFilterID2ID2_Pointer {
   public:
     itkHausdorffDistanceImageFilterID2ID2_Pointer();
     itkHausdorffDistanceImageFilterID2ID2_Pointer(itkHausdorffDistanceImageFilterID2ID2_Pointer const & p);
     itkHausdorffDistanceImageFilterID2ID2_Pointer(itkHausdorffDistanceImageFilterID2ID2 * p);
     ~itkHausdorffDistanceImageFilterID2ID2_Pointer();
     itkHausdorffDistanceImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHausdorffDistanceImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkHausdorffDistanceImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkHausdorffDistanceImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkHausdorffDistanceImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkHausdorffDistanceImageFilterID2ID2_Pointer const & r) const;
     itkHausdorffDistanceImageFilterID2ID2_Pointer & operator=(itkHausdorffDistanceImageFilterID2ID2_Pointer const & r);
     itkHausdorffDistanceImageFilterID2ID2_Pointer & operator=(itkHausdorffDistanceImageFilterID2ID2 * r);
     itkHausdorffDistanceImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHausdorffDistanceImageFilterID3ID3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  Input1HasNumericTraitsCheck = 1 };
     static itkHausdorffDistanceImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageD3 const * image);
     void SetInput2(itkImageD3 const * image);
     itkImageD3 const * GetInput1();
     itkImageD3 const * GetInput2();
     virtual double GetHausdorffDistance() const;
     virtual double GetAverageHausdorffDistance() const;
   private:
     itkHausdorffDistanceImageFilterID3ID3(itkHausdorffDistanceImageFilterID3ID3 const & arg0);
     void operator=(itkHausdorffDistanceImageFilterID3ID3 const & arg0);
   protected:
     itkHausdorffDistanceImageFilterID3ID3();
     ~itkHausdorffDistanceImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * data);
 };


 class itkHausdorffDistanceImageFilterID3ID3_Pointer {
   public:
     itkHausdorffDistanceImageFilterID3ID3_Pointer();
     itkHausdorffDistanceImageFilterID3ID3_Pointer(itkHausdorffDistanceImageFilterID3ID3_Pointer const & p);
     itkHausdorffDistanceImageFilterID3ID3_Pointer(itkHausdorffDistanceImageFilterID3ID3 * p);
     ~itkHausdorffDistanceImageFilterID3ID3_Pointer();
     itkHausdorffDistanceImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHausdorffDistanceImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkHausdorffDistanceImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkHausdorffDistanceImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkHausdorffDistanceImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkHausdorffDistanceImageFilterID3ID3_Pointer const & r) const;
     itkHausdorffDistanceImageFilterID3ID3_Pointer & operator=(itkHausdorffDistanceImageFilterID3ID3_Pointer const & r);
     itkHausdorffDistanceImageFilterID3ID3_Pointer & operator=(itkHausdorffDistanceImageFilterID3ID3 * r);
     itkHausdorffDistanceImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHausdorffDistanceImageFilterIF2IF2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  Input1HasNumericTraitsCheck = 1 };
     static itkHausdorffDistanceImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageF2 const * image);
     void SetInput2(itkImageF2 const * image);
     itkImageF2 const * GetInput1();
     itkImageF2 const * GetInput2();
     virtual double GetHausdorffDistance() const;
     virtual double GetAverageHausdorffDistance() const;
   private:
     itkHausdorffDistanceImageFilterIF2IF2(itkHausdorffDistanceImageFilterIF2IF2 const & arg0);
     void operator=(itkHausdorffDistanceImageFilterIF2IF2 const & arg0);
   protected:
     itkHausdorffDistanceImageFilterIF2IF2();
     ~itkHausdorffDistanceImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * data);
 };


 class itkHausdorffDistanceImageFilterIF2IF2_Pointer {
   public:
     itkHausdorffDistanceImageFilterIF2IF2_Pointer();
     itkHausdorffDistanceImageFilterIF2IF2_Pointer(itkHausdorffDistanceImageFilterIF2IF2_Pointer const & p);
     itkHausdorffDistanceImageFilterIF2IF2_Pointer(itkHausdorffDistanceImageFilterIF2IF2 * p);
     ~itkHausdorffDistanceImageFilterIF2IF2_Pointer();
     itkHausdorffDistanceImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHausdorffDistanceImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkHausdorffDistanceImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkHausdorffDistanceImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkHausdorffDistanceImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkHausdorffDistanceImageFilterIF2IF2_Pointer const & r) const;
     itkHausdorffDistanceImageFilterIF2IF2_Pointer & operator=(itkHausdorffDistanceImageFilterIF2IF2_Pointer const & r);
     itkHausdorffDistanceImageFilterIF2IF2_Pointer & operator=(itkHausdorffDistanceImageFilterIF2IF2 * r);
     itkHausdorffDistanceImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHausdorffDistanceImageFilterIF3IF3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  Input1HasNumericTraitsCheck = 1 };
     static itkHausdorffDistanceImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageF3 const * image);
     void SetInput2(itkImageF3 const * image);
     itkImageF3 const * GetInput1();
     itkImageF3 const * GetInput2();
     virtual double GetHausdorffDistance() const;
     virtual double GetAverageHausdorffDistance() const;
   private:
     itkHausdorffDistanceImageFilterIF3IF3(itkHausdorffDistanceImageFilterIF3IF3 const & arg0);
     void operator=(itkHausdorffDistanceImageFilterIF3IF3 const & arg0);
   protected:
     itkHausdorffDistanceImageFilterIF3IF3();
     ~itkHausdorffDistanceImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * data);
 };


 class itkHausdorffDistanceImageFilterIF3IF3_Pointer {
   public:
     itkHausdorffDistanceImageFilterIF3IF3_Pointer();
     itkHausdorffDistanceImageFilterIF3IF3_Pointer(itkHausdorffDistanceImageFilterIF3IF3_Pointer const & p);
     itkHausdorffDistanceImageFilterIF3IF3_Pointer(itkHausdorffDistanceImageFilterIF3IF3 * p);
     ~itkHausdorffDistanceImageFilterIF3IF3_Pointer();
     itkHausdorffDistanceImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHausdorffDistanceImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkHausdorffDistanceImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkHausdorffDistanceImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkHausdorffDistanceImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkHausdorffDistanceImageFilterIF3IF3_Pointer const & r) const;
     itkHausdorffDistanceImageFilterIF3IF3_Pointer & operator=(itkHausdorffDistanceImageFilterIF3IF3_Pointer const & r);
     itkHausdorffDistanceImageFilterIF3IF3_Pointer & operator=(itkHausdorffDistanceImageFilterIF3IF3 * r);
     itkHausdorffDistanceImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHausdorffDistanceImageFilterIUC2IUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  Input1HasNumericTraitsCheck = 1 };
     static itkHausdorffDistanceImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUC2 const * image);
     void SetInput2(itkImageUC2 const * image);
     itkImageUC2 const * GetInput1();
     itkImageUC2 const * GetInput2();
     virtual double GetHausdorffDistance() const;
     virtual double GetAverageHausdorffDistance() const;
   private:
     itkHausdorffDistanceImageFilterIUC2IUC2(itkHausdorffDistanceImageFilterIUC2IUC2 const & arg0);
     void operator=(itkHausdorffDistanceImageFilterIUC2IUC2 const & arg0);
   protected:
     itkHausdorffDistanceImageFilterIUC2IUC2();
     ~itkHausdorffDistanceImageFilterIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * data);
 };


 class itkHausdorffDistanceImageFilterIUC2IUC2_Pointer {
   public:
     itkHausdorffDistanceImageFilterIUC2IUC2_Pointer();
     itkHausdorffDistanceImageFilterIUC2IUC2_Pointer(itkHausdorffDistanceImageFilterIUC2IUC2_Pointer const & p);
     itkHausdorffDistanceImageFilterIUC2IUC2_Pointer(itkHausdorffDistanceImageFilterIUC2IUC2 * p);
     ~itkHausdorffDistanceImageFilterIUC2IUC2_Pointer();
     itkHausdorffDistanceImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHausdorffDistanceImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkHausdorffDistanceImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkHausdorffDistanceImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkHausdorffDistanceImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkHausdorffDistanceImageFilterIUC2IUC2_Pointer const & r) const;
     itkHausdorffDistanceImageFilterIUC2IUC2_Pointer & operator=(itkHausdorffDistanceImageFilterIUC2IUC2_Pointer const & r);
     itkHausdorffDistanceImageFilterIUC2IUC2_Pointer & operator=(itkHausdorffDistanceImageFilterIUC2IUC2 * r);
     itkHausdorffDistanceImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHausdorffDistanceImageFilterIUC3IUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  Input1HasNumericTraitsCheck = 1 };
     static itkHausdorffDistanceImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUC3 const * image);
     void SetInput2(itkImageUC3 const * image);
     itkImageUC3 const * GetInput1();
     itkImageUC3 const * GetInput2();
     virtual double GetHausdorffDistance() const;
     virtual double GetAverageHausdorffDistance() const;
   private:
     itkHausdorffDistanceImageFilterIUC3IUC3(itkHausdorffDistanceImageFilterIUC3IUC3 const & arg0);
     void operator=(itkHausdorffDistanceImageFilterIUC3IUC3 const & arg0);
   protected:
     itkHausdorffDistanceImageFilterIUC3IUC3();
     ~itkHausdorffDistanceImageFilterIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * data);
 };


 class itkHausdorffDistanceImageFilterIUC3IUC3_Pointer {
   public:
     itkHausdorffDistanceImageFilterIUC3IUC3_Pointer();
     itkHausdorffDistanceImageFilterIUC3IUC3_Pointer(itkHausdorffDistanceImageFilterIUC3IUC3_Pointer const & p);
     itkHausdorffDistanceImageFilterIUC3IUC3_Pointer(itkHausdorffDistanceImageFilterIUC3IUC3 * p);
     ~itkHausdorffDistanceImageFilterIUC3IUC3_Pointer();
     itkHausdorffDistanceImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHausdorffDistanceImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkHausdorffDistanceImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkHausdorffDistanceImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkHausdorffDistanceImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkHausdorffDistanceImageFilterIUC3IUC3_Pointer const & r) const;
     itkHausdorffDistanceImageFilterIUC3IUC3_Pointer & operator=(itkHausdorffDistanceImageFilterIUC3IUC3_Pointer const & r);
     itkHausdorffDistanceImageFilterIUC3IUC3_Pointer & operator=(itkHausdorffDistanceImageFilterIUC3IUC3 * r);
     itkHausdorffDistanceImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHausdorffDistanceImageFilterIUL2IUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  Input1HasNumericTraitsCheck = 1 };
     static itkHausdorffDistanceImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUL2 const * image);
     void SetInput2(itkImageUL2 const * image);
     itkImageUL2 const * GetInput1();
     itkImageUL2 const * GetInput2();
     virtual double GetHausdorffDistance() const;
     virtual double GetAverageHausdorffDistance() const;
   private:
     itkHausdorffDistanceImageFilterIUL2IUL2(itkHausdorffDistanceImageFilterIUL2IUL2 const & arg0);
     void operator=(itkHausdorffDistanceImageFilterIUL2IUL2 const & arg0);
   protected:
     itkHausdorffDistanceImageFilterIUL2IUL2();
     ~itkHausdorffDistanceImageFilterIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * data);
 };


 class itkHausdorffDistanceImageFilterIUL2IUL2_Pointer {
   public:
     itkHausdorffDistanceImageFilterIUL2IUL2_Pointer();
     itkHausdorffDistanceImageFilterIUL2IUL2_Pointer(itkHausdorffDistanceImageFilterIUL2IUL2_Pointer const & p);
     itkHausdorffDistanceImageFilterIUL2IUL2_Pointer(itkHausdorffDistanceImageFilterIUL2IUL2 * p);
     ~itkHausdorffDistanceImageFilterIUL2IUL2_Pointer();
     itkHausdorffDistanceImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHausdorffDistanceImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkHausdorffDistanceImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkHausdorffDistanceImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkHausdorffDistanceImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkHausdorffDistanceImageFilterIUL2IUL2_Pointer const & r) const;
     itkHausdorffDistanceImageFilterIUL2IUL2_Pointer & operator=(itkHausdorffDistanceImageFilterIUL2IUL2_Pointer const & r);
     itkHausdorffDistanceImageFilterIUL2IUL2_Pointer & operator=(itkHausdorffDistanceImageFilterIUL2IUL2 * r);
     itkHausdorffDistanceImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHausdorffDistanceImageFilterIUL3IUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  Input1HasNumericTraitsCheck = 1 };
     static itkHausdorffDistanceImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUL3 const * image);
     void SetInput2(itkImageUL3 const * image);
     itkImageUL3 const * GetInput1();
     itkImageUL3 const * GetInput2();
     virtual double GetHausdorffDistance() const;
     virtual double GetAverageHausdorffDistance() const;
   private:
     itkHausdorffDistanceImageFilterIUL3IUL3(itkHausdorffDistanceImageFilterIUL3IUL3 const & arg0);
     void operator=(itkHausdorffDistanceImageFilterIUL3IUL3 const & arg0);
   protected:
     itkHausdorffDistanceImageFilterIUL3IUL3();
     ~itkHausdorffDistanceImageFilterIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * data);
 };


 class itkHausdorffDistanceImageFilterIUL3IUL3_Pointer {
   public:
     itkHausdorffDistanceImageFilterIUL3IUL3_Pointer();
     itkHausdorffDistanceImageFilterIUL3IUL3_Pointer(itkHausdorffDistanceImageFilterIUL3IUL3_Pointer const & p);
     itkHausdorffDistanceImageFilterIUL3IUL3_Pointer(itkHausdorffDistanceImageFilterIUL3IUL3 * p);
     ~itkHausdorffDistanceImageFilterIUL3IUL3_Pointer();
     itkHausdorffDistanceImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHausdorffDistanceImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkHausdorffDistanceImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkHausdorffDistanceImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkHausdorffDistanceImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkHausdorffDistanceImageFilterIUL3IUL3_Pointer const & r) const;
     itkHausdorffDistanceImageFilterIUL3IUL3_Pointer & operator=(itkHausdorffDistanceImageFilterIUL3IUL3_Pointer const & r);
     itkHausdorffDistanceImageFilterIUL3IUL3_Pointer & operator=(itkHausdorffDistanceImageFilterIUL3IUL3 * r);
     itkHausdorffDistanceImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHausdorffDistanceImageFilterIUS2IUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  Input1HasNumericTraitsCheck = 1 };
     static itkHausdorffDistanceImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUS2 const * image);
     void SetInput2(itkImageUS2 const * image);
     itkImageUS2 const * GetInput1();
     itkImageUS2 const * GetInput2();
     virtual double GetHausdorffDistance() const;
     virtual double GetAverageHausdorffDistance() const;
   private:
     itkHausdorffDistanceImageFilterIUS2IUS2(itkHausdorffDistanceImageFilterIUS2IUS2 const & arg0);
     void operator=(itkHausdorffDistanceImageFilterIUS2IUS2 const & arg0);
   protected:
     itkHausdorffDistanceImageFilterIUS2IUS2();
     ~itkHausdorffDistanceImageFilterIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * data);
 };


 class itkHausdorffDistanceImageFilterIUS2IUS2_Pointer {
   public:
     itkHausdorffDistanceImageFilterIUS2IUS2_Pointer();
     itkHausdorffDistanceImageFilterIUS2IUS2_Pointer(itkHausdorffDistanceImageFilterIUS2IUS2_Pointer const & p);
     itkHausdorffDistanceImageFilterIUS2IUS2_Pointer(itkHausdorffDistanceImageFilterIUS2IUS2 * p);
     ~itkHausdorffDistanceImageFilterIUS2IUS2_Pointer();
     itkHausdorffDistanceImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHausdorffDistanceImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkHausdorffDistanceImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkHausdorffDistanceImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkHausdorffDistanceImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkHausdorffDistanceImageFilterIUS2IUS2_Pointer const & r) const;
     itkHausdorffDistanceImageFilterIUS2IUS2_Pointer & operator=(itkHausdorffDistanceImageFilterIUS2IUS2_Pointer const & r);
     itkHausdorffDistanceImageFilterIUS2IUS2_Pointer & operator=(itkHausdorffDistanceImageFilterIUS2IUS2 * r);
     itkHausdorffDistanceImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHausdorffDistanceImageFilterIUS3IUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  Input1HasNumericTraitsCheck = 1 };
     static itkHausdorffDistanceImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUS3 const * image);
     void SetInput2(itkImageUS3 const * image);
     itkImageUS3 const * GetInput1();
     itkImageUS3 const * GetInput2();
     virtual double GetHausdorffDistance() const;
     virtual double GetAverageHausdorffDistance() const;
   private:
     itkHausdorffDistanceImageFilterIUS3IUS3(itkHausdorffDistanceImageFilterIUS3IUS3 const & arg0);
     void operator=(itkHausdorffDistanceImageFilterIUS3IUS3 const & arg0);
   protected:
     itkHausdorffDistanceImageFilterIUS3IUS3();
     ~itkHausdorffDistanceImageFilterIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * data);
 };


 class itkHausdorffDistanceImageFilterIUS3IUS3_Pointer {
   public:
     itkHausdorffDistanceImageFilterIUS3IUS3_Pointer();
     itkHausdorffDistanceImageFilterIUS3IUS3_Pointer(itkHausdorffDistanceImageFilterIUS3IUS3_Pointer const & p);
     itkHausdorffDistanceImageFilterIUS3IUS3_Pointer(itkHausdorffDistanceImageFilterIUS3IUS3 * p);
     ~itkHausdorffDistanceImageFilterIUS3IUS3_Pointer();
     itkHausdorffDistanceImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHausdorffDistanceImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkHausdorffDistanceImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkHausdorffDistanceImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkHausdorffDistanceImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkHausdorffDistanceImageFilterIUS3IUS3_Pointer const & r) const;
     itkHausdorffDistanceImageFilterIUS3IUS3_Pointer & operator=(itkHausdorffDistanceImageFilterIUS3IUS3_Pointer const & r);
     itkHausdorffDistanceImageFilterIUS3IUS3_Pointer & operator=(itkHausdorffDistanceImageFilterIUS3IUS3 * r);
     itkHausdorffDistanceImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


