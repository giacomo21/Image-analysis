# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkSegmentationLevelSetFunctionPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkSegmentationLevelSetFunctionPython', [dirname(__file__)])
        except ImportError:
            import _itkSegmentationLevelSetFunctionPython
            return _itkSegmentationLevelSetFunctionPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkSegmentationLevelSetFunctionPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkSegmentationLevelSetFunctionPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkSegmentationLevelSetFunctionPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkFixedArrayPython
import pyBasePython
import itkLevelSetFunctionPython
import itkVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import vnl_vector_refPython
import itkFiniteDifferenceFunctionPython
import ITKCommonBasePython
import itkEventObjectsPython
import itkSizePython
import itkImagePython
import itkCovariantVectorPython
import ITKRegionsPython
import itkIndexPython
import itkOffsetPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
def itkSegmentationLevelSetFunctionID3ID3_New():
  return itkSegmentationLevelSetFunctionID3ID3.New()

def itkSegmentationLevelSetFunctionID2ID2_New():
  return itkSegmentationLevelSetFunctionID2ID2.New()

def itkSegmentationLevelSetFunctionIF3IF3_New():
  return itkSegmentationLevelSetFunctionIF3IF3.New()

def itkSegmentationLevelSetFunctionIF2IF2_New():
  return itkSegmentationLevelSetFunctionIF2IF2.New()

class itkSegmentationLevelSetFunctionID2ID2(itkLevelSetFunctionPython.itkLevelSetFunctionID2):
    """Proxy of C++ itkSegmentationLevelSetFunctionID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID2ID2_ImageDimension
    def GetFeatureImage(self):
        """GetFeatureImage(self) -> itkImageD2"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID2ID2_GetFeatureImage(self)

    def SetFeatureImage(self, *args):
        """SetFeatureImage(self, itkImageD2 f)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID2ID2_SetFeatureImage(self, *args)

    def GetSpeedImage(self):
        """GetSpeedImage(self) -> itkImageD2"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID2ID2_GetSpeedImage(self)

    def SetSpeedImage(self, *args):
        """SetSpeedImage(self, itkImageD2 s)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID2ID2_SetSpeedImage(self, *args)

    def GetAdvectionImage(self):
        """GetAdvectionImage(self) -> itk::Image<(itk::FixedArray<(double,2u)>,2u)>"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID2ID2_GetAdvectionImage(self)

    def SetAdvectionImage(self, *args):
        """SetAdvectionImage(self, itk::Image<(itk::FixedArray<(double,2u)>,2u)> s)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID2ID2_SetAdvectionImage(self, *args)

    def CalculateSpeedImage(self):
        """CalculateSpeedImage(self)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID2ID2_CalculateSpeedImage(self)

    def CalculateAdvectionImage(self):
        """CalculateAdvectionImage(self)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID2ID2_CalculateAdvectionImage(self)

    def AllocateSpeedImage(self):
        """AllocateSpeedImage(self)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID2ID2_AllocateSpeedImage(self)

    def AllocateAdvectionImage(self):
        """AllocateAdvectionImage(self)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID2ID2_AllocateAdvectionImage(self)

    def ReverseExpansionDirection(self):
        """ReverseExpansionDirection(self)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID2ID2_ReverseExpansionDirection(self)

    __swig_destroy__ = _itkSegmentationLevelSetFunctionPython.delete_itkSegmentationLevelSetFunctionID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSegmentationLevelSetFunctionID2ID2"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSegmentationLevelSetFunctionID2ID2"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSegmentationLevelSetFunctionID2ID2
        
        Create a new object of the class itkSegmentationLevelSetFunctionID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSegmentationLevelSetFunctionID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSegmentationLevelSetFunctionID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSegmentationLevelSetFunctionID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSegmentationLevelSetFunctionID2ID2.GetFeatureImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID2ID2_GetFeatureImage,None,itkSegmentationLevelSetFunctionID2ID2)
itkSegmentationLevelSetFunctionID2ID2.SetFeatureImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID2ID2_SetFeatureImage,None,itkSegmentationLevelSetFunctionID2ID2)
itkSegmentationLevelSetFunctionID2ID2.GetSpeedImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID2ID2_GetSpeedImage,None,itkSegmentationLevelSetFunctionID2ID2)
itkSegmentationLevelSetFunctionID2ID2.SetSpeedImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID2ID2_SetSpeedImage,None,itkSegmentationLevelSetFunctionID2ID2)
itkSegmentationLevelSetFunctionID2ID2.GetAdvectionImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID2ID2_GetAdvectionImage,None,itkSegmentationLevelSetFunctionID2ID2)
itkSegmentationLevelSetFunctionID2ID2.SetAdvectionImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID2ID2_SetAdvectionImage,None,itkSegmentationLevelSetFunctionID2ID2)
itkSegmentationLevelSetFunctionID2ID2.CalculateSpeedImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID2ID2_CalculateSpeedImage,None,itkSegmentationLevelSetFunctionID2ID2)
itkSegmentationLevelSetFunctionID2ID2.CalculateAdvectionImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID2ID2_CalculateAdvectionImage,None,itkSegmentationLevelSetFunctionID2ID2)
itkSegmentationLevelSetFunctionID2ID2.AllocateSpeedImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID2ID2_AllocateSpeedImage,None,itkSegmentationLevelSetFunctionID2ID2)
itkSegmentationLevelSetFunctionID2ID2.AllocateAdvectionImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID2ID2_AllocateAdvectionImage,None,itkSegmentationLevelSetFunctionID2ID2)
itkSegmentationLevelSetFunctionID2ID2.ReverseExpansionDirection = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID2ID2_ReverseExpansionDirection,None,itkSegmentationLevelSetFunctionID2ID2)
itkSegmentationLevelSetFunctionID2ID2.GetPointer = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID2ID2_GetPointer,None,itkSegmentationLevelSetFunctionID2ID2)
itkSegmentationLevelSetFunctionID2ID2_swigregister = _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID2ID2_swigregister
itkSegmentationLevelSetFunctionID2ID2_swigregister(itkSegmentationLevelSetFunctionID2ID2)

def itkSegmentationLevelSetFunctionID2ID2_cast(*args):
  """itkSegmentationLevelSetFunctionID2ID2_cast(itkLightObject obj) -> itkSegmentationLevelSetFunctionID2ID2"""
  return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID2ID2_cast(*args)

class itkSegmentationLevelSetFunctionID3ID3(itkLevelSetFunctionPython.itkLevelSetFunctionID3):
    """Proxy of C++ itkSegmentationLevelSetFunctionID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID3ID3_ImageDimension
    def GetFeatureImage(self):
        """GetFeatureImage(self) -> itkImageD3"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID3ID3_GetFeatureImage(self)

    def SetFeatureImage(self, *args):
        """SetFeatureImage(self, itkImageD3 f)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID3ID3_SetFeatureImage(self, *args)

    def GetSpeedImage(self):
        """GetSpeedImage(self) -> itkImageD3"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID3ID3_GetSpeedImage(self)

    def SetSpeedImage(self, *args):
        """SetSpeedImage(self, itkImageD3 s)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID3ID3_SetSpeedImage(self, *args)

    def GetAdvectionImage(self):
        """GetAdvectionImage(self) -> itk::Image<(itk::FixedArray<(double,3u)>,3u)>"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID3ID3_GetAdvectionImage(self)

    def SetAdvectionImage(self, *args):
        """SetAdvectionImage(self, itk::Image<(itk::FixedArray<(double,3u)>,3u)> s)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID3ID3_SetAdvectionImage(self, *args)

    def CalculateSpeedImage(self):
        """CalculateSpeedImage(self)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID3ID3_CalculateSpeedImage(self)

    def CalculateAdvectionImage(self):
        """CalculateAdvectionImage(self)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID3ID3_CalculateAdvectionImage(self)

    def AllocateSpeedImage(self):
        """AllocateSpeedImage(self)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID3ID3_AllocateSpeedImage(self)

    def AllocateAdvectionImage(self):
        """AllocateAdvectionImage(self)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID3ID3_AllocateAdvectionImage(self)

    def ReverseExpansionDirection(self):
        """ReverseExpansionDirection(self)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID3ID3_ReverseExpansionDirection(self)

    __swig_destroy__ = _itkSegmentationLevelSetFunctionPython.delete_itkSegmentationLevelSetFunctionID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkSegmentationLevelSetFunctionID3ID3"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSegmentationLevelSetFunctionID3ID3"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSegmentationLevelSetFunctionID3ID3
        
        Create a new object of the class itkSegmentationLevelSetFunctionID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSegmentationLevelSetFunctionID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSegmentationLevelSetFunctionID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSegmentationLevelSetFunctionID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSegmentationLevelSetFunctionID3ID3.GetFeatureImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID3ID3_GetFeatureImage,None,itkSegmentationLevelSetFunctionID3ID3)
itkSegmentationLevelSetFunctionID3ID3.SetFeatureImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID3ID3_SetFeatureImage,None,itkSegmentationLevelSetFunctionID3ID3)
itkSegmentationLevelSetFunctionID3ID3.GetSpeedImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID3ID3_GetSpeedImage,None,itkSegmentationLevelSetFunctionID3ID3)
itkSegmentationLevelSetFunctionID3ID3.SetSpeedImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID3ID3_SetSpeedImage,None,itkSegmentationLevelSetFunctionID3ID3)
itkSegmentationLevelSetFunctionID3ID3.GetAdvectionImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID3ID3_GetAdvectionImage,None,itkSegmentationLevelSetFunctionID3ID3)
itkSegmentationLevelSetFunctionID3ID3.SetAdvectionImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID3ID3_SetAdvectionImage,None,itkSegmentationLevelSetFunctionID3ID3)
itkSegmentationLevelSetFunctionID3ID3.CalculateSpeedImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID3ID3_CalculateSpeedImage,None,itkSegmentationLevelSetFunctionID3ID3)
itkSegmentationLevelSetFunctionID3ID3.CalculateAdvectionImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID3ID3_CalculateAdvectionImage,None,itkSegmentationLevelSetFunctionID3ID3)
itkSegmentationLevelSetFunctionID3ID3.AllocateSpeedImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID3ID3_AllocateSpeedImage,None,itkSegmentationLevelSetFunctionID3ID3)
itkSegmentationLevelSetFunctionID3ID3.AllocateAdvectionImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID3ID3_AllocateAdvectionImage,None,itkSegmentationLevelSetFunctionID3ID3)
itkSegmentationLevelSetFunctionID3ID3.ReverseExpansionDirection = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID3ID3_ReverseExpansionDirection,None,itkSegmentationLevelSetFunctionID3ID3)
itkSegmentationLevelSetFunctionID3ID3.GetPointer = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID3ID3_GetPointer,None,itkSegmentationLevelSetFunctionID3ID3)
itkSegmentationLevelSetFunctionID3ID3_swigregister = _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID3ID3_swigregister
itkSegmentationLevelSetFunctionID3ID3_swigregister(itkSegmentationLevelSetFunctionID3ID3)

def itkSegmentationLevelSetFunctionID3ID3_cast(*args):
  """itkSegmentationLevelSetFunctionID3ID3_cast(itkLightObject obj) -> itkSegmentationLevelSetFunctionID3ID3"""
  return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionID3ID3_cast(*args)

class itkSegmentationLevelSetFunctionIF2IF2(itkLevelSetFunctionPython.itkLevelSetFunctionIF2):
    """Proxy of C++ itkSegmentationLevelSetFunctionIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF2IF2_ImageDimension
    def GetFeatureImage(self):
        """GetFeatureImage(self) -> itkImageF2"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF2IF2_GetFeatureImage(self)

    def SetFeatureImage(self, *args):
        """SetFeatureImage(self, itkImageF2 f)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF2IF2_SetFeatureImage(self, *args)

    def GetSpeedImage(self):
        """GetSpeedImage(self) -> itkImageF2"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF2IF2_GetSpeedImage(self)

    def SetSpeedImage(self, *args):
        """SetSpeedImage(self, itkImageF2 s)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF2IF2_SetSpeedImage(self, *args)

    def GetAdvectionImage(self):
        """GetAdvectionImage(self) -> itkImageFAF22"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF2IF2_GetAdvectionImage(self)

    def SetAdvectionImage(self, *args):
        """SetAdvectionImage(self, itkImageFAF22 s)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF2IF2_SetAdvectionImage(self, *args)

    def CalculateSpeedImage(self):
        """CalculateSpeedImage(self)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF2IF2_CalculateSpeedImage(self)

    def CalculateAdvectionImage(self):
        """CalculateAdvectionImage(self)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF2IF2_CalculateAdvectionImage(self)

    def AllocateSpeedImage(self):
        """AllocateSpeedImage(self)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF2IF2_AllocateSpeedImage(self)

    def AllocateAdvectionImage(self):
        """AllocateAdvectionImage(self)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF2IF2_AllocateAdvectionImage(self)

    def ReverseExpansionDirection(self):
        """ReverseExpansionDirection(self)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF2IF2_ReverseExpansionDirection(self)

    __swig_destroy__ = _itkSegmentationLevelSetFunctionPython.delete_itkSegmentationLevelSetFunctionIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSegmentationLevelSetFunctionIF2IF2"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSegmentationLevelSetFunctionIF2IF2"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSegmentationLevelSetFunctionIF2IF2
        
        Create a new object of the class itkSegmentationLevelSetFunctionIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSegmentationLevelSetFunctionIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSegmentationLevelSetFunctionIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSegmentationLevelSetFunctionIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSegmentationLevelSetFunctionIF2IF2.GetFeatureImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF2IF2_GetFeatureImage,None,itkSegmentationLevelSetFunctionIF2IF2)
itkSegmentationLevelSetFunctionIF2IF2.SetFeatureImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF2IF2_SetFeatureImage,None,itkSegmentationLevelSetFunctionIF2IF2)
itkSegmentationLevelSetFunctionIF2IF2.GetSpeedImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF2IF2_GetSpeedImage,None,itkSegmentationLevelSetFunctionIF2IF2)
itkSegmentationLevelSetFunctionIF2IF2.SetSpeedImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF2IF2_SetSpeedImage,None,itkSegmentationLevelSetFunctionIF2IF2)
itkSegmentationLevelSetFunctionIF2IF2.GetAdvectionImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF2IF2_GetAdvectionImage,None,itkSegmentationLevelSetFunctionIF2IF2)
itkSegmentationLevelSetFunctionIF2IF2.SetAdvectionImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF2IF2_SetAdvectionImage,None,itkSegmentationLevelSetFunctionIF2IF2)
itkSegmentationLevelSetFunctionIF2IF2.CalculateSpeedImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF2IF2_CalculateSpeedImage,None,itkSegmentationLevelSetFunctionIF2IF2)
itkSegmentationLevelSetFunctionIF2IF2.CalculateAdvectionImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF2IF2_CalculateAdvectionImage,None,itkSegmentationLevelSetFunctionIF2IF2)
itkSegmentationLevelSetFunctionIF2IF2.AllocateSpeedImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF2IF2_AllocateSpeedImage,None,itkSegmentationLevelSetFunctionIF2IF2)
itkSegmentationLevelSetFunctionIF2IF2.AllocateAdvectionImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF2IF2_AllocateAdvectionImage,None,itkSegmentationLevelSetFunctionIF2IF2)
itkSegmentationLevelSetFunctionIF2IF2.ReverseExpansionDirection = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF2IF2_ReverseExpansionDirection,None,itkSegmentationLevelSetFunctionIF2IF2)
itkSegmentationLevelSetFunctionIF2IF2.GetPointer = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF2IF2_GetPointer,None,itkSegmentationLevelSetFunctionIF2IF2)
itkSegmentationLevelSetFunctionIF2IF2_swigregister = _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF2IF2_swigregister
itkSegmentationLevelSetFunctionIF2IF2_swigregister(itkSegmentationLevelSetFunctionIF2IF2)

def itkSegmentationLevelSetFunctionIF2IF2_cast(*args):
  """itkSegmentationLevelSetFunctionIF2IF2_cast(itkLightObject obj) -> itkSegmentationLevelSetFunctionIF2IF2"""
  return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF2IF2_cast(*args)

class itkSegmentationLevelSetFunctionIF3IF3(itkLevelSetFunctionPython.itkLevelSetFunctionIF3):
    """Proxy of C++ itkSegmentationLevelSetFunctionIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF3IF3_ImageDimension
    def GetFeatureImage(self):
        """GetFeatureImage(self) -> itkImageF3"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF3IF3_GetFeatureImage(self)

    def SetFeatureImage(self, *args):
        """SetFeatureImage(self, itkImageF3 f)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF3IF3_SetFeatureImage(self, *args)

    def GetSpeedImage(self):
        """GetSpeedImage(self) -> itkImageF3"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF3IF3_GetSpeedImage(self)

    def SetSpeedImage(self, *args):
        """SetSpeedImage(self, itkImageF3 s)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF3IF3_SetSpeedImage(self, *args)

    def GetAdvectionImage(self):
        """GetAdvectionImage(self) -> itkImageFAF33"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF3IF3_GetAdvectionImage(self)

    def SetAdvectionImage(self, *args):
        """SetAdvectionImage(self, itkImageFAF33 s)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF3IF3_SetAdvectionImage(self, *args)

    def CalculateSpeedImage(self):
        """CalculateSpeedImage(self)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF3IF3_CalculateSpeedImage(self)

    def CalculateAdvectionImage(self):
        """CalculateAdvectionImage(self)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF3IF3_CalculateAdvectionImage(self)

    def AllocateSpeedImage(self):
        """AllocateSpeedImage(self)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF3IF3_AllocateSpeedImage(self)

    def AllocateAdvectionImage(self):
        """AllocateAdvectionImage(self)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF3IF3_AllocateAdvectionImage(self)

    def ReverseExpansionDirection(self):
        """ReverseExpansionDirection(self)"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF3IF3_ReverseExpansionDirection(self)

    __swig_destroy__ = _itkSegmentationLevelSetFunctionPython.delete_itkSegmentationLevelSetFunctionIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkSegmentationLevelSetFunctionIF3IF3"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSegmentationLevelSetFunctionIF3IF3"""
        return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSegmentationLevelSetFunctionIF3IF3
        
        Create a new object of the class itkSegmentationLevelSetFunctionIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSegmentationLevelSetFunctionIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSegmentationLevelSetFunctionIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSegmentationLevelSetFunctionIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSegmentationLevelSetFunctionIF3IF3.GetFeatureImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF3IF3_GetFeatureImage,None,itkSegmentationLevelSetFunctionIF3IF3)
itkSegmentationLevelSetFunctionIF3IF3.SetFeatureImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF3IF3_SetFeatureImage,None,itkSegmentationLevelSetFunctionIF3IF3)
itkSegmentationLevelSetFunctionIF3IF3.GetSpeedImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF3IF3_GetSpeedImage,None,itkSegmentationLevelSetFunctionIF3IF3)
itkSegmentationLevelSetFunctionIF3IF3.SetSpeedImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF3IF3_SetSpeedImage,None,itkSegmentationLevelSetFunctionIF3IF3)
itkSegmentationLevelSetFunctionIF3IF3.GetAdvectionImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF3IF3_GetAdvectionImage,None,itkSegmentationLevelSetFunctionIF3IF3)
itkSegmentationLevelSetFunctionIF3IF3.SetAdvectionImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF3IF3_SetAdvectionImage,None,itkSegmentationLevelSetFunctionIF3IF3)
itkSegmentationLevelSetFunctionIF3IF3.CalculateSpeedImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF3IF3_CalculateSpeedImage,None,itkSegmentationLevelSetFunctionIF3IF3)
itkSegmentationLevelSetFunctionIF3IF3.CalculateAdvectionImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF3IF3_CalculateAdvectionImage,None,itkSegmentationLevelSetFunctionIF3IF3)
itkSegmentationLevelSetFunctionIF3IF3.AllocateSpeedImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF3IF3_AllocateSpeedImage,None,itkSegmentationLevelSetFunctionIF3IF3)
itkSegmentationLevelSetFunctionIF3IF3.AllocateAdvectionImage = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF3IF3_AllocateAdvectionImage,None,itkSegmentationLevelSetFunctionIF3IF3)
itkSegmentationLevelSetFunctionIF3IF3.ReverseExpansionDirection = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF3IF3_ReverseExpansionDirection,None,itkSegmentationLevelSetFunctionIF3IF3)
itkSegmentationLevelSetFunctionIF3IF3.GetPointer = new_instancemethod(_itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF3IF3_GetPointer,None,itkSegmentationLevelSetFunctionIF3IF3)
itkSegmentationLevelSetFunctionIF3IF3_swigregister = _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF3IF3_swigregister
itkSegmentationLevelSetFunctionIF3IF3_swigregister(itkSegmentationLevelSetFunctionIF3IF3)

def itkSegmentationLevelSetFunctionIF3IF3_cast(*args):
  """itkSegmentationLevelSetFunctionIF3IF3_cast(itkLightObject obj) -> itkSegmentationLevelSetFunctionIF3IF3"""
  return _itkSegmentationLevelSetFunctionPython.itkSegmentationLevelSetFunctionIF3IF3_cast(*args)



