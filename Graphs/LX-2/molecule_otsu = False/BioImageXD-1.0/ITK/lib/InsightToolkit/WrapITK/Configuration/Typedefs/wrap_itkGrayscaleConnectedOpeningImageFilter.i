// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkGrayscaleConnectedOpeningImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkGrayscaleConnectedOpeningImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkGrayscaleConnectedOpeningImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkGrayscaleConnectedOpeningImageFilterJava
#endif
#ifdef SWIGLUA
%module itkGrayscaleConnectedOpeningImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkGrayscaleConnectedOpeningImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkGrayscaleConnectedOpeningImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkGrayscaleConnectedOpeningImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkGrayscaleConnectedOpeningImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkGrayscaleConnectedOpeningImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkGrayscaleConnectedOpeningImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkGrayscaleConnectedOpeningImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkGrayscaleConnectedOpeningImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkGrayscaleConnectedOpeningImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkGrayscaleConnectedOpeningImageFilterPython
#endif
#ifdef SWIGR
%module itkGrayscaleConnectedOpeningImageFilterR
#endif
#ifdef SWIGRUBY
%module itkGrayscaleConnectedOpeningImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkGrayscaleConnectedOpeningImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkGrayscaleConnectedOpeningImageFilterTcl
#endif
#ifdef SWIGXML
%module itkGrayscaleConnectedOpeningImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Morphology.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImageToImageFilterA.i
%import wrap_itkIndex.i


%include itk.i
%include wrap_itkGrayscaleConnectedOpeningImageFilter_ext.i


 class itkGrayscaleConnectedOpeningImageFilterID2ID2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkGrayscaleConnectedOpeningImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSeed(itkIndex2 const _arg);
     virtual itkIndex2 GetSeed() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkGrayscaleConnectedOpeningImageFilterID2ID2(itkGrayscaleConnectedOpeningImageFilterID2ID2 const & arg0);
     void operator=(itkGrayscaleConnectedOpeningImageFilterID2ID2 const & arg0);
   protected:
     itkGrayscaleConnectedOpeningImageFilterID2ID2();
     ~itkGrayscaleConnectedOpeningImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkGrayscaleConnectedOpeningImageFilterID2ID2_Pointer {
   public:
     itkGrayscaleConnectedOpeningImageFilterID2ID2_Pointer();
     itkGrayscaleConnectedOpeningImageFilterID2ID2_Pointer(itkGrayscaleConnectedOpeningImageFilterID2ID2_Pointer const & p);
     itkGrayscaleConnectedOpeningImageFilterID2ID2_Pointer(itkGrayscaleConnectedOpeningImageFilterID2ID2 * p);
     ~itkGrayscaleConnectedOpeningImageFilterID2ID2_Pointer();
     itkGrayscaleConnectedOpeningImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGrayscaleConnectedOpeningImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkGrayscaleConnectedOpeningImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkGrayscaleConnectedOpeningImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkGrayscaleConnectedOpeningImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkGrayscaleConnectedOpeningImageFilterID2ID2_Pointer const & r) const;
     itkGrayscaleConnectedOpeningImageFilterID2ID2_Pointer & operator=(itkGrayscaleConnectedOpeningImageFilterID2ID2_Pointer const & r);
     itkGrayscaleConnectedOpeningImageFilterID2ID2_Pointer & operator=(itkGrayscaleConnectedOpeningImageFilterID2ID2 * r);
     itkGrayscaleConnectedOpeningImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGrayscaleConnectedOpeningImageFilterID3ID3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkGrayscaleConnectedOpeningImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSeed(itkIndex3 const _arg);
     virtual itkIndex3 GetSeed() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkGrayscaleConnectedOpeningImageFilterID3ID3(itkGrayscaleConnectedOpeningImageFilterID3ID3 const & arg0);
     void operator=(itkGrayscaleConnectedOpeningImageFilterID3ID3 const & arg0);
   protected:
     itkGrayscaleConnectedOpeningImageFilterID3ID3();
     ~itkGrayscaleConnectedOpeningImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkGrayscaleConnectedOpeningImageFilterID3ID3_Pointer {
   public:
     itkGrayscaleConnectedOpeningImageFilterID3ID3_Pointer();
     itkGrayscaleConnectedOpeningImageFilterID3ID3_Pointer(itkGrayscaleConnectedOpeningImageFilterID3ID3_Pointer const & p);
     itkGrayscaleConnectedOpeningImageFilterID3ID3_Pointer(itkGrayscaleConnectedOpeningImageFilterID3ID3 * p);
     ~itkGrayscaleConnectedOpeningImageFilterID3ID3_Pointer();
     itkGrayscaleConnectedOpeningImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGrayscaleConnectedOpeningImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkGrayscaleConnectedOpeningImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkGrayscaleConnectedOpeningImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkGrayscaleConnectedOpeningImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkGrayscaleConnectedOpeningImageFilterID3ID3_Pointer const & r) const;
     itkGrayscaleConnectedOpeningImageFilterID3ID3_Pointer & operator=(itkGrayscaleConnectedOpeningImageFilterID3ID3_Pointer const & r);
     itkGrayscaleConnectedOpeningImageFilterID3ID3_Pointer & operator=(itkGrayscaleConnectedOpeningImageFilterID3ID3 * r);
     itkGrayscaleConnectedOpeningImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGrayscaleConnectedOpeningImageFilterIF2IF2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkGrayscaleConnectedOpeningImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSeed(itkIndex2 const _arg);
     virtual itkIndex2 GetSeed() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkGrayscaleConnectedOpeningImageFilterIF2IF2(itkGrayscaleConnectedOpeningImageFilterIF2IF2 const & arg0);
     void operator=(itkGrayscaleConnectedOpeningImageFilterIF2IF2 const & arg0);
   protected:
     itkGrayscaleConnectedOpeningImageFilterIF2IF2();
     ~itkGrayscaleConnectedOpeningImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkGrayscaleConnectedOpeningImageFilterIF2IF2_Pointer {
   public:
     itkGrayscaleConnectedOpeningImageFilterIF2IF2_Pointer();
     itkGrayscaleConnectedOpeningImageFilterIF2IF2_Pointer(itkGrayscaleConnectedOpeningImageFilterIF2IF2_Pointer const & p);
     itkGrayscaleConnectedOpeningImageFilterIF2IF2_Pointer(itkGrayscaleConnectedOpeningImageFilterIF2IF2 * p);
     ~itkGrayscaleConnectedOpeningImageFilterIF2IF2_Pointer();
     itkGrayscaleConnectedOpeningImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGrayscaleConnectedOpeningImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkGrayscaleConnectedOpeningImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkGrayscaleConnectedOpeningImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkGrayscaleConnectedOpeningImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkGrayscaleConnectedOpeningImageFilterIF2IF2_Pointer const & r) const;
     itkGrayscaleConnectedOpeningImageFilterIF2IF2_Pointer & operator=(itkGrayscaleConnectedOpeningImageFilterIF2IF2_Pointer const & r);
     itkGrayscaleConnectedOpeningImageFilterIF2IF2_Pointer & operator=(itkGrayscaleConnectedOpeningImageFilterIF2IF2 * r);
     itkGrayscaleConnectedOpeningImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGrayscaleConnectedOpeningImageFilterIF3IF3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkGrayscaleConnectedOpeningImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSeed(itkIndex3 const _arg);
     virtual itkIndex3 GetSeed() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkGrayscaleConnectedOpeningImageFilterIF3IF3(itkGrayscaleConnectedOpeningImageFilterIF3IF3 const & arg0);
     void operator=(itkGrayscaleConnectedOpeningImageFilterIF3IF3 const & arg0);
   protected:
     itkGrayscaleConnectedOpeningImageFilterIF3IF3();
     ~itkGrayscaleConnectedOpeningImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkGrayscaleConnectedOpeningImageFilterIF3IF3_Pointer {
   public:
     itkGrayscaleConnectedOpeningImageFilterIF3IF3_Pointer();
     itkGrayscaleConnectedOpeningImageFilterIF3IF3_Pointer(itkGrayscaleConnectedOpeningImageFilterIF3IF3_Pointer const & p);
     itkGrayscaleConnectedOpeningImageFilterIF3IF3_Pointer(itkGrayscaleConnectedOpeningImageFilterIF3IF3 * p);
     ~itkGrayscaleConnectedOpeningImageFilterIF3IF3_Pointer();
     itkGrayscaleConnectedOpeningImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGrayscaleConnectedOpeningImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkGrayscaleConnectedOpeningImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkGrayscaleConnectedOpeningImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkGrayscaleConnectedOpeningImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkGrayscaleConnectedOpeningImageFilterIF3IF3_Pointer const & r) const;
     itkGrayscaleConnectedOpeningImageFilterIF3IF3_Pointer & operator=(itkGrayscaleConnectedOpeningImageFilterIF3IF3_Pointer const & r);
     itkGrayscaleConnectedOpeningImageFilterIF3IF3_Pointer & operator=(itkGrayscaleConnectedOpeningImageFilterIF3IF3 * r);
     itkGrayscaleConnectedOpeningImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGrayscaleConnectedOpeningImageFilterIUC2IUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkGrayscaleConnectedOpeningImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSeed(itkIndex2 const _arg);
     virtual itkIndex2 GetSeed() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkGrayscaleConnectedOpeningImageFilterIUC2IUC2(itkGrayscaleConnectedOpeningImageFilterIUC2IUC2 const & arg0);
     void operator=(itkGrayscaleConnectedOpeningImageFilterIUC2IUC2 const & arg0);
   protected:
     itkGrayscaleConnectedOpeningImageFilterIUC2IUC2();
     ~itkGrayscaleConnectedOpeningImageFilterIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkGrayscaleConnectedOpeningImageFilterIUC2IUC2_Pointer {
   public:
     itkGrayscaleConnectedOpeningImageFilterIUC2IUC2_Pointer();
     itkGrayscaleConnectedOpeningImageFilterIUC2IUC2_Pointer(itkGrayscaleConnectedOpeningImageFilterIUC2IUC2_Pointer const & p);
     itkGrayscaleConnectedOpeningImageFilterIUC2IUC2_Pointer(itkGrayscaleConnectedOpeningImageFilterIUC2IUC2 * p);
     ~itkGrayscaleConnectedOpeningImageFilterIUC2IUC2_Pointer();
     itkGrayscaleConnectedOpeningImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGrayscaleConnectedOpeningImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkGrayscaleConnectedOpeningImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkGrayscaleConnectedOpeningImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkGrayscaleConnectedOpeningImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkGrayscaleConnectedOpeningImageFilterIUC2IUC2_Pointer const & r) const;
     itkGrayscaleConnectedOpeningImageFilterIUC2IUC2_Pointer & operator=(itkGrayscaleConnectedOpeningImageFilterIUC2IUC2_Pointer const & r);
     itkGrayscaleConnectedOpeningImageFilterIUC2IUC2_Pointer & operator=(itkGrayscaleConnectedOpeningImageFilterIUC2IUC2 * r);
     itkGrayscaleConnectedOpeningImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGrayscaleConnectedOpeningImageFilterIUC3IUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkGrayscaleConnectedOpeningImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSeed(itkIndex3 const _arg);
     virtual itkIndex3 GetSeed() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkGrayscaleConnectedOpeningImageFilterIUC3IUC3(itkGrayscaleConnectedOpeningImageFilterIUC3IUC3 const & arg0);
     void operator=(itkGrayscaleConnectedOpeningImageFilterIUC3IUC3 const & arg0);
   protected:
     itkGrayscaleConnectedOpeningImageFilterIUC3IUC3();
     ~itkGrayscaleConnectedOpeningImageFilterIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkGrayscaleConnectedOpeningImageFilterIUC3IUC3_Pointer {
   public:
     itkGrayscaleConnectedOpeningImageFilterIUC3IUC3_Pointer();
     itkGrayscaleConnectedOpeningImageFilterIUC3IUC3_Pointer(itkGrayscaleConnectedOpeningImageFilterIUC3IUC3_Pointer const & p);
     itkGrayscaleConnectedOpeningImageFilterIUC3IUC3_Pointer(itkGrayscaleConnectedOpeningImageFilterIUC3IUC3 * p);
     ~itkGrayscaleConnectedOpeningImageFilterIUC3IUC3_Pointer();
     itkGrayscaleConnectedOpeningImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGrayscaleConnectedOpeningImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkGrayscaleConnectedOpeningImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkGrayscaleConnectedOpeningImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkGrayscaleConnectedOpeningImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkGrayscaleConnectedOpeningImageFilterIUC3IUC3_Pointer const & r) const;
     itkGrayscaleConnectedOpeningImageFilterIUC3IUC3_Pointer & operator=(itkGrayscaleConnectedOpeningImageFilterIUC3IUC3_Pointer const & r);
     itkGrayscaleConnectedOpeningImageFilterIUC3IUC3_Pointer & operator=(itkGrayscaleConnectedOpeningImageFilterIUC3IUC3 * r);
     itkGrayscaleConnectedOpeningImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGrayscaleConnectedOpeningImageFilterIUL2IUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkGrayscaleConnectedOpeningImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSeed(itkIndex2 const _arg);
     virtual itkIndex2 GetSeed() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkGrayscaleConnectedOpeningImageFilterIUL2IUL2(itkGrayscaleConnectedOpeningImageFilterIUL2IUL2 const & arg0);
     void operator=(itkGrayscaleConnectedOpeningImageFilterIUL2IUL2 const & arg0);
   protected:
     itkGrayscaleConnectedOpeningImageFilterIUL2IUL2();
     ~itkGrayscaleConnectedOpeningImageFilterIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkGrayscaleConnectedOpeningImageFilterIUL2IUL2_Pointer {
   public:
     itkGrayscaleConnectedOpeningImageFilterIUL2IUL2_Pointer();
     itkGrayscaleConnectedOpeningImageFilterIUL2IUL2_Pointer(itkGrayscaleConnectedOpeningImageFilterIUL2IUL2_Pointer const & p);
     itkGrayscaleConnectedOpeningImageFilterIUL2IUL2_Pointer(itkGrayscaleConnectedOpeningImageFilterIUL2IUL2 * p);
     ~itkGrayscaleConnectedOpeningImageFilterIUL2IUL2_Pointer();
     itkGrayscaleConnectedOpeningImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGrayscaleConnectedOpeningImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkGrayscaleConnectedOpeningImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkGrayscaleConnectedOpeningImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkGrayscaleConnectedOpeningImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkGrayscaleConnectedOpeningImageFilterIUL2IUL2_Pointer const & r) const;
     itkGrayscaleConnectedOpeningImageFilterIUL2IUL2_Pointer & operator=(itkGrayscaleConnectedOpeningImageFilterIUL2IUL2_Pointer const & r);
     itkGrayscaleConnectedOpeningImageFilterIUL2IUL2_Pointer & operator=(itkGrayscaleConnectedOpeningImageFilterIUL2IUL2 * r);
     itkGrayscaleConnectedOpeningImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGrayscaleConnectedOpeningImageFilterIUL3IUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkGrayscaleConnectedOpeningImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSeed(itkIndex3 const _arg);
     virtual itkIndex3 GetSeed() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkGrayscaleConnectedOpeningImageFilterIUL3IUL3(itkGrayscaleConnectedOpeningImageFilterIUL3IUL3 const & arg0);
     void operator=(itkGrayscaleConnectedOpeningImageFilterIUL3IUL3 const & arg0);
   protected:
     itkGrayscaleConnectedOpeningImageFilterIUL3IUL3();
     ~itkGrayscaleConnectedOpeningImageFilterIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkGrayscaleConnectedOpeningImageFilterIUL3IUL3_Pointer {
   public:
     itkGrayscaleConnectedOpeningImageFilterIUL3IUL3_Pointer();
     itkGrayscaleConnectedOpeningImageFilterIUL3IUL3_Pointer(itkGrayscaleConnectedOpeningImageFilterIUL3IUL3_Pointer const & p);
     itkGrayscaleConnectedOpeningImageFilterIUL3IUL3_Pointer(itkGrayscaleConnectedOpeningImageFilterIUL3IUL3 * p);
     ~itkGrayscaleConnectedOpeningImageFilterIUL3IUL3_Pointer();
     itkGrayscaleConnectedOpeningImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGrayscaleConnectedOpeningImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkGrayscaleConnectedOpeningImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkGrayscaleConnectedOpeningImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkGrayscaleConnectedOpeningImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkGrayscaleConnectedOpeningImageFilterIUL3IUL3_Pointer const & r) const;
     itkGrayscaleConnectedOpeningImageFilterIUL3IUL3_Pointer & operator=(itkGrayscaleConnectedOpeningImageFilterIUL3IUL3_Pointer const & r);
     itkGrayscaleConnectedOpeningImageFilterIUL3IUL3_Pointer & operator=(itkGrayscaleConnectedOpeningImageFilterIUL3IUL3 * r);
     itkGrayscaleConnectedOpeningImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGrayscaleConnectedOpeningImageFilterIUS2IUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkGrayscaleConnectedOpeningImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSeed(itkIndex2 const _arg);
     virtual itkIndex2 GetSeed() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkGrayscaleConnectedOpeningImageFilterIUS2IUS2(itkGrayscaleConnectedOpeningImageFilterIUS2IUS2 const & arg0);
     void operator=(itkGrayscaleConnectedOpeningImageFilterIUS2IUS2 const & arg0);
   protected:
     itkGrayscaleConnectedOpeningImageFilterIUS2IUS2();
     ~itkGrayscaleConnectedOpeningImageFilterIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkGrayscaleConnectedOpeningImageFilterIUS2IUS2_Pointer {
   public:
     itkGrayscaleConnectedOpeningImageFilterIUS2IUS2_Pointer();
     itkGrayscaleConnectedOpeningImageFilterIUS2IUS2_Pointer(itkGrayscaleConnectedOpeningImageFilterIUS2IUS2_Pointer const & p);
     itkGrayscaleConnectedOpeningImageFilterIUS2IUS2_Pointer(itkGrayscaleConnectedOpeningImageFilterIUS2IUS2 * p);
     ~itkGrayscaleConnectedOpeningImageFilterIUS2IUS2_Pointer();
     itkGrayscaleConnectedOpeningImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGrayscaleConnectedOpeningImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkGrayscaleConnectedOpeningImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkGrayscaleConnectedOpeningImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkGrayscaleConnectedOpeningImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkGrayscaleConnectedOpeningImageFilterIUS2IUS2_Pointer const & r) const;
     itkGrayscaleConnectedOpeningImageFilterIUS2IUS2_Pointer & operator=(itkGrayscaleConnectedOpeningImageFilterIUS2IUS2_Pointer const & r);
     itkGrayscaleConnectedOpeningImageFilterIUS2IUS2_Pointer & operator=(itkGrayscaleConnectedOpeningImageFilterIUS2IUS2 * r);
     itkGrayscaleConnectedOpeningImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGrayscaleConnectedOpeningImageFilterIUS3IUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkGrayscaleConnectedOpeningImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSeed(itkIndex3 const _arg);
     virtual itkIndex3 GetSeed() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkGrayscaleConnectedOpeningImageFilterIUS3IUS3(itkGrayscaleConnectedOpeningImageFilterIUS3IUS3 const & arg0);
     void operator=(itkGrayscaleConnectedOpeningImageFilterIUS3IUS3 const & arg0);
   protected:
     itkGrayscaleConnectedOpeningImageFilterIUS3IUS3();
     ~itkGrayscaleConnectedOpeningImageFilterIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkGrayscaleConnectedOpeningImageFilterIUS3IUS3_Pointer {
   public:
     itkGrayscaleConnectedOpeningImageFilterIUS3IUS3_Pointer();
     itkGrayscaleConnectedOpeningImageFilterIUS3IUS3_Pointer(itkGrayscaleConnectedOpeningImageFilterIUS3IUS3_Pointer const & p);
     itkGrayscaleConnectedOpeningImageFilterIUS3IUS3_Pointer(itkGrayscaleConnectedOpeningImageFilterIUS3IUS3 * p);
     ~itkGrayscaleConnectedOpeningImageFilterIUS3IUS3_Pointer();
     itkGrayscaleConnectedOpeningImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGrayscaleConnectedOpeningImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkGrayscaleConnectedOpeningImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkGrayscaleConnectedOpeningImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkGrayscaleConnectedOpeningImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkGrayscaleConnectedOpeningImageFilterIUS3IUS3_Pointer const & r) const;
     itkGrayscaleConnectedOpeningImageFilterIUS3IUS3_Pointer & operator=(itkGrayscaleConnectedOpeningImageFilterIUS3IUS3_Pointer const & r);
     itkGrayscaleConnectedOpeningImageFilterIUS3IUS3_Pointer & operator=(itkGrayscaleConnectedOpeningImageFilterIUS3IUS3 * r);
     itkGrayscaleConnectedOpeningImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


