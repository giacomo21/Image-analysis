// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkMaskedRankImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkMaskedRankImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkMaskedRankImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkMaskedRankImageFilterJava
#endif
#ifdef SWIGLUA
%module itkMaskedRankImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkMaskedRankImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkMaskedRankImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkMaskedRankImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkMaskedRankImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkMaskedRankImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkMaskedRankImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkMaskedRankImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkMaskedRankImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkMaskedRankImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkMaskedRankImageFilterPython
#endif
#ifdef SWIGR
%module itkMaskedRankImageFilterR
#endif
#ifdef SWIGRUBY
%module itkMaskedRankImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkMaskedRankImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkMaskedRankImageFilterTcl
#endif
#ifdef SWIGXML
%module itkMaskedRankImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Review.includes"
%}


%{
%}




%import wrap_ITKRegions.i
%import wrap_itkOffset.i
%import wrap_itkIndex.i
%import wrap_itkImage.i
%import wrap_itkMovingHistogramImageFilterBase.i
%import wrap_ITKCommonBase.i


%include itk.i
%include wrap_itkMaskedRankImageFilter_ext.i


 class itkMaskedRankImageFilterID2IUC2ID2SE2_Pointer {
   public:
     itkMaskedRankImageFilterID2IUC2ID2SE2_Pointer();
     itkMaskedRankImageFilterID2IUC2ID2SE2_Pointer(itkMaskedRankImageFilterID2IUC2ID2SE2_Pointer const & p);
     itkMaskedRankImageFilterID2IUC2ID2SE2_Pointer(itkMaskedRankImageFilterID2IUC2ID2SE2 * p);
     ~itkMaskedRankImageFilterID2IUC2ID2SE2_Pointer();
     itkMaskedRankImageFilterID2IUC2ID2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterID2IUC2ID2SE2 * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterID2IUC2ID2SE2_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterID2IUC2ID2SE2_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterID2IUC2ID2SE2_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterID2IUC2ID2SE2_Pointer const & r) const;
     itkMaskedRankImageFilterID2IUC2ID2SE2_Pointer & operator=(itkMaskedRankImageFilterID2IUC2ID2SE2_Pointer const & r);
     itkMaskedRankImageFilterID2IUC2ID2SE2_Pointer & operator=(itkMaskedRankImageFilterID2IUC2ID2SE2 * r);
     itkMaskedRankImageFilterID2IUC2ID2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterID2IUC2ID2SE2_Superclass : public itkMovingHistogramImageFilterBaseID2ID2SE2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkMaskedRankImageFilterID2IUC2ID2SE2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMaskImage(itkImageUC2 * input);
     itkImageUC2 * GetMaskImage();
     void SetInput1(itkImageD2 * input);
     void SetInput2(itkImageUC2 * input);
     itkImageUC2 * GetOutputMask();
     virtual void AllocateOutputs();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void SetFillValue(double const _arg);
     virtual double GetFillValue() const;
     virtual void SetMaskValue(unsigned char const _arg);
     virtual unsigned char GetMaskValue() const;
     virtual void SetBackgroundMaskValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundMaskValue() const;
     void SetGenerateOutputMask(bool arg0);
     virtual bool GetGenerateOutputMask() const;
   private:
     itkMaskedRankImageFilterID2IUC2ID2SE2_Superclass(itkMaskedRankImageFilterID2IUC2ID2SE2_Superclass const & arg0);
     void operator=(itkMaskedRankImageFilterID2IUC2ID2SE2_Superclass const & arg0);
   protected:
     itkMaskedRankImageFilterID2IUC2ID2SE2_Superclass();
     ~itkMaskedRankImageFilterID2IUC2ID2SE2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::MaskedRankHistogram< double > * NewHistogram();
     void pushHistogram(itk::MaskedRankHistogram< double > * histogram, std::list< itkOffset2 > const * addedList, std::list< itkOffset2 > const * removedList, itkImageRegion2 const & inputRegion, itkImageRegion2 const & kernRegion, itkImageD2 const * inputImage, itkImageUC2 const * maskImage, itkIndex2 const currentIdx);
 };


 class itkMaskedRankImageFilterID2IUC2ID2SE2_Superclass_Pointer {
   public:
     itkMaskedRankImageFilterID2IUC2ID2SE2_Superclass_Pointer();
     itkMaskedRankImageFilterID2IUC2ID2SE2_Superclass_Pointer(itkMaskedRankImageFilterID2IUC2ID2SE2_Superclass_Pointer const & p);
     itkMaskedRankImageFilterID2IUC2ID2SE2_Superclass_Pointer(itkMaskedRankImageFilterID2IUC2ID2SE2_Superclass * p);
     ~itkMaskedRankImageFilterID2IUC2ID2SE2_Superclass_Pointer();
     itkMaskedRankImageFilterID2IUC2ID2SE2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterID2IUC2ID2SE2_Superclass * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterID2IUC2ID2SE2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterID2IUC2ID2SE2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterID2IUC2ID2SE2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterID2IUC2ID2SE2_Superclass_Pointer const & r) const;
     itkMaskedRankImageFilterID2IUC2ID2SE2_Superclass_Pointer & operator=(itkMaskedRankImageFilterID2IUC2ID2SE2_Superclass_Pointer const & r);
     itkMaskedRankImageFilterID2IUC2ID2SE2_Superclass_Pointer & operator=(itkMaskedRankImageFilterID2IUC2ID2SE2_Superclass * r);
     itkMaskedRankImageFilterID2IUC2ID2SE2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterID2IUL2ID2SE2_Pointer {
   public:
     itkMaskedRankImageFilterID2IUL2ID2SE2_Pointer();
     itkMaskedRankImageFilterID2IUL2ID2SE2_Pointer(itkMaskedRankImageFilterID2IUL2ID2SE2_Pointer const & p);
     itkMaskedRankImageFilterID2IUL2ID2SE2_Pointer(itkMaskedRankImageFilterID2IUL2ID2SE2 * p);
     ~itkMaskedRankImageFilterID2IUL2ID2SE2_Pointer();
     itkMaskedRankImageFilterID2IUL2ID2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterID2IUL2ID2SE2 * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterID2IUL2ID2SE2_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterID2IUL2ID2SE2_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterID2IUL2ID2SE2_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterID2IUL2ID2SE2_Pointer const & r) const;
     itkMaskedRankImageFilterID2IUL2ID2SE2_Pointer & operator=(itkMaskedRankImageFilterID2IUL2ID2SE2_Pointer const & r);
     itkMaskedRankImageFilterID2IUL2ID2SE2_Pointer & operator=(itkMaskedRankImageFilterID2IUL2ID2SE2 * r);
     itkMaskedRankImageFilterID2IUL2ID2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterID2IUL2ID2SE2_Superclass : public itkMovingHistogramImageFilterBaseID2ID2SE2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkMaskedRankImageFilterID2IUL2ID2SE2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMaskImage(itkImageUL2 * input);
     itkImageUL2 * GetMaskImage();
     void SetInput1(itkImageD2 * input);
     void SetInput2(itkImageUL2 * input);
     itkImageUL2 * GetOutputMask();
     virtual void AllocateOutputs();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void SetFillValue(double const _arg);
     virtual double GetFillValue() const;
     virtual void SetMaskValue(unsigned long const _arg);
     virtual unsigned long GetMaskValue() const;
     virtual void SetBackgroundMaskValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundMaskValue() const;
     void SetGenerateOutputMask(bool arg0);
     virtual bool GetGenerateOutputMask() const;
   private:
     itkMaskedRankImageFilterID2IUL2ID2SE2_Superclass(itkMaskedRankImageFilterID2IUL2ID2SE2_Superclass const & arg0);
     void operator=(itkMaskedRankImageFilterID2IUL2ID2SE2_Superclass const & arg0);
   protected:
     itkMaskedRankImageFilterID2IUL2ID2SE2_Superclass();
     ~itkMaskedRankImageFilterID2IUL2ID2SE2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::MaskedRankHistogram< double > * NewHistogram();
     void pushHistogram(itk::MaskedRankHistogram< double > * histogram, std::list< itkOffset2 > const * addedList, std::list< itkOffset2 > const * removedList, itkImageRegion2 const & inputRegion, itkImageRegion2 const & kernRegion, itkImageD2 const * inputImage, itkImageUL2 const * maskImage, itkIndex2 const currentIdx);
 };


 class itkMaskedRankImageFilterID2IUL2ID2SE2_Superclass_Pointer {
   public:
     itkMaskedRankImageFilterID2IUL2ID2SE2_Superclass_Pointer();
     itkMaskedRankImageFilterID2IUL2ID2SE2_Superclass_Pointer(itkMaskedRankImageFilterID2IUL2ID2SE2_Superclass_Pointer const & p);
     itkMaskedRankImageFilterID2IUL2ID2SE2_Superclass_Pointer(itkMaskedRankImageFilterID2IUL2ID2SE2_Superclass * p);
     ~itkMaskedRankImageFilterID2IUL2ID2SE2_Superclass_Pointer();
     itkMaskedRankImageFilterID2IUL2ID2SE2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterID2IUL2ID2SE2_Superclass * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterID2IUL2ID2SE2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterID2IUL2ID2SE2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterID2IUL2ID2SE2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterID2IUL2ID2SE2_Superclass_Pointer const & r) const;
     itkMaskedRankImageFilterID2IUL2ID2SE2_Superclass_Pointer & operator=(itkMaskedRankImageFilterID2IUL2ID2SE2_Superclass_Pointer const & r);
     itkMaskedRankImageFilterID2IUL2ID2SE2_Superclass_Pointer & operator=(itkMaskedRankImageFilterID2IUL2ID2SE2_Superclass * r);
     itkMaskedRankImageFilterID2IUL2ID2SE2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterID2IUS2ID2SE2_Pointer {
   public:
     itkMaskedRankImageFilterID2IUS2ID2SE2_Pointer();
     itkMaskedRankImageFilterID2IUS2ID2SE2_Pointer(itkMaskedRankImageFilterID2IUS2ID2SE2_Pointer const & p);
     itkMaskedRankImageFilterID2IUS2ID2SE2_Pointer(itkMaskedRankImageFilterID2IUS2ID2SE2 * p);
     ~itkMaskedRankImageFilterID2IUS2ID2SE2_Pointer();
     itkMaskedRankImageFilterID2IUS2ID2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterID2IUS2ID2SE2 * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterID2IUS2ID2SE2_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterID2IUS2ID2SE2_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterID2IUS2ID2SE2_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterID2IUS2ID2SE2_Pointer const & r) const;
     itkMaskedRankImageFilterID2IUS2ID2SE2_Pointer & operator=(itkMaskedRankImageFilterID2IUS2ID2SE2_Pointer const & r);
     itkMaskedRankImageFilterID2IUS2ID2SE2_Pointer & operator=(itkMaskedRankImageFilterID2IUS2ID2SE2 * r);
     itkMaskedRankImageFilterID2IUS2ID2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterID2IUS2ID2SE2_Superclass : public itkMovingHistogramImageFilterBaseID2ID2SE2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkMaskedRankImageFilterID2IUS2ID2SE2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMaskImage(itkImageUS2 * input);
     itkImageUS2 * GetMaskImage();
     void SetInput1(itkImageD2 * input);
     void SetInput2(itkImageUS2 * input);
     itkImageUS2 * GetOutputMask();
     virtual void AllocateOutputs();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void SetFillValue(double const _arg);
     virtual double GetFillValue() const;
     virtual void SetMaskValue(unsigned short const _arg);
     virtual unsigned short GetMaskValue() const;
     virtual void SetBackgroundMaskValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundMaskValue() const;
     void SetGenerateOutputMask(bool arg0);
     virtual bool GetGenerateOutputMask() const;
   private:
     itkMaskedRankImageFilterID2IUS2ID2SE2_Superclass(itkMaskedRankImageFilterID2IUS2ID2SE2_Superclass const & arg0);
     void operator=(itkMaskedRankImageFilterID2IUS2ID2SE2_Superclass const & arg0);
   protected:
     itkMaskedRankImageFilterID2IUS2ID2SE2_Superclass();
     ~itkMaskedRankImageFilterID2IUS2ID2SE2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::MaskedRankHistogram< double > * NewHistogram();
     void pushHistogram(itk::MaskedRankHistogram< double > * histogram, std::list< itkOffset2 > const * addedList, std::list< itkOffset2 > const * removedList, itkImageRegion2 const & inputRegion, itkImageRegion2 const & kernRegion, itkImageD2 const * inputImage, itkImageUS2 const * maskImage, itkIndex2 const currentIdx);
 };


 class itkMaskedRankImageFilterID2IUS2ID2SE2_Superclass_Pointer {
   public:
     itkMaskedRankImageFilterID2IUS2ID2SE2_Superclass_Pointer();
     itkMaskedRankImageFilterID2IUS2ID2SE2_Superclass_Pointer(itkMaskedRankImageFilterID2IUS2ID2SE2_Superclass_Pointer const & p);
     itkMaskedRankImageFilterID2IUS2ID2SE2_Superclass_Pointer(itkMaskedRankImageFilterID2IUS2ID2SE2_Superclass * p);
     ~itkMaskedRankImageFilterID2IUS2ID2SE2_Superclass_Pointer();
     itkMaskedRankImageFilterID2IUS2ID2SE2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterID2IUS2ID2SE2_Superclass * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterID2IUS2ID2SE2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterID2IUS2ID2SE2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterID2IUS2ID2SE2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterID2IUS2ID2SE2_Superclass_Pointer const & r) const;
     itkMaskedRankImageFilterID2IUS2ID2SE2_Superclass_Pointer & operator=(itkMaskedRankImageFilterID2IUS2ID2SE2_Superclass_Pointer const & r);
     itkMaskedRankImageFilterID2IUS2ID2SE2_Superclass_Pointer & operator=(itkMaskedRankImageFilterID2IUS2ID2SE2_Superclass * r);
     itkMaskedRankImageFilterID2IUS2ID2SE2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterID3IUC3ID3SE3_Pointer {
   public:
     itkMaskedRankImageFilterID3IUC3ID3SE3_Pointer();
     itkMaskedRankImageFilterID3IUC3ID3SE3_Pointer(itkMaskedRankImageFilterID3IUC3ID3SE3_Pointer const & p);
     itkMaskedRankImageFilterID3IUC3ID3SE3_Pointer(itkMaskedRankImageFilterID3IUC3ID3SE3 * p);
     ~itkMaskedRankImageFilterID3IUC3ID3SE3_Pointer();
     itkMaskedRankImageFilterID3IUC3ID3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterID3IUC3ID3SE3 * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterID3IUC3ID3SE3_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterID3IUC3ID3SE3_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterID3IUC3ID3SE3_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterID3IUC3ID3SE3_Pointer const & r) const;
     itkMaskedRankImageFilterID3IUC3ID3SE3_Pointer & operator=(itkMaskedRankImageFilterID3IUC3ID3SE3_Pointer const & r);
     itkMaskedRankImageFilterID3IUC3ID3SE3_Pointer & operator=(itkMaskedRankImageFilterID3IUC3ID3SE3 * r);
     itkMaskedRankImageFilterID3IUC3ID3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterID3IUC3ID3SE3_Superclass : public itkMovingHistogramImageFilterBaseID3ID3SE3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkMaskedRankImageFilterID3IUC3ID3SE3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMaskImage(itkImageUC3 * input);
     itkImageUC3 * GetMaskImage();
     void SetInput1(itkImageD3 * input);
     void SetInput2(itkImageUC3 * input);
     itkImageUC3 * GetOutputMask();
     virtual void AllocateOutputs();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void SetFillValue(double const _arg);
     virtual double GetFillValue() const;
     virtual void SetMaskValue(unsigned char const _arg);
     virtual unsigned char GetMaskValue() const;
     virtual void SetBackgroundMaskValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundMaskValue() const;
     void SetGenerateOutputMask(bool arg0);
     virtual bool GetGenerateOutputMask() const;
   private:
     itkMaskedRankImageFilterID3IUC3ID3SE3_Superclass(itkMaskedRankImageFilterID3IUC3ID3SE3_Superclass const & arg0);
     void operator=(itkMaskedRankImageFilterID3IUC3ID3SE3_Superclass const & arg0);
   protected:
     itkMaskedRankImageFilterID3IUC3ID3SE3_Superclass();
     ~itkMaskedRankImageFilterID3IUC3ID3SE3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::MaskedRankHistogram< double > * NewHistogram();
     void pushHistogram(itk::MaskedRankHistogram< double > * histogram, std::list< itkOffset3 > const * addedList, std::list< itkOffset3 > const * removedList, itkImageRegion3 const & inputRegion, itkImageRegion3 const & kernRegion, itkImageD3 const * inputImage, itkImageUC3 const * maskImage, itkIndex3 const currentIdx);
 };


 class itkMaskedRankImageFilterID3IUC3ID3SE3_Superclass_Pointer {
   public:
     itkMaskedRankImageFilterID3IUC3ID3SE3_Superclass_Pointer();
     itkMaskedRankImageFilterID3IUC3ID3SE3_Superclass_Pointer(itkMaskedRankImageFilterID3IUC3ID3SE3_Superclass_Pointer const & p);
     itkMaskedRankImageFilterID3IUC3ID3SE3_Superclass_Pointer(itkMaskedRankImageFilterID3IUC3ID3SE3_Superclass * p);
     ~itkMaskedRankImageFilterID3IUC3ID3SE3_Superclass_Pointer();
     itkMaskedRankImageFilterID3IUC3ID3SE3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterID3IUC3ID3SE3_Superclass * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterID3IUC3ID3SE3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterID3IUC3ID3SE3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterID3IUC3ID3SE3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterID3IUC3ID3SE3_Superclass_Pointer const & r) const;
     itkMaskedRankImageFilterID3IUC3ID3SE3_Superclass_Pointer & operator=(itkMaskedRankImageFilterID3IUC3ID3SE3_Superclass_Pointer const & r);
     itkMaskedRankImageFilterID3IUC3ID3SE3_Superclass_Pointer & operator=(itkMaskedRankImageFilterID3IUC3ID3SE3_Superclass * r);
     itkMaskedRankImageFilterID3IUC3ID3SE3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterID3IUL3ID3SE3_Pointer {
   public:
     itkMaskedRankImageFilterID3IUL3ID3SE3_Pointer();
     itkMaskedRankImageFilterID3IUL3ID3SE3_Pointer(itkMaskedRankImageFilterID3IUL3ID3SE3_Pointer const & p);
     itkMaskedRankImageFilterID3IUL3ID3SE3_Pointer(itkMaskedRankImageFilterID3IUL3ID3SE3 * p);
     ~itkMaskedRankImageFilterID3IUL3ID3SE3_Pointer();
     itkMaskedRankImageFilterID3IUL3ID3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterID3IUL3ID3SE3 * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterID3IUL3ID3SE3_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterID3IUL3ID3SE3_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterID3IUL3ID3SE3_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterID3IUL3ID3SE3_Pointer const & r) const;
     itkMaskedRankImageFilterID3IUL3ID3SE3_Pointer & operator=(itkMaskedRankImageFilterID3IUL3ID3SE3_Pointer const & r);
     itkMaskedRankImageFilterID3IUL3ID3SE3_Pointer & operator=(itkMaskedRankImageFilterID3IUL3ID3SE3 * r);
     itkMaskedRankImageFilterID3IUL3ID3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterID3IUL3ID3SE3_Superclass : public itkMovingHistogramImageFilterBaseID3ID3SE3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkMaskedRankImageFilterID3IUL3ID3SE3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMaskImage(itkImageUL3 * input);
     itkImageUL3 * GetMaskImage();
     void SetInput1(itkImageD3 * input);
     void SetInput2(itkImageUL3 * input);
     itkImageUL3 * GetOutputMask();
     virtual void AllocateOutputs();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void SetFillValue(double const _arg);
     virtual double GetFillValue() const;
     virtual void SetMaskValue(unsigned long const _arg);
     virtual unsigned long GetMaskValue() const;
     virtual void SetBackgroundMaskValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundMaskValue() const;
     void SetGenerateOutputMask(bool arg0);
     virtual bool GetGenerateOutputMask() const;
   private:
     itkMaskedRankImageFilterID3IUL3ID3SE3_Superclass(itkMaskedRankImageFilterID3IUL3ID3SE3_Superclass const & arg0);
     void operator=(itkMaskedRankImageFilterID3IUL3ID3SE3_Superclass const & arg0);
   protected:
     itkMaskedRankImageFilterID3IUL3ID3SE3_Superclass();
     ~itkMaskedRankImageFilterID3IUL3ID3SE3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::MaskedRankHistogram< double > * NewHistogram();
     void pushHistogram(itk::MaskedRankHistogram< double > * histogram, std::list< itkOffset3 > const * addedList, std::list< itkOffset3 > const * removedList, itkImageRegion3 const & inputRegion, itkImageRegion3 const & kernRegion, itkImageD3 const * inputImage, itkImageUL3 const * maskImage, itkIndex3 const currentIdx);
 };


 class itkMaskedRankImageFilterID3IUL3ID3SE3_Superclass_Pointer {
   public:
     itkMaskedRankImageFilterID3IUL3ID3SE3_Superclass_Pointer();
     itkMaskedRankImageFilterID3IUL3ID3SE3_Superclass_Pointer(itkMaskedRankImageFilterID3IUL3ID3SE3_Superclass_Pointer const & p);
     itkMaskedRankImageFilterID3IUL3ID3SE3_Superclass_Pointer(itkMaskedRankImageFilterID3IUL3ID3SE3_Superclass * p);
     ~itkMaskedRankImageFilterID3IUL3ID3SE3_Superclass_Pointer();
     itkMaskedRankImageFilterID3IUL3ID3SE3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterID3IUL3ID3SE3_Superclass * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterID3IUL3ID3SE3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterID3IUL3ID3SE3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterID3IUL3ID3SE3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterID3IUL3ID3SE3_Superclass_Pointer const & r) const;
     itkMaskedRankImageFilterID3IUL3ID3SE3_Superclass_Pointer & operator=(itkMaskedRankImageFilterID3IUL3ID3SE3_Superclass_Pointer const & r);
     itkMaskedRankImageFilterID3IUL3ID3SE3_Superclass_Pointer & operator=(itkMaskedRankImageFilterID3IUL3ID3SE3_Superclass * r);
     itkMaskedRankImageFilterID3IUL3ID3SE3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterID3IUS3ID3SE3_Pointer {
   public:
     itkMaskedRankImageFilterID3IUS3ID3SE3_Pointer();
     itkMaskedRankImageFilterID3IUS3ID3SE3_Pointer(itkMaskedRankImageFilterID3IUS3ID3SE3_Pointer const & p);
     itkMaskedRankImageFilterID3IUS3ID3SE3_Pointer(itkMaskedRankImageFilterID3IUS3ID3SE3 * p);
     ~itkMaskedRankImageFilterID3IUS3ID3SE3_Pointer();
     itkMaskedRankImageFilterID3IUS3ID3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterID3IUS3ID3SE3 * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterID3IUS3ID3SE3_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterID3IUS3ID3SE3_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterID3IUS3ID3SE3_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterID3IUS3ID3SE3_Pointer const & r) const;
     itkMaskedRankImageFilterID3IUS3ID3SE3_Pointer & operator=(itkMaskedRankImageFilterID3IUS3ID3SE3_Pointer const & r);
     itkMaskedRankImageFilterID3IUS3ID3SE3_Pointer & operator=(itkMaskedRankImageFilterID3IUS3ID3SE3 * r);
     itkMaskedRankImageFilterID3IUS3ID3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterID3IUS3ID3SE3_Superclass : public itkMovingHistogramImageFilterBaseID3ID3SE3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkMaskedRankImageFilterID3IUS3ID3SE3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMaskImage(itkImageUS3 * input);
     itkImageUS3 * GetMaskImage();
     void SetInput1(itkImageD3 * input);
     void SetInput2(itkImageUS3 * input);
     itkImageUS3 * GetOutputMask();
     virtual void AllocateOutputs();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void SetFillValue(double const _arg);
     virtual double GetFillValue() const;
     virtual void SetMaskValue(unsigned short const _arg);
     virtual unsigned short GetMaskValue() const;
     virtual void SetBackgroundMaskValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundMaskValue() const;
     void SetGenerateOutputMask(bool arg0);
     virtual bool GetGenerateOutputMask() const;
   private:
     itkMaskedRankImageFilterID3IUS3ID3SE3_Superclass(itkMaskedRankImageFilterID3IUS3ID3SE3_Superclass const & arg0);
     void operator=(itkMaskedRankImageFilterID3IUS3ID3SE3_Superclass const & arg0);
   protected:
     itkMaskedRankImageFilterID3IUS3ID3SE3_Superclass();
     ~itkMaskedRankImageFilterID3IUS3ID3SE3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::MaskedRankHistogram< double > * NewHistogram();
     void pushHistogram(itk::MaskedRankHistogram< double > * histogram, std::list< itkOffset3 > const * addedList, std::list< itkOffset3 > const * removedList, itkImageRegion3 const & inputRegion, itkImageRegion3 const & kernRegion, itkImageD3 const * inputImage, itkImageUS3 const * maskImage, itkIndex3 const currentIdx);
 };


 class itkMaskedRankImageFilterID3IUS3ID3SE3_Superclass_Pointer {
   public:
     itkMaskedRankImageFilterID3IUS3ID3SE3_Superclass_Pointer();
     itkMaskedRankImageFilterID3IUS3ID3SE3_Superclass_Pointer(itkMaskedRankImageFilterID3IUS3ID3SE3_Superclass_Pointer const & p);
     itkMaskedRankImageFilterID3IUS3ID3SE3_Superclass_Pointer(itkMaskedRankImageFilterID3IUS3ID3SE3_Superclass * p);
     ~itkMaskedRankImageFilterID3IUS3ID3SE3_Superclass_Pointer();
     itkMaskedRankImageFilterID3IUS3ID3SE3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterID3IUS3ID3SE3_Superclass * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterID3IUS3ID3SE3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterID3IUS3ID3SE3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterID3IUS3ID3SE3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterID3IUS3ID3SE3_Superclass_Pointer const & r) const;
     itkMaskedRankImageFilterID3IUS3ID3SE3_Superclass_Pointer & operator=(itkMaskedRankImageFilterID3IUS3ID3SE3_Superclass_Pointer const & r);
     itkMaskedRankImageFilterID3IUS3ID3SE3_Superclass_Pointer & operator=(itkMaskedRankImageFilterID3IUS3ID3SE3_Superclass * r);
     itkMaskedRankImageFilterID3IUS3ID3SE3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIF2IUC2IF2SE2_Pointer {
   public:
     itkMaskedRankImageFilterIF2IUC2IF2SE2_Pointer();
     itkMaskedRankImageFilterIF2IUC2IF2SE2_Pointer(itkMaskedRankImageFilterIF2IUC2IF2SE2_Pointer const & p);
     itkMaskedRankImageFilterIF2IUC2IF2SE2_Pointer(itkMaskedRankImageFilterIF2IUC2IF2SE2 * p);
     ~itkMaskedRankImageFilterIF2IUC2IF2SE2_Pointer();
     itkMaskedRankImageFilterIF2IUC2IF2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIF2IUC2IF2SE2 * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIF2IUC2IF2SE2_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIF2IUC2IF2SE2_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIF2IUC2IF2SE2_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIF2IUC2IF2SE2_Pointer const & r) const;
     itkMaskedRankImageFilterIF2IUC2IF2SE2_Pointer & operator=(itkMaskedRankImageFilterIF2IUC2IF2SE2_Pointer const & r);
     itkMaskedRankImageFilterIF2IUC2IF2SE2_Pointer & operator=(itkMaskedRankImageFilterIF2IUC2IF2SE2 * r);
     itkMaskedRankImageFilterIF2IUC2IF2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIF2IUC2IF2SE2_Superclass : public itkMovingHistogramImageFilterBaseIF2IF2SE2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkMaskedRankImageFilterIF2IUC2IF2SE2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMaskImage(itkImageUC2 * input);
     itkImageUC2 * GetMaskImage();
     void SetInput1(itkImageF2 * input);
     void SetInput2(itkImageUC2 * input);
     itkImageUC2 * GetOutputMask();
     virtual void AllocateOutputs();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void SetFillValue(float const _arg);
     virtual float GetFillValue() const;
     virtual void SetMaskValue(unsigned char const _arg);
     virtual unsigned char GetMaskValue() const;
     virtual void SetBackgroundMaskValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundMaskValue() const;
     void SetGenerateOutputMask(bool arg0);
     virtual bool GetGenerateOutputMask() const;
   private:
     itkMaskedRankImageFilterIF2IUC2IF2SE2_Superclass(itkMaskedRankImageFilterIF2IUC2IF2SE2_Superclass const & arg0);
     void operator=(itkMaskedRankImageFilterIF2IUC2IF2SE2_Superclass const & arg0);
   protected:
     itkMaskedRankImageFilterIF2IUC2IF2SE2_Superclass();
     ~itkMaskedRankImageFilterIF2IUC2IF2SE2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::MaskedRankHistogram< float > * NewHistogram();
     void pushHistogram(itk::MaskedRankHistogram< float > * histogram, std::list< itkOffset2 > const * addedList, std::list< itkOffset2 > const * removedList, itkImageRegion2 const & inputRegion, itkImageRegion2 const & kernRegion, itkImageF2 const * inputImage, itkImageUC2 const * maskImage, itkIndex2 const currentIdx);
 };


 class itkMaskedRankImageFilterIF2IUC2IF2SE2_Superclass_Pointer {
   public:
     itkMaskedRankImageFilterIF2IUC2IF2SE2_Superclass_Pointer();
     itkMaskedRankImageFilterIF2IUC2IF2SE2_Superclass_Pointer(itkMaskedRankImageFilterIF2IUC2IF2SE2_Superclass_Pointer const & p);
     itkMaskedRankImageFilterIF2IUC2IF2SE2_Superclass_Pointer(itkMaskedRankImageFilterIF2IUC2IF2SE2_Superclass * p);
     ~itkMaskedRankImageFilterIF2IUC2IF2SE2_Superclass_Pointer();
     itkMaskedRankImageFilterIF2IUC2IF2SE2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIF2IUC2IF2SE2_Superclass * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIF2IUC2IF2SE2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIF2IUC2IF2SE2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIF2IUC2IF2SE2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIF2IUC2IF2SE2_Superclass_Pointer const & r) const;
     itkMaskedRankImageFilterIF2IUC2IF2SE2_Superclass_Pointer & operator=(itkMaskedRankImageFilterIF2IUC2IF2SE2_Superclass_Pointer const & r);
     itkMaskedRankImageFilterIF2IUC2IF2SE2_Superclass_Pointer & operator=(itkMaskedRankImageFilterIF2IUC2IF2SE2_Superclass * r);
     itkMaskedRankImageFilterIF2IUC2IF2SE2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIF2IUL2IF2SE2_Pointer {
   public:
     itkMaskedRankImageFilterIF2IUL2IF2SE2_Pointer();
     itkMaskedRankImageFilterIF2IUL2IF2SE2_Pointer(itkMaskedRankImageFilterIF2IUL2IF2SE2_Pointer const & p);
     itkMaskedRankImageFilterIF2IUL2IF2SE2_Pointer(itkMaskedRankImageFilterIF2IUL2IF2SE2 * p);
     ~itkMaskedRankImageFilterIF2IUL2IF2SE2_Pointer();
     itkMaskedRankImageFilterIF2IUL2IF2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIF2IUL2IF2SE2 * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIF2IUL2IF2SE2_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIF2IUL2IF2SE2_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIF2IUL2IF2SE2_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIF2IUL2IF2SE2_Pointer const & r) const;
     itkMaskedRankImageFilterIF2IUL2IF2SE2_Pointer & operator=(itkMaskedRankImageFilterIF2IUL2IF2SE2_Pointer const & r);
     itkMaskedRankImageFilterIF2IUL2IF2SE2_Pointer & operator=(itkMaskedRankImageFilterIF2IUL2IF2SE2 * r);
     itkMaskedRankImageFilterIF2IUL2IF2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIF2IUL2IF2SE2_Superclass : public itkMovingHistogramImageFilterBaseIF2IF2SE2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkMaskedRankImageFilterIF2IUL2IF2SE2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMaskImage(itkImageUL2 * input);
     itkImageUL2 * GetMaskImage();
     void SetInput1(itkImageF2 * input);
     void SetInput2(itkImageUL2 * input);
     itkImageUL2 * GetOutputMask();
     virtual void AllocateOutputs();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void SetFillValue(float const _arg);
     virtual float GetFillValue() const;
     virtual void SetMaskValue(unsigned long const _arg);
     virtual unsigned long GetMaskValue() const;
     virtual void SetBackgroundMaskValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundMaskValue() const;
     void SetGenerateOutputMask(bool arg0);
     virtual bool GetGenerateOutputMask() const;
   private:
     itkMaskedRankImageFilterIF2IUL2IF2SE2_Superclass(itkMaskedRankImageFilterIF2IUL2IF2SE2_Superclass const & arg0);
     void operator=(itkMaskedRankImageFilterIF2IUL2IF2SE2_Superclass const & arg0);
   protected:
     itkMaskedRankImageFilterIF2IUL2IF2SE2_Superclass();
     ~itkMaskedRankImageFilterIF2IUL2IF2SE2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::MaskedRankHistogram< float > * NewHistogram();
     void pushHistogram(itk::MaskedRankHistogram< float > * histogram, std::list< itkOffset2 > const * addedList, std::list< itkOffset2 > const * removedList, itkImageRegion2 const & inputRegion, itkImageRegion2 const & kernRegion, itkImageF2 const * inputImage, itkImageUL2 const * maskImage, itkIndex2 const currentIdx);
 };


 class itkMaskedRankImageFilterIF2IUL2IF2SE2_Superclass_Pointer {
   public:
     itkMaskedRankImageFilterIF2IUL2IF2SE2_Superclass_Pointer();
     itkMaskedRankImageFilterIF2IUL2IF2SE2_Superclass_Pointer(itkMaskedRankImageFilterIF2IUL2IF2SE2_Superclass_Pointer const & p);
     itkMaskedRankImageFilterIF2IUL2IF2SE2_Superclass_Pointer(itkMaskedRankImageFilterIF2IUL2IF2SE2_Superclass * p);
     ~itkMaskedRankImageFilterIF2IUL2IF2SE2_Superclass_Pointer();
     itkMaskedRankImageFilterIF2IUL2IF2SE2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIF2IUL2IF2SE2_Superclass * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIF2IUL2IF2SE2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIF2IUL2IF2SE2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIF2IUL2IF2SE2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIF2IUL2IF2SE2_Superclass_Pointer const & r) const;
     itkMaskedRankImageFilterIF2IUL2IF2SE2_Superclass_Pointer & operator=(itkMaskedRankImageFilterIF2IUL2IF2SE2_Superclass_Pointer const & r);
     itkMaskedRankImageFilterIF2IUL2IF2SE2_Superclass_Pointer & operator=(itkMaskedRankImageFilterIF2IUL2IF2SE2_Superclass * r);
     itkMaskedRankImageFilterIF2IUL2IF2SE2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIF2IUS2IF2SE2_Pointer {
   public:
     itkMaskedRankImageFilterIF2IUS2IF2SE2_Pointer();
     itkMaskedRankImageFilterIF2IUS2IF2SE2_Pointer(itkMaskedRankImageFilterIF2IUS2IF2SE2_Pointer const & p);
     itkMaskedRankImageFilterIF2IUS2IF2SE2_Pointer(itkMaskedRankImageFilterIF2IUS2IF2SE2 * p);
     ~itkMaskedRankImageFilterIF2IUS2IF2SE2_Pointer();
     itkMaskedRankImageFilterIF2IUS2IF2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIF2IUS2IF2SE2 * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIF2IUS2IF2SE2_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIF2IUS2IF2SE2_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIF2IUS2IF2SE2_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIF2IUS2IF2SE2_Pointer const & r) const;
     itkMaskedRankImageFilterIF2IUS2IF2SE2_Pointer & operator=(itkMaskedRankImageFilterIF2IUS2IF2SE2_Pointer const & r);
     itkMaskedRankImageFilterIF2IUS2IF2SE2_Pointer & operator=(itkMaskedRankImageFilterIF2IUS2IF2SE2 * r);
     itkMaskedRankImageFilterIF2IUS2IF2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIF2IUS2IF2SE2_Superclass : public itkMovingHistogramImageFilterBaseIF2IF2SE2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkMaskedRankImageFilterIF2IUS2IF2SE2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMaskImage(itkImageUS2 * input);
     itkImageUS2 * GetMaskImage();
     void SetInput1(itkImageF2 * input);
     void SetInput2(itkImageUS2 * input);
     itkImageUS2 * GetOutputMask();
     virtual void AllocateOutputs();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void SetFillValue(float const _arg);
     virtual float GetFillValue() const;
     virtual void SetMaskValue(unsigned short const _arg);
     virtual unsigned short GetMaskValue() const;
     virtual void SetBackgroundMaskValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundMaskValue() const;
     void SetGenerateOutputMask(bool arg0);
     virtual bool GetGenerateOutputMask() const;
   private:
     itkMaskedRankImageFilterIF2IUS2IF2SE2_Superclass(itkMaskedRankImageFilterIF2IUS2IF2SE2_Superclass const & arg0);
     void operator=(itkMaskedRankImageFilterIF2IUS2IF2SE2_Superclass const & arg0);
   protected:
     itkMaskedRankImageFilterIF2IUS2IF2SE2_Superclass();
     ~itkMaskedRankImageFilterIF2IUS2IF2SE2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::MaskedRankHistogram< float > * NewHistogram();
     void pushHistogram(itk::MaskedRankHistogram< float > * histogram, std::list< itkOffset2 > const * addedList, std::list< itkOffset2 > const * removedList, itkImageRegion2 const & inputRegion, itkImageRegion2 const & kernRegion, itkImageF2 const * inputImage, itkImageUS2 const * maskImage, itkIndex2 const currentIdx);
 };


 class itkMaskedRankImageFilterIF2IUS2IF2SE2_Superclass_Pointer {
   public:
     itkMaskedRankImageFilterIF2IUS2IF2SE2_Superclass_Pointer();
     itkMaskedRankImageFilterIF2IUS2IF2SE2_Superclass_Pointer(itkMaskedRankImageFilterIF2IUS2IF2SE2_Superclass_Pointer const & p);
     itkMaskedRankImageFilterIF2IUS2IF2SE2_Superclass_Pointer(itkMaskedRankImageFilterIF2IUS2IF2SE2_Superclass * p);
     ~itkMaskedRankImageFilterIF2IUS2IF2SE2_Superclass_Pointer();
     itkMaskedRankImageFilterIF2IUS2IF2SE2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIF2IUS2IF2SE2_Superclass * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIF2IUS2IF2SE2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIF2IUS2IF2SE2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIF2IUS2IF2SE2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIF2IUS2IF2SE2_Superclass_Pointer const & r) const;
     itkMaskedRankImageFilterIF2IUS2IF2SE2_Superclass_Pointer & operator=(itkMaskedRankImageFilterIF2IUS2IF2SE2_Superclass_Pointer const & r);
     itkMaskedRankImageFilterIF2IUS2IF2SE2_Superclass_Pointer & operator=(itkMaskedRankImageFilterIF2IUS2IF2SE2_Superclass * r);
     itkMaskedRankImageFilterIF2IUS2IF2SE2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIF3IUC3IF3SE3_Pointer {
   public:
     itkMaskedRankImageFilterIF3IUC3IF3SE3_Pointer();
     itkMaskedRankImageFilterIF3IUC3IF3SE3_Pointer(itkMaskedRankImageFilterIF3IUC3IF3SE3_Pointer const & p);
     itkMaskedRankImageFilterIF3IUC3IF3SE3_Pointer(itkMaskedRankImageFilterIF3IUC3IF3SE3 * p);
     ~itkMaskedRankImageFilterIF3IUC3IF3SE3_Pointer();
     itkMaskedRankImageFilterIF3IUC3IF3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIF3IUC3IF3SE3 * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIF3IUC3IF3SE3_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIF3IUC3IF3SE3_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIF3IUC3IF3SE3_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIF3IUC3IF3SE3_Pointer const & r) const;
     itkMaskedRankImageFilterIF3IUC3IF3SE3_Pointer & operator=(itkMaskedRankImageFilterIF3IUC3IF3SE3_Pointer const & r);
     itkMaskedRankImageFilterIF3IUC3IF3SE3_Pointer & operator=(itkMaskedRankImageFilterIF3IUC3IF3SE3 * r);
     itkMaskedRankImageFilterIF3IUC3IF3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIF3IUC3IF3SE3_Superclass : public itkMovingHistogramImageFilterBaseIF3IF3SE3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkMaskedRankImageFilterIF3IUC3IF3SE3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMaskImage(itkImageUC3 * input);
     itkImageUC3 * GetMaskImage();
     void SetInput1(itkImageF3 * input);
     void SetInput2(itkImageUC3 * input);
     itkImageUC3 * GetOutputMask();
     virtual void AllocateOutputs();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void SetFillValue(float const _arg);
     virtual float GetFillValue() const;
     virtual void SetMaskValue(unsigned char const _arg);
     virtual unsigned char GetMaskValue() const;
     virtual void SetBackgroundMaskValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundMaskValue() const;
     void SetGenerateOutputMask(bool arg0);
     virtual bool GetGenerateOutputMask() const;
   private:
     itkMaskedRankImageFilterIF3IUC3IF3SE3_Superclass(itkMaskedRankImageFilterIF3IUC3IF3SE3_Superclass const & arg0);
     void operator=(itkMaskedRankImageFilterIF3IUC3IF3SE3_Superclass const & arg0);
   protected:
     itkMaskedRankImageFilterIF3IUC3IF3SE3_Superclass();
     ~itkMaskedRankImageFilterIF3IUC3IF3SE3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::MaskedRankHistogram< float > * NewHistogram();
     void pushHistogram(itk::MaskedRankHistogram< float > * histogram, std::list< itkOffset3 > const * addedList, std::list< itkOffset3 > const * removedList, itkImageRegion3 const & inputRegion, itkImageRegion3 const & kernRegion, itkImageF3 const * inputImage, itkImageUC3 const * maskImage, itkIndex3 const currentIdx);
 };


 class itkMaskedRankImageFilterIF3IUC3IF3SE3_Superclass_Pointer {
   public:
     itkMaskedRankImageFilterIF3IUC3IF3SE3_Superclass_Pointer();
     itkMaskedRankImageFilterIF3IUC3IF3SE3_Superclass_Pointer(itkMaskedRankImageFilterIF3IUC3IF3SE3_Superclass_Pointer const & p);
     itkMaskedRankImageFilterIF3IUC3IF3SE3_Superclass_Pointer(itkMaskedRankImageFilterIF3IUC3IF3SE3_Superclass * p);
     ~itkMaskedRankImageFilterIF3IUC3IF3SE3_Superclass_Pointer();
     itkMaskedRankImageFilterIF3IUC3IF3SE3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIF3IUC3IF3SE3_Superclass * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIF3IUC3IF3SE3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIF3IUC3IF3SE3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIF3IUC3IF3SE3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIF3IUC3IF3SE3_Superclass_Pointer const & r) const;
     itkMaskedRankImageFilterIF3IUC3IF3SE3_Superclass_Pointer & operator=(itkMaskedRankImageFilterIF3IUC3IF3SE3_Superclass_Pointer const & r);
     itkMaskedRankImageFilterIF3IUC3IF3SE3_Superclass_Pointer & operator=(itkMaskedRankImageFilterIF3IUC3IF3SE3_Superclass * r);
     itkMaskedRankImageFilterIF3IUC3IF3SE3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIF3IUL3IF3SE3_Pointer {
   public:
     itkMaskedRankImageFilterIF3IUL3IF3SE3_Pointer();
     itkMaskedRankImageFilterIF3IUL3IF3SE3_Pointer(itkMaskedRankImageFilterIF3IUL3IF3SE3_Pointer const & p);
     itkMaskedRankImageFilterIF3IUL3IF3SE3_Pointer(itkMaskedRankImageFilterIF3IUL3IF3SE3 * p);
     ~itkMaskedRankImageFilterIF3IUL3IF3SE3_Pointer();
     itkMaskedRankImageFilterIF3IUL3IF3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIF3IUL3IF3SE3 * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIF3IUL3IF3SE3_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIF3IUL3IF3SE3_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIF3IUL3IF3SE3_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIF3IUL3IF3SE3_Pointer const & r) const;
     itkMaskedRankImageFilterIF3IUL3IF3SE3_Pointer & operator=(itkMaskedRankImageFilterIF3IUL3IF3SE3_Pointer const & r);
     itkMaskedRankImageFilterIF3IUL3IF3SE3_Pointer & operator=(itkMaskedRankImageFilterIF3IUL3IF3SE3 * r);
     itkMaskedRankImageFilterIF3IUL3IF3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIF3IUL3IF3SE3_Superclass : public itkMovingHistogramImageFilterBaseIF3IF3SE3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkMaskedRankImageFilterIF3IUL3IF3SE3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMaskImage(itkImageUL3 * input);
     itkImageUL3 * GetMaskImage();
     void SetInput1(itkImageF3 * input);
     void SetInput2(itkImageUL3 * input);
     itkImageUL3 * GetOutputMask();
     virtual void AllocateOutputs();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void SetFillValue(float const _arg);
     virtual float GetFillValue() const;
     virtual void SetMaskValue(unsigned long const _arg);
     virtual unsigned long GetMaskValue() const;
     virtual void SetBackgroundMaskValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundMaskValue() const;
     void SetGenerateOutputMask(bool arg0);
     virtual bool GetGenerateOutputMask() const;
   private:
     itkMaskedRankImageFilterIF3IUL3IF3SE3_Superclass(itkMaskedRankImageFilterIF3IUL3IF3SE3_Superclass const & arg0);
     void operator=(itkMaskedRankImageFilterIF3IUL3IF3SE3_Superclass const & arg0);
   protected:
     itkMaskedRankImageFilterIF3IUL3IF3SE3_Superclass();
     ~itkMaskedRankImageFilterIF3IUL3IF3SE3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::MaskedRankHistogram< float > * NewHistogram();
     void pushHistogram(itk::MaskedRankHistogram< float > * histogram, std::list< itkOffset3 > const * addedList, std::list< itkOffset3 > const * removedList, itkImageRegion3 const & inputRegion, itkImageRegion3 const & kernRegion, itkImageF3 const * inputImage, itkImageUL3 const * maskImage, itkIndex3 const currentIdx);
 };


 class itkMaskedRankImageFilterIF3IUL3IF3SE3_Superclass_Pointer {
   public:
     itkMaskedRankImageFilterIF3IUL3IF3SE3_Superclass_Pointer();
     itkMaskedRankImageFilterIF3IUL3IF3SE3_Superclass_Pointer(itkMaskedRankImageFilterIF3IUL3IF3SE3_Superclass_Pointer const & p);
     itkMaskedRankImageFilterIF3IUL3IF3SE3_Superclass_Pointer(itkMaskedRankImageFilterIF3IUL3IF3SE3_Superclass * p);
     ~itkMaskedRankImageFilterIF3IUL3IF3SE3_Superclass_Pointer();
     itkMaskedRankImageFilterIF3IUL3IF3SE3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIF3IUL3IF3SE3_Superclass * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIF3IUL3IF3SE3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIF3IUL3IF3SE3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIF3IUL3IF3SE3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIF3IUL3IF3SE3_Superclass_Pointer const & r) const;
     itkMaskedRankImageFilterIF3IUL3IF3SE3_Superclass_Pointer & operator=(itkMaskedRankImageFilterIF3IUL3IF3SE3_Superclass_Pointer const & r);
     itkMaskedRankImageFilterIF3IUL3IF3SE3_Superclass_Pointer & operator=(itkMaskedRankImageFilterIF3IUL3IF3SE3_Superclass * r);
     itkMaskedRankImageFilterIF3IUL3IF3SE3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIF3IUS3IF3SE3_Pointer {
   public:
     itkMaskedRankImageFilterIF3IUS3IF3SE3_Pointer();
     itkMaskedRankImageFilterIF3IUS3IF3SE3_Pointer(itkMaskedRankImageFilterIF3IUS3IF3SE3_Pointer const & p);
     itkMaskedRankImageFilterIF3IUS3IF3SE3_Pointer(itkMaskedRankImageFilterIF3IUS3IF3SE3 * p);
     ~itkMaskedRankImageFilterIF3IUS3IF3SE3_Pointer();
     itkMaskedRankImageFilterIF3IUS3IF3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIF3IUS3IF3SE3 * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIF3IUS3IF3SE3_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIF3IUS3IF3SE3_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIF3IUS3IF3SE3_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIF3IUS3IF3SE3_Pointer const & r) const;
     itkMaskedRankImageFilterIF3IUS3IF3SE3_Pointer & operator=(itkMaskedRankImageFilterIF3IUS3IF3SE3_Pointer const & r);
     itkMaskedRankImageFilterIF3IUS3IF3SE3_Pointer & operator=(itkMaskedRankImageFilterIF3IUS3IF3SE3 * r);
     itkMaskedRankImageFilterIF3IUS3IF3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIF3IUS3IF3SE3_Superclass : public itkMovingHistogramImageFilterBaseIF3IF3SE3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkMaskedRankImageFilterIF3IUS3IF3SE3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMaskImage(itkImageUS3 * input);
     itkImageUS3 * GetMaskImage();
     void SetInput1(itkImageF3 * input);
     void SetInput2(itkImageUS3 * input);
     itkImageUS3 * GetOutputMask();
     virtual void AllocateOutputs();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void SetFillValue(float const _arg);
     virtual float GetFillValue() const;
     virtual void SetMaskValue(unsigned short const _arg);
     virtual unsigned short GetMaskValue() const;
     virtual void SetBackgroundMaskValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundMaskValue() const;
     void SetGenerateOutputMask(bool arg0);
     virtual bool GetGenerateOutputMask() const;
   private:
     itkMaskedRankImageFilterIF3IUS3IF3SE3_Superclass(itkMaskedRankImageFilterIF3IUS3IF3SE3_Superclass const & arg0);
     void operator=(itkMaskedRankImageFilterIF3IUS3IF3SE3_Superclass const & arg0);
   protected:
     itkMaskedRankImageFilterIF3IUS3IF3SE3_Superclass();
     ~itkMaskedRankImageFilterIF3IUS3IF3SE3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::MaskedRankHistogram< float > * NewHistogram();
     void pushHistogram(itk::MaskedRankHistogram< float > * histogram, std::list< itkOffset3 > const * addedList, std::list< itkOffset3 > const * removedList, itkImageRegion3 const & inputRegion, itkImageRegion3 const & kernRegion, itkImageF3 const * inputImage, itkImageUS3 const * maskImage, itkIndex3 const currentIdx);
 };


 class itkMaskedRankImageFilterIF3IUS3IF3SE3_Superclass_Pointer {
   public:
     itkMaskedRankImageFilterIF3IUS3IF3SE3_Superclass_Pointer();
     itkMaskedRankImageFilterIF3IUS3IF3SE3_Superclass_Pointer(itkMaskedRankImageFilterIF3IUS3IF3SE3_Superclass_Pointer const & p);
     itkMaskedRankImageFilterIF3IUS3IF3SE3_Superclass_Pointer(itkMaskedRankImageFilterIF3IUS3IF3SE3_Superclass * p);
     ~itkMaskedRankImageFilterIF3IUS3IF3SE3_Superclass_Pointer();
     itkMaskedRankImageFilterIF3IUS3IF3SE3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIF3IUS3IF3SE3_Superclass * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIF3IUS3IF3SE3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIF3IUS3IF3SE3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIF3IUS3IF3SE3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIF3IUS3IF3SE3_Superclass_Pointer const & r) const;
     itkMaskedRankImageFilterIF3IUS3IF3SE3_Superclass_Pointer & operator=(itkMaskedRankImageFilterIF3IUS3IF3SE3_Superclass_Pointer const & r);
     itkMaskedRankImageFilterIF3IUS3IF3SE3_Superclass_Pointer & operator=(itkMaskedRankImageFilterIF3IUS3IF3SE3_Superclass * r);
     itkMaskedRankImageFilterIF3IUS3IF3SE3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Pointer {
   public:
     itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Pointer();
     itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Pointer(itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Pointer const & p);
     itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Pointer(itkMaskedRankImageFilterIUC2IUC2IUC2SE2 * p);
     ~itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Pointer();
     itkMaskedRankImageFilterIUC2IUC2IUC2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUC2IUC2IUC2SE2 * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Pointer const & r) const;
     itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Pointer & operator=(itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Pointer const & r);
     itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Pointer & operator=(itkMaskedRankImageFilterIUC2IUC2IUC2SE2 * r);
     itkMaskedRankImageFilterIUC2IUC2IUC2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Superclass : public itkMovingHistogramImageFilterBaseIUC2IUC2SE2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMaskImage(itkImageUC2 * input);
     itkImageUC2 * GetMaskImage();
     void SetInput1(itkImageUC2 * input);
     void SetInput2(itkImageUC2 * input);
     itkImageUC2 * GetOutputMask();
     virtual void AllocateOutputs();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void SetFillValue(unsigned char const _arg);
     virtual unsigned char GetFillValue() const;
     virtual void SetMaskValue(unsigned char const _arg);
     virtual unsigned char GetMaskValue() const;
     virtual void SetBackgroundMaskValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundMaskValue() const;
     void SetGenerateOutputMask(bool arg0);
     virtual bool GetGenerateOutputMask() const;
   private:
     itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Superclass(itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Superclass const & arg0);
     void operator=(itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Superclass const & arg0);
   protected:
     itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Superclass();
     ~itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::MaskedRankHistogram< unsigned char > * NewHistogram();
     void pushHistogram(itk::MaskedRankHistogram< unsigned char > * histogram, std::list< itkOffset2 > const * addedList, std::list< itkOffset2 > const * removedList, itkImageRegion2 const & inputRegion, itkImageRegion2 const & kernRegion, itkImageUC2 const * inputImage, itkImageUC2 const * maskImage, itkIndex2 const currentIdx);
 };


 class itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Superclass_Pointer {
   public:
     itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Superclass_Pointer();
     itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Superclass_Pointer(itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Superclass_Pointer const & p);
     itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Superclass_Pointer(itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Superclass * p);
     ~itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Superclass_Pointer();
     itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Superclass * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Superclass_Pointer const & r) const;
     itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Superclass_Pointer const & r);
     itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Superclass * r);
     itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Pointer {
   public:
     itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Pointer();
     itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Pointer(itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Pointer const & p);
     itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Pointer(itkMaskedRankImageFilterIUC2IUL2IUC2SE2 * p);
     ~itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Pointer();
     itkMaskedRankImageFilterIUC2IUL2IUC2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUC2IUL2IUC2SE2 * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Pointer const & r) const;
     itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Pointer & operator=(itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Pointer const & r);
     itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Pointer & operator=(itkMaskedRankImageFilterIUC2IUL2IUC2SE2 * r);
     itkMaskedRankImageFilterIUC2IUL2IUC2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Superclass : public itkMovingHistogramImageFilterBaseIUC2IUC2SE2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMaskImage(itkImageUL2 * input);
     itkImageUL2 * GetMaskImage();
     void SetInput1(itkImageUC2 * input);
     void SetInput2(itkImageUL2 * input);
     itkImageUL2 * GetOutputMask();
     virtual void AllocateOutputs();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void SetFillValue(unsigned char const _arg);
     virtual unsigned char GetFillValue() const;
     virtual void SetMaskValue(unsigned long const _arg);
     virtual unsigned long GetMaskValue() const;
     virtual void SetBackgroundMaskValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundMaskValue() const;
     void SetGenerateOutputMask(bool arg0);
     virtual bool GetGenerateOutputMask() const;
   private:
     itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Superclass(itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Superclass const & arg0);
     void operator=(itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Superclass const & arg0);
   protected:
     itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Superclass();
     ~itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::MaskedRankHistogram< unsigned char > * NewHistogram();
     void pushHistogram(itk::MaskedRankHistogram< unsigned char > * histogram, std::list< itkOffset2 > const * addedList, std::list< itkOffset2 > const * removedList, itkImageRegion2 const & inputRegion, itkImageRegion2 const & kernRegion, itkImageUC2 const * inputImage, itkImageUL2 const * maskImage, itkIndex2 const currentIdx);
 };


 class itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Superclass_Pointer {
   public:
     itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Superclass_Pointer();
     itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Superclass_Pointer(itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Superclass_Pointer const & p);
     itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Superclass_Pointer(itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Superclass * p);
     ~itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Superclass_Pointer();
     itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Superclass * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Superclass_Pointer const & r) const;
     itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Superclass_Pointer const & r);
     itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Superclass * r);
     itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Pointer {
   public:
     itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Pointer();
     itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Pointer(itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Pointer const & p);
     itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Pointer(itkMaskedRankImageFilterIUC2IUS2IUC2SE2 * p);
     ~itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Pointer();
     itkMaskedRankImageFilterIUC2IUS2IUC2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUC2IUS2IUC2SE2 * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Pointer const & r) const;
     itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Pointer & operator=(itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Pointer const & r);
     itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Pointer & operator=(itkMaskedRankImageFilterIUC2IUS2IUC2SE2 * r);
     itkMaskedRankImageFilterIUC2IUS2IUC2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Superclass : public itkMovingHistogramImageFilterBaseIUC2IUC2SE2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMaskImage(itkImageUS2 * input);
     itkImageUS2 * GetMaskImage();
     void SetInput1(itkImageUC2 * input);
     void SetInput2(itkImageUS2 * input);
     itkImageUS2 * GetOutputMask();
     virtual void AllocateOutputs();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void SetFillValue(unsigned char const _arg);
     virtual unsigned char GetFillValue() const;
     virtual void SetMaskValue(unsigned short const _arg);
     virtual unsigned short GetMaskValue() const;
     virtual void SetBackgroundMaskValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundMaskValue() const;
     void SetGenerateOutputMask(bool arg0);
     virtual bool GetGenerateOutputMask() const;
   private:
     itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Superclass(itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Superclass const & arg0);
     void operator=(itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Superclass const & arg0);
   protected:
     itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Superclass();
     ~itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::MaskedRankHistogram< unsigned char > * NewHistogram();
     void pushHistogram(itk::MaskedRankHistogram< unsigned char > * histogram, std::list< itkOffset2 > const * addedList, std::list< itkOffset2 > const * removedList, itkImageRegion2 const & inputRegion, itkImageRegion2 const & kernRegion, itkImageUC2 const * inputImage, itkImageUS2 const * maskImage, itkIndex2 const currentIdx);
 };


 class itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Superclass_Pointer {
   public:
     itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Superclass_Pointer();
     itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Superclass_Pointer(itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Superclass_Pointer const & p);
     itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Superclass_Pointer(itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Superclass * p);
     ~itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Superclass_Pointer();
     itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Superclass * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Superclass_Pointer const & r) const;
     itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Superclass_Pointer const & r);
     itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Superclass * r);
     itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Pointer {
   public:
     itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Pointer();
     itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Pointer(itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Pointer const & p);
     itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Pointer(itkMaskedRankImageFilterIUC3IUC3IUC3SE3 * p);
     ~itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Pointer();
     itkMaskedRankImageFilterIUC3IUC3IUC3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUC3IUC3IUC3SE3 * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Pointer const & r) const;
     itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Pointer & operator=(itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Pointer const & r);
     itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Pointer & operator=(itkMaskedRankImageFilterIUC3IUC3IUC3SE3 * r);
     itkMaskedRankImageFilterIUC3IUC3IUC3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Superclass : public itkMovingHistogramImageFilterBaseIUC3IUC3SE3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMaskImage(itkImageUC3 * input);
     itkImageUC3 * GetMaskImage();
     void SetInput1(itkImageUC3 * input);
     void SetInput2(itkImageUC3 * input);
     itkImageUC3 * GetOutputMask();
     virtual void AllocateOutputs();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void SetFillValue(unsigned char const _arg);
     virtual unsigned char GetFillValue() const;
     virtual void SetMaskValue(unsigned char const _arg);
     virtual unsigned char GetMaskValue() const;
     virtual void SetBackgroundMaskValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundMaskValue() const;
     void SetGenerateOutputMask(bool arg0);
     virtual bool GetGenerateOutputMask() const;
   private:
     itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Superclass(itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Superclass const & arg0);
     void operator=(itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Superclass const & arg0);
   protected:
     itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Superclass();
     ~itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::MaskedRankHistogram< unsigned char > * NewHistogram();
     void pushHistogram(itk::MaskedRankHistogram< unsigned char > * histogram, std::list< itkOffset3 > const * addedList, std::list< itkOffset3 > const * removedList, itkImageRegion3 const & inputRegion, itkImageRegion3 const & kernRegion, itkImageUC3 const * inputImage, itkImageUC3 const * maskImage, itkIndex3 const currentIdx);
 };


 class itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Superclass_Pointer {
   public:
     itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Superclass_Pointer();
     itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Superclass_Pointer(itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Superclass_Pointer const & p);
     itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Superclass_Pointer(itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Superclass * p);
     ~itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Superclass_Pointer();
     itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Superclass * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Superclass_Pointer const & r) const;
     itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Superclass_Pointer const & r);
     itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Superclass * r);
     itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Pointer {
   public:
     itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Pointer();
     itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Pointer(itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Pointer const & p);
     itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Pointer(itkMaskedRankImageFilterIUC3IUL3IUC3SE3 * p);
     ~itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Pointer();
     itkMaskedRankImageFilterIUC3IUL3IUC3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUC3IUL3IUC3SE3 * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Pointer const & r) const;
     itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Pointer & operator=(itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Pointer const & r);
     itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Pointer & operator=(itkMaskedRankImageFilterIUC3IUL3IUC3SE3 * r);
     itkMaskedRankImageFilterIUC3IUL3IUC3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Superclass : public itkMovingHistogramImageFilterBaseIUC3IUC3SE3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMaskImage(itkImageUL3 * input);
     itkImageUL3 * GetMaskImage();
     void SetInput1(itkImageUC3 * input);
     void SetInput2(itkImageUL3 * input);
     itkImageUL3 * GetOutputMask();
     virtual void AllocateOutputs();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void SetFillValue(unsigned char const _arg);
     virtual unsigned char GetFillValue() const;
     virtual void SetMaskValue(unsigned long const _arg);
     virtual unsigned long GetMaskValue() const;
     virtual void SetBackgroundMaskValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundMaskValue() const;
     void SetGenerateOutputMask(bool arg0);
     virtual bool GetGenerateOutputMask() const;
   private:
     itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Superclass(itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Superclass const & arg0);
     void operator=(itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Superclass const & arg0);
   protected:
     itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Superclass();
     ~itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::MaskedRankHistogram< unsigned char > * NewHistogram();
     void pushHistogram(itk::MaskedRankHistogram< unsigned char > * histogram, std::list< itkOffset3 > const * addedList, std::list< itkOffset3 > const * removedList, itkImageRegion3 const & inputRegion, itkImageRegion3 const & kernRegion, itkImageUC3 const * inputImage, itkImageUL3 const * maskImage, itkIndex3 const currentIdx);
 };


 class itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Superclass_Pointer {
   public:
     itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Superclass_Pointer();
     itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Superclass_Pointer(itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Superclass_Pointer const & p);
     itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Superclass_Pointer(itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Superclass * p);
     ~itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Superclass_Pointer();
     itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Superclass * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Superclass_Pointer const & r) const;
     itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Superclass_Pointer const & r);
     itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Superclass * r);
     itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Pointer {
   public:
     itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Pointer();
     itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Pointer(itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Pointer const & p);
     itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Pointer(itkMaskedRankImageFilterIUC3IUS3IUC3SE3 * p);
     ~itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Pointer();
     itkMaskedRankImageFilterIUC3IUS3IUC3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUC3IUS3IUC3SE3 * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Pointer const & r) const;
     itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Pointer & operator=(itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Pointer const & r);
     itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Pointer & operator=(itkMaskedRankImageFilterIUC3IUS3IUC3SE3 * r);
     itkMaskedRankImageFilterIUC3IUS3IUC3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Superclass : public itkMovingHistogramImageFilterBaseIUC3IUC3SE3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMaskImage(itkImageUS3 * input);
     itkImageUS3 * GetMaskImage();
     void SetInput1(itkImageUC3 * input);
     void SetInput2(itkImageUS3 * input);
     itkImageUS3 * GetOutputMask();
     virtual void AllocateOutputs();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void SetFillValue(unsigned char const _arg);
     virtual unsigned char GetFillValue() const;
     virtual void SetMaskValue(unsigned short const _arg);
     virtual unsigned short GetMaskValue() const;
     virtual void SetBackgroundMaskValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundMaskValue() const;
     void SetGenerateOutputMask(bool arg0);
     virtual bool GetGenerateOutputMask() const;
   private:
     itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Superclass(itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Superclass const & arg0);
     void operator=(itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Superclass const & arg0);
   protected:
     itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Superclass();
     ~itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::MaskedRankHistogram< unsigned char > * NewHistogram();
     void pushHistogram(itk::MaskedRankHistogram< unsigned char > * histogram, std::list< itkOffset3 > const * addedList, std::list< itkOffset3 > const * removedList, itkImageRegion3 const & inputRegion, itkImageRegion3 const & kernRegion, itkImageUC3 const * inputImage, itkImageUS3 const * maskImage, itkIndex3 const currentIdx);
 };


 class itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Superclass_Pointer {
   public:
     itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Superclass_Pointer();
     itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Superclass_Pointer(itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Superclass_Pointer const & p);
     itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Superclass_Pointer(itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Superclass * p);
     ~itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Superclass_Pointer();
     itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Superclass * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Superclass_Pointer const & r) const;
     itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Superclass_Pointer const & r);
     itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Superclass * r);
     itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Pointer {
   public:
     itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Pointer();
     itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Pointer(itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Pointer const & p);
     itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Pointer(itkMaskedRankImageFilterIUL2IUC2IUL2SE2 * p);
     ~itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Pointer();
     itkMaskedRankImageFilterIUL2IUC2IUL2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUL2IUC2IUL2SE2 * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Pointer const & r) const;
     itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Pointer & operator=(itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Pointer const & r);
     itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Pointer & operator=(itkMaskedRankImageFilterIUL2IUC2IUL2SE2 * r);
     itkMaskedRankImageFilterIUL2IUC2IUL2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Superclass : public itkMovingHistogramImageFilterBaseIUL2IUL2SE2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMaskImage(itkImageUC2 * input);
     itkImageUC2 * GetMaskImage();
     void SetInput1(itkImageUL2 * input);
     void SetInput2(itkImageUC2 * input);
     itkImageUC2 * GetOutputMask();
     virtual void AllocateOutputs();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void SetFillValue(unsigned long const _arg);
     virtual unsigned long GetFillValue() const;
     virtual void SetMaskValue(unsigned char const _arg);
     virtual unsigned char GetMaskValue() const;
     virtual void SetBackgroundMaskValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundMaskValue() const;
     void SetGenerateOutputMask(bool arg0);
     virtual bool GetGenerateOutputMask() const;
   private:
     itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Superclass(itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Superclass const & arg0);
     void operator=(itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Superclass const & arg0);
   protected:
     itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Superclass();
     ~itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::MaskedRankHistogram< unsigned long > * NewHistogram();
     void pushHistogram(itk::MaskedRankHistogram< unsigned long > * histogram, std::list< itkOffset2 > const * addedList, std::list< itkOffset2 > const * removedList, itkImageRegion2 const & inputRegion, itkImageRegion2 const & kernRegion, itkImageUL2 const * inputImage, itkImageUC2 const * maskImage, itkIndex2 const currentIdx);
 };


 class itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Superclass_Pointer {
   public:
     itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Superclass_Pointer();
     itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Superclass_Pointer(itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Superclass_Pointer const & p);
     itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Superclass_Pointer(itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Superclass * p);
     ~itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Superclass_Pointer();
     itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Superclass * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Superclass_Pointer const & r) const;
     itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Superclass_Pointer const & r);
     itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Superclass * r);
     itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Pointer {
   public:
     itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Pointer();
     itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Pointer(itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Pointer const & p);
     itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Pointer(itkMaskedRankImageFilterIUL2IUL2IUL2SE2 * p);
     ~itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Pointer();
     itkMaskedRankImageFilterIUL2IUL2IUL2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUL2IUL2IUL2SE2 * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Pointer const & r) const;
     itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Pointer & operator=(itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Pointer const & r);
     itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Pointer & operator=(itkMaskedRankImageFilterIUL2IUL2IUL2SE2 * r);
     itkMaskedRankImageFilterIUL2IUL2IUL2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Superclass : public itkMovingHistogramImageFilterBaseIUL2IUL2SE2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMaskImage(itkImageUL2 * input);
     itkImageUL2 * GetMaskImage();
     void SetInput1(itkImageUL2 * input);
     void SetInput2(itkImageUL2 * input);
     itkImageUL2 * GetOutputMask();
     virtual void AllocateOutputs();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void SetFillValue(unsigned long const _arg);
     virtual unsigned long GetFillValue() const;
     virtual void SetMaskValue(unsigned long const _arg);
     virtual unsigned long GetMaskValue() const;
     virtual void SetBackgroundMaskValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundMaskValue() const;
     void SetGenerateOutputMask(bool arg0);
     virtual bool GetGenerateOutputMask() const;
   private:
     itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Superclass(itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Superclass const & arg0);
     void operator=(itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Superclass const & arg0);
   protected:
     itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Superclass();
     ~itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::MaskedRankHistogram< unsigned long > * NewHistogram();
     void pushHistogram(itk::MaskedRankHistogram< unsigned long > * histogram, std::list< itkOffset2 > const * addedList, std::list< itkOffset2 > const * removedList, itkImageRegion2 const & inputRegion, itkImageRegion2 const & kernRegion, itkImageUL2 const * inputImage, itkImageUL2 const * maskImage, itkIndex2 const currentIdx);
 };


 class itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Superclass_Pointer {
   public:
     itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Superclass_Pointer();
     itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Superclass_Pointer(itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Superclass_Pointer const & p);
     itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Superclass_Pointer(itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Superclass * p);
     ~itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Superclass_Pointer();
     itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Superclass * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Superclass_Pointer const & r) const;
     itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Superclass_Pointer const & r);
     itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Superclass * r);
     itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Pointer {
   public:
     itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Pointer();
     itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Pointer(itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Pointer const & p);
     itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Pointer(itkMaskedRankImageFilterIUL2IUS2IUL2SE2 * p);
     ~itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Pointer();
     itkMaskedRankImageFilterIUL2IUS2IUL2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUL2IUS2IUL2SE2 * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Pointer const & r) const;
     itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Pointer & operator=(itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Pointer const & r);
     itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Pointer & operator=(itkMaskedRankImageFilterIUL2IUS2IUL2SE2 * r);
     itkMaskedRankImageFilterIUL2IUS2IUL2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Superclass : public itkMovingHistogramImageFilterBaseIUL2IUL2SE2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMaskImage(itkImageUS2 * input);
     itkImageUS2 * GetMaskImage();
     void SetInput1(itkImageUL2 * input);
     void SetInput2(itkImageUS2 * input);
     itkImageUS2 * GetOutputMask();
     virtual void AllocateOutputs();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void SetFillValue(unsigned long const _arg);
     virtual unsigned long GetFillValue() const;
     virtual void SetMaskValue(unsigned short const _arg);
     virtual unsigned short GetMaskValue() const;
     virtual void SetBackgroundMaskValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundMaskValue() const;
     void SetGenerateOutputMask(bool arg0);
     virtual bool GetGenerateOutputMask() const;
   private:
     itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Superclass(itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Superclass const & arg0);
     void operator=(itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Superclass const & arg0);
   protected:
     itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Superclass();
     ~itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::MaskedRankHistogram< unsigned long > * NewHistogram();
     void pushHistogram(itk::MaskedRankHistogram< unsigned long > * histogram, std::list< itkOffset2 > const * addedList, std::list< itkOffset2 > const * removedList, itkImageRegion2 const & inputRegion, itkImageRegion2 const & kernRegion, itkImageUL2 const * inputImage, itkImageUS2 const * maskImage, itkIndex2 const currentIdx);
 };


 class itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Superclass_Pointer {
   public:
     itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Superclass_Pointer();
     itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Superclass_Pointer(itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Superclass_Pointer const & p);
     itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Superclass_Pointer(itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Superclass * p);
     ~itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Superclass_Pointer();
     itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Superclass * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Superclass_Pointer const & r) const;
     itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Superclass_Pointer const & r);
     itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Superclass * r);
     itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Pointer {
   public:
     itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Pointer();
     itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Pointer(itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Pointer const & p);
     itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Pointer(itkMaskedRankImageFilterIUL3IUC3IUL3SE3 * p);
     ~itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Pointer();
     itkMaskedRankImageFilterIUL3IUC3IUL3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUL3IUC3IUL3SE3 * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Pointer const & r) const;
     itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Pointer & operator=(itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Pointer const & r);
     itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Pointer & operator=(itkMaskedRankImageFilterIUL3IUC3IUL3SE3 * r);
     itkMaskedRankImageFilterIUL3IUC3IUL3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Superclass : public itkMovingHistogramImageFilterBaseIUL3IUL3SE3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMaskImage(itkImageUC3 * input);
     itkImageUC3 * GetMaskImage();
     void SetInput1(itkImageUL3 * input);
     void SetInput2(itkImageUC3 * input);
     itkImageUC3 * GetOutputMask();
     virtual void AllocateOutputs();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void SetFillValue(unsigned long const _arg);
     virtual unsigned long GetFillValue() const;
     virtual void SetMaskValue(unsigned char const _arg);
     virtual unsigned char GetMaskValue() const;
     virtual void SetBackgroundMaskValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundMaskValue() const;
     void SetGenerateOutputMask(bool arg0);
     virtual bool GetGenerateOutputMask() const;
   private:
     itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Superclass(itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Superclass const & arg0);
     void operator=(itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Superclass const & arg0);
   protected:
     itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Superclass();
     ~itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::MaskedRankHistogram< unsigned long > * NewHistogram();
     void pushHistogram(itk::MaskedRankHistogram< unsigned long > * histogram, std::list< itkOffset3 > const * addedList, std::list< itkOffset3 > const * removedList, itkImageRegion3 const & inputRegion, itkImageRegion3 const & kernRegion, itkImageUL3 const * inputImage, itkImageUC3 const * maskImage, itkIndex3 const currentIdx);
 };


 class itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Superclass_Pointer {
   public:
     itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Superclass_Pointer();
     itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Superclass_Pointer(itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Superclass_Pointer const & p);
     itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Superclass_Pointer(itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Superclass * p);
     ~itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Superclass_Pointer();
     itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Superclass * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Superclass_Pointer const & r) const;
     itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Superclass_Pointer const & r);
     itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Superclass * r);
     itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Pointer {
   public:
     itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Pointer();
     itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Pointer(itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Pointer const & p);
     itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Pointer(itkMaskedRankImageFilterIUL3IUL3IUL3SE3 * p);
     ~itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Pointer();
     itkMaskedRankImageFilterIUL3IUL3IUL3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUL3IUL3IUL3SE3 * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Pointer const & r) const;
     itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Pointer & operator=(itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Pointer const & r);
     itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Pointer & operator=(itkMaskedRankImageFilterIUL3IUL3IUL3SE3 * r);
     itkMaskedRankImageFilterIUL3IUL3IUL3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Superclass : public itkMovingHistogramImageFilterBaseIUL3IUL3SE3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMaskImage(itkImageUL3 * input);
     itkImageUL3 * GetMaskImage();
     void SetInput1(itkImageUL3 * input);
     void SetInput2(itkImageUL3 * input);
     itkImageUL3 * GetOutputMask();
     virtual void AllocateOutputs();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void SetFillValue(unsigned long const _arg);
     virtual unsigned long GetFillValue() const;
     virtual void SetMaskValue(unsigned long const _arg);
     virtual unsigned long GetMaskValue() const;
     virtual void SetBackgroundMaskValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundMaskValue() const;
     void SetGenerateOutputMask(bool arg0);
     virtual bool GetGenerateOutputMask() const;
   private:
     itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Superclass(itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Superclass const & arg0);
     void operator=(itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Superclass const & arg0);
   protected:
     itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Superclass();
     ~itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::MaskedRankHistogram< unsigned long > * NewHistogram();
     void pushHistogram(itk::MaskedRankHistogram< unsigned long > * histogram, std::list< itkOffset3 > const * addedList, std::list< itkOffset3 > const * removedList, itkImageRegion3 const & inputRegion, itkImageRegion3 const & kernRegion, itkImageUL3 const * inputImage, itkImageUL3 const * maskImage, itkIndex3 const currentIdx);
 };


 class itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Superclass_Pointer {
   public:
     itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Superclass_Pointer();
     itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Superclass_Pointer(itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Superclass_Pointer const & p);
     itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Superclass_Pointer(itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Superclass * p);
     ~itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Superclass_Pointer();
     itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Superclass * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Superclass_Pointer const & r) const;
     itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Superclass_Pointer const & r);
     itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Superclass * r);
     itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Pointer {
   public:
     itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Pointer();
     itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Pointer(itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Pointer const & p);
     itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Pointer(itkMaskedRankImageFilterIUL3IUS3IUL3SE3 * p);
     ~itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Pointer();
     itkMaskedRankImageFilterIUL3IUS3IUL3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUL3IUS3IUL3SE3 * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Pointer const & r) const;
     itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Pointer & operator=(itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Pointer const & r);
     itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Pointer & operator=(itkMaskedRankImageFilterIUL3IUS3IUL3SE3 * r);
     itkMaskedRankImageFilterIUL3IUS3IUL3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Superclass : public itkMovingHistogramImageFilterBaseIUL3IUL3SE3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMaskImage(itkImageUS3 * input);
     itkImageUS3 * GetMaskImage();
     void SetInput1(itkImageUL3 * input);
     void SetInput2(itkImageUS3 * input);
     itkImageUS3 * GetOutputMask();
     virtual void AllocateOutputs();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void SetFillValue(unsigned long const _arg);
     virtual unsigned long GetFillValue() const;
     virtual void SetMaskValue(unsigned short const _arg);
     virtual unsigned short GetMaskValue() const;
     virtual void SetBackgroundMaskValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundMaskValue() const;
     void SetGenerateOutputMask(bool arg0);
     virtual bool GetGenerateOutputMask() const;
   private:
     itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Superclass(itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Superclass const & arg0);
     void operator=(itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Superclass const & arg0);
   protected:
     itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Superclass();
     ~itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::MaskedRankHistogram< unsigned long > * NewHistogram();
     void pushHistogram(itk::MaskedRankHistogram< unsigned long > * histogram, std::list< itkOffset3 > const * addedList, std::list< itkOffset3 > const * removedList, itkImageRegion3 const & inputRegion, itkImageRegion3 const & kernRegion, itkImageUL3 const * inputImage, itkImageUS3 const * maskImage, itkIndex3 const currentIdx);
 };


 class itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Superclass_Pointer {
   public:
     itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Superclass_Pointer();
     itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Superclass_Pointer(itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Superclass_Pointer const & p);
     itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Superclass_Pointer(itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Superclass * p);
     ~itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Superclass_Pointer();
     itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Superclass * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Superclass_Pointer const & r) const;
     itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Superclass_Pointer const & r);
     itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Superclass * r);
     itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Pointer {
   public:
     itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Pointer();
     itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Pointer(itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Pointer const & p);
     itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Pointer(itkMaskedRankImageFilterIUS2IUC2IUS2SE2 * p);
     ~itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Pointer();
     itkMaskedRankImageFilterIUS2IUC2IUS2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUS2IUC2IUS2SE2 * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Pointer const & r) const;
     itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Pointer & operator=(itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Pointer const & r);
     itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Pointer & operator=(itkMaskedRankImageFilterIUS2IUC2IUS2SE2 * r);
     itkMaskedRankImageFilterIUS2IUC2IUS2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Superclass : public itkMovingHistogramImageFilterBaseIUS2IUS2SE2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMaskImage(itkImageUC2 * input);
     itkImageUC2 * GetMaskImage();
     void SetInput1(itkImageUS2 * input);
     void SetInput2(itkImageUC2 * input);
     itkImageUC2 * GetOutputMask();
     virtual void AllocateOutputs();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void SetFillValue(unsigned short const _arg);
     virtual unsigned short GetFillValue() const;
     virtual void SetMaskValue(unsigned char const _arg);
     virtual unsigned char GetMaskValue() const;
     virtual void SetBackgroundMaskValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundMaskValue() const;
     void SetGenerateOutputMask(bool arg0);
     virtual bool GetGenerateOutputMask() const;
   private:
     itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Superclass(itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Superclass const & arg0);
     void operator=(itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Superclass const & arg0);
   protected:
     itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Superclass();
     ~itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::MaskedRankHistogram< unsigned short > * NewHistogram();
     void pushHistogram(itk::MaskedRankHistogram< unsigned short > * histogram, std::list< itkOffset2 > const * addedList, std::list< itkOffset2 > const * removedList, itkImageRegion2 const & inputRegion, itkImageRegion2 const & kernRegion, itkImageUS2 const * inputImage, itkImageUC2 const * maskImage, itkIndex2 const currentIdx);
 };


 class itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Superclass_Pointer {
   public:
     itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Superclass_Pointer();
     itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Superclass_Pointer(itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Superclass_Pointer const & p);
     itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Superclass_Pointer(itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Superclass * p);
     ~itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Superclass_Pointer();
     itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Superclass * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Superclass_Pointer const & r) const;
     itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Superclass_Pointer const & r);
     itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Superclass * r);
     itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Pointer {
   public:
     itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Pointer();
     itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Pointer(itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Pointer const & p);
     itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Pointer(itkMaskedRankImageFilterIUS2IUL2IUS2SE2 * p);
     ~itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Pointer();
     itkMaskedRankImageFilterIUS2IUL2IUS2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUS2IUL2IUS2SE2 * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Pointer const & r) const;
     itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Pointer & operator=(itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Pointer const & r);
     itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Pointer & operator=(itkMaskedRankImageFilterIUS2IUL2IUS2SE2 * r);
     itkMaskedRankImageFilterIUS2IUL2IUS2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Superclass : public itkMovingHistogramImageFilterBaseIUS2IUS2SE2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMaskImage(itkImageUL2 * input);
     itkImageUL2 * GetMaskImage();
     void SetInput1(itkImageUS2 * input);
     void SetInput2(itkImageUL2 * input);
     itkImageUL2 * GetOutputMask();
     virtual void AllocateOutputs();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void SetFillValue(unsigned short const _arg);
     virtual unsigned short GetFillValue() const;
     virtual void SetMaskValue(unsigned long const _arg);
     virtual unsigned long GetMaskValue() const;
     virtual void SetBackgroundMaskValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundMaskValue() const;
     void SetGenerateOutputMask(bool arg0);
     virtual bool GetGenerateOutputMask() const;
   private:
     itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Superclass(itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Superclass const & arg0);
     void operator=(itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Superclass const & arg0);
   protected:
     itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Superclass();
     ~itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::MaskedRankHistogram< unsigned short > * NewHistogram();
     void pushHistogram(itk::MaskedRankHistogram< unsigned short > * histogram, std::list< itkOffset2 > const * addedList, std::list< itkOffset2 > const * removedList, itkImageRegion2 const & inputRegion, itkImageRegion2 const & kernRegion, itkImageUS2 const * inputImage, itkImageUL2 const * maskImage, itkIndex2 const currentIdx);
 };


 class itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Superclass_Pointer {
   public:
     itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Superclass_Pointer();
     itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Superclass_Pointer(itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Superclass_Pointer const & p);
     itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Superclass_Pointer(itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Superclass * p);
     ~itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Superclass_Pointer();
     itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Superclass * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Superclass_Pointer const & r) const;
     itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Superclass_Pointer const & r);
     itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Superclass * r);
     itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Pointer {
   public:
     itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Pointer();
     itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Pointer(itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Pointer const & p);
     itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Pointer(itkMaskedRankImageFilterIUS2IUS2IUS2SE2 * p);
     ~itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Pointer();
     itkMaskedRankImageFilterIUS2IUS2IUS2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUS2IUS2IUS2SE2 * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Pointer const & r) const;
     itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Pointer & operator=(itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Pointer const & r);
     itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Pointer & operator=(itkMaskedRankImageFilterIUS2IUS2IUS2SE2 * r);
     itkMaskedRankImageFilterIUS2IUS2IUS2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Superclass : public itkMovingHistogramImageFilterBaseIUS2IUS2SE2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMaskImage(itkImageUS2 * input);
     itkImageUS2 * GetMaskImage();
     void SetInput1(itkImageUS2 * input);
     void SetInput2(itkImageUS2 * input);
     itkImageUS2 * GetOutputMask();
     virtual void AllocateOutputs();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void SetFillValue(unsigned short const _arg);
     virtual unsigned short GetFillValue() const;
     virtual void SetMaskValue(unsigned short const _arg);
     virtual unsigned short GetMaskValue() const;
     virtual void SetBackgroundMaskValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundMaskValue() const;
     void SetGenerateOutputMask(bool arg0);
     virtual bool GetGenerateOutputMask() const;
   private:
     itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Superclass(itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Superclass const & arg0);
     void operator=(itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Superclass const & arg0);
   protected:
     itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Superclass();
     ~itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::MaskedRankHistogram< unsigned short > * NewHistogram();
     void pushHistogram(itk::MaskedRankHistogram< unsigned short > * histogram, std::list< itkOffset2 > const * addedList, std::list< itkOffset2 > const * removedList, itkImageRegion2 const & inputRegion, itkImageRegion2 const & kernRegion, itkImageUS2 const * inputImage, itkImageUS2 const * maskImage, itkIndex2 const currentIdx);
 };


 class itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Superclass_Pointer {
   public:
     itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Superclass_Pointer();
     itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Superclass_Pointer(itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Superclass_Pointer const & p);
     itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Superclass_Pointer(itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Superclass * p);
     ~itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Superclass_Pointer();
     itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Superclass * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Superclass_Pointer const & r) const;
     itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Superclass_Pointer const & r);
     itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Superclass * r);
     itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Pointer {
   public:
     itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Pointer();
     itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Pointer(itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Pointer const & p);
     itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Pointer(itkMaskedRankImageFilterIUS3IUC3IUS3SE3 * p);
     ~itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Pointer();
     itkMaskedRankImageFilterIUS3IUC3IUS3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUS3IUC3IUS3SE3 * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Pointer const & r) const;
     itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Pointer & operator=(itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Pointer const & r);
     itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Pointer & operator=(itkMaskedRankImageFilterIUS3IUC3IUS3SE3 * r);
     itkMaskedRankImageFilterIUS3IUC3IUS3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Superclass : public itkMovingHistogramImageFilterBaseIUS3IUS3SE3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMaskImage(itkImageUC3 * input);
     itkImageUC3 * GetMaskImage();
     void SetInput1(itkImageUS3 * input);
     void SetInput2(itkImageUC3 * input);
     itkImageUC3 * GetOutputMask();
     virtual void AllocateOutputs();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void SetFillValue(unsigned short const _arg);
     virtual unsigned short GetFillValue() const;
     virtual void SetMaskValue(unsigned char const _arg);
     virtual unsigned char GetMaskValue() const;
     virtual void SetBackgroundMaskValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundMaskValue() const;
     void SetGenerateOutputMask(bool arg0);
     virtual bool GetGenerateOutputMask() const;
   private:
     itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Superclass(itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Superclass const & arg0);
     void operator=(itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Superclass const & arg0);
   protected:
     itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Superclass();
     ~itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::MaskedRankHistogram< unsigned short > * NewHistogram();
     void pushHistogram(itk::MaskedRankHistogram< unsigned short > * histogram, std::list< itkOffset3 > const * addedList, std::list< itkOffset3 > const * removedList, itkImageRegion3 const & inputRegion, itkImageRegion3 const & kernRegion, itkImageUS3 const * inputImage, itkImageUC3 const * maskImage, itkIndex3 const currentIdx);
 };


 class itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Superclass_Pointer {
   public:
     itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Superclass_Pointer();
     itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Superclass_Pointer(itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Superclass_Pointer const & p);
     itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Superclass_Pointer(itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Superclass * p);
     ~itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Superclass_Pointer();
     itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Superclass * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Superclass_Pointer const & r) const;
     itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Superclass_Pointer const & r);
     itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Superclass * r);
     itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Pointer {
   public:
     itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Pointer();
     itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Pointer(itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Pointer const & p);
     itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Pointer(itkMaskedRankImageFilterIUS3IUL3IUS3SE3 * p);
     ~itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Pointer();
     itkMaskedRankImageFilterIUS3IUL3IUS3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUS3IUL3IUS3SE3 * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Pointer const & r) const;
     itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Pointer & operator=(itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Pointer const & r);
     itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Pointer & operator=(itkMaskedRankImageFilterIUS3IUL3IUS3SE3 * r);
     itkMaskedRankImageFilterIUS3IUL3IUS3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Superclass : public itkMovingHistogramImageFilterBaseIUS3IUS3SE3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMaskImage(itkImageUL3 * input);
     itkImageUL3 * GetMaskImage();
     void SetInput1(itkImageUS3 * input);
     void SetInput2(itkImageUL3 * input);
     itkImageUL3 * GetOutputMask();
     virtual void AllocateOutputs();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void SetFillValue(unsigned short const _arg);
     virtual unsigned short GetFillValue() const;
     virtual void SetMaskValue(unsigned long const _arg);
     virtual unsigned long GetMaskValue() const;
     virtual void SetBackgroundMaskValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundMaskValue() const;
     void SetGenerateOutputMask(bool arg0);
     virtual bool GetGenerateOutputMask() const;
   private:
     itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Superclass(itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Superclass const & arg0);
     void operator=(itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Superclass const & arg0);
   protected:
     itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Superclass();
     ~itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::MaskedRankHistogram< unsigned short > * NewHistogram();
     void pushHistogram(itk::MaskedRankHistogram< unsigned short > * histogram, std::list< itkOffset3 > const * addedList, std::list< itkOffset3 > const * removedList, itkImageRegion3 const & inputRegion, itkImageRegion3 const & kernRegion, itkImageUS3 const * inputImage, itkImageUL3 const * maskImage, itkIndex3 const currentIdx);
 };


 class itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Superclass_Pointer {
   public:
     itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Superclass_Pointer();
     itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Superclass_Pointer(itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Superclass_Pointer const & p);
     itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Superclass_Pointer(itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Superclass * p);
     ~itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Superclass_Pointer();
     itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Superclass * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Superclass_Pointer const & r) const;
     itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Superclass_Pointer const & r);
     itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Superclass * r);
     itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Pointer {
   public:
     itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Pointer();
     itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Pointer(itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Pointer const & p);
     itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Pointer(itkMaskedRankImageFilterIUS3IUS3IUS3SE3 * p);
     ~itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Pointer();
     itkMaskedRankImageFilterIUS3IUS3IUS3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUS3IUS3IUS3SE3 * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Pointer const & r) const;
     itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Pointer & operator=(itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Pointer const & r);
     itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Pointer & operator=(itkMaskedRankImageFilterIUS3IUS3IUS3SE3 * r);
     itkMaskedRankImageFilterIUS3IUS3IUS3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Superclass : public itkMovingHistogramImageFilterBaseIUS3IUS3SE3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMaskImage(itkImageUS3 * input);
     itkImageUS3 * GetMaskImage();
     void SetInput1(itkImageUS3 * input);
     void SetInput2(itkImageUS3 * input);
     itkImageUS3 * GetOutputMask();
     virtual void AllocateOutputs();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual void SetFillValue(unsigned short const _arg);
     virtual unsigned short GetFillValue() const;
     virtual void SetMaskValue(unsigned short const _arg);
     virtual unsigned short GetMaskValue() const;
     virtual void SetBackgroundMaskValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundMaskValue() const;
     void SetGenerateOutputMask(bool arg0);
     virtual bool GetGenerateOutputMask() const;
   private:
     itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Superclass(itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Superclass const & arg0);
     void operator=(itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Superclass const & arg0);
   protected:
     itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Superclass();
     ~itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::MaskedRankHistogram< unsigned short > * NewHistogram();
     void pushHistogram(itk::MaskedRankHistogram< unsigned short > * histogram, std::list< itkOffset3 > const * addedList, std::list< itkOffset3 > const * removedList, itkImageRegion3 const & inputRegion, itkImageRegion3 const & kernRegion, itkImageUS3 const * inputImage, itkImageUS3 const * maskImage, itkIndex3 const currentIdx);
 };


 class itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Superclass_Pointer {
   public:
     itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Superclass_Pointer();
     itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Superclass_Pointer(itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Superclass_Pointer const & p);
     itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Superclass_Pointer(itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Superclass * p);
     ~itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Superclass_Pointer();
     itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Superclass * GetPointer() const;
     bool operator<(itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Superclass_Pointer const & r) const;
     itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Superclass_Pointer const & r);
     itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Superclass_Pointer & operator=(itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Superclass * r);
     itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskedRankImageFilterID2IUC2ID2SE2 : public itkMaskedRankImageFilterID2IUC2ID2SE2_Superclass {
   public:
     enum  {  ImageDimension = 2 };
     static itkMaskedRankImageFilterID2IUC2ID2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkMaskedRankImageFilterID2IUC2ID2SE2(itkMaskedRankImageFilterID2IUC2ID2SE2 const & arg0);
     void operator=(itkMaskedRankImageFilterID2IUC2ID2SE2 const & arg0);
   protected:
     itkMaskedRankImageFilterID2IUC2ID2SE2();
     ~itkMaskedRankImageFilterID2IUC2ID2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::MaskedRankHistogram< double > * NewHistogram();
 };


 class itkMaskedRankImageFilterID2IUL2ID2SE2 : public itkMaskedRankImageFilterID2IUL2ID2SE2_Superclass {
   public:
     enum  {  ImageDimension = 2 };
     static itkMaskedRankImageFilterID2IUL2ID2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkMaskedRankImageFilterID2IUL2ID2SE2(itkMaskedRankImageFilterID2IUL2ID2SE2 const & arg0);
     void operator=(itkMaskedRankImageFilterID2IUL2ID2SE2 const & arg0);
   protected:
     itkMaskedRankImageFilterID2IUL2ID2SE2();
     ~itkMaskedRankImageFilterID2IUL2ID2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::MaskedRankHistogram< double > * NewHistogram();
 };


 class itkMaskedRankImageFilterID2IUS2ID2SE2 : public itkMaskedRankImageFilterID2IUS2ID2SE2_Superclass {
   public:
     enum  {  ImageDimension = 2 };
     static itkMaskedRankImageFilterID2IUS2ID2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkMaskedRankImageFilterID2IUS2ID2SE2(itkMaskedRankImageFilterID2IUS2ID2SE2 const & arg0);
     void operator=(itkMaskedRankImageFilterID2IUS2ID2SE2 const & arg0);
   protected:
     itkMaskedRankImageFilterID2IUS2ID2SE2();
     ~itkMaskedRankImageFilterID2IUS2ID2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::MaskedRankHistogram< double > * NewHistogram();
 };


 class itkMaskedRankImageFilterID3IUC3ID3SE3 : public itkMaskedRankImageFilterID3IUC3ID3SE3_Superclass {
   public:
     enum  {  ImageDimension = 3 };
     static itkMaskedRankImageFilterID3IUC3ID3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkMaskedRankImageFilterID3IUC3ID3SE3(itkMaskedRankImageFilterID3IUC3ID3SE3 const & arg0);
     void operator=(itkMaskedRankImageFilterID3IUC3ID3SE3 const & arg0);
   protected:
     itkMaskedRankImageFilterID3IUC3ID3SE3();
     ~itkMaskedRankImageFilterID3IUC3ID3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::MaskedRankHistogram< double > * NewHistogram();
 };


 class itkMaskedRankImageFilterID3IUL3ID3SE3 : public itkMaskedRankImageFilterID3IUL3ID3SE3_Superclass {
   public:
     enum  {  ImageDimension = 3 };
     static itkMaskedRankImageFilterID3IUL3ID3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkMaskedRankImageFilterID3IUL3ID3SE3(itkMaskedRankImageFilterID3IUL3ID3SE3 const & arg0);
     void operator=(itkMaskedRankImageFilterID3IUL3ID3SE3 const & arg0);
   protected:
     itkMaskedRankImageFilterID3IUL3ID3SE3();
     ~itkMaskedRankImageFilterID3IUL3ID3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::MaskedRankHistogram< double > * NewHistogram();
 };


 class itkMaskedRankImageFilterID3IUS3ID3SE3 : public itkMaskedRankImageFilterID3IUS3ID3SE3_Superclass {
   public:
     enum  {  ImageDimension = 3 };
     static itkMaskedRankImageFilterID3IUS3ID3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkMaskedRankImageFilterID3IUS3ID3SE3(itkMaskedRankImageFilterID3IUS3ID3SE3 const & arg0);
     void operator=(itkMaskedRankImageFilterID3IUS3ID3SE3 const & arg0);
   protected:
     itkMaskedRankImageFilterID3IUS3ID3SE3();
     ~itkMaskedRankImageFilterID3IUS3ID3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::MaskedRankHistogram< double > * NewHistogram();
 };


 class itkMaskedRankImageFilterIF2IUC2IF2SE2 : public itkMaskedRankImageFilterIF2IUC2IF2SE2_Superclass {
   public:
     enum  {  ImageDimension = 2 };
     static itkMaskedRankImageFilterIF2IUC2IF2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkMaskedRankImageFilterIF2IUC2IF2SE2(itkMaskedRankImageFilterIF2IUC2IF2SE2 const & arg0);
     void operator=(itkMaskedRankImageFilterIF2IUC2IF2SE2 const & arg0);
   protected:
     itkMaskedRankImageFilterIF2IUC2IF2SE2();
     ~itkMaskedRankImageFilterIF2IUC2IF2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::MaskedRankHistogram< float > * NewHistogram();
 };


 class itkMaskedRankImageFilterIF2IUL2IF2SE2 : public itkMaskedRankImageFilterIF2IUL2IF2SE2_Superclass {
   public:
     enum  {  ImageDimension = 2 };
     static itkMaskedRankImageFilterIF2IUL2IF2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkMaskedRankImageFilterIF2IUL2IF2SE2(itkMaskedRankImageFilterIF2IUL2IF2SE2 const & arg0);
     void operator=(itkMaskedRankImageFilterIF2IUL2IF2SE2 const & arg0);
   protected:
     itkMaskedRankImageFilterIF2IUL2IF2SE2();
     ~itkMaskedRankImageFilterIF2IUL2IF2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::MaskedRankHistogram< float > * NewHistogram();
 };


 class itkMaskedRankImageFilterIF2IUS2IF2SE2 : public itkMaskedRankImageFilterIF2IUS2IF2SE2_Superclass {
   public:
     enum  {  ImageDimension = 2 };
     static itkMaskedRankImageFilterIF2IUS2IF2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkMaskedRankImageFilterIF2IUS2IF2SE2(itkMaskedRankImageFilterIF2IUS2IF2SE2 const & arg0);
     void operator=(itkMaskedRankImageFilterIF2IUS2IF2SE2 const & arg0);
   protected:
     itkMaskedRankImageFilterIF2IUS2IF2SE2();
     ~itkMaskedRankImageFilterIF2IUS2IF2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::MaskedRankHistogram< float > * NewHistogram();
 };


 class itkMaskedRankImageFilterIF3IUC3IF3SE3 : public itkMaskedRankImageFilterIF3IUC3IF3SE3_Superclass {
   public:
     enum  {  ImageDimension = 3 };
     static itkMaskedRankImageFilterIF3IUC3IF3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkMaskedRankImageFilterIF3IUC3IF3SE3(itkMaskedRankImageFilterIF3IUC3IF3SE3 const & arg0);
     void operator=(itkMaskedRankImageFilterIF3IUC3IF3SE3 const & arg0);
   protected:
     itkMaskedRankImageFilterIF3IUC3IF3SE3();
     ~itkMaskedRankImageFilterIF3IUC3IF3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::MaskedRankHistogram< float > * NewHistogram();
 };


 class itkMaskedRankImageFilterIF3IUL3IF3SE3 : public itkMaskedRankImageFilterIF3IUL3IF3SE3_Superclass {
   public:
     enum  {  ImageDimension = 3 };
     static itkMaskedRankImageFilterIF3IUL3IF3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkMaskedRankImageFilterIF3IUL3IF3SE3(itkMaskedRankImageFilterIF3IUL3IF3SE3 const & arg0);
     void operator=(itkMaskedRankImageFilterIF3IUL3IF3SE3 const & arg0);
   protected:
     itkMaskedRankImageFilterIF3IUL3IF3SE3();
     ~itkMaskedRankImageFilterIF3IUL3IF3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::MaskedRankHistogram< float > * NewHistogram();
 };


 class itkMaskedRankImageFilterIF3IUS3IF3SE3 : public itkMaskedRankImageFilterIF3IUS3IF3SE3_Superclass {
   public:
     enum  {  ImageDimension = 3 };
     static itkMaskedRankImageFilterIF3IUS3IF3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkMaskedRankImageFilterIF3IUS3IF3SE3(itkMaskedRankImageFilterIF3IUS3IF3SE3 const & arg0);
     void operator=(itkMaskedRankImageFilterIF3IUS3IF3SE3 const & arg0);
   protected:
     itkMaskedRankImageFilterIF3IUS3IF3SE3();
     ~itkMaskedRankImageFilterIF3IUS3IF3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::MaskedRankHistogram< float > * NewHistogram();
 };


 class itkMaskedRankImageFilterIUC2IUC2IUC2SE2 : public itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Superclass {
   public:
     enum  {  ImageDimension = 2 };
     static itkMaskedRankImageFilterIUC2IUC2IUC2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkMaskedRankImageFilterIUC2IUC2IUC2SE2(itkMaskedRankImageFilterIUC2IUC2IUC2SE2 const & arg0);
     void operator=(itkMaskedRankImageFilterIUC2IUC2IUC2SE2 const & arg0);
   protected:
     itkMaskedRankImageFilterIUC2IUC2IUC2SE2();
     ~itkMaskedRankImageFilterIUC2IUC2IUC2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::MaskedRankHistogram< unsigned char > * NewHistogram();
 };


 class itkMaskedRankImageFilterIUC2IUL2IUC2SE2 : public itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Superclass {
   public:
     enum  {  ImageDimension = 2 };
     static itkMaskedRankImageFilterIUC2IUL2IUC2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkMaskedRankImageFilterIUC2IUL2IUC2SE2(itkMaskedRankImageFilterIUC2IUL2IUC2SE2 const & arg0);
     void operator=(itkMaskedRankImageFilterIUC2IUL2IUC2SE2 const & arg0);
   protected:
     itkMaskedRankImageFilterIUC2IUL2IUC2SE2();
     ~itkMaskedRankImageFilterIUC2IUL2IUC2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::MaskedRankHistogram< unsigned char > * NewHistogram();
 };


 class itkMaskedRankImageFilterIUC2IUS2IUC2SE2 : public itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Superclass {
   public:
     enum  {  ImageDimension = 2 };
     static itkMaskedRankImageFilterIUC2IUS2IUC2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkMaskedRankImageFilterIUC2IUS2IUC2SE2(itkMaskedRankImageFilterIUC2IUS2IUC2SE2 const & arg0);
     void operator=(itkMaskedRankImageFilterIUC2IUS2IUC2SE2 const & arg0);
   protected:
     itkMaskedRankImageFilterIUC2IUS2IUC2SE2();
     ~itkMaskedRankImageFilterIUC2IUS2IUC2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::MaskedRankHistogram< unsigned char > * NewHistogram();
 };


 class itkMaskedRankImageFilterIUC3IUC3IUC3SE3 : public itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Superclass {
   public:
     enum  {  ImageDimension = 3 };
     static itkMaskedRankImageFilterIUC3IUC3IUC3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkMaskedRankImageFilterIUC3IUC3IUC3SE3(itkMaskedRankImageFilterIUC3IUC3IUC3SE3 const & arg0);
     void operator=(itkMaskedRankImageFilterIUC3IUC3IUC3SE3 const & arg0);
   protected:
     itkMaskedRankImageFilterIUC3IUC3IUC3SE3();
     ~itkMaskedRankImageFilterIUC3IUC3IUC3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::MaskedRankHistogram< unsigned char > * NewHistogram();
 };


 class itkMaskedRankImageFilterIUC3IUL3IUC3SE3 : public itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Superclass {
   public:
     enum  {  ImageDimension = 3 };
     static itkMaskedRankImageFilterIUC3IUL3IUC3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkMaskedRankImageFilterIUC3IUL3IUC3SE3(itkMaskedRankImageFilterIUC3IUL3IUC3SE3 const & arg0);
     void operator=(itkMaskedRankImageFilterIUC3IUL3IUC3SE3 const & arg0);
   protected:
     itkMaskedRankImageFilterIUC3IUL3IUC3SE3();
     ~itkMaskedRankImageFilterIUC3IUL3IUC3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::MaskedRankHistogram< unsigned char > * NewHistogram();
 };


 class itkMaskedRankImageFilterIUC3IUS3IUC3SE3 : public itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Superclass {
   public:
     enum  {  ImageDimension = 3 };
     static itkMaskedRankImageFilterIUC3IUS3IUC3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkMaskedRankImageFilterIUC3IUS3IUC3SE3(itkMaskedRankImageFilterIUC3IUS3IUC3SE3 const & arg0);
     void operator=(itkMaskedRankImageFilterIUC3IUS3IUC3SE3 const & arg0);
   protected:
     itkMaskedRankImageFilterIUC3IUS3IUC3SE3();
     ~itkMaskedRankImageFilterIUC3IUS3IUC3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::MaskedRankHistogram< unsigned char > * NewHistogram();
 };


 class itkMaskedRankImageFilterIUL2IUC2IUL2SE2 : public itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Superclass {
   public:
     enum  {  ImageDimension = 2 };
     static itkMaskedRankImageFilterIUL2IUC2IUL2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkMaskedRankImageFilterIUL2IUC2IUL2SE2(itkMaskedRankImageFilterIUL2IUC2IUL2SE2 const & arg0);
     void operator=(itkMaskedRankImageFilterIUL2IUC2IUL2SE2 const & arg0);
   protected:
     itkMaskedRankImageFilterIUL2IUC2IUL2SE2();
     ~itkMaskedRankImageFilterIUL2IUC2IUL2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::MaskedRankHistogram< unsigned long > * NewHistogram();
 };


 class itkMaskedRankImageFilterIUL2IUL2IUL2SE2 : public itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Superclass {
   public:
     enum  {  ImageDimension = 2 };
     static itkMaskedRankImageFilterIUL2IUL2IUL2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkMaskedRankImageFilterIUL2IUL2IUL2SE2(itkMaskedRankImageFilterIUL2IUL2IUL2SE2 const & arg0);
     void operator=(itkMaskedRankImageFilterIUL2IUL2IUL2SE2 const & arg0);
   protected:
     itkMaskedRankImageFilterIUL2IUL2IUL2SE2();
     ~itkMaskedRankImageFilterIUL2IUL2IUL2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::MaskedRankHistogram< unsigned long > * NewHistogram();
 };


 class itkMaskedRankImageFilterIUL2IUS2IUL2SE2 : public itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Superclass {
   public:
     enum  {  ImageDimension = 2 };
     static itkMaskedRankImageFilterIUL2IUS2IUL2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkMaskedRankImageFilterIUL2IUS2IUL2SE2(itkMaskedRankImageFilterIUL2IUS2IUL2SE2 const & arg0);
     void operator=(itkMaskedRankImageFilterIUL2IUS2IUL2SE2 const & arg0);
   protected:
     itkMaskedRankImageFilterIUL2IUS2IUL2SE2();
     ~itkMaskedRankImageFilterIUL2IUS2IUL2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::MaskedRankHistogram< unsigned long > * NewHistogram();
 };


 class itkMaskedRankImageFilterIUL3IUC3IUL3SE3 : public itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Superclass {
   public:
     enum  {  ImageDimension = 3 };
     static itkMaskedRankImageFilterIUL3IUC3IUL3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkMaskedRankImageFilterIUL3IUC3IUL3SE3(itkMaskedRankImageFilterIUL3IUC3IUL3SE3 const & arg0);
     void operator=(itkMaskedRankImageFilterIUL3IUC3IUL3SE3 const & arg0);
   protected:
     itkMaskedRankImageFilterIUL3IUC3IUL3SE3();
     ~itkMaskedRankImageFilterIUL3IUC3IUL3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::MaskedRankHistogram< unsigned long > * NewHistogram();
 };


 class itkMaskedRankImageFilterIUL3IUL3IUL3SE3 : public itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Superclass {
   public:
     enum  {  ImageDimension = 3 };
     static itkMaskedRankImageFilterIUL3IUL3IUL3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkMaskedRankImageFilterIUL3IUL3IUL3SE3(itkMaskedRankImageFilterIUL3IUL3IUL3SE3 const & arg0);
     void operator=(itkMaskedRankImageFilterIUL3IUL3IUL3SE3 const & arg0);
   protected:
     itkMaskedRankImageFilterIUL3IUL3IUL3SE3();
     ~itkMaskedRankImageFilterIUL3IUL3IUL3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::MaskedRankHistogram< unsigned long > * NewHistogram();
 };


 class itkMaskedRankImageFilterIUL3IUS3IUL3SE3 : public itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Superclass {
   public:
     enum  {  ImageDimension = 3 };
     static itkMaskedRankImageFilterIUL3IUS3IUL3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkMaskedRankImageFilterIUL3IUS3IUL3SE3(itkMaskedRankImageFilterIUL3IUS3IUL3SE3 const & arg0);
     void operator=(itkMaskedRankImageFilterIUL3IUS3IUL3SE3 const & arg0);
   protected:
     itkMaskedRankImageFilterIUL3IUS3IUL3SE3();
     ~itkMaskedRankImageFilterIUL3IUS3IUL3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::MaskedRankHistogram< unsigned long > * NewHistogram();
 };


 class itkMaskedRankImageFilterIUS2IUC2IUS2SE2 : public itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Superclass {
   public:
     enum  {  ImageDimension = 2 };
     static itkMaskedRankImageFilterIUS2IUC2IUS2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkMaskedRankImageFilterIUS2IUC2IUS2SE2(itkMaskedRankImageFilterIUS2IUC2IUS2SE2 const & arg0);
     void operator=(itkMaskedRankImageFilterIUS2IUC2IUS2SE2 const & arg0);
   protected:
     itkMaskedRankImageFilterIUS2IUC2IUS2SE2();
     ~itkMaskedRankImageFilterIUS2IUC2IUS2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::MaskedRankHistogram< unsigned short > * NewHistogram();
 };


 class itkMaskedRankImageFilterIUS2IUL2IUS2SE2 : public itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Superclass {
   public:
     enum  {  ImageDimension = 2 };
     static itkMaskedRankImageFilterIUS2IUL2IUS2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkMaskedRankImageFilterIUS2IUL2IUS2SE2(itkMaskedRankImageFilterIUS2IUL2IUS2SE2 const & arg0);
     void operator=(itkMaskedRankImageFilterIUS2IUL2IUS2SE2 const & arg0);
   protected:
     itkMaskedRankImageFilterIUS2IUL2IUS2SE2();
     ~itkMaskedRankImageFilterIUS2IUL2IUS2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::MaskedRankHistogram< unsigned short > * NewHistogram();
 };


 class itkMaskedRankImageFilterIUS2IUS2IUS2SE2 : public itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Superclass {
   public:
     enum  {  ImageDimension = 2 };
     static itkMaskedRankImageFilterIUS2IUS2IUS2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkMaskedRankImageFilterIUS2IUS2IUS2SE2(itkMaskedRankImageFilterIUS2IUS2IUS2SE2 const & arg0);
     void operator=(itkMaskedRankImageFilterIUS2IUS2IUS2SE2 const & arg0);
   protected:
     itkMaskedRankImageFilterIUS2IUS2IUS2SE2();
     ~itkMaskedRankImageFilterIUS2IUS2IUS2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::MaskedRankHistogram< unsigned short > * NewHistogram();
 };


 class itkMaskedRankImageFilterIUS3IUC3IUS3SE3 : public itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Superclass {
   public:
     enum  {  ImageDimension = 3 };
     static itkMaskedRankImageFilterIUS3IUC3IUS3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkMaskedRankImageFilterIUS3IUC3IUS3SE3(itkMaskedRankImageFilterIUS3IUC3IUS3SE3 const & arg0);
     void operator=(itkMaskedRankImageFilterIUS3IUC3IUS3SE3 const & arg0);
   protected:
     itkMaskedRankImageFilterIUS3IUC3IUS3SE3();
     ~itkMaskedRankImageFilterIUS3IUC3IUS3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::MaskedRankHistogram< unsigned short > * NewHistogram();
 };


 class itkMaskedRankImageFilterIUS3IUL3IUS3SE3 : public itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Superclass {
   public:
     enum  {  ImageDimension = 3 };
     static itkMaskedRankImageFilterIUS3IUL3IUS3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkMaskedRankImageFilterIUS3IUL3IUS3SE3(itkMaskedRankImageFilterIUS3IUL3IUS3SE3 const & arg0);
     void operator=(itkMaskedRankImageFilterIUS3IUL3IUS3SE3 const & arg0);
   protected:
     itkMaskedRankImageFilterIUS3IUL3IUS3SE3();
     ~itkMaskedRankImageFilterIUS3IUL3IUS3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::MaskedRankHistogram< unsigned short > * NewHistogram();
 };


 class itkMaskedRankImageFilterIUS3IUS3IUS3SE3 : public itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Superclass {
   public:
     enum  {  ImageDimension = 3 };
     static itkMaskedRankImageFilterIUS3IUS3IUS3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkMaskedRankImageFilterIUS3IUS3IUS3SE3(itkMaskedRankImageFilterIUS3IUS3IUS3SE3 const & arg0);
     void operator=(itkMaskedRankImageFilterIUS3IUS3IUS3SE3 const & arg0);
   protected:
     itkMaskedRankImageFilterIUS3IUS3IUS3SE3();
     ~itkMaskedRankImageFilterIUS3IUS3IUS3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::MaskedRankHistogram< unsigned short > * NewHistogram();
 };


