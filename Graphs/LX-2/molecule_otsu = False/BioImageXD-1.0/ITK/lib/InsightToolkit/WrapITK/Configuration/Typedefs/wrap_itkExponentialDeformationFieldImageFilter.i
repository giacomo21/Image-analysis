// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkExponentialDeformationFieldImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkExponentialDeformationFieldImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkExponentialDeformationFieldImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkExponentialDeformationFieldImageFilterJava
#endif
#ifdef SWIGLUA
%module itkExponentialDeformationFieldImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkExponentialDeformationFieldImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkExponentialDeformationFieldImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkExponentialDeformationFieldImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkExponentialDeformationFieldImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkExponentialDeformationFieldImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkExponentialDeformationFieldImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkExponentialDeformationFieldImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkExponentialDeformationFieldImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkExponentialDeformationFieldImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkExponentialDeformationFieldImageFilterPython
#endif
#ifdef SWIGR
%module itkExponentialDeformationFieldImageFilterR
#endif
#ifdef SWIGRUBY
%module itkExponentialDeformationFieldImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkExponentialDeformationFieldImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkExponentialDeformationFieldImageFilterTcl
#endif
#ifdef SWIGXML
%module itkExponentialDeformationFieldImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Numerics.includes"
#include "Transforms.includes"
#include "SpatialObject.includes"
#include "Resize.includes"
#include "Calculators.includes"
#include "Registration.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImageToImageFilterA.i


%include itk.i
%include wrap_itkExponentialDeformationFieldImageFilter_ext.i


 class itkExponentialDeformationFieldImageFilterIVF22IVF22 : public itkImageToImageFilterIVF22IVF22 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  PixelDimension = 2 };
     enum  {  OutputPixelDimension = 2 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     enum  {  SameDimensionCheck3 = 1 };
     static itkExponentialDeformationFieldImageFilterIVF22IVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetMaximumNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetMaximumNumberOfIterations() const;
     virtual void SetAutomaticNumberOfIterations(bool const _arg);
     virtual bool GetAutomaticNumberOfIterations() const;
     virtual void AutomaticNumberOfIterationsOn();
     virtual void AutomaticNumberOfIterationsOff();
     virtual void SetComputeInverse(bool const _arg);
     virtual bool GetComputeInverse() const;
     virtual void ComputeInverseOn();
     virtual void ComputeInverseOff();
   private:
     itkExponentialDeformationFieldImageFilterIVF22IVF22(itkExponentialDeformationFieldImageFilterIVF22IVF22 const & arg0);
     void operator=(itkExponentialDeformationFieldImageFilterIVF22IVF22 const & arg0);
   protected:
     itkExponentialDeformationFieldImageFilterIVF22IVF22();
     ~itkExponentialDeformationFieldImageFilterIVF22IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkExponentialDeformationFieldImageFilterIVF22IVF22_Pointer {
   public:
     itkExponentialDeformationFieldImageFilterIVF22IVF22_Pointer();
     itkExponentialDeformationFieldImageFilterIVF22IVF22_Pointer(itkExponentialDeformationFieldImageFilterIVF22IVF22_Pointer const & p);
     itkExponentialDeformationFieldImageFilterIVF22IVF22_Pointer(itkExponentialDeformationFieldImageFilterIVF22IVF22 * p);
     ~itkExponentialDeformationFieldImageFilterIVF22IVF22_Pointer();
     itkExponentialDeformationFieldImageFilterIVF22IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkExponentialDeformationFieldImageFilterIVF22IVF22 * GetPointer() const;
     bool operator<(itkExponentialDeformationFieldImageFilterIVF22IVF22_Pointer const & r) const;
     bool operator>(itkExponentialDeformationFieldImageFilterIVF22IVF22_Pointer const & r) const;
     bool operator<=(itkExponentialDeformationFieldImageFilterIVF22IVF22_Pointer const & r) const;
     bool operator>=(itkExponentialDeformationFieldImageFilterIVF22IVF22_Pointer const & r) const;
     itkExponentialDeformationFieldImageFilterIVF22IVF22_Pointer & operator=(itkExponentialDeformationFieldImageFilterIVF22IVF22_Pointer const & r);
     itkExponentialDeformationFieldImageFilterIVF22IVF22_Pointer & operator=(itkExponentialDeformationFieldImageFilterIVF22IVF22 * r);
     itkExponentialDeformationFieldImageFilterIVF22IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkExponentialDeformationFieldImageFilterIVF33IVF33 : public itkImageToImageFilterIVF33IVF33 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  PixelDimension = 3 };
     enum  {  OutputPixelDimension = 3 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     enum  {  SameDimensionCheck3 = 1 };
     static itkExponentialDeformationFieldImageFilterIVF33IVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetMaximumNumberOfIterations(unsigned int const _arg);
     virtual unsigned int GetMaximumNumberOfIterations() const;
     virtual void SetAutomaticNumberOfIterations(bool const _arg);
     virtual bool GetAutomaticNumberOfIterations() const;
     virtual void AutomaticNumberOfIterationsOn();
     virtual void AutomaticNumberOfIterationsOff();
     virtual void SetComputeInverse(bool const _arg);
     virtual bool GetComputeInverse() const;
     virtual void ComputeInverseOn();
     virtual void ComputeInverseOff();
   private:
     itkExponentialDeformationFieldImageFilterIVF33IVF33(itkExponentialDeformationFieldImageFilterIVF33IVF33 const & arg0);
     void operator=(itkExponentialDeformationFieldImageFilterIVF33IVF33 const & arg0);
   protected:
     itkExponentialDeformationFieldImageFilterIVF33IVF33();
     ~itkExponentialDeformationFieldImageFilterIVF33IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkExponentialDeformationFieldImageFilterIVF33IVF33_Pointer {
   public:
     itkExponentialDeformationFieldImageFilterIVF33IVF33_Pointer();
     itkExponentialDeformationFieldImageFilterIVF33IVF33_Pointer(itkExponentialDeformationFieldImageFilterIVF33IVF33_Pointer const & p);
     itkExponentialDeformationFieldImageFilterIVF33IVF33_Pointer(itkExponentialDeformationFieldImageFilterIVF33IVF33 * p);
     ~itkExponentialDeformationFieldImageFilterIVF33IVF33_Pointer();
     itkExponentialDeformationFieldImageFilterIVF33IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkExponentialDeformationFieldImageFilterIVF33IVF33 * GetPointer() const;
     bool operator<(itkExponentialDeformationFieldImageFilterIVF33IVF33_Pointer const & r) const;
     bool operator>(itkExponentialDeformationFieldImageFilterIVF33IVF33_Pointer const & r) const;
     bool operator<=(itkExponentialDeformationFieldImageFilterIVF33IVF33_Pointer const & r) const;
     bool operator>=(itkExponentialDeformationFieldImageFilterIVF33IVF33_Pointer const & r) const;
     itkExponentialDeformationFieldImageFilterIVF33IVF33_Pointer & operator=(itkExponentialDeformationFieldImageFilterIVF33IVF33_Pointer const & r);
     itkExponentialDeformationFieldImageFilterIVF33IVF33_Pointer & operator=(itkExponentialDeformationFieldImageFilterIVF33IVF33 * r);
     itkExponentialDeformationFieldImageFilterIVF33IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


