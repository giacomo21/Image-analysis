// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkStreamingImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkStreamingImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkStreamingImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkStreamingImageFilterJava
#endif
#ifdef SWIGLUA
%module itkStreamingImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkStreamingImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkStreamingImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkStreamingImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkStreamingImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkStreamingImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkStreamingImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkStreamingImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkStreamingImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkStreamingImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkStreamingImageFilterPython
#endif
#ifdef SWIGR
%module itkStreamingImageFilterR
#endif
#ifdef SWIGRUBY
%module itkStreamingImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkStreamingImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkStreamingImageFilterTcl
#endif
#ifdef SWIGXML
%module itkStreamingImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "SimpleFilters.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImageRegionSplitter.i
%import wrap_itkImageToImageFilterA.i


%include itk.i
%include wrap_itkStreamingImageFilter_ext.i


 class itkStreamingImageFilterID2ID2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkStreamingImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetNumberOfStreamDivisions(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfStreamDivisions() const;
     virtual void SetRegionSplitter(itkImageRegionSplitter2 * _arg);
     virtual itkImageRegionSplitter2 * GetRegionSplitter();
     virtual void UpdateOutputData(itkDataObject * output);
     virtual void PropagateRequestedRegion(itkDataObject * output);
   private:
     itkStreamingImageFilterID2ID2(itkStreamingImageFilterID2ID2 const & arg0);
     void operator=(itkStreamingImageFilterID2ID2 const & arg0);
   protected:
     itkStreamingImageFilterID2ID2();
     ~itkStreamingImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkStreamingImageFilterID2ID2_Pointer {
   public:
     itkStreamingImageFilterID2ID2_Pointer();
     itkStreamingImageFilterID2ID2_Pointer(itkStreamingImageFilterID2ID2_Pointer const & p);
     itkStreamingImageFilterID2ID2_Pointer(itkStreamingImageFilterID2ID2 * p);
     ~itkStreamingImageFilterID2ID2_Pointer();
     itkStreamingImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkStreamingImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkStreamingImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkStreamingImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkStreamingImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkStreamingImageFilterID2ID2_Pointer const & r) const;
     itkStreamingImageFilterID2ID2_Pointer & operator=(itkStreamingImageFilterID2ID2_Pointer const & r);
     itkStreamingImageFilterID2ID2_Pointer & operator=(itkStreamingImageFilterID2ID2 * r);
     itkStreamingImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkStreamingImageFilterID3ID3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkStreamingImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetNumberOfStreamDivisions(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfStreamDivisions() const;
     virtual void SetRegionSplitter(itkImageRegionSplitter3 * _arg);
     virtual itkImageRegionSplitter3 * GetRegionSplitter();
     virtual void UpdateOutputData(itkDataObject * output);
     virtual void PropagateRequestedRegion(itkDataObject * output);
   private:
     itkStreamingImageFilterID3ID3(itkStreamingImageFilterID3ID3 const & arg0);
     void operator=(itkStreamingImageFilterID3ID3 const & arg0);
   protected:
     itkStreamingImageFilterID3ID3();
     ~itkStreamingImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkStreamingImageFilterID3ID3_Pointer {
   public:
     itkStreamingImageFilterID3ID3_Pointer();
     itkStreamingImageFilterID3ID3_Pointer(itkStreamingImageFilterID3ID3_Pointer const & p);
     itkStreamingImageFilterID3ID3_Pointer(itkStreamingImageFilterID3ID3 * p);
     ~itkStreamingImageFilterID3ID3_Pointer();
     itkStreamingImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkStreamingImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkStreamingImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkStreamingImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkStreamingImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkStreamingImageFilterID3ID3_Pointer const & r) const;
     itkStreamingImageFilterID3ID3_Pointer & operator=(itkStreamingImageFilterID3ID3_Pointer const & r);
     itkStreamingImageFilterID3ID3_Pointer & operator=(itkStreamingImageFilterID3ID3 * r);
     itkStreamingImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkStreamingImageFilterIF2IF2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkStreamingImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetNumberOfStreamDivisions(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfStreamDivisions() const;
     virtual void SetRegionSplitter(itkImageRegionSplitter2 * _arg);
     virtual itkImageRegionSplitter2 * GetRegionSplitter();
     virtual void UpdateOutputData(itkDataObject * output);
     virtual void PropagateRequestedRegion(itkDataObject * output);
   private:
     itkStreamingImageFilterIF2IF2(itkStreamingImageFilterIF2IF2 const & arg0);
     void operator=(itkStreamingImageFilterIF2IF2 const & arg0);
   protected:
     itkStreamingImageFilterIF2IF2();
     ~itkStreamingImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkStreamingImageFilterIF2IF2_Pointer {
   public:
     itkStreamingImageFilterIF2IF2_Pointer();
     itkStreamingImageFilterIF2IF2_Pointer(itkStreamingImageFilterIF2IF2_Pointer const & p);
     itkStreamingImageFilterIF2IF2_Pointer(itkStreamingImageFilterIF2IF2 * p);
     ~itkStreamingImageFilterIF2IF2_Pointer();
     itkStreamingImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkStreamingImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkStreamingImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkStreamingImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkStreamingImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkStreamingImageFilterIF2IF2_Pointer const & r) const;
     itkStreamingImageFilterIF2IF2_Pointer & operator=(itkStreamingImageFilterIF2IF2_Pointer const & r);
     itkStreamingImageFilterIF2IF2_Pointer & operator=(itkStreamingImageFilterIF2IF2 * r);
     itkStreamingImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkStreamingImageFilterIF3IF3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkStreamingImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetNumberOfStreamDivisions(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfStreamDivisions() const;
     virtual void SetRegionSplitter(itkImageRegionSplitter3 * _arg);
     virtual itkImageRegionSplitter3 * GetRegionSplitter();
     virtual void UpdateOutputData(itkDataObject * output);
     virtual void PropagateRequestedRegion(itkDataObject * output);
   private:
     itkStreamingImageFilterIF3IF3(itkStreamingImageFilterIF3IF3 const & arg0);
     void operator=(itkStreamingImageFilterIF3IF3 const & arg0);
   protected:
     itkStreamingImageFilterIF3IF3();
     ~itkStreamingImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkStreamingImageFilterIF3IF3_Pointer {
   public:
     itkStreamingImageFilterIF3IF3_Pointer();
     itkStreamingImageFilterIF3IF3_Pointer(itkStreamingImageFilterIF3IF3_Pointer const & p);
     itkStreamingImageFilterIF3IF3_Pointer(itkStreamingImageFilterIF3IF3 * p);
     ~itkStreamingImageFilterIF3IF3_Pointer();
     itkStreamingImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkStreamingImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkStreamingImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkStreamingImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkStreamingImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkStreamingImageFilterIF3IF3_Pointer const & r) const;
     itkStreamingImageFilterIF3IF3_Pointer & operator=(itkStreamingImageFilterIF3IF3_Pointer const & r);
     itkStreamingImageFilterIF3IF3_Pointer & operator=(itkStreamingImageFilterIF3IF3 * r);
     itkStreamingImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkStreamingImageFilterIUC2IUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkStreamingImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetNumberOfStreamDivisions(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfStreamDivisions() const;
     virtual void SetRegionSplitter(itkImageRegionSplitter2 * _arg);
     virtual itkImageRegionSplitter2 * GetRegionSplitter();
     virtual void UpdateOutputData(itkDataObject * output);
     virtual void PropagateRequestedRegion(itkDataObject * output);
   private:
     itkStreamingImageFilterIUC2IUC2(itkStreamingImageFilterIUC2IUC2 const & arg0);
     void operator=(itkStreamingImageFilterIUC2IUC2 const & arg0);
   protected:
     itkStreamingImageFilterIUC2IUC2();
     ~itkStreamingImageFilterIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkStreamingImageFilterIUC2IUC2_Pointer {
   public:
     itkStreamingImageFilterIUC2IUC2_Pointer();
     itkStreamingImageFilterIUC2IUC2_Pointer(itkStreamingImageFilterIUC2IUC2_Pointer const & p);
     itkStreamingImageFilterIUC2IUC2_Pointer(itkStreamingImageFilterIUC2IUC2 * p);
     ~itkStreamingImageFilterIUC2IUC2_Pointer();
     itkStreamingImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkStreamingImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkStreamingImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkStreamingImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkStreamingImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkStreamingImageFilterIUC2IUC2_Pointer const & r) const;
     itkStreamingImageFilterIUC2IUC2_Pointer & operator=(itkStreamingImageFilterIUC2IUC2_Pointer const & r);
     itkStreamingImageFilterIUC2IUC2_Pointer & operator=(itkStreamingImageFilterIUC2IUC2 * r);
     itkStreamingImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkStreamingImageFilterIUC3IUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkStreamingImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetNumberOfStreamDivisions(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfStreamDivisions() const;
     virtual void SetRegionSplitter(itkImageRegionSplitter3 * _arg);
     virtual itkImageRegionSplitter3 * GetRegionSplitter();
     virtual void UpdateOutputData(itkDataObject * output);
     virtual void PropagateRequestedRegion(itkDataObject * output);
   private:
     itkStreamingImageFilterIUC3IUC3(itkStreamingImageFilterIUC3IUC3 const & arg0);
     void operator=(itkStreamingImageFilterIUC3IUC3 const & arg0);
   protected:
     itkStreamingImageFilterIUC3IUC3();
     ~itkStreamingImageFilterIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkStreamingImageFilterIUC3IUC3_Pointer {
   public:
     itkStreamingImageFilterIUC3IUC3_Pointer();
     itkStreamingImageFilterIUC3IUC3_Pointer(itkStreamingImageFilterIUC3IUC3_Pointer const & p);
     itkStreamingImageFilterIUC3IUC3_Pointer(itkStreamingImageFilterIUC3IUC3 * p);
     ~itkStreamingImageFilterIUC3IUC3_Pointer();
     itkStreamingImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkStreamingImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkStreamingImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkStreamingImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkStreamingImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkStreamingImageFilterIUC3IUC3_Pointer const & r) const;
     itkStreamingImageFilterIUC3IUC3_Pointer & operator=(itkStreamingImageFilterIUC3IUC3_Pointer const & r);
     itkStreamingImageFilterIUC3IUC3_Pointer & operator=(itkStreamingImageFilterIUC3IUC3 * r);
     itkStreamingImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkStreamingImageFilterIUL2IUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkStreamingImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetNumberOfStreamDivisions(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfStreamDivisions() const;
     virtual void SetRegionSplitter(itkImageRegionSplitter2 * _arg);
     virtual itkImageRegionSplitter2 * GetRegionSplitter();
     virtual void UpdateOutputData(itkDataObject * output);
     virtual void PropagateRequestedRegion(itkDataObject * output);
   private:
     itkStreamingImageFilterIUL2IUL2(itkStreamingImageFilterIUL2IUL2 const & arg0);
     void operator=(itkStreamingImageFilterIUL2IUL2 const & arg0);
   protected:
     itkStreamingImageFilterIUL2IUL2();
     ~itkStreamingImageFilterIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkStreamingImageFilterIUL2IUL2_Pointer {
   public:
     itkStreamingImageFilterIUL2IUL2_Pointer();
     itkStreamingImageFilterIUL2IUL2_Pointer(itkStreamingImageFilterIUL2IUL2_Pointer const & p);
     itkStreamingImageFilterIUL2IUL2_Pointer(itkStreamingImageFilterIUL2IUL2 * p);
     ~itkStreamingImageFilterIUL2IUL2_Pointer();
     itkStreamingImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkStreamingImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkStreamingImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkStreamingImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkStreamingImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkStreamingImageFilterIUL2IUL2_Pointer const & r) const;
     itkStreamingImageFilterIUL2IUL2_Pointer & operator=(itkStreamingImageFilterIUL2IUL2_Pointer const & r);
     itkStreamingImageFilterIUL2IUL2_Pointer & operator=(itkStreamingImageFilterIUL2IUL2 * r);
     itkStreamingImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkStreamingImageFilterIUL3IUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkStreamingImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetNumberOfStreamDivisions(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfStreamDivisions() const;
     virtual void SetRegionSplitter(itkImageRegionSplitter3 * _arg);
     virtual itkImageRegionSplitter3 * GetRegionSplitter();
     virtual void UpdateOutputData(itkDataObject * output);
     virtual void PropagateRequestedRegion(itkDataObject * output);
   private:
     itkStreamingImageFilterIUL3IUL3(itkStreamingImageFilterIUL3IUL3 const & arg0);
     void operator=(itkStreamingImageFilterIUL3IUL3 const & arg0);
   protected:
     itkStreamingImageFilterIUL3IUL3();
     ~itkStreamingImageFilterIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkStreamingImageFilterIUL3IUL3_Pointer {
   public:
     itkStreamingImageFilterIUL3IUL3_Pointer();
     itkStreamingImageFilterIUL3IUL3_Pointer(itkStreamingImageFilterIUL3IUL3_Pointer const & p);
     itkStreamingImageFilterIUL3IUL3_Pointer(itkStreamingImageFilterIUL3IUL3 * p);
     ~itkStreamingImageFilterIUL3IUL3_Pointer();
     itkStreamingImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkStreamingImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkStreamingImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkStreamingImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkStreamingImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkStreamingImageFilterIUL3IUL3_Pointer const & r) const;
     itkStreamingImageFilterIUL3IUL3_Pointer & operator=(itkStreamingImageFilterIUL3IUL3_Pointer const & r);
     itkStreamingImageFilterIUL3IUL3_Pointer & operator=(itkStreamingImageFilterIUL3IUL3 * r);
     itkStreamingImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkStreamingImageFilterIUS2IUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkStreamingImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetNumberOfStreamDivisions(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfStreamDivisions() const;
     virtual void SetRegionSplitter(itkImageRegionSplitter2 * _arg);
     virtual itkImageRegionSplitter2 * GetRegionSplitter();
     virtual void UpdateOutputData(itkDataObject * output);
     virtual void PropagateRequestedRegion(itkDataObject * output);
   private:
     itkStreamingImageFilterIUS2IUS2(itkStreamingImageFilterIUS2IUS2 const & arg0);
     void operator=(itkStreamingImageFilterIUS2IUS2 const & arg0);
   protected:
     itkStreamingImageFilterIUS2IUS2();
     ~itkStreamingImageFilterIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkStreamingImageFilterIUS2IUS2_Pointer {
   public:
     itkStreamingImageFilterIUS2IUS2_Pointer();
     itkStreamingImageFilterIUS2IUS2_Pointer(itkStreamingImageFilterIUS2IUS2_Pointer const & p);
     itkStreamingImageFilterIUS2IUS2_Pointer(itkStreamingImageFilterIUS2IUS2 * p);
     ~itkStreamingImageFilterIUS2IUS2_Pointer();
     itkStreamingImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkStreamingImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkStreamingImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkStreamingImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkStreamingImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkStreamingImageFilterIUS2IUS2_Pointer const & r) const;
     itkStreamingImageFilterIUS2IUS2_Pointer & operator=(itkStreamingImageFilterIUS2IUS2_Pointer const & r);
     itkStreamingImageFilterIUS2IUS2_Pointer & operator=(itkStreamingImageFilterIUS2IUS2 * r);
     itkStreamingImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkStreamingImageFilterIUS3IUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkStreamingImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetNumberOfStreamDivisions(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfStreamDivisions() const;
     virtual void SetRegionSplitter(itkImageRegionSplitter3 * _arg);
     virtual itkImageRegionSplitter3 * GetRegionSplitter();
     virtual void UpdateOutputData(itkDataObject * output);
     virtual void PropagateRequestedRegion(itkDataObject * output);
   private:
     itkStreamingImageFilterIUS3IUS3(itkStreamingImageFilterIUS3IUS3 const & arg0);
     void operator=(itkStreamingImageFilterIUS3IUS3 const & arg0);
   protected:
     itkStreamingImageFilterIUS3IUS3();
     ~itkStreamingImageFilterIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkStreamingImageFilterIUS3IUS3_Pointer {
   public:
     itkStreamingImageFilterIUS3IUS3_Pointer();
     itkStreamingImageFilterIUS3IUS3_Pointer(itkStreamingImageFilterIUS3IUS3_Pointer const & p);
     itkStreamingImageFilterIUS3IUS3_Pointer(itkStreamingImageFilterIUS3IUS3 * p);
     ~itkStreamingImageFilterIUS3IUS3_Pointer();
     itkStreamingImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkStreamingImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkStreamingImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkStreamingImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkStreamingImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkStreamingImageFilterIUS3IUS3_Pointer const & r) const;
     itkStreamingImageFilterIUS3IUS3_Pointer & operator=(itkStreamingImageFilterIUS3IUS3_Pointer const & r);
     itkStreamingImageFilterIUS3IUS3_Pointer & operator=(itkStreamingImageFilterIUS3IUS3 * r);
     itkStreamingImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


