// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkVesselTubeSpatialObjectChicken
#endif
#ifdef SWIGCSHARP
%module itkVesselTubeSpatialObjectCsharp
#endif
#ifdef SWIGGUILE
%module itkVesselTubeSpatialObjectGuile
#endif
#ifdef SWIGJAVA
%module itkVesselTubeSpatialObjectJava
#endif
#ifdef SWIGLUA
%module itkVesselTubeSpatialObjectLua
#endif
#ifdef SWIGMODULA3
%module itkVesselTubeSpatialObjectModula3
#endif
#ifdef SWIGMZSCHEME
%module itkVesselTubeSpatialObjectMzscheme
#endif
#ifdef SWIGOCAML
%module itkVesselTubeSpatialObjectOcaml
#endif
#ifdef SWIGPERL
%module itkVesselTubeSpatialObjectPerl
#endif
#ifdef SWIGPERL5
%module itkVesselTubeSpatialObjectPerl5
#endif
#ifdef SWIGPHP
%module itkVesselTubeSpatialObjectPhp
#endif
#ifdef SWIGPHP4
%module itkVesselTubeSpatialObjectPhp4
#endif
#ifdef SWIGPHP5
%module itkVesselTubeSpatialObjectPhp5
#endif
#ifdef SWIGPIKE
%module itkVesselTubeSpatialObjectPike
#endif
#ifdef SWIGPYTHON
%module itkVesselTubeSpatialObjectPython
#endif
#ifdef SWIGR
%module itkVesselTubeSpatialObjectR
#endif
#ifdef SWIGRUBY
%module itkVesselTubeSpatialObjectRuby
#endif
#ifdef SWIGSEXP
%module itkVesselTubeSpatialObjectSexp
#endif
#ifdef SWIGTCL
%module itkVesselTubeSpatialObjectTcl
#endif
#ifdef SWIGXML
%module itkVesselTubeSpatialObjectXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "Calculators.includes"
#include "SpatialObject.includes"
%}


%{
%}




%import wrap_itkPoint.i
%import wrap_itkSpatialObjectPoint.i
%import wrap_itkPointBasedSpatialObject.i
%import wrap_ITKCommonBase.i
%import wrap_itkVesselTubeSpatialObjectPoint.i


%include itk.i
%include wrap_itkVesselTubeSpatialObject_ext.i


 class itkVesselTubeSpatialObject2_Pointer {
   public:
     itkVesselTubeSpatialObject2_Pointer();
     itkVesselTubeSpatialObject2_Pointer(itkVesselTubeSpatialObject2_Pointer const & p);
     itkVesselTubeSpatialObject2_Pointer(itkVesselTubeSpatialObject2 * p);
     ~itkVesselTubeSpatialObject2_Pointer();
     itkVesselTubeSpatialObject2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVesselTubeSpatialObject2 * GetPointer() const;
     bool operator<(itkVesselTubeSpatialObject2_Pointer const & r) const;
     bool operator>(itkVesselTubeSpatialObject2_Pointer const & r) const;
     bool operator<=(itkVesselTubeSpatialObject2_Pointer const & r) const;
     bool operator>=(itkVesselTubeSpatialObject2_Pointer const & r) const;
     itkVesselTubeSpatialObject2_Pointer & operator=(itkVesselTubeSpatialObject2_Pointer const & r);
     itkVesselTubeSpatialObject2_Pointer & operator=(itkVesselTubeSpatialObject2 * r);
     itkVesselTubeSpatialObject2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVesselTubeSpatialObject2_Superclass : public itkPointBasedSpatialObject2 {
   public:
     static itkVesselTubeSpatialObject2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual std::vector< itkVesselTubeSpatialObjectPoint2 > & GetPoints();
     virtual std::vector< itkVesselTubeSpatialObjectPoint2 > const & GetPoints() const;
     virtual void SetPoints(std::vector< itkVesselTubeSpatialObjectPoint2 > & newPoints);
     virtual itkSpatialObjectPoint2 const * GetPoint(unsigned long ind) const;
     virtual itkSpatialObjectPoint2 * GetPoint(unsigned long ind);
     virtual void SetPoint(unsigned long ind, itkVesselTubeSpatialObjectPoint2 const & pnt);
     virtual void RemovePoint(unsigned long ind);
     virtual unsigned long GetNumberOfPoints() const;
     virtual void SetEndType(unsigned int const _arg);
     virtual unsigned int GetEndType() const;
     virtual void Clear();
     bool ComputeTangentAndNormals();
     unsigned int RemoveDuplicatePoints(unsigned int step = 1);
     virtual bool IsEvaluableAt(itkPointD2 const & point, unsigned int depth = 0, char * name = 0l) const;
     virtual bool ValueAt(itkPointD2 const & point, double & value, unsigned int depth = 0, char * name = 0l) const;
     virtual bool IsInside(itkPointD2 const & point, unsigned int depth, char * name) const;
     virtual bool IsInside(itkPointD2 const & point) const;
     virtual bool ComputeLocalBoundingBox() const;
     virtual void SetParentPoint(int const _arg);
     virtual int GetParentPoint() const;
     virtual void SetRoot(bool const _arg);
     virtual bool GetRoot() const;
     virtual void SetArtery(bool const _arg);
     virtual bool GetArtery() const;
     virtual void CopyInformation(itkDataObject const * data);
   private:
     itkVesselTubeSpatialObject2_Superclass(itkVesselTubeSpatialObject2_Superclass const & arg0);
     void operator=(itkVesselTubeSpatialObject2_Superclass const & arg0);
   protected:
     itkVesselTubeSpatialObject2_Superclass();
     ~itkVesselTubeSpatialObject2_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkVesselTubeSpatialObject2_Superclass_Pointer {
   public:
     itkVesselTubeSpatialObject2_Superclass_Pointer();
     itkVesselTubeSpatialObject2_Superclass_Pointer(itkVesselTubeSpatialObject2_Superclass_Pointer const & p);
     itkVesselTubeSpatialObject2_Superclass_Pointer(itkVesselTubeSpatialObject2_Superclass * p);
     ~itkVesselTubeSpatialObject2_Superclass_Pointer();
     itkVesselTubeSpatialObject2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVesselTubeSpatialObject2_Superclass * GetPointer() const;
     bool operator<(itkVesselTubeSpatialObject2_Superclass_Pointer const & r) const;
     bool operator>(itkVesselTubeSpatialObject2_Superclass_Pointer const & r) const;
     bool operator<=(itkVesselTubeSpatialObject2_Superclass_Pointer const & r) const;
     bool operator>=(itkVesselTubeSpatialObject2_Superclass_Pointer const & r) const;
     itkVesselTubeSpatialObject2_Superclass_Pointer & operator=(itkVesselTubeSpatialObject2_Superclass_Pointer const & r);
     itkVesselTubeSpatialObject2_Superclass_Pointer & operator=(itkVesselTubeSpatialObject2_Superclass * r);
     itkVesselTubeSpatialObject2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVesselTubeSpatialObject3_Pointer {
   public:
     itkVesselTubeSpatialObject3_Pointer();
     itkVesselTubeSpatialObject3_Pointer(itkVesselTubeSpatialObject3_Pointer const & p);
     itkVesselTubeSpatialObject3_Pointer(itkVesselTubeSpatialObject3 * p);
     ~itkVesselTubeSpatialObject3_Pointer();
     itkVesselTubeSpatialObject3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVesselTubeSpatialObject3 * GetPointer() const;
     bool operator<(itkVesselTubeSpatialObject3_Pointer const & r) const;
     bool operator>(itkVesselTubeSpatialObject3_Pointer const & r) const;
     bool operator<=(itkVesselTubeSpatialObject3_Pointer const & r) const;
     bool operator>=(itkVesselTubeSpatialObject3_Pointer const & r) const;
     itkVesselTubeSpatialObject3_Pointer & operator=(itkVesselTubeSpatialObject3_Pointer const & r);
     itkVesselTubeSpatialObject3_Pointer & operator=(itkVesselTubeSpatialObject3 * r);
     itkVesselTubeSpatialObject3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVesselTubeSpatialObject3_Superclass : public itkPointBasedSpatialObject3 {
   public:
     static itkVesselTubeSpatialObject3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual std::vector< itkVesselTubeSpatialObjectPoint3 > & GetPoints();
     virtual std::vector< itkVesselTubeSpatialObjectPoint3 > const & GetPoints() const;
     virtual void SetPoints(std::vector< itkVesselTubeSpatialObjectPoint3 > & newPoints);
     virtual itkSpatialObjectPoint3 const * GetPoint(unsigned long ind) const;
     virtual itkSpatialObjectPoint3 * GetPoint(unsigned long ind);
     virtual void SetPoint(unsigned long ind, itkVesselTubeSpatialObjectPoint3 const & pnt);
     virtual void RemovePoint(unsigned long ind);
     virtual unsigned long GetNumberOfPoints() const;
     virtual void SetEndType(unsigned int const _arg);
     virtual unsigned int GetEndType() const;
     virtual void Clear();
     bool ComputeTangentAndNormals();
     unsigned int RemoveDuplicatePoints(unsigned int step = 1);
     virtual bool IsEvaluableAt(itkPointD3 const & point, unsigned int depth = 0, char * name = 0l) const;
     virtual bool ValueAt(itkPointD3 const & point, double & value, unsigned int depth = 0, char * name = 0l) const;
     virtual bool IsInside(itkPointD3 const & point, unsigned int depth, char * name) const;
     virtual bool IsInside(itkPointD3 const & point) const;
     virtual bool ComputeLocalBoundingBox() const;
     virtual void SetParentPoint(int const _arg);
     virtual int GetParentPoint() const;
     virtual void SetRoot(bool const _arg);
     virtual bool GetRoot() const;
     virtual void SetArtery(bool const _arg);
     virtual bool GetArtery() const;
     virtual void CopyInformation(itkDataObject const * data);
   private:
     itkVesselTubeSpatialObject3_Superclass(itkVesselTubeSpatialObject3_Superclass const & arg0);
     void operator=(itkVesselTubeSpatialObject3_Superclass const & arg0);
   protected:
     itkVesselTubeSpatialObject3_Superclass();
     ~itkVesselTubeSpatialObject3_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkVesselTubeSpatialObject3_Superclass_Pointer {
   public:
     itkVesselTubeSpatialObject3_Superclass_Pointer();
     itkVesselTubeSpatialObject3_Superclass_Pointer(itkVesselTubeSpatialObject3_Superclass_Pointer const & p);
     itkVesselTubeSpatialObject3_Superclass_Pointer(itkVesselTubeSpatialObject3_Superclass * p);
     ~itkVesselTubeSpatialObject3_Superclass_Pointer();
     itkVesselTubeSpatialObject3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVesselTubeSpatialObject3_Superclass * GetPointer() const;
     bool operator<(itkVesselTubeSpatialObject3_Superclass_Pointer const & r) const;
     bool operator>(itkVesselTubeSpatialObject3_Superclass_Pointer const & r) const;
     bool operator<=(itkVesselTubeSpatialObject3_Superclass_Pointer const & r) const;
     bool operator>=(itkVesselTubeSpatialObject3_Superclass_Pointer const & r) const;
     itkVesselTubeSpatialObject3_Superclass_Pointer & operator=(itkVesselTubeSpatialObject3_Superclass_Pointer const & r);
     itkVesselTubeSpatialObject3_Superclass_Pointer & operator=(itkVesselTubeSpatialObject3_Superclass * r);
     itkVesselTubeSpatialObject3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVesselTubeSpatialObject2 : public itkVesselTubeSpatialObject2_Superclass {
   public:
     static itkVesselTubeSpatialObject2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkVesselTubeSpatialObject2(itkVesselTubeSpatialObject2 const & arg0);
     void operator=(itkVesselTubeSpatialObject2 const & arg0);
   protected:
     itkVesselTubeSpatialObject2();
     ~itkVesselTubeSpatialObject2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkVesselTubeSpatialObject3 : public itkVesselTubeSpatialObject3_Superclass {
   public:
     static itkVesselTubeSpatialObject3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkVesselTubeSpatialObject3(itkVesselTubeSpatialObject3 const & arg0);
     void operator=(itkVesselTubeSpatialObject3 const & arg0);
   protected:
     itkVesselTubeSpatialObject3();
     ~itkVesselTubeSpatialObject3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


