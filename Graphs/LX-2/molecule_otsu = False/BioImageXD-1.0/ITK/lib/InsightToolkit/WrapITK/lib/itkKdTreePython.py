# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkKdTreePython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkKdTreePython', [dirname(__file__)])
        except ImportError:
            import _itkKdTreePython
            return _itkKdTreePython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkKdTreePython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkKdTreePython = swig_import_helper()
    del swig_import_helper
else:
    import _itkKdTreePython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkEuclideanDistancePython
import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkDistanceMetricPython
import itkVectorPython
import itkFixedArrayPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import vnl_vector_refPython
import itkArrayPython
import itkFunctionBasePython
import itkPointPython
import itkContinuousIndexPython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import itkImagePython
import itkCovariantVectorPython
import ITKRegionsPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkListSamplePython
import itkSamplePython
def itkKdTreeLSVF3_New():
  return itkKdTreeLSVF3.New()

def itkKdTreeLSVF2_New():
  return itkKdTreeLSVF2.New()

class itkKdTreeLSVF2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkKdTreeLSVF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkKdTreePython.itkKdTreeLSVF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetMeasurementVectorSize(self):
        """GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkKdTreePython.itkKdTreeLSVF2_GetMeasurementVectorSize(self)

    def SetBucketSize(self, *args):
        """SetBucketSize(self, unsigned int size)"""
        return _itkKdTreePython.itkKdTreeLSVF2_SetBucketSize(self, *args)

    def SetSample(self, *args):
        """SetSample(self, itkListSampleVF2 sample)"""
        return _itkKdTreePython.itkKdTreeLSVF2_SetSample(self, *args)

    def GetSample(self):
        """GetSample(self) -> itkListSampleVF2"""
        return _itkKdTreePython.itkKdTreeLSVF2_GetSample(self)

    def Size(self):
        """Size(self) -> unsigned long"""
        return _itkKdTreePython.itkKdTreeLSVF2_Size(self)

    def GetEmptyTerminalNode(self):
        """GetEmptyTerminalNode(self) -> itkKdTreeNodeLSVF2"""
        return _itkKdTreePython.itkKdTreeLSVF2_GetEmptyTerminalNode(self)

    def SetRoot(self, *args):
        """SetRoot(self, itkKdTreeNodeLSVF2 root)"""
        return _itkKdTreePython.itkKdTreeLSVF2_SetRoot(self, *args)

    def GetRoot(self):
        """GetRoot(self) -> itkKdTreeNodeLSVF2"""
        return _itkKdTreePython.itkKdTreeLSVF2_GetRoot(self)

    def GetMeasurementVector(self, *args):
        """GetMeasurementVector(self, size_t id) -> itkVectorF2"""
        return _itkKdTreePython.itkKdTreeLSVF2_GetMeasurementVector(self, *args)

    def GetFrequency(self, *args):
        """GetFrequency(self, size_t id) -> size_t"""
        return _itkKdTreePython.itkKdTreeLSVF2_GetFrequency(self, *args)

    def GetDistanceMetric(self):
        """GetDistanceMetric(self) -> itkEuclideanDistanceMetricVF2"""
        return _itkKdTreePython.itkKdTreeLSVF2_GetDistanceMetric(self)

    def Search(self, *args):
        """
        Search(self, itkVectorF2 query, unsigned int numberOfNeighborsRequested, 
            vectorUL result)
        Search(self, itkVectorF2 query, double radius, vectorUL result)
        """
        return _itkKdTreePython.itkKdTreeLSVF2_Search(self, *args)

    def GetNumberOfVisits(self):
        """GetNumberOfVisits(self) -> int"""
        return _itkKdTreePython.itkKdTreeLSVF2_GetNumberOfVisits(self)

    def BallWithinBounds(self, *args):
        """
        BallWithinBounds(self, itkVectorF2 query, itkVectorF2 lowerBound, itkVectorF2 upperBound, 
            double radius) -> bool
        """
        return _itkKdTreePython.itkKdTreeLSVF2_BallWithinBounds(self, *args)

    def BoundsOverlapBall(self, *args):
        """
        BoundsOverlapBall(self, itkVectorF2 query, itkVectorF2 lowerBound, itkVectorF2 upperBound, 
            double radius) -> bool
        """
        return _itkKdTreePython.itkKdTreeLSVF2_BoundsOverlapBall(self, *args)

    def DeleteNode(self, *args):
        """DeleteNode(self, itkKdTreeNodeLSVF2 node)"""
        return _itkKdTreePython.itkKdTreeLSVF2_DeleteNode(self, *args)

    def PrintTree(self, *args):
        """
        PrintTree(self, ostream os)
        PrintTree(self, itkKdTreeNodeLSVF2 node, unsigned int level, unsigned int activeDimension, 
            ostream os = cout)
        PrintTree(self, itkKdTreeNodeLSVF2 node, unsigned int level, unsigned int activeDimension)
        """
        return _itkKdTreePython.itkKdTreeLSVF2_PrintTree(self, *args)

    def PlotTree(self, *args):
        """
        PlotTree(self, ostream os)
        PlotTree(self, itkKdTreeNodeLSVF2 node, ostream os = cout)
        PlotTree(self, itkKdTreeNodeLSVF2 node)
        """
        return _itkKdTreePython.itkKdTreeLSVF2_PlotTree(self, *args)

    __swig_destroy__ = _itkKdTreePython.delete_itkKdTreeLSVF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkKdTreeLSVF2"""
        return _itkKdTreePython.itkKdTreeLSVF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkKdTreeLSVF2"""
        return _itkKdTreePython.itkKdTreeLSVF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkKdTreeLSVF2
        
        Create a new object of the class itkKdTreeLSVF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkKdTreeLSVF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkKdTreeLSVF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKdTreeLSVF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKdTreeLSVF2.GetMeasurementVectorSize = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF2_GetMeasurementVectorSize,None,itkKdTreeLSVF2)
itkKdTreeLSVF2.SetBucketSize = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF2_SetBucketSize,None,itkKdTreeLSVF2)
itkKdTreeLSVF2.SetSample = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF2_SetSample,None,itkKdTreeLSVF2)
itkKdTreeLSVF2.GetSample = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF2_GetSample,None,itkKdTreeLSVF2)
itkKdTreeLSVF2.Size = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF2_Size,None,itkKdTreeLSVF2)
itkKdTreeLSVF2.GetEmptyTerminalNode = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF2_GetEmptyTerminalNode,None,itkKdTreeLSVF2)
itkKdTreeLSVF2.SetRoot = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF2_SetRoot,None,itkKdTreeLSVF2)
itkKdTreeLSVF2.GetRoot = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF2_GetRoot,None,itkKdTreeLSVF2)
itkKdTreeLSVF2.GetMeasurementVector = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF2_GetMeasurementVector,None,itkKdTreeLSVF2)
itkKdTreeLSVF2.GetFrequency = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF2_GetFrequency,None,itkKdTreeLSVF2)
itkKdTreeLSVF2.GetDistanceMetric = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF2_GetDistanceMetric,None,itkKdTreeLSVF2)
itkKdTreeLSVF2.Search = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF2_Search,None,itkKdTreeLSVF2)
itkKdTreeLSVF2.GetNumberOfVisits = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF2_GetNumberOfVisits,None,itkKdTreeLSVF2)
itkKdTreeLSVF2.BallWithinBounds = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF2_BallWithinBounds,None,itkKdTreeLSVF2)
itkKdTreeLSVF2.BoundsOverlapBall = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF2_BoundsOverlapBall,None,itkKdTreeLSVF2)
itkKdTreeLSVF2.DeleteNode = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF2_DeleteNode,None,itkKdTreeLSVF2)
itkKdTreeLSVF2.PrintTree = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF2_PrintTree,None,itkKdTreeLSVF2)
itkKdTreeLSVF2.PlotTree = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF2_PlotTree,None,itkKdTreeLSVF2)
itkKdTreeLSVF2.GetPointer = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF2_GetPointer,None,itkKdTreeLSVF2)
itkKdTreeLSVF2_swigregister = _itkKdTreePython.itkKdTreeLSVF2_swigregister
itkKdTreeLSVF2_swigregister(itkKdTreeLSVF2)

def itkKdTreeLSVF2___New_orig__():
  """itkKdTreeLSVF2___New_orig__()"""
  return _itkKdTreePython.itkKdTreeLSVF2___New_orig__()

def itkKdTreeLSVF2_cast(*args):
  """itkKdTreeLSVF2_cast(itkLightObject obj) -> itkKdTreeLSVF2"""
  return _itkKdTreePython.itkKdTreeLSVF2_cast(*args)

class itkKdTreeLSVF3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkKdTreeLSVF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkKdTreePython.itkKdTreeLSVF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetMeasurementVectorSize(self):
        """GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkKdTreePython.itkKdTreeLSVF3_GetMeasurementVectorSize(self)

    def SetBucketSize(self, *args):
        """SetBucketSize(self, unsigned int size)"""
        return _itkKdTreePython.itkKdTreeLSVF3_SetBucketSize(self, *args)

    def SetSample(self, *args):
        """SetSample(self, itkListSampleVF3 sample)"""
        return _itkKdTreePython.itkKdTreeLSVF3_SetSample(self, *args)

    def GetSample(self):
        """GetSample(self) -> itkListSampleVF3"""
        return _itkKdTreePython.itkKdTreeLSVF3_GetSample(self)

    def Size(self):
        """Size(self) -> unsigned long"""
        return _itkKdTreePython.itkKdTreeLSVF3_Size(self)

    def GetEmptyTerminalNode(self):
        """GetEmptyTerminalNode(self) -> itkKdTreeNodeLSVF3"""
        return _itkKdTreePython.itkKdTreeLSVF3_GetEmptyTerminalNode(self)

    def SetRoot(self, *args):
        """SetRoot(self, itkKdTreeNodeLSVF3 root)"""
        return _itkKdTreePython.itkKdTreeLSVF3_SetRoot(self, *args)

    def GetRoot(self):
        """GetRoot(self) -> itkKdTreeNodeLSVF3"""
        return _itkKdTreePython.itkKdTreeLSVF3_GetRoot(self)

    def GetMeasurementVector(self, *args):
        """GetMeasurementVector(self, size_t id) -> itkVectorF3"""
        return _itkKdTreePython.itkKdTreeLSVF3_GetMeasurementVector(self, *args)

    def GetFrequency(self, *args):
        """GetFrequency(self, size_t id) -> size_t"""
        return _itkKdTreePython.itkKdTreeLSVF3_GetFrequency(self, *args)

    def GetDistanceMetric(self):
        """GetDistanceMetric(self) -> itkEuclideanDistanceMetricVF3"""
        return _itkKdTreePython.itkKdTreeLSVF3_GetDistanceMetric(self)

    def Search(self, *args):
        """
        Search(self, itkVectorF3 query, unsigned int numberOfNeighborsRequested, 
            vectorUL result)
        Search(self, itkVectorF3 query, double radius, vectorUL result)
        """
        return _itkKdTreePython.itkKdTreeLSVF3_Search(self, *args)

    def GetNumberOfVisits(self):
        """GetNumberOfVisits(self) -> int"""
        return _itkKdTreePython.itkKdTreeLSVF3_GetNumberOfVisits(self)

    def BallWithinBounds(self, *args):
        """
        BallWithinBounds(self, itkVectorF3 query, itkVectorF3 lowerBound, itkVectorF3 upperBound, 
            double radius) -> bool
        """
        return _itkKdTreePython.itkKdTreeLSVF3_BallWithinBounds(self, *args)

    def BoundsOverlapBall(self, *args):
        """
        BoundsOverlapBall(self, itkVectorF3 query, itkVectorF3 lowerBound, itkVectorF3 upperBound, 
            double radius) -> bool
        """
        return _itkKdTreePython.itkKdTreeLSVF3_BoundsOverlapBall(self, *args)

    def DeleteNode(self, *args):
        """DeleteNode(self, itkKdTreeNodeLSVF3 node)"""
        return _itkKdTreePython.itkKdTreeLSVF3_DeleteNode(self, *args)

    def PrintTree(self, *args):
        """
        PrintTree(self, ostream os)
        PrintTree(self, itkKdTreeNodeLSVF3 node, unsigned int level, unsigned int activeDimension, 
            ostream os = cout)
        PrintTree(self, itkKdTreeNodeLSVF3 node, unsigned int level, unsigned int activeDimension)
        """
        return _itkKdTreePython.itkKdTreeLSVF3_PrintTree(self, *args)

    def PlotTree(self, *args):
        """
        PlotTree(self, ostream os)
        PlotTree(self, itkKdTreeNodeLSVF3 node, ostream os = cout)
        PlotTree(self, itkKdTreeNodeLSVF3 node)
        """
        return _itkKdTreePython.itkKdTreeLSVF3_PlotTree(self, *args)

    __swig_destroy__ = _itkKdTreePython.delete_itkKdTreeLSVF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkKdTreeLSVF3"""
        return _itkKdTreePython.itkKdTreeLSVF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkKdTreeLSVF3"""
        return _itkKdTreePython.itkKdTreeLSVF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkKdTreeLSVF3
        
        Create a new object of the class itkKdTreeLSVF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkKdTreeLSVF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkKdTreeLSVF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKdTreeLSVF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKdTreeLSVF3.GetMeasurementVectorSize = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF3_GetMeasurementVectorSize,None,itkKdTreeLSVF3)
itkKdTreeLSVF3.SetBucketSize = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF3_SetBucketSize,None,itkKdTreeLSVF3)
itkKdTreeLSVF3.SetSample = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF3_SetSample,None,itkKdTreeLSVF3)
itkKdTreeLSVF3.GetSample = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF3_GetSample,None,itkKdTreeLSVF3)
itkKdTreeLSVF3.Size = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF3_Size,None,itkKdTreeLSVF3)
itkKdTreeLSVF3.GetEmptyTerminalNode = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF3_GetEmptyTerminalNode,None,itkKdTreeLSVF3)
itkKdTreeLSVF3.SetRoot = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF3_SetRoot,None,itkKdTreeLSVF3)
itkKdTreeLSVF3.GetRoot = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF3_GetRoot,None,itkKdTreeLSVF3)
itkKdTreeLSVF3.GetMeasurementVector = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF3_GetMeasurementVector,None,itkKdTreeLSVF3)
itkKdTreeLSVF3.GetFrequency = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF3_GetFrequency,None,itkKdTreeLSVF3)
itkKdTreeLSVF3.GetDistanceMetric = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF3_GetDistanceMetric,None,itkKdTreeLSVF3)
itkKdTreeLSVF3.Search = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF3_Search,None,itkKdTreeLSVF3)
itkKdTreeLSVF3.GetNumberOfVisits = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF3_GetNumberOfVisits,None,itkKdTreeLSVF3)
itkKdTreeLSVF3.BallWithinBounds = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF3_BallWithinBounds,None,itkKdTreeLSVF3)
itkKdTreeLSVF3.BoundsOverlapBall = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF3_BoundsOverlapBall,None,itkKdTreeLSVF3)
itkKdTreeLSVF3.DeleteNode = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF3_DeleteNode,None,itkKdTreeLSVF3)
itkKdTreeLSVF3.PrintTree = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF3_PrintTree,None,itkKdTreeLSVF3)
itkKdTreeLSVF3.PlotTree = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF3_PlotTree,None,itkKdTreeLSVF3)
itkKdTreeLSVF3.GetPointer = new_instancemethod(_itkKdTreePython.itkKdTreeLSVF3_GetPointer,None,itkKdTreeLSVF3)
itkKdTreeLSVF3_swigregister = _itkKdTreePython.itkKdTreeLSVF3_swigregister
itkKdTreeLSVF3_swigregister(itkKdTreeLSVF3)

def itkKdTreeLSVF3___New_orig__():
  """itkKdTreeLSVF3___New_orig__()"""
  return _itkKdTreePython.itkKdTreeLSVF3___New_orig__()

def itkKdTreeLSVF3_cast(*args):
  """itkKdTreeLSVF3_cast(itkLightObject obj) -> itkKdTreeLSVF3"""
  return _itkKdTreePython.itkKdTreeLSVF3_cast(*args)

class itkKdTreeNodeLSVF2(object):
    """Proxy of C++ itkKdTreeNodeLSVF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def IsTerminal(self):
        """IsTerminal(self) -> bool"""
        return _itkKdTreePython.itkKdTreeNodeLSVF2_IsTerminal(self)

    def GetParameters(self, *args):
        """GetParameters(self, unsigned int partitionDimension, float partitionValue)"""
        return _itkKdTreePython.itkKdTreeNodeLSVF2_GetParameters(self, *args)

    def Left(self, *args):
        """
        Left(self) -> itkKdTreeNodeLSVF2
        Left(self) -> itkKdTreeNodeLSVF2
        """
        return _itkKdTreePython.itkKdTreeNodeLSVF2_Left(self, *args)

    def Right(self, *args):
        """
        Right(self) -> itkKdTreeNodeLSVF2
        Right(self) -> itkKdTreeNodeLSVF2
        """
        return _itkKdTreePython.itkKdTreeNodeLSVF2_Right(self, *args)

    def Size(self):
        """Size(self) -> unsigned int"""
        return _itkKdTreePython.itkKdTreeNodeLSVF2_Size(self)

    def GetWeightedCentroid(self, *args):
        """GetWeightedCentroid(self, itkArrayD centroid)"""
        return _itkKdTreePython.itkKdTreeNodeLSVF2_GetWeightedCentroid(self, *args)

    def GetCentroid(self, *args):
        """GetCentroid(self, itkArrayD centroid)"""
        return _itkKdTreePython.itkKdTreeNodeLSVF2_GetCentroid(self, *args)

    def GetInstanceIdentifier(self, *args):
        """GetInstanceIdentifier(self, size_t index) -> size_t"""
        return _itkKdTreePython.itkKdTreeNodeLSVF2_GetInstanceIdentifier(self, *args)

    def AddInstanceIdentifier(self, *args):
        """AddInstanceIdentifier(self, size_t id)"""
        return _itkKdTreePython.itkKdTreeNodeLSVF2_AddInstanceIdentifier(self, *args)

    __swig_destroy__ = _itkKdTreePython.delete_itkKdTreeNodeLSVF2
itkKdTreeNodeLSVF2.IsTerminal = new_instancemethod(_itkKdTreePython.itkKdTreeNodeLSVF2_IsTerminal,None,itkKdTreeNodeLSVF2)
itkKdTreeNodeLSVF2.GetParameters = new_instancemethod(_itkKdTreePython.itkKdTreeNodeLSVF2_GetParameters,None,itkKdTreeNodeLSVF2)
itkKdTreeNodeLSVF2.Left = new_instancemethod(_itkKdTreePython.itkKdTreeNodeLSVF2_Left,None,itkKdTreeNodeLSVF2)
itkKdTreeNodeLSVF2.Right = new_instancemethod(_itkKdTreePython.itkKdTreeNodeLSVF2_Right,None,itkKdTreeNodeLSVF2)
itkKdTreeNodeLSVF2.Size = new_instancemethod(_itkKdTreePython.itkKdTreeNodeLSVF2_Size,None,itkKdTreeNodeLSVF2)
itkKdTreeNodeLSVF2.GetWeightedCentroid = new_instancemethod(_itkKdTreePython.itkKdTreeNodeLSVF2_GetWeightedCentroid,None,itkKdTreeNodeLSVF2)
itkKdTreeNodeLSVF2.GetCentroid = new_instancemethod(_itkKdTreePython.itkKdTreeNodeLSVF2_GetCentroid,None,itkKdTreeNodeLSVF2)
itkKdTreeNodeLSVF2.GetInstanceIdentifier = new_instancemethod(_itkKdTreePython.itkKdTreeNodeLSVF2_GetInstanceIdentifier,None,itkKdTreeNodeLSVF2)
itkKdTreeNodeLSVF2.AddInstanceIdentifier = new_instancemethod(_itkKdTreePython.itkKdTreeNodeLSVF2_AddInstanceIdentifier,None,itkKdTreeNodeLSVF2)
itkKdTreeNodeLSVF2_swigregister = _itkKdTreePython.itkKdTreeNodeLSVF2_swigregister
itkKdTreeNodeLSVF2_swigregister(itkKdTreeNodeLSVF2)

class itkKdTreeNodeLSVF3(object):
    """Proxy of C++ itkKdTreeNodeLSVF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def IsTerminal(self):
        """IsTerminal(self) -> bool"""
        return _itkKdTreePython.itkKdTreeNodeLSVF3_IsTerminal(self)

    def GetParameters(self, *args):
        """GetParameters(self, unsigned int partitionDimension, float partitionValue)"""
        return _itkKdTreePython.itkKdTreeNodeLSVF3_GetParameters(self, *args)

    def Left(self, *args):
        """
        Left(self) -> itkKdTreeNodeLSVF3
        Left(self) -> itkKdTreeNodeLSVF3
        """
        return _itkKdTreePython.itkKdTreeNodeLSVF3_Left(self, *args)

    def Right(self, *args):
        """
        Right(self) -> itkKdTreeNodeLSVF3
        Right(self) -> itkKdTreeNodeLSVF3
        """
        return _itkKdTreePython.itkKdTreeNodeLSVF3_Right(self, *args)

    def Size(self):
        """Size(self) -> unsigned int"""
        return _itkKdTreePython.itkKdTreeNodeLSVF3_Size(self)

    def GetWeightedCentroid(self, *args):
        """GetWeightedCentroid(self, itkArrayD centroid)"""
        return _itkKdTreePython.itkKdTreeNodeLSVF3_GetWeightedCentroid(self, *args)

    def GetCentroid(self, *args):
        """GetCentroid(self, itkArrayD centroid)"""
        return _itkKdTreePython.itkKdTreeNodeLSVF3_GetCentroid(self, *args)

    def GetInstanceIdentifier(self, *args):
        """GetInstanceIdentifier(self, size_t index) -> size_t"""
        return _itkKdTreePython.itkKdTreeNodeLSVF3_GetInstanceIdentifier(self, *args)

    def AddInstanceIdentifier(self, *args):
        """AddInstanceIdentifier(self, size_t id)"""
        return _itkKdTreePython.itkKdTreeNodeLSVF3_AddInstanceIdentifier(self, *args)

    __swig_destroy__ = _itkKdTreePython.delete_itkKdTreeNodeLSVF3
itkKdTreeNodeLSVF3.IsTerminal = new_instancemethod(_itkKdTreePython.itkKdTreeNodeLSVF3_IsTerminal,None,itkKdTreeNodeLSVF3)
itkKdTreeNodeLSVF3.GetParameters = new_instancemethod(_itkKdTreePython.itkKdTreeNodeLSVF3_GetParameters,None,itkKdTreeNodeLSVF3)
itkKdTreeNodeLSVF3.Left = new_instancemethod(_itkKdTreePython.itkKdTreeNodeLSVF3_Left,None,itkKdTreeNodeLSVF3)
itkKdTreeNodeLSVF3.Right = new_instancemethod(_itkKdTreePython.itkKdTreeNodeLSVF3_Right,None,itkKdTreeNodeLSVF3)
itkKdTreeNodeLSVF3.Size = new_instancemethod(_itkKdTreePython.itkKdTreeNodeLSVF3_Size,None,itkKdTreeNodeLSVF3)
itkKdTreeNodeLSVF3.GetWeightedCentroid = new_instancemethod(_itkKdTreePython.itkKdTreeNodeLSVF3_GetWeightedCentroid,None,itkKdTreeNodeLSVF3)
itkKdTreeNodeLSVF3.GetCentroid = new_instancemethod(_itkKdTreePython.itkKdTreeNodeLSVF3_GetCentroid,None,itkKdTreeNodeLSVF3)
itkKdTreeNodeLSVF3.GetInstanceIdentifier = new_instancemethod(_itkKdTreePython.itkKdTreeNodeLSVF3_GetInstanceIdentifier,None,itkKdTreeNodeLSVF3)
itkKdTreeNodeLSVF3.AddInstanceIdentifier = new_instancemethod(_itkKdTreePython.itkKdTreeNodeLSVF3_AddInstanceIdentifier,None,itkKdTreeNodeLSVF3)
itkKdTreeNodeLSVF3_swigregister = _itkKdTreePython.itkKdTreeNodeLSVF3_swigregister
itkKdTreeNodeLSVF3_swigregister(itkKdTreeNodeLSVF3)



