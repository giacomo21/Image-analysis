# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkElasticBodyReciprocalSplineKernelTransformPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkElasticBodyReciprocalSplineKernelTransformPython', [dirname(__file__)])
        except ImportError:
            import _itkElasticBodyReciprocalSplineKernelTransformPython
            return _itkElasticBodyReciprocalSplineKernelTransformPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkElasticBodyReciprocalSplineKernelTransformPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkElasticBodyReciprocalSplineKernelTransformPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkElasticBodyReciprocalSplineKernelTransformPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import vnl_matrix_fixedPython
import vnl_vectorPython
import vcl_complexPython
import pyBasePython
import vnl_matrixPython
import ITKCommonBasePython
import itkEventObjectsPython
import itkVectorPython
import itkFixedArrayPython
import vnl_vector_refPython
import itkKernelTransformPython
import itkPointPython
import itkArrayPython
import itkTransformPython
import itkCovariantVectorPython
import itkArray2DPython
import itkVectorContainerPython
import itkOffsetPython
import itkSizePython
import itkContinuousIndexPython
import itkIndexPython
import itkLevelSetPython
import itkPointSetPython
import itkMapContainerPython
import itkQuadEdgeMeshBasePython
import itkCellInterfacePython
import itkQuadEdgeMeshPointPython
import itkGeometricalQuadEdgePython
import itkQuadEdgePython
import itkBoundingBoxPython
def itkElasticBodyReciprocalSplineKernelTransformD3_New():
  return itkElasticBodyReciprocalSplineKernelTransformD3.New()

def itkElasticBodyReciprocalSplineKernelTransformD2_New():
  return itkElasticBodyReciprocalSplineKernelTransformD2.New()

class itkElasticBodyReciprocalSplineKernelTransformD2(itkKernelTransformPython.itkKernelTransformD2):
    """Proxy of C++ itkElasticBodyReciprocalSplineKernelTransformD2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SpaceDimension = _itkElasticBodyReciprocalSplineKernelTransformPython.itkElasticBodyReciprocalSplineKernelTransformD2_SpaceDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkElasticBodyReciprocalSplineKernelTransformPython.itkElasticBodyReciprocalSplineKernelTransformD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetAlpha(self, *args):
        """SetAlpha(self, double _arg)"""
        return _itkElasticBodyReciprocalSplineKernelTransformPython.itkElasticBodyReciprocalSplineKernelTransformD2_SetAlpha(self, *args)

    def GetAlpha(self):
        """GetAlpha(self) -> double"""
        return _itkElasticBodyReciprocalSplineKernelTransformPython.itkElasticBodyReciprocalSplineKernelTransformD2_GetAlpha(self)

    __swig_destroy__ = _itkElasticBodyReciprocalSplineKernelTransformPython.delete_itkElasticBodyReciprocalSplineKernelTransformD2
    def cast(*args):
        """cast(itkLightObject obj) -> itkElasticBodyReciprocalSplineKernelTransformD2"""
        return _itkElasticBodyReciprocalSplineKernelTransformPython.itkElasticBodyReciprocalSplineKernelTransformD2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkElasticBodyReciprocalSplineKernelTransformD2"""
        return _itkElasticBodyReciprocalSplineKernelTransformPython.itkElasticBodyReciprocalSplineKernelTransformD2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkElasticBodyReciprocalSplineKernelTransformD2
        
        Create a new object of the class itkElasticBodyReciprocalSplineKernelTransformD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkElasticBodyReciprocalSplineKernelTransformD2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkElasticBodyReciprocalSplineKernelTransformD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkElasticBodyReciprocalSplineKernelTransformD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkElasticBodyReciprocalSplineKernelTransformD2.SetAlpha = new_instancemethod(_itkElasticBodyReciprocalSplineKernelTransformPython.itkElasticBodyReciprocalSplineKernelTransformD2_SetAlpha,None,itkElasticBodyReciprocalSplineKernelTransformD2)
itkElasticBodyReciprocalSplineKernelTransformD2.GetAlpha = new_instancemethod(_itkElasticBodyReciprocalSplineKernelTransformPython.itkElasticBodyReciprocalSplineKernelTransformD2_GetAlpha,None,itkElasticBodyReciprocalSplineKernelTransformD2)
itkElasticBodyReciprocalSplineKernelTransformD2.GetPointer = new_instancemethod(_itkElasticBodyReciprocalSplineKernelTransformPython.itkElasticBodyReciprocalSplineKernelTransformD2_GetPointer,None,itkElasticBodyReciprocalSplineKernelTransformD2)
itkElasticBodyReciprocalSplineKernelTransformD2_swigregister = _itkElasticBodyReciprocalSplineKernelTransformPython.itkElasticBodyReciprocalSplineKernelTransformD2_swigregister
itkElasticBodyReciprocalSplineKernelTransformD2_swigregister(itkElasticBodyReciprocalSplineKernelTransformD2)

def itkElasticBodyReciprocalSplineKernelTransformD2___New_orig__():
  """itkElasticBodyReciprocalSplineKernelTransformD2___New_orig__()"""
  return _itkElasticBodyReciprocalSplineKernelTransformPython.itkElasticBodyReciprocalSplineKernelTransformD2___New_orig__()

def itkElasticBodyReciprocalSplineKernelTransformD2_cast(*args):
  """itkElasticBodyReciprocalSplineKernelTransformD2_cast(itkLightObject obj) -> itkElasticBodyReciprocalSplineKernelTransformD2"""
  return _itkElasticBodyReciprocalSplineKernelTransformPython.itkElasticBodyReciprocalSplineKernelTransformD2_cast(*args)

class itkElasticBodyReciprocalSplineKernelTransformD3(itkKernelTransformPython.itkKernelTransformD3):
    """Proxy of C++ itkElasticBodyReciprocalSplineKernelTransformD3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SpaceDimension = _itkElasticBodyReciprocalSplineKernelTransformPython.itkElasticBodyReciprocalSplineKernelTransformD3_SpaceDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkElasticBodyReciprocalSplineKernelTransformPython.itkElasticBodyReciprocalSplineKernelTransformD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetAlpha(self, *args):
        """SetAlpha(self, double _arg)"""
        return _itkElasticBodyReciprocalSplineKernelTransformPython.itkElasticBodyReciprocalSplineKernelTransformD3_SetAlpha(self, *args)

    def GetAlpha(self):
        """GetAlpha(self) -> double"""
        return _itkElasticBodyReciprocalSplineKernelTransformPython.itkElasticBodyReciprocalSplineKernelTransformD3_GetAlpha(self)

    __swig_destroy__ = _itkElasticBodyReciprocalSplineKernelTransformPython.delete_itkElasticBodyReciprocalSplineKernelTransformD3
    def cast(*args):
        """cast(itkLightObject obj) -> itkElasticBodyReciprocalSplineKernelTransformD3"""
        return _itkElasticBodyReciprocalSplineKernelTransformPython.itkElasticBodyReciprocalSplineKernelTransformD3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkElasticBodyReciprocalSplineKernelTransformD3"""
        return _itkElasticBodyReciprocalSplineKernelTransformPython.itkElasticBodyReciprocalSplineKernelTransformD3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkElasticBodyReciprocalSplineKernelTransformD3
        
        Create a new object of the class itkElasticBodyReciprocalSplineKernelTransformD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkElasticBodyReciprocalSplineKernelTransformD3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkElasticBodyReciprocalSplineKernelTransformD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkElasticBodyReciprocalSplineKernelTransformD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkElasticBodyReciprocalSplineKernelTransformD3.SetAlpha = new_instancemethod(_itkElasticBodyReciprocalSplineKernelTransformPython.itkElasticBodyReciprocalSplineKernelTransformD3_SetAlpha,None,itkElasticBodyReciprocalSplineKernelTransformD3)
itkElasticBodyReciprocalSplineKernelTransformD3.GetAlpha = new_instancemethod(_itkElasticBodyReciprocalSplineKernelTransformPython.itkElasticBodyReciprocalSplineKernelTransformD3_GetAlpha,None,itkElasticBodyReciprocalSplineKernelTransformD3)
itkElasticBodyReciprocalSplineKernelTransformD3.GetPointer = new_instancemethod(_itkElasticBodyReciprocalSplineKernelTransformPython.itkElasticBodyReciprocalSplineKernelTransformD3_GetPointer,None,itkElasticBodyReciprocalSplineKernelTransformD3)
itkElasticBodyReciprocalSplineKernelTransformD3_swigregister = _itkElasticBodyReciprocalSplineKernelTransformPython.itkElasticBodyReciprocalSplineKernelTransformD3_swigregister
itkElasticBodyReciprocalSplineKernelTransformD3_swigregister(itkElasticBodyReciprocalSplineKernelTransformD3)

def itkElasticBodyReciprocalSplineKernelTransformD3___New_orig__():
  """itkElasticBodyReciprocalSplineKernelTransformD3___New_orig__()"""
  return _itkElasticBodyReciprocalSplineKernelTransformPython.itkElasticBodyReciprocalSplineKernelTransformD3___New_orig__()

def itkElasticBodyReciprocalSplineKernelTransformD3_cast(*args):
  """itkElasticBodyReciprocalSplineKernelTransformD3_cast(itkLightObject obj) -> itkElasticBodyReciprocalSplineKernelTransformD3"""
  return _itkElasticBodyReciprocalSplineKernelTransformPython.itkElasticBodyReciprocalSplineKernelTransformD3_cast(*args)



