# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkVTKImageImportPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkVTKImageImportPython', [dirname(__file__)])
        except ImportError:
            import _itkVTKImageImportPython
            return _itkVTKImageImportPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkVTKImageImportPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkVTKImageImportPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkVTKImageImportPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkImageSourcePython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
def itkVTKImageImportID3_New():
  return itkVTKImageImportID3.New()

def itkVTKImageImportID2_New():
  return itkVTKImageImportID2.New()

def itkVTKImageImportIF3_New():
  return itkVTKImageImportIF3.New()

def itkVTKImageImportIF2_New():
  return itkVTKImageImportIF2.New()

def itkVTKImageImportIUS3_New():
  return itkVTKImageImportIUS3.New()

def itkVTKImageImportIUS2_New():
  return itkVTKImageImportIUS2.New()

def itkVTKImageImportIUL3_New():
  return itkVTKImageImportIUL3.New()

def itkVTKImageImportIUL2_New():
  return itkVTKImageImportIUL2.New()

def itkVTKImageImportIUC3_New():
  return itkVTKImageImportIUC3.New()

def itkVTKImageImportIUC2_New():
  return itkVTKImageImportIUC2.New()

class itkVTKImageImportID2(itkImageSourcePython.itkImageSourceID2):
    """Proxy of C++ itkVTKImageImportID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputImageDimension = _itkVTKImageImportPython.itkVTKImageImportID2_OutputImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkVTKImageImportPython.itkVTKImageImportID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetCallbackUserData(self, *args):
        """SetCallbackUserData(self, void _arg)"""
        return _itkVTKImageImportPython.itkVTKImageImportID2_SetCallbackUserData(self, *args)

    def GetCallbackUserData(self):
        """GetCallbackUserData(self) -> void"""
        return _itkVTKImageImportPython.itkVTKImageImportID2_GetCallbackUserData(self)

    __swig_destroy__ = _itkVTKImageImportPython.delete_itkVTKImageImportID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageImportID2"""
        return _itkVTKImageImportPython.itkVTKImageImportID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageImportID2"""
        return _itkVTKImageImportPython.itkVTKImageImportID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageImportID2
        
        Create a new object of the class itkVTKImageImportID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageImportID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageImportID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageImportID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageImportID2.SetCallbackUserData = new_instancemethod(_itkVTKImageImportPython.itkVTKImageImportID2_SetCallbackUserData,None,itkVTKImageImportID2)
itkVTKImageImportID2.GetCallbackUserData = new_instancemethod(_itkVTKImageImportPython.itkVTKImageImportID2_GetCallbackUserData,None,itkVTKImageImportID2)
itkVTKImageImportID2.GetPointer = new_instancemethod(_itkVTKImageImportPython.itkVTKImageImportID2_GetPointer,None,itkVTKImageImportID2)
itkVTKImageImportID2_swigregister = _itkVTKImageImportPython.itkVTKImageImportID2_swigregister
itkVTKImageImportID2_swigregister(itkVTKImageImportID2)

def itkVTKImageImportID2___New_orig__():
  """itkVTKImageImportID2___New_orig__()"""
  return _itkVTKImageImportPython.itkVTKImageImportID2___New_orig__()

def itkVTKImageImportID2_cast(*args):
  """itkVTKImageImportID2_cast(itkLightObject obj) -> itkVTKImageImportID2"""
  return _itkVTKImageImportPython.itkVTKImageImportID2_cast(*args)

class itkVTKImageImportID3(itkImageSourcePython.itkImageSourceID3):
    """Proxy of C++ itkVTKImageImportID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputImageDimension = _itkVTKImageImportPython.itkVTKImageImportID3_OutputImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkVTKImageImportPython.itkVTKImageImportID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetCallbackUserData(self, *args):
        """SetCallbackUserData(self, void _arg)"""
        return _itkVTKImageImportPython.itkVTKImageImportID3_SetCallbackUserData(self, *args)

    def GetCallbackUserData(self):
        """GetCallbackUserData(self) -> void"""
        return _itkVTKImageImportPython.itkVTKImageImportID3_GetCallbackUserData(self)

    __swig_destroy__ = _itkVTKImageImportPython.delete_itkVTKImageImportID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageImportID3"""
        return _itkVTKImageImportPython.itkVTKImageImportID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageImportID3"""
        return _itkVTKImageImportPython.itkVTKImageImportID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageImportID3
        
        Create a new object of the class itkVTKImageImportID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageImportID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageImportID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageImportID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageImportID3.SetCallbackUserData = new_instancemethod(_itkVTKImageImportPython.itkVTKImageImportID3_SetCallbackUserData,None,itkVTKImageImportID3)
itkVTKImageImportID3.GetCallbackUserData = new_instancemethod(_itkVTKImageImportPython.itkVTKImageImportID3_GetCallbackUserData,None,itkVTKImageImportID3)
itkVTKImageImportID3.GetPointer = new_instancemethod(_itkVTKImageImportPython.itkVTKImageImportID3_GetPointer,None,itkVTKImageImportID3)
itkVTKImageImportID3_swigregister = _itkVTKImageImportPython.itkVTKImageImportID3_swigregister
itkVTKImageImportID3_swigregister(itkVTKImageImportID3)

def itkVTKImageImportID3___New_orig__():
  """itkVTKImageImportID3___New_orig__()"""
  return _itkVTKImageImportPython.itkVTKImageImportID3___New_orig__()

def itkVTKImageImportID3_cast(*args):
  """itkVTKImageImportID3_cast(itkLightObject obj) -> itkVTKImageImportID3"""
  return _itkVTKImageImportPython.itkVTKImageImportID3_cast(*args)

class itkVTKImageImportIF2(itkImageSourcePython.itkImageSourceIF2):
    """Proxy of C++ itkVTKImageImportIF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputImageDimension = _itkVTKImageImportPython.itkVTKImageImportIF2_OutputImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkVTKImageImportPython.itkVTKImageImportIF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetCallbackUserData(self, *args):
        """SetCallbackUserData(self, void _arg)"""
        return _itkVTKImageImportPython.itkVTKImageImportIF2_SetCallbackUserData(self, *args)

    def GetCallbackUserData(self):
        """GetCallbackUserData(self) -> void"""
        return _itkVTKImageImportPython.itkVTKImageImportIF2_GetCallbackUserData(self)

    __swig_destroy__ = _itkVTKImageImportPython.delete_itkVTKImageImportIF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageImportIF2"""
        return _itkVTKImageImportPython.itkVTKImageImportIF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageImportIF2"""
        return _itkVTKImageImportPython.itkVTKImageImportIF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageImportIF2
        
        Create a new object of the class itkVTKImageImportIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageImportIF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageImportIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageImportIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageImportIF2.SetCallbackUserData = new_instancemethod(_itkVTKImageImportPython.itkVTKImageImportIF2_SetCallbackUserData,None,itkVTKImageImportIF2)
itkVTKImageImportIF2.GetCallbackUserData = new_instancemethod(_itkVTKImageImportPython.itkVTKImageImportIF2_GetCallbackUserData,None,itkVTKImageImportIF2)
itkVTKImageImportIF2.GetPointer = new_instancemethod(_itkVTKImageImportPython.itkVTKImageImportIF2_GetPointer,None,itkVTKImageImportIF2)
itkVTKImageImportIF2_swigregister = _itkVTKImageImportPython.itkVTKImageImportIF2_swigregister
itkVTKImageImportIF2_swigregister(itkVTKImageImportIF2)

def itkVTKImageImportIF2___New_orig__():
  """itkVTKImageImportIF2___New_orig__()"""
  return _itkVTKImageImportPython.itkVTKImageImportIF2___New_orig__()

def itkVTKImageImportIF2_cast(*args):
  """itkVTKImageImportIF2_cast(itkLightObject obj) -> itkVTKImageImportIF2"""
  return _itkVTKImageImportPython.itkVTKImageImportIF2_cast(*args)

class itkVTKImageImportIF3(itkImageSourcePython.itkImageSourceIF3):
    """Proxy of C++ itkVTKImageImportIF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputImageDimension = _itkVTKImageImportPython.itkVTKImageImportIF3_OutputImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkVTKImageImportPython.itkVTKImageImportIF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetCallbackUserData(self, *args):
        """SetCallbackUserData(self, void _arg)"""
        return _itkVTKImageImportPython.itkVTKImageImportIF3_SetCallbackUserData(self, *args)

    def GetCallbackUserData(self):
        """GetCallbackUserData(self) -> void"""
        return _itkVTKImageImportPython.itkVTKImageImportIF3_GetCallbackUserData(self)

    __swig_destroy__ = _itkVTKImageImportPython.delete_itkVTKImageImportIF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageImportIF3"""
        return _itkVTKImageImportPython.itkVTKImageImportIF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageImportIF3"""
        return _itkVTKImageImportPython.itkVTKImageImportIF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageImportIF3
        
        Create a new object of the class itkVTKImageImportIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageImportIF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageImportIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageImportIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageImportIF3.SetCallbackUserData = new_instancemethod(_itkVTKImageImportPython.itkVTKImageImportIF3_SetCallbackUserData,None,itkVTKImageImportIF3)
itkVTKImageImportIF3.GetCallbackUserData = new_instancemethod(_itkVTKImageImportPython.itkVTKImageImportIF3_GetCallbackUserData,None,itkVTKImageImportIF3)
itkVTKImageImportIF3.GetPointer = new_instancemethod(_itkVTKImageImportPython.itkVTKImageImportIF3_GetPointer,None,itkVTKImageImportIF3)
itkVTKImageImportIF3_swigregister = _itkVTKImageImportPython.itkVTKImageImportIF3_swigregister
itkVTKImageImportIF3_swigregister(itkVTKImageImportIF3)

def itkVTKImageImportIF3___New_orig__():
  """itkVTKImageImportIF3___New_orig__()"""
  return _itkVTKImageImportPython.itkVTKImageImportIF3___New_orig__()

def itkVTKImageImportIF3_cast(*args):
  """itkVTKImageImportIF3_cast(itkLightObject obj) -> itkVTKImageImportIF3"""
  return _itkVTKImageImportPython.itkVTKImageImportIF3_cast(*args)

class itkVTKImageImportIUC2(itkImageSourcePython.itkImageSourceIUC2):
    """Proxy of C++ itkVTKImageImportIUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputImageDimension = _itkVTKImageImportPython.itkVTKImageImportIUC2_OutputImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkVTKImageImportPython.itkVTKImageImportIUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetCallbackUserData(self, *args):
        """SetCallbackUserData(self, void _arg)"""
        return _itkVTKImageImportPython.itkVTKImageImportIUC2_SetCallbackUserData(self, *args)

    def GetCallbackUserData(self):
        """GetCallbackUserData(self) -> void"""
        return _itkVTKImageImportPython.itkVTKImageImportIUC2_GetCallbackUserData(self)

    __swig_destroy__ = _itkVTKImageImportPython.delete_itkVTKImageImportIUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageImportIUC2"""
        return _itkVTKImageImportPython.itkVTKImageImportIUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageImportIUC2"""
        return _itkVTKImageImportPython.itkVTKImageImportIUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageImportIUC2
        
        Create a new object of the class itkVTKImageImportIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageImportIUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageImportIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageImportIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageImportIUC2.SetCallbackUserData = new_instancemethod(_itkVTKImageImportPython.itkVTKImageImportIUC2_SetCallbackUserData,None,itkVTKImageImportIUC2)
itkVTKImageImportIUC2.GetCallbackUserData = new_instancemethod(_itkVTKImageImportPython.itkVTKImageImportIUC2_GetCallbackUserData,None,itkVTKImageImportIUC2)
itkVTKImageImportIUC2.GetPointer = new_instancemethod(_itkVTKImageImportPython.itkVTKImageImportIUC2_GetPointer,None,itkVTKImageImportIUC2)
itkVTKImageImportIUC2_swigregister = _itkVTKImageImportPython.itkVTKImageImportIUC2_swigregister
itkVTKImageImportIUC2_swigregister(itkVTKImageImportIUC2)

def itkVTKImageImportIUC2___New_orig__():
  """itkVTKImageImportIUC2___New_orig__()"""
  return _itkVTKImageImportPython.itkVTKImageImportIUC2___New_orig__()

def itkVTKImageImportIUC2_cast(*args):
  """itkVTKImageImportIUC2_cast(itkLightObject obj) -> itkVTKImageImportIUC2"""
  return _itkVTKImageImportPython.itkVTKImageImportIUC2_cast(*args)

class itkVTKImageImportIUC3(itkImageSourcePython.itkImageSourceIUC3):
    """Proxy of C++ itkVTKImageImportIUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputImageDimension = _itkVTKImageImportPython.itkVTKImageImportIUC3_OutputImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkVTKImageImportPython.itkVTKImageImportIUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetCallbackUserData(self, *args):
        """SetCallbackUserData(self, void _arg)"""
        return _itkVTKImageImportPython.itkVTKImageImportIUC3_SetCallbackUserData(self, *args)

    def GetCallbackUserData(self):
        """GetCallbackUserData(self) -> void"""
        return _itkVTKImageImportPython.itkVTKImageImportIUC3_GetCallbackUserData(self)

    __swig_destroy__ = _itkVTKImageImportPython.delete_itkVTKImageImportIUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageImportIUC3"""
        return _itkVTKImageImportPython.itkVTKImageImportIUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageImportIUC3"""
        return _itkVTKImageImportPython.itkVTKImageImportIUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageImportIUC3
        
        Create a new object of the class itkVTKImageImportIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageImportIUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageImportIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageImportIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageImportIUC3.SetCallbackUserData = new_instancemethod(_itkVTKImageImportPython.itkVTKImageImportIUC3_SetCallbackUserData,None,itkVTKImageImportIUC3)
itkVTKImageImportIUC3.GetCallbackUserData = new_instancemethod(_itkVTKImageImportPython.itkVTKImageImportIUC3_GetCallbackUserData,None,itkVTKImageImportIUC3)
itkVTKImageImportIUC3.GetPointer = new_instancemethod(_itkVTKImageImportPython.itkVTKImageImportIUC3_GetPointer,None,itkVTKImageImportIUC3)
itkVTKImageImportIUC3_swigregister = _itkVTKImageImportPython.itkVTKImageImportIUC3_swigregister
itkVTKImageImportIUC3_swigregister(itkVTKImageImportIUC3)

def itkVTKImageImportIUC3___New_orig__():
  """itkVTKImageImportIUC3___New_orig__()"""
  return _itkVTKImageImportPython.itkVTKImageImportIUC3___New_orig__()

def itkVTKImageImportIUC3_cast(*args):
  """itkVTKImageImportIUC3_cast(itkLightObject obj) -> itkVTKImageImportIUC3"""
  return _itkVTKImageImportPython.itkVTKImageImportIUC3_cast(*args)

class itkVTKImageImportIUL2(itkImageSourcePython.itkImageSourceIUL2):
    """Proxy of C++ itkVTKImageImportIUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputImageDimension = _itkVTKImageImportPython.itkVTKImageImportIUL2_OutputImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkVTKImageImportPython.itkVTKImageImportIUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetCallbackUserData(self, *args):
        """SetCallbackUserData(self, void _arg)"""
        return _itkVTKImageImportPython.itkVTKImageImportIUL2_SetCallbackUserData(self, *args)

    def GetCallbackUserData(self):
        """GetCallbackUserData(self) -> void"""
        return _itkVTKImageImportPython.itkVTKImageImportIUL2_GetCallbackUserData(self)

    __swig_destroy__ = _itkVTKImageImportPython.delete_itkVTKImageImportIUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageImportIUL2"""
        return _itkVTKImageImportPython.itkVTKImageImportIUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageImportIUL2"""
        return _itkVTKImageImportPython.itkVTKImageImportIUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageImportIUL2
        
        Create a new object of the class itkVTKImageImportIUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageImportIUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageImportIUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageImportIUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageImportIUL2.SetCallbackUserData = new_instancemethod(_itkVTKImageImportPython.itkVTKImageImportIUL2_SetCallbackUserData,None,itkVTKImageImportIUL2)
itkVTKImageImportIUL2.GetCallbackUserData = new_instancemethod(_itkVTKImageImportPython.itkVTKImageImportIUL2_GetCallbackUserData,None,itkVTKImageImportIUL2)
itkVTKImageImportIUL2.GetPointer = new_instancemethod(_itkVTKImageImportPython.itkVTKImageImportIUL2_GetPointer,None,itkVTKImageImportIUL2)
itkVTKImageImportIUL2_swigregister = _itkVTKImageImportPython.itkVTKImageImportIUL2_swigregister
itkVTKImageImportIUL2_swigregister(itkVTKImageImportIUL2)

def itkVTKImageImportIUL2___New_orig__():
  """itkVTKImageImportIUL2___New_orig__()"""
  return _itkVTKImageImportPython.itkVTKImageImportIUL2___New_orig__()

def itkVTKImageImportIUL2_cast(*args):
  """itkVTKImageImportIUL2_cast(itkLightObject obj) -> itkVTKImageImportIUL2"""
  return _itkVTKImageImportPython.itkVTKImageImportIUL2_cast(*args)

class itkVTKImageImportIUL3(itkImageSourcePython.itkImageSourceIUL3):
    """Proxy of C++ itkVTKImageImportIUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputImageDimension = _itkVTKImageImportPython.itkVTKImageImportIUL3_OutputImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkVTKImageImportPython.itkVTKImageImportIUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetCallbackUserData(self, *args):
        """SetCallbackUserData(self, void _arg)"""
        return _itkVTKImageImportPython.itkVTKImageImportIUL3_SetCallbackUserData(self, *args)

    def GetCallbackUserData(self):
        """GetCallbackUserData(self) -> void"""
        return _itkVTKImageImportPython.itkVTKImageImportIUL3_GetCallbackUserData(self)

    __swig_destroy__ = _itkVTKImageImportPython.delete_itkVTKImageImportIUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageImportIUL3"""
        return _itkVTKImageImportPython.itkVTKImageImportIUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageImportIUL3"""
        return _itkVTKImageImportPython.itkVTKImageImportIUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageImportIUL3
        
        Create a new object of the class itkVTKImageImportIUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageImportIUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageImportIUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageImportIUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageImportIUL3.SetCallbackUserData = new_instancemethod(_itkVTKImageImportPython.itkVTKImageImportIUL3_SetCallbackUserData,None,itkVTKImageImportIUL3)
itkVTKImageImportIUL3.GetCallbackUserData = new_instancemethod(_itkVTKImageImportPython.itkVTKImageImportIUL3_GetCallbackUserData,None,itkVTKImageImportIUL3)
itkVTKImageImportIUL3.GetPointer = new_instancemethod(_itkVTKImageImportPython.itkVTKImageImportIUL3_GetPointer,None,itkVTKImageImportIUL3)
itkVTKImageImportIUL3_swigregister = _itkVTKImageImportPython.itkVTKImageImportIUL3_swigregister
itkVTKImageImportIUL3_swigregister(itkVTKImageImportIUL3)

def itkVTKImageImportIUL3___New_orig__():
  """itkVTKImageImportIUL3___New_orig__()"""
  return _itkVTKImageImportPython.itkVTKImageImportIUL3___New_orig__()

def itkVTKImageImportIUL3_cast(*args):
  """itkVTKImageImportIUL3_cast(itkLightObject obj) -> itkVTKImageImportIUL3"""
  return _itkVTKImageImportPython.itkVTKImageImportIUL3_cast(*args)

class itkVTKImageImportIUS2(itkImageSourcePython.itkImageSourceIUS2):
    """Proxy of C++ itkVTKImageImportIUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputImageDimension = _itkVTKImageImportPython.itkVTKImageImportIUS2_OutputImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkVTKImageImportPython.itkVTKImageImportIUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetCallbackUserData(self, *args):
        """SetCallbackUserData(self, void _arg)"""
        return _itkVTKImageImportPython.itkVTKImageImportIUS2_SetCallbackUserData(self, *args)

    def GetCallbackUserData(self):
        """GetCallbackUserData(self) -> void"""
        return _itkVTKImageImportPython.itkVTKImageImportIUS2_GetCallbackUserData(self)

    __swig_destroy__ = _itkVTKImageImportPython.delete_itkVTKImageImportIUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageImportIUS2"""
        return _itkVTKImageImportPython.itkVTKImageImportIUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageImportIUS2"""
        return _itkVTKImageImportPython.itkVTKImageImportIUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageImportIUS2
        
        Create a new object of the class itkVTKImageImportIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageImportIUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageImportIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageImportIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageImportIUS2.SetCallbackUserData = new_instancemethod(_itkVTKImageImportPython.itkVTKImageImportIUS2_SetCallbackUserData,None,itkVTKImageImportIUS2)
itkVTKImageImportIUS2.GetCallbackUserData = new_instancemethod(_itkVTKImageImportPython.itkVTKImageImportIUS2_GetCallbackUserData,None,itkVTKImageImportIUS2)
itkVTKImageImportIUS2.GetPointer = new_instancemethod(_itkVTKImageImportPython.itkVTKImageImportIUS2_GetPointer,None,itkVTKImageImportIUS2)
itkVTKImageImportIUS2_swigregister = _itkVTKImageImportPython.itkVTKImageImportIUS2_swigregister
itkVTKImageImportIUS2_swigregister(itkVTKImageImportIUS2)

def itkVTKImageImportIUS2___New_orig__():
  """itkVTKImageImportIUS2___New_orig__()"""
  return _itkVTKImageImportPython.itkVTKImageImportIUS2___New_orig__()

def itkVTKImageImportIUS2_cast(*args):
  """itkVTKImageImportIUS2_cast(itkLightObject obj) -> itkVTKImageImportIUS2"""
  return _itkVTKImageImportPython.itkVTKImageImportIUS2_cast(*args)

class itkVTKImageImportIUS3(itkImageSourcePython.itkImageSourceIUS3):
    """Proxy of C++ itkVTKImageImportIUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputImageDimension = _itkVTKImageImportPython.itkVTKImageImportIUS3_OutputImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkVTKImageImportPython.itkVTKImageImportIUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetCallbackUserData(self, *args):
        """SetCallbackUserData(self, void _arg)"""
        return _itkVTKImageImportPython.itkVTKImageImportIUS3_SetCallbackUserData(self, *args)

    def GetCallbackUserData(self):
        """GetCallbackUserData(self) -> void"""
        return _itkVTKImageImportPython.itkVTKImageImportIUS3_GetCallbackUserData(self)

    __swig_destroy__ = _itkVTKImageImportPython.delete_itkVTKImageImportIUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageImportIUS3"""
        return _itkVTKImageImportPython.itkVTKImageImportIUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageImportIUS3"""
        return _itkVTKImageImportPython.itkVTKImageImportIUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageImportIUS3
        
        Create a new object of the class itkVTKImageImportIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageImportIUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageImportIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageImportIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageImportIUS3.SetCallbackUserData = new_instancemethod(_itkVTKImageImportPython.itkVTKImageImportIUS3_SetCallbackUserData,None,itkVTKImageImportIUS3)
itkVTKImageImportIUS3.GetCallbackUserData = new_instancemethod(_itkVTKImageImportPython.itkVTKImageImportIUS3_GetCallbackUserData,None,itkVTKImageImportIUS3)
itkVTKImageImportIUS3.GetPointer = new_instancemethod(_itkVTKImageImportPython.itkVTKImageImportIUS3_GetPointer,None,itkVTKImageImportIUS3)
itkVTKImageImportIUS3_swigregister = _itkVTKImageImportPython.itkVTKImageImportIUS3_swigregister
itkVTKImageImportIUS3_swigregister(itkVTKImageImportIUS3)

def itkVTKImageImportIUS3___New_orig__():
  """itkVTKImageImportIUS3___New_orig__()"""
  return _itkVTKImageImportPython.itkVTKImageImportIUS3___New_orig__()

def itkVTKImageImportIUS3_cast(*args):
  """itkVTKImageImportIUS3_cast(itkLightObject obj) -> itkVTKImageImportIUS3"""
  return _itkVTKImageImportPython.itkVTKImageImportIUS3_cast(*args)



