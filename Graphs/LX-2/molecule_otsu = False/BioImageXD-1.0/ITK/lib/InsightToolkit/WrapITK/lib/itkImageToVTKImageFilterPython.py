# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkImageToVTKImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkImageToVTKImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkImageToVTKImageFilterPython
            return _itkImageToVTKImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkImageToVTKImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkImageToVTKImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkImageToVTKImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkVTKImageExportPython
def itkImageToVTKImageFilterID3_New():
  return itkImageToVTKImageFilterID3.New()

def itkImageToVTKImageFilterID2_New():
  return itkImageToVTKImageFilterID2.New()

def itkImageToVTKImageFilterIF3_New():
  return itkImageToVTKImageFilterIF3.New()

def itkImageToVTKImageFilterIF2_New():
  return itkImageToVTKImageFilterIF2.New()

def itkImageToVTKImageFilterIUS3_New():
  return itkImageToVTKImageFilterIUS3.New()

def itkImageToVTKImageFilterIUS2_New():
  return itkImageToVTKImageFilterIUS2.New()

def itkImageToVTKImageFilterIUL3_New():
  return itkImageToVTKImageFilterIUL3.New()

def itkImageToVTKImageFilterIUL2_New():
  return itkImageToVTKImageFilterIUL2.New()

def itkImageToVTKImageFilterIUC3_New():
  return itkImageToVTKImageFilterIUC3.New()

def itkImageToVTKImageFilterIUC2_New():
  return itkImageToVTKImageFilterIUC2.New()

class itkImageToVTKImageFilterID2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetOutput(self):
        """GetOutput(self) -> vtkImageData"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterID2_GetOutput(self)

    def SetInput(self, *args):
        """SetInput(self, itkImageD2 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterID2_SetInput(self, *args)

    def GetImporter(self):
        """GetImporter(self) -> vtkImageImport"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterID2_GetImporter(self)

    def GetExporter(self):
        """GetExporter(self) -> itkVTKImageExportID2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterID2_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterID2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToVTKImageFilterID2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterID2
        
        Create a new object of the class itkImageToVTKImageFilterID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToVTKImageFilterID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToVTKImageFilterID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterID2.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterID2_GetOutput,None,itkImageToVTKImageFilterID2)
itkImageToVTKImageFilterID2.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterID2_SetInput,None,itkImageToVTKImageFilterID2)
itkImageToVTKImageFilterID2.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterID2_GetImporter,None,itkImageToVTKImageFilterID2)
itkImageToVTKImageFilterID2.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterID2_GetExporter,None,itkImageToVTKImageFilterID2)
itkImageToVTKImageFilterID2.GetPointer = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterID2_GetPointer,None,itkImageToVTKImageFilterID2)
itkImageToVTKImageFilterID2_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterID2_swigregister
itkImageToVTKImageFilterID2_swigregister(itkImageToVTKImageFilterID2)

def itkImageToVTKImageFilterID2___New_orig__():
  """itkImageToVTKImageFilterID2___New_orig__()"""
  return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterID2___New_orig__()

def itkImageToVTKImageFilterID2_cast(*args):
  """itkImageToVTKImageFilterID2_cast(itkLightObject obj) -> itkImageToVTKImageFilterID2"""
  return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterID2_cast(*args)

class itkImageToVTKImageFilterID3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetOutput(self):
        """GetOutput(self) -> vtkImageData"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterID3_GetOutput(self)

    def SetInput(self, *args):
        """SetInput(self, itkImageD3 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterID3_SetInput(self, *args)

    def GetImporter(self):
        """GetImporter(self) -> vtkImageImport"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterID3_GetImporter(self)

    def GetExporter(self):
        """GetExporter(self) -> itkVTKImageExportID3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterID3_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterID3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToVTKImageFilterID3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterID3
        
        Create a new object of the class itkImageToVTKImageFilterID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToVTKImageFilterID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToVTKImageFilterID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterID3.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterID3_GetOutput,None,itkImageToVTKImageFilterID3)
itkImageToVTKImageFilterID3.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterID3_SetInput,None,itkImageToVTKImageFilterID3)
itkImageToVTKImageFilterID3.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterID3_GetImporter,None,itkImageToVTKImageFilterID3)
itkImageToVTKImageFilterID3.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterID3_GetExporter,None,itkImageToVTKImageFilterID3)
itkImageToVTKImageFilterID3.GetPointer = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterID3_GetPointer,None,itkImageToVTKImageFilterID3)
itkImageToVTKImageFilterID3_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterID3_swigregister
itkImageToVTKImageFilterID3_swigregister(itkImageToVTKImageFilterID3)

def itkImageToVTKImageFilterID3___New_orig__():
  """itkImageToVTKImageFilterID3___New_orig__()"""
  return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterID3___New_orig__()

def itkImageToVTKImageFilterID3_cast(*args):
  """itkImageToVTKImageFilterID3_cast(itkLightObject obj) -> itkImageToVTKImageFilterID3"""
  return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterID3_cast(*args)

class itkImageToVTKImageFilterIF2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterIF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetOutput(self):
        """GetOutput(self) -> vtkImageData"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2_GetOutput(self)

    def SetInput(self, *args):
        """SetInput(self, itkImageF2 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2_SetInput(self, *args)

    def GetImporter(self):
        """GetImporter(self) -> vtkImageImport"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2_GetImporter(self)

    def GetExporter(self):
        """GetExporter(self) -> itkVTKImageExportIF2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterIF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterIF2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToVTKImageFilterIF2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterIF2
        
        Create a new object of the class itkImageToVTKImageFilterIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToVTKImageFilterIF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToVTKImageFilterIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterIF2.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2_GetOutput,None,itkImageToVTKImageFilterIF2)
itkImageToVTKImageFilterIF2.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2_SetInput,None,itkImageToVTKImageFilterIF2)
itkImageToVTKImageFilterIF2.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2_GetImporter,None,itkImageToVTKImageFilterIF2)
itkImageToVTKImageFilterIF2.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2_GetExporter,None,itkImageToVTKImageFilterIF2)
itkImageToVTKImageFilterIF2.GetPointer = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2_GetPointer,None,itkImageToVTKImageFilterIF2)
itkImageToVTKImageFilterIF2_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2_swigregister
itkImageToVTKImageFilterIF2_swigregister(itkImageToVTKImageFilterIF2)

def itkImageToVTKImageFilterIF2___New_orig__():
  """itkImageToVTKImageFilterIF2___New_orig__()"""
  return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2___New_orig__()

def itkImageToVTKImageFilterIF2_cast(*args):
  """itkImageToVTKImageFilterIF2_cast(itkLightObject obj) -> itkImageToVTKImageFilterIF2"""
  return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF2_cast(*args)

class itkImageToVTKImageFilterIF3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterIF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetOutput(self):
        """GetOutput(self) -> vtkImageData"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3_GetOutput(self)

    def SetInput(self, *args):
        """SetInput(self, itkImageF3 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3_SetInput(self, *args)

    def GetImporter(self):
        """GetImporter(self) -> vtkImageImport"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3_GetImporter(self)

    def GetExporter(self):
        """GetExporter(self) -> itkVTKImageExportIF3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterIF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterIF3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToVTKImageFilterIF3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterIF3
        
        Create a new object of the class itkImageToVTKImageFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToVTKImageFilterIF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToVTKImageFilterIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterIF3.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3_GetOutput,None,itkImageToVTKImageFilterIF3)
itkImageToVTKImageFilterIF3.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3_SetInput,None,itkImageToVTKImageFilterIF3)
itkImageToVTKImageFilterIF3.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3_GetImporter,None,itkImageToVTKImageFilterIF3)
itkImageToVTKImageFilterIF3.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3_GetExporter,None,itkImageToVTKImageFilterIF3)
itkImageToVTKImageFilterIF3.GetPointer = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3_GetPointer,None,itkImageToVTKImageFilterIF3)
itkImageToVTKImageFilterIF3_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3_swigregister
itkImageToVTKImageFilterIF3_swigregister(itkImageToVTKImageFilterIF3)

def itkImageToVTKImageFilterIF3___New_orig__():
  """itkImageToVTKImageFilterIF3___New_orig__()"""
  return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3___New_orig__()

def itkImageToVTKImageFilterIF3_cast(*args):
  """itkImageToVTKImageFilterIF3_cast(itkLightObject obj) -> itkImageToVTKImageFilterIF3"""
  return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIF3_cast(*args)

class itkImageToVTKImageFilterIUC2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterIUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetOutput(self):
        """GetOutput(self) -> vtkImageData"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2_GetOutput(self)

    def SetInput(self, *args):
        """SetInput(self, itkImageUC2 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2_SetInput(self, *args)

    def GetImporter(self):
        """GetImporter(self) -> vtkImageImport"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2_GetImporter(self)

    def GetExporter(self):
        """GetExporter(self) -> itkVTKImageExportIUC2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterIUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterIUC2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToVTKImageFilterIUC2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterIUC2
        
        Create a new object of the class itkImageToVTKImageFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToVTKImageFilterIUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToVTKImageFilterIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterIUC2.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2_GetOutput,None,itkImageToVTKImageFilterIUC2)
itkImageToVTKImageFilterIUC2.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2_SetInput,None,itkImageToVTKImageFilterIUC2)
itkImageToVTKImageFilterIUC2.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2_GetImporter,None,itkImageToVTKImageFilterIUC2)
itkImageToVTKImageFilterIUC2.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2_GetExporter,None,itkImageToVTKImageFilterIUC2)
itkImageToVTKImageFilterIUC2.GetPointer = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2_GetPointer,None,itkImageToVTKImageFilterIUC2)
itkImageToVTKImageFilterIUC2_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2_swigregister
itkImageToVTKImageFilterIUC2_swigregister(itkImageToVTKImageFilterIUC2)

def itkImageToVTKImageFilterIUC2___New_orig__():
  """itkImageToVTKImageFilterIUC2___New_orig__()"""
  return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2___New_orig__()

def itkImageToVTKImageFilterIUC2_cast(*args):
  """itkImageToVTKImageFilterIUC2_cast(itkLightObject obj) -> itkImageToVTKImageFilterIUC2"""
  return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC2_cast(*args)

class itkImageToVTKImageFilterIUC3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterIUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetOutput(self):
        """GetOutput(self) -> vtkImageData"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3_GetOutput(self)

    def SetInput(self, *args):
        """SetInput(self, itkImageUC3 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3_SetInput(self, *args)

    def GetImporter(self):
        """GetImporter(self) -> vtkImageImport"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3_GetImporter(self)

    def GetExporter(self):
        """GetExporter(self) -> itkVTKImageExportIUC3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterIUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterIUC3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToVTKImageFilterIUC3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterIUC3
        
        Create a new object of the class itkImageToVTKImageFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToVTKImageFilterIUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToVTKImageFilterIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterIUC3.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3_GetOutput,None,itkImageToVTKImageFilterIUC3)
itkImageToVTKImageFilterIUC3.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3_SetInput,None,itkImageToVTKImageFilterIUC3)
itkImageToVTKImageFilterIUC3.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3_GetImporter,None,itkImageToVTKImageFilterIUC3)
itkImageToVTKImageFilterIUC3.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3_GetExporter,None,itkImageToVTKImageFilterIUC3)
itkImageToVTKImageFilterIUC3.GetPointer = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3_GetPointer,None,itkImageToVTKImageFilterIUC3)
itkImageToVTKImageFilterIUC3_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3_swigregister
itkImageToVTKImageFilterIUC3_swigregister(itkImageToVTKImageFilterIUC3)

def itkImageToVTKImageFilterIUC3___New_orig__():
  """itkImageToVTKImageFilterIUC3___New_orig__()"""
  return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3___New_orig__()

def itkImageToVTKImageFilterIUC3_cast(*args):
  """itkImageToVTKImageFilterIUC3_cast(itkLightObject obj) -> itkImageToVTKImageFilterIUC3"""
  return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUC3_cast(*args)

class itkImageToVTKImageFilterIUL2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterIUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetOutput(self):
        """GetOutput(self) -> vtkImageData"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2_GetOutput(self)

    def SetInput(self, *args):
        """SetInput(self, itkImageUL2 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2_SetInput(self, *args)

    def GetImporter(self):
        """GetImporter(self) -> vtkImageImport"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2_GetImporter(self)

    def GetExporter(self):
        """GetExporter(self) -> itkVTKImageExportIUL2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterIUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterIUL2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToVTKImageFilterIUL2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterIUL2
        
        Create a new object of the class itkImageToVTKImageFilterIUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToVTKImageFilterIUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToVTKImageFilterIUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterIUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterIUL2.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2_GetOutput,None,itkImageToVTKImageFilterIUL2)
itkImageToVTKImageFilterIUL2.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2_SetInput,None,itkImageToVTKImageFilterIUL2)
itkImageToVTKImageFilterIUL2.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2_GetImporter,None,itkImageToVTKImageFilterIUL2)
itkImageToVTKImageFilterIUL2.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2_GetExporter,None,itkImageToVTKImageFilterIUL2)
itkImageToVTKImageFilterIUL2.GetPointer = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2_GetPointer,None,itkImageToVTKImageFilterIUL2)
itkImageToVTKImageFilterIUL2_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2_swigregister
itkImageToVTKImageFilterIUL2_swigregister(itkImageToVTKImageFilterIUL2)

def itkImageToVTKImageFilterIUL2___New_orig__():
  """itkImageToVTKImageFilterIUL2___New_orig__()"""
  return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2___New_orig__()

def itkImageToVTKImageFilterIUL2_cast(*args):
  """itkImageToVTKImageFilterIUL2_cast(itkLightObject obj) -> itkImageToVTKImageFilterIUL2"""
  return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL2_cast(*args)

class itkImageToVTKImageFilterIUL3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterIUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetOutput(self):
        """GetOutput(self) -> vtkImageData"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3_GetOutput(self)

    def SetInput(self, *args):
        """SetInput(self, itkImageUL3 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3_SetInput(self, *args)

    def GetImporter(self):
        """GetImporter(self) -> vtkImageImport"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3_GetImporter(self)

    def GetExporter(self):
        """GetExporter(self) -> itkVTKImageExportIUL3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterIUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterIUL3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToVTKImageFilterIUL3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterIUL3
        
        Create a new object of the class itkImageToVTKImageFilterIUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToVTKImageFilterIUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToVTKImageFilterIUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterIUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterIUL3.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3_GetOutput,None,itkImageToVTKImageFilterIUL3)
itkImageToVTKImageFilterIUL3.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3_SetInput,None,itkImageToVTKImageFilterIUL3)
itkImageToVTKImageFilterIUL3.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3_GetImporter,None,itkImageToVTKImageFilterIUL3)
itkImageToVTKImageFilterIUL3.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3_GetExporter,None,itkImageToVTKImageFilterIUL3)
itkImageToVTKImageFilterIUL3.GetPointer = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3_GetPointer,None,itkImageToVTKImageFilterIUL3)
itkImageToVTKImageFilterIUL3_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3_swigregister
itkImageToVTKImageFilterIUL3_swigregister(itkImageToVTKImageFilterIUL3)

def itkImageToVTKImageFilterIUL3___New_orig__():
  """itkImageToVTKImageFilterIUL3___New_orig__()"""
  return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3___New_orig__()

def itkImageToVTKImageFilterIUL3_cast(*args):
  """itkImageToVTKImageFilterIUL3_cast(itkLightObject obj) -> itkImageToVTKImageFilterIUL3"""
  return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUL3_cast(*args)

class itkImageToVTKImageFilterIUS2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterIUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetOutput(self):
        """GetOutput(self) -> vtkImageData"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2_GetOutput(self)

    def SetInput(self, *args):
        """SetInput(self, itkImageUS2 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2_SetInput(self, *args)

    def GetImporter(self):
        """GetImporter(self) -> vtkImageImport"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2_GetImporter(self)

    def GetExporter(self):
        """GetExporter(self) -> itkVTKImageExportIUS2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterIUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterIUS2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToVTKImageFilterIUS2"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterIUS2
        
        Create a new object of the class itkImageToVTKImageFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToVTKImageFilterIUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToVTKImageFilterIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterIUS2.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2_GetOutput,None,itkImageToVTKImageFilterIUS2)
itkImageToVTKImageFilterIUS2.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2_SetInput,None,itkImageToVTKImageFilterIUS2)
itkImageToVTKImageFilterIUS2.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2_GetImporter,None,itkImageToVTKImageFilterIUS2)
itkImageToVTKImageFilterIUS2.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2_GetExporter,None,itkImageToVTKImageFilterIUS2)
itkImageToVTKImageFilterIUS2.GetPointer = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2_GetPointer,None,itkImageToVTKImageFilterIUS2)
itkImageToVTKImageFilterIUS2_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2_swigregister
itkImageToVTKImageFilterIUS2_swigregister(itkImageToVTKImageFilterIUS2)

def itkImageToVTKImageFilterIUS2___New_orig__():
  """itkImageToVTKImageFilterIUS2___New_orig__()"""
  return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2___New_orig__()

def itkImageToVTKImageFilterIUS2_cast(*args):
  """itkImageToVTKImageFilterIUS2_cast(itkLightObject obj) -> itkImageToVTKImageFilterIUS2"""
  return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS2_cast(*args)

class itkImageToVTKImageFilterIUS3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageToVTKImageFilterIUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetOutput(self):
        """GetOutput(self) -> vtkImageData"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3_GetOutput(self)

    def SetInput(self, *args):
        """SetInput(self, itkImageUS3 arg0)"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3_SetInput(self, *args)

    def GetImporter(self):
        """GetImporter(self) -> vtkImageImport"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3_GetImporter(self)

    def GetExporter(self):
        """GetExporter(self) -> itkVTKImageExportIUS3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3_GetExporter(self)

    __swig_destroy__ = _itkImageToVTKImageFilterPython.delete_itkImageToVTKImageFilterIUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToVTKImageFilterIUS3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToVTKImageFilterIUS3"""
        return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToVTKImageFilterIUS3
        
        Create a new object of the class itkImageToVTKImageFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToVTKImageFilterIUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToVTKImageFilterIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToVTKImageFilterIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToVTKImageFilterIUS3.GetOutput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3_GetOutput,None,itkImageToVTKImageFilterIUS3)
itkImageToVTKImageFilterIUS3.SetInput = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3_SetInput,None,itkImageToVTKImageFilterIUS3)
itkImageToVTKImageFilterIUS3.GetImporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3_GetImporter,None,itkImageToVTKImageFilterIUS3)
itkImageToVTKImageFilterIUS3.GetExporter = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3_GetExporter,None,itkImageToVTKImageFilterIUS3)
itkImageToVTKImageFilterIUS3.GetPointer = new_instancemethod(_itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3_GetPointer,None,itkImageToVTKImageFilterIUS3)
itkImageToVTKImageFilterIUS3_swigregister = _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3_swigregister
itkImageToVTKImageFilterIUS3_swigregister(itkImageToVTKImageFilterIUS3)

def itkImageToVTKImageFilterIUS3___New_orig__():
  """itkImageToVTKImageFilterIUS3___New_orig__()"""
  return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3___New_orig__()

def itkImageToVTKImageFilterIUS3_cast(*args):
  """itkImageToVTKImageFilterIUS3_cast(itkLightObject obj) -> itkImageToVTKImageFilterIUS3"""
  return _itkImageToVTKImageFilterPython.itkImageToVTKImageFilterIUS3_cast(*args)



