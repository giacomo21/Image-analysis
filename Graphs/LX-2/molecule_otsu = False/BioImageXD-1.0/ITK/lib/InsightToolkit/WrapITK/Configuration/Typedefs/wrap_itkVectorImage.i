// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkVectorImageChicken
#endif
#ifdef SWIGCSHARP
%module itkVectorImageCsharp
#endif
#ifdef SWIGGUILE
%module itkVectorImageGuile
#endif
#ifdef SWIGJAVA
%module itkVectorImageJava
#endif
#ifdef SWIGLUA
%module itkVectorImageLua
#endif
#ifdef SWIGMODULA3
%module itkVectorImageModula3
#endif
#ifdef SWIGMZSCHEME
%module itkVectorImageMzscheme
#endif
#ifdef SWIGOCAML
%module itkVectorImageOcaml
#endif
#ifdef SWIGPERL
%module itkVectorImagePerl
#endif
#ifdef SWIGPERL5
%module itkVectorImagePerl5
#endif
#ifdef SWIGPHP
%module itkVectorImagePhp
#endif
#ifdef SWIGPHP4
%module itkVectorImagePhp4
#endif
#ifdef SWIGPHP5
%module itkVectorImagePhp5
#endif
#ifdef SWIGPIKE
%module itkVectorImagePike
#endif
#ifdef SWIGPYTHON
%module itkVectorImagePython
#endif
#ifdef SWIGR
%module itkVectorImageR
#endif
#ifdef SWIGRUBY
%module itkVectorImageRuby
#endif
#ifdef SWIGSEXP
%module itkVectorImageSexp
#endif
#ifdef SWIGTCL
%module itkVectorImageTcl
#endif
#ifdef SWIGXML
%module itkVectorImageXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
%}


%{
%}




%import wrap_itkVariableLengthVector.i
%import wrap_ITKRegions.i
%import wrap_itkIndex.i
%import wrap_itkImage.i
%import wrap_ITKCommonBase.i
%import wrap_itkSize.i


%include itk.i
%include wrap_itkVectorImage_ext.i


 class itkVectorImageD2 : public itkImageBase2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkVectorImageD2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void Allocate();
     void SetRegions(itkImageRegion2 region);
     void SetRegions(itkSize2 size);
     virtual void Initialize();
     void FillBuffer(itkVariableLengthVectorD const & value);
     void SetPixel(itkIndex2 const & index, itkVariableLengthVectorD const & value);
     itkVariableLengthVectorD const GetPixel(itkIndex2 const & index) const;
     itkVariableLengthVectorD GetPixel(itkIndex2 const & index);
     itkVariableLengthVectorD operator[](itkIndex2 const & index);
     itkVariableLengthVectorD operator[](itkIndex2 const & index) const;
     double * GetBufferPointer();
     double const * GetBufferPointer() const;
     itk::ImportImageContainer< unsigned long, double > * GetPixelContainer();
     itk::ImportImageContainer< unsigned long, double > const * GetPixelContainer() const;
     void SetPixelContainer(itk::ImportImageContainer< unsigned long, double > * container);
     virtual void Graft(itkDataObject const * data);
     itk::DefaultVectorPixelAccessor< double > GetPixelAccessor();
     itk::DefaultVectorPixelAccessor< double > const GetPixelAccessor() const;
     itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< double, 2u > > GetNeighborhoodAccessor();
     itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< double, 2u > > const GetNeighborhoodAccessor() const;
     virtual void SetVectorLength(unsigned int const _arg);
     virtual unsigned int const & GetVectorLength() const;
     virtual unsigned int GetNumberOfComponentsPerPixel() const;
     virtual void SetNumberOfComponentsPerPixel(unsigned int n);
   private:
     itkVectorImageD2(itkVectorImageD2 const & arg0);
     void operator=(itkVectorImageD2 const & arg0);
   protected:
     itkVectorImageD2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     ~itkVectorImageD2();
 };


 class itkVectorImageD2_Pointer {
   public:
     itkVectorImageD2_Pointer();
     itkVectorImageD2_Pointer(itkVectorImageD2_Pointer const & p);
     itkVectorImageD2_Pointer(itkVectorImageD2 * p);
     ~itkVectorImageD2_Pointer();
     itkVectorImageD2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVectorImageD2 * GetPointer() const;
     bool operator<(itkVectorImageD2_Pointer const & r) const;
     bool operator>(itkVectorImageD2_Pointer const & r) const;
     bool operator<=(itkVectorImageD2_Pointer const & r) const;
     bool operator>=(itkVectorImageD2_Pointer const & r) const;
     itkVectorImageD2_Pointer & operator=(itkVectorImageD2_Pointer const & r);
     itkVectorImageD2_Pointer & operator=(itkVectorImageD2 * r);
     itkVectorImageD2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVectorImageD3 : public itkImageBase3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkVectorImageD3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void Allocate();
     void SetRegions(itkImageRegion3 region);
     void SetRegions(itkSize3 size);
     virtual void Initialize();
     void FillBuffer(itkVariableLengthVectorD const & value);
     void SetPixel(itkIndex3 const & index, itkVariableLengthVectorD const & value);
     itkVariableLengthVectorD const GetPixel(itkIndex3 const & index) const;
     itkVariableLengthVectorD GetPixel(itkIndex3 const & index);
     itkVariableLengthVectorD operator[](itkIndex3 const & index);
     itkVariableLengthVectorD operator[](itkIndex3 const & index) const;
     double * GetBufferPointer();
     double const * GetBufferPointer() const;
     itk::ImportImageContainer< unsigned long, double > * GetPixelContainer();
     itk::ImportImageContainer< unsigned long, double > const * GetPixelContainer() const;
     void SetPixelContainer(itk::ImportImageContainer< unsigned long, double > * container);
     virtual void Graft(itkDataObject const * data);
     itk::DefaultVectorPixelAccessor< double > GetPixelAccessor();
     itk::DefaultVectorPixelAccessor< double > const GetPixelAccessor() const;
     itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< double, 3u > > GetNeighborhoodAccessor();
     itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< double, 3u > > const GetNeighborhoodAccessor() const;
     virtual void SetVectorLength(unsigned int const _arg);
     virtual unsigned int const & GetVectorLength() const;
     virtual unsigned int GetNumberOfComponentsPerPixel() const;
     virtual void SetNumberOfComponentsPerPixel(unsigned int n);
   private:
     itkVectorImageD3(itkVectorImageD3 const & arg0);
     void operator=(itkVectorImageD3 const & arg0);
   protected:
     itkVectorImageD3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     ~itkVectorImageD3();
 };


 class itkVectorImageD3_Pointer {
   public:
     itkVectorImageD3_Pointer();
     itkVectorImageD3_Pointer(itkVectorImageD3_Pointer const & p);
     itkVectorImageD3_Pointer(itkVectorImageD3 * p);
     ~itkVectorImageD3_Pointer();
     itkVectorImageD3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVectorImageD3 * GetPointer() const;
     bool operator<(itkVectorImageD3_Pointer const & r) const;
     bool operator>(itkVectorImageD3_Pointer const & r) const;
     bool operator<=(itkVectorImageD3_Pointer const & r) const;
     bool operator>=(itkVectorImageD3_Pointer const & r) const;
     itkVectorImageD3_Pointer & operator=(itkVectorImageD3_Pointer const & r);
     itkVectorImageD3_Pointer & operator=(itkVectorImageD3 * r);
     itkVectorImageD3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVectorImageF2 : public itkImageBase2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkVectorImageF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void Allocate();
     void SetRegions(itkImageRegion2 region);
     void SetRegions(itkSize2 size);
     virtual void Initialize();
     void FillBuffer(itkVariableLengthVectorF const & value);
     void SetPixel(itkIndex2 const & index, itkVariableLengthVectorF const & value);
     itkVariableLengthVectorF const GetPixel(itkIndex2 const & index) const;
     itkVariableLengthVectorF GetPixel(itkIndex2 const & index);
     itkVariableLengthVectorF operator[](itkIndex2 const & index);
     itkVariableLengthVectorF operator[](itkIndex2 const & index) const;
     float * GetBufferPointer();
     float const * GetBufferPointer() const;
     itk::ImportImageContainer< unsigned long, float > * GetPixelContainer();
     itk::ImportImageContainer< unsigned long, float > const * GetPixelContainer() const;
     void SetPixelContainer(itk::ImportImageContainer< unsigned long, float > * container);
     virtual void Graft(itkDataObject const * data);
     itk::DefaultVectorPixelAccessor< float > GetPixelAccessor();
     itk::DefaultVectorPixelAccessor< float > const GetPixelAccessor() const;
     itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< float, 2u > > GetNeighborhoodAccessor();
     itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< float, 2u > > const GetNeighborhoodAccessor() const;
     virtual void SetVectorLength(unsigned int const _arg);
     virtual unsigned int const & GetVectorLength() const;
     virtual unsigned int GetNumberOfComponentsPerPixel() const;
     virtual void SetNumberOfComponentsPerPixel(unsigned int n);
   private:
     itkVectorImageF2(itkVectorImageF2 const & arg0);
     void operator=(itkVectorImageF2 const & arg0);
   protected:
     itkVectorImageF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     ~itkVectorImageF2();
 };


 class itkVectorImageF2_Pointer {
   public:
     itkVectorImageF2_Pointer();
     itkVectorImageF2_Pointer(itkVectorImageF2_Pointer const & p);
     itkVectorImageF2_Pointer(itkVectorImageF2 * p);
     ~itkVectorImageF2_Pointer();
     itkVectorImageF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVectorImageF2 * GetPointer() const;
     bool operator<(itkVectorImageF2_Pointer const & r) const;
     bool operator>(itkVectorImageF2_Pointer const & r) const;
     bool operator<=(itkVectorImageF2_Pointer const & r) const;
     bool operator>=(itkVectorImageF2_Pointer const & r) const;
     itkVectorImageF2_Pointer & operator=(itkVectorImageF2_Pointer const & r);
     itkVectorImageF2_Pointer & operator=(itkVectorImageF2 * r);
     itkVectorImageF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVectorImageF3 : public itkImageBase3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkVectorImageF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void Allocate();
     void SetRegions(itkImageRegion3 region);
     void SetRegions(itkSize3 size);
     virtual void Initialize();
     void FillBuffer(itkVariableLengthVectorF const & value);
     void SetPixel(itkIndex3 const & index, itkVariableLengthVectorF const & value);
     itkVariableLengthVectorF const GetPixel(itkIndex3 const & index) const;
     itkVariableLengthVectorF GetPixel(itkIndex3 const & index);
     itkVariableLengthVectorF operator[](itkIndex3 const & index);
     itkVariableLengthVectorF operator[](itkIndex3 const & index) const;
     float * GetBufferPointer();
     float const * GetBufferPointer() const;
     itk::ImportImageContainer< unsigned long, float > * GetPixelContainer();
     itk::ImportImageContainer< unsigned long, float > const * GetPixelContainer() const;
     void SetPixelContainer(itk::ImportImageContainer< unsigned long, float > * container);
     virtual void Graft(itkDataObject const * data);
     itk::DefaultVectorPixelAccessor< float > GetPixelAccessor();
     itk::DefaultVectorPixelAccessor< float > const GetPixelAccessor() const;
     itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< float, 3u > > GetNeighborhoodAccessor();
     itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< float, 3u > > const GetNeighborhoodAccessor() const;
     virtual void SetVectorLength(unsigned int const _arg);
     virtual unsigned int const & GetVectorLength() const;
     virtual unsigned int GetNumberOfComponentsPerPixel() const;
     virtual void SetNumberOfComponentsPerPixel(unsigned int n);
   private:
     itkVectorImageF3(itkVectorImageF3 const & arg0);
     void operator=(itkVectorImageF3 const & arg0);
   protected:
     itkVectorImageF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     ~itkVectorImageF3();
 };


 class itkVectorImageF3_Pointer {
   public:
     itkVectorImageF3_Pointer();
     itkVectorImageF3_Pointer(itkVectorImageF3_Pointer const & p);
     itkVectorImageF3_Pointer(itkVectorImageF3 * p);
     ~itkVectorImageF3_Pointer();
     itkVectorImageF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVectorImageF3 * GetPointer() const;
     bool operator<(itkVectorImageF3_Pointer const & r) const;
     bool operator>(itkVectorImageF3_Pointer const & r) const;
     bool operator<=(itkVectorImageF3_Pointer const & r) const;
     bool operator>=(itkVectorImageF3_Pointer const & r) const;
     itkVectorImageF3_Pointer & operator=(itkVectorImageF3_Pointer const & r);
     itkVectorImageF3_Pointer & operator=(itkVectorImageF3 * r);
     itkVectorImageF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVectorImageUC2 : public itkImageBase2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkVectorImageUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void Allocate();
     void SetRegions(itkImageRegion2 region);
     void SetRegions(itkSize2 size);
     virtual void Initialize();
     void FillBuffer(itkVariableLengthVectorUC const & value);
     void SetPixel(itkIndex2 const & index, itkVariableLengthVectorUC const & value);
     itkVariableLengthVectorUC const GetPixel(itkIndex2 const & index) const;
     itkVariableLengthVectorUC GetPixel(itkIndex2 const & index);
     itkVariableLengthVectorUC operator[](itkIndex2 const & index);
     itkVariableLengthVectorUC operator[](itkIndex2 const & index) const;
     unsigned char * GetBufferPointer();
     unsigned char const * GetBufferPointer() const;
     itk::ImportImageContainer< unsigned long, unsigned char > * GetPixelContainer();
     itk::ImportImageContainer< unsigned long, unsigned char > const * GetPixelContainer() const;
     void SetPixelContainer(itk::ImportImageContainer< unsigned long, unsigned char > * container);
     virtual void Graft(itkDataObject const * data);
     itk::DefaultVectorPixelAccessor< unsigned char > GetPixelAccessor();
     itk::DefaultVectorPixelAccessor< unsigned char > const GetPixelAccessor() const;
     itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< unsigned char, 2u > > GetNeighborhoodAccessor();
     itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< unsigned char, 2u > > const GetNeighborhoodAccessor() const;
     virtual void SetVectorLength(unsigned int const _arg);
     virtual unsigned int const & GetVectorLength() const;
     virtual unsigned int GetNumberOfComponentsPerPixel() const;
     virtual void SetNumberOfComponentsPerPixel(unsigned int n);
   private:
     itkVectorImageUC2(itkVectorImageUC2 const & arg0);
     void operator=(itkVectorImageUC2 const & arg0);
   protected:
     itkVectorImageUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     ~itkVectorImageUC2();
 };


 class itkVectorImageUC2_Pointer {
   public:
     itkVectorImageUC2_Pointer();
     itkVectorImageUC2_Pointer(itkVectorImageUC2_Pointer const & p);
     itkVectorImageUC2_Pointer(itkVectorImageUC2 * p);
     ~itkVectorImageUC2_Pointer();
     itkVectorImageUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVectorImageUC2 * GetPointer() const;
     bool operator<(itkVectorImageUC2_Pointer const & r) const;
     bool operator>(itkVectorImageUC2_Pointer const & r) const;
     bool operator<=(itkVectorImageUC2_Pointer const & r) const;
     bool operator>=(itkVectorImageUC2_Pointer const & r) const;
     itkVectorImageUC2_Pointer & operator=(itkVectorImageUC2_Pointer const & r);
     itkVectorImageUC2_Pointer & operator=(itkVectorImageUC2 * r);
     itkVectorImageUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVectorImageUC3 : public itkImageBase3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkVectorImageUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void Allocate();
     void SetRegions(itkImageRegion3 region);
     void SetRegions(itkSize3 size);
     virtual void Initialize();
     void FillBuffer(itkVariableLengthVectorUC const & value);
     void SetPixel(itkIndex3 const & index, itkVariableLengthVectorUC const & value);
     itkVariableLengthVectorUC const GetPixel(itkIndex3 const & index) const;
     itkVariableLengthVectorUC GetPixel(itkIndex3 const & index);
     itkVariableLengthVectorUC operator[](itkIndex3 const & index);
     itkVariableLengthVectorUC operator[](itkIndex3 const & index) const;
     unsigned char * GetBufferPointer();
     unsigned char const * GetBufferPointer() const;
     itk::ImportImageContainer< unsigned long, unsigned char > * GetPixelContainer();
     itk::ImportImageContainer< unsigned long, unsigned char > const * GetPixelContainer() const;
     void SetPixelContainer(itk::ImportImageContainer< unsigned long, unsigned char > * container);
     virtual void Graft(itkDataObject const * data);
     itk::DefaultVectorPixelAccessor< unsigned char > GetPixelAccessor();
     itk::DefaultVectorPixelAccessor< unsigned char > const GetPixelAccessor() const;
     itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< unsigned char, 3u > > GetNeighborhoodAccessor();
     itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< unsigned char, 3u > > const GetNeighborhoodAccessor() const;
     virtual void SetVectorLength(unsigned int const _arg);
     virtual unsigned int const & GetVectorLength() const;
     virtual unsigned int GetNumberOfComponentsPerPixel() const;
     virtual void SetNumberOfComponentsPerPixel(unsigned int n);
   private:
     itkVectorImageUC3(itkVectorImageUC3 const & arg0);
     void operator=(itkVectorImageUC3 const & arg0);
   protected:
     itkVectorImageUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     ~itkVectorImageUC3();
 };


 class itkVectorImageUC3_Pointer {
   public:
     itkVectorImageUC3_Pointer();
     itkVectorImageUC3_Pointer(itkVectorImageUC3_Pointer const & p);
     itkVectorImageUC3_Pointer(itkVectorImageUC3 * p);
     ~itkVectorImageUC3_Pointer();
     itkVectorImageUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVectorImageUC3 * GetPointer() const;
     bool operator<(itkVectorImageUC3_Pointer const & r) const;
     bool operator>(itkVectorImageUC3_Pointer const & r) const;
     bool operator<=(itkVectorImageUC3_Pointer const & r) const;
     bool operator>=(itkVectorImageUC3_Pointer const & r) const;
     itkVectorImageUC3_Pointer & operator=(itkVectorImageUC3_Pointer const & r);
     itkVectorImageUC3_Pointer & operator=(itkVectorImageUC3 * r);
     itkVectorImageUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVectorImageUL2 : public itkImageBase2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkVectorImageUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void Allocate();
     void SetRegions(itkImageRegion2 region);
     void SetRegions(itkSize2 size);
     virtual void Initialize();
     void FillBuffer(itkVariableLengthVectorUL const & value);
     void SetPixel(itkIndex2 const & index, itkVariableLengthVectorUL const & value);
     itkVariableLengthVectorUL const GetPixel(itkIndex2 const & index) const;
     itkVariableLengthVectorUL GetPixel(itkIndex2 const & index);
     itkVariableLengthVectorUL operator[](itkIndex2 const & index);
     itkVariableLengthVectorUL operator[](itkIndex2 const & index) const;
     unsigned long * GetBufferPointer();
     unsigned long const * GetBufferPointer() const;
     itk::ImportImageContainer< unsigned long, unsigned long > * GetPixelContainer();
     itk::ImportImageContainer< unsigned long, unsigned long > const * GetPixelContainer() const;
     void SetPixelContainer(itk::ImportImageContainer< unsigned long, unsigned long > * container);
     virtual void Graft(itkDataObject const * data);
     itk::DefaultVectorPixelAccessor< unsigned long > GetPixelAccessor();
     itk::DefaultVectorPixelAccessor< unsigned long > const GetPixelAccessor() const;
     itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< unsigned long, 2u > > GetNeighborhoodAccessor();
     itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< unsigned long, 2u > > const GetNeighborhoodAccessor() const;
     virtual void SetVectorLength(unsigned int const _arg);
     virtual unsigned int const & GetVectorLength() const;
     virtual unsigned int GetNumberOfComponentsPerPixel() const;
     virtual void SetNumberOfComponentsPerPixel(unsigned int n);
   private:
     itkVectorImageUL2(itkVectorImageUL2 const & arg0);
     void operator=(itkVectorImageUL2 const & arg0);
   protected:
     itkVectorImageUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     ~itkVectorImageUL2();
 };


 class itkVectorImageUL2_Pointer {
   public:
     itkVectorImageUL2_Pointer();
     itkVectorImageUL2_Pointer(itkVectorImageUL2_Pointer const & p);
     itkVectorImageUL2_Pointer(itkVectorImageUL2 * p);
     ~itkVectorImageUL2_Pointer();
     itkVectorImageUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVectorImageUL2 * GetPointer() const;
     bool operator<(itkVectorImageUL2_Pointer const & r) const;
     bool operator>(itkVectorImageUL2_Pointer const & r) const;
     bool operator<=(itkVectorImageUL2_Pointer const & r) const;
     bool operator>=(itkVectorImageUL2_Pointer const & r) const;
     itkVectorImageUL2_Pointer & operator=(itkVectorImageUL2_Pointer const & r);
     itkVectorImageUL2_Pointer & operator=(itkVectorImageUL2 * r);
     itkVectorImageUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVectorImageUL3 : public itkImageBase3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkVectorImageUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void Allocate();
     void SetRegions(itkImageRegion3 region);
     void SetRegions(itkSize3 size);
     virtual void Initialize();
     void FillBuffer(itkVariableLengthVectorUL const & value);
     void SetPixel(itkIndex3 const & index, itkVariableLengthVectorUL const & value);
     itkVariableLengthVectorUL const GetPixel(itkIndex3 const & index) const;
     itkVariableLengthVectorUL GetPixel(itkIndex3 const & index);
     itkVariableLengthVectorUL operator[](itkIndex3 const & index);
     itkVariableLengthVectorUL operator[](itkIndex3 const & index) const;
     unsigned long * GetBufferPointer();
     unsigned long const * GetBufferPointer() const;
     itk::ImportImageContainer< unsigned long, unsigned long > * GetPixelContainer();
     itk::ImportImageContainer< unsigned long, unsigned long > const * GetPixelContainer() const;
     void SetPixelContainer(itk::ImportImageContainer< unsigned long, unsigned long > * container);
     virtual void Graft(itkDataObject const * data);
     itk::DefaultVectorPixelAccessor< unsigned long > GetPixelAccessor();
     itk::DefaultVectorPixelAccessor< unsigned long > const GetPixelAccessor() const;
     itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< unsigned long, 3u > > GetNeighborhoodAccessor();
     itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< unsigned long, 3u > > const GetNeighborhoodAccessor() const;
     virtual void SetVectorLength(unsigned int const _arg);
     virtual unsigned int const & GetVectorLength() const;
     virtual unsigned int GetNumberOfComponentsPerPixel() const;
     virtual void SetNumberOfComponentsPerPixel(unsigned int n);
   private:
     itkVectorImageUL3(itkVectorImageUL3 const & arg0);
     void operator=(itkVectorImageUL3 const & arg0);
   protected:
     itkVectorImageUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     ~itkVectorImageUL3();
 };


 class itkVectorImageUL3_Pointer {
   public:
     itkVectorImageUL3_Pointer();
     itkVectorImageUL3_Pointer(itkVectorImageUL3_Pointer const & p);
     itkVectorImageUL3_Pointer(itkVectorImageUL3 * p);
     ~itkVectorImageUL3_Pointer();
     itkVectorImageUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVectorImageUL3 * GetPointer() const;
     bool operator<(itkVectorImageUL3_Pointer const & r) const;
     bool operator>(itkVectorImageUL3_Pointer const & r) const;
     bool operator<=(itkVectorImageUL3_Pointer const & r) const;
     bool operator>=(itkVectorImageUL3_Pointer const & r) const;
     itkVectorImageUL3_Pointer & operator=(itkVectorImageUL3_Pointer const & r);
     itkVectorImageUL3_Pointer & operator=(itkVectorImageUL3 * r);
     itkVectorImageUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVectorImageUS2 : public itkImageBase2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkVectorImageUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void Allocate();
     void SetRegions(itkImageRegion2 region);
     void SetRegions(itkSize2 size);
     virtual void Initialize();
     void FillBuffer(itkVariableLengthVectorUS const & value);
     void SetPixel(itkIndex2 const & index, itkVariableLengthVectorUS const & value);
     itkVariableLengthVectorUS const GetPixel(itkIndex2 const & index) const;
     itkVariableLengthVectorUS GetPixel(itkIndex2 const & index);
     itkVariableLengthVectorUS operator[](itkIndex2 const & index);
     itkVariableLengthVectorUS operator[](itkIndex2 const & index) const;
     unsigned short * GetBufferPointer();
     unsigned short const * GetBufferPointer() const;
     itk::ImportImageContainer< unsigned long, unsigned short > * GetPixelContainer();
     itk::ImportImageContainer< unsigned long, unsigned short > const * GetPixelContainer() const;
     void SetPixelContainer(itk::ImportImageContainer< unsigned long, unsigned short > * container);
     virtual void Graft(itkDataObject const * data);
     itk::DefaultVectorPixelAccessor< unsigned short > GetPixelAccessor();
     itk::DefaultVectorPixelAccessor< unsigned short > const GetPixelAccessor() const;
     itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< unsigned short, 2u > > GetNeighborhoodAccessor();
     itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< unsigned short, 2u > > const GetNeighborhoodAccessor() const;
     virtual void SetVectorLength(unsigned int const _arg);
     virtual unsigned int const & GetVectorLength() const;
     virtual unsigned int GetNumberOfComponentsPerPixel() const;
     virtual void SetNumberOfComponentsPerPixel(unsigned int n);
   private:
     itkVectorImageUS2(itkVectorImageUS2 const & arg0);
     void operator=(itkVectorImageUS2 const & arg0);
   protected:
     itkVectorImageUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     ~itkVectorImageUS2();
 };


 class itkVectorImageUS2_Pointer {
   public:
     itkVectorImageUS2_Pointer();
     itkVectorImageUS2_Pointer(itkVectorImageUS2_Pointer const & p);
     itkVectorImageUS2_Pointer(itkVectorImageUS2 * p);
     ~itkVectorImageUS2_Pointer();
     itkVectorImageUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVectorImageUS2 * GetPointer() const;
     bool operator<(itkVectorImageUS2_Pointer const & r) const;
     bool operator>(itkVectorImageUS2_Pointer const & r) const;
     bool operator<=(itkVectorImageUS2_Pointer const & r) const;
     bool operator>=(itkVectorImageUS2_Pointer const & r) const;
     itkVectorImageUS2_Pointer & operator=(itkVectorImageUS2_Pointer const & r);
     itkVectorImageUS2_Pointer & operator=(itkVectorImageUS2 * r);
     itkVectorImageUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVectorImageUS3 : public itkImageBase3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkVectorImageUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void Allocate();
     void SetRegions(itkImageRegion3 region);
     void SetRegions(itkSize3 size);
     virtual void Initialize();
     void FillBuffer(itkVariableLengthVectorUS const & value);
     void SetPixel(itkIndex3 const & index, itkVariableLengthVectorUS const & value);
     itkVariableLengthVectorUS const GetPixel(itkIndex3 const & index) const;
     itkVariableLengthVectorUS GetPixel(itkIndex3 const & index);
     itkVariableLengthVectorUS operator[](itkIndex3 const & index);
     itkVariableLengthVectorUS operator[](itkIndex3 const & index) const;
     unsigned short * GetBufferPointer();
     unsigned short const * GetBufferPointer() const;
     itk::ImportImageContainer< unsigned long, unsigned short > * GetPixelContainer();
     itk::ImportImageContainer< unsigned long, unsigned short > const * GetPixelContainer() const;
     void SetPixelContainer(itk::ImportImageContainer< unsigned long, unsigned short > * container);
     virtual void Graft(itkDataObject const * data);
     itk::DefaultVectorPixelAccessor< unsigned short > GetPixelAccessor();
     itk::DefaultVectorPixelAccessor< unsigned short > const GetPixelAccessor() const;
     itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< unsigned short, 3u > > GetNeighborhoodAccessor();
     itk::VectorImageNeighborhoodAccessorFunctor< itk::VectorImage< unsigned short, 3u > > const GetNeighborhoodAccessor() const;
     virtual void SetVectorLength(unsigned int const _arg);
     virtual unsigned int const & GetVectorLength() const;
     virtual unsigned int GetNumberOfComponentsPerPixel() const;
     virtual void SetNumberOfComponentsPerPixel(unsigned int n);
   private:
     itkVectorImageUS3(itkVectorImageUS3 const & arg0);
     void operator=(itkVectorImageUS3 const & arg0);
   protected:
     itkVectorImageUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     ~itkVectorImageUS3();
 };


 class itkVectorImageUS3_Pointer {
   public:
     itkVectorImageUS3_Pointer();
     itkVectorImageUS3_Pointer(itkVectorImageUS3_Pointer const & p);
     itkVectorImageUS3_Pointer(itkVectorImageUS3 * p);
     ~itkVectorImageUS3_Pointer();
     itkVectorImageUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVectorImageUS3 * GetPointer() const;
     bool operator<(itkVectorImageUS3_Pointer const & r) const;
     bool operator>(itkVectorImageUS3_Pointer const & r) const;
     bool operator<=(itkVectorImageUS3_Pointer const & r) const;
     bool operator>=(itkVectorImageUS3_Pointer const & r) const;
     itkVectorImageUS3_Pointer & operator=(itkVectorImageUS3_Pointer const & r);
     itkVectorImageUS3_Pointer & operator=(itkVectorImageUS3 * r);
     itkVectorImageUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


