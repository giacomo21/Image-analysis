// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkSignedDanielssonDistanceMapImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkSignedDanielssonDistanceMapImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkSignedDanielssonDistanceMapImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkSignedDanielssonDistanceMapImageFilterJava
#endif
#ifdef SWIGLUA
%module itkSignedDanielssonDistanceMapImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkSignedDanielssonDistanceMapImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkSignedDanielssonDistanceMapImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkSignedDanielssonDistanceMapImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkSignedDanielssonDistanceMapImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkSignedDanielssonDistanceMapImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkSignedDanielssonDistanceMapImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkSignedDanielssonDistanceMapImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkSignedDanielssonDistanceMapImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkSignedDanielssonDistanceMapImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkSignedDanielssonDistanceMapImageFilterPython
#endif
#ifdef SWIGR
%module itkSignedDanielssonDistanceMapImageFilterR
#endif
#ifdef SWIGRUBY
%module itkSignedDanielssonDistanceMapImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkSignedDanielssonDistanceMapImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkSignedDanielssonDistanceMapImageFilterTcl
#endif
#ifdef SWIGXML
%module itkSignedDanielssonDistanceMapImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "DistanceMap.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImage.i
%import wrap_itkImageToImageFilterA.i


%include itk.i
%include wrap_itkSignedDanielssonDistanceMapImageFilter_ext.i


 class itkSignedDanielssonDistanceMapImageFilterID2ID2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkSignedDanielssonDistanceMapImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     itkImageD2 * GetVoronoiMap();
     itkImageD2 * GetDistanceMap();
     itkImageO22 * GetVectorDistanceMap();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
   private:
     itkSignedDanielssonDistanceMapImageFilterID2ID2(itkSignedDanielssonDistanceMapImageFilterID2ID2 const & arg0);
     void operator=(itkSignedDanielssonDistanceMapImageFilterID2ID2 const & arg0);
   protected:
     itkSignedDanielssonDistanceMapImageFilterID2ID2();
     ~itkSignedDanielssonDistanceMapImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkSignedDanielssonDistanceMapImageFilterID2ID2_Pointer {
   public:
     itkSignedDanielssonDistanceMapImageFilterID2ID2_Pointer();
     itkSignedDanielssonDistanceMapImageFilterID2ID2_Pointer(itkSignedDanielssonDistanceMapImageFilterID2ID2_Pointer const & p);
     itkSignedDanielssonDistanceMapImageFilterID2ID2_Pointer(itkSignedDanielssonDistanceMapImageFilterID2ID2 * p);
     ~itkSignedDanielssonDistanceMapImageFilterID2ID2_Pointer();
     itkSignedDanielssonDistanceMapImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedDanielssonDistanceMapImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkSignedDanielssonDistanceMapImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkSignedDanielssonDistanceMapImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkSignedDanielssonDistanceMapImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkSignedDanielssonDistanceMapImageFilterID2ID2_Pointer const & r) const;
     itkSignedDanielssonDistanceMapImageFilterID2ID2_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterID2ID2_Pointer const & r);
     itkSignedDanielssonDistanceMapImageFilterID2ID2_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterID2ID2 * r);
     itkSignedDanielssonDistanceMapImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSignedDanielssonDistanceMapImageFilterID3ID3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkSignedDanielssonDistanceMapImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     itkImageD3 * GetVoronoiMap();
     itkImageD3 * GetDistanceMap();
     itkImageO33 * GetVectorDistanceMap();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
   private:
     itkSignedDanielssonDistanceMapImageFilterID3ID3(itkSignedDanielssonDistanceMapImageFilterID3ID3 const & arg0);
     void operator=(itkSignedDanielssonDistanceMapImageFilterID3ID3 const & arg0);
   protected:
     itkSignedDanielssonDistanceMapImageFilterID3ID3();
     ~itkSignedDanielssonDistanceMapImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkSignedDanielssonDistanceMapImageFilterID3ID3_Pointer {
   public:
     itkSignedDanielssonDistanceMapImageFilterID3ID3_Pointer();
     itkSignedDanielssonDistanceMapImageFilterID3ID3_Pointer(itkSignedDanielssonDistanceMapImageFilterID3ID3_Pointer const & p);
     itkSignedDanielssonDistanceMapImageFilterID3ID3_Pointer(itkSignedDanielssonDistanceMapImageFilterID3ID3 * p);
     ~itkSignedDanielssonDistanceMapImageFilterID3ID3_Pointer();
     itkSignedDanielssonDistanceMapImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedDanielssonDistanceMapImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkSignedDanielssonDistanceMapImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkSignedDanielssonDistanceMapImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkSignedDanielssonDistanceMapImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkSignedDanielssonDistanceMapImageFilterID3ID3_Pointer const & r) const;
     itkSignedDanielssonDistanceMapImageFilterID3ID3_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterID3ID3_Pointer const & r);
     itkSignedDanielssonDistanceMapImageFilterID3ID3_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterID3ID3 * r);
     itkSignedDanielssonDistanceMapImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSignedDanielssonDistanceMapImageFilterIF2IF2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkSignedDanielssonDistanceMapImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     itkImageF2 * GetVoronoiMap();
     itkImageF2 * GetDistanceMap();
     itkImageO22 * GetVectorDistanceMap();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
   private:
     itkSignedDanielssonDistanceMapImageFilterIF2IF2(itkSignedDanielssonDistanceMapImageFilterIF2IF2 const & arg0);
     void operator=(itkSignedDanielssonDistanceMapImageFilterIF2IF2 const & arg0);
   protected:
     itkSignedDanielssonDistanceMapImageFilterIF2IF2();
     ~itkSignedDanielssonDistanceMapImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkSignedDanielssonDistanceMapImageFilterIF2IF2_Pointer {
   public:
     itkSignedDanielssonDistanceMapImageFilterIF2IF2_Pointer();
     itkSignedDanielssonDistanceMapImageFilterIF2IF2_Pointer(itkSignedDanielssonDistanceMapImageFilterIF2IF2_Pointer const & p);
     itkSignedDanielssonDistanceMapImageFilterIF2IF2_Pointer(itkSignedDanielssonDistanceMapImageFilterIF2IF2 * p);
     ~itkSignedDanielssonDistanceMapImageFilterIF2IF2_Pointer();
     itkSignedDanielssonDistanceMapImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedDanielssonDistanceMapImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkSignedDanielssonDistanceMapImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkSignedDanielssonDistanceMapImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkSignedDanielssonDistanceMapImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkSignedDanielssonDistanceMapImageFilterIF2IF2_Pointer const & r) const;
     itkSignedDanielssonDistanceMapImageFilterIF2IF2_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterIF2IF2_Pointer const & r);
     itkSignedDanielssonDistanceMapImageFilterIF2IF2_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterIF2IF2 * r);
     itkSignedDanielssonDistanceMapImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSignedDanielssonDistanceMapImageFilterIF3IF3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkSignedDanielssonDistanceMapImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     itkImageF3 * GetVoronoiMap();
     itkImageF3 * GetDistanceMap();
     itkImageO33 * GetVectorDistanceMap();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
   private:
     itkSignedDanielssonDistanceMapImageFilterIF3IF3(itkSignedDanielssonDistanceMapImageFilterIF3IF3 const & arg0);
     void operator=(itkSignedDanielssonDistanceMapImageFilterIF3IF3 const & arg0);
   protected:
     itkSignedDanielssonDistanceMapImageFilterIF3IF3();
     ~itkSignedDanielssonDistanceMapImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkSignedDanielssonDistanceMapImageFilterIF3IF3_Pointer {
   public:
     itkSignedDanielssonDistanceMapImageFilterIF3IF3_Pointer();
     itkSignedDanielssonDistanceMapImageFilterIF3IF3_Pointer(itkSignedDanielssonDistanceMapImageFilterIF3IF3_Pointer const & p);
     itkSignedDanielssonDistanceMapImageFilterIF3IF3_Pointer(itkSignedDanielssonDistanceMapImageFilterIF3IF3 * p);
     ~itkSignedDanielssonDistanceMapImageFilterIF3IF3_Pointer();
     itkSignedDanielssonDistanceMapImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedDanielssonDistanceMapImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkSignedDanielssonDistanceMapImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkSignedDanielssonDistanceMapImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkSignedDanielssonDistanceMapImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkSignedDanielssonDistanceMapImageFilterIF3IF3_Pointer const & r) const;
     itkSignedDanielssonDistanceMapImageFilterIF3IF3_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterIF3IF3_Pointer const & r);
     itkSignedDanielssonDistanceMapImageFilterIF3IF3_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterIF3IF3 * r);
     itkSignedDanielssonDistanceMapImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSignedDanielssonDistanceMapImageFilterIUC2ID2 : public itkImageToImageFilterIUC2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkSignedDanielssonDistanceMapImageFilterIUC2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     itkImageD2 * GetVoronoiMap();
     itkImageD2 * GetDistanceMap();
     itkImageO22 * GetVectorDistanceMap();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
   private:
     itkSignedDanielssonDistanceMapImageFilterIUC2ID2(itkSignedDanielssonDistanceMapImageFilterIUC2ID2 const & arg0);
     void operator=(itkSignedDanielssonDistanceMapImageFilterIUC2ID2 const & arg0);
   protected:
     itkSignedDanielssonDistanceMapImageFilterIUC2ID2();
     ~itkSignedDanielssonDistanceMapImageFilterIUC2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkSignedDanielssonDistanceMapImageFilterIUC2ID2_Pointer {
   public:
     itkSignedDanielssonDistanceMapImageFilterIUC2ID2_Pointer();
     itkSignedDanielssonDistanceMapImageFilterIUC2ID2_Pointer(itkSignedDanielssonDistanceMapImageFilterIUC2ID2_Pointer const & p);
     itkSignedDanielssonDistanceMapImageFilterIUC2ID2_Pointer(itkSignedDanielssonDistanceMapImageFilterIUC2ID2 * p);
     ~itkSignedDanielssonDistanceMapImageFilterIUC2ID2_Pointer();
     itkSignedDanielssonDistanceMapImageFilterIUC2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedDanielssonDistanceMapImageFilterIUC2ID2 * GetPointer() const;
     bool operator<(itkSignedDanielssonDistanceMapImageFilterIUC2ID2_Pointer const & r) const;
     bool operator>(itkSignedDanielssonDistanceMapImageFilterIUC2ID2_Pointer const & r) const;
     bool operator<=(itkSignedDanielssonDistanceMapImageFilterIUC2ID2_Pointer const & r) const;
     bool operator>=(itkSignedDanielssonDistanceMapImageFilterIUC2ID2_Pointer const & r) const;
     itkSignedDanielssonDistanceMapImageFilterIUC2ID2_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterIUC2ID2_Pointer const & r);
     itkSignedDanielssonDistanceMapImageFilterIUC2ID2_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterIUC2ID2 * r);
     itkSignedDanielssonDistanceMapImageFilterIUC2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSignedDanielssonDistanceMapImageFilterIUC2IF2 : public itkImageToImageFilterIUC2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkSignedDanielssonDistanceMapImageFilterIUC2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     itkImageF2 * GetVoronoiMap();
     itkImageF2 * GetDistanceMap();
     itkImageO22 * GetVectorDistanceMap();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
   private:
     itkSignedDanielssonDistanceMapImageFilterIUC2IF2(itkSignedDanielssonDistanceMapImageFilterIUC2IF2 const & arg0);
     void operator=(itkSignedDanielssonDistanceMapImageFilterIUC2IF2 const & arg0);
   protected:
     itkSignedDanielssonDistanceMapImageFilterIUC2IF2();
     ~itkSignedDanielssonDistanceMapImageFilterIUC2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkSignedDanielssonDistanceMapImageFilterIUC2IF2_Pointer {
   public:
     itkSignedDanielssonDistanceMapImageFilterIUC2IF2_Pointer();
     itkSignedDanielssonDistanceMapImageFilterIUC2IF2_Pointer(itkSignedDanielssonDistanceMapImageFilterIUC2IF2_Pointer const & p);
     itkSignedDanielssonDistanceMapImageFilterIUC2IF2_Pointer(itkSignedDanielssonDistanceMapImageFilterIUC2IF2 * p);
     ~itkSignedDanielssonDistanceMapImageFilterIUC2IF2_Pointer();
     itkSignedDanielssonDistanceMapImageFilterIUC2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedDanielssonDistanceMapImageFilterIUC2IF2 * GetPointer() const;
     bool operator<(itkSignedDanielssonDistanceMapImageFilterIUC2IF2_Pointer const & r) const;
     bool operator>(itkSignedDanielssonDistanceMapImageFilterIUC2IF2_Pointer const & r) const;
     bool operator<=(itkSignedDanielssonDistanceMapImageFilterIUC2IF2_Pointer const & r) const;
     bool operator>=(itkSignedDanielssonDistanceMapImageFilterIUC2IF2_Pointer const & r) const;
     itkSignedDanielssonDistanceMapImageFilterIUC2IF2_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterIUC2IF2_Pointer const & r);
     itkSignedDanielssonDistanceMapImageFilterIUC2IF2_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterIUC2IF2 * r);
     itkSignedDanielssonDistanceMapImageFilterIUC2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSignedDanielssonDistanceMapImageFilterIUC3ID3 : public itkImageToImageFilterIUC3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkSignedDanielssonDistanceMapImageFilterIUC3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     itkImageD3 * GetVoronoiMap();
     itkImageD3 * GetDistanceMap();
     itkImageO33 * GetVectorDistanceMap();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
   private:
     itkSignedDanielssonDistanceMapImageFilterIUC3ID3(itkSignedDanielssonDistanceMapImageFilterIUC3ID3 const & arg0);
     void operator=(itkSignedDanielssonDistanceMapImageFilterIUC3ID3 const & arg0);
   protected:
     itkSignedDanielssonDistanceMapImageFilterIUC3ID3();
     ~itkSignedDanielssonDistanceMapImageFilterIUC3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkSignedDanielssonDistanceMapImageFilterIUC3ID3_Pointer {
   public:
     itkSignedDanielssonDistanceMapImageFilterIUC3ID3_Pointer();
     itkSignedDanielssonDistanceMapImageFilterIUC3ID3_Pointer(itkSignedDanielssonDistanceMapImageFilterIUC3ID3_Pointer const & p);
     itkSignedDanielssonDistanceMapImageFilterIUC3ID3_Pointer(itkSignedDanielssonDistanceMapImageFilterIUC3ID3 * p);
     ~itkSignedDanielssonDistanceMapImageFilterIUC3ID3_Pointer();
     itkSignedDanielssonDistanceMapImageFilterIUC3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedDanielssonDistanceMapImageFilterIUC3ID3 * GetPointer() const;
     bool operator<(itkSignedDanielssonDistanceMapImageFilterIUC3ID3_Pointer const & r) const;
     bool operator>(itkSignedDanielssonDistanceMapImageFilterIUC3ID3_Pointer const & r) const;
     bool operator<=(itkSignedDanielssonDistanceMapImageFilterIUC3ID3_Pointer const & r) const;
     bool operator>=(itkSignedDanielssonDistanceMapImageFilterIUC3ID3_Pointer const & r) const;
     itkSignedDanielssonDistanceMapImageFilterIUC3ID3_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterIUC3ID3_Pointer const & r);
     itkSignedDanielssonDistanceMapImageFilterIUC3ID3_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterIUC3ID3 * r);
     itkSignedDanielssonDistanceMapImageFilterIUC3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSignedDanielssonDistanceMapImageFilterIUC3IF3 : public itkImageToImageFilterIUC3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkSignedDanielssonDistanceMapImageFilterIUC3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     itkImageF3 * GetVoronoiMap();
     itkImageF3 * GetDistanceMap();
     itkImageO33 * GetVectorDistanceMap();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
   private:
     itkSignedDanielssonDistanceMapImageFilterIUC3IF3(itkSignedDanielssonDistanceMapImageFilterIUC3IF3 const & arg0);
     void operator=(itkSignedDanielssonDistanceMapImageFilterIUC3IF3 const & arg0);
   protected:
     itkSignedDanielssonDistanceMapImageFilterIUC3IF3();
     ~itkSignedDanielssonDistanceMapImageFilterIUC3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkSignedDanielssonDistanceMapImageFilterIUC3IF3_Pointer {
   public:
     itkSignedDanielssonDistanceMapImageFilterIUC3IF3_Pointer();
     itkSignedDanielssonDistanceMapImageFilterIUC3IF3_Pointer(itkSignedDanielssonDistanceMapImageFilterIUC3IF3_Pointer const & p);
     itkSignedDanielssonDistanceMapImageFilterIUC3IF3_Pointer(itkSignedDanielssonDistanceMapImageFilterIUC3IF3 * p);
     ~itkSignedDanielssonDistanceMapImageFilterIUC3IF3_Pointer();
     itkSignedDanielssonDistanceMapImageFilterIUC3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedDanielssonDistanceMapImageFilterIUC3IF3 * GetPointer() const;
     bool operator<(itkSignedDanielssonDistanceMapImageFilterIUC3IF3_Pointer const & r) const;
     bool operator>(itkSignedDanielssonDistanceMapImageFilterIUC3IF3_Pointer const & r) const;
     bool operator<=(itkSignedDanielssonDistanceMapImageFilterIUC3IF3_Pointer const & r) const;
     bool operator>=(itkSignedDanielssonDistanceMapImageFilterIUC3IF3_Pointer const & r) const;
     itkSignedDanielssonDistanceMapImageFilterIUC3IF3_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterIUC3IF3_Pointer const & r);
     itkSignedDanielssonDistanceMapImageFilterIUC3IF3_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterIUC3IF3 * r);
     itkSignedDanielssonDistanceMapImageFilterIUC3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSignedDanielssonDistanceMapImageFilterIUL2ID2 : public itkImageToImageFilterIUL2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkSignedDanielssonDistanceMapImageFilterIUL2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     itkImageD2 * GetVoronoiMap();
     itkImageD2 * GetDistanceMap();
     itkImageO22 * GetVectorDistanceMap();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
   private:
     itkSignedDanielssonDistanceMapImageFilterIUL2ID2(itkSignedDanielssonDistanceMapImageFilterIUL2ID2 const & arg0);
     void operator=(itkSignedDanielssonDistanceMapImageFilterIUL2ID2 const & arg0);
   protected:
     itkSignedDanielssonDistanceMapImageFilterIUL2ID2();
     ~itkSignedDanielssonDistanceMapImageFilterIUL2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkSignedDanielssonDistanceMapImageFilterIUL2ID2_Pointer {
   public:
     itkSignedDanielssonDistanceMapImageFilterIUL2ID2_Pointer();
     itkSignedDanielssonDistanceMapImageFilterIUL2ID2_Pointer(itkSignedDanielssonDistanceMapImageFilterIUL2ID2_Pointer const & p);
     itkSignedDanielssonDistanceMapImageFilterIUL2ID2_Pointer(itkSignedDanielssonDistanceMapImageFilterIUL2ID2 * p);
     ~itkSignedDanielssonDistanceMapImageFilterIUL2ID2_Pointer();
     itkSignedDanielssonDistanceMapImageFilterIUL2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedDanielssonDistanceMapImageFilterIUL2ID2 * GetPointer() const;
     bool operator<(itkSignedDanielssonDistanceMapImageFilterIUL2ID2_Pointer const & r) const;
     bool operator>(itkSignedDanielssonDistanceMapImageFilterIUL2ID2_Pointer const & r) const;
     bool operator<=(itkSignedDanielssonDistanceMapImageFilterIUL2ID2_Pointer const & r) const;
     bool operator>=(itkSignedDanielssonDistanceMapImageFilterIUL2ID2_Pointer const & r) const;
     itkSignedDanielssonDistanceMapImageFilterIUL2ID2_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterIUL2ID2_Pointer const & r);
     itkSignedDanielssonDistanceMapImageFilterIUL2ID2_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterIUL2ID2 * r);
     itkSignedDanielssonDistanceMapImageFilterIUL2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSignedDanielssonDistanceMapImageFilterIUL2IF2 : public itkImageToImageFilterIUL2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkSignedDanielssonDistanceMapImageFilterIUL2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     itkImageF2 * GetVoronoiMap();
     itkImageF2 * GetDistanceMap();
     itkImageO22 * GetVectorDistanceMap();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
   private:
     itkSignedDanielssonDistanceMapImageFilterIUL2IF2(itkSignedDanielssonDistanceMapImageFilterIUL2IF2 const & arg0);
     void operator=(itkSignedDanielssonDistanceMapImageFilterIUL2IF2 const & arg0);
   protected:
     itkSignedDanielssonDistanceMapImageFilterIUL2IF2();
     ~itkSignedDanielssonDistanceMapImageFilterIUL2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkSignedDanielssonDistanceMapImageFilterIUL2IF2_Pointer {
   public:
     itkSignedDanielssonDistanceMapImageFilterIUL2IF2_Pointer();
     itkSignedDanielssonDistanceMapImageFilterIUL2IF2_Pointer(itkSignedDanielssonDistanceMapImageFilterIUL2IF2_Pointer const & p);
     itkSignedDanielssonDistanceMapImageFilterIUL2IF2_Pointer(itkSignedDanielssonDistanceMapImageFilterIUL2IF2 * p);
     ~itkSignedDanielssonDistanceMapImageFilterIUL2IF2_Pointer();
     itkSignedDanielssonDistanceMapImageFilterIUL2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedDanielssonDistanceMapImageFilterIUL2IF2 * GetPointer() const;
     bool operator<(itkSignedDanielssonDistanceMapImageFilterIUL2IF2_Pointer const & r) const;
     bool operator>(itkSignedDanielssonDistanceMapImageFilterIUL2IF2_Pointer const & r) const;
     bool operator<=(itkSignedDanielssonDistanceMapImageFilterIUL2IF2_Pointer const & r) const;
     bool operator>=(itkSignedDanielssonDistanceMapImageFilterIUL2IF2_Pointer const & r) const;
     itkSignedDanielssonDistanceMapImageFilterIUL2IF2_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterIUL2IF2_Pointer const & r);
     itkSignedDanielssonDistanceMapImageFilterIUL2IF2_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterIUL2IF2 * r);
     itkSignedDanielssonDistanceMapImageFilterIUL2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSignedDanielssonDistanceMapImageFilterIUL3ID3 : public itkImageToImageFilterIUL3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkSignedDanielssonDistanceMapImageFilterIUL3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     itkImageD3 * GetVoronoiMap();
     itkImageD3 * GetDistanceMap();
     itkImageO33 * GetVectorDistanceMap();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
   private:
     itkSignedDanielssonDistanceMapImageFilterIUL3ID3(itkSignedDanielssonDistanceMapImageFilterIUL3ID3 const & arg0);
     void operator=(itkSignedDanielssonDistanceMapImageFilterIUL3ID3 const & arg0);
   protected:
     itkSignedDanielssonDistanceMapImageFilterIUL3ID3();
     ~itkSignedDanielssonDistanceMapImageFilterIUL3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkSignedDanielssonDistanceMapImageFilterIUL3ID3_Pointer {
   public:
     itkSignedDanielssonDistanceMapImageFilterIUL3ID3_Pointer();
     itkSignedDanielssonDistanceMapImageFilterIUL3ID3_Pointer(itkSignedDanielssonDistanceMapImageFilterIUL3ID3_Pointer const & p);
     itkSignedDanielssonDistanceMapImageFilterIUL3ID3_Pointer(itkSignedDanielssonDistanceMapImageFilterIUL3ID3 * p);
     ~itkSignedDanielssonDistanceMapImageFilterIUL3ID3_Pointer();
     itkSignedDanielssonDistanceMapImageFilterIUL3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedDanielssonDistanceMapImageFilterIUL3ID3 * GetPointer() const;
     bool operator<(itkSignedDanielssonDistanceMapImageFilterIUL3ID3_Pointer const & r) const;
     bool operator>(itkSignedDanielssonDistanceMapImageFilterIUL3ID3_Pointer const & r) const;
     bool operator<=(itkSignedDanielssonDistanceMapImageFilterIUL3ID3_Pointer const & r) const;
     bool operator>=(itkSignedDanielssonDistanceMapImageFilterIUL3ID3_Pointer const & r) const;
     itkSignedDanielssonDistanceMapImageFilterIUL3ID3_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterIUL3ID3_Pointer const & r);
     itkSignedDanielssonDistanceMapImageFilterIUL3ID3_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterIUL3ID3 * r);
     itkSignedDanielssonDistanceMapImageFilterIUL3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSignedDanielssonDistanceMapImageFilterIUL3IF3 : public itkImageToImageFilterIUL3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkSignedDanielssonDistanceMapImageFilterIUL3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     itkImageF3 * GetVoronoiMap();
     itkImageF3 * GetDistanceMap();
     itkImageO33 * GetVectorDistanceMap();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
   private:
     itkSignedDanielssonDistanceMapImageFilterIUL3IF3(itkSignedDanielssonDistanceMapImageFilterIUL3IF3 const & arg0);
     void operator=(itkSignedDanielssonDistanceMapImageFilterIUL3IF3 const & arg0);
   protected:
     itkSignedDanielssonDistanceMapImageFilterIUL3IF3();
     ~itkSignedDanielssonDistanceMapImageFilterIUL3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkSignedDanielssonDistanceMapImageFilterIUL3IF3_Pointer {
   public:
     itkSignedDanielssonDistanceMapImageFilterIUL3IF3_Pointer();
     itkSignedDanielssonDistanceMapImageFilterIUL3IF3_Pointer(itkSignedDanielssonDistanceMapImageFilterIUL3IF3_Pointer const & p);
     itkSignedDanielssonDistanceMapImageFilterIUL3IF3_Pointer(itkSignedDanielssonDistanceMapImageFilterIUL3IF3 * p);
     ~itkSignedDanielssonDistanceMapImageFilterIUL3IF3_Pointer();
     itkSignedDanielssonDistanceMapImageFilterIUL3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedDanielssonDistanceMapImageFilterIUL3IF3 * GetPointer() const;
     bool operator<(itkSignedDanielssonDistanceMapImageFilterIUL3IF3_Pointer const & r) const;
     bool operator>(itkSignedDanielssonDistanceMapImageFilterIUL3IF3_Pointer const & r) const;
     bool operator<=(itkSignedDanielssonDistanceMapImageFilterIUL3IF3_Pointer const & r) const;
     bool operator>=(itkSignedDanielssonDistanceMapImageFilterIUL3IF3_Pointer const & r) const;
     itkSignedDanielssonDistanceMapImageFilterIUL3IF3_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterIUL3IF3_Pointer const & r);
     itkSignedDanielssonDistanceMapImageFilterIUL3IF3_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterIUL3IF3 * r);
     itkSignedDanielssonDistanceMapImageFilterIUL3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSignedDanielssonDistanceMapImageFilterIUS2ID2 : public itkImageToImageFilterIUS2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkSignedDanielssonDistanceMapImageFilterIUS2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     itkImageD2 * GetVoronoiMap();
     itkImageD2 * GetDistanceMap();
     itkImageO22 * GetVectorDistanceMap();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
   private:
     itkSignedDanielssonDistanceMapImageFilterIUS2ID2(itkSignedDanielssonDistanceMapImageFilterIUS2ID2 const & arg0);
     void operator=(itkSignedDanielssonDistanceMapImageFilterIUS2ID2 const & arg0);
   protected:
     itkSignedDanielssonDistanceMapImageFilterIUS2ID2();
     ~itkSignedDanielssonDistanceMapImageFilterIUS2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkSignedDanielssonDistanceMapImageFilterIUS2ID2_Pointer {
   public:
     itkSignedDanielssonDistanceMapImageFilterIUS2ID2_Pointer();
     itkSignedDanielssonDistanceMapImageFilterIUS2ID2_Pointer(itkSignedDanielssonDistanceMapImageFilterIUS2ID2_Pointer const & p);
     itkSignedDanielssonDistanceMapImageFilterIUS2ID2_Pointer(itkSignedDanielssonDistanceMapImageFilterIUS2ID2 * p);
     ~itkSignedDanielssonDistanceMapImageFilterIUS2ID2_Pointer();
     itkSignedDanielssonDistanceMapImageFilterIUS2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedDanielssonDistanceMapImageFilterIUS2ID2 * GetPointer() const;
     bool operator<(itkSignedDanielssonDistanceMapImageFilterIUS2ID2_Pointer const & r) const;
     bool operator>(itkSignedDanielssonDistanceMapImageFilterIUS2ID2_Pointer const & r) const;
     bool operator<=(itkSignedDanielssonDistanceMapImageFilterIUS2ID2_Pointer const & r) const;
     bool operator>=(itkSignedDanielssonDistanceMapImageFilterIUS2ID2_Pointer const & r) const;
     itkSignedDanielssonDistanceMapImageFilterIUS2ID2_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterIUS2ID2_Pointer const & r);
     itkSignedDanielssonDistanceMapImageFilterIUS2ID2_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterIUS2ID2 * r);
     itkSignedDanielssonDistanceMapImageFilterIUS2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSignedDanielssonDistanceMapImageFilterIUS2IF2 : public itkImageToImageFilterIUS2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkSignedDanielssonDistanceMapImageFilterIUS2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     itkImageF2 * GetVoronoiMap();
     itkImageF2 * GetDistanceMap();
     itkImageO22 * GetVectorDistanceMap();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
   private:
     itkSignedDanielssonDistanceMapImageFilterIUS2IF2(itkSignedDanielssonDistanceMapImageFilterIUS2IF2 const & arg0);
     void operator=(itkSignedDanielssonDistanceMapImageFilterIUS2IF2 const & arg0);
   protected:
     itkSignedDanielssonDistanceMapImageFilterIUS2IF2();
     ~itkSignedDanielssonDistanceMapImageFilterIUS2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkSignedDanielssonDistanceMapImageFilterIUS2IF2_Pointer {
   public:
     itkSignedDanielssonDistanceMapImageFilterIUS2IF2_Pointer();
     itkSignedDanielssonDistanceMapImageFilterIUS2IF2_Pointer(itkSignedDanielssonDistanceMapImageFilterIUS2IF2_Pointer const & p);
     itkSignedDanielssonDistanceMapImageFilterIUS2IF2_Pointer(itkSignedDanielssonDistanceMapImageFilterIUS2IF2 * p);
     ~itkSignedDanielssonDistanceMapImageFilterIUS2IF2_Pointer();
     itkSignedDanielssonDistanceMapImageFilterIUS2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedDanielssonDistanceMapImageFilterIUS2IF2 * GetPointer() const;
     bool operator<(itkSignedDanielssonDistanceMapImageFilterIUS2IF2_Pointer const & r) const;
     bool operator>(itkSignedDanielssonDistanceMapImageFilterIUS2IF2_Pointer const & r) const;
     bool operator<=(itkSignedDanielssonDistanceMapImageFilterIUS2IF2_Pointer const & r) const;
     bool operator>=(itkSignedDanielssonDistanceMapImageFilterIUS2IF2_Pointer const & r) const;
     itkSignedDanielssonDistanceMapImageFilterIUS2IF2_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterIUS2IF2_Pointer const & r);
     itkSignedDanielssonDistanceMapImageFilterIUS2IF2_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterIUS2IF2 * r);
     itkSignedDanielssonDistanceMapImageFilterIUS2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSignedDanielssonDistanceMapImageFilterIUS3ID3 : public itkImageToImageFilterIUS3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkSignedDanielssonDistanceMapImageFilterIUS3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     itkImageD3 * GetVoronoiMap();
     itkImageD3 * GetDistanceMap();
     itkImageO33 * GetVectorDistanceMap();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
   private:
     itkSignedDanielssonDistanceMapImageFilterIUS3ID3(itkSignedDanielssonDistanceMapImageFilterIUS3ID3 const & arg0);
     void operator=(itkSignedDanielssonDistanceMapImageFilterIUS3ID3 const & arg0);
   protected:
     itkSignedDanielssonDistanceMapImageFilterIUS3ID3();
     ~itkSignedDanielssonDistanceMapImageFilterIUS3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkSignedDanielssonDistanceMapImageFilterIUS3ID3_Pointer {
   public:
     itkSignedDanielssonDistanceMapImageFilterIUS3ID3_Pointer();
     itkSignedDanielssonDistanceMapImageFilterIUS3ID3_Pointer(itkSignedDanielssonDistanceMapImageFilterIUS3ID3_Pointer const & p);
     itkSignedDanielssonDistanceMapImageFilterIUS3ID3_Pointer(itkSignedDanielssonDistanceMapImageFilterIUS3ID3 * p);
     ~itkSignedDanielssonDistanceMapImageFilterIUS3ID3_Pointer();
     itkSignedDanielssonDistanceMapImageFilterIUS3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedDanielssonDistanceMapImageFilterIUS3ID3 * GetPointer() const;
     bool operator<(itkSignedDanielssonDistanceMapImageFilterIUS3ID3_Pointer const & r) const;
     bool operator>(itkSignedDanielssonDistanceMapImageFilterIUS3ID3_Pointer const & r) const;
     bool operator<=(itkSignedDanielssonDistanceMapImageFilterIUS3ID3_Pointer const & r) const;
     bool operator>=(itkSignedDanielssonDistanceMapImageFilterIUS3ID3_Pointer const & r) const;
     itkSignedDanielssonDistanceMapImageFilterIUS3ID3_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterIUS3ID3_Pointer const & r);
     itkSignedDanielssonDistanceMapImageFilterIUS3ID3_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterIUS3ID3 * r);
     itkSignedDanielssonDistanceMapImageFilterIUS3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSignedDanielssonDistanceMapImageFilterIUS3IF3 : public itkImageToImageFilterIUS3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkSignedDanielssonDistanceMapImageFilterIUS3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSquaredDistance(bool const _arg);
     virtual bool const & GetSquaredDistance() const;
     virtual void SquaredDistanceOn();
     virtual void SquaredDistanceOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
     virtual void SetInsideIsPositive(bool const _arg);
     virtual bool const & GetInsideIsPositive() const;
     virtual void InsideIsPositiveOn();
     virtual void InsideIsPositiveOff();
     itkImageF3 * GetVoronoiMap();
     itkImageF3 * GetDistanceMap();
     itkImageO33 * GetVectorDistanceMap();
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
   private:
     itkSignedDanielssonDistanceMapImageFilterIUS3IF3(itkSignedDanielssonDistanceMapImageFilterIUS3IF3 const & arg0);
     void operator=(itkSignedDanielssonDistanceMapImageFilterIUS3IF3 const & arg0);
   protected:
     itkSignedDanielssonDistanceMapImageFilterIUS3IF3();
     ~itkSignedDanielssonDistanceMapImageFilterIUS3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkSignedDanielssonDistanceMapImageFilterIUS3IF3_Pointer {
   public:
     itkSignedDanielssonDistanceMapImageFilterIUS3IF3_Pointer();
     itkSignedDanielssonDistanceMapImageFilterIUS3IF3_Pointer(itkSignedDanielssonDistanceMapImageFilterIUS3IF3_Pointer const & p);
     itkSignedDanielssonDistanceMapImageFilterIUS3IF3_Pointer(itkSignedDanielssonDistanceMapImageFilterIUS3IF3 * p);
     ~itkSignedDanielssonDistanceMapImageFilterIUS3IF3_Pointer();
     itkSignedDanielssonDistanceMapImageFilterIUS3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSignedDanielssonDistanceMapImageFilterIUS3IF3 * GetPointer() const;
     bool operator<(itkSignedDanielssonDistanceMapImageFilterIUS3IF3_Pointer const & r) const;
     bool operator>(itkSignedDanielssonDistanceMapImageFilterIUS3IF3_Pointer const & r) const;
     bool operator<=(itkSignedDanielssonDistanceMapImageFilterIUS3IF3_Pointer const & r) const;
     bool operator>=(itkSignedDanielssonDistanceMapImageFilterIUS3IF3_Pointer const & r) const;
     itkSignedDanielssonDistanceMapImageFilterIUS3IF3_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterIUS3IF3_Pointer const & r);
     itkSignedDanielssonDistanceMapImageFilterIUS3IF3_Pointer & operator=(itkSignedDanielssonDistanceMapImageFilterIUS3IF3 * r);
     itkSignedDanielssonDistanceMapImageFilterIUS3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


