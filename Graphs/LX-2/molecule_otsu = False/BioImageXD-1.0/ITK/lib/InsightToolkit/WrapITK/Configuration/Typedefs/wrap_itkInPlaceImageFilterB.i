// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkInPlaceImageFilterBChicken
#endif
#ifdef SWIGCSHARP
%module itkInPlaceImageFilterBCsharp
#endif
#ifdef SWIGGUILE
%module itkInPlaceImageFilterBGuile
#endif
#ifdef SWIGJAVA
%module itkInPlaceImageFilterBJava
#endif
#ifdef SWIGLUA
%module itkInPlaceImageFilterBLua
#endif
#ifdef SWIGMODULA3
%module itkInPlaceImageFilterBModula3
#endif
#ifdef SWIGMZSCHEME
%module itkInPlaceImageFilterBMzscheme
#endif
#ifdef SWIGOCAML
%module itkInPlaceImageFilterBOcaml
#endif
#ifdef SWIGPERL
%module itkInPlaceImageFilterBPerl
#endif
#ifdef SWIGPERL5
%module itkInPlaceImageFilterBPerl5
#endif
#ifdef SWIGPHP
%module itkInPlaceImageFilterBPhp
#endif
#ifdef SWIGPHP4
%module itkInPlaceImageFilterBPhp4
#endif
#ifdef SWIGPHP5
%module itkInPlaceImageFilterBPhp5
#endif
#ifdef SWIGPIKE
%module itkInPlaceImageFilterBPike
#endif
#ifdef SWIGPYTHON
%module itkInPlaceImageFilterBPython
#endif
#ifdef SWIGR
%module itkInPlaceImageFilterBR
#endif
#ifdef SWIGRUBY
%module itkInPlaceImageFilterBRuby
#endif
#ifdef SWIGSEXP
%module itkInPlaceImageFilterBSexp
#endif
#ifdef SWIGTCL
%module itkInPlaceImageFilterBTcl
#endif
#ifdef SWIGXML
%module itkInPlaceImageFilterBXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImageToImageFilterB.i


%include itk.i
%include wrap_itkInPlaceImageFilterB_ext.i


 class itkInPlaceImageFilterICF2ICF2 : public itkImageToImageFilterICF2ICF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterICF2ICF2(itkInPlaceImageFilterICF2ICF2 const & arg0);
     void operator=(itkInPlaceImageFilterICF2ICF2 const & arg0);
   protected:
     itkInPlaceImageFilterICF2ICF2();
     ~itkInPlaceImageFilterICF2ICF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterICF2ICF2_Pointer {
   public:
     itkInPlaceImageFilterICF2ICF2_Pointer();
     itkInPlaceImageFilterICF2ICF2_Pointer(itkInPlaceImageFilterICF2ICF2_Pointer const & p);
     itkInPlaceImageFilterICF2ICF2_Pointer(itkInPlaceImageFilterICF2ICF2 * p);
     ~itkInPlaceImageFilterICF2ICF2_Pointer();
     itkInPlaceImageFilterICF2ICF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterICF2ICF2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterICF2ICF2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterICF2ICF2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterICF2ICF2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterICF2ICF2_Pointer const & r) const;
     itkInPlaceImageFilterICF2ICF2_Pointer & operator=(itkInPlaceImageFilterICF2ICF2_Pointer const & r);
     itkInPlaceImageFilterICF2ICF2_Pointer & operator=(itkInPlaceImageFilterICF2ICF2 * r);
     itkInPlaceImageFilterICF2ICF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterICF2ID2 : public itkImageToImageFilterICF2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterICF2ID2(itkInPlaceImageFilterICF2ID2 const & arg0);
     void operator=(itkInPlaceImageFilterICF2ID2 const & arg0);
   protected:
     itkInPlaceImageFilterICF2ID2();
     ~itkInPlaceImageFilterICF2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterICF2ID2_Pointer {
   public:
     itkInPlaceImageFilterICF2ID2_Pointer();
     itkInPlaceImageFilterICF2ID2_Pointer(itkInPlaceImageFilterICF2ID2_Pointer const & p);
     itkInPlaceImageFilterICF2ID2_Pointer(itkInPlaceImageFilterICF2ID2 * p);
     ~itkInPlaceImageFilterICF2ID2_Pointer();
     itkInPlaceImageFilterICF2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterICF2ID2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterICF2ID2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterICF2ID2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterICF2ID2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterICF2ID2_Pointer const & r) const;
     itkInPlaceImageFilterICF2ID2_Pointer & operator=(itkInPlaceImageFilterICF2ID2_Pointer const & r);
     itkInPlaceImageFilterICF2ID2_Pointer & operator=(itkInPlaceImageFilterICF2ID2 * r);
     itkInPlaceImageFilterICF2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterICF2IF2 : public itkImageToImageFilterICF2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterICF2IF2(itkInPlaceImageFilterICF2IF2 const & arg0);
     void operator=(itkInPlaceImageFilterICF2IF2 const & arg0);
   protected:
     itkInPlaceImageFilterICF2IF2();
     ~itkInPlaceImageFilterICF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterICF2IF2_Pointer {
   public:
     itkInPlaceImageFilterICF2IF2_Pointer();
     itkInPlaceImageFilterICF2IF2_Pointer(itkInPlaceImageFilterICF2IF2_Pointer const & p);
     itkInPlaceImageFilterICF2IF2_Pointer(itkInPlaceImageFilterICF2IF2 * p);
     ~itkInPlaceImageFilterICF2IF2_Pointer();
     itkInPlaceImageFilterICF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterICF2IF2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterICF2IF2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterICF2IF2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterICF2IF2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterICF2IF2_Pointer const & r) const;
     itkInPlaceImageFilterICF2IF2_Pointer & operator=(itkInPlaceImageFilterICF2IF2_Pointer const & r);
     itkInPlaceImageFilterICF2IF2_Pointer & operator=(itkInPlaceImageFilterICF2IF2 * r);
     itkInPlaceImageFilterICF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterICF3ICF3 : public itkImageToImageFilterICF3ICF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterICF3ICF3(itkInPlaceImageFilterICF3ICF3 const & arg0);
     void operator=(itkInPlaceImageFilterICF3ICF3 const & arg0);
   protected:
     itkInPlaceImageFilterICF3ICF3();
     ~itkInPlaceImageFilterICF3ICF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterICF3ICF3_Pointer {
   public:
     itkInPlaceImageFilterICF3ICF3_Pointer();
     itkInPlaceImageFilterICF3ICF3_Pointer(itkInPlaceImageFilterICF3ICF3_Pointer const & p);
     itkInPlaceImageFilterICF3ICF3_Pointer(itkInPlaceImageFilterICF3ICF3 * p);
     ~itkInPlaceImageFilterICF3ICF3_Pointer();
     itkInPlaceImageFilterICF3ICF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterICF3ICF3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterICF3ICF3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterICF3ICF3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterICF3ICF3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterICF3ICF3_Pointer const & r) const;
     itkInPlaceImageFilterICF3ICF3_Pointer & operator=(itkInPlaceImageFilterICF3ICF3_Pointer const & r);
     itkInPlaceImageFilterICF3ICF3_Pointer & operator=(itkInPlaceImageFilterICF3ICF3 * r);
     itkInPlaceImageFilterICF3ICF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterICF3ID3 : public itkImageToImageFilterICF3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterICF3ID3(itkInPlaceImageFilterICF3ID3 const & arg0);
     void operator=(itkInPlaceImageFilterICF3ID3 const & arg0);
   protected:
     itkInPlaceImageFilterICF3ID3();
     ~itkInPlaceImageFilterICF3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterICF3ID3_Pointer {
   public:
     itkInPlaceImageFilterICF3ID3_Pointer();
     itkInPlaceImageFilterICF3ID3_Pointer(itkInPlaceImageFilterICF3ID3_Pointer const & p);
     itkInPlaceImageFilterICF3ID3_Pointer(itkInPlaceImageFilterICF3ID3 * p);
     ~itkInPlaceImageFilterICF3ID3_Pointer();
     itkInPlaceImageFilterICF3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterICF3ID3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterICF3ID3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterICF3ID3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterICF3ID3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterICF3ID3_Pointer const & r) const;
     itkInPlaceImageFilterICF3ID3_Pointer & operator=(itkInPlaceImageFilterICF3ID3_Pointer const & r);
     itkInPlaceImageFilterICF3ID3_Pointer & operator=(itkInPlaceImageFilterICF3ID3 * r);
     itkInPlaceImageFilterICF3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterICF3IF3 : public itkImageToImageFilterICF3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterICF3IF3(itkInPlaceImageFilterICF3IF3 const & arg0);
     void operator=(itkInPlaceImageFilterICF3IF3 const & arg0);
   protected:
     itkInPlaceImageFilterICF3IF3();
     ~itkInPlaceImageFilterICF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterICF3IF3_Pointer {
   public:
     itkInPlaceImageFilterICF3IF3_Pointer();
     itkInPlaceImageFilterICF3IF3_Pointer(itkInPlaceImageFilterICF3IF3_Pointer const & p);
     itkInPlaceImageFilterICF3IF3_Pointer(itkInPlaceImageFilterICF3IF3 * p);
     ~itkInPlaceImageFilterICF3IF3_Pointer();
     itkInPlaceImageFilterICF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterICF3IF3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterICF3IF3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterICF3IF3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterICF3IF3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterICF3IF3_Pointer const & r) const;
     itkInPlaceImageFilterICF3IF3_Pointer & operator=(itkInPlaceImageFilterICF3IF3_Pointer const & r);
     itkInPlaceImageFilterICF3IF3_Pointer & operator=(itkInPlaceImageFilterICF3IF3 * r);
     itkInPlaceImageFilterICF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterICVF22ID2 : public itkImageToImageFilterICVF22ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterICVF22ID2(itkInPlaceImageFilterICVF22ID2 const & arg0);
     void operator=(itkInPlaceImageFilterICVF22ID2 const & arg0);
   protected:
     itkInPlaceImageFilterICVF22ID2();
     ~itkInPlaceImageFilterICVF22ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterICVF22ID2_Pointer {
   public:
     itkInPlaceImageFilterICVF22ID2_Pointer();
     itkInPlaceImageFilterICVF22ID2_Pointer(itkInPlaceImageFilterICVF22ID2_Pointer const & p);
     itkInPlaceImageFilterICVF22ID2_Pointer(itkInPlaceImageFilterICVF22ID2 * p);
     ~itkInPlaceImageFilterICVF22ID2_Pointer();
     itkInPlaceImageFilterICVF22ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterICVF22ID2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterICVF22ID2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterICVF22ID2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterICVF22ID2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterICVF22ID2_Pointer const & r) const;
     itkInPlaceImageFilterICVF22ID2_Pointer & operator=(itkInPlaceImageFilterICVF22ID2_Pointer const & r);
     itkInPlaceImageFilterICVF22ID2_Pointer & operator=(itkInPlaceImageFilterICVF22ID2 * r);
     itkInPlaceImageFilterICVF22ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterICVF22IF2 : public itkImageToImageFilterICVF22IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterICVF22IF2(itkInPlaceImageFilterICVF22IF2 const & arg0);
     void operator=(itkInPlaceImageFilterICVF22IF2 const & arg0);
   protected:
     itkInPlaceImageFilterICVF22IF2();
     ~itkInPlaceImageFilterICVF22IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterICVF22IF2_Pointer {
   public:
     itkInPlaceImageFilterICVF22IF2_Pointer();
     itkInPlaceImageFilterICVF22IF2_Pointer(itkInPlaceImageFilterICVF22IF2_Pointer const & p);
     itkInPlaceImageFilterICVF22IF2_Pointer(itkInPlaceImageFilterICVF22IF2 * p);
     ~itkInPlaceImageFilterICVF22IF2_Pointer();
     itkInPlaceImageFilterICVF22IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterICVF22IF2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterICVF22IF2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterICVF22IF2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterICVF22IF2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterICVF22IF2_Pointer const & r) const;
     itkInPlaceImageFilterICVF22IF2_Pointer & operator=(itkInPlaceImageFilterICVF22IF2_Pointer const & r);
     itkInPlaceImageFilterICVF22IF2_Pointer & operator=(itkInPlaceImageFilterICVF22IF2 * r);
     itkInPlaceImageFilterICVF22IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterICVF22IUC2 : public itkImageToImageFilterICVF22IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterICVF22IUC2(itkInPlaceImageFilterICVF22IUC2 const & arg0);
     void operator=(itkInPlaceImageFilterICVF22IUC2 const & arg0);
   protected:
     itkInPlaceImageFilterICVF22IUC2();
     ~itkInPlaceImageFilterICVF22IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterICVF22IUC2_Pointer {
   public:
     itkInPlaceImageFilterICVF22IUC2_Pointer();
     itkInPlaceImageFilterICVF22IUC2_Pointer(itkInPlaceImageFilterICVF22IUC2_Pointer const & p);
     itkInPlaceImageFilterICVF22IUC2_Pointer(itkInPlaceImageFilterICVF22IUC2 * p);
     ~itkInPlaceImageFilterICVF22IUC2_Pointer();
     itkInPlaceImageFilterICVF22IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterICVF22IUC2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterICVF22IUC2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterICVF22IUC2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterICVF22IUC2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterICVF22IUC2_Pointer const & r) const;
     itkInPlaceImageFilterICVF22IUC2_Pointer & operator=(itkInPlaceImageFilterICVF22IUC2_Pointer const & r);
     itkInPlaceImageFilterICVF22IUC2_Pointer & operator=(itkInPlaceImageFilterICVF22IUC2 * r);
     itkInPlaceImageFilterICVF22IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterICVF22IUL2 : public itkImageToImageFilterICVF22IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterICVF22IUL2(itkInPlaceImageFilterICVF22IUL2 const & arg0);
     void operator=(itkInPlaceImageFilterICVF22IUL2 const & arg0);
   protected:
     itkInPlaceImageFilterICVF22IUL2();
     ~itkInPlaceImageFilterICVF22IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterICVF22IUL2_Pointer {
   public:
     itkInPlaceImageFilterICVF22IUL2_Pointer();
     itkInPlaceImageFilterICVF22IUL2_Pointer(itkInPlaceImageFilterICVF22IUL2_Pointer const & p);
     itkInPlaceImageFilterICVF22IUL2_Pointer(itkInPlaceImageFilterICVF22IUL2 * p);
     ~itkInPlaceImageFilterICVF22IUL2_Pointer();
     itkInPlaceImageFilterICVF22IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterICVF22IUL2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterICVF22IUL2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterICVF22IUL2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterICVF22IUL2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterICVF22IUL2_Pointer const & r) const;
     itkInPlaceImageFilterICVF22IUL2_Pointer & operator=(itkInPlaceImageFilterICVF22IUL2_Pointer const & r);
     itkInPlaceImageFilterICVF22IUL2_Pointer & operator=(itkInPlaceImageFilterICVF22IUL2 * r);
     itkInPlaceImageFilterICVF22IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterICVF22IUS2 : public itkImageToImageFilterICVF22IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterICVF22IUS2(itkInPlaceImageFilterICVF22IUS2 const & arg0);
     void operator=(itkInPlaceImageFilterICVF22IUS2 const & arg0);
   protected:
     itkInPlaceImageFilterICVF22IUS2();
     ~itkInPlaceImageFilterICVF22IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterICVF22IUS2_Pointer {
   public:
     itkInPlaceImageFilterICVF22IUS2_Pointer();
     itkInPlaceImageFilterICVF22IUS2_Pointer(itkInPlaceImageFilterICVF22IUS2_Pointer const & p);
     itkInPlaceImageFilterICVF22IUS2_Pointer(itkInPlaceImageFilterICVF22IUS2 * p);
     ~itkInPlaceImageFilterICVF22IUS2_Pointer();
     itkInPlaceImageFilterICVF22IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterICVF22IUS2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterICVF22IUS2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterICVF22IUS2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterICVF22IUS2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterICVF22IUS2_Pointer const & r) const;
     itkInPlaceImageFilterICVF22IUS2_Pointer & operator=(itkInPlaceImageFilterICVF22IUS2_Pointer const & r);
     itkInPlaceImageFilterICVF22IUS2_Pointer & operator=(itkInPlaceImageFilterICVF22IUS2 * r);
     itkInPlaceImageFilterICVF22IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterICVF33ID3 : public itkImageToImageFilterICVF33ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterICVF33ID3(itkInPlaceImageFilterICVF33ID3 const & arg0);
     void operator=(itkInPlaceImageFilterICVF33ID3 const & arg0);
   protected:
     itkInPlaceImageFilterICVF33ID3();
     ~itkInPlaceImageFilterICVF33ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterICVF33ID3_Pointer {
   public:
     itkInPlaceImageFilterICVF33ID3_Pointer();
     itkInPlaceImageFilterICVF33ID3_Pointer(itkInPlaceImageFilterICVF33ID3_Pointer const & p);
     itkInPlaceImageFilterICVF33ID3_Pointer(itkInPlaceImageFilterICVF33ID3 * p);
     ~itkInPlaceImageFilterICVF33ID3_Pointer();
     itkInPlaceImageFilterICVF33ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterICVF33ID3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterICVF33ID3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterICVF33ID3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterICVF33ID3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterICVF33ID3_Pointer const & r) const;
     itkInPlaceImageFilterICVF33ID3_Pointer & operator=(itkInPlaceImageFilterICVF33ID3_Pointer const & r);
     itkInPlaceImageFilterICVF33ID3_Pointer & operator=(itkInPlaceImageFilterICVF33ID3 * r);
     itkInPlaceImageFilterICVF33ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterICVF33IF3 : public itkImageToImageFilterICVF33IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterICVF33IF3(itkInPlaceImageFilterICVF33IF3 const & arg0);
     void operator=(itkInPlaceImageFilterICVF33IF3 const & arg0);
   protected:
     itkInPlaceImageFilterICVF33IF3();
     ~itkInPlaceImageFilterICVF33IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterICVF33IF3_Pointer {
   public:
     itkInPlaceImageFilterICVF33IF3_Pointer();
     itkInPlaceImageFilterICVF33IF3_Pointer(itkInPlaceImageFilterICVF33IF3_Pointer const & p);
     itkInPlaceImageFilterICVF33IF3_Pointer(itkInPlaceImageFilterICVF33IF3 * p);
     ~itkInPlaceImageFilterICVF33IF3_Pointer();
     itkInPlaceImageFilterICVF33IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterICVF33IF3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterICVF33IF3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterICVF33IF3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterICVF33IF3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterICVF33IF3_Pointer const & r) const;
     itkInPlaceImageFilterICVF33IF3_Pointer & operator=(itkInPlaceImageFilterICVF33IF3_Pointer const & r);
     itkInPlaceImageFilterICVF33IF3_Pointer & operator=(itkInPlaceImageFilterICVF33IF3 * r);
     itkInPlaceImageFilterICVF33IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterICVF33IUC3 : public itkImageToImageFilterICVF33IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterICVF33IUC3(itkInPlaceImageFilterICVF33IUC3 const & arg0);
     void operator=(itkInPlaceImageFilterICVF33IUC3 const & arg0);
   protected:
     itkInPlaceImageFilterICVF33IUC3();
     ~itkInPlaceImageFilterICVF33IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterICVF33IUC3_Pointer {
   public:
     itkInPlaceImageFilterICVF33IUC3_Pointer();
     itkInPlaceImageFilterICVF33IUC3_Pointer(itkInPlaceImageFilterICVF33IUC3_Pointer const & p);
     itkInPlaceImageFilterICVF33IUC3_Pointer(itkInPlaceImageFilterICVF33IUC3 * p);
     ~itkInPlaceImageFilterICVF33IUC3_Pointer();
     itkInPlaceImageFilterICVF33IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterICVF33IUC3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterICVF33IUC3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterICVF33IUC3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterICVF33IUC3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterICVF33IUC3_Pointer const & r) const;
     itkInPlaceImageFilterICVF33IUC3_Pointer & operator=(itkInPlaceImageFilterICVF33IUC3_Pointer const & r);
     itkInPlaceImageFilterICVF33IUC3_Pointer & operator=(itkInPlaceImageFilterICVF33IUC3 * r);
     itkInPlaceImageFilterICVF33IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterICVF33IUL3 : public itkImageToImageFilterICVF33IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterICVF33IUL3(itkInPlaceImageFilterICVF33IUL3 const & arg0);
     void operator=(itkInPlaceImageFilterICVF33IUL3 const & arg0);
   protected:
     itkInPlaceImageFilterICVF33IUL3();
     ~itkInPlaceImageFilterICVF33IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterICVF33IUL3_Pointer {
   public:
     itkInPlaceImageFilterICVF33IUL3_Pointer();
     itkInPlaceImageFilterICVF33IUL3_Pointer(itkInPlaceImageFilterICVF33IUL3_Pointer const & p);
     itkInPlaceImageFilterICVF33IUL3_Pointer(itkInPlaceImageFilterICVF33IUL3 * p);
     ~itkInPlaceImageFilterICVF33IUL3_Pointer();
     itkInPlaceImageFilterICVF33IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterICVF33IUL3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterICVF33IUL3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterICVF33IUL3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterICVF33IUL3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterICVF33IUL3_Pointer const & r) const;
     itkInPlaceImageFilterICVF33IUL3_Pointer & operator=(itkInPlaceImageFilterICVF33IUL3_Pointer const & r);
     itkInPlaceImageFilterICVF33IUL3_Pointer & operator=(itkInPlaceImageFilterICVF33IUL3 * r);
     itkInPlaceImageFilterICVF33IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterICVF33IUS3 : public itkImageToImageFilterICVF33IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterICVF33IUS3(itkInPlaceImageFilterICVF33IUS3 const & arg0);
     void operator=(itkInPlaceImageFilterICVF33IUS3 const & arg0);
   protected:
     itkInPlaceImageFilterICVF33IUS3();
     ~itkInPlaceImageFilterICVF33IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterICVF33IUS3_Pointer {
   public:
     itkInPlaceImageFilterICVF33IUS3_Pointer();
     itkInPlaceImageFilterICVF33IUS3_Pointer(itkInPlaceImageFilterICVF33IUS3_Pointer const & p);
     itkInPlaceImageFilterICVF33IUS3_Pointer(itkInPlaceImageFilterICVF33IUS3 * p);
     ~itkInPlaceImageFilterICVF33IUS3_Pointer();
     itkInPlaceImageFilterICVF33IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterICVF33IUS3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterICVF33IUS3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterICVF33IUS3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterICVF33IUS3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterICVF33IUS3_Pointer const & r) const;
     itkInPlaceImageFilterICVF33IUS3_Pointer & operator=(itkInPlaceImageFilterICVF33IUS3_Pointer const & r);
     itkInPlaceImageFilterICVF33IUS3_Pointer & operator=(itkInPlaceImageFilterICVF33IUS3 * r);
     itkInPlaceImageFilterICVF33IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterID2ICF2 : public itkImageToImageFilterID2ICF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterID2ICF2(itkInPlaceImageFilterID2ICF2 const & arg0);
     void operator=(itkInPlaceImageFilterID2ICF2 const & arg0);
   protected:
     itkInPlaceImageFilterID2ICF2();
     ~itkInPlaceImageFilterID2ICF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterID2ICF2_Pointer {
   public:
     itkInPlaceImageFilterID2ICF2_Pointer();
     itkInPlaceImageFilterID2ICF2_Pointer(itkInPlaceImageFilterID2ICF2_Pointer const & p);
     itkInPlaceImageFilterID2ICF2_Pointer(itkInPlaceImageFilterID2ICF2 * p);
     ~itkInPlaceImageFilterID2ICF2_Pointer();
     itkInPlaceImageFilterID2ICF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterID2ICF2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterID2ICF2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterID2ICF2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterID2ICF2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterID2ICF2_Pointer const & r) const;
     itkInPlaceImageFilterID2ICF2_Pointer & operator=(itkInPlaceImageFilterID2ICF2_Pointer const & r);
     itkInPlaceImageFilterID2ICF2_Pointer & operator=(itkInPlaceImageFilterID2ICF2 * r);
     itkInPlaceImageFilterID2ICF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterID2ICVF22 : public itkImageToImageFilterID2ICVF22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterID2ICVF22(itkInPlaceImageFilterID2ICVF22 const & arg0);
     void operator=(itkInPlaceImageFilterID2ICVF22 const & arg0);
   protected:
     itkInPlaceImageFilterID2ICVF22();
     ~itkInPlaceImageFilterID2ICVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterID2ICVF22_Pointer {
   public:
     itkInPlaceImageFilterID2ICVF22_Pointer();
     itkInPlaceImageFilterID2ICVF22_Pointer(itkInPlaceImageFilterID2ICVF22_Pointer const & p);
     itkInPlaceImageFilterID2ICVF22_Pointer(itkInPlaceImageFilterID2ICVF22 * p);
     ~itkInPlaceImageFilterID2ICVF22_Pointer();
     itkInPlaceImageFilterID2ICVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterID2ICVF22 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterID2ICVF22_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterID2ICVF22_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterID2ICVF22_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterID2ICVF22_Pointer const & r) const;
     itkInPlaceImageFilterID2ICVF22_Pointer & operator=(itkInPlaceImageFilterID2ICVF22_Pointer const & r);
     itkInPlaceImageFilterID2ICVF22_Pointer & operator=(itkInPlaceImageFilterID2ICVF22 * r);
     itkInPlaceImageFilterID2ICVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterID2IVF22 : public itkImageToImageFilterID2IVF22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterID2IVF22(itkInPlaceImageFilterID2IVF22 const & arg0);
     void operator=(itkInPlaceImageFilterID2IVF22 const & arg0);
   protected:
     itkInPlaceImageFilterID2IVF22();
     ~itkInPlaceImageFilterID2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterID2IVF22_Pointer {
   public:
     itkInPlaceImageFilterID2IVF22_Pointer();
     itkInPlaceImageFilterID2IVF22_Pointer(itkInPlaceImageFilterID2IVF22_Pointer const & p);
     itkInPlaceImageFilterID2IVF22_Pointer(itkInPlaceImageFilterID2IVF22 * p);
     ~itkInPlaceImageFilterID2IVF22_Pointer();
     itkInPlaceImageFilterID2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterID2IVF22 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterID2IVF22_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterID2IVF22_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterID2IVF22_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterID2IVF22_Pointer const & r) const;
     itkInPlaceImageFilterID2IVF22_Pointer & operator=(itkInPlaceImageFilterID2IVF22_Pointer const & r);
     itkInPlaceImageFilterID2IVF22_Pointer & operator=(itkInPlaceImageFilterID2IVF22 * r);
     itkInPlaceImageFilterID2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterID2VID2 : public itkImageToImageFilterID2VID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterID2VID2(itkInPlaceImageFilterID2VID2 const & arg0);
     void operator=(itkInPlaceImageFilterID2VID2 const & arg0);
   protected:
     itkInPlaceImageFilterID2VID2();
     ~itkInPlaceImageFilterID2VID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterID2VID2_Pointer {
   public:
     itkInPlaceImageFilterID2VID2_Pointer();
     itkInPlaceImageFilterID2VID2_Pointer(itkInPlaceImageFilterID2VID2_Pointer const & p);
     itkInPlaceImageFilterID2VID2_Pointer(itkInPlaceImageFilterID2VID2 * p);
     ~itkInPlaceImageFilterID2VID2_Pointer();
     itkInPlaceImageFilterID2VID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterID2VID2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterID2VID2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterID2VID2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterID2VID2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterID2VID2_Pointer const & r) const;
     itkInPlaceImageFilterID2VID2_Pointer & operator=(itkInPlaceImageFilterID2VID2_Pointer const & r);
     itkInPlaceImageFilterID2VID2_Pointer & operator=(itkInPlaceImageFilterID2VID2 * r);
     itkInPlaceImageFilterID2VID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterID3ICF3 : public itkImageToImageFilterID3ICF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterID3ICF3(itkInPlaceImageFilterID3ICF3 const & arg0);
     void operator=(itkInPlaceImageFilterID3ICF3 const & arg0);
   protected:
     itkInPlaceImageFilterID3ICF3();
     ~itkInPlaceImageFilterID3ICF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterID3ICF3_Pointer {
   public:
     itkInPlaceImageFilterID3ICF3_Pointer();
     itkInPlaceImageFilterID3ICF3_Pointer(itkInPlaceImageFilterID3ICF3_Pointer const & p);
     itkInPlaceImageFilterID3ICF3_Pointer(itkInPlaceImageFilterID3ICF3 * p);
     ~itkInPlaceImageFilterID3ICF3_Pointer();
     itkInPlaceImageFilterID3ICF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterID3ICF3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterID3ICF3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterID3ICF3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterID3ICF3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterID3ICF3_Pointer const & r) const;
     itkInPlaceImageFilterID3ICF3_Pointer & operator=(itkInPlaceImageFilterID3ICF3_Pointer const & r);
     itkInPlaceImageFilterID3ICF3_Pointer & operator=(itkInPlaceImageFilterID3ICF3 * r);
     itkInPlaceImageFilterID3ICF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterID3ICVF33 : public itkImageToImageFilterID3ICVF33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterID3ICVF33(itkInPlaceImageFilterID3ICVF33 const & arg0);
     void operator=(itkInPlaceImageFilterID3ICVF33 const & arg0);
   protected:
     itkInPlaceImageFilterID3ICVF33();
     ~itkInPlaceImageFilterID3ICVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterID3ICVF33_Pointer {
   public:
     itkInPlaceImageFilterID3ICVF33_Pointer();
     itkInPlaceImageFilterID3ICVF33_Pointer(itkInPlaceImageFilterID3ICVF33_Pointer const & p);
     itkInPlaceImageFilterID3ICVF33_Pointer(itkInPlaceImageFilterID3ICVF33 * p);
     ~itkInPlaceImageFilterID3ICVF33_Pointer();
     itkInPlaceImageFilterID3ICVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterID3ICVF33 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterID3ICVF33_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterID3ICVF33_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterID3ICVF33_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterID3ICVF33_Pointer const & r) const;
     itkInPlaceImageFilterID3ICVF33_Pointer & operator=(itkInPlaceImageFilterID3ICVF33_Pointer const & r);
     itkInPlaceImageFilterID3ICVF33_Pointer & operator=(itkInPlaceImageFilterID3ICVF33 * r);
     itkInPlaceImageFilterID3ICVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterID3IVF33 : public itkImageToImageFilterID3IVF33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterID3IVF33(itkInPlaceImageFilterID3IVF33 const & arg0);
     void operator=(itkInPlaceImageFilterID3IVF33 const & arg0);
   protected:
     itkInPlaceImageFilterID3IVF33();
     ~itkInPlaceImageFilterID3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterID3IVF33_Pointer {
   public:
     itkInPlaceImageFilterID3IVF33_Pointer();
     itkInPlaceImageFilterID3IVF33_Pointer(itkInPlaceImageFilterID3IVF33_Pointer const & p);
     itkInPlaceImageFilterID3IVF33_Pointer(itkInPlaceImageFilterID3IVF33 * p);
     ~itkInPlaceImageFilterID3IVF33_Pointer();
     itkInPlaceImageFilterID3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterID3IVF33 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterID3IVF33_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterID3IVF33_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterID3IVF33_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterID3IVF33_Pointer const & r) const;
     itkInPlaceImageFilterID3IVF33_Pointer & operator=(itkInPlaceImageFilterID3IVF33_Pointer const & r);
     itkInPlaceImageFilterID3IVF33_Pointer & operator=(itkInPlaceImageFilterID3IVF33 * r);
     itkInPlaceImageFilterID3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterID3VID3 : public itkImageToImageFilterID3VID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterID3VID3(itkInPlaceImageFilterID3VID3 const & arg0);
     void operator=(itkInPlaceImageFilterID3VID3 const & arg0);
   protected:
     itkInPlaceImageFilterID3VID3();
     ~itkInPlaceImageFilterID3VID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterID3VID3_Pointer {
   public:
     itkInPlaceImageFilterID3VID3_Pointer();
     itkInPlaceImageFilterID3VID3_Pointer(itkInPlaceImageFilterID3VID3_Pointer const & p);
     itkInPlaceImageFilterID3VID3_Pointer(itkInPlaceImageFilterID3VID3 * p);
     ~itkInPlaceImageFilterID3VID3_Pointer();
     itkInPlaceImageFilterID3VID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterID3VID3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterID3VID3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterID3VID3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterID3VID3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterID3VID3_Pointer const & r) const;
     itkInPlaceImageFilterID3VID3_Pointer & operator=(itkInPlaceImageFilterID3VID3_Pointer const & r);
     itkInPlaceImageFilterID3VID3_Pointer & operator=(itkInPlaceImageFilterID3VID3 * r);
     itkInPlaceImageFilterID3VID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIF2ICF2 : public itkImageToImageFilterIF2ICF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIF2ICF2(itkInPlaceImageFilterIF2ICF2 const & arg0);
     void operator=(itkInPlaceImageFilterIF2ICF2 const & arg0);
   protected:
     itkInPlaceImageFilterIF2ICF2();
     ~itkInPlaceImageFilterIF2ICF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIF2ICF2_Pointer {
   public:
     itkInPlaceImageFilterIF2ICF2_Pointer();
     itkInPlaceImageFilterIF2ICF2_Pointer(itkInPlaceImageFilterIF2ICF2_Pointer const & p);
     itkInPlaceImageFilterIF2ICF2_Pointer(itkInPlaceImageFilterIF2ICF2 * p);
     ~itkInPlaceImageFilterIF2ICF2_Pointer();
     itkInPlaceImageFilterIF2ICF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIF2ICF2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIF2ICF2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIF2ICF2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIF2ICF2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIF2ICF2_Pointer const & r) const;
     itkInPlaceImageFilterIF2ICF2_Pointer & operator=(itkInPlaceImageFilterIF2ICF2_Pointer const & r);
     itkInPlaceImageFilterIF2ICF2_Pointer & operator=(itkInPlaceImageFilterIF2ICF2 * r);
     itkInPlaceImageFilterIF2ICF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIF2ICVF22 : public itkImageToImageFilterIF2ICVF22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIF2ICVF22(itkInPlaceImageFilterIF2ICVF22 const & arg0);
     void operator=(itkInPlaceImageFilterIF2ICVF22 const & arg0);
   protected:
     itkInPlaceImageFilterIF2ICVF22();
     ~itkInPlaceImageFilterIF2ICVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIF2ICVF22_Pointer {
   public:
     itkInPlaceImageFilterIF2ICVF22_Pointer();
     itkInPlaceImageFilterIF2ICVF22_Pointer(itkInPlaceImageFilterIF2ICVF22_Pointer const & p);
     itkInPlaceImageFilterIF2ICVF22_Pointer(itkInPlaceImageFilterIF2ICVF22 * p);
     ~itkInPlaceImageFilterIF2ICVF22_Pointer();
     itkInPlaceImageFilterIF2ICVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIF2ICVF22 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIF2ICVF22_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIF2ICVF22_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIF2ICVF22_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIF2ICVF22_Pointer const & r) const;
     itkInPlaceImageFilterIF2ICVF22_Pointer & operator=(itkInPlaceImageFilterIF2ICVF22_Pointer const & r);
     itkInPlaceImageFilterIF2ICVF22_Pointer & operator=(itkInPlaceImageFilterIF2ICVF22 * r);
     itkInPlaceImageFilterIF2ICVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIF2IVF22 : public itkImageToImageFilterIF2IVF22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIF2IVF22(itkInPlaceImageFilterIF2IVF22 const & arg0);
     void operator=(itkInPlaceImageFilterIF2IVF22 const & arg0);
   protected:
     itkInPlaceImageFilterIF2IVF22();
     ~itkInPlaceImageFilterIF2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIF2IVF22_Pointer {
   public:
     itkInPlaceImageFilterIF2IVF22_Pointer();
     itkInPlaceImageFilterIF2IVF22_Pointer(itkInPlaceImageFilterIF2IVF22_Pointer const & p);
     itkInPlaceImageFilterIF2IVF22_Pointer(itkInPlaceImageFilterIF2IVF22 * p);
     ~itkInPlaceImageFilterIF2IVF22_Pointer();
     itkInPlaceImageFilterIF2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIF2IVF22 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIF2IVF22_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIF2IVF22_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIF2IVF22_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIF2IVF22_Pointer const & r) const;
     itkInPlaceImageFilterIF2IVF22_Pointer & operator=(itkInPlaceImageFilterIF2IVF22_Pointer const & r);
     itkInPlaceImageFilterIF2IVF22_Pointer & operator=(itkInPlaceImageFilterIF2IVF22 * r);
     itkInPlaceImageFilterIF2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIF2VIF2 : public itkImageToImageFilterIF2VIF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIF2VIF2(itkInPlaceImageFilterIF2VIF2 const & arg0);
     void operator=(itkInPlaceImageFilterIF2VIF2 const & arg0);
   protected:
     itkInPlaceImageFilterIF2VIF2();
     ~itkInPlaceImageFilterIF2VIF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIF2VIF2_Pointer {
   public:
     itkInPlaceImageFilterIF2VIF2_Pointer();
     itkInPlaceImageFilterIF2VIF2_Pointer(itkInPlaceImageFilterIF2VIF2_Pointer const & p);
     itkInPlaceImageFilterIF2VIF2_Pointer(itkInPlaceImageFilterIF2VIF2 * p);
     ~itkInPlaceImageFilterIF2VIF2_Pointer();
     itkInPlaceImageFilterIF2VIF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIF2VIF2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIF2VIF2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIF2VIF2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIF2VIF2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIF2VIF2_Pointer const & r) const;
     itkInPlaceImageFilterIF2VIF2_Pointer & operator=(itkInPlaceImageFilterIF2VIF2_Pointer const & r);
     itkInPlaceImageFilterIF2VIF2_Pointer & operator=(itkInPlaceImageFilterIF2VIF2 * r);
     itkInPlaceImageFilterIF2VIF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIF3ICF3 : public itkImageToImageFilterIF3ICF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIF3ICF3(itkInPlaceImageFilterIF3ICF3 const & arg0);
     void operator=(itkInPlaceImageFilterIF3ICF3 const & arg0);
   protected:
     itkInPlaceImageFilterIF3ICF3();
     ~itkInPlaceImageFilterIF3ICF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIF3ICF3_Pointer {
   public:
     itkInPlaceImageFilterIF3ICF3_Pointer();
     itkInPlaceImageFilterIF3ICF3_Pointer(itkInPlaceImageFilterIF3ICF3_Pointer const & p);
     itkInPlaceImageFilterIF3ICF3_Pointer(itkInPlaceImageFilterIF3ICF3 * p);
     ~itkInPlaceImageFilterIF3ICF3_Pointer();
     itkInPlaceImageFilterIF3ICF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIF3ICF3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIF3ICF3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIF3ICF3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIF3ICF3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIF3ICF3_Pointer const & r) const;
     itkInPlaceImageFilterIF3ICF3_Pointer & operator=(itkInPlaceImageFilterIF3ICF3_Pointer const & r);
     itkInPlaceImageFilterIF3ICF3_Pointer & operator=(itkInPlaceImageFilterIF3ICF3 * r);
     itkInPlaceImageFilterIF3ICF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIF3ICVF33 : public itkImageToImageFilterIF3ICVF33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIF3ICVF33(itkInPlaceImageFilterIF3ICVF33 const & arg0);
     void operator=(itkInPlaceImageFilterIF3ICVF33 const & arg0);
   protected:
     itkInPlaceImageFilterIF3ICVF33();
     ~itkInPlaceImageFilterIF3ICVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIF3ICVF33_Pointer {
   public:
     itkInPlaceImageFilterIF3ICVF33_Pointer();
     itkInPlaceImageFilterIF3ICVF33_Pointer(itkInPlaceImageFilterIF3ICVF33_Pointer const & p);
     itkInPlaceImageFilterIF3ICVF33_Pointer(itkInPlaceImageFilterIF3ICVF33 * p);
     ~itkInPlaceImageFilterIF3ICVF33_Pointer();
     itkInPlaceImageFilterIF3ICVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIF3ICVF33 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIF3ICVF33_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIF3ICVF33_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIF3ICVF33_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIF3ICVF33_Pointer const & r) const;
     itkInPlaceImageFilterIF3ICVF33_Pointer & operator=(itkInPlaceImageFilterIF3ICVF33_Pointer const & r);
     itkInPlaceImageFilterIF3ICVF33_Pointer & operator=(itkInPlaceImageFilterIF3ICVF33 * r);
     itkInPlaceImageFilterIF3ICVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIF3IVF33 : public itkImageToImageFilterIF3IVF33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIF3IVF33(itkInPlaceImageFilterIF3IVF33 const & arg0);
     void operator=(itkInPlaceImageFilterIF3IVF33 const & arg0);
   protected:
     itkInPlaceImageFilterIF3IVF33();
     ~itkInPlaceImageFilterIF3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIF3IVF33_Pointer {
   public:
     itkInPlaceImageFilterIF3IVF33_Pointer();
     itkInPlaceImageFilterIF3IVF33_Pointer(itkInPlaceImageFilterIF3IVF33_Pointer const & p);
     itkInPlaceImageFilterIF3IVF33_Pointer(itkInPlaceImageFilterIF3IVF33 * p);
     ~itkInPlaceImageFilterIF3IVF33_Pointer();
     itkInPlaceImageFilterIF3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIF3IVF33 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIF3IVF33_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIF3IVF33_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIF3IVF33_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIF3IVF33_Pointer const & r) const;
     itkInPlaceImageFilterIF3IVF33_Pointer & operator=(itkInPlaceImageFilterIF3IVF33_Pointer const & r);
     itkInPlaceImageFilterIF3IVF33_Pointer & operator=(itkInPlaceImageFilterIF3IVF33 * r);
     itkInPlaceImageFilterIF3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIF3VIF3 : public itkImageToImageFilterIF3VIF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIF3VIF3(itkInPlaceImageFilterIF3VIF3 const & arg0);
     void operator=(itkInPlaceImageFilterIF3VIF3 const & arg0);
   protected:
     itkInPlaceImageFilterIF3VIF3();
     ~itkInPlaceImageFilterIF3VIF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIF3VIF3_Pointer {
   public:
     itkInPlaceImageFilterIF3VIF3_Pointer();
     itkInPlaceImageFilterIF3VIF3_Pointer(itkInPlaceImageFilterIF3VIF3_Pointer const & p);
     itkInPlaceImageFilterIF3VIF3_Pointer(itkInPlaceImageFilterIF3VIF3 * p);
     ~itkInPlaceImageFilterIF3VIF3_Pointer();
     itkInPlaceImageFilterIF3VIF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIF3VIF3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIF3VIF3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIF3VIF3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIF3VIF3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIF3VIF3_Pointer const & r) const;
     itkInPlaceImageFilterIF3VIF3_Pointer & operator=(itkInPlaceImageFilterIF3VIF3_Pointer const & r);
     itkInPlaceImageFilterIF3VIF3_Pointer & operator=(itkInPlaceImageFilterIF3VIF3 * r);
     itkInPlaceImageFilterIF3VIF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUC2ICVF22 : public itkImageToImageFilterIUC2ICVF22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUC2ICVF22(itkInPlaceImageFilterIUC2ICVF22 const & arg0);
     void operator=(itkInPlaceImageFilterIUC2ICVF22 const & arg0);
   protected:
     itkInPlaceImageFilterIUC2ICVF22();
     ~itkInPlaceImageFilterIUC2ICVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUC2ICVF22_Pointer {
   public:
     itkInPlaceImageFilterIUC2ICVF22_Pointer();
     itkInPlaceImageFilterIUC2ICVF22_Pointer(itkInPlaceImageFilterIUC2ICVF22_Pointer const & p);
     itkInPlaceImageFilterIUC2ICVF22_Pointer(itkInPlaceImageFilterIUC2ICVF22 * p);
     ~itkInPlaceImageFilterIUC2ICVF22_Pointer();
     itkInPlaceImageFilterIUC2ICVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUC2ICVF22 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUC2ICVF22_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUC2ICVF22_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUC2ICVF22_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUC2ICVF22_Pointer const & r) const;
     itkInPlaceImageFilterIUC2ICVF22_Pointer & operator=(itkInPlaceImageFilterIUC2ICVF22_Pointer const & r);
     itkInPlaceImageFilterIUC2ICVF22_Pointer & operator=(itkInPlaceImageFilterIUC2ICVF22 * r);
     itkInPlaceImageFilterIUC2ICVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUC2IVF22 : public itkImageToImageFilterIUC2IVF22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUC2IVF22(itkInPlaceImageFilterIUC2IVF22 const & arg0);
     void operator=(itkInPlaceImageFilterIUC2IVF22 const & arg0);
   protected:
     itkInPlaceImageFilterIUC2IVF22();
     ~itkInPlaceImageFilterIUC2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUC2IVF22_Pointer {
   public:
     itkInPlaceImageFilterIUC2IVF22_Pointer();
     itkInPlaceImageFilterIUC2IVF22_Pointer(itkInPlaceImageFilterIUC2IVF22_Pointer const & p);
     itkInPlaceImageFilterIUC2IVF22_Pointer(itkInPlaceImageFilterIUC2IVF22 * p);
     ~itkInPlaceImageFilterIUC2IVF22_Pointer();
     itkInPlaceImageFilterIUC2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUC2IVF22 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUC2IVF22_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUC2IVF22_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUC2IVF22_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUC2IVF22_Pointer const & r) const;
     itkInPlaceImageFilterIUC2IVF22_Pointer & operator=(itkInPlaceImageFilterIUC2IVF22_Pointer const & r);
     itkInPlaceImageFilterIUC2IVF22_Pointer & operator=(itkInPlaceImageFilterIUC2IVF22 * r);
     itkInPlaceImageFilterIUC2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUC2VIUC2 : public itkImageToImageFilterIUC2VIUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUC2VIUC2(itkInPlaceImageFilterIUC2VIUC2 const & arg0);
     void operator=(itkInPlaceImageFilterIUC2VIUC2 const & arg0);
   protected:
     itkInPlaceImageFilterIUC2VIUC2();
     ~itkInPlaceImageFilterIUC2VIUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUC2VIUC2_Pointer {
   public:
     itkInPlaceImageFilterIUC2VIUC2_Pointer();
     itkInPlaceImageFilterIUC2VIUC2_Pointer(itkInPlaceImageFilterIUC2VIUC2_Pointer const & p);
     itkInPlaceImageFilterIUC2VIUC2_Pointer(itkInPlaceImageFilterIUC2VIUC2 * p);
     ~itkInPlaceImageFilterIUC2VIUC2_Pointer();
     itkInPlaceImageFilterIUC2VIUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUC2VIUC2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUC2VIUC2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUC2VIUC2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUC2VIUC2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUC2VIUC2_Pointer const & r) const;
     itkInPlaceImageFilterIUC2VIUC2_Pointer & operator=(itkInPlaceImageFilterIUC2VIUC2_Pointer const & r);
     itkInPlaceImageFilterIUC2VIUC2_Pointer & operator=(itkInPlaceImageFilterIUC2VIUC2 * r);
     itkInPlaceImageFilterIUC2VIUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUC3ICVF33 : public itkImageToImageFilterIUC3ICVF33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUC3ICVF33(itkInPlaceImageFilterIUC3ICVF33 const & arg0);
     void operator=(itkInPlaceImageFilterIUC3ICVF33 const & arg0);
   protected:
     itkInPlaceImageFilterIUC3ICVF33();
     ~itkInPlaceImageFilterIUC3ICVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUC3ICVF33_Pointer {
   public:
     itkInPlaceImageFilterIUC3ICVF33_Pointer();
     itkInPlaceImageFilterIUC3ICVF33_Pointer(itkInPlaceImageFilterIUC3ICVF33_Pointer const & p);
     itkInPlaceImageFilterIUC3ICVF33_Pointer(itkInPlaceImageFilterIUC3ICVF33 * p);
     ~itkInPlaceImageFilterIUC3ICVF33_Pointer();
     itkInPlaceImageFilterIUC3ICVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUC3ICVF33 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUC3ICVF33_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUC3ICVF33_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUC3ICVF33_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUC3ICVF33_Pointer const & r) const;
     itkInPlaceImageFilterIUC3ICVF33_Pointer & operator=(itkInPlaceImageFilterIUC3ICVF33_Pointer const & r);
     itkInPlaceImageFilterIUC3ICVF33_Pointer & operator=(itkInPlaceImageFilterIUC3ICVF33 * r);
     itkInPlaceImageFilterIUC3ICVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUC3IVF33 : public itkImageToImageFilterIUC3IVF33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUC3IVF33(itkInPlaceImageFilterIUC3IVF33 const & arg0);
     void operator=(itkInPlaceImageFilterIUC3IVF33 const & arg0);
   protected:
     itkInPlaceImageFilterIUC3IVF33();
     ~itkInPlaceImageFilterIUC3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUC3IVF33_Pointer {
   public:
     itkInPlaceImageFilterIUC3IVF33_Pointer();
     itkInPlaceImageFilterIUC3IVF33_Pointer(itkInPlaceImageFilterIUC3IVF33_Pointer const & p);
     itkInPlaceImageFilterIUC3IVF33_Pointer(itkInPlaceImageFilterIUC3IVF33 * p);
     ~itkInPlaceImageFilterIUC3IVF33_Pointer();
     itkInPlaceImageFilterIUC3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUC3IVF33 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUC3IVF33_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUC3IVF33_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUC3IVF33_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUC3IVF33_Pointer const & r) const;
     itkInPlaceImageFilterIUC3IVF33_Pointer & operator=(itkInPlaceImageFilterIUC3IVF33_Pointer const & r);
     itkInPlaceImageFilterIUC3IVF33_Pointer & operator=(itkInPlaceImageFilterIUC3IVF33 * r);
     itkInPlaceImageFilterIUC3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUC3VIUC3 : public itkImageToImageFilterIUC3VIUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUC3VIUC3(itkInPlaceImageFilterIUC3VIUC3 const & arg0);
     void operator=(itkInPlaceImageFilterIUC3VIUC3 const & arg0);
   protected:
     itkInPlaceImageFilterIUC3VIUC3();
     ~itkInPlaceImageFilterIUC3VIUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUC3VIUC3_Pointer {
   public:
     itkInPlaceImageFilterIUC3VIUC3_Pointer();
     itkInPlaceImageFilterIUC3VIUC3_Pointer(itkInPlaceImageFilterIUC3VIUC3_Pointer const & p);
     itkInPlaceImageFilterIUC3VIUC3_Pointer(itkInPlaceImageFilterIUC3VIUC3 * p);
     ~itkInPlaceImageFilterIUC3VIUC3_Pointer();
     itkInPlaceImageFilterIUC3VIUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUC3VIUC3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUC3VIUC3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUC3VIUC3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUC3VIUC3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUC3VIUC3_Pointer const & r) const;
     itkInPlaceImageFilterIUC3VIUC3_Pointer & operator=(itkInPlaceImageFilterIUC3VIUC3_Pointer const & r);
     itkInPlaceImageFilterIUC3VIUC3_Pointer & operator=(itkInPlaceImageFilterIUC3VIUC3 * r);
     itkInPlaceImageFilterIUC3VIUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUL2ICVF22 : public itkImageToImageFilterIUL2ICVF22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUL2ICVF22(itkInPlaceImageFilterIUL2ICVF22 const & arg0);
     void operator=(itkInPlaceImageFilterIUL2ICVF22 const & arg0);
   protected:
     itkInPlaceImageFilterIUL2ICVF22();
     ~itkInPlaceImageFilterIUL2ICVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUL2ICVF22_Pointer {
   public:
     itkInPlaceImageFilterIUL2ICVF22_Pointer();
     itkInPlaceImageFilterIUL2ICVF22_Pointer(itkInPlaceImageFilterIUL2ICVF22_Pointer const & p);
     itkInPlaceImageFilterIUL2ICVF22_Pointer(itkInPlaceImageFilterIUL2ICVF22 * p);
     ~itkInPlaceImageFilterIUL2ICVF22_Pointer();
     itkInPlaceImageFilterIUL2ICVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUL2ICVF22 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUL2ICVF22_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUL2ICVF22_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUL2ICVF22_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUL2ICVF22_Pointer const & r) const;
     itkInPlaceImageFilterIUL2ICVF22_Pointer & operator=(itkInPlaceImageFilterIUL2ICVF22_Pointer const & r);
     itkInPlaceImageFilterIUL2ICVF22_Pointer & operator=(itkInPlaceImageFilterIUL2ICVF22 * r);
     itkInPlaceImageFilterIUL2ICVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUL2IVF22 : public itkImageToImageFilterIUL2IVF22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUL2IVF22(itkInPlaceImageFilterIUL2IVF22 const & arg0);
     void operator=(itkInPlaceImageFilterIUL2IVF22 const & arg0);
   protected:
     itkInPlaceImageFilterIUL2IVF22();
     ~itkInPlaceImageFilterIUL2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUL2IVF22_Pointer {
   public:
     itkInPlaceImageFilterIUL2IVF22_Pointer();
     itkInPlaceImageFilterIUL2IVF22_Pointer(itkInPlaceImageFilterIUL2IVF22_Pointer const & p);
     itkInPlaceImageFilterIUL2IVF22_Pointer(itkInPlaceImageFilterIUL2IVF22 * p);
     ~itkInPlaceImageFilterIUL2IVF22_Pointer();
     itkInPlaceImageFilterIUL2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUL2IVF22 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUL2IVF22_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUL2IVF22_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUL2IVF22_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUL2IVF22_Pointer const & r) const;
     itkInPlaceImageFilterIUL2IVF22_Pointer & operator=(itkInPlaceImageFilterIUL2IVF22_Pointer const & r);
     itkInPlaceImageFilterIUL2IVF22_Pointer & operator=(itkInPlaceImageFilterIUL2IVF22 * r);
     itkInPlaceImageFilterIUL2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUL2VIUL2 : public itkImageToImageFilterIUL2VIUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUL2VIUL2(itkInPlaceImageFilterIUL2VIUL2 const & arg0);
     void operator=(itkInPlaceImageFilterIUL2VIUL2 const & arg0);
   protected:
     itkInPlaceImageFilterIUL2VIUL2();
     ~itkInPlaceImageFilterIUL2VIUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUL2VIUL2_Pointer {
   public:
     itkInPlaceImageFilterIUL2VIUL2_Pointer();
     itkInPlaceImageFilterIUL2VIUL2_Pointer(itkInPlaceImageFilterIUL2VIUL2_Pointer const & p);
     itkInPlaceImageFilterIUL2VIUL2_Pointer(itkInPlaceImageFilterIUL2VIUL2 * p);
     ~itkInPlaceImageFilterIUL2VIUL2_Pointer();
     itkInPlaceImageFilterIUL2VIUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUL2VIUL2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUL2VIUL2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUL2VIUL2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUL2VIUL2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUL2VIUL2_Pointer const & r) const;
     itkInPlaceImageFilterIUL2VIUL2_Pointer & operator=(itkInPlaceImageFilterIUL2VIUL2_Pointer const & r);
     itkInPlaceImageFilterIUL2VIUL2_Pointer & operator=(itkInPlaceImageFilterIUL2VIUL2 * r);
     itkInPlaceImageFilterIUL2VIUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUL3ICVF33 : public itkImageToImageFilterIUL3ICVF33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUL3ICVF33(itkInPlaceImageFilterIUL3ICVF33 const & arg0);
     void operator=(itkInPlaceImageFilterIUL3ICVF33 const & arg0);
   protected:
     itkInPlaceImageFilterIUL3ICVF33();
     ~itkInPlaceImageFilterIUL3ICVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUL3ICVF33_Pointer {
   public:
     itkInPlaceImageFilterIUL3ICVF33_Pointer();
     itkInPlaceImageFilterIUL3ICVF33_Pointer(itkInPlaceImageFilterIUL3ICVF33_Pointer const & p);
     itkInPlaceImageFilterIUL3ICVF33_Pointer(itkInPlaceImageFilterIUL3ICVF33 * p);
     ~itkInPlaceImageFilterIUL3ICVF33_Pointer();
     itkInPlaceImageFilterIUL3ICVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUL3ICVF33 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUL3ICVF33_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUL3ICVF33_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUL3ICVF33_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUL3ICVF33_Pointer const & r) const;
     itkInPlaceImageFilterIUL3ICVF33_Pointer & operator=(itkInPlaceImageFilterIUL3ICVF33_Pointer const & r);
     itkInPlaceImageFilterIUL3ICVF33_Pointer & operator=(itkInPlaceImageFilterIUL3ICVF33 * r);
     itkInPlaceImageFilterIUL3ICVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUL3IVF33 : public itkImageToImageFilterIUL3IVF33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUL3IVF33(itkInPlaceImageFilterIUL3IVF33 const & arg0);
     void operator=(itkInPlaceImageFilterIUL3IVF33 const & arg0);
   protected:
     itkInPlaceImageFilterIUL3IVF33();
     ~itkInPlaceImageFilterIUL3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUL3IVF33_Pointer {
   public:
     itkInPlaceImageFilterIUL3IVF33_Pointer();
     itkInPlaceImageFilterIUL3IVF33_Pointer(itkInPlaceImageFilterIUL3IVF33_Pointer const & p);
     itkInPlaceImageFilterIUL3IVF33_Pointer(itkInPlaceImageFilterIUL3IVF33 * p);
     ~itkInPlaceImageFilterIUL3IVF33_Pointer();
     itkInPlaceImageFilterIUL3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUL3IVF33 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUL3IVF33_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUL3IVF33_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUL3IVF33_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUL3IVF33_Pointer const & r) const;
     itkInPlaceImageFilterIUL3IVF33_Pointer & operator=(itkInPlaceImageFilterIUL3IVF33_Pointer const & r);
     itkInPlaceImageFilterIUL3IVF33_Pointer & operator=(itkInPlaceImageFilterIUL3IVF33 * r);
     itkInPlaceImageFilterIUL3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUL3VIUL3 : public itkImageToImageFilterIUL3VIUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUL3VIUL3(itkInPlaceImageFilterIUL3VIUL3 const & arg0);
     void operator=(itkInPlaceImageFilterIUL3VIUL3 const & arg0);
   protected:
     itkInPlaceImageFilterIUL3VIUL3();
     ~itkInPlaceImageFilterIUL3VIUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUL3VIUL3_Pointer {
   public:
     itkInPlaceImageFilterIUL3VIUL3_Pointer();
     itkInPlaceImageFilterIUL3VIUL3_Pointer(itkInPlaceImageFilterIUL3VIUL3_Pointer const & p);
     itkInPlaceImageFilterIUL3VIUL3_Pointer(itkInPlaceImageFilterIUL3VIUL3 * p);
     ~itkInPlaceImageFilterIUL3VIUL3_Pointer();
     itkInPlaceImageFilterIUL3VIUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUL3VIUL3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUL3VIUL3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUL3VIUL3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUL3VIUL3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUL3VIUL3_Pointer const & r) const;
     itkInPlaceImageFilterIUL3VIUL3_Pointer & operator=(itkInPlaceImageFilterIUL3VIUL3_Pointer const & r);
     itkInPlaceImageFilterIUL3VIUL3_Pointer & operator=(itkInPlaceImageFilterIUL3VIUL3 * r);
     itkInPlaceImageFilterIUL3VIUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUS2ICVF22 : public itkImageToImageFilterIUS2ICVF22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUS2ICVF22(itkInPlaceImageFilterIUS2ICVF22 const & arg0);
     void operator=(itkInPlaceImageFilterIUS2ICVF22 const & arg0);
   protected:
     itkInPlaceImageFilterIUS2ICVF22();
     ~itkInPlaceImageFilterIUS2ICVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUS2ICVF22_Pointer {
   public:
     itkInPlaceImageFilterIUS2ICVF22_Pointer();
     itkInPlaceImageFilterIUS2ICVF22_Pointer(itkInPlaceImageFilterIUS2ICVF22_Pointer const & p);
     itkInPlaceImageFilterIUS2ICVF22_Pointer(itkInPlaceImageFilterIUS2ICVF22 * p);
     ~itkInPlaceImageFilterIUS2ICVF22_Pointer();
     itkInPlaceImageFilterIUS2ICVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUS2ICVF22 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUS2ICVF22_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUS2ICVF22_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUS2ICVF22_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUS2ICVF22_Pointer const & r) const;
     itkInPlaceImageFilterIUS2ICVF22_Pointer & operator=(itkInPlaceImageFilterIUS2ICVF22_Pointer const & r);
     itkInPlaceImageFilterIUS2ICVF22_Pointer & operator=(itkInPlaceImageFilterIUS2ICVF22 * r);
     itkInPlaceImageFilterIUS2ICVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUS2IVF22 : public itkImageToImageFilterIUS2IVF22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUS2IVF22(itkInPlaceImageFilterIUS2IVF22 const & arg0);
     void operator=(itkInPlaceImageFilterIUS2IVF22 const & arg0);
   protected:
     itkInPlaceImageFilterIUS2IVF22();
     ~itkInPlaceImageFilterIUS2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUS2IVF22_Pointer {
   public:
     itkInPlaceImageFilterIUS2IVF22_Pointer();
     itkInPlaceImageFilterIUS2IVF22_Pointer(itkInPlaceImageFilterIUS2IVF22_Pointer const & p);
     itkInPlaceImageFilterIUS2IVF22_Pointer(itkInPlaceImageFilterIUS2IVF22 * p);
     ~itkInPlaceImageFilterIUS2IVF22_Pointer();
     itkInPlaceImageFilterIUS2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUS2IVF22 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUS2IVF22_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUS2IVF22_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUS2IVF22_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUS2IVF22_Pointer const & r) const;
     itkInPlaceImageFilterIUS2IVF22_Pointer & operator=(itkInPlaceImageFilterIUS2IVF22_Pointer const & r);
     itkInPlaceImageFilterIUS2IVF22_Pointer & operator=(itkInPlaceImageFilterIUS2IVF22 * r);
     itkInPlaceImageFilterIUS2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUS2VIUS2 : public itkImageToImageFilterIUS2VIUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUS2VIUS2(itkInPlaceImageFilterIUS2VIUS2 const & arg0);
     void operator=(itkInPlaceImageFilterIUS2VIUS2 const & arg0);
   protected:
     itkInPlaceImageFilterIUS2VIUS2();
     ~itkInPlaceImageFilterIUS2VIUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUS2VIUS2_Pointer {
   public:
     itkInPlaceImageFilterIUS2VIUS2_Pointer();
     itkInPlaceImageFilterIUS2VIUS2_Pointer(itkInPlaceImageFilterIUS2VIUS2_Pointer const & p);
     itkInPlaceImageFilterIUS2VIUS2_Pointer(itkInPlaceImageFilterIUS2VIUS2 * p);
     ~itkInPlaceImageFilterIUS2VIUS2_Pointer();
     itkInPlaceImageFilterIUS2VIUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUS2VIUS2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUS2VIUS2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUS2VIUS2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUS2VIUS2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUS2VIUS2_Pointer const & r) const;
     itkInPlaceImageFilterIUS2VIUS2_Pointer & operator=(itkInPlaceImageFilterIUS2VIUS2_Pointer const & r);
     itkInPlaceImageFilterIUS2VIUS2_Pointer & operator=(itkInPlaceImageFilterIUS2VIUS2 * r);
     itkInPlaceImageFilterIUS2VIUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUS3ICVF33 : public itkImageToImageFilterIUS3ICVF33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUS3ICVF33(itkInPlaceImageFilterIUS3ICVF33 const & arg0);
     void operator=(itkInPlaceImageFilterIUS3ICVF33 const & arg0);
   protected:
     itkInPlaceImageFilterIUS3ICVF33();
     ~itkInPlaceImageFilterIUS3ICVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUS3ICVF33_Pointer {
   public:
     itkInPlaceImageFilterIUS3ICVF33_Pointer();
     itkInPlaceImageFilterIUS3ICVF33_Pointer(itkInPlaceImageFilterIUS3ICVF33_Pointer const & p);
     itkInPlaceImageFilterIUS3ICVF33_Pointer(itkInPlaceImageFilterIUS3ICVF33 * p);
     ~itkInPlaceImageFilterIUS3ICVF33_Pointer();
     itkInPlaceImageFilterIUS3ICVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUS3ICVF33 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUS3ICVF33_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUS3ICVF33_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUS3ICVF33_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUS3ICVF33_Pointer const & r) const;
     itkInPlaceImageFilterIUS3ICVF33_Pointer & operator=(itkInPlaceImageFilterIUS3ICVF33_Pointer const & r);
     itkInPlaceImageFilterIUS3ICVF33_Pointer & operator=(itkInPlaceImageFilterIUS3ICVF33 * r);
     itkInPlaceImageFilterIUS3ICVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUS3IVF33 : public itkImageToImageFilterIUS3IVF33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUS3IVF33(itkInPlaceImageFilterIUS3IVF33 const & arg0);
     void operator=(itkInPlaceImageFilterIUS3IVF33 const & arg0);
   protected:
     itkInPlaceImageFilterIUS3IVF33();
     ~itkInPlaceImageFilterIUS3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUS3IVF33_Pointer {
   public:
     itkInPlaceImageFilterIUS3IVF33_Pointer();
     itkInPlaceImageFilterIUS3IVF33_Pointer(itkInPlaceImageFilterIUS3IVF33_Pointer const & p);
     itkInPlaceImageFilterIUS3IVF33_Pointer(itkInPlaceImageFilterIUS3IVF33 * p);
     ~itkInPlaceImageFilterIUS3IVF33_Pointer();
     itkInPlaceImageFilterIUS3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUS3IVF33 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUS3IVF33_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUS3IVF33_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUS3IVF33_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUS3IVF33_Pointer const & r) const;
     itkInPlaceImageFilterIUS3IVF33_Pointer & operator=(itkInPlaceImageFilterIUS3IVF33_Pointer const & r);
     itkInPlaceImageFilterIUS3IVF33_Pointer & operator=(itkInPlaceImageFilterIUS3IVF33 * r);
     itkInPlaceImageFilterIUS3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUS3VIUS3 : public itkImageToImageFilterIUS3VIUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUS3VIUS3(itkInPlaceImageFilterIUS3VIUS3 const & arg0);
     void operator=(itkInPlaceImageFilterIUS3VIUS3 const & arg0);
   protected:
     itkInPlaceImageFilterIUS3VIUS3();
     ~itkInPlaceImageFilterIUS3VIUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUS3VIUS3_Pointer {
   public:
     itkInPlaceImageFilterIUS3VIUS3_Pointer();
     itkInPlaceImageFilterIUS3VIUS3_Pointer(itkInPlaceImageFilterIUS3VIUS3_Pointer const & p);
     itkInPlaceImageFilterIUS3VIUS3_Pointer(itkInPlaceImageFilterIUS3VIUS3 * p);
     ~itkInPlaceImageFilterIUS3VIUS3_Pointer();
     itkInPlaceImageFilterIUS3VIUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUS3VIUS3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUS3VIUS3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUS3VIUS3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUS3VIUS3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUS3VIUS3_Pointer const & r) const;
     itkInPlaceImageFilterIUS3VIUS3_Pointer & operator=(itkInPlaceImageFilterIUS3VIUS3_Pointer const & r);
     itkInPlaceImageFilterIUS3VIUS3_Pointer & operator=(itkInPlaceImageFilterIUS3VIUS3 * r);
     itkInPlaceImageFilterIUS3VIUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIVF22ID2 : public itkImageToImageFilterIVF22ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIVF22ID2(itkInPlaceImageFilterIVF22ID2 const & arg0);
     void operator=(itkInPlaceImageFilterIVF22ID2 const & arg0);
   protected:
     itkInPlaceImageFilterIVF22ID2();
     ~itkInPlaceImageFilterIVF22ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIVF22ID2_Pointer {
   public:
     itkInPlaceImageFilterIVF22ID2_Pointer();
     itkInPlaceImageFilterIVF22ID2_Pointer(itkInPlaceImageFilterIVF22ID2_Pointer const & p);
     itkInPlaceImageFilterIVF22ID2_Pointer(itkInPlaceImageFilterIVF22ID2 * p);
     ~itkInPlaceImageFilterIVF22ID2_Pointer();
     itkInPlaceImageFilterIVF22ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIVF22ID2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIVF22ID2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIVF22ID2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIVF22ID2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIVF22ID2_Pointer const & r) const;
     itkInPlaceImageFilterIVF22ID2_Pointer & operator=(itkInPlaceImageFilterIVF22ID2_Pointer const & r);
     itkInPlaceImageFilterIVF22ID2_Pointer & operator=(itkInPlaceImageFilterIVF22ID2 * r);
     itkInPlaceImageFilterIVF22ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIVF22IF2 : public itkImageToImageFilterIVF22IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIVF22IF2(itkInPlaceImageFilterIVF22IF2 const & arg0);
     void operator=(itkInPlaceImageFilterIVF22IF2 const & arg0);
   protected:
     itkInPlaceImageFilterIVF22IF2();
     ~itkInPlaceImageFilterIVF22IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIVF22IF2_Pointer {
   public:
     itkInPlaceImageFilterIVF22IF2_Pointer();
     itkInPlaceImageFilterIVF22IF2_Pointer(itkInPlaceImageFilterIVF22IF2_Pointer const & p);
     itkInPlaceImageFilterIVF22IF2_Pointer(itkInPlaceImageFilterIVF22IF2 * p);
     ~itkInPlaceImageFilterIVF22IF2_Pointer();
     itkInPlaceImageFilterIVF22IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIVF22IF2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIVF22IF2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIVF22IF2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIVF22IF2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIVF22IF2_Pointer const & r) const;
     itkInPlaceImageFilterIVF22IF2_Pointer & operator=(itkInPlaceImageFilterIVF22IF2_Pointer const & r);
     itkInPlaceImageFilterIVF22IF2_Pointer & operator=(itkInPlaceImageFilterIVF22IF2 * r);
     itkInPlaceImageFilterIVF22IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIVF22IUC2 : public itkImageToImageFilterIVF22IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIVF22IUC2(itkInPlaceImageFilterIVF22IUC2 const & arg0);
     void operator=(itkInPlaceImageFilterIVF22IUC2 const & arg0);
   protected:
     itkInPlaceImageFilterIVF22IUC2();
     ~itkInPlaceImageFilterIVF22IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIVF22IUC2_Pointer {
   public:
     itkInPlaceImageFilterIVF22IUC2_Pointer();
     itkInPlaceImageFilterIVF22IUC2_Pointer(itkInPlaceImageFilterIVF22IUC2_Pointer const & p);
     itkInPlaceImageFilterIVF22IUC2_Pointer(itkInPlaceImageFilterIVF22IUC2 * p);
     ~itkInPlaceImageFilterIVF22IUC2_Pointer();
     itkInPlaceImageFilterIVF22IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIVF22IUC2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIVF22IUC2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIVF22IUC2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIVF22IUC2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIVF22IUC2_Pointer const & r) const;
     itkInPlaceImageFilterIVF22IUC2_Pointer & operator=(itkInPlaceImageFilterIVF22IUC2_Pointer const & r);
     itkInPlaceImageFilterIVF22IUC2_Pointer & operator=(itkInPlaceImageFilterIVF22IUC2 * r);
     itkInPlaceImageFilterIVF22IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIVF22IUL2 : public itkImageToImageFilterIVF22IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIVF22IUL2(itkInPlaceImageFilterIVF22IUL2 const & arg0);
     void operator=(itkInPlaceImageFilterIVF22IUL2 const & arg0);
   protected:
     itkInPlaceImageFilterIVF22IUL2();
     ~itkInPlaceImageFilterIVF22IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIVF22IUL2_Pointer {
   public:
     itkInPlaceImageFilterIVF22IUL2_Pointer();
     itkInPlaceImageFilterIVF22IUL2_Pointer(itkInPlaceImageFilterIVF22IUL2_Pointer const & p);
     itkInPlaceImageFilterIVF22IUL2_Pointer(itkInPlaceImageFilterIVF22IUL2 * p);
     ~itkInPlaceImageFilterIVF22IUL2_Pointer();
     itkInPlaceImageFilterIVF22IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIVF22IUL2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIVF22IUL2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIVF22IUL2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIVF22IUL2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIVF22IUL2_Pointer const & r) const;
     itkInPlaceImageFilterIVF22IUL2_Pointer & operator=(itkInPlaceImageFilterIVF22IUL2_Pointer const & r);
     itkInPlaceImageFilterIVF22IUL2_Pointer & operator=(itkInPlaceImageFilterIVF22IUL2 * r);
     itkInPlaceImageFilterIVF22IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIVF22IUS2 : public itkImageToImageFilterIVF22IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIVF22IUS2(itkInPlaceImageFilterIVF22IUS2 const & arg0);
     void operator=(itkInPlaceImageFilterIVF22IUS2 const & arg0);
   protected:
     itkInPlaceImageFilterIVF22IUS2();
     ~itkInPlaceImageFilterIVF22IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIVF22IUS2_Pointer {
   public:
     itkInPlaceImageFilterIVF22IUS2_Pointer();
     itkInPlaceImageFilterIVF22IUS2_Pointer(itkInPlaceImageFilterIVF22IUS2_Pointer const & p);
     itkInPlaceImageFilterIVF22IUS2_Pointer(itkInPlaceImageFilterIVF22IUS2 * p);
     ~itkInPlaceImageFilterIVF22IUS2_Pointer();
     itkInPlaceImageFilterIVF22IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIVF22IUS2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIVF22IUS2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIVF22IUS2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIVF22IUS2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIVF22IUS2_Pointer const & r) const;
     itkInPlaceImageFilterIVF22IUS2_Pointer & operator=(itkInPlaceImageFilterIVF22IUS2_Pointer const & r);
     itkInPlaceImageFilterIVF22IUS2_Pointer & operator=(itkInPlaceImageFilterIVF22IUS2 * r);
     itkInPlaceImageFilterIVF22IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIVF33ID3 : public itkImageToImageFilterIVF33ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIVF33ID3(itkInPlaceImageFilterIVF33ID3 const & arg0);
     void operator=(itkInPlaceImageFilterIVF33ID3 const & arg0);
   protected:
     itkInPlaceImageFilterIVF33ID3();
     ~itkInPlaceImageFilterIVF33ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIVF33ID3_Pointer {
   public:
     itkInPlaceImageFilterIVF33ID3_Pointer();
     itkInPlaceImageFilterIVF33ID3_Pointer(itkInPlaceImageFilterIVF33ID3_Pointer const & p);
     itkInPlaceImageFilterIVF33ID3_Pointer(itkInPlaceImageFilterIVF33ID3 * p);
     ~itkInPlaceImageFilterIVF33ID3_Pointer();
     itkInPlaceImageFilterIVF33ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIVF33ID3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIVF33ID3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIVF33ID3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIVF33ID3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIVF33ID3_Pointer const & r) const;
     itkInPlaceImageFilterIVF33ID3_Pointer & operator=(itkInPlaceImageFilterIVF33ID3_Pointer const & r);
     itkInPlaceImageFilterIVF33ID3_Pointer & operator=(itkInPlaceImageFilterIVF33ID3 * r);
     itkInPlaceImageFilterIVF33ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIVF33IF3 : public itkImageToImageFilterIVF33IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIVF33IF3(itkInPlaceImageFilterIVF33IF3 const & arg0);
     void operator=(itkInPlaceImageFilterIVF33IF3 const & arg0);
   protected:
     itkInPlaceImageFilterIVF33IF3();
     ~itkInPlaceImageFilterIVF33IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIVF33IF3_Pointer {
   public:
     itkInPlaceImageFilterIVF33IF3_Pointer();
     itkInPlaceImageFilterIVF33IF3_Pointer(itkInPlaceImageFilterIVF33IF3_Pointer const & p);
     itkInPlaceImageFilterIVF33IF3_Pointer(itkInPlaceImageFilterIVF33IF3 * p);
     ~itkInPlaceImageFilterIVF33IF3_Pointer();
     itkInPlaceImageFilterIVF33IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIVF33IF3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIVF33IF3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIVF33IF3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIVF33IF3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIVF33IF3_Pointer const & r) const;
     itkInPlaceImageFilterIVF33IF3_Pointer & operator=(itkInPlaceImageFilterIVF33IF3_Pointer const & r);
     itkInPlaceImageFilterIVF33IF3_Pointer & operator=(itkInPlaceImageFilterIVF33IF3 * r);
     itkInPlaceImageFilterIVF33IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIVF33IUC3 : public itkImageToImageFilterIVF33IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIVF33IUC3(itkInPlaceImageFilterIVF33IUC3 const & arg0);
     void operator=(itkInPlaceImageFilterIVF33IUC3 const & arg0);
   protected:
     itkInPlaceImageFilterIVF33IUC3();
     ~itkInPlaceImageFilterIVF33IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIVF33IUC3_Pointer {
   public:
     itkInPlaceImageFilterIVF33IUC3_Pointer();
     itkInPlaceImageFilterIVF33IUC3_Pointer(itkInPlaceImageFilterIVF33IUC3_Pointer const & p);
     itkInPlaceImageFilterIVF33IUC3_Pointer(itkInPlaceImageFilterIVF33IUC3 * p);
     ~itkInPlaceImageFilterIVF33IUC3_Pointer();
     itkInPlaceImageFilterIVF33IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIVF33IUC3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIVF33IUC3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIVF33IUC3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIVF33IUC3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIVF33IUC3_Pointer const & r) const;
     itkInPlaceImageFilterIVF33IUC3_Pointer & operator=(itkInPlaceImageFilterIVF33IUC3_Pointer const & r);
     itkInPlaceImageFilterIVF33IUC3_Pointer & operator=(itkInPlaceImageFilterIVF33IUC3 * r);
     itkInPlaceImageFilterIVF33IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIVF33IUL3 : public itkImageToImageFilterIVF33IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIVF33IUL3(itkInPlaceImageFilterIVF33IUL3 const & arg0);
     void operator=(itkInPlaceImageFilterIVF33IUL3 const & arg0);
   protected:
     itkInPlaceImageFilterIVF33IUL3();
     ~itkInPlaceImageFilterIVF33IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIVF33IUL3_Pointer {
   public:
     itkInPlaceImageFilterIVF33IUL3_Pointer();
     itkInPlaceImageFilterIVF33IUL3_Pointer(itkInPlaceImageFilterIVF33IUL3_Pointer const & p);
     itkInPlaceImageFilterIVF33IUL3_Pointer(itkInPlaceImageFilterIVF33IUL3 * p);
     ~itkInPlaceImageFilterIVF33IUL3_Pointer();
     itkInPlaceImageFilterIVF33IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIVF33IUL3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIVF33IUL3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIVF33IUL3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIVF33IUL3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIVF33IUL3_Pointer const & r) const;
     itkInPlaceImageFilterIVF33IUL3_Pointer & operator=(itkInPlaceImageFilterIVF33IUL3_Pointer const & r);
     itkInPlaceImageFilterIVF33IUL3_Pointer & operator=(itkInPlaceImageFilterIVF33IUL3 * r);
     itkInPlaceImageFilterIVF33IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIVF33IUS3 : public itkImageToImageFilterIVF33IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIVF33IUS3(itkInPlaceImageFilterIVF33IUS3 const & arg0);
     void operator=(itkInPlaceImageFilterIVF33IUS3 const & arg0);
   protected:
     itkInPlaceImageFilterIVF33IUS3();
     ~itkInPlaceImageFilterIVF33IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIVF33IUS3_Pointer {
   public:
     itkInPlaceImageFilterIVF33IUS3_Pointer();
     itkInPlaceImageFilterIVF33IUS3_Pointer(itkInPlaceImageFilterIVF33IUS3_Pointer const & p);
     itkInPlaceImageFilterIVF33IUS3_Pointer(itkInPlaceImageFilterIVF33IUS3 * p);
     ~itkInPlaceImageFilterIVF33IUS3_Pointer();
     itkInPlaceImageFilterIVF33IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIVF33IUS3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIVF33IUS3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIVF33IUS3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIVF33IUS3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIVF33IUS3_Pointer const & r) const;
     itkInPlaceImageFilterIVF33IUS3_Pointer & operator=(itkInPlaceImageFilterIVF33IUS3_Pointer const & r);
     itkInPlaceImageFilterIVF33IUS3_Pointer & operator=(itkInPlaceImageFilterIVF33IUS3 * r);
     itkInPlaceImageFilterIVF33IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterVID2ID2 : public itkImageToImageFilterVID2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterVID2ID2(itkInPlaceImageFilterVID2ID2 const & arg0);
     void operator=(itkInPlaceImageFilterVID2ID2 const & arg0);
   protected:
     itkInPlaceImageFilterVID2ID2();
     ~itkInPlaceImageFilterVID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterVID2ID2_Pointer {
   public:
     itkInPlaceImageFilterVID2ID2_Pointer();
     itkInPlaceImageFilterVID2ID2_Pointer(itkInPlaceImageFilterVID2ID2_Pointer const & p);
     itkInPlaceImageFilterVID2ID2_Pointer(itkInPlaceImageFilterVID2ID2 * p);
     ~itkInPlaceImageFilterVID2ID2_Pointer();
     itkInPlaceImageFilterVID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterVID2ID2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterVID2ID2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterVID2ID2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterVID2ID2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterVID2ID2_Pointer const & r) const;
     itkInPlaceImageFilterVID2ID2_Pointer & operator=(itkInPlaceImageFilterVID2ID2_Pointer const & r);
     itkInPlaceImageFilterVID2ID2_Pointer & operator=(itkInPlaceImageFilterVID2ID2 * r);
     itkInPlaceImageFilterVID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterVID3ID3 : public itkImageToImageFilterVID3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterVID3ID3(itkInPlaceImageFilterVID3ID3 const & arg0);
     void operator=(itkInPlaceImageFilterVID3ID3 const & arg0);
   protected:
     itkInPlaceImageFilterVID3ID3();
     ~itkInPlaceImageFilterVID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterVID3ID3_Pointer {
   public:
     itkInPlaceImageFilterVID3ID3_Pointer();
     itkInPlaceImageFilterVID3ID3_Pointer(itkInPlaceImageFilterVID3ID3_Pointer const & p);
     itkInPlaceImageFilterVID3ID3_Pointer(itkInPlaceImageFilterVID3ID3 * p);
     ~itkInPlaceImageFilterVID3ID3_Pointer();
     itkInPlaceImageFilterVID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterVID3ID3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterVID3ID3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterVID3ID3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterVID3ID3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterVID3ID3_Pointer const & r) const;
     itkInPlaceImageFilterVID3ID3_Pointer & operator=(itkInPlaceImageFilterVID3ID3_Pointer const & r);
     itkInPlaceImageFilterVID3ID3_Pointer & operator=(itkInPlaceImageFilterVID3ID3 * r);
     itkInPlaceImageFilterVID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterVIF2IF2 : public itkImageToImageFilterVIF2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterVIF2IF2(itkInPlaceImageFilterVIF2IF2 const & arg0);
     void operator=(itkInPlaceImageFilterVIF2IF2 const & arg0);
   protected:
     itkInPlaceImageFilterVIF2IF2();
     ~itkInPlaceImageFilterVIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterVIF2IF2_Pointer {
   public:
     itkInPlaceImageFilterVIF2IF2_Pointer();
     itkInPlaceImageFilterVIF2IF2_Pointer(itkInPlaceImageFilterVIF2IF2_Pointer const & p);
     itkInPlaceImageFilterVIF2IF2_Pointer(itkInPlaceImageFilterVIF2IF2 * p);
     ~itkInPlaceImageFilterVIF2IF2_Pointer();
     itkInPlaceImageFilterVIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterVIF2IF2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterVIF2IF2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterVIF2IF2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterVIF2IF2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterVIF2IF2_Pointer const & r) const;
     itkInPlaceImageFilterVIF2IF2_Pointer & operator=(itkInPlaceImageFilterVIF2IF2_Pointer const & r);
     itkInPlaceImageFilterVIF2IF2_Pointer & operator=(itkInPlaceImageFilterVIF2IF2 * r);
     itkInPlaceImageFilterVIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterVIF3IF3 : public itkImageToImageFilterVIF3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterVIF3IF3(itkInPlaceImageFilterVIF3IF3 const & arg0);
     void operator=(itkInPlaceImageFilterVIF3IF3 const & arg0);
   protected:
     itkInPlaceImageFilterVIF3IF3();
     ~itkInPlaceImageFilterVIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterVIF3IF3_Pointer {
   public:
     itkInPlaceImageFilterVIF3IF3_Pointer();
     itkInPlaceImageFilterVIF3IF3_Pointer(itkInPlaceImageFilterVIF3IF3_Pointer const & p);
     itkInPlaceImageFilterVIF3IF3_Pointer(itkInPlaceImageFilterVIF3IF3 * p);
     ~itkInPlaceImageFilterVIF3IF3_Pointer();
     itkInPlaceImageFilterVIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterVIF3IF3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterVIF3IF3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterVIF3IF3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterVIF3IF3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterVIF3IF3_Pointer const & r) const;
     itkInPlaceImageFilterVIF3IF3_Pointer & operator=(itkInPlaceImageFilterVIF3IF3_Pointer const & r);
     itkInPlaceImageFilterVIF3IF3_Pointer & operator=(itkInPlaceImageFilterVIF3IF3 * r);
     itkInPlaceImageFilterVIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterVIUC2IUC2 : public itkImageToImageFilterVIUC2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterVIUC2IUC2(itkInPlaceImageFilterVIUC2IUC2 const & arg0);
     void operator=(itkInPlaceImageFilterVIUC2IUC2 const & arg0);
   protected:
     itkInPlaceImageFilterVIUC2IUC2();
     ~itkInPlaceImageFilterVIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterVIUC2IUC2_Pointer {
   public:
     itkInPlaceImageFilterVIUC2IUC2_Pointer();
     itkInPlaceImageFilterVIUC2IUC2_Pointer(itkInPlaceImageFilterVIUC2IUC2_Pointer const & p);
     itkInPlaceImageFilterVIUC2IUC2_Pointer(itkInPlaceImageFilterVIUC2IUC2 * p);
     ~itkInPlaceImageFilterVIUC2IUC2_Pointer();
     itkInPlaceImageFilterVIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterVIUC2IUC2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterVIUC2IUC2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterVIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterVIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterVIUC2IUC2_Pointer const & r) const;
     itkInPlaceImageFilterVIUC2IUC2_Pointer & operator=(itkInPlaceImageFilterVIUC2IUC2_Pointer const & r);
     itkInPlaceImageFilterVIUC2IUC2_Pointer & operator=(itkInPlaceImageFilterVIUC2IUC2 * r);
     itkInPlaceImageFilterVIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterVIUC3IUC3 : public itkImageToImageFilterVIUC3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterVIUC3IUC3(itkInPlaceImageFilterVIUC3IUC3 const & arg0);
     void operator=(itkInPlaceImageFilterVIUC3IUC3 const & arg0);
   protected:
     itkInPlaceImageFilterVIUC3IUC3();
     ~itkInPlaceImageFilterVIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterVIUC3IUC3_Pointer {
   public:
     itkInPlaceImageFilterVIUC3IUC3_Pointer();
     itkInPlaceImageFilterVIUC3IUC3_Pointer(itkInPlaceImageFilterVIUC3IUC3_Pointer const & p);
     itkInPlaceImageFilterVIUC3IUC3_Pointer(itkInPlaceImageFilterVIUC3IUC3 * p);
     ~itkInPlaceImageFilterVIUC3IUC3_Pointer();
     itkInPlaceImageFilterVIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterVIUC3IUC3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterVIUC3IUC3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterVIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterVIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterVIUC3IUC3_Pointer const & r) const;
     itkInPlaceImageFilterVIUC3IUC3_Pointer & operator=(itkInPlaceImageFilterVIUC3IUC3_Pointer const & r);
     itkInPlaceImageFilterVIUC3IUC3_Pointer & operator=(itkInPlaceImageFilterVIUC3IUC3 * r);
     itkInPlaceImageFilterVIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterVIUL2IUL2 : public itkImageToImageFilterVIUL2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterVIUL2IUL2(itkInPlaceImageFilterVIUL2IUL2 const & arg0);
     void operator=(itkInPlaceImageFilterVIUL2IUL2 const & arg0);
   protected:
     itkInPlaceImageFilterVIUL2IUL2();
     ~itkInPlaceImageFilterVIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterVIUL2IUL2_Pointer {
   public:
     itkInPlaceImageFilterVIUL2IUL2_Pointer();
     itkInPlaceImageFilterVIUL2IUL2_Pointer(itkInPlaceImageFilterVIUL2IUL2_Pointer const & p);
     itkInPlaceImageFilterVIUL2IUL2_Pointer(itkInPlaceImageFilterVIUL2IUL2 * p);
     ~itkInPlaceImageFilterVIUL2IUL2_Pointer();
     itkInPlaceImageFilterVIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterVIUL2IUL2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterVIUL2IUL2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterVIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterVIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterVIUL2IUL2_Pointer const & r) const;
     itkInPlaceImageFilterVIUL2IUL2_Pointer & operator=(itkInPlaceImageFilterVIUL2IUL2_Pointer const & r);
     itkInPlaceImageFilterVIUL2IUL2_Pointer & operator=(itkInPlaceImageFilterVIUL2IUL2 * r);
     itkInPlaceImageFilterVIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterVIUL3IUL3 : public itkImageToImageFilterVIUL3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterVIUL3IUL3(itkInPlaceImageFilterVIUL3IUL3 const & arg0);
     void operator=(itkInPlaceImageFilterVIUL3IUL3 const & arg0);
   protected:
     itkInPlaceImageFilterVIUL3IUL3();
     ~itkInPlaceImageFilterVIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterVIUL3IUL3_Pointer {
   public:
     itkInPlaceImageFilterVIUL3IUL3_Pointer();
     itkInPlaceImageFilterVIUL3IUL3_Pointer(itkInPlaceImageFilterVIUL3IUL3_Pointer const & p);
     itkInPlaceImageFilterVIUL3IUL3_Pointer(itkInPlaceImageFilterVIUL3IUL3 * p);
     ~itkInPlaceImageFilterVIUL3IUL3_Pointer();
     itkInPlaceImageFilterVIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterVIUL3IUL3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterVIUL3IUL3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterVIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterVIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterVIUL3IUL3_Pointer const & r) const;
     itkInPlaceImageFilterVIUL3IUL3_Pointer & operator=(itkInPlaceImageFilterVIUL3IUL3_Pointer const & r);
     itkInPlaceImageFilterVIUL3IUL3_Pointer & operator=(itkInPlaceImageFilterVIUL3IUL3 * r);
     itkInPlaceImageFilterVIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterVIUS2IUS2 : public itkImageToImageFilterVIUS2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterVIUS2IUS2(itkInPlaceImageFilterVIUS2IUS2 const & arg0);
     void operator=(itkInPlaceImageFilterVIUS2IUS2 const & arg0);
   protected:
     itkInPlaceImageFilterVIUS2IUS2();
     ~itkInPlaceImageFilterVIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterVIUS2IUS2_Pointer {
   public:
     itkInPlaceImageFilterVIUS2IUS2_Pointer();
     itkInPlaceImageFilterVIUS2IUS2_Pointer(itkInPlaceImageFilterVIUS2IUS2_Pointer const & p);
     itkInPlaceImageFilterVIUS2IUS2_Pointer(itkInPlaceImageFilterVIUS2IUS2 * p);
     ~itkInPlaceImageFilterVIUS2IUS2_Pointer();
     itkInPlaceImageFilterVIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterVIUS2IUS2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterVIUS2IUS2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterVIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterVIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterVIUS2IUS2_Pointer const & r) const;
     itkInPlaceImageFilterVIUS2IUS2_Pointer & operator=(itkInPlaceImageFilterVIUS2IUS2_Pointer const & r);
     itkInPlaceImageFilterVIUS2IUS2_Pointer & operator=(itkInPlaceImageFilterVIUS2IUS2 * r);
     itkInPlaceImageFilterVIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterVIUS3IUS3 : public itkImageToImageFilterVIUS3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterVIUS3IUS3(itkInPlaceImageFilterVIUS3IUS3 const & arg0);
     void operator=(itkInPlaceImageFilterVIUS3IUS3 const & arg0);
   protected:
     itkInPlaceImageFilterVIUS3IUS3();
     ~itkInPlaceImageFilterVIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterVIUS3IUS3_Pointer {
   public:
     itkInPlaceImageFilterVIUS3IUS3_Pointer();
     itkInPlaceImageFilterVIUS3IUS3_Pointer(itkInPlaceImageFilterVIUS3IUS3_Pointer const & p);
     itkInPlaceImageFilterVIUS3IUS3_Pointer(itkInPlaceImageFilterVIUS3IUS3 * p);
     ~itkInPlaceImageFilterVIUS3IUS3_Pointer();
     itkInPlaceImageFilterVIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterVIUS3IUS3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterVIUS3IUS3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterVIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterVIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterVIUS3IUS3_Pointer const & r) const;
     itkInPlaceImageFilterVIUS3IUS3_Pointer & operator=(itkInPlaceImageFilterVIUS3IUS3_Pointer const & r);
     itkInPlaceImageFilterVIUS3IUS3_Pointer & operator=(itkInPlaceImageFilterVIUS3IUS3 * r);
     itkInPlaceImageFilterVIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


