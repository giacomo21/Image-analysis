# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkVTKImageToImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkVTKImageToImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkVTKImageToImageFilterPython
            return _itkVTKImageToImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkVTKImageToImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkVTKImageToImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkVTKImageToImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkVTKImageImportPython
import itkImageSourcePython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
def itkVTKImageToImageFilterID3_New():
  return itkVTKImageToImageFilterID3.New()

def itkVTKImageToImageFilterID2_New():
  return itkVTKImageToImageFilterID2.New()

def itkVTKImageToImageFilterIF3_New():
  return itkVTKImageToImageFilterIF3.New()

def itkVTKImageToImageFilterIF2_New():
  return itkVTKImageToImageFilterIF2.New()

def itkVTKImageToImageFilterIUS3_New():
  return itkVTKImageToImageFilterIUS3.New()

def itkVTKImageToImageFilterIUS2_New():
  return itkVTKImageToImageFilterIUS2.New()

def itkVTKImageToImageFilterIUL3_New():
  return itkVTKImageToImageFilterIUL3.New()

def itkVTKImageToImageFilterIUL2_New():
  return itkVTKImageToImageFilterIUL2.New()

def itkVTKImageToImageFilterIUC3_New():
  return itkVTKImageToImageFilterIUC3.New()

def itkVTKImageToImageFilterIUC2_New():
  return itkVTKImageToImageFilterIUC2.New()

class itkVTKImageToImageFilterID2(itkVTKImageImportPython.itkVTKImageImportID2):
    """Proxy of C++ itkVTKImageToImageFilterID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput(self, *args):
        """SetInput(self, vtkImageData arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterID2_SetInput(self, *args)

    def GetExporter(self):
        """GetExporter(self) -> vtkImageExport"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterID2_GetExporter(self)

    def GetImporter(self):
        """GetImporter(self) -> itkVTKImageImportID2"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterID2_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterID2"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageToImageFilterID2"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterID2
        
        Create a new object of the class itkVTKImageToImageFilterID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageToImageFilterID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageToImageFilterID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterID2.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterID2_SetInput,None,itkVTKImageToImageFilterID2)
itkVTKImageToImageFilterID2.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterID2_GetExporter,None,itkVTKImageToImageFilterID2)
itkVTKImageToImageFilterID2.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterID2_GetImporter,None,itkVTKImageToImageFilterID2)
itkVTKImageToImageFilterID2.GetPointer = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterID2_GetPointer,None,itkVTKImageToImageFilterID2)
itkVTKImageToImageFilterID2_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterID2_swigregister
itkVTKImageToImageFilterID2_swigregister(itkVTKImageToImageFilterID2)

def itkVTKImageToImageFilterID2___New_orig__():
  """itkVTKImageToImageFilterID2___New_orig__()"""
  return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterID2___New_orig__()

def itkVTKImageToImageFilterID2_cast(*args):
  """itkVTKImageToImageFilterID2_cast(itkLightObject obj) -> itkVTKImageToImageFilterID2"""
  return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterID2_cast(*args)

class itkVTKImageToImageFilterID3(itkVTKImageImportPython.itkVTKImageImportID3):
    """Proxy of C++ itkVTKImageToImageFilterID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput(self, *args):
        """SetInput(self, vtkImageData arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterID3_SetInput(self, *args)

    def GetExporter(self):
        """GetExporter(self) -> vtkImageExport"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterID3_GetExporter(self)

    def GetImporter(self):
        """GetImporter(self) -> itkVTKImageImportID3"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterID3_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterID3"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageToImageFilterID3"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterID3
        
        Create a new object of the class itkVTKImageToImageFilterID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageToImageFilterID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageToImageFilterID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterID3.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterID3_SetInput,None,itkVTKImageToImageFilterID3)
itkVTKImageToImageFilterID3.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterID3_GetExporter,None,itkVTKImageToImageFilterID3)
itkVTKImageToImageFilterID3.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterID3_GetImporter,None,itkVTKImageToImageFilterID3)
itkVTKImageToImageFilterID3.GetPointer = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterID3_GetPointer,None,itkVTKImageToImageFilterID3)
itkVTKImageToImageFilterID3_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterID3_swigregister
itkVTKImageToImageFilterID3_swigregister(itkVTKImageToImageFilterID3)

def itkVTKImageToImageFilterID3___New_orig__():
  """itkVTKImageToImageFilterID3___New_orig__()"""
  return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterID3___New_orig__()

def itkVTKImageToImageFilterID3_cast(*args):
  """itkVTKImageToImageFilterID3_cast(itkLightObject obj) -> itkVTKImageToImageFilterID3"""
  return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterID3_cast(*args)

class itkVTKImageToImageFilterIF2(itkVTKImageImportPython.itkVTKImageImportIF2):
    """Proxy of C++ itkVTKImageToImageFilterIF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput(self, *args):
        """SetInput(self, vtkImageData arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF2_SetInput(self, *args)

    def GetExporter(self):
        """GetExporter(self) -> vtkImageExport"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF2_GetExporter(self)

    def GetImporter(self):
        """GetImporter(self) -> itkVTKImageImportIF2"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF2_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterIF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterIF2"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageToImageFilterIF2"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterIF2
        
        Create a new object of the class itkVTKImageToImageFilterIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageToImageFilterIF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageToImageFilterIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterIF2.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF2_SetInput,None,itkVTKImageToImageFilterIF2)
itkVTKImageToImageFilterIF2.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF2_GetExporter,None,itkVTKImageToImageFilterIF2)
itkVTKImageToImageFilterIF2.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF2_GetImporter,None,itkVTKImageToImageFilterIF2)
itkVTKImageToImageFilterIF2.GetPointer = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF2_GetPointer,None,itkVTKImageToImageFilterIF2)
itkVTKImageToImageFilterIF2_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF2_swigregister
itkVTKImageToImageFilterIF2_swigregister(itkVTKImageToImageFilterIF2)

def itkVTKImageToImageFilterIF2___New_orig__():
  """itkVTKImageToImageFilterIF2___New_orig__()"""
  return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF2___New_orig__()

def itkVTKImageToImageFilterIF2_cast(*args):
  """itkVTKImageToImageFilterIF2_cast(itkLightObject obj) -> itkVTKImageToImageFilterIF2"""
  return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF2_cast(*args)

class itkVTKImageToImageFilterIF3(itkVTKImageImportPython.itkVTKImageImportIF3):
    """Proxy of C++ itkVTKImageToImageFilterIF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput(self, *args):
        """SetInput(self, vtkImageData arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF3_SetInput(self, *args)

    def GetExporter(self):
        """GetExporter(self) -> vtkImageExport"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF3_GetExporter(self)

    def GetImporter(self):
        """GetImporter(self) -> itkVTKImageImportIF3"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF3_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterIF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterIF3"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageToImageFilterIF3"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterIF3
        
        Create a new object of the class itkVTKImageToImageFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageToImageFilterIF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageToImageFilterIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterIF3.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF3_SetInput,None,itkVTKImageToImageFilterIF3)
itkVTKImageToImageFilterIF3.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF3_GetExporter,None,itkVTKImageToImageFilterIF3)
itkVTKImageToImageFilterIF3.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF3_GetImporter,None,itkVTKImageToImageFilterIF3)
itkVTKImageToImageFilterIF3.GetPointer = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF3_GetPointer,None,itkVTKImageToImageFilterIF3)
itkVTKImageToImageFilterIF3_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF3_swigregister
itkVTKImageToImageFilterIF3_swigregister(itkVTKImageToImageFilterIF3)

def itkVTKImageToImageFilterIF3___New_orig__():
  """itkVTKImageToImageFilterIF3___New_orig__()"""
  return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF3___New_orig__()

def itkVTKImageToImageFilterIF3_cast(*args):
  """itkVTKImageToImageFilterIF3_cast(itkLightObject obj) -> itkVTKImageToImageFilterIF3"""
  return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIF3_cast(*args)

class itkVTKImageToImageFilterIUC2(itkVTKImageImportPython.itkVTKImageImportIUC2):
    """Proxy of C++ itkVTKImageToImageFilterIUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput(self, *args):
        """SetInput(self, vtkImageData arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC2_SetInput(self, *args)

    def GetExporter(self):
        """GetExporter(self) -> vtkImageExport"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC2_GetExporter(self)

    def GetImporter(self):
        """GetImporter(self) -> itkVTKImageImportIUC2"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC2_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterIUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterIUC2"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageToImageFilterIUC2"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterIUC2
        
        Create a new object of the class itkVTKImageToImageFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageToImageFilterIUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageToImageFilterIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterIUC2.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC2_SetInput,None,itkVTKImageToImageFilterIUC2)
itkVTKImageToImageFilterIUC2.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC2_GetExporter,None,itkVTKImageToImageFilterIUC2)
itkVTKImageToImageFilterIUC2.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC2_GetImporter,None,itkVTKImageToImageFilterIUC2)
itkVTKImageToImageFilterIUC2.GetPointer = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC2_GetPointer,None,itkVTKImageToImageFilterIUC2)
itkVTKImageToImageFilterIUC2_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC2_swigregister
itkVTKImageToImageFilterIUC2_swigregister(itkVTKImageToImageFilterIUC2)

def itkVTKImageToImageFilterIUC2___New_orig__():
  """itkVTKImageToImageFilterIUC2___New_orig__()"""
  return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC2___New_orig__()

def itkVTKImageToImageFilterIUC2_cast(*args):
  """itkVTKImageToImageFilterIUC2_cast(itkLightObject obj) -> itkVTKImageToImageFilterIUC2"""
  return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC2_cast(*args)

class itkVTKImageToImageFilterIUC3(itkVTKImageImportPython.itkVTKImageImportIUC3):
    """Proxy of C++ itkVTKImageToImageFilterIUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput(self, *args):
        """SetInput(self, vtkImageData arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC3_SetInput(self, *args)

    def GetExporter(self):
        """GetExporter(self) -> vtkImageExport"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC3_GetExporter(self)

    def GetImporter(self):
        """GetImporter(self) -> itkVTKImageImportIUC3"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC3_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterIUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterIUC3"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageToImageFilterIUC3"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterIUC3
        
        Create a new object of the class itkVTKImageToImageFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageToImageFilterIUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageToImageFilterIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterIUC3.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC3_SetInput,None,itkVTKImageToImageFilterIUC3)
itkVTKImageToImageFilterIUC3.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC3_GetExporter,None,itkVTKImageToImageFilterIUC3)
itkVTKImageToImageFilterIUC3.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC3_GetImporter,None,itkVTKImageToImageFilterIUC3)
itkVTKImageToImageFilterIUC3.GetPointer = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC3_GetPointer,None,itkVTKImageToImageFilterIUC3)
itkVTKImageToImageFilterIUC3_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC3_swigregister
itkVTKImageToImageFilterIUC3_swigregister(itkVTKImageToImageFilterIUC3)

def itkVTKImageToImageFilterIUC3___New_orig__():
  """itkVTKImageToImageFilterIUC3___New_orig__()"""
  return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC3___New_orig__()

def itkVTKImageToImageFilterIUC3_cast(*args):
  """itkVTKImageToImageFilterIUC3_cast(itkLightObject obj) -> itkVTKImageToImageFilterIUC3"""
  return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUC3_cast(*args)

class itkVTKImageToImageFilterIUL2(itkVTKImageImportPython.itkVTKImageImportIUL2):
    """Proxy of C++ itkVTKImageToImageFilterIUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput(self, *args):
        """SetInput(self, vtkImageData arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL2_SetInput(self, *args)

    def GetExporter(self):
        """GetExporter(self) -> vtkImageExport"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL2_GetExporter(self)

    def GetImporter(self):
        """GetImporter(self) -> itkVTKImageImportIUL2"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL2_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterIUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterIUL2"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageToImageFilterIUL2"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterIUL2
        
        Create a new object of the class itkVTKImageToImageFilterIUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageToImageFilterIUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageToImageFilterIUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterIUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterIUL2.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL2_SetInput,None,itkVTKImageToImageFilterIUL2)
itkVTKImageToImageFilterIUL2.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL2_GetExporter,None,itkVTKImageToImageFilterIUL2)
itkVTKImageToImageFilterIUL2.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL2_GetImporter,None,itkVTKImageToImageFilterIUL2)
itkVTKImageToImageFilterIUL2.GetPointer = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL2_GetPointer,None,itkVTKImageToImageFilterIUL2)
itkVTKImageToImageFilterIUL2_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL2_swigregister
itkVTKImageToImageFilterIUL2_swigregister(itkVTKImageToImageFilterIUL2)

def itkVTKImageToImageFilterIUL2___New_orig__():
  """itkVTKImageToImageFilterIUL2___New_orig__()"""
  return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL2___New_orig__()

def itkVTKImageToImageFilterIUL2_cast(*args):
  """itkVTKImageToImageFilterIUL2_cast(itkLightObject obj) -> itkVTKImageToImageFilterIUL2"""
  return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL2_cast(*args)

class itkVTKImageToImageFilterIUL3(itkVTKImageImportPython.itkVTKImageImportIUL3):
    """Proxy of C++ itkVTKImageToImageFilterIUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput(self, *args):
        """SetInput(self, vtkImageData arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL3_SetInput(self, *args)

    def GetExporter(self):
        """GetExporter(self) -> vtkImageExport"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL3_GetExporter(self)

    def GetImporter(self):
        """GetImporter(self) -> itkVTKImageImportIUL3"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL3_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterIUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterIUL3"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageToImageFilterIUL3"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterIUL3
        
        Create a new object of the class itkVTKImageToImageFilterIUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageToImageFilterIUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageToImageFilterIUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterIUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterIUL3.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL3_SetInput,None,itkVTKImageToImageFilterIUL3)
itkVTKImageToImageFilterIUL3.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL3_GetExporter,None,itkVTKImageToImageFilterIUL3)
itkVTKImageToImageFilterIUL3.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL3_GetImporter,None,itkVTKImageToImageFilterIUL3)
itkVTKImageToImageFilterIUL3.GetPointer = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL3_GetPointer,None,itkVTKImageToImageFilterIUL3)
itkVTKImageToImageFilterIUL3_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL3_swigregister
itkVTKImageToImageFilterIUL3_swigregister(itkVTKImageToImageFilterIUL3)

def itkVTKImageToImageFilterIUL3___New_orig__():
  """itkVTKImageToImageFilterIUL3___New_orig__()"""
  return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL3___New_orig__()

def itkVTKImageToImageFilterIUL3_cast(*args):
  """itkVTKImageToImageFilterIUL3_cast(itkLightObject obj) -> itkVTKImageToImageFilterIUL3"""
  return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUL3_cast(*args)

class itkVTKImageToImageFilterIUS2(itkVTKImageImportPython.itkVTKImageImportIUS2):
    """Proxy of C++ itkVTKImageToImageFilterIUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput(self, *args):
        """SetInput(self, vtkImageData arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS2_SetInput(self, *args)

    def GetExporter(self):
        """GetExporter(self) -> vtkImageExport"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS2_GetExporter(self)

    def GetImporter(self):
        """GetImporter(self) -> itkVTKImageImportIUS2"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS2_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterIUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterIUS2"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageToImageFilterIUS2"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterIUS2
        
        Create a new object of the class itkVTKImageToImageFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageToImageFilterIUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageToImageFilterIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterIUS2.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS2_SetInput,None,itkVTKImageToImageFilterIUS2)
itkVTKImageToImageFilterIUS2.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS2_GetExporter,None,itkVTKImageToImageFilterIUS2)
itkVTKImageToImageFilterIUS2.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS2_GetImporter,None,itkVTKImageToImageFilterIUS2)
itkVTKImageToImageFilterIUS2.GetPointer = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS2_GetPointer,None,itkVTKImageToImageFilterIUS2)
itkVTKImageToImageFilterIUS2_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS2_swigregister
itkVTKImageToImageFilterIUS2_swigregister(itkVTKImageToImageFilterIUS2)

def itkVTKImageToImageFilterIUS2___New_orig__():
  """itkVTKImageToImageFilterIUS2___New_orig__()"""
  return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS2___New_orig__()

def itkVTKImageToImageFilterIUS2_cast(*args):
  """itkVTKImageToImageFilterIUS2_cast(itkLightObject obj) -> itkVTKImageToImageFilterIUS2"""
  return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS2_cast(*args)

class itkVTKImageToImageFilterIUS3(itkVTKImageImportPython.itkVTKImageImportIUS3):
    """Proxy of C++ itkVTKImageToImageFilterIUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput(self, *args):
        """SetInput(self, vtkImageData arg0)"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS3_SetInput(self, *args)

    def GetExporter(self):
        """GetExporter(self) -> vtkImageExport"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS3_GetExporter(self)

    def GetImporter(self):
        """GetImporter(self) -> itkVTKImageImportIUS3"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS3_GetImporter(self)

    __swig_destroy__ = _itkVTKImageToImageFilterPython.delete_itkVTKImageToImageFilterIUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageToImageFilterIUS3"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageToImageFilterIUS3"""
        return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageToImageFilterIUS3
        
        Create a new object of the class itkVTKImageToImageFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageToImageFilterIUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageToImageFilterIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageToImageFilterIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageToImageFilterIUS3.SetInput = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS3_SetInput,None,itkVTKImageToImageFilterIUS3)
itkVTKImageToImageFilterIUS3.GetExporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS3_GetExporter,None,itkVTKImageToImageFilterIUS3)
itkVTKImageToImageFilterIUS3.GetImporter = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS3_GetImporter,None,itkVTKImageToImageFilterIUS3)
itkVTKImageToImageFilterIUS3.GetPointer = new_instancemethod(_itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS3_GetPointer,None,itkVTKImageToImageFilterIUS3)
itkVTKImageToImageFilterIUS3_swigregister = _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS3_swigregister
itkVTKImageToImageFilterIUS3_swigregister(itkVTKImageToImageFilterIUS3)

def itkVTKImageToImageFilterIUS3___New_orig__():
  """itkVTKImageToImageFilterIUS3___New_orig__()"""
  return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS3___New_orig__()

def itkVTKImageToImageFilterIUS3_cast(*args):
  """itkVTKImageToImageFilterIUS3_cast(itkLightObject obj) -> itkVTKImageToImageFilterIUS3"""
  return _itkVTKImageToImageFilterPython.itkVTKImageToImageFilterIUS3_cast(*args)



