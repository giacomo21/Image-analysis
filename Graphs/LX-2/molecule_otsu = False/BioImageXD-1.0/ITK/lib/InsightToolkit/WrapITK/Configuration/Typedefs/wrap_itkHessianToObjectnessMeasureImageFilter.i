// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkHessianToObjectnessMeasureImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkHessianToObjectnessMeasureImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkHessianToObjectnessMeasureImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkHessianToObjectnessMeasureImageFilterJava
#endif
#ifdef SWIGLUA
%module itkHessianToObjectnessMeasureImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkHessianToObjectnessMeasureImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkHessianToObjectnessMeasureImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkHessianToObjectnessMeasureImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkHessianToObjectnessMeasureImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkHessianToObjectnessMeasureImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkHessianToObjectnessMeasureImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkHessianToObjectnessMeasureImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkHessianToObjectnessMeasureImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkHessianToObjectnessMeasureImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkHessianToObjectnessMeasureImageFilterPython
#endif
#ifdef SWIGR
%module itkHessianToObjectnessMeasureImageFilterR
#endif
#ifdef SWIGRUBY
%module itkHessianToObjectnessMeasureImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkHessianToObjectnessMeasureImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkHessianToObjectnessMeasureImageFilterTcl
#endif
#ifdef SWIGXML
%module itkHessianToObjectnessMeasureImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Filtering.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_ITKRegions.i
%import wrap_itkImageToImageFilterB.i


%include itk.i
%include wrap_itkHessianToObjectnessMeasureImageFilter_ext.i


 class itkHessianToObjectnessMeasureImageFilterISSRTD22ID2 : public itkImageToImageFilterISSRTD22ID2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetAlpha(double const _arg);
     virtual double GetAlpha() const;
     virtual void SetBeta(double const _arg);
     virtual double GetBeta() const;
     virtual void SetGamma(double const _arg);
     virtual double GetGamma() const;
     virtual void SetScaleObjectnessMeasure(bool const _arg);
     virtual bool GetScaleObjectnessMeasure() const;
     virtual void ScaleObjectnessMeasureOn();
     virtual void ScaleObjectnessMeasureOff();
     virtual void SetObjectDimension(unsigned int const _arg);
     virtual unsigned int GetObjectDimension() const;
     virtual void SetBrightObject(bool const _arg);
     virtual bool GetBrightObject() const;
     virtual void BrightObjectOn();
     virtual void BrightObjectOff();
   private:
     itkHessianToObjectnessMeasureImageFilterISSRTD22ID2(itkHessianToObjectnessMeasureImageFilterISSRTD22ID2 const & arg0);
     void operator=(itkHessianToObjectnessMeasureImageFilterISSRTD22ID2 const & arg0);
   protected:
     itkHessianToObjectnessMeasureImageFilterISSRTD22ID2();
     ~itkHessianToObjectnessMeasureImageFilterISSRTD22ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_Pointer {
   public:
     itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_Pointer();
     itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_Pointer(itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_Pointer const & p);
     itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_Pointer(itkHessianToObjectnessMeasureImageFilterISSRTD22ID2 * p);
     ~itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_Pointer();
     itkHessianToObjectnessMeasureImageFilterISSRTD22ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHessianToObjectnessMeasureImageFilterISSRTD22ID2 * GetPointer() const;
     bool operator<(itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_Pointer const & r) const;
     bool operator>(itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_Pointer const & r) const;
     bool operator<=(itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_Pointer const & r) const;
     bool operator>=(itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_Pointer const & r) const;
     itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_Pointer & operator=(itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_Pointer const & r);
     itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_Pointer & operator=(itkHessianToObjectnessMeasureImageFilterISSRTD22ID2 * r);
     itkHessianToObjectnessMeasureImageFilterISSRTD22ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHessianToObjectnessMeasureImageFilterISSRTD22IF2 : public itkImageToImageFilterISSRTD22IF2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetAlpha(double const _arg);
     virtual double GetAlpha() const;
     virtual void SetBeta(double const _arg);
     virtual double GetBeta() const;
     virtual void SetGamma(double const _arg);
     virtual double GetGamma() const;
     virtual void SetScaleObjectnessMeasure(bool const _arg);
     virtual bool GetScaleObjectnessMeasure() const;
     virtual void ScaleObjectnessMeasureOn();
     virtual void ScaleObjectnessMeasureOff();
     virtual void SetObjectDimension(unsigned int const _arg);
     virtual unsigned int GetObjectDimension() const;
     virtual void SetBrightObject(bool const _arg);
     virtual bool GetBrightObject() const;
     virtual void BrightObjectOn();
     virtual void BrightObjectOff();
   private:
     itkHessianToObjectnessMeasureImageFilterISSRTD22IF2(itkHessianToObjectnessMeasureImageFilterISSRTD22IF2 const & arg0);
     void operator=(itkHessianToObjectnessMeasureImageFilterISSRTD22IF2 const & arg0);
   protected:
     itkHessianToObjectnessMeasureImageFilterISSRTD22IF2();
     ~itkHessianToObjectnessMeasureImageFilterISSRTD22IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_Pointer {
   public:
     itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_Pointer();
     itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_Pointer(itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_Pointer const & p);
     itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_Pointer(itkHessianToObjectnessMeasureImageFilterISSRTD22IF2 * p);
     ~itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_Pointer();
     itkHessianToObjectnessMeasureImageFilterISSRTD22IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHessianToObjectnessMeasureImageFilterISSRTD22IF2 * GetPointer() const;
     bool operator<(itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_Pointer const & r) const;
     bool operator>(itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_Pointer const & r) const;
     bool operator<=(itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_Pointer const & r) const;
     bool operator>=(itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_Pointer const & r) const;
     itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_Pointer & operator=(itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_Pointer const & r);
     itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_Pointer & operator=(itkHessianToObjectnessMeasureImageFilterISSRTD22IF2 * r);
     itkHessianToObjectnessMeasureImageFilterISSRTD22IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2 : public itkImageToImageFilterISSRTD22IUC2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetAlpha(double const _arg);
     virtual double GetAlpha() const;
     virtual void SetBeta(double const _arg);
     virtual double GetBeta() const;
     virtual void SetGamma(double const _arg);
     virtual double GetGamma() const;
     virtual void SetScaleObjectnessMeasure(bool const _arg);
     virtual bool GetScaleObjectnessMeasure() const;
     virtual void ScaleObjectnessMeasureOn();
     virtual void ScaleObjectnessMeasureOff();
     virtual void SetObjectDimension(unsigned int const _arg);
     virtual unsigned int GetObjectDimension() const;
     virtual void SetBrightObject(bool const _arg);
     virtual bool GetBrightObject() const;
     virtual void BrightObjectOn();
     virtual void BrightObjectOff();
   private:
     itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2(itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2 const & arg0);
     void operator=(itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2 const & arg0);
   protected:
     itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2();
     ~itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_Pointer {
   public:
     itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_Pointer();
     itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_Pointer(itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_Pointer const & p);
     itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_Pointer(itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2 * p);
     ~itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_Pointer();
     itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2 * GetPointer() const;
     bool operator<(itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_Pointer const & r) const;
     bool operator>(itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_Pointer const & r) const;
     bool operator<=(itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_Pointer const & r) const;
     bool operator>=(itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_Pointer const & r) const;
     itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_Pointer & operator=(itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_Pointer const & r);
     itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_Pointer & operator=(itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2 * r);
     itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHessianToObjectnessMeasureImageFilterISSRTD22IUL2 : public itkImageToImageFilterISSRTD22IUL2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkHessianToObjectnessMeasureImageFilterISSRTD22IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetAlpha(double const _arg);
     virtual double GetAlpha() const;
     virtual void SetBeta(double const _arg);
     virtual double GetBeta() const;
     virtual void SetGamma(double const _arg);
     virtual double GetGamma() const;
     virtual void SetScaleObjectnessMeasure(bool const _arg);
     virtual bool GetScaleObjectnessMeasure() const;
     virtual void ScaleObjectnessMeasureOn();
     virtual void ScaleObjectnessMeasureOff();
     virtual void SetObjectDimension(unsigned int const _arg);
     virtual unsigned int GetObjectDimension() const;
     virtual void SetBrightObject(bool const _arg);
     virtual bool GetBrightObject() const;
     virtual void BrightObjectOn();
     virtual void BrightObjectOff();
   private:
     itkHessianToObjectnessMeasureImageFilterISSRTD22IUL2(itkHessianToObjectnessMeasureImageFilterISSRTD22IUL2 const & arg0);
     void operator=(itkHessianToObjectnessMeasureImageFilterISSRTD22IUL2 const & arg0);
   protected:
     itkHessianToObjectnessMeasureImageFilterISSRTD22IUL2();
     ~itkHessianToObjectnessMeasureImageFilterISSRTD22IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkHessianToObjectnessMeasureImageFilterISSRTD22IUL2_Pointer {
   public:
     itkHessianToObjectnessMeasureImageFilterISSRTD22IUL2_Pointer();
     itkHessianToObjectnessMeasureImageFilterISSRTD22IUL2_Pointer(itkHessianToObjectnessMeasureImageFilterISSRTD22IUL2_Pointer const & p);
     itkHessianToObjectnessMeasureImageFilterISSRTD22IUL2_Pointer(itkHessianToObjectnessMeasureImageFilterISSRTD22IUL2 * p);
     ~itkHessianToObjectnessMeasureImageFilterISSRTD22IUL2_Pointer();
     itkHessianToObjectnessMeasureImageFilterISSRTD22IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHessianToObjectnessMeasureImageFilterISSRTD22IUL2 * GetPointer() const;
     bool operator<(itkHessianToObjectnessMeasureImageFilterISSRTD22IUL2_Pointer const & r) const;
     bool operator>(itkHessianToObjectnessMeasureImageFilterISSRTD22IUL2_Pointer const & r) const;
     bool operator<=(itkHessianToObjectnessMeasureImageFilterISSRTD22IUL2_Pointer const & r) const;
     bool operator>=(itkHessianToObjectnessMeasureImageFilterISSRTD22IUL2_Pointer const & r) const;
     itkHessianToObjectnessMeasureImageFilterISSRTD22IUL2_Pointer & operator=(itkHessianToObjectnessMeasureImageFilterISSRTD22IUL2_Pointer const & r);
     itkHessianToObjectnessMeasureImageFilterISSRTD22IUL2_Pointer & operator=(itkHessianToObjectnessMeasureImageFilterISSRTD22IUL2 * r);
     itkHessianToObjectnessMeasureImageFilterISSRTD22IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2 : public itkImageToImageFilterISSRTD22IUS2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetAlpha(double const _arg);
     virtual double GetAlpha() const;
     virtual void SetBeta(double const _arg);
     virtual double GetBeta() const;
     virtual void SetGamma(double const _arg);
     virtual double GetGamma() const;
     virtual void SetScaleObjectnessMeasure(bool const _arg);
     virtual bool GetScaleObjectnessMeasure() const;
     virtual void ScaleObjectnessMeasureOn();
     virtual void ScaleObjectnessMeasureOff();
     virtual void SetObjectDimension(unsigned int const _arg);
     virtual unsigned int GetObjectDimension() const;
     virtual void SetBrightObject(bool const _arg);
     virtual bool GetBrightObject() const;
     virtual void BrightObjectOn();
     virtual void BrightObjectOff();
   private:
     itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2(itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2 const & arg0);
     void operator=(itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2 const & arg0);
   protected:
     itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2();
     ~itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_Pointer {
   public:
     itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_Pointer();
     itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_Pointer(itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_Pointer const & p);
     itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_Pointer(itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2 * p);
     ~itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_Pointer();
     itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2 * GetPointer() const;
     bool operator<(itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_Pointer const & r) const;
     bool operator>(itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_Pointer const & r) const;
     bool operator<=(itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_Pointer const & r) const;
     bool operator>=(itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_Pointer const & r) const;
     itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_Pointer & operator=(itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_Pointer const & r);
     itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_Pointer & operator=(itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2 * r);
     itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHessianToObjectnessMeasureImageFilterISSRTD33ID3 : public itkImageToImageFilterISSRTD33ID3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetAlpha(double const _arg);
     virtual double GetAlpha() const;
     virtual void SetBeta(double const _arg);
     virtual double GetBeta() const;
     virtual void SetGamma(double const _arg);
     virtual double GetGamma() const;
     virtual void SetScaleObjectnessMeasure(bool const _arg);
     virtual bool GetScaleObjectnessMeasure() const;
     virtual void ScaleObjectnessMeasureOn();
     virtual void ScaleObjectnessMeasureOff();
     virtual void SetObjectDimension(unsigned int const _arg);
     virtual unsigned int GetObjectDimension() const;
     virtual void SetBrightObject(bool const _arg);
     virtual bool GetBrightObject() const;
     virtual void BrightObjectOn();
     virtual void BrightObjectOff();
   private:
     itkHessianToObjectnessMeasureImageFilterISSRTD33ID3(itkHessianToObjectnessMeasureImageFilterISSRTD33ID3 const & arg0);
     void operator=(itkHessianToObjectnessMeasureImageFilterISSRTD33ID3 const & arg0);
   protected:
     itkHessianToObjectnessMeasureImageFilterISSRTD33ID3();
     ~itkHessianToObjectnessMeasureImageFilterISSRTD33ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_Pointer {
   public:
     itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_Pointer();
     itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_Pointer(itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_Pointer const & p);
     itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_Pointer(itkHessianToObjectnessMeasureImageFilterISSRTD33ID3 * p);
     ~itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_Pointer();
     itkHessianToObjectnessMeasureImageFilterISSRTD33ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHessianToObjectnessMeasureImageFilterISSRTD33ID3 * GetPointer() const;
     bool operator<(itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_Pointer const & r) const;
     bool operator>(itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_Pointer const & r) const;
     bool operator<=(itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_Pointer const & r) const;
     bool operator>=(itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_Pointer const & r) const;
     itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_Pointer & operator=(itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_Pointer const & r);
     itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_Pointer & operator=(itkHessianToObjectnessMeasureImageFilterISSRTD33ID3 * r);
     itkHessianToObjectnessMeasureImageFilterISSRTD33ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHessianToObjectnessMeasureImageFilterISSRTD33IF3 : public itkImageToImageFilterISSRTD33IF3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetAlpha(double const _arg);
     virtual double GetAlpha() const;
     virtual void SetBeta(double const _arg);
     virtual double GetBeta() const;
     virtual void SetGamma(double const _arg);
     virtual double GetGamma() const;
     virtual void SetScaleObjectnessMeasure(bool const _arg);
     virtual bool GetScaleObjectnessMeasure() const;
     virtual void ScaleObjectnessMeasureOn();
     virtual void ScaleObjectnessMeasureOff();
     virtual void SetObjectDimension(unsigned int const _arg);
     virtual unsigned int GetObjectDimension() const;
     virtual void SetBrightObject(bool const _arg);
     virtual bool GetBrightObject() const;
     virtual void BrightObjectOn();
     virtual void BrightObjectOff();
   private:
     itkHessianToObjectnessMeasureImageFilterISSRTD33IF3(itkHessianToObjectnessMeasureImageFilterISSRTD33IF3 const & arg0);
     void operator=(itkHessianToObjectnessMeasureImageFilterISSRTD33IF3 const & arg0);
   protected:
     itkHessianToObjectnessMeasureImageFilterISSRTD33IF3();
     ~itkHessianToObjectnessMeasureImageFilterISSRTD33IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_Pointer {
   public:
     itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_Pointer();
     itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_Pointer(itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_Pointer const & p);
     itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_Pointer(itkHessianToObjectnessMeasureImageFilterISSRTD33IF3 * p);
     ~itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_Pointer();
     itkHessianToObjectnessMeasureImageFilterISSRTD33IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHessianToObjectnessMeasureImageFilterISSRTD33IF3 * GetPointer() const;
     bool operator<(itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_Pointer const & r) const;
     bool operator>(itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_Pointer const & r) const;
     bool operator<=(itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_Pointer const & r) const;
     bool operator>=(itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_Pointer const & r) const;
     itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_Pointer & operator=(itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_Pointer const & r);
     itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_Pointer & operator=(itkHessianToObjectnessMeasureImageFilterISSRTD33IF3 * r);
     itkHessianToObjectnessMeasureImageFilterISSRTD33IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3 : public itkImageToImageFilterISSRTD33IUC3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetAlpha(double const _arg);
     virtual double GetAlpha() const;
     virtual void SetBeta(double const _arg);
     virtual double GetBeta() const;
     virtual void SetGamma(double const _arg);
     virtual double GetGamma() const;
     virtual void SetScaleObjectnessMeasure(bool const _arg);
     virtual bool GetScaleObjectnessMeasure() const;
     virtual void ScaleObjectnessMeasureOn();
     virtual void ScaleObjectnessMeasureOff();
     virtual void SetObjectDimension(unsigned int const _arg);
     virtual unsigned int GetObjectDimension() const;
     virtual void SetBrightObject(bool const _arg);
     virtual bool GetBrightObject() const;
     virtual void BrightObjectOn();
     virtual void BrightObjectOff();
   private:
     itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3(itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3 const & arg0);
     void operator=(itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3 const & arg0);
   protected:
     itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3();
     ~itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_Pointer {
   public:
     itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_Pointer();
     itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_Pointer(itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_Pointer const & p);
     itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_Pointer(itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3 * p);
     ~itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_Pointer();
     itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3 * GetPointer() const;
     bool operator<(itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_Pointer const & r) const;
     bool operator>(itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_Pointer const & r) const;
     bool operator<=(itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_Pointer const & r) const;
     bool operator>=(itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_Pointer const & r) const;
     itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_Pointer & operator=(itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_Pointer const & r);
     itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_Pointer & operator=(itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3 * r);
     itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHessianToObjectnessMeasureImageFilterISSRTD33IUL3 : public itkImageToImageFilterISSRTD33IUL3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkHessianToObjectnessMeasureImageFilterISSRTD33IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetAlpha(double const _arg);
     virtual double GetAlpha() const;
     virtual void SetBeta(double const _arg);
     virtual double GetBeta() const;
     virtual void SetGamma(double const _arg);
     virtual double GetGamma() const;
     virtual void SetScaleObjectnessMeasure(bool const _arg);
     virtual bool GetScaleObjectnessMeasure() const;
     virtual void ScaleObjectnessMeasureOn();
     virtual void ScaleObjectnessMeasureOff();
     virtual void SetObjectDimension(unsigned int const _arg);
     virtual unsigned int GetObjectDimension() const;
     virtual void SetBrightObject(bool const _arg);
     virtual bool GetBrightObject() const;
     virtual void BrightObjectOn();
     virtual void BrightObjectOff();
   private:
     itkHessianToObjectnessMeasureImageFilterISSRTD33IUL3(itkHessianToObjectnessMeasureImageFilterISSRTD33IUL3 const & arg0);
     void operator=(itkHessianToObjectnessMeasureImageFilterISSRTD33IUL3 const & arg0);
   protected:
     itkHessianToObjectnessMeasureImageFilterISSRTD33IUL3();
     ~itkHessianToObjectnessMeasureImageFilterISSRTD33IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkHessianToObjectnessMeasureImageFilterISSRTD33IUL3_Pointer {
   public:
     itkHessianToObjectnessMeasureImageFilterISSRTD33IUL3_Pointer();
     itkHessianToObjectnessMeasureImageFilterISSRTD33IUL3_Pointer(itkHessianToObjectnessMeasureImageFilterISSRTD33IUL3_Pointer const & p);
     itkHessianToObjectnessMeasureImageFilterISSRTD33IUL3_Pointer(itkHessianToObjectnessMeasureImageFilterISSRTD33IUL3 * p);
     ~itkHessianToObjectnessMeasureImageFilterISSRTD33IUL3_Pointer();
     itkHessianToObjectnessMeasureImageFilterISSRTD33IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHessianToObjectnessMeasureImageFilterISSRTD33IUL3 * GetPointer() const;
     bool operator<(itkHessianToObjectnessMeasureImageFilterISSRTD33IUL3_Pointer const & r) const;
     bool operator>(itkHessianToObjectnessMeasureImageFilterISSRTD33IUL3_Pointer const & r) const;
     bool operator<=(itkHessianToObjectnessMeasureImageFilterISSRTD33IUL3_Pointer const & r) const;
     bool operator>=(itkHessianToObjectnessMeasureImageFilterISSRTD33IUL3_Pointer const & r) const;
     itkHessianToObjectnessMeasureImageFilterISSRTD33IUL3_Pointer & operator=(itkHessianToObjectnessMeasureImageFilterISSRTD33IUL3_Pointer const & r);
     itkHessianToObjectnessMeasureImageFilterISSRTD33IUL3_Pointer & operator=(itkHessianToObjectnessMeasureImageFilterISSRTD33IUL3 * r);
     itkHessianToObjectnessMeasureImageFilterISSRTD33IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3 : public itkImageToImageFilterISSRTD33IUS3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetAlpha(double const _arg);
     virtual double GetAlpha() const;
     virtual void SetBeta(double const _arg);
     virtual double GetBeta() const;
     virtual void SetGamma(double const _arg);
     virtual double GetGamma() const;
     virtual void SetScaleObjectnessMeasure(bool const _arg);
     virtual bool GetScaleObjectnessMeasure() const;
     virtual void ScaleObjectnessMeasureOn();
     virtual void ScaleObjectnessMeasureOff();
     virtual void SetObjectDimension(unsigned int const _arg);
     virtual unsigned int GetObjectDimension() const;
     virtual void SetBrightObject(bool const _arg);
     virtual bool GetBrightObject() const;
     virtual void BrightObjectOn();
     virtual void BrightObjectOff();
   private:
     itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3(itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3 const & arg0);
     void operator=(itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3 const & arg0);
   protected:
     itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3();
     ~itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_Pointer {
   public:
     itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_Pointer();
     itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_Pointer(itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_Pointer const & p);
     itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_Pointer(itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3 * p);
     ~itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_Pointer();
     itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3 * GetPointer() const;
     bool operator<(itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_Pointer const & r) const;
     bool operator>(itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_Pointer const & r) const;
     bool operator<=(itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_Pointer const & r) const;
     bool operator>=(itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_Pointer const & r) const;
     itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_Pointer & operator=(itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_Pointer const & r);
     itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_Pointer & operator=(itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3 * r);
     itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


