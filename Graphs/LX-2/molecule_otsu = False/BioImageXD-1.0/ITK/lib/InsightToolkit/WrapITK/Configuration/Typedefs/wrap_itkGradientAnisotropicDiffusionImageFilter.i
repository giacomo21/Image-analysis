// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkGradientAnisotropicDiffusionImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkGradientAnisotropicDiffusionImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkGradientAnisotropicDiffusionImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkGradientAnisotropicDiffusionImageFilterJava
#endif
#ifdef SWIGLUA
%module itkGradientAnisotropicDiffusionImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkGradientAnisotropicDiffusionImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkGradientAnisotropicDiffusionImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkGradientAnisotropicDiffusionImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkGradientAnisotropicDiffusionImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkGradientAnisotropicDiffusionImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkGradientAnisotropicDiffusionImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkGradientAnisotropicDiffusionImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkGradientAnisotropicDiffusionImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkGradientAnisotropicDiffusionImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkGradientAnisotropicDiffusionImageFilterPython
#endif
#ifdef SWIGR
%module itkGradientAnisotropicDiffusionImageFilterR
#endif
#ifdef SWIGRUBY
%module itkGradientAnisotropicDiffusionImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkGradientAnisotropicDiffusionImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkGradientAnisotropicDiffusionImageFilterTcl
#endif
#ifdef SWIGXML
%module itkGradientAnisotropicDiffusionImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Denoising.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkAnisotropicDiffusionImageFilter.i


%include itk.i
%include wrap_itkGradientAnisotropicDiffusionImageFilter_ext.i


 class itkGradientAnisotropicDiffusionImageFilterID2ID2 : public itkAnisotropicDiffusionImageFilterID2ID2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  UpdateBufferHasNumericTraitsCheck = 1 };
     static itkGradientAnisotropicDiffusionImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkGradientAnisotropicDiffusionImageFilterID2ID2(itkGradientAnisotropicDiffusionImageFilterID2ID2 const & arg0);
     void operator=(itkGradientAnisotropicDiffusionImageFilterID2ID2 const & arg0);
   protected:
     itkGradientAnisotropicDiffusionImageFilterID2ID2();
     ~itkGradientAnisotropicDiffusionImageFilterID2ID2();
 };


 class itkGradientAnisotropicDiffusionImageFilterID2ID2_Pointer {
   public:
     itkGradientAnisotropicDiffusionImageFilterID2ID2_Pointer();
     itkGradientAnisotropicDiffusionImageFilterID2ID2_Pointer(itkGradientAnisotropicDiffusionImageFilterID2ID2_Pointer const & p);
     itkGradientAnisotropicDiffusionImageFilterID2ID2_Pointer(itkGradientAnisotropicDiffusionImageFilterID2ID2 * p);
     ~itkGradientAnisotropicDiffusionImageFilterID2ID2_Pointer();
     itkGradientAnisotropicDiffusionImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGradientAnisotropicDiffusionImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkGradientAnisotropicDiffusionImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkGradientAnisotropicDiffusionImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkGradientAnisotropicDiffusionImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkGradientAnisotropicDiffusionImageFilterID2ID2_Pointer const & r) const;
     itkGradientAnisotropicDiffusionImageFilterID2ID2_Pointer & operator=(itkGradientAnisotropicDiffusionImageFilterID2ID2_Pointer const & r);
     itkGradientAnisotropicDiffusionImageFilterID2ID2_Pointer & operator=(itkGradientAnisotropicDiffusionImageFilterID2ID2 * r);
     itkGradientAnisotropicDiffusionImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGradientAnisotropicDiffusionImageFilterID3ID3 : public itkAnisotropicDiffusionImageFilterID3ID3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  UpdateBufferHasNumericTraitsCheck = 1 };
     static itkGradientAnisotropicDiffusionImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkGradientAnisotropicDiffusionImageFilterID3ID3(itkGradientAnisotropicDiffusionImageFilterID3ID3 const & arg0);
     void operator=(itkGradientAnisotropicDiffusionImageFilterID3ID3 const & arg0);
   protected:
     itkGradientAnisotropicDiffusionImageFilterID3ID3();
     ~itkGradientAnisotropicDiffusionImageFilterID3ID3();
 };


 class itkGradientAnisotropicDiffusionImageFilterID3ID3_Pointer {
   public:
     itkGradientAnisotropicDiffusionImageFilterID3ID3_Pointer();
     itkGradientAnisotropicDiffusionImageFilterID3ID3_Pointer(itkGradientAnisotropicDiffusionImageFilterID3ID3_Pointer const & p);
     itkGradientAnisotropicDiffusionImageFilterID3ID3_Pointer(itkGradientAnisotropicDiffusionImageFilterID3ID3 * p);
     ~itkGradientAnisotropicDiffusionImageFilterID3ID3_Pointer();
     itkGradientAnisotropicDiffusionImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGradientAnisotropicDiffusionImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkGradientAnisotropicDiffusionImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkGradientAnisotropicDiffusionImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkGradientAnisotropicDiffusionImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkGradientAnisotropicDiffusionImageFilterID3ID3_Pointer const & r) const;
     itkGradientAnisotropicDiffusionImageFilterID3ID3_Pointer & operator=(itkGradientAnisotropicDiffusionImageFilterID3ID3_Pointer const & r);
     itkGradientAnisotropicDiffusionImageFilterID3ID3_Pointer & operator=(itkGradientAnisotropicDiffusionImageFilterID3ID3 * r);
     itkGradientAnisotropicDiffusionImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGradientAnisotropicDiffusionImageFilterIF2IF2 : public itkAnisotropicDiffusionImageFilterIF2IF2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  UpdateBufferHasNumericTraitsCheck = 1 };
     static itkGradientAnisotropicDiffusionImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkGradientAnisotropicDiffusionImageFilterIF2IF2(itkGradientAnisotropicDiffusionImageFilterIF2IF2 const & arg0);
     void operator=(itkGradientAnisotropicDiffusionImageFilterIF2IF2 const & arg0);
   protected:
     itkGradientAnisotropicDiffusionImageFilterIF2IF2();
     ~itkGradientAnisotropicDiffusionImageFilterIF2IF2();
 };


 class itkGradientAnisotropicDiffusionImageFilterIF2IF2_Pointer {
   public:
     itkGradientAnisotropicDiffusionImageFilterIF2IF2_Pointer();
     itkGradientAnisotropicDiffusionImageFilterIF2IF2_Pointer(itkGradientAnisotropicDiffusionImageFilterIF2IF2_Pointer const & p);
     itkGradientAnisotropicDiffusionImageFilterIF2IF2_Pointer(itkGradientAnisotropicDiffusionImageFilterIF2IF2 * p);
     ~itkGradientAnisotropicDiffusionImageFilterIF2IF2_Pointer();
     itkGradientAnisotropicDiffusionImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGradientAnisotropicDiffusionImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkGradientAnisotropicDiffusionImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkGradientAnisotropicDiffusionImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkGradientAnisotropicDiffusionImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkGradientAnisotropicDiffusionImageFilterIF2IF2_Pointer const & r) const;
     itkGradientAnisotropicDiffusionImageFilterIF2IF2_Pointer & operator=(itkGradientAnisotropicDiffusionImageFilterIF2IF2_Pointer const & r);
     itkGradientAnisotropicDiffusionImageFilterIF2IF2_Pointer & operator=(itkGradientAnisotropicDiffusionImageFilterIF2IF2 * r);
     itkGradientAnisotropicDiffusionImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGradientAnisotropicDiffusionImageFilterIF3IF3 : public itkAnisotropicDiffusionImageFilterIF3IF3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  UpdateBufferHasNumericTraitsCheck = 1 };
     static itkGradientAnisotropicDiffusionImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkGradientAnisotropicDiffusionImageFilterIF3IF3(itkGradientAnisotropicDiffusionImageFilterIF3IF3 const & arg0);
     void operator=(itkGradientAnisotropicDiffusionImageFilterIF3IF3 const & arg0);
   protected:
     itkGradientAnisotropicDiffusionImageFilterIF3IF3();
     ~itkGradientAnisotropicDiffusionImageFilterIF3IF3();
 };


 class itkGradientAnisotropicDiffusionImageFilterIF3IF3_Pointer {
   public:
     itkGradientAnisotropicDiffusionImageFilterIF3IF3_Pointer();
     itkGradientAnisotropicDiffusionImageFilterIF3IF3_Pointer(itkGradientAnisotropicDiffusionImageFilterIF3IF3_Pointer const & p);
     itkGradientAnisotropicDiffusionImageFilterIF3IF3_Pointer(itkGradientAnisotropicDiffusionImageFilterIF3IF3 * p);
     ~itkGradientAnisotropicDiffusionImageFilterIF3IF3_Pointer();
     itkGradientAnisotropicDiffusionImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGradientAnisotropicDiffusionImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkGradientAnisotropicDiffusionImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkGradientAnisotropicDiffusionImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkGradientAnisotropicDiffusionImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkGradientAnisotropicDiffusionImageFilterIF3IF3_Pointer const & r) const;
     itkGradientAnisotropicDiffusionImageFilterIF3IF3_Pointer & operator=(itkGradientAnisotropicDiffusionImageFilterIF3IF3_Pointer const & r);
     itkGradientAnisotropicDiffusionImageFilterIF3IF3_Pointer & operator=(itkGradientAnisotropicDiffusionImageFilterIF3IF3 * r);
     itkGradientAnisotropicDiffusionImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


