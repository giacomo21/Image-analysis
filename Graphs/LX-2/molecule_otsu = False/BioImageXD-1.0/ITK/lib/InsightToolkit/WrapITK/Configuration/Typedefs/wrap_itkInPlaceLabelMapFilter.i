// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkInPlaceLabelMapFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkInPlaceLabelMapFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkInPlaceLabelMapFilterGuile
#endif
#ifdef SWIGJAVA
%module itkInPlaceLabelMapFilterJava
#endif
#ifdef SWIGLUA
%module itkInPlaceLabelMapFilterLua
#endif
#ifdef SWIGMODULA3
%module itkInPlaceLabelMapFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkInPlaceLabelMapFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkInPlaceLabelMapFilterOcaml
#endif
#ifdef SWIGPERL
%module itkInPlaceLabelMapFilterPerl
#endif
#ifdef SWIGPERL5
%module itkInPlaceLabelMapFilterPerl5
#endif
#ifdef SWIGPHP
%module itkInPlaceLabelMapFilterPhp
#endif
#ifdef SWIGPHP4
%module itkInPlaceLabelMapFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkInPlaceLabelMapFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkInPlaceLabelMapFilterPike
#endif
#ifdef SWIGPYTHON
%module itkInPlaceLabelMapFilterPython
#endif
#ifdef SWIGR
%module itkInPlaceLabelMapFilterR
#endif
#ifdef SWIGRUBY
%module itkInPlaceLabelMapFilterRuby
#endif
#ifdef SWIGSEXP
%module itkInPlaceLabelMapFilterSexp
#endif
#ifdef SWIGTCL
%module itkInPlaceLabelMapFilterTcl
#endif
#ifdef SWIGXML
%module itkInPlaceLabelMapFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "Numerics.includes"
#include "BinaryMorphology.includes"
%}


%{
%}




%import wrap_itkLabelMapFilter.i
%import wrap_ITKCommonBase.i
%import wrap_itkLabelMap.i


%include itk.i
%include wrap_itkInPlaceLabelMapFilter_ext.i


 class itkInPlaceLabelMapFilterLM2 : public itkLabelMapFilterLM2LM2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     static itkInPlaceLabelMapFilterLM2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace();
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     bool CanRunInPlace() const;
   private:
     itkInPlaceLabelMapFilterLM2(itkInPlaceLabelMapFilterLM2 const & arg0);
     void operator=(itkInPlaceLabelMapFilterLM2 const & arg0);
   protected:
     itkInPlaceLabelMapFilterLM2();
     ~itkInPlaceLabelMapFilterLM2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
     virtual itkLabelMap2 * GetLabelMap();
 };


 class itkInPlaceLabelMapFilterLM2_Pointer {
   public:
     itkInPlaceLabelMapFilterLM2_Pointer();
     itkInPlaceLabelMapFilterLM2_Pointer(itkInPlaceLabelMapFilterLM2_Pointer const & p);
     itkInPlaceLabelMapFilterLM2_Pointer(itkInPlaceLabelMapFilterLM2 * p);
     ~itkInPlaceLabelMapFilterLM2_Pointer();
     itkInPlaceLabelMapFilterLM2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceLabelMapFilterLM2 * GetPointer() const;
     bool operator<(itkInPlaceLabelMapFilterLM2_Pointer const & r) const;
     bool operator>(itkInPlaceLabelMapFilterLM2_Pointer const & r) const;
     bool operator<=(itkInPlaceLabelMapFilterLM2_Pointer const & r) const;
     bool operator>=(itkInPlaceLabelMapFilterLM2_Pointer const & r) const;
     itkInPlaceLabelMapFilterLM2_Pointer & operator=(itkInPlaceLabelMapFilterLM2_Pointer const & r);
     itkInPlaceLabelMapFilterLM2_Pointer & operator=(itkInPlaceLabelMapFilterLM2 * r);
     itkInPlaceLabelMapFilterLM2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceLabelMapFilterLM3 : public itkLabelMapFilterLM3LM3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     static itkInPlaceLabelMapFilterLM3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace();
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     bool CanRunInPlace() const;
   private:
     itkInPlaceLabelMapFilterLM3(itkInPlaceLabelMapFilterLM3 const & arg0);
     void operator=(itkInPlaceLabelMapFilterLM3 const & arg0);
   protected:
     itkInPlaceLabelMapFilterLM3();
     ~itkInPlaceLabelMapFilterLM3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
     virtual itkLabelMap3 * GetLabelMap();
 };


 class itkInPlaceLabelMapFilterLM3_Pointer {
   public:
     itkInPlaceLabelMapFilterLM3_Pointer();
     itkInPlaceLabelMapFilterLM3_Pointer(itkInPlaceLabelMapFilterLM3_Pointer const & p);
     itkInPlaceLabelMapFilterLM3_Pointer(itkInPlaceLabelMapFilterLM3 * p);
     ~itkInPlaceLabelMapFilterLM3_Pointer();
     itkInPlaceLabelMapFilterLM3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceLabelMapFilterLM3 * GetPointer() const;
     bool operator<(itkInPlaceLabelMapFilterLM3_Pointer const & r) const;
     bool operator>(itkInPlaceLabelMapFilterLM3_Pointer const & r) const;
     bool operator<=(itkInPlaceLabelMapFilterLM3_Pointer const & r) const;
     bool operator>=(itkInPlaceLabelMapFilterLM3_Pointer const & r) const;
     itkInPlaceLabelMapFilterLM3_Pointer & operator=(itkInPlaceLabelMapFilterLM3_Pointer const & r);
     itkInPlaceLabelMapFilterLM3_Pointer & operator=(itkInPlaceLabelMapFilterLM3 * r);
     itkInPlaceLabelMapFilterLM3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


