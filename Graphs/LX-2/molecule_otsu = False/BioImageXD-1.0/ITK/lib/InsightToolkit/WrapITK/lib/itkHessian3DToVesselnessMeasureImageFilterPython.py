# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkHessian3DToVesselnessMeasureImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkHessian3DToVesselnessMeasureImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkHessian3DToVesselnessMeasureImageFilterPython
            return _itkHessian3DToVesselnessMeasureImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkHessian3DToVesselnessMeasureImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkHessian3DToVesselnessMeasureImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkHessian3DToVesselnessMeasureImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkImageToImageFilterBPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
def itkHessian3DToVesselnessMeasureImageFilterD_New():
  return itkHessian3DToVesselnessMeasureImageFilterD.New()

def itkHessian3DToVesselnessMeasureImageFilterF_New():
  return itkHessian3DToVesselnessMeasureImageFilterF.New()

def itkHessian3DToVesselnessMeasureImageFilterUS_New():
  return itkHessian3DToVesselnessMeasureImageFilterUS.New()

def itkHessian3DToVesselnessMeasureImageFilterUL_New():
  return itkHessian3DToVesselnessMeasureImageFilterUL.New()

def itkHessian3DToVesselnessMeasureImageFilterUC_New():
  return itkHessian3DToVesselnessMeasureImageFilterUC.New()

class itkHessian3DToVesselnessMeasureImageFilterD(itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33ID3):
    """Proxy of C++ itkHessian3DToVesselnessMeasureImageFilterD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterD_ImageDimension
    InputPixelDimension = _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterD_InputPixelDimension
    DoubleConvertibleToOutputCheck = _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterD_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetAlpha1(self, *args):
        """SetAlpha1(self, double _arg)"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterD_SetAlpha1(self, *args)

    def GetAlpha1(self):
        """GetAlpha1(self) -> double"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterD_GetAlpha1(self)

    def SetAlpha2(self, *args):
        """SetAlpha2(self, double _arg)"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterD_SetAlpha2(self, *args)

    def GetAlpha2(self):
        """GetAlpha2(self) -> double"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterD_GetAlpha2(self)

    __swig_destroy__ = _itkHessian3DToVesselnessMeasureImageFilterPython.delete_itkHessian3DToVesselnessMeasureImageFilterD
    def cast(*args):
        """cast(itkLightObject obj) -> itkHessian3DToVesselnessMeasureImageFilterD"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkHessian3DToVesselnessMeasureImageFilterD"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkHessian3DToVesselnessMeasureImageFilterD
        
        Create a new object of the class itkHessian3DToVesselnessMeasureImageFilterD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkHessian3DToVesselnessMeasureImageFilterD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkHessian3DToVesselnessMeasureImageFilterD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHessian3DToVesselnessMeasureImageFilterD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHessian3DToVesselnessMeasureImageFilterD.SetAlpha1 = new_instancemethod(_itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterD_SetAlpha1,None,itkHessian3DToVesselnessMeasureImageFilterD)
itkHessian3DToVesselnessMeasureImageFilterD.GetAlpha1 = new_instancemethod(_itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterD_GetAlpha1,None,itkHessian3DToVesselnessMeasureImageFilterD)
itkHessian3DToVesselnessMeasureImageFilterD.SetAlpha2 = new_instancemethod(_itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterD_SetAlpha2,None,itkHessian3DToVesselnessMeasureImageFilterD)
itkHessian3DToVesselnessMeasureImageFilterD.GetAlpha2 = new_instancemethod(_itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterD_GetAlpha2,None,itkHessian3DToVesselnessMeasureImageFilterD)
itkHessian3DToVesselnessMeasureImageFilterD.GetPointer = new_instancemethod(_itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterD_GetPointer,None,itkHessian3DToVesselnessMeasureImageFilterD)
itkHessian3DToVesselnessMeasureImageFilterD_swigregister = _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterD_swigregister
itkHessian3DToVesselnessMeasureImageFilterD_swigregister(itkHessian3DToVesselnessMeasureImageFilterD)

def itkHessian3DToVesselnessMeasureImageFilterD___New_orig__():
  """itkHessian3DToVesselnessMeasureImageFilterD___New_orig__()"""
  return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterD___New_orig__()

def itkHessian3DToVesselnessMeasureImageFilterD_cast(*args):
  """itkHessian3DToVesselnessMeasureImageFilterD_cast(itkLightObject obj) -> itkHessian3DToVesselnessMeasureImageFilterD"""
  return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterD_cast(*args)

class itkHessian3DToVesselnessMeasureImageFilterF(itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IF3):
    """Proxy of C++ itkHessian3DToVesselnessMeasureImageFilterF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterF_ImageDimension
    InputPixelDimension = _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterF_InputPixelDimension
    DoubleConvertibleToOutputCheck = _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterF_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetAlpha1(self, *args):
        """SetAlpha1(self, double _arg)"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterF_SetAlpha1(self, *args)

    def GetAlpha1(self):
        """GetAlpha1(self) -> double"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterF_GetAlpha1(self)

    def SetAlpha2(self, *args):
        """SetAlpha2(self, double _arg)"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterF_SetAlpha2(self, *args)

    def GetAlpha2(self):
        """GetAlpha2(self) -> double"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterF_GetAlpha2(self)

    __swig_destroy__ = _itkHessian3DToVesselnessMeasureImageFilterPython.delete_itkHessian3DToVesselnessMeasureImageFilterF
    def cast(*args):
        """cast(itkLightObject obj) -> itkHessian3DToVesselnessMeasureImageFilterF"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkHessian3DToVesselnessMeasureImageFilterF"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkHessian3DToVesselnessMeasureImageFilterF
        
        Create a new object of the class itkHessian3DToVesselnessMeasureImageFilterF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkHessian3DToVesselnessMeasureImageFilterF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkHessian3DToVesselnessMeasureImageFilterF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHessian3DToVesselnessMeasureImageFilterF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHessian3DToVesselnessMeasureImageFilterF.SetAlpha1 = new_instancemethod(_itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterF_SetAlpha1,None,itkHessian3DToVesselnessMeasureImageFilterF)
itkHessian3DToVesselnessMeasureImageFilterF.GetAlpha1 = new_instancemethod(_itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterF_GetAlpha1,None,itkHessian3DToVesselnessMeasureImageFilterF)
itkHessian3DToVesselnessMeasureImageFilterF.SetAlpha2 = new_instancemethod(_itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterF_SetAlpha2,None,itkHessian3DToVesselnessMeasureImageFilterF)
itkHessian3DToVesselnessMeasureImageFilterF.GetAlpha2 = new_instancemethod(_itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterF_GetAlpha2,None,itkHessian3DToVesselnessMeasureImageFilterF)
itkHessian3DToVesselnessMeasureImageFilterF.GetPointer = new_instancemethod(_itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterF_GetPointer,None,itkHessian3DToVesselnessMeasureImageFilterF)
itkHessian3DToVesselnessMeasureImageFilterF_swigregister = _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterF_swigregister
itkHessian3DToVesselnessMeasureImageFilterF_swigregister(itkHessian3DToVesselnessMeasureImageFilterF)

def itkHessian3DToVesselnessMeasureImageFilterF___New_orig__():
  """itkHessian3DToVesselnessMeasureImageFilterF___New_orig__()"""
  return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterF___New_orig__()

def itkHessian3DToVesselnessMeasureImageFilterF_cast(*args):
  """itkHessian3DToVesselnessMeasureImageFilterF_cast(itkLightObject obj) -> itkHessian3DToVesselnessMeasureImageFilterF"""
  return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterF_cast(*args)

class itkHessian3DToVesselnessMeasureImageFilterUC(itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUC3):
    """Proxy of C++ itkHessian3DToVesselnessMeasureImageFilterUC class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUC_ImageDimension
    InputPixelDimension = _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUC_InputPixelDimension
    DoubleConvertibleToOutputCheck = _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUC_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUC___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetAlpha1(self, *args):
        """SetAlpha1(self, double _arg)"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUC_SetAlpha1(self, *args)

    def GetAlpha1(self):
        """GetAlpha1(self) -> double"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUC_GetAlpha1(self)

    def SetAlpha2(self, *args):
        """SetAlpha2(self, double _arg)"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUC_SetAlpha2(self, *args)

    def GetAlpha2(self):
        """GetAlpha2(self) -> double"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUC_GetAlpha2(self)

    __swig_destroy__ = _itkHessian3DToVesselnessMeasureImageFilterPython.delete_itkHessian3DToVesselnessMeasureImageFilterUC
    def cast(*args):
        """cast(itkLightObject obj) -> itkHessian3DToVesselnessMeasureImageFilterUC"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUC_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkHessian3DToVesselnessMeasureImageFilterUC"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUC_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkHessian3DToVesselnessMeasureImageFilterUC
        
        Create a new object of the class itkHessian3DToVesselnessMeasureImageFilterUC and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkHessian3DToVesselnessMeasureImageFilterUC.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkHessian3DToVesselnessMeasureImageFilterUC.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHessian3DToVesselnessMeasureImageFilterUC.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHessian3DToVesselnessMeasureImageFilterUC.SetAlpha1 = new_instancemethod(_itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUC_SetAlpha1,None,itkHessian3DToVesselnessMeasureImageFilterUC)
itkHessian3DToVesselnessMeasureImageFilterUC.GetAlpha1 = new_instancemethod(_itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUC_GetAlpha1,None,itkHessian3DToVesselnessMeasureImageFilterUC)
itkHessian3DToVesselnessMeasureImageFilterUC.SetAlpha2 = new_instancemethod(_itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUC_SetAlpha2,None,itkHessian3DToVesselnessMeasureImageFilterUC)
itkHessian3DToVesselnessMeasureImageFilterUC.GetAlpha2 = new_instancemethod(_itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUC_GetAlpha2,None,itkHessian3DToVesselnessMeasureImageFilterUC)
itkHessian3DToVesselnessMeasureImageFilterUC.GetPointer = new_instancemethod(_itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUC_GetPointer,None,itkHessian3DToVesselnessMeasureImageFilterUC)
itkHessian3DToVesselnessMeasureImageFilterUC_swigregister = _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUC_swigregister
itkHessian3DToVesselnessMeasureImageFilterUC_swigregister(itkHessian3DToVesselnessMeasureImageFilterUC)

def itkHessian3DToVesselnessMeasureImageFilterUC___New_orig__():
  """itkHessian3DToVesselnessMeasureImageFilterUC___New_orig__()"""
  return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUC___New_orig__()

def itkHessian3DToVesselnessMeasureImageFilterUC_cast(*args):
  """itkHessian3DToVesselnessMeasureImageFilterUC_cast(itkLightObject obj) -> itkHessian3DToVesselnessMeasureImageFilterUC"""
  return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUC_cast(*args)

class itkHessian3DToVesselnessMeasureImageFilterUL(itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUL3):
    """Proxy of C++ itkHessian3DToVesselnessMeasureImageFilterUL class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUL_ImageDimension
    InputPixelDimension = _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUL_InputPixelDimension
    DoubleConvertibleToOutputCheck = _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUL_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUL___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetAlpha1(self, *args):
        """SetAlpha1(self, double _arg)"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUL_SetAlpha1(self, *args)

    def GetAlpha1(self):
        """GetAlpha1(self) -> double"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUL_GetAlpha1(self)

    def SetAlpha2(self, *args):
        """SetAlpha2(self, double _arg)"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUL_SetAlpha2(self, *args)

    def GetAlpha2(self):
        """GetAlpha2(self) -> double"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUL_GetAlpha2(self)

    __swig_destroy__ = _itkHessian3DToVesselnessMeasureImageFilterPython.delete_itkHessian3DToVesselnessMeasureImageFilterUL
    def cast(*args):
        """cast(itkLightObject obj) -> itkHessian3DToVesselnessMeasureImageFilterUL"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUL_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkHessian3DToVesselnessMeasureImageFilterUL"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUL_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkHessian3DToVesselnessMeasureImageFilterUL
        
        Create a new object of the class itkHessian3DToVesselnessMeasureImageFilterUL and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkHessian3DToVesselnessMeasureImageFilterUL.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkHessian3DToVesselnessMeasureImageFilterUL.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHessian3DToVesselnessMeasureImageFilterUL.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHessian3DToVesselnessMeasureImageFilterUL.SetAlpha1 = new_instancemethod(_itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUL_SetAlpha1,None,itkHessian3DToVesselnessMeasureImageFilterUL)
itkHessian3DToVesselnessMeasureImageFilterUL.GetAlpha1 = new_instancemethod(_itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUL_GetAlpha1,None,itkHessian3DToVesselnessMeasureImageFilterUL)
itkHessian3DToVesselnessMeasureImageFilterUL.SetAlpha2 = new_instancemethod(_itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUL_SetAlpha2,None,itkHessian3DToVesselnessMeasureImageFilterUL)
itkHessian3DToVesselnessMeasureImageFilterUL.GetAlpha2 = new_instancemethod(_itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUL_GetAlpha2,None,itkHessian3DToVesselnessMeasureImageFilterUL)
itkHessian3DToVesselnessMeasureImageFilterUL.GetPointer = new_instancemethod(_itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUL_GetPointer,None,itkHessian3DToVesselnessMeasureImageFilterUL)
itkHessian3DToVesselnessMeasureImageFilterUL_swigregister = _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUL_swigregister
itkHessian3DToVesselnessMeasureImageFilterUL_swigregister(itkHessian3DToVesselnessMeasureImageFilterUL)

def itkHessian3DToVesselnessMeasureImageFilterUL___New_orig__():
  """itkHessian3DToVesselnessMeasureImageFilterUL___New_orig__()"""
  return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUL___New_orig__()

def itkHessian3DToVesselnessMeasureImageFilterUL_cast(*args):
  """itkHessian3DToVesselnessMeasureImageFilterUL_cast(itkLightObject obj) -> itkHessian3DToVesselnessMeasureImageFilterUL"""
  return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUL_cast(*args)

class itkHessian3DToVesselnessMeasureImageFilterUS(itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUS3):
    """Proxy of C++ itkHessian3DToVesselnessMeasureImageFilterUS class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUS_ImageDimension
    InputPixelDimension = _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUS_InputPixelDimension
    DoubleConvertibleToOutputCheck = _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUS_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUS___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetAlpha1(self, *args):
        """SetAlpha1(self, double _arg)"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUS_SetAlpha1(self, *args)

    def GetAlpha1(self):
        """GetAlpha1(self) -> double"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUS_GetAlpha1(self)

    def SetAlpha2(self, *args):
        """SetAlpha2(self, double _arg)"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUS_SetAlpha2(self, *args)

    def GetAlpha2(self):
        """GetAlpha2(self) -> double"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUS_GetAlpha2(self)

    __swig_destroy__ = _itkHessian3DToVesselnessMeasureImageFilterPython.delete_itkHessian3DToVesselnessMeasureImageFilterUS
    def cast(*args):
        """cast(itkLightObject obj) -> itkHessian3DToVesselnessMeasureImageFilterUS"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUS_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkHessian3DToVesselnessMeasureImageFilterUS"""
        return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUS_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkHessian3DToVesselnessMeasureImageFilterUS
        
        Create a new object of the class itkHessian3DToVesselnessMeasureImageFilterUS and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkHessian3DToVesselnessMeasureImageFilterUS.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkHessian3DToVesselnessMeasureImageFilterUS.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHessian3DToVesselnessMeasureImageFilterUS.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHessian3DToVesselnessMeasureImageFilterUS.SetAlpha1 = new_instancemethod(_itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUS_SetAlpha1,None,itkHessian3DToVesselnessMeasureImageFilterUS)
itkHessian3DToVesselnessMeasureImageFilterUS.GetAlpha1 = new_instancemethod(_itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUS_GetAlpha1,None,itkHessian3DToVesselnessMeasureImageFilterUS)
itkHessian3DToVesselnessMeasureImageFilterUS.SetAlpha2 = new_instancemethod(_itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUS_SetAlpha2,None,itkHessian3DToVesselnessMeasureImageFilterUS)
itkHessian3DToVesselnessMeasureImageFilterUS.GetAlpha2 = new_instancemethod(_itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUS_GetAlpha2,None,itkHessian3DToVesselnessMeasureImageFilterUS)
itkHessian3DToVesselnessMeasureImageFilterUS.GetPointer = new_instancemethod(_itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUS_GetPointer,None,itkHessian3DToVesselnessMeasureImageFilterUS)
itkHessian3DToVesselnessMeasureImageFilterUS_swigregister = _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUS_swigregister
itkHessian3DToVesselnessMeasureImageFilterUS_swigregister(itkHessian3DToVesselnessMeasureImageFilterUS)

def itkHessian3DToVesselnessMeasureImageFilterUS___New_orig__():
  """itkHessian3DToVesselnessMeasureImageFilterUS___New_orig__()"""
  return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUS___New_orig__()

def itkHessian3DToVesselnessMeasureImageFilterUS_cast(*args):
  """itkHessian3DToVesselnessMeasureImageFilterUS_cast(itkLightObject obj) -> itkHessian3DToVesselnessMeasureImageFilterUS"""
  return _itkHessian3DToVesselnessMeasureImageFilterPython.itkHessian3DToVesselnessMeasureImageFilterUS_cast(*args)



