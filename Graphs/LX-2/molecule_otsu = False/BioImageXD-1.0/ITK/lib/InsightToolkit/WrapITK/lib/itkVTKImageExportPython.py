# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkVTKImageExportPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkVTKImageExportPython', [dirname(__file__)])
        except ImportError:
            import _itkVTKImageExportPython
            return _itkVTKImageExportPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkVTKImageExportPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkVTKImageExportPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkVTKImageExportPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
def itkVTKImageExportID3_New():
  return itkVTKImageExportID3.New()

def itkVTKImageExportID2_New():
  return itkVTKImageExportID2.New()

def itkVTKImageExportIF3_New():
  return itkVTKImageExportIF3.New()

def itkVTKImageExportIF2_New():
  return itkVTKImageExportIF2.New()

def itkVTKImageExportIUS3_New():
  return itkVTKImageExportIUS3.New()

def itkVTKImageExportIUS2_New():
  return itkVTKImageExportIUS2.New()

def itkVTKImageExportIUL3_New():
  return itkVTKImageExportIUL3.New()

def itkVTKImageExportIUL2_New():
  return itkVTKImageExportIUL2.New()

def itkVTKImageExportIUC3_New():
  return itkVTKImageExportIUC3.New()

def itkVTKImageExportIUC2_New():
  return itkVTKImageExportIUC2.New()

def itkVTKImageExportBase_New():
  return itkVTKImageExportBase.New()

class itkVTKImageExportBase(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkVTKImageExportBase class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def GetCallbackUserData(self):
        """GetCallbackUserData(self) -> void"""
        return _itkVTKImageExportPython.itkVTKImageExportBase_GetCallbackUserData(self)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportBase
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageExportBase"""
        return _itkVTKImageExportPython.itkVTKImageExportBase_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageExportBase"""
        return _itkVTKImageExportPython.itkVTKImageExportBase_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportBase
        
        Create a new object of the class itkVTKImageExportBase and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageExportBase.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageExportBase.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportBase.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportBase.GetCallbackUserData = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportBase_GetCallbackUserData,None,itkVTKImageExportBase)
itkVTKImageExportBase.GetPointer = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportBase_GetPointer,None,itkVTKImageExportBase)
itkVTKImageExportBase_swigregister = _itkVTKImageExportPython.itkVTKImageExportBase_swigregister
itkVTKImageExportBase_swigregister(itkVTKImageExportBase)

def itkVTKImageExportBase_cast(*args):
  """itkVTKImageExportBase_cast(itkLightObject obj) -> itkVTKImageExportBase"""
  return _itkVTKImageExportPython.itkVTKImageExportBase_cast(*args)

class itkVTKImageExportID2(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkVTKImageExportPython.itkVTKImageExportID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput(self, *args):
        """SetInput(self, itkImageD2 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportID2_SetInput(self, *args)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageExportID2"""
        return _itkVTKImageExportPython.itkVTKImageExportID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageExportID2"""
        return _itkVTKImageExportPython.itkVTKImageExportID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportID2
        
        Create a new object of the class itkVTKImageExportID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageExportID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageExportID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportID2.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportID2_SetInput,None,itkVTKImageExportID2)
itkVTKImageExportID2.GetPointer = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportID2_GetPointer,None,itkVTKImageExportID2)
itkVTKImageExportID2_swigregister = _itkVTKImageExportPython.itkVTKImageExportID2_swigregister
itkVTKImageExportID2_swigregister(itkVTKImageExportID2)

def itkVTKImageExportID2___New_orig__():
  """itkVTKImageExportID2___New_orig__()"""
  return _itkVTKImageExportPython.itkVTKImageExportID2___New_orig__()

def itkVTKImageExportID2_cast(*args):
  """itkVTKImageExportID2_cast(itkLightObject obj) -> itkVTKImageExportID2"""
  return _itkVTKImageExportPython.itkVTKImageExportID2_cast(*args)

class itkVTKImageExportID3(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkVTKImageExportPython.itkVTKImageExportID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput(self, *args):
        """SetInput(self, itkImageD3 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportID3_SetInput(self, *args)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageExportID3"""
        return _itkVTKImageExportPython.itkVTKImageExportID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageExportID3"""
        return _itkVTKImageExportPython.itkVTKImageExportID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportID3
        
        Create a new object of the class itkVTKImageExportID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageExportID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageExportID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportID3.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportID3_SetInput,None,itkVTKImageExportID3)
itkVTKImageExportID3.GetPointer = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportID3_GetPointer,None,itkVTKImageExportID3)
itkVTKImageExportID3_swigregister = _itkVTKImageExportPython.itkVTKImageExportID3_swigregister
itkVTKImageExportID3_swigregister(itkVTKImageExportID3)

def itkVTKImageExportID3___New_orig__():
  """itkVTKImageExportID3___New_orig__()"""
  return _itkVTKImageExportPython.itkVTKImageExportID3___New_orig__()

def itkVTKImageExportID3_cast(*args):
  """itkVTKImageExportID3_cast(itkLightObject obj) -> itkVTKImageExportID3"""
  return _itkVTKImageExportPython.itkVTKImageExportID3_cast(*args)

class itkVTKImageExportIF2(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportIF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkVTKImageExportPython.itkVTKImageExportIF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput(self, *args):
        """SetInput(self, itkImageF2 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportIF2_SetInput(self, *args)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageExportIF2"""
        return _itkVTKImageExportPython.itkVTKImageExportIF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageExportIF2"""
        return _itkVTKImageExportPython.itkVTKImageExportIF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIF2
        
        Create a new object of the class itkVTKImageExportIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageExportIF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageExportIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportIF2.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIF2_SetInput,None,itkVTKImageExportIF2)
itkVTKImageExportIF2.GetPointer = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIF2_GetPointer,None,itkVTKImageExportIF2)
itkVTKImageExportIF2_swigregister = _itkVTKImageExportPython.itkVTKImageExportIF2_swigregister
itkVTKImageExportIF2_swigregister(itkVTKImageExportIF2)

def itkVTKImageExportIF2___New_orig__():
  """itkVTKImageExportIF2___New_orig__()"""
  return _itkVTKImageExportPython.itkVTKImageExportIF2___New_orig__()

def itkVTKImageExportIF2_cast(*args):
  """itkVTKImageExportIF2_cast(itkLightObject obj) -> itkVTKImageExportIF2"""
  return _itkVTKImageExportPython.itkVTKImageExportIF2_cast(*args)

class itkVTKImageExportIF3(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportIF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkVTKImageExportPython.itkVTKImageExportIF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput(self, *args):
        """SetInput(self, itkImageF3 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportIF3_SetInput(self, *args)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageExportIF3"""
        return _itkVTKImageExportPython.itkVTKImageExportIF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageExportIF3"""
        return _itkVTKImageExportPython.itkVTKImageExportIF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIF3
        
        Create a new object of the class itkVTKImageExportIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageExportIF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageExportIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportIF3.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIF3_SetInput,None,itkVTKImageExportIF3)
itkVTKImageExportIF3.GetPointer = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIF3_GetPointer,None,itkVTKImageExportIF3)
itkVTKImageExportIF3_swigregister = _itkVTKImageExportPython.itkVTKImageExportIF3_swigregister
itkVTKImageExportIF3_swigregister(itkVTKImageExportIF3)

def itkVTKImageExportIF3___New_orig__():
  """itkVTKImageExportIF3___New_orig__()"""
  return _itkVTKImageExportPython.itkVTKImageExportIF3___New_orig__()

def itkVTKImageExportIF3_cast(*args):
  """itkVTKImageExportIF3_cast(itkLightObject obj) -> itkVTKImageExportIF3"""
  return _itkVTKImageExportPython.itkVTKImageExportIF3_cast(*args)

class itkVTKImageExportIUC2(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportIUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkVTKImageExportPython.itkVTKImageExportIUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput(self, *args):
        """SetInput(self, itkImageUC2 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportIUC2_SetInput(self, *args)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageExportIUC2"""
        return _itkVTKImageExportPython.itkVTKImageExportIUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageExportIUC2"""
        return _itkVTKImageExportPython.itkVTKImageExportIUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIUC2
        
        Create a new object of the class itkVTKImageExportIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageExportIUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageExportIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportIUC2.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIUC2_SetInput,None,itkVTKImageExportIUC2)
itkVTKImageExportIUC2.GetPointer = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIUC2_GetPointer,None,itkVTKImageExportIUC2)
itkVTKImageExportIUC2_swigregister = _itkVTKImageExportPython.itkVTKImageExportIUC2_swigregister
itkVTKImageExportIUC2_swigregister(itkVTKImageExportIUC2)

def itkVTKImageExportIUC2___New_orig__():
  """itkVTKImageExportIUC2___New_orig__()"""
  return _itkVTKImageExportPython.itkVTKImageExportIUC2___New_orig__()

def itkVTKImageExportIUC2_cast(*args):
  """itkVTKImageExportIUC2_cast(itkLightObject obj) -> itkVTKImageExportIUC2"""
  return _itkVTKImageExportPython.itkVTKImageExportIUC2_cast(*args)

class itkVTKImageExportIUC3(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportIUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkVTKImageExportPython.itkVTKImageExportIUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput(self, *args):
        """SetInput(self, itkImageUC3 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportIUC3_SetInput(self, *args)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageExportIUC3"""
        return _itkVTKImageExportPython.itkVTKImageExportIUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageExportIUC3"""
        return _itkVTKImageExportPython.itkVTKImageExportIUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIUC3
        
        Create a new object of the class itkVTKImageExportIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageExportIUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageExportIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportIUC3.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIUC3_SetInput,None,itkVTKImageExportIUC3)
itkVTKImageExportIUC3.GetPointer = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIUC3_GetPointer,None,itkVTKImageExportIUC3)
itkVTKImageExportIUC3_swigregister = _itkVTKImageExportPython.itkVTKImageExportIUC3_swigregister
itkVTKImageExportIUC3_swigregister(itkVTKImageExportIUC3)

def itkVTKImageExportIUC3___New_orig__():
  """itkVTKImageExportIUC3___New_orig__()"""
  return _itkVTKImageExportPython.itkVTKImageExportIUC3___New_orig__()

def itkVTKImageExportIUC3_cast(*args):
  """itkVTKImageExportIUC3_cast(itkLightObject obj) -> itkVTKImageExportIUC3"""
  return _itkVTKImageExportPython.itkVTKImageExportIUC3_cast(*args)

class itkVTKImageExportIUL2(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportIUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkVTKImageExportPython.itkVTKImageExportIUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput(self, *args):
        """SetInput(self, itkImageUL2 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportIUL2_SetInput(self, *args)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageExportIUL2"""
        return _itkVTKImageExportPython.itkVTKImageExportIUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageExportIUL2"""
        return _itkVTKImageExportPython.itkVTKImageExportIUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIUL2
        
        Create a new object of the class itkVTKImageExportIUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageExportIUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageExportIUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportIUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportIUL2.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIUL2_SetInput,None,itkVTKImageExportIUL2)
itkVTKImageExportIUL2.GetPointer = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIUL2_GetPointer,None,itkVTKImageExportIUL2)
itkVTKImageExportIUL2_swigregister = _itkVTKImageExportPython.itkVTKImageExportIUL2_swigregister
itkVTKImageExportIUL2_swigregister(itkVTKImageExportIUL2)

def itkVTKImageExportIUL2___New_orig__():
  """itkVTKImageExportIUL2___New_orig__()"""
  return _itkVTKImageExportPython.itkVTKImageExportIUL2___New_orig__()

def itkVTKImageExportIUL2_cast(*args):
  """itkVTKImageExportIUL2_cast(itkLightObject obj) -> itkVTKImageExportIUL2"""
  return _itkVTKImageExportPython.itkVTKImageExportIUL2_cast(*args)

class itkVTKImageExportIUL3(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportIUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkVTKImageExportPython.itkVTKImageExportIUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput(self, *args):
        """SetInput(self, itkImageUL3 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportIUL3_SetInput(self, *args)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageExportIUL3"""
        return _itkVTKImageExportPython.itkVTKImageExportIUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageExportIUL3"""
        return _itkVTKImageExportPython.itkVTKImageExportIUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIUL3
        
        Create a new object of the class itkVTKImageExportIUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageExportIUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageExportIUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportIUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportIUL3.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIUL3_SetInput,None,itkVTKImageExportIUL3)
itkVTKImageExportIUL3.GetPointer = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIUL3_GetPointer,None,itkVTKImageExportIUL3)
itkVTKImageExportIUL3_swigregister = _itkVTKImageExportPython.itkVTKImageExportIUL3_swigregister
itkVTKImageExportIUL3_swigregister(itkVTKImageExportIUL3)

def itkVTKImageExportIUL3___New_orig__():
  """itkVTKImageExportIUL3___New_orig__()"""
  return _itkVTKImageExportPython.itkVTKImageExportIUL3___New_orig__()

def itkVTKImageExportIUL3_cast(*args):
  """itkVTKImageExportIUL3_cast(itkLightObject obj) -> itkVTKImageExportIUL3"""
  return _itkVTKImageExportPython.itkVTKImageExportIUL3_cast(*args)

class itkVTKImageExportIUS2(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportIUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkVTKImageExportPython.itkVTKImageExportIUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput(self, *args):
        """SetInput(self, itkImageUS2 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportIUS2_SetInput(self, *args)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageExportIUS2"""
        return _itkVTKImageExportPython.itkVTKImageExportIUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageExportIUS2"""
        return _itkVTKImageExportPython.itkVTKImageExportIUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIUS2
        
        Create a new object of the class itkVTKImageExportIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageExportIUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageExportIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportIUS2.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIUS2_SetInput,None,itkVTKImageExportIUS2)
itkVTKImageExportIUS2.GetPointer = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIUS2_GetPointer,None,itkVTKImageExportIUS2)
itkVTKImageExportIUS2_swigregister = _itkVTKImageExportPython.itkVTKImageExportIUS2_swigregister
itkVTKImageExportIUS2_swigregister(itkVTKImageExportIUS2)

def itkVTKImageExportIUS2___New_orig__():
  """itkVTKImageExportIUS2___New_orig__()"""
  return _itkVTKImageExportPython.itkVTKImageExportIUS2___New_orig__()

def itkVTKImageExportIUS2_cast(*args):
  """itkVTKImageExportIUS2_cast(itkLightObject obj) -> itkVTKImageExportIUS2"""
  return _itkVTKImageExportPython.itkVTKImageExportIUS2_cast(*args)

class itkVTKImageExportIUS3(itkVTKImageExportBase):
    """Proxy of C++ itkVTKImageExportIUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkVTKImageExportPython.itkVTKImageExportIUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput(self, *args):
        """SetInput(self, itkImageUS3 arg0)"""
        return _itkVTKImageExportPython.itkVTKImageExportIUS3_SetInput(self, *args)

    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageExportIUS3"""
        return _itkVTKImageExportPython.itkVTKImageExportIUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageExportIUS3"""
        return _itkVTKImageExportPython.itkVTKImageExportIUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIUS3
        
        Create a new object of the class itkVTKImageExportIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageExportIUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageExportIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageExportIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageExportIUS3.SetInput = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIUS3_SetInput,None,itkVTKImageExportIUS3)
itkVTKImageExportIUS3.GetPointer = new_instancemethod(_itkVTKImageExportPython.itkVTKImageExportIUS3_GetPointer,None,itkVTKImageExportIUS3)
itkVTKImageExportIUS3_swigregister = _itkVTKImageExportPython.itkVTKImageExportIUS3_swigregister
itkVTKImageExportIUS3_swigregister(itkVTKImageExportIUS3)

def itkVTKImageExportIUS3___New_orig__():
  """itkVTKImageExportIUS3___New_orig__()"""
  return _itkVTKImageExportPython.itkVTKImageExportIUS3___New_orig__()

def itkVTKImageExportIUS3_cast(*args):
  """itkVTKImageExportIUS3_cast(itkLightObject obj) -> itkVTKImageExportIUS3"""
  return _itkVTKImageExportPython.itkVTKImageExportIUS3_cast(*args)



