# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkNaryAddImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkNaryAddImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkNaryAddImageFilterPython
            return _itkNaryAddImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkNaryAddImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkNaryAddImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkNaryAddImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterAPython
def itkNaryAddImageFilterID3ID3_New():
  return itkNaryAddImageFilterID3ID3.New()

def itkNaryAddImageFilterID3ID3_Superclass_New():
  return itkNaryAddImageFilterID3ID3_Superclass.New()

def itkNaryAddImageFilterID2ID2_New():
  return itkNaryAddImageFilterID2ID2.New()

def itkNaryAddImageFilterID2ID2_Superclass_New():
  return itkNaryAddImageFilterID2ID2_Superclass.New()

def itkNaryAddImageFilterIF3IF3_New():
  return itkNaryAddImageFilterIF3IF3.New()

def itkNaryAddImageFilterIF3IF3_Superclass_New():
  return itkNaryAddImageFilterIF3IF3_Superclass.New()

def itkNaryAddImageFilterIF2IF2_New():
  return itkNaryAddImageFilterIF2IF2.New()

def itkNaryAddImageFilterIF2IF2_Superclass_New():
  return itkNaryAddImageFilterIF2IF2_Superclass.New()

def itkNaryAddImageFilterIUS3IUS3_New():
  return itkNaryAddImageFilterIUS3IUS3.New()

def itkNaryAddImageFilterIUS3IUS3_Superclass_New():
  return itkNaryAddImageFilterIUS3IUS3_Superclass.New()

def itkNaryAddImageFilterIUS2IUS2_New():
  return itkNaryAddImageFilterIUS2IUS2.New()

def itkNaryAddImageFilterIUS2IUS2_Superclass_New():
  return itkNaryAddImageFilterIUS2IUS2_Superclass.New()

def itkNaryAddImageFilterIUL3IUL3_New():
  return itkNaryAddImageFilterIUL3IUL3.New()

def itkNaryAddImageFilterIUL3IUL3_Superclass_New():
  return itkNaryAddImageFilterIUL3IUL3_Superclass.New()

def itkNaryAddImageFilterIUL2IUL2_New():
  return itkNaryAddImageFilterIUL2IUL2.New()

def itkNaryAddImageFilterIUL2IUL2_Superclass_New():
  return itkNaryAddImageFilterIUL2IUL2_Superclass.New()

def itkNaryAddImageFilterIUC3IUC3_New():
  return itkNaryAddImageFilterIUC3IUC3.New()

def itkNaryAddImageFilterIUC3IUC3_Superclass_New():
  return itkNaryAddImageFilterIUC3IUC3_Superclass.New()

def itkNaryAddImageFilterIUC2IUC2_New():
  return itkNaryAddImageFilterIUC2IUC2.New()

def itkNaryAddImageFilterIUC2IUC2_Superclass_New():
  return itkNaryAddImageFilterIUC2IUC2_Superclass.New()

class itkNaryAddImageFilterID2ID2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    """Proxy of C++ itkNaryAddImageFilterID2ID2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkNaryAddImageFilterPython.itkNaryAddImageFilterID2ID2_Superclass_InputImageDimension
    OutputImageDimension = _itkNaryAddImageFilterPython.itkNaryAddImageFilterID2ID2_Superclass_OutputImageDimension
    SameDimensionCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterID2ID2_Superclass_SameDimensionCheck
    OutputHasZeroCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterID2ID2_Superclass_OutputHasZeroCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterID2ID2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self):
        """GetFunctor(self) -> itk::Functor::Add1<(double,double)>"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterID2ID2_Superclass_GetFunctor(self)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Functor::Add1<(double,double)> functor)"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterID2ID2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkNaryAddImageFilterPython.delete_itkNaryAddImageFilterID2ID2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkNaryAddImageFilterID2ID2_Superclass"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterID2ID2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNaryAddImageFilterID2ID2_Superclass"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterID2ID2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNaryAddImageFilterID2ID2_Superclass
        
        Create a new object of the class itkNaryAddImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNaryAddImageFilterID2ID2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNaryAddImageFilterID2ID2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNaryAddImageFilterID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNaryAddImageFilterID2ID2_Superclass.GetFunctor = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterID2ID2_Superclass_GetFunctor,None,itkNaryAddImageFilterID2ID2_Superclass)
itkNaryAddImageFilterID2ID2_Superclass.SetFunctor = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterID2ID2_Superclass_SetFunctor,None,itkNaryAddImageFilterID2ID2_Superclass)
itkNaryAddImageFilterID2ID2_Superclass.GetPointer = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterID2ID2_Superclass_GetPointer,None,itkNaryAddImageFilterID2ID2_Superclass)
itkNaryAddImageFilterID2ID2_Superclass_swigregister = _itkNaryAddImageFilterPython.itkNaryAddImageFilterID2ID2_Superclass_swigregister
itkNaryAddImageFilterID2ID2_Superclass_swigregister(itkNaryAddImageFilterID2ID2_Superclass)

def itkNaryAddImageFilterID2ID2_Superclass___New_orig__():
  """itkNaryAddImageFilterID2ID2_Superclass___New_orig__()"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterID2ID2_Superclass___New_orig__()

def itkNaryAddImageFilterID2ID2_Superclass_cast(*args):
  """itkNaryAddImageFilterID2ID2_Superclass_cast(itkLightObject obj) -> itkNaryAddImageFilterID2ID2_Superclass"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterID2ID2_Superclass_cast(*args)

class itkNaryAddImageFilterID3ID3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    """Proxy of C++ itkNaryAddImageFilterID3ID3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkNaryAddImageFilterPython.itkNaryAddImageFilterID3ID3_Superclass_InputImageDimension
    OutputImageDimension = _itkNaryAddImageFilterPython.itkNaryAddImageFilterID3ID3_Superclass_OutputImageDimension
    SameDimensionCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterID3ID3_Superclass_SameDimensionCheck
    OutputHasZeroCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterID3ID3_Superclass_OutputHasZeroCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterID3ID3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self):
        """GetFunctor(self) -> itk::Functor::Add1<(double,double)>"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterID3ID3_Superclass_GetFunctor(self)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Functor::Add1<(double,double)> functor)"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterID3ID3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkNaryAddImageFilterPython.delete_itkNaryAddImageFilterID3ID3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkNaryAddImageFilterID3ID3_Superclass"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterID3ID3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNaryAddImageFilterID3ID3_Superclass"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterID3ID3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNaryAddImageFilterID3ID3_Superclass
        
        Create a new object of the class itkNaryAddImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNaryAddImageFilterID3ID3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNaryAddImageFilterID3ID3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNaryAddImageFilterID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNaryAddImageFilterID3ID3_Superclass.GetFunctor = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterID3ID3_Superclass_GetFunctor,None,itkNaryAddImageFilterID3ID3_Superclass)
itkNaryAddImageFilterID3ID3_Superclass.SetFunctor = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterID3ID3_Superclass_SetFunctor,None,itkNaryAddImageFilterID3ID3_Superclass)
itkNaryAddImageFilterID3ID3_Superclass.GetPointer = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterID3ID3_Superclass_GetPointer,None,itkNaryAddImageFilterID3ID3_Superclass)
itkNaryAddImageFilterID3ID3_Superclass_swigregister = _itkNaryAddImageFilterPython.itkNaryAddImageFilterID3ID3_Superclass_swigregister
itkNaryAddImageFilterID3ID3_Superclass_swigregister(itkNaryAddImageFilterID3ID3_Superclass)

def itkNaryAddImageFilterID3ID3_Superclass___New_orig__():
  """itkNaryAddImageFilterID3ID3_Superclass___New_orig__()"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterID3ID3_Superclass___New_orig__()

def itkNaryAddImageFilterID3ID3_Superclass_cast(*args):
  """itkNaryAddImageFilterID3ID3_Superclass_cast(itkLightObject obj) -> itkNaryAddImageFilterID3ID3_Superclass"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterID3ID3_Superclass_cast(*args)

class itkNaryAddImageFilterIF2IF2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    """Proxy of C++ itkNaryAddImageFilterIF2IF2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF2IF2_Superclass_InputImageDimension
    OutputImageDimension = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF2IF2_Superclass_OutputImageDimension
    SameDimensionCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF2IF2_Superclass_SameDimensionCheck
    OutputHasZeroCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF2IF2_Superclass_OutputHasZeroCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self):
        """GetFunctor(self) -> itk::Functor::Add1<(float,float)>"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF2IF2_Superclass_GetFunctor(self)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Functor::Add1<(float,float)> functor)"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF2IF2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkNaryAddImageFilterPython.delete_itkNaryAddImageFilterIF2IF2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkNaryAddImageFilterIF2IF2_Superclass"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF2IF2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNaryAddImageFilterIF2IF2_Superclass"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF2IF2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNaryAddImageFilterIF2IF2_Superclass
        
        Create a new object of the class itkNaryAddImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNaryAddImageFilterIF2IF2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNaryAddImageFilterIF2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNaryAddImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNaryAddImageFilterIF2IF2_Superclass.GetFunctor = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIF2IF2_Superclass_GetFunctor,None,itkNaryAddImageFilterIF2IF2_Superclass)
itkNaryAddImageFilterIF2IF2_Superclass.SetFunctor = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIF2IF2_Superclass_SetFunctor,None,itkNaryAddImageFilterIF2IF2_Superclass)
itkNaryAddImageFilterIF2IF2_Superclass.GetPointer = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIF2IF2_Superclass_GetPointer,None,itkNaryAddImageFilterIF2IF2_Superclass)
itkNaryAddImageFilterIF2IF2_Superclass_swigregister = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF2IF2_Superclass_swigregister
itkNaryAddImageFilterIF2IF2_Superclass_swigregister(itkNaryAddImageFilterIF2IF2_Superclass)

def itkNaryAddImageFilterIF2IF2_Superclass___New_orig__():
  """itkNaryAddImageFilterIF2IF2_Superclass___New_orig__()"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF2IF2_Superclass___New_orig__()

def itkNaryAddImageFilterIF2IF2_Superclass_cast(*args):
  """itkNaryAddImageFilterIF2IF2_Superclass_cast(itkLightObject obj) -> itkNaryAddImageFilterIF2IF2_Superclass"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF2IF2_Superclass_cast(*args)

class itkNaryAddImageFilterIF3IF3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    """Proxy of C++ itkNaryAddImageFilterIF3IF3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF3IF3_Superclass_InputImageDimension
    OutputImageDimension = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF3IF3_Superclass_OutputImageDimension
    SameDimensionCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF3IF3_Superclass_SameDimensionCheck
    OutputHasZeroCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF3IF3_Superclass_OutputHasZeroCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self):
        """GetFunctor(self) -> itk::Functor::Add1<(float,float)>"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF3IF3_Superclass_GetFunctor(self)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Functor::Add1<(float,float)> functor)"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF3IF3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkNaryAddImageFilterPython.delete_itkNaryAddImageFilterIF3IF3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkNaryAddImageFilterIF3IF3_Superclass"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF3IF3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNaryAddImageFilterIF3IF3_Superclass"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF3IF3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNaryAddImageFilterIF3IF3_Superclass
        
        Create a new object of the class itkNaryAddImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNaryAddImageFilterIF3IF3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNaryAddImageFilterIF3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNaryAddImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNaryAddImageFilterIF3IF3_Superclass.GetFunctor = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIF3IF3_Superclass_GetFunctor,None,itkNaryAddImageFilterIF3IF3_Superclass)
itkNaryAddImageFilterIF3IF3_Superclass.SetFunctor = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIF3IF3_Superclass_SetFunctor,None,itkNaryAddImageFilterIF3IF3_Superclass)
itkNaryAddImageFilterIF3IF3_Superclass.GetPointer = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIF3IF3_Superclass_GetPointer,None,itkNaryAddImageFilterIF3IF3_Superclass)
itkNaryAddImageFilterIF3IF3_Superclass_swigregister = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF3IF3_Superclass_swigregister
itkNaryAddImageFilterIF3IF3_Superclass_swigregister(itkNaryAddImageFilterIF3IF3_Superclass)

def itkNaryAddImageFilterIF3IF3_Superclass___New_orig__():
  """itkNaryAddImageFilterIF3IF3_Superclass___New_orig__()"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF3IF3_Superclass___New_orig__()

def itkNaryAddImageFilterIF3IF3_Superclass_cast(*args):
  """itkNaryAddImageFilterIF3IF3_Superclass_cast(itkLightObject obj) -> itkNaryAddImageFilterIF3IF3_Superclass"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF3IF3_Superclass_cast(*args)

class itkNaryAddImageFilterIUC2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    """Proxy of C++ itkNaryAddImageFilterIUC2IUC2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC2IUC2_Superclass_InputImageDimension
    OutputImageDimension = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC2IUC2_Superclass_OutputImageDimension
    SameDimensionCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC2IUC2_Superclass_SameDimensionCheck
    OutputHasZeroCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC2IUC2_Superclass_OutputHasZeroCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self):
        """GetFunctor(self) -> itk::Functor::Add1<(unsigned char,unsigned char)>"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC2IUC2_Superclass_GetFunctor(self)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Functor::Add1<(unsigned char,unsigned char)> functor)"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC2IUC2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkNaryAddImageFilterPython.delete_itkNaryAddImageFilterIUC2IUC2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkNaryAddImageFilterIUC2IUC2_Superclass"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC2IUC2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNaryAddImageFilterIUC2IUC2_Superclass"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC2IUC2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNaryAddImageFilterIUC2IUC2_Superclass
        
        Create a new object of the class itkNaryAddImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNaryAddImageFilterIUC2IUC2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNaryAddImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNaryAddImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNaryAddImageFilterIUC2IUC2_Superclass.GetFunctor = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC2IUC2_Superclass_GetFunctor,None,itkNaryAddImageFilterIUC2IUC2_Superclass)
itkNaryAddImageFilterIUC2IUC2_Superclass.SetFunctor = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC2IUC2_Superclass_SetFunctor,None,itkNaryAddImageFilterIUC2IUC2_Superclass)
itkNaryAddImageFilterIUC2IUC2_Superclass.GetPointer = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC2IUC2_Superclass_GetPointer,None,itkNaryAddImageFilterIUC2IUC2_Superclass)
itkNaryAddImageFilterIUC2IUC2_Superclass_swigregister = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC2IUC2_Superclass_swigregister
itkNaryAddImageFilterIUC2IUC2_Superclass_swigregister(itkNaryAddImageFilterIUC2IUC2_Superclass)

def itkNaryAddImageFilterIUC2IUC2_Superclass___New_orig__():
  """itkNaryAddImageFilterIUC2IUC2_Superclass___New_orig__()"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC2IUC2_Superclass___New_orig__()

def itkNaryAddImageFilterIUC2IUC2_Superclass_cast(*args):
  """itkNaryAddImageFilterIUC2IUC2_Superclass_cast(itkLightObject obj) -> itkNaryAddImageFilterIUC2IUC2_Superclass"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC2IUC2_Superclass_cast(*args)

class itkNaryAddImageFilterIUC3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    """Proxy of C++ itkNaryAddImageFilterIUC3IUC3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC3IUC3_Superclass_InputImageDimension
    OutputImageDimension = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC3IUC3_Superclass_OutputImageDimension
    SameDimensionCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC3IUC3_Superclass_SameDimensionCheck
    OutputHasZeroCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC3IUC3_Superclass_OutputHasZeroCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self):
        """GetFunctor(self) -> itk::Functor::Add1<(unsigned char,unsigned char)>"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC3IUC3_Superclass_GetFunctor(self)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Functor::Add1<(unsigned char,unsigned char)> functor)"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC3IUC3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkNaryAddImageFilterPython.delete_itkNaryAddImageFilterIUC3IUC3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkNaryAddImageFilterIUC3IUC3_Superclass"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC3IUC3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNaryAddImageFilterIUC3IUC3_Superclass"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC3IUC3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNaryAddImageFilterIUC3IUC3_Superclass
        
        Create a new object of the class itkNaryAddImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNaryAddImageFilterIUC3IUC3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNaryAddImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNaryAddImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNaryAddImageFilterIUC3IUC3_Superclass.GetFunctor = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC3IUC3_Superclass_GetFunctor,None,itkNaryAddImageFilterIUC3IUC3_Superclass)
itkNaryAddImageFilterIUC3IUC3_Superclass.SetFunctor = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC3IUC3_Superclass_SetFunctor,None,itkNaryAddImageFilterIUC3IUC3_Superclass)
itkNaryAddImageFilterIUC3IUC3_Superclass.GetPointer = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC3IUC3_Superclass_GetPointer,None,itkNaryAddImageFilterIUC3IUC3_Superclass)
itkNaryAddImageFilterIUC3IUC3_Superclass_swigregister = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC3IUC3_Superclass_swigregister
itkNaryAddImageFilterIUC3IUC3_Superclass_swigregister(itkNaryAddImageFilterIUC3IUC3_Superclass)

def itkNaryAddImageFilterIUC3IUC3_Superclass___New_orig__():
  """itkNaryAddImageFilterIUC3IUC3_Superclass___New_orig__()"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC3IUC3_Superclass___New_orig__()

def itkNaryAddImageFilterIUC3IUC3_Superclass_cast(*args):
  """itkNaryAddImageFilterIUC3IUC3_Superclass_cast(itkLightObject obj) -> itkNaryAddImageFilterIUC3IUC3_Superclass"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC3IUC3_Superclass_cast(*args)

class itkNaryAddImageFilterIUL2IUL2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUL2):
    """Proxy of C++ itkNaryAddImageFilterIUL2IUL2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL2IUL2_Superclass_InputImageDimension
    OutputImageDimension = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL2IUL2_Superclass_OutputImageDimension
    SameDimensionCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL2IUL2_Superclass_SameDimensionCheck
    OutputHasZeroCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL2IUL2_Superclass_OutputHasZeroCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL2IUL2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self):
        """GetFunctor(self) -> itk::Functor::Add1<(unsigned long,unsigned long)>"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL2IUL2_Superclass_GetFunctor(self)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Functor::Add1<(unsigned long,unsigned long)> functor)"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL2IUL2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkNaryAddImageFilterPython.delete_itkNaryAddImageFilterIUL2IUL2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkNaryAddImageFilterIUL2IUL2_Superclass"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL2IUL2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNaryAddImageFilterIUL2IUL2_Superclass"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL2IUL2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNaryAddImageFilterIUL2IUL2_Superclass
        
        Create a new object of the class itkNaryAddImageFilterIUL2IUL2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNaryAddImageFilterIUL2IUL2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNaryAddImageFilterIUL2IUL2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNaryAddImageFilterIUL2IUL2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNaryAddImageFilterIUL2IUL2_Superclass.GetFunctor = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL2IUL2_Superclass_GetFunctor,None,itkNaryAddImageFilterIUL2IUL2_Superclass)
itkNaryAddImageFilterIUL2IUL2_Superclass.SetFunctor = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL2IUL2_Superclass_SetFunctor,None,itkNaryAddImageFilterIUL2IUL2_Superclass)
itkNaryAddImageFilterIUL2IUL2_Superclass.GetPointer = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL2IUL2_Superclass_GetPointer,None,itkNaryAddImageFilterIUL2IUL2_Superclass)
itkNaryAddImageFilterIUL2IUL2_Superclass_swigregister = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL2IUL2_Superclass_swigregister
itkNaryAddImageFilterIUL2IUL2_Superclass_swigregister(itkNaryAddImageFilterIUL2IUL2_Superclass)

def itkNaryAddImageFilterIUL2IUL2_Superclass___New_orig__():
  """itkNaryAddImageFilterIUL2IUL2_Superclass___New_orig__()"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL2IUL2_Superclass___New_orig__()

def itkNaryAddImageFilterIUL2IUL2_Superclass_cast(*args):
  """itkNaryAddImageFilterIUL2IUL2_Superclass_cast(itkLightObject obj) -> itkNaryAddImageFilterIUL2IUL2_Superclass"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL2IUL2_Superclass_cast(*args)

class itkNaryAddImageFilterIUL3IUL3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUL3):
    """Proxy of C++ itkNaryAddImageFilterIUL3IUL3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL3IUL3_Superclass_InputImageDimension
    OutputImageDimension = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL3IUL3_Superclass_OutputImageDimension
    SameDimensionCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL3IUL3_Superclass_SameDimensionCheck
    OutputHasZeroCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL3IUL3_Superclass_OutputHasZeroCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL3IUL3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self):
        """GetFunctor(self) -> itk::Functor::Add1<(unsigned long,unsigned long)>"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL3IUL3_Superclass_GetFunctor(self)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Functor::Add1<(unsigned long,unsigned long)> functor)"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL3IUL3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkNaryAddImageFilterPython.delete_itkNaryAddImageFilterIUL3IUL3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkNaryAddImageFilterIUL3IUL3_Superclass"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL3IUL3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNaryAddImageFilterIUL3IUL3_Superclass"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL3IUL3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNaryAddImageFilterIUL3IUL3_Superclass
        
        Create a new object of the class itkNaryAddImageFilterIUL3IUL3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNaryAddImageFilterIUL3IUL3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNaryAddImageFilterIUL3IUL3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNaryAddImageFilterIUL3IUL3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNaryAddImageFilterIUL3IUL3_Superclass.GetFunctor = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL3IUL3_Superclass_GetFunctor,None,itkNaryAddImageFilterIUL3IUL3_Superclass)
itkNaryAddImageFilterIUL3IUL3_Superclass.SetFunctor = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL3IUL3_Superclass_SetFunctor,None,itkNaryAddImageFilterIUL3IUL3_Superclass)
itkNaryAddImageFilterIUL3IUL3_Superclass.GetPointer = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL3IUL3_Superclass_GetPointer,None,itkNaryAddImageFilterIUL3IUL3_Superclass)
itkNaryAddImageFilterIUL3IUL3_Superclass_swigregister = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL3IUL3_Superclass_swigregister
itkNaryAddImageFilterIUL3IUL3_Superclass_swigregister(itkNaryAddImageFilterIUL3IUL3_Superclass)

def itkNaryAddImageFilterIUL3IUL3_Superclass___New_orig__():
  """itkNaryAddImageFilterIUL3IUL3_Superclass___New_orig__()"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL3IUL3_Superclass___New_orig__()

def itkNaryAddImageFilterIUL3IUL3_Superclass_cast(*args):
  """itkNaryAddImageFilterIUL3IUL3_Superclass_cast(itkLightObject obj) -> itkNaryAddImageFilterIUL3IUL3_Superclass"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL3IUL3_Superclass_cast(*args)

class itkNaryAddImageFilterIUS2IUS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    """Proxy of C++ itkNaryAddImageFilterIUS2IUS2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS2IUS2_Superclass_InputImageDimension
    OutputImageDimension = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS2IUS2_Superclass_OutputImageDimension
    SameDimensionCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS2IUS2_Superclass_SameDimensionCheck
    OutputHasZeroCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS2IUS2_Superclass_OutputHasZeroCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS2IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self):
        """GetFunctor(self) -> itk::Functor::Add1<(unsigned short,unsigned short)>"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS2IUS2_Superclass_GetFunctor(self)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Functor::Add1<(unsigned short,unsigned short)> functor)"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS2IUS2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkNaryAddImageFilterPython.delete_itkNaryAddImageFilterIUS2IUS2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkNaryAddImageFilterIUS2IUS2_Superclass"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS2IUS2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNaryAddImageFilterIUS2IUS2_Superclass"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS2IUS2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNaryAddImageFilterIUS2IUS2_Superclass
        
        Create a new object of the class itkNaryAddImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNaryAddImageFilterIUS2IUS2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNaryAddImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNaryAddImageFilterIUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNaryAddImageFilterIUS2IUS2_Superclass.GetFunctor = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS2IUS2_Superclass_GetFunctor,None,itkNaryAddImageFilterIUS2IUS2_Superclass)
itkNaryAddImageFilterIUS2IUS2_Superclass.SetFunctor = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS2IUS2_Superclass_SetFunctor,None,itkNaryAddImageFilterIUS2IUS2_Superclass)
itkNaryAddImageFilterIUS2IUS2_Superclass.GetPointer = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS2IUS2_Superclass_GetPointer,None,itkNaryAddImageFilterIUS2IUS2_Superclass)
itkNaryAddImageFilterIUS2IUS2_Superclass_swigregister = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS2IUS2_Superclass_swigregister
itkNaryAddImageFilterIUS2IUS2_Superclass_swigregister(itkNaryAddImageFilterIUS2IUS2_Superclass)

def itkNaryAddImageFilterIUS2IUS2_Superclass___New_orig__():
  """itkNaryAddImageFilterIUS2IUS2_Superclass___New_orig__()"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS2IUS2_Superclass___New_orig__()

def itkNaryAddImageFilterIUS2IUS2_Superclass_cast(*args):
  """itkNaryAddImageFilterIUS2IUS2_Superclass_cast(itkLightObject obj) -> itkNaryAddImageFilterIUS2IUS2_Superclass"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS2IUS2_Superclass_cast(*args)

class itkNaryAddImageFilterIUS3IUS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    """Proxy of C++ itkNaryAddImageFilterIUS3IUS3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS3IUS3_Superclass_InputImageDimension
    OutputImageDimension = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS3IUS3_Superclass_OutputImageDimension
    SameDimensionCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS3IUS3_Superclass_SameDimensionCheck
    OutputHasZeroCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS3IUS3_Superclass_OutputHasZeroCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS3IUS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self):
        """GetFunctor(self) -> itk::Functor::Add1<(unsigned short,unsigned short)>"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS3IUS3_Superclass_GetFunctor(self)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Functor::Add1<(unsigned short,unsigned short)> functor)"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS3IUS3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkNaryAddImageFilterPython.delete_itkNaryAddImageFilterIUS3IUS3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkNaryAddImageFilterIUS3IUS3_Superclass"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS3IUS3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNaryAddImageFilterIUS3IUS3_Superclass"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS3IUS3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNaryAddImageFilterIUS3IUS3_Superclass
        
        Create a new object of the class itkNaryAddImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNaryAddImageFilterIUS3IUS3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNaryAddImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNaryAddImageFilterIUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNaryAddImageFilterIUS3IUS3_Superclass.GetFunctor = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS3IUS3_Superclass_GetFunctor,None,itkNaryAddImageFilterIUS3IUS3_Superclass)
itkNaryAddImageFilterIUS3IUS3_Superclass.SetFunctor = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS3IUS3_Superclass_SetFunctor,None,itkNaryAddImageFilterIUS3IUS3_Superclass)
itkNaryAddImageFilterIUS3IUS3_Superclass.GetPointer = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS3IUS3_Superclass_GetPointer,None,itkNaryAddImageFilterIUS3IUS3_Superclass)
itkNaryAddImageFilterIUS3IUS3_Superclass_swigregister = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS3IUS3_Superclass_swigregister
itkNaryAddImageFilterIUS3IUS3_Superclass_swigregister(itkNaryAddImageFilterIUS3IUS3_Superclass)

def itkNaryAddImageFilterIUS3IUS3_Superclass___New_orig__():
  """itkNaryAddImageFilterIUS3IUS3_Superclass___New_orig__()"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS3IUS3_Superclass___New_orig__()

def itkNaryAddImageFilterIUS3IUS3_Superclass_cast(*args):
  """itkNaryAddImageFilterIUS3IUS3_Superclass_cast(itkLightObject obj) -> itkNaryAddImageFilterIUS3IUS3_Superclass"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS3IUS3_Superclass_cast(*args)

class itkNaryAddImageFilterID2ID2(itkNaryAddImageFilterID2ID2_Superclass):
    """Proxy of C++ itkNaryAddImageFilterID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToOutputCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterID2ID2_InputConvertibleToOutputCheck
    InputHasZeroCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterID2ID2_InputHasZeroCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkNaryAddImageFilterPython.delete_itkNaryAddImageFilterID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkNaryAddImageFilterID2ID2"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNaryAddImageFilterID2ID2"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNaryAddImageFilterID2ID2
        
        Create a new object of the class itkNaryAddImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNaryAddImageFilterID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNaryAddImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNaryAddImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNaryAddImageFilterID2ID2.GetPointer = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterID2ID2_GetPointer,None,itkNaryAddImageFilterID2ID2)
itkNaryAddImageFilterID2ID2_swigregister = _itkNaryAddImageFilterPython.itkNaryAddImageFilterID2ID2_swigregister
itkNaryAddImageFilterID2ID2_swigregister(itkNaryAddImageFilterID2ID2)

def itkNaryAddImageFilterID2ID2___New_orig__():
  """itkNaryAddImageFilterID2ID2___New_orig__()"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterID2ID2___New_orig__()

def itkNaryAddImageFilterID2ID2_cast(*args):
  """itkNaryAddImageFilterID2ID2_cast(itkLightObject obj) -> itkNaryAddImageFilterID2ID2"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterID2ID2_cast(*args)

class itkNaryAddImageFilterID3ID3(itkNaryAddImageFilterID3ID3_Superclass):
    """Proxy of C++ itkNaryAddImageFilterID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToOutputCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterID3ID3_InputConvertibleToOutputCheck
    InputHasZeroCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterID3ID3_InputHasZeroCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkNaryAddImageFilterPython.delete_itkNaryAddImageFilterID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkNaryAddImageFilterID3ID3"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNaryAddImageFilterID3ID3"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNaryAddImageFilterID3ID3
        
        Create a new object of the class itkNaryAddImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNaryAddImageFilterID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNaryAddImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNaryAddImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNaryAddImageFilterID3ID3.GetPointer = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterID3ID3_GetPointer,None,itkNaryAddImageFilterID3ID3)
itkNaryAddImageFilterID3ID3_swigregister = _itkNaryAddImageFilterPython.itkNaryAddImageFilterID3ID3_swigregister
itkNaryAddImageFilterID3ID3_swigregister(itkNaryAddImageFilterID3ID3)

def itkNaryAddImageFilterID3ID3___New_orig__():
  """itkNaryAddImageFilterID3ID3___New_orig__()"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterID3ID3___New_orig__()

def itkNaryAddImageFilterID3ID3_cast(*args):
  """itkNaryAddImageFilterID3ID3_cast(itkLightObject obj) -> itkNaryAddImageFilterID3ID3"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterID3ID3_cast(*args)

class itkNaryAddImageFilterIF2IF2(itkNaryAddImageFilterIF2IF2_Superclass):
    """Proxy of C++ itkNaryAddImageFilterIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToOutputCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF2IF2_InputConvertibleToOutputCheck
    InputHasZeroCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF2IF2_InputHasZeroCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkNaryAddImageFilterPython.delete_itkNaryAddImageFilterIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkNaryAddImageFilterIF2IF2"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNaryAddImageFilterIF2IF2"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNaryAddImageFilterIF2IF2
        
        Create a new object of the class itkNaryAddImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNaryAddImageFilterIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNaryAddImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNaryAddImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNaryAddImageFilterIF2IF2.GetPointer = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIF2IF2_GetPointer,None,itkNaryAddImageFilterIF2IF2)
itkNaryAddImageFilterIF2IF2_swigregister = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF2IF2_swigregister
itkNaryAddImageFilterIF2IF2_swigregister(itkNaryAddImageFilterIF2IF2)

def itkNaryAddImageFilterIF2IF2___New_orig__():
  """itkNaryAddImageFilterIF2IF2___New_orig__()"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF2IF2___New_orig__()

def itkNaryAddImageFilterIF2IF2_cast(*args):
  """itkNaryAddImageFilterIF2IF2_cast(itkLightObject obj) -> itkNaryAddImageFilterIF2IF2"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF2IF2_cast(*args)

class itkNaryAddImageFilterIF3IF3(itkNaryAddImageFilterIF3IF3_Superclass):
    """Proxy of C++ itkNaryAddImageFilterIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToOutputCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF3IF3_InputConvertibleToOutputCheck
    InputHasZeroCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF3IF3_InputHasZeroCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkNaryAddImageFilterPython.delete_itkNaryAddImageFilterIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkNaryAddImageFilterIF3IF3"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNaryAddImageFilterIF3IF3"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNaryAddImageFilterIF3IF3
        
        Create a new object of the class itkNaryAddImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNaryAddImageFilterIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNaryAddImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNaryAddImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNaryAddImageFilterIF3IF3.GetPointer = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIF3IF3_GetPointer,None,itkNaryAddImageFilterIF3IF3)
itkNaryAddImageFilterIF3IF3_swigregister = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF3IF3_swigregister
itkNaryAddImageFilterIF3IF3_swigregister(itkNaryAddImageFilterIF3IF3)

def itkNaryAddImageFilterIF3IF3___New_orig__():
  """itkNaryAddImageFilterIF3IF3___New_orig__()"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF3IF3___New_orig__()

def itkNaryAddImageFilterIF3IF3_cast(*args):
  """itkNaryAddImageFilterIF3IF3_cast(itkLightObject obj) -> itkNaryAddImageFilterIF3IF3"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIF3IF3_cast(*args)

class itkNaryAddImageFilterIUC2IUC2(itkNaryAddImageFilterIUC2IUC2_Superclass):
    """Proxy of C++ itkNaryAddImageFilterIUC2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToOutputCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    InputHasZeroCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC2IUC2_InputHasZeroCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkNaryAddImageFilterPython.delete_itkNaryAddImageFilterIUC2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkNaryAddImageFilterIUC2IUC2"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNaryAddImageFilterIUC2IUC2"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNaryAddImageFilterIUC2IUC2
        
        Create a new object of the class itkNaryAddImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNaryAddImageFilterIUC2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNaryAddImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNaryAddImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNaryAddImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC2IUC2_GetPointer,None,itkNaryAddImageFilterIUC2IUC2)
itkNaryAddImageFilterIUC2IUC2_swigregister = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC2IUC2_swigregister
itkNaryAddImageFilterIUC2IUC2_swigregister(itkNaryAddImageFilterIUC2IUC2)

def itkNaryAddImageFilterIUC2IUC2___New_orig__():
  """itkNaryAddImageFilterIUC2IUC2___New_orig__()"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC2IUC2___New_orig__()

def itkNaryAddImageFilterIUC2IUC2_cast(*args):
  """itkNaryAddImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkNaryAddImageFilterIUC2IUC2"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC2IUC2_cast(*args)

class itkNaryAddImageFilterIUC3IUC3(itkNaryAddImageFilterIUC3IUC3_Superclass):
    """Proxy of C++ itkNaryAddImageFilterIUC3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToOutputCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    InputHasZeroCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC3IUC3_InputHasZeroCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkNaryAddImageFilterPython.delete_itkNaryAddImageFilterIUC3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkNaryAddImageFilterIUC3IUC3"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNaryAddImageFilterIUC3IUC3"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNaryAddImageFilterIUC3IUC3
        
        Create a new object of the class itkNaryAddImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNaryAddImageFilterIUC3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNaryAddImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNaryAddImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNaryAddImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC3IUC3_GetPointer,None,itkNaryAddImageFilterIUC3IUC3)
itkNaryAddImageFilterIUC3IUC3_swigregister = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC3IUC3_swigregister
itkNaryAddImageFilterIUC3IUC3_swigregister(itkNaryAddImageFilterIUC3IUC3)

def itkNaryAddImageFilterIUC3IUC3___New_orig__():
  """itkNaryAddImageFilterIUC3IUC3___New_orig__()"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC3IUC3___New_orig__()

def itkNaryAddImageFilterIUC3IUC3_cast(*args):
  """itkNaryAddImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkNaryAddImageFilterIUC3IUC3"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUC3IUC3_cast(*args)

class itkNaryAddImageFilterIUL2IUL2(itkNaryAddImageFilterIUL2IUL2_Superclass):
    """Proxy of C++ itkNaryAddImageFilterIUL2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToOutputCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL2IUL2_InputConvertibleToOutputCheck
    InputHasZeroCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL2IUL2_InputHasZeroCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkNaryAddImageFilterPython.delete_itkNaryAddImageFilterIUL2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkNaryAddImageFilterIUL2IUL2"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNaryAddImageFilterIUL2IUL2"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNaryAddImageFilterIUL2IUL2
        
        Create a new object of the class itkNaryAddImageFilterIUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNaryAddImageFilterIUL2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNaryAddImageFilterIUL2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNaryAddImageFilterIUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNaryAddImageFilterIUL2IUL2.GetPointer = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL2IUL2_GetPointer,None,itkNaryAddImageFilterIUL2IUL2)
itkNaryAddImageFilterIUL2IUL2_swigregister = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL2IUL2_swigregister
itkNaryAddImageFilterIUL2IUL2_swigregister(itkNaryAddImageFilterIUL2IUL2)

def itkNaryAddImageFilterIUL2IUL2___New_orig__():
  """itkNaryAddImageFilterIUL2IUL2___New_orig__()"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL2IUL2___New_orig__()

def itkNaryAddImageFilterIUL2IUL2_cast(*args):
  """itkNaryAddImageFilterIUL2IUL2_cast(itkLightObject obj) -> itkNaryAddImageFilterIUL2IUL2"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL2IUL2_cast(*args)

class itkNaryAddImageFilterIUL3IUL3(itkNaryAddImageFilterIUL3IUL3_Superclass):
    """Proxy of C++ itkNaryAddImageFilterIUL3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToOutputCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL3IUL3_InputConvertibleToOutputCheck
    InputHasZeroCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL3IUL3_InputHasZeroCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkNaryAddImageFilterPython.delete_itkNaryAddImageFilterIUL3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkNaryAddImageFilterIUL3IUL3"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNaryAddImageFilterIUL3IUL3"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNaryAddImageFilterIUL3IUL3
        
        Create a new object of the class itkNaryAddImageFilterIUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNaryAddImageFilterIUL3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNaryAddImageFilterIUL3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNaryAddImageFilterIUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNaryAddImageFilterIUL3IUL3.GetPointer = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL3IUL3_GetPointer,None,itkNaryAddImageFilterIUL3IUL3)
itkNaryAddImageFilterIUL3IUL3_swigregister = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL3IUL3_swigregister
itkNaryAddImageFilterIUL3IUL3_swigregister(itkNaryAddImageFilterIUL3IUL3)

def itkNaryAddImageFilterIUL3IUL3___New_orig__():
  """itkNaryAddImageFilterIUL3IUL3___New_orig__()"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL3IUL3___New_orig__()

def itkNaryAddImageFilterIUL3IUL3_cast(*args):
  """itkNaryAddImageFilterIUL3IUL3_cast(itkLightObject obj) -> itkNaryAddImageFilterIUL3IUL3"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUL3IUL3_cast(*args)

class itkNaryAddImageFilterIUS2IUS2(itkNaryAddImageFilterIUS2IUS2_Superclass):
    """Proxy of C++ itkNaryAddImageFilterIUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToOutputCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS2IUS2_InputConvertibleToOutputCheck
    InputHasZeroCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS2IUS2_InputHasZeroCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkNaryAddImageFilterPython.delete_itkNaryAddImageFilterIUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkNaryAddImageFilterIUS2IUS2"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNaryAddImageFilterIUS2IUS2"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNaryAddImageFilterIUS2IUS2
        
        Create a new object of the class itkNaryAddImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNaryAddImageFilterIUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNaryAddImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNaryAddImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNaryAddImageFilterIUS2IUS2.GetPointer = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS2IUS2_GetPointer,None,itkNaryAddImageFilterIUS2IUS2)
itkNaryAddImageFilterIUS2IUS2_swigregister = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS2IUS2_swigregister
itkNaryAddImageFilterIUS2IUS2_swigregister(itkNaryAddImageFilterIUS2IUS2)

def itkNaryAddImageFilterIUS2IUS2___New_orig__():
  """itkNaryAddImageFilterIUS2IUS2___New_orig__()"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS2IUS2___New_orig__()

def itkNaryAddImageFilterIUS2IUS2_cast(*args):
  """itkNaryAddImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkNaryAddImageFilterIUS2IUS2"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS2IUS2_cast(*args)

class itkNaryAddImageFilterIUS3IUS3(itkNaryAddImageFilterIUS3IUS3_Superclass):
    """Proxy of C++ itkNaryAddImageFilterIUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToOutputCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS3IUS3_InputConvertibleToOutputCheck
    InputHasZeroCheck = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS3IUS3_InputHasZeroCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkNaryAddImageFilterPython.delete_itkNaryAddImageFilterIUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkNaryAddImageFilterIUS3IUS3"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNaryAddImageFilterIUS3IUS3"""
        return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNaryAddImageFilterIUS3IUS3
        
        Create a new object of the class itkNaryAddImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNaryAddImageFilterIUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNaryAddImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNaryAddImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNaryAddImageFilterIUS3IUS3.GetPointer = new_instancemethod(_itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS3IUS3_GetPointer,None,itkNaryAddImageFilterIUS3IUS3)
itkNaryAddImageFilterIUS3IUS3_swigregister = _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS3IUS3_swigregister
itkNaryAddImageFilterIUS3IUS3_swigregister(itkNaryAddImageFilterIUS3IUS3)

def itkNaryAddImageFilterIUS3IUS3___New_orig__():
  """itkNaryAddImageFilterIUS3IUS3___New_orig__()"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS3IUS3___New_orig__()

def itkNaryAddImageFilterIUS3IUS3_cast(*args):
  """itkNaryAddImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkNaryAddImageFilterIUS3IUS3"""
  return _itkNaryAddImageFilterPython.itkNaryAddImageFilterIUS3IUS3_cast(*args)



