// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkQuadEdgeMeshPointChicken
#endif
#ifdef SWIGCSHARP
%module itkQuadEdgeMeshPointCsharp
#endif
#ifdef SWIGGUILE
%module itkQuadEdgeMeshPointGuile
#endif
#ifdef SWIGJAVA
%module itkQuadEdgeMeshPointJava
#endif
#ifdef SWIGLUA
%module itkQuadEdgeMeshPointLua
#endif
#ifdef SWIGMODULA3
%module itkQuadEdgeMeshPointModula3
#endif
#ifdef SWIGMZSCHEME
%module itkQuadEdgeMeshPointMzscheme
#endif
#ifdef SWIGOCAML
%module itkQuadEdgeMeshPointOcaml
#endif
#ifdef SWIGPERL
%module itkQuadEdgeMeshPointPerl
#endif
#ifdef SWIGPERL5
%module itkQuadEdgeMeshPointPerl5
#endif
#ifdef SWIGPHP
%module itkQuadEdgeMeshPointPhp
#endif
#ifdef SWIGPHP4
%module itkQuadEdgeMeshPointPhp4
#endif
#ifdef SWIGPHP5
%module itkQuadEdgeMeshPointPhp5
#endif
#ifdef SWIGPIKE
%module itkQuadEdgeMeshPointPike
#endif
#ifdef SWIGPYTHON
%module itkQuadEdgeMeshPointPython
#endif
#ifdef SWIGR
%module itkQuadEdgeMeshPointR
#endif
#ifdef SWIGRUBY
%module itkQuadEdgeMeshPointRuby
#endif
#ifdef SWIGSEXP
%module itkQuadEdgeMeshPointSexp
#endif
#ifdef SWIGTCL
%module itkQuadEdgeMeshPointTcl
#endif
#ifdef SWIGXML
%module itkQuadEdgeMeshPointXml
#endif

%{
#include "Base.includes"
#include "Mesh.includes"
%}


%{
%}




%import wrap_itkGeometricalQuadEdge.i
%import wrap_itkPoint.i


%include itk.i
%include wrap_itkQuadEdgeMeshPoint_ext.i


 class itkQuadEdgeMeshPointF2 : public itkPointF2 {
   public:
     enum  {  PointDimension = 2 };
     itkQuadEdgeMeshPointF2();
     ~itkQuadEdgeMeshPointF2();
     itkQuadEdgeMeshPointF2(itkQuadEdgeMeshPointF2 const & r);
     itkQuadEdgeMeshPointF2(itkPointF2 const & r);
     itkQuadEdgeMeshPointF2(float const * r);
     itkQuadEdgeMeshPointF2 & operator=(itkQuadEdgeMeshPointF2 const & r);
     itkQuadEdgeMeshPointF2 & operator=(itkPointF2 const & r);
     itkQuadEdgeMeshPointF2 & operator=(float const * r);
     void SetEdge(itkGeometricalQuadEdgeULULBBF * inputEdge);
     void SetPoint(itkPointF2 const & point);
     itkGeometricalQuadEdgeULULBBF * GetEdge();
     itkGeometricalQuadEdgeULULBBF * GetEdge() const;
     bool IsInternal() const;
     int GetValence() const;
   private:
   protected:
     void Initialize();
 };


 class itkQuadEdgeMeshPointF3 : public itkPointF3 {
   public:
     enum  {  PointDimension = 3 };
     itkQuadEdgeMeshPointF3();
     ~itkQuadEdgeMeshPointF3();
     itkQuadEdgeMeshPointF3(itkQuadEdgeMeshPointF3 const & r);
     itkQuadEdgeMeshPointF3(itkPointF3 const & r);
     itkQuadEdgeMeshPointF3(float const * r);
     itkQuadEdgeMeshPointF3 & operator=(itkQuadEdgeMeshPointF3 const & r);
     itkQuadEdgeMeshPointF3 & operator=(itkPointF3 const & r);
     itkQuadEdgeMeshPointF3 & operator=(float const * r);
     void SetEdge(itkGeometricalQuadEdgeULULBBF * inputEdge);
     void SetPoint(itkPointF3 const & point);
     itkGeometricalQuadEdgeULULBBF * GetEdge();
     itkGeometricalQuadEdgeULULBBF * GetEdge() const;
     bool IsInternal() const;
     int GetValence() const;
   private:
   protected:
     void Initialize();
 };


