# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _vnl_matrix_fixed_refPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_vnl_matrix_fixed_refPython', [dirname(__file__)])
        except ImportError:
            import _vnl_matrix_fixed_refPython
            return _vnl_matrix_fixed_refPython
        if fp is not None:
            try:
                _mod = imp.load_module('_vnl_matrix_fixed_refPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _vnl_matrix_fixed_refPython = swig_import_helper()
    del swig_import_helper
else:
    import _vnl_matrix_fixed_refPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import vnl_matrix_fixedPython
import vnl_vectorPython
import vcl_complexPython
import pyBasePython
import vnl_matrixPython
class vnl_matrix_fixed_ref_constF_3_3(object):
    """Proxy of C++ vnl_matrix_fixed_ref_constF_3_3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    __swig_destroy__ = _vnl_matrix_fixed_refPython.delete_vnl_matrix_fixed_ref_constF_3_3
    def __init__(self, *args): 
        """
        __init__(self, vnl_matrix_fixedF_3_3 rhs) -> vnl_matrix_fixed_ref_constF_3_3
        __init__(self, float dataptr) -> vnl_matrix_fixed_ref_constF_3_3
        __init__(self, vnl_matrix_fixed_ref_constF_3_3 rhs) -> vnl_matrix_fixed_ref_constF_3_3
        """
        _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_swiginit(self,_vnl_matrix_fixed_refPython.new_vnl_matrix_fixed_ref_constF_3_3(*args))
    def get_row(self, *args):
        """get_row(self, unsigned int row_index) -> vnl_vector_fixed<(float,3u)>"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_get_row(self, *args)

    def get_column(self, *args):
        """get_column(self, unsigned int column_index) -> vnl_vector_fixed<(float,3u)>"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_get_column(self, *args)

    def data_block(self):
        """data_block(self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_data_block(self)

    def begin(self):
        """begin(self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_begin(self)

    def end(self):
        """end(self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_end(self)

    def __call__(self, *args):
        """__call__(self, unsigned int r, unsigned int c) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3___call__(self, *args)

    def rows(self):
        """rows(self) -> unsigned int"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_rows(self)

    def columns(self):
        """columns(self) -> unsigned int"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_columns(self)

    def cols(self):
        """cols(self) -> unsigned int"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_cols(self)

    def size(self):
        """size(self) -> unsigned int"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_size(self)

    def _print(self, *args):
        """_print(self, ostream os)"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3__print(self, *args)

    def copy_out(self, *args):
        """copy_out(self, float arg0)"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_copy_out(self, *args)

    def transpose(self):
        """transpose(self) -> vnl_matrix_fixedF_3_3"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_transpose(self)

    def conjugate_transpose(self):
        """conjugate_transpose(self) -> vnl_matrix_fixedF_3_3"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_conjugate_transpose(self)

    def extract(self, *args):
        """
        extract(self, unsigned int rows, unsigned int cols, unsigned int top = 0, 
            unsigned int left = 0) -> vnl_matrixF
        extract(self, unsigned int rows, unsigned int cols, unsigned int top = 0) -> vnl_matrixF
        extract(self, unsigned int rows, unsigned int cols) -> vnl_matrixF
        """
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_extract(self, *args)

    def get_n_rows(self, *args):
        """get_n_rows(self, unsigned int rowstart, unsigned int n) -> vnl_matrixF"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_get_n_rows(self, *args)

    def get_n_columns(self, *args):
        """get_n_columns(self, unsigned int colstart, unsigned int n) -> vnl_matrixF"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_get_n_columns(self, *args)

    def array_one_norm(self):
        """array_one_norm(self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_array_one_norm(self)

    def array_two_norm(self):
        """array_two_norm(self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_array_two_norm(self)

    def array_inf_norm(self):
        """array_inf_norm(self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_array_inf_norm(self)

    def absolute_value_sum(self):
        """absolute_value_sum(self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_absolute_value_sum(self)

    def absolute_value_max(self):
        """absolute_value_max(self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_absolute_value_max(self)

    def operator_one_norm(self):
        """operator_one_norm(self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_operator_one_norm(self)

    def operator_inf_norm(self):
        """operator_inf_norm(self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_operator_inf_norm(self)

    def frobenius_norm(self):
        """frobenius_norm(self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_frobenius_norm(self)

    def fro_norm(self):
        """fro_norm(self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_fro_norm(self)

    def rms(self):
        """rms(self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_rms(self)

    def min_value(self):
        """min_value(self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_min_value(self)

    def max_value(self):
        """max_value(self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_max_value(self)

    def mean(self):
        """mean(self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_mean(self)

    def empty(self):
        """empty(self) -> bool"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_empty(self)

    def is_identity(self, *args):
        """
        is_identity(self) -> bool
        is_identity(self, double tol) -> bool
        """
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_is_identity(self, *args)

    def is_zero(self, *args):
        """
        is_zero(self) -> bool
        is_zero(self, double tol) -> bool
        """
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_is_zero(self, *args)

    def is_finite(self):
        """is_finite(self) -> bool"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_is_finite(self)

    def has_nans(self):
        """has_nans(self) -> bool"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_has_nans(self)

    def assert_size(self, *args):
        """assert_size(self, unsigned int rows, unsigned int cols)"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_assert_size(self, *args)

    def assert_finite(self):
        """assert_finite(self)"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_assert_finite(self)

    def add(*args):
        """
        add(float a, float b, float r)
        add(float a, float b, float r)
        """
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_add(*args)

    add = staticmethod(add)
    def sub(*args):
        """
        sub(float a, float b, float r)
        sub(float a, float b, float r)
        sub(float a, float b, float r)
        """
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_sub(*args)

    sub = staticmethod(sub)
    def mul(*args):
        """
        mul(float a, float b, float r)
        mul(float a, float b, float r)
        """
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_mul(*args)

    mul = staticmethod(mul)
    def div(*args):
        """
        div(float a, float b, float r)
        div(float a, float b, float r)
        """
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_div(*args)

    div = staticmethod(div)
    def equal(*args):
        """equal(float a, float b) -> bool"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_equal(*args)

    equal = staticmethod(equal)
vnl_matrix_fixed_ref_constF_3_3.get_row = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_get_row,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.get_column = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_get_column,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.data_block = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_data_block,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.begin = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_begin,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.end = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_end,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.__call__ = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3___call__,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.rows = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_rows,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.columns = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_columns,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.cols = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_cols,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.size = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_size,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3._print = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3__print,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.copy_out = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_copy_out,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.transpose = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_transpose,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.conjugate_transpose = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_conjugate_transpose,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.extract = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_extract,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.get_n_rows = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_get_n_rows,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.get_n_columns = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_get_n_columns,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.array_one_norm = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_array_one_norm,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.array_two_norm = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_array_two_norm,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.array_inf_norm = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_array_inf_norm,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.absolute_value_sum = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_absolute_value_sum,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.absolute_value_max = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_absolute_value_max,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.operator_one_norm = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_operator_one_norm,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.operator_inf_norm = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_operator_inf_norm,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.frobenius_norm = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_frobenius_norm,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.fro_norm = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_fro_norm,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.rms = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_rms,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.min_value = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_min_value,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.max_value = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_max_value,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.mean = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_mean,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.empty = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_empty,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.is_identity = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_is_identity,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.is_zero = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_is_zero,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.is_finite = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_is_finite,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.has_nans = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_has_nans,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.assert_size = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_assert_size,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3.assert_finite = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_assert_finite,None,vnl_matrix_fixed_ref_constF_3_3)
vnl_matrix_fixed_ref_constF_3_3_swigregister = _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_swigregister
vnl_matrix_fixed_ref_constF_3_3_swigregister(vnl_matrix_fixed_ref_constF_3_3)

def vnl_matrix_fixed_ref_constF_3_3_add(*args):
  """
    add(float a, float b, float r)
    vnl_matrix_fixed_ref_constF_3_3_add(float a, float b, float r)
    """
  return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_add(*args)

def vnl_matrix_fixed_ref_constF_3_3_sub(*args):
  """
    sub(float a, float b, float r)
    sub(float a, float b, float r)
    vnl_matrix_fixed_ref_constF_3_3_sub(float a, float b, float r)
    """
  return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_sub(*args)

def vnl_matrix_fixed_ref_constF_3_3_mul(*args):
  """
    mul(float a, float b, float r)
    vnl_matrix_fixed_ref_constF_3_3_mul(float a, float b, float r)
    """
  return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_mul(*args)

def vnl_matrix_fixed_ref_constF_3_3_div(*args):
  """
    div(float a, float b, float r)
    vnl_matrix_fixed_ref_constF_3_3_div(float a, float b, float r)
    """
  return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_div(*args)

def vnl_matrix_fixed_ref_constF_3_3_equal(*args):
  """vnl_matrix_fixed_ref_constF_3_3_equal(float a, float b) -> bool"""
  return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_ref_constF_3_3_equal(*args)

class vnl_matrix_fixed_refF_3_3(vnl_matrix_fixed_ref_constF_3_3):
    """Proxy of C++ vnl_matrix_fixed_refF_3_3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    __swig_destroy__ = _vnl_matrix_fixed_refPython.delete_vnl_matrix_fixed_refF_3_3
    def data_block(self):
        """data_block(self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_data_block(self)

    def __init__(self, *args): 
        """
        __init__(self, vnl_matrix_fixed_refF_3_3 arg0) -> vnl_matrix_fixed_refF_3_3
        __init__(self, vnl_matrix_fixedF_3_3 rhs) -> vnl_matrix_fixed_refF_3_3
        __init__(self, float dataptr) -> vnl_matrix_fixed_refF_3_3
        """
        _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_swiginit(self,_vnl_matrix_fixed_refPython.new_vnl_matrix_fixed_refF_3_3(*args))
    def put(self, *args):
        """put(self, unsigned int r, unsigned int c, float v)"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_put(self, *args)

    def get(self, *args):
        """get(self, unsigned int r, unsigned int c) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_get(self, *args)

    def __call__(self, *args):
        """__call__(self, unsigned int r, unsigned int c) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___call__(self, *args)

    def fill(self, *args):
        """fill(self, float arg0)"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_fill(self, *args)

    def fill_diagonal(self, *args):
        """fill_diagonal(self, float arg0)"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_fill_diagonal(self, *args)

    def copy_in(self, *args):
        """copy_in(self, float arg0)"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_copy_in(self, *args)

    def set(self, *args):
        """set(self, float d)"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_set(self, *args)

    def inplace_transpose(self):
        """inplace_transpose(self)"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_inplace_transpose(self)

    def __idiv__(self, *args):
        """__idiv__(self, float s) -> vnl_matrix_fixed_refF_3_3"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___idiv__(self, *args)

    def __iadd__(self, *args):
        """
        __iadd__(self, float s) -> vnl_matrix_fixed_refF_3_3
        __iadd__(self, vnl_matrix_fixed_ref_constF_3_3 m) -> vnl_matrix_fixed_refF_3_3
        __iadd__(self, vnl_matrixF m) -> vnl_matrix_fixed_refF_3_3
        """
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___iadd__(self, *args)

    def __isub__(self, *args):
        """
        __isub__(self, float s) -> vnl_matrix_fixed_refF_3_3
        __isub__(self, vnl_matrix_fixed_ref_constF_3_3 m) -> vnl_matrix_fixed_refF_3_3
        __isub__(self, vnl_matrixF m) -> vnl_matrix_fixed_refF_3_3
        """
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___isub__(self, *args)

    def __neg__(self):
        """__neg__(self) -> vnl_matrix_fixedF_3_3"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___neg__(self)

    def __imul__(self, *args):
        """
        __imul__(self, float s) -> vnl_matrix_fixed_refF_3_3
        __imul__(self, vnl_matrix_fixed_ref_constF_3_3 s) -> vnl_matrix_fixed_refF_3_3
        """
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___imul__(self, *args)

    def update(self, *args):
        """
        update(self, vnl_matrixF arg0, unsigned int top = 0, unsigned int left = 0) -> vnl_matrix_fixed_refF_3_3
        update(self, vnl_matrixF arg0, unsigned int top = 0) -> vnl_matrix_fixed_refF_3_3
        update(self, vnl_matrixF arg0) -> vnl_matrix_fixed_refF_3_3
        """
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_update(self, *args)

    def set_column(self, *args):
        """
        set_column(self, unsigned int i, float v)
        set_column(self, unsigned int i, float value)
        set_column(self, unsigned int j, vnl_vectorF v)
        """
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_set_column(self, *args)

    def set_columns(self, *args):
        """set_columns(self, unsigned int starting_column, vnl_matrixF M)"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_set_columns(self, *args)

    def set_row(self, *args):
        """
        set_row(self, unsigned int i, float v)
        set_row(self, unsigned int i, float value)
        set_row(self, unsigned int i, vnl_vectorF arg1)
        """
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_set_row(self, *args)

    def set_identity(self):
        """set_identity(self)"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_set_identity(self)

    def flipud(self):
        """flipud(self)"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_flipud(self)

    def fliplr(self):
        """fliplr(self)"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_fliplr(self)

    def normalize_rows(self):
        """normalize_rows(self)"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_normalize_rows(self)

    def normalize_columns(self):
        """normalize_columns(self)"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_normalize_columns(self)

    def scale_row(self, *args):
        """scale_row(self, unsigned int row, float value)"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_scale_row(self, *args)

    def scale_column(self, *args):
        """scale_column(self, unsigned int col, float value)"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_scale_column(self, *args)

    def read_ascii(self, *args):
        """read_ascii(self, istream s) -> bool"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_read_ascii(self, *args)

    def as_matrix(self):
        """as_matrix(self) -> vnl_matrixF"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_as_matrix(self)

    def begin(self):
        """begin(self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_begin(self)

    def end(self):
        """end(self) -> float"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_end(self)

    def operator_eq(self, *args):
        """operator_eq(self, vnl_matrix_fixed_ref_constF_3_3 rhs) -> bool"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_operator_eq(self, *args)

    def __eq__(self, *args):
        """__eq__(self, vnl_matrix_fixed_ref_constF_3_3 that) -> bool"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(self, vnl_matrix_fixed_ref_constF_3_3 that) -> bool"""
        return _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___ne__(self, *args)

vnl_matrix_fixed_refF_3_3.data_block = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_data_block,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.put = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_put,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.get = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_get,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.__call__ = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___call__,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.fill = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_fill,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.fill_diagonal = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_fill_diagonal,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.copy_in = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_copy_in,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.set = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_set,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.inplace_transpose = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_inplace_transpose,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.__idiv__ = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___idiv__,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.__iadd__ = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___iadd__,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.__isub__ = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___isub__,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.__neg__ = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___neg__,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.__imul__ = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___imul__,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.update = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_update,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.set_column = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_set_column,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.set_columns = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_set_columns,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.set_row = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_set_row,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.set_identity = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_set_identity,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.flipud = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_flipud,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.fliplr = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_fliplr,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.normalize_rows = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_normalize_rows,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.normalize_columns = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_normalize_columns,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.scale_row = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_scale_row,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.scale_column = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_scale_column,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.read_ascii = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_read_ascii,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.as_matrix = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_as_matrix,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.begin = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_begin,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.end = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_end,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.operator_eq = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_operator_eq,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.__eq__ = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___eq__,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3.__ne__ = new_instancemethod(_vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3___ne__,None,vnl_matrix_fixed_refF_3_3)
vnl_matrix_fixed_refF_3_3_swigregister = _vnl_matrix_fixed_refPython.vnl_matrix_fixed_refF_3_3_swigregister
vnl_matrix_fixed_refF_3_3_swigregister(vnl_matrix_fixed_refF_3_3)



