// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkImageToVectorImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkImageToVectorImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkImageToVectorImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkImageToVectorImageFilterJava
#endif
#ifdef SWIGLUA
%module itkImageToVectorImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkImageToVectorImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkImageToVectorImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkImageToVectorImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkImageToVectorImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkImageToVectorImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkImageToVectorImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkImageToVectorImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkImageToVectorImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkImageToVectorImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkImageToVectorImageFilterPython
#endif
#ifdef SWIGR
%module itkImageToVectorImageFilterR
#endif
#ifdef SWIGRUBY
%module itkImageToVectorImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkImageToVectorImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkImageToVectorImageFilterTcl
#endif
#ifdef SWIGXML
%module itkImageToVectorImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Compose.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_ITKRegions.i
%import wrap_itkImageToImageFilterB.i
%import wrap_itkImage.i


%include itk.i
%include wrap_itkImageToVectorImageFilter_ext.i


 class itkImageToVectorImageFilterID2 : public itkImageToImageFilterID2VID2 {
   public:
     enum  {  Dimension = 2 };
     static itkImageToVectorImageFilterID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetNthInput(unsigned int idx, itkImageD2 const * inputImage);
     ~itkImageToVectorImageFilterID2();
   private:
     itkImageToVectorImageFilterID2(itkImageToVectorImageFilterID2 const & arg0);
     void operator=(itkImageToVectorImageFilterID2 const & arg0);
   protected:
     itkImageToVectorImageFilterID2();
     virtual void GenerateOutputInformation();
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int arg1);
     virtual void SetNthInput(unsigned int num, itkDataObject * input);
 };


 class itkImageToVectorImageFilterID2_Pointer {
   public:
     itkImageToVectorImageFilterID2_Pointer();
     itkImageToVectorImageFilterID2_Pointer(itkImageToVectorImageFilterID2_Pointer const & p);
     itkImageToVectorImageFilterID2_Pointer(itkImageToVectorImageFilterID2 * p);
     ~itkImageToVectorImageFilterID2_Pointer();
     itkImageToVectorImageFilterID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToVectorImageFilterID2 * GetPointer() const;
     bool operator<(itkImageToVectorImageFilterID2_Pointer const & r) const;
     bool operator>(itkImageToVectorImageFilterID2_Pointer const & r) const;
     bool operator<=(itkImageToVectorImageFilterID2_Pointer const & r) const;
     bool operator>=(itkImageToVectorImageFilterID2_Pointer const & r) const;
     itkImageToVectorImageFilterID2_Pointer & operator=(itkImageToVectorImageFilterID2_Pointer const & r);
     itkImageToVectorImageFilterID2_Pointer & operator=(itkImageToVectorImageFilterID2 * r);
     itkImageToVectorImageFilterID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToVectorImageFilterID3 : public itkImageToImageFilterID3VID3 {
   public:
     enum  {  Dimension = 3 };
     static itkImageToVectorImageFilterID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetNthInput(unsigned int idx, itkImageD3 const * inputImage);
     ~itkImageToVectorImageFilterID3();
   private:
     itkImageToVectorImageFilterID3(itkImageToVectorImageFilterID3 const & arg0);
     void operator=(itkImageToVectorImageFilterID3 const & arg0);
   protected:
     itkImageToVectorImageFilterID3();
     virtual void GenerateOutputInformation();
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int arg1);
     virtual void SetNthInput(unsigned int num, itkDataObject * input);
 };


 class itkImageToVectorImageFilterID3_Pointer {
   public:
     itkImageToVectorImageFilterID3_Pointer();
     itkImageToVectorImageFilterID3_Pointer(itkImageToVectorImageFilterID3_Pointer const & p);
     itkImageToVectorImageFilterID3_Pointer(itkImageToVectorImageFilterID3 * p);
     ~itkImageToVectorImageFilterID3_Pointer();
     itkImageToVectorImageFilterID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToVectorImageFilterID3 * GetPointer() const;
     bool operator<(itkImageToVectorImageFilterID3_Pointer const & r) const;
     bool operator>(itkImageToVectorImageFilterID3_Pointer const & r) const;
     bool operator<=(itkImageToVectorImageFilterID3_Pointer const & r) const;
     bool operator>=(itkImageToVectorImageFilterID3_Pointer const & r) const;
     itkImageToVectorImageFilterID3_Pointer & operator=(itkImageToVectorImageFilterID3_Pointer const & r);
     itkImageToVectorImageFilterID3_Pointer & operator=(itkImageToVectorImageFilterID3 * r);
     itkImageToVectorImageFilterID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToVectorImageFilterIF2 : public itkImageToImageFilterIF2VIF2 {
   public:
     enum  {  Dimension = 2 };
     static itkImageToVectorImageFilterIF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetNthInput(unsigned int idx, itkImageF2 const * inputImage);
     ~itkImageToVectorImageFilterIF2();
   private:
     itkImageToVectorImageFilterIF2(itkImageToVectorImageFilterIF2 const & arg0);
     void operator=(itkImageToVectorImageFilterIF2 const & arg0);
   protected:
     itkImageToVectorImageFilterIF2();
     virtual void GenerateOutputInformation();
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int arg1);
     virtual void SetNthInput(unsigned int num, itkDataObject * input);
 };


 class itkImageToVectorImageFilterIF2_Pointer {
   public:
     itkImageToVectorImageFilterIF2_Pointer();
     itkImageToVectorImageFilterIF2_Pointer(itkImageToVectorImageFilterIF2_Pointer const & p);
     itkImageToVectorImageFilterIF2_Pointer(itkImageToVectorImageFilterIF2 * p);
     ~itkImageToVectorImageFilterIF2_Pointer();
     itkImageToVectorImageFilterIF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToVectorImageFilterIF2 * GetPointer() const;
     bool operator<(itkImageToVectorImageFilterIF2_Pointer const & r) const;
     bool operator>(itkImageToVectorImageFilterIF2_Pointer const & r) const;
     bool operator<=(itkImageToVectorImageFilterIF2_Pointer const & r) const;
     bool operator>=(itkImageToVectorImageFilterIF2_Pointer const & r) const;
     itkImageToVectorImageFilterIF2_Pointer & operator=(itkImageToVectorImageFilterIF2_Pointer const & r);
     itkImageToVectorImageFilterIF2_Pointer & operator=(itkImageToVectorImageFilterIF2 * r);
     itkImageToVectorImageFilterIF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToVectorImageFilterIF3 : public itkImageToImageFilterIF3VIF3 {
   public:
     enum  {  Dimension = 3 };
     static itkImageToVectorImageFilterIF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetNthInput(unsigned int idx, itkImageF3 const * inputImage);
     ~itkImageToVectorImageFilterIF3();
   private:
     itkImageToVectorImageFilterIF3(itkImageToVectorImageFilterIF3 const & arg0);
     void operator=(itkImageToVectorImageFilterIF3 const & arg0);
   protected:
     itkImageToVectorImageFilterIF3();
     virtual void GenerateOutputInformation();
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int arg1);
     virtual void SetNthInput(unsigned int num, itkDataObject * input);
 };


 class itkImageToVectorImageFilterIF3_Pointer {
   public:
     itkImageToVectorImageFilterIF3_Pointer();
     itkImageToVectorImageFilterIF3_Pointer(itkImageToVectorImageFilterIF3_Pointer const & p);
     itkImageToVectorImageFilterIF3_Pointer(itkImageToVectorImageFilterIF3 * p);
     ~itkImageToVectorImageFilterIF3_Pointer();
     itkImageToVectorImageFilterIF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToVectorImageFilterIF3 * GetPointer() const;
     bool operator<(itkImageToVectorImageFilterIF3_Pointer const & r) const;
     bool operator>(itkImageToVectorImageFilterIF3_Pointer const & r) const;
     bool operator<=(itkImageToVectorImageFilterIF3_Pointer const & r) const;
     bool operator>=(itkImageToVectorImageFilterIF3_Pointer const & r) const;
     itkImageToVectorImageFilterIF3_Pointer & operator=(itkImageToVectorImageFilterIF3_Pointer const & r);
     itkImageToVectorImageFilterIF3_Pointer & operator=(itkImageToVectorImageFilterIF3 * r);
     itkImageToVectorImageFilterIF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToVectorImageFilterIUC2 : public itkImageToImageFilterIUC2VIUC2 {
   public:
     enum  {  Dimension = 2 };
     static itkImageToVectorImageFilterIUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetNthInput(unsigned int idx, itkImageUC2 const * inputImage);
     ~itkImageToVectorImageFilterIUC2();
   private:
     itkImageToVectorImageFilterIUC2(itkImageToVectorImageFilterIUC2 const & arg0);
     void operator=(itkImageToVectorImageFilterIUC2 const & arg0);
   protected:
     itkImageToVectorImageFilterIUC2();
     virtual void GenerateOutputInformation();
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int arg1);
     virtual void SetNthInput(unsigned int num, itkDataObject * input);
 };


 class itkImageToVectorImageFilterIUC2_Pointer {
   public:
     itkImageToVectorImageFilterIUC2_Pointer();
     itkImageToVectorImageFilterIUC2_Pointer(itkImageToVectorImageFilterIUC2_Pointer const & p);
     itkImageToVectorImageFilterIUC2_Pointer(itkImageToVectorImageFilterIUC2 * p);
     ~itkImageToVectorImageFilterIUC2_Pointer();
     itkImageToVectorImageFilterIUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToVectorImageFilterIUC2 * GetPointer() const;
     bool operator<(itkImageToVectorImageFilterIUC2_Pointer const & r) const;
     bool operator>(itkImageToVectorImageFilterIUC2_Pointer const & r) const;
     bool operator<=(itkImageToVectorImageFilterIUC2_Pointer const & r) const;
     bool operator>=(itkImageToVectorImageFilterIUC2_Pointer const & r) const;
     itkImageToVectorImageFilterIUC2_Pointer & operator=(itkImageToVectorImageFilterIUC2_Pointer const & r);
     itkImageToVectorImageFilterIUC2_Pointer & operator=(itkImageToVectorImageFilterIUC2 * r);
     itkImageToVectorImageFilterIUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToVectorImageFilterIUC3 : public itkImageToImageFilterIUC3VIUC3 {
   public:
     enum  {  Dimension = 3 };
     static itkImageToVectorImageFilterIUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetNthInput(unsigned int idx, itkImageUC3 const * inputImage);
     ~itkImageToVectorImageFilterIUC3();
   private:
     itkImageToVectorImageFilterIUC3(itkImageToVectorImageFilterIUC3 const & arg0);
     void operator=(itkImageToVectorImageFilterIUC3 const & arg0);
   protected:
     itkImageToVectorImageFilterIUC3();
     virtual void GenerateOutputInformation();
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int arg1);
     virtual void SetNthInput(unsigned int num, itkDataObject * input);
 };


 class itkImageToVectorImageFilterIUC3_Pointer {
   public:
     itkImageToVectorImageFilterIUC3_Pointer();
     itkImageToVectorImageFilterIUC3_Pointer(itkImageToVectorImageFilterIUC3_Pointer const & p);
     itkImageToVectorImageFilterIUC3_Pointer(itkImageToVectorImageFilterIUC3 * p);
     ~itkImageToVectorImageFilterIUC3_Pointer();
     itkImageToVectorImageFilterIUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToVectorImageFilterIUC3 * GetPointer() const;
     bool operator<(itkImageToVectorImageFilterIUC3_Pointer const & r) const;
     bool operator>(itkImageToVectorImageFilterIUC3_Pointer const & r) const;
     bool operator<=(itkImageToVectorImageFilterIUC3_Pointer const & r) const;
     bool operator>=(itkImageToVectorImageFilterIUC3_Pointer const & r) const;
     itkImageToVectorImageFilterIUC3_Pointer & operator=(itkImageToVectorImageFilterIUC3_Pointer const & r);
     itkImageToVectorImageFilterIUC3_Pointer & operator=(itkImageToVectorImageFilterIUC3 * r);
     itkImageToVectorImageFilterIUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToVectorImageFilterIUL2 : public itkImageToImageFilterIUL2VIUL2 {
   public:
     enum  {  Dimension = 2 };
     static itkImageToVectorImageFilterIUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetNthInput(unsigned int idx, itkImageUL2 const * inputImage);
     ~itkImageToVectorImageFilterIUL2();
   private:
     itkImageToVectorImageFilterIUL2(itkImageToVectorImageFilterIUL2 const & arg0);
     void operator=(itkImageToVectorImageFilterIUL2 const & arg0);
   protected:
     itkImageToVectorImageFilterIUL2();
     virtual void GenerateOutputInformation();
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int arg1);
     virtual void SetNthInput(unsigned int num, itkDataObject * input);
 };


 class itkImageToVectorImageFilterIUL2_Pointer {
   public:
     itkImageToVectorImageFilterIUL2_Pointer();
     itkImageToVectorImageFilterIUL2_Pointer(itkImageToVectorImageFilterIUL2_Pointer const & p);
     itkImageToVectorImageFilterIUL2_Pointer(itkImageToVectorImageFilterIUL2 * p);
     ~itkImageToVectorImageFilterIUL2_Pointer();
     itkImageToVectorImageFilterIUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToVectorImageFilterIUL2 * GetPointer() const;
     bool operator<(itkImageToVectorImageFilterIUL2_Pointer const & r) const;
     bool operator>(itkImageToVectorImageFilterIUL2_Pointer const & r) const;
     bool operator<=(itkImageToVectorImageFilterIUL2_Pointer const & r) const;
     bool operator>=(itkImageToVectorImageFilterIUL2_Pointer const & r) const;
     itkImageToVectorImageFilterIUL2_Pointer & operator=(itkImageToVectorImageFilterIUL2_Pointer const & r);
     itkImageToVectorImageFilterIUL2_Pointer & operator=(itkImageToVectorImageFilterIUL2 * r);
     itkImageToVectorImageFilterIUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToVectorImageFilterIUL3 : public itkImageToImageFilterIUL3VIUL3 {
   public:
     enum  {  Dimension = 3 };
     static itkImageToVectorImageFilterIUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetNthInput(unsigned int idx, itkImageUL3 const * inputImage);
     ~itkImageToVectorImageFilterIUL3();
   private:
     itkImageToVectorImageFilterIUL3(itkImageToVectorImageFilterIUL3 const & arg0);
     void operator=(itkImageToVectorImageFilterIUL3 const & arg0);
   protected:
     itkImageToVectorImageFilterIUL3();
     virtual void GenerateOutputInformation();
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int arg1);
     virtual void SetNthInput(unsigned int num, itkDataObject * input);
 };


 class itkImageToVectorImageFilterIUL3_Pointer {
   public:
     itkImageToVectorImageFilterIUL3_Pointer();
     itkImageToVectorImageFilterIUL3_Pointer(itkImageToVectorImageFilterIUL3_Pointer const & p);
     itkImageToVectorImageFilterIUL3_Pointer(itkImageToVectorImageFilterIUL3 * p);
     ~itkImageToVectorImageFilterIUL3_Pointer();
     itkImageToVectorImageFilterIUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToVectorImageFilterIUL3 * GetPointer() const;
     bool operator<(itkImageToVectorImageFilterIUL3_Pointer const & r) const;
     bool operator>(itkImageToVectorImageFilterIUL3_Pointer const & r) const;
     bool operator<=(itkImageToVectorImageFilterIUL3_Pointer const & r) const;
     bool operator>=(itkImageToVectorImageFilterIUL3_Pointer const & r) const;
     itkImageToVectorImageFilterIUL3_Pointer & operator=(itkImageToVectorImageFilterIUL3_Pointer const & r);
     itkImageToVectorImageFilterIUL3_Pointer & operator=(itkImageToVectorImageFilterIUL3 * r);
     itkImageToVectorImageFilterIUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToVectorImageFilterIUS2 : public itkImageToImageFilterIUS2VIUS2 {
   public:
     enum  {  Dimension = 2 };
     static itkImageToVectorImageFilterIUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetNthInput(unsigned int idx, itkImageUS2 const * inputImage);
     ~itkImageToVectorImageFilterIUS2();
   private:
     itkImageToVectorImageFilterIUS2(itkImageToVectorImageFilterIUS2 const & arg0);
     void operator=(itkImageToVectorImageFilterIUS2 const & arg0);
   protected:
     itkImageToVectorImageFilterIUS2();
     virtual void GenerateOutputInformation();
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int arg1);
     virtual void SetNthInput(unsigned int num, itkDataObject * input);
 };


 class itkImageToVectorImageFilterIUS2_Pointer {
   public:
     itkImageToVectorImageFilterIUS2_Pointer();
     itkImageToVectorImageFilterIUS2_Pointer(itkImageToVectorImageFilterIUS2_Pointer const & p);
     itkImageToVectorImageFilterIUS2_Pointer(itkImageToVectorImageFilterIUS2 * p);
     ~itkImageToVectorImageFilterIUS2_Pointer();
     itkImageToVectorImageFilterIUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToVectorImageFilterIUS2 * GetPointer() const;
     bool operator<(itkImageToVectorImageFilterIUS2_Pointer const & r) const;
     bool operator>(itkImageToVectorImageFilterIUS2_Pointer const & r) const;
     bool operator<=(itkImageToVectorImageFilterIUS2_Pointer const & r) const;
     bool operator>=(itkImageToVectorImageFilterIUS2_Pointer const & r) const;
     itkImageToVectorImageFilterIUS2_Pointer & operator=(itkImageToVectorImageFilterIUS2_Pointer const & r);
     itkImageToVectorImageFilterIUS2_Pointer & operator=(itkImageToVectorImageFilterIUS2 * r);
     itkImageToVectorImageFilterIUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToVectorImageFilterIUS3 : public itkImageToImageFilterIUS3VIUS3 {
   public:
     enum  {  Dimension = 3 };
     static itkImageToVectorImageFilterIUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetNthInput(unsigned int idx, itkImageUS3 const * inputImage);
     ~itkImageToVectorImageFilterIUS3();
   private:
     itkImageToVectorImageFilterIUS3(itkImageToVectorImageFilterIUS3 const & arg0);
     void operator=(itkImageToVectorImageFilterIUS3 const & arg0);
   protected:
     itkImageToVectorImageFilterIUS3();
     virtual void GenerateOutputInformation();
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int arg1);
     virtual void SetNthInput(unsigned int num, itkDataObject * input);
 };


 class itkImageToVectorImageFilterIUS3_Pointer {
   public:
     itkImageToVectorImageFilterIUS3_Pointer();
     itkImageToVectorImageFilterIUS3_Pointer(itkImageToVectorImageFilterIUS3_Pointer const & p);
     itkImageToVectorImageFilterIUS3_Pointer(itkImageToVectorImageFilterIUS3 * p);
     ~itkImageToVectorImageFilterIUS3_Pointer();
     itkImageToVectorImageFilterIUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToVectorImageFilterIUS3 * GetPointer() const;
     bool operator<(itkImageToVectorImageFilterIUS3_Pointer const & r) const;
     bool operator>(itkImageToVectorImageFilterIUS3_Pointer const & r) const;
     bool operator<=(itkImageToVectorImageFilterIUS3_Pointer const & r) const;
     bool operator>=(itkImageToVectorImageFilterIUS3_Pointer const & r) const;
     itkImageToVectorImageFilterIUS3_Pointer & operator=(itkImageToVectorImageFilterIUS3_Pointer const & r);
     itkImageToVectorImageFilterIUS3_Pointer & operator=(itkImageToVectorImageFilterIUS3 * r);
     itkImageToVectorImageFilterIUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


