// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkConnectedComponentImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkConnectedComponentImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkConnectedComponentImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkConnectedComponentImageFilterJava
#endif
#ifdef SWIGLUA
%module itkConnectedComponentImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkConnectedComponentImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkConnectedComponentImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkConnectedComponentImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkConnectedComponentImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkConnectedComponentImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkConnectedComponentImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkConnectedComponentImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkConnectedComponentImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkConnectedComponentImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkConnectedComponentImageFilterPython
#endif
#ifdef SWIGR
%module itkConnectedComponentImageFilterR
#endif
#ifdef SWIGRUBY
%module itkConnectedComponentImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkConnectedComponentImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkConnectedComponentImageFilterTcl
#endif
#ifdef SWIGXML
%module itkConnectedComponentImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "SegmentationAndThreshold.includes"
%}


%{
%}




%import wrap_ITKRegions.i
%import wrap_itkImageToImageFilterA.i
%import wrap_itkIndex.i
%import wrap_itkImage.i
%import wrap_ITKCommonBase.i
%import wrap_itkImageToImageFilterB.i


%include itk.i
%include wrap_itkConnectedComponentImageFilter_ext.i


 class itkConnectedComponentImageFilterICVF22IUC2 : public itkImageToImageFilterICVF22IUC2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputImageDimension = 2 };
     enum  {  SameDimension = 1 };
     enum  {  OutputImagePixelTypeIsInteger = 1 };
     virtual char const * GetNameOfClass() const;
     static itkConnectedComponentImageFilterICVF22IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual unsigned long const & GetObjectCount() const;
     void SetMaskImage(itkImageCVF22 * mask);
     itkImageCVF22 const * GetMaskImage() const;
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundValue() const;
   private:
     void InitUnion(unsigned long const size);
     void InsertSet(unsigned long const label);
     unsigned long LookupSet(unsigned long const label);
     void LinkLabels(unsigned long const lab1, unsigned long const lab2);
     unsigned long CreateConsecutive();
     bool CheckNeighbors(itkIndex2 const & A, itkIndex2 const & B);
     void CompareLines(std::vector< itkConnectedComponentImageFilterICVF22IUC2::runLength > & current, std::vector< itkConnectedComponentImageFilterICVF22IUC2::runLength > const & Neighbour);
     void FillOutput(std::vector< std::vector< itkConnectedComponentImageFilterICVF22IUC2::runLength > > const & LineMap, itkProgressReporter & progress);
     void SetupLineOffsets(std::vector< long > & LineOffsets);
     void Wait();
   protected:
     itkConnectedComponentImageFilterICVF22IUC2();
     ~itkConnectedComponentImageFilterICVF22IUC2();
     itkConnectedComponentImageFilterICVF22IUC2(itkConnectedComponentImageFilterICVF22IUC2 const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkConnectedComponentImageFilterICVF22IUC2_Pointer {
   public:
     itkConnectedComponentImageFilterICVF22IUC2_Pointer();
     itkConnectedComponentImageFilterICVF22IUC2_Pointer(itkConnectedComponentImageFilterICVF22IUC2_Pointer const & p);
     itkConnectedComponentImageFilterICVF22IUC2_Pointer(itkConnectedComponentImageFilterICVF22IUC2 * p);
     ~itkConnectedComponentImageFilterICVF22IUC2_Pointer();
     itkConnectedComponentImageFilterICVF22IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConnectedComponentImageFilterICVF22IUC2 * GetPointer() const;
     bool operator<(itkConnectedComponentImageFilterICVF22IUC2_Pointer const & r) const;
     bool operator>(itkConnectedComponentImageFilterICVF22IUC2_Pointer const & r) const;
     bool operator<=(itkConnectedComponentImageFilterICVF22IUC2_Pointer const & r) const;
     bool operator>=(itkConnectedComponentImageFilterICVF22IUC2_Pointer const & r) const;
     itkConnectedComponentImageFilterICVF22IUC2_Pointer & operator=(itkConnectedComponentImageFilterICVF22IUC2_Pointer const & r);
     itkConnectedComponentImageFilterICVF22IUC2_Pointer & operator=(itkConnectedComponentImageFilterICVF22IUC2 * r);
     itkConnectedComponentImageFilterICVF22IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConnectedComponentImageFilterICVF22IUL2 : public itkImageToImageFilterICVF22IUL2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputImageDimension = 2 };
     enum  {  SameDimension = 1 };
     enum  {  OutputImagePixelTypeIsInteger = 1 };
     virtual char const * GetNameOfClass() const;
     static itkConnectedComponentImageFilterICVF22IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual unsigned long const & GetObjectCount() const;
     void SetMaskImage(itkImageCVF22 * mask);
     itkImageCVF22 const * GetMaskImage() const;
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundValue() const;
   private:
     void InitUnion(unsigned long const size);
     void InsertSet(unsigned long const label);
     unsigned long LookupSet(unsigned long const label);
     void LinkLabels(unsigned long const lab1, unsigned long const lab2);
     unsigned long CreateConsecutive();
     bool CheckNeighbors(itkIndex2 const & A, itkIndex2 const & B);
     void CompareLines(std::vector< itkConnectedComponentImageFilterICVF22IUL2::runLength > & current, std::vector< itkConnectedComponentImageFilterICVF22IUL2::runLength > const & Neighbour);
     void FillOutput(std::vector< std::vector< itkConnectedComponentImageFilterICVF22IUL2::runLength > > const & LineMap, itkProgressReporter & progress);
     void SetupLineOffsets(std::vector< long > & LineOffsets);
     void Wait();
   protected:
     itkConnectedComponentImageFilterICVF22IUL2();
     ~itkConnectedComponentImageFilterICVF22IUL2();
     itkConnectedComponentImageFilterICVF22IUL2(itkConnectedComponentImageFilterICVF22IUL2 const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkConnectedComponentImageFilterICVF22IUL2_Pointer {
   public:
     itkConnectedComponentImageFilterICVF22IUL2_Pointer();
     itkConnectedComponentImageFilterICVF22IUL2_Pointer(itkConnectedComponentImageFilterICVF22IUL2_Pointer const & p);
     itkConnectedComponentImageFilterICVF22IUL2_Pointer(itkConnectedComponentImageFilterICVF22IUL2 * p);
     ~itkConnectedComponentImageFilterICVF22IUL2_Pointer();
     itkConnectedComponentImageFilterICVF22IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConnectedComponentImageFilterICVF22IUL2 * GetPointer() const;
     bool operator<(itkConnectedComponentImageFilterICVF22IUL2_Pointer const & r) const;
     bool operator>(itkConnectedComponentImageFilterICVF22IUL2_Pointer const & r) const;
     bool operator<=(itkConnectedComponentImageFilterICVF22IUL2_Pointer const & r) const;
     bool operator>=(itkConnectedComponentImageFilterICVF22IUL2_Pointer const & r) const;
     itkConnectedComponentImageFilterICVF22IUL2_Pointer & operator=(itkConnectedComponentImageFilterICVF22IUL2_Pointer const & r);
     itkConnectedComponentImageFilterICVF22IUL2_Pointer & operator=(itkConnectedComponentImageFilterICVF22IUL2 * r);
     itkConnectedComponentImageFilterICVF22IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConnectedComponentImageFilterICVF22IUS2 : public itkImageToImageFilterICVF22IUS2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputImageDimension = 2 };
     enum  {  SameDimension = 1 };
     enum  {  OutputImagePixelTypeIsInteger = 1 };
     virtual char const * GetNameOfClass() const;
     static itkConnectedComponentImageFilterICVF22IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual unsigned long const & GetObjectCount() const;
     void SetMaskImage(itkImageCVF22 * mask);
     itkImageCVF22 const * GetMaskImage() const;
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundValue() const;
   private:
     void InitUnion(unsigned long const size);
     void InsertSet(unsigned long const label);
     unsigned long LookupSet(unsigned long const label);
     void LinkLabels(unsigned long const lab1, unsigned long const lab2);
     unsigned long CreateConsecutive();
     bool CheckNeighbors(itkIndex2 const & A, itkIndex2 const & B);
     void CompareLines(std::vector< itkConnectedComponentImageFilterICVF22IUS2::runLength > & current, std::vector< itkConnectedComponentImageFilterICVF22IUS2::runLength > const & Neighbour);
     void FillOutput(std::vector< std::vector< itkConnectedComponentImageFilterICVF22IUS2::runLength > > const & LineMap, itkProgressReporter & progress);
     void SetupLineOffsets(std::vector< long > & LineOffsets);
     void Wait();
   protected:
     itkConnectedComponentImageFilterICVF22IUS2();
     ~itkConnectedComponentImageFilterICVF22IUS2();
     itkConnectedComponentImageFilterICVF22IUS2(itkConnectedComponentImageFilterICVF22IUS2 const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkConnectedComponentImageFilterICVF22IUS2_Pointer {
   public:
     itkConnectedComponentImageFilterICVF22IUS2_Pointer();
     itkConnectedComponentImageFilterICVF22IUS2_Pointer(itkConnectedComponentImageFilterICVF22IUS2_Pointer const & p);
     itkConnectedComponentImageFilterICVF22IUS2_Pointer(itkConnectedComponentImageFilterICVF22IUS2 * p);
     ~itkConnectedComponentImageFilterICVF22IUS2_Pointer();
     itkConnectedComponentImageFilterICVF22IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConnectedComponentImageFilterICVF22IUS2 * GetPointer() const;
     bool operator<(itkConnectedComponentImageFilterICVF22IUS2_Pointer const & r) const;
     bool operator>(itkConnectedComponentImageFilterICVF22IUS2_Pointer const & r) const;
     bool operator<=(itkConnectedComponentImageFilterICVF22IUS2_Pointer const & r) const;
     bool operator>=(itkConnectedComponentImageFilterICVF22IUS2_Pointer const & r) const;
     itkConnectedComponentImageFilterICVF22IUS2_Pointer & operator=(itkConnectedComponentImageFilterICVF22IUS2_Pointer const & r);
     itkConnectedComponentImageFilterICVF22IUS2_Pointer & operator=(itkConnectedComponentImageFilterICVF22IUS2 * r);
     itkConnectedComponentImageFilterICVF22IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConnectedComponentImageFilterICVF33IUC3 : public itkImageToImageFilterICVF33IUC3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputImageDimension = 3 };
     enum  {  SameDimension = 1 };
     enum  {  OutputImagePixelTypeIsInteger = 1 };
     virtual char const * GetNameOfClass() const;
     static itkConnectedComponentImageFilterICVF33IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual unsigned long const & GetObjectCount() const;
     void SetMaskImage(itkImageCVF33 * mask);
     itkImageCVF33 const * GetMaskImage() const;
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundValue() const;
   private:
     void InitUnion(unsigned long const size);
     void InsertSet(unsigned long const label);
     unsigned long LookupSet(unsigned long const label);
     void LinkLabels(unsigned long const lab1, unsigned long const lab2);
     unsigned long CreateConsecutive();
     bool CheckNeighbors(itkIndex3 const & A, itkIndex3 const & B);
     void CompareLines(std::vector< itkConnectedComponentImageFilterICVF33IUC3::runLength > & current, std::vector< itkConnectedComponentImageFilterICVF33IUC3::runLength > const & Neighbour);
     void FillOutput(std::vector< std::vector< itkConnectedComponentImageFilterICVF33IUC3::runLength > > const & LineMap, itkProgressReporter & progress);
     void SetupLineOffsets(std::vector< long > & LineOffsets);
     void Wait();
   protected:
     itkConnectedComponentImageFilterICVF33IUC3();
     ~itkConnectedComponentImageFilterICVF33IUC3();
     itkConnectedComponentImageFilterICVF33IUC3(itkConnectedComponentImageFilterICVF33IUC3 const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkConnectedComponentImageFilterICVF33IUC3_Pointer {
   public:
     itkConnectedComponentImageFilterICVF33IUC3_Pointer();
     itkConnectedComponentImageFilterICVF33IUC3_Pointer(itkConnectedComponentImageFilterICVF33IUC3_Pointer const & p);
     itkConnectedComponentImageFilterICVF33IUC3_Pointer(itkConnectedComponentImageFilterICVF33IUC3 * p);
     ~itkConnectedComponentImageFilterICVF33IUC3_Pointer();
     itkConnectedComponentImageFilterICVF33IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConnectedComponentImageFilterICVF33IUC3 * GetPointer() const;
     bool operator<(itkConnectedComponentImageFilterICVF33IUC3_Pointer const & r) const;
     bool operator>(itkConnectedComponentImageFilterICVF33IUC3_Pointer const & r) const;
     bool operator<=(itkConnectedComponentImageFilterICVF33IUC3_Pointer const & r) const;
     bool operator>=(itkConnectedComponentImageFilterICVF33IUC3_Pointer const & r) const;
     itkConnectedComponentImageFilterICVF33IUC3_Pointer & operator=(itkConnectedComponentImageFilterICVF33IUC3_Pointer const & r);
     itkConnectedComponentImageFilterICVF33IUC3_Pointer & operator=(itkConnectedComponentImageFilterICVF33IUC3 * r);
     itkConnectedComponentImageFilterICVF33IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConnectedComponentImageFilterICVF33IUL3 : public itkImageToImageFilterICVF33IUL3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputImageDimension = 3 };
     enum  {  SameDimension = 1 };
     enum  {  OutputImagePixelTypeIsInteger = 1 };
     virtual char const * GetNameOfClass() const;
     static itkConnectedComponentImageFilterICVF33IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual unsigned long const & GetObjectCount() const;
     void SetMaskImage(itkImageCVF33 * mask);
     itkImageCVF33 const * GetMaskImage() const;
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundValue() const;
   private:
     void InitUnion(unsigned long const size);
     void InsertSet(unsigned long const label);
     unsigned long LookupSet(unsigned long const label);
     void LinkLabels(unsigned long const lab1, unsigned long const lab2);
     unsigned long CreateConsecutive();
     bool CheckNeighbors(itkIndex3 const & A, itkIndex3 const & B);
     void CompareLines(std::vector< itkConnectedComponentImageFilterICVF33IUL3::runLength > & current, std::vector< itkConnectedComponentImageFilterICVF33IUL3::runLength > const & Neighbour);
     void FillOutput(std::vector< std::vector< itkConnectedComponentImageFilterICVF33IUL3::runLength > > const & LineMap, itkProgressReporter & progress);
     void SetupLineOffsets(std::vector< long > & LineOffsets);
     void Wait();
   protected:
     itkConnectedComponentImageFilterICVF33IUL3();
     ~itkConnectedComponentImageFilterICVF33IUL3();
     itkConnectedComponentImageFilterICVF33IUL3(itkConnectedComponentImageFilterICVF33IUL3 const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkConnectedComponentImageFilterICVF33IUL3_Pointer {
   public:
     itkConnectedComponentImageFilterICVF33IUL3_Pointer();
     itkConnectedComponentImageFilterICVF33IUL3_Pointer(itkConnectedComponentImageFilterICVF33IUL3_Pointer const & p);
     itkConnectedComponentImageFilterICVF33IUL3_Pointer(itkConnectedComponentImageFilterICVF33IUL3 * p);
     ~itkConnectedComponentImageFilterICVF33IUL3_Pointer();
     itkConnectedComponentImageFilterICVF33IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConnectedComponentImageFilterICVF33IUL3 * GetPointer() const;
     bool operator<(itkConnectedComponentImageFilterICVF33IUL3_Pointer const & r) const;
     bool operator>(itkConnectedComponentImageFilterICVF33IUL3_Pointer const & r) const;
     bool operator<=(itkConnectedComponentImageFilterICVF33IUL3_Pointer const & r) const;
     bool operator>=(itkConnectedComponentImageFilterICVF33IUL3_Pointer const & r) const;
     itkConnectedComponentImageFilterICVF33IUL3_Pointer & operator=(itkConnectedComponentImageFilterICVF33IUL3_Pointer const & r);
     itkConnectedComponentImageFilterICVF33IUL3_Pointer & operator=(itkConnectedComponentImageFilterICVF33IUL3 * r);
     itkConnectedComponentImageFilterICVF33IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConnectedComponentImageFilterICVF33IUS3 : public itkImageToImageFilterICVF33IUS3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputImageDimension = 3 };
     enum  {  SameDimension = 1 };
     enum  {  OutputImagePixelTypeIsInteger = 1 };
     virtual char const * GetNameOfClass() const;
     static itkConnectedComponentImageFilterICVF33IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual unsigned long const & GetObjectCount() const;
     void SetMaskImage(itkImageCVF33 * mask);
     itkImageCVF33 const * GetMaskImage() const;
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundValue() const;
   private:
     void InitUnion(unsigned long const size);
     void InsertSet(unsigned long const label);
     unsigned long LookupSet(unsigned long const label);
     void LinkLabels(unsigned long const lab1, unsigned long const lab2);
     unsigned long CreateConsecutive();
     bool CheckNeighbors(itkIndex3 const & A, itkIndex3 const & B);
     void CompareLines(std::vector< itkConnectedComponentImageFilterICVF33IUS3::runLength > & current, std::vector< itkConnectedComponentImageFilterICVF33IUS3::runLength > const & Neighbour);
     void FillOutput(std::vector< std::vector< itkConnectedComponentImageFilterICVF33IUS3::runLength > > const & LineMap, itkProgressReporter & progress);
     void SetupLineOffsets(std::vector< long > & LineOffsets);
     void Wait();
   protected:
     itkConnectedComponentImageFilterICVF33IUS3();
     ~itkConnectedComponentImageFilterICVF33IUS3();
     itkConnectedComponentImageFilterICVF33IUS3(itkConnectedComponentImageFilterICVF33IUS3 const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkConnectedComponentImageFilterICVF33IUS3_Pointer {
   public:
     itkConnectedComponentImageFilterICVF33IUS3_Pointer();
     itkConnectedComponentImageFilterICVF33IUS3_Pointer(itkConnectedComponentImageFilterICVF33IUS3_Pointer const & p);
     itkConnectedComponentImageFilterICVF33IUS3_Pointer(itkConnectedComponentImageFilterICVF33IUS3 * p);
     ~itkConnectedComponentImageFilterICVF33IUS3_Pointer();
     itkConnectedComponentImageFilterICVF33IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConnectedComponentImageFilterICVF33IUS3 * GetPointer() const;
     bool operator<(itkConnectedComponentImageFilterICVF33IUS3_Pointer const & r) const;
     bool operator>(itkConnectedComponentImageFilterICVF33IUS3_Pointer const & r) const;
     bool operator<=(itkConnectedComponentImageFilterICVF33IUS3_Pointer const & r) const;
     bool operator>=(itkConnectedComponentImageFilterICVF33IUS3_Pointer const & r) const;
     itkConnectedComponentImageFilterICVF33IUS3_Pointer & operator=(itkConnectedComponentImageFilterICVF33IUS3_Pointer const & r);
     itkConnectedComponentImageFilterICVF33IUS3_Pointer & operator=(itkConnectedComponentImageFilterICVF33IUS3 * r);
     itkConnectedComponentImageFilterICVF33IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConnectedComponentImageFilterIUC2IUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputImageDimension = 2 };
     enum  {  SameDimension = 1 };
     enum  {  OutputImagePixelTypeIsInteger = 1 };
     virtual char const * GetNameOfClass() const;
     static itkConnectedComponentImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual unsigned long const & GetObjectCount() const;
     void SetMaskImage(itkImageUC2 * mask);
     itkImageUC2 const * GetMaskImage() const;
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundValue() const;
   private:
     void InitUnion(unsigned long const size);
     void InsertSet(unsigned long const label);
     unsigned long LookupSet(unsigned long const label);
     void LinkLabels(unsigned long const lab1, unsigned long const lab2);
     unsigned long CreateConsecutive();
     bool CheckNeighbors(itkIndex2 const & A, itkIndex2 const & B);
     void CompareLines(std::vector< itkConnectedComponentImageFilterIUC2IUC2::runLength > & current, std::vector< itkConnectedComponentImageFilterIUC2IUC2::runLength > const & Neighbour);
     void FillOutput(std::vector< std::vector< itkConnectedComponentImageFilterIUC2IUC2::runLength > > const & LineMap, itkProgressReporter & progress);
     void SetupLineOffsets(std::vector< long > & LineOffsets);
     void Wait();
   protected:
     itkConnectedComponentImageFilterIUC2IUC2();
     ~itkConnectedComponentImageFilterIUC2IUC2();
     itkConnectedComponentImageFilterIUC2IUC2(itkConnectedComponentImageFilterIUC2IUC2 const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkConnectedComponentImageFilterIUC2IUC2_Pointer {
   public:
     itkConnectedComponentImageFilterIUC2IUC2_Pointer();
     itkConnectedComponentImageFilterIUC2IUC2_Pointer(itkConnectedComponentImageFilterIUC2IUC2_Pointer const & p);
     itkConnectedComponentImageFilterIUC2IUC2_Pointer(itkConnectedComponentImageFilterIUC2IUC2 * p);
     ~itkConnectedComponentImageFilterIUC2IUC2_Pointer();
     itkConnectedComponentImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConnectedComponentImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkConnectedComponentImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkConnectedComponentImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkConnectedComponentImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkConnectedComponentImageFilterIUC2IUC2_Pointer const & r) const;
     itkConnectedComponentImageFilterIUC2IUC2_Pointer & operator=(itkConnectedComponentImageFilterIUC2IUC2_Pointer const & r);
     itkConnectedComponentImageFilterIUC2IUC2_Pointer & operator=(itkConnectedComponentImageFilterIUC2IUC2 * r);
     itkConnectedComponentImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConnectedComponentImageFilterIUC2IUL2 : public itkImageToImageFilterIUC2IUL2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputImageDimension = 2 };
     enum  {  SameDimension = 1 };
     enum  {  OutputImagePixelTypeIsInteger = 1 };
     virtual char const * GetNameOfClass() const;
     static itkConnectedComponentImageFilterIUC2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual unsigned long const & GetObjectCount() const;
     void SetMaskImage(itkImageUC2 * mask);
     itkImageUC2 const * GetMaskImage() const;
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundValue() const;
   private:
     void InitUnion(unsigned long const size);
     void InsertSet(unsigned long const label);
     unsigned long LookupSet(unsigned long const label);
     void LinkLabels(unsigned long const lab1, unsigned long const lab2);
     unsigned long CreateConsecutive();
     bool CheckNeighbors(itkIndex2 const & A, itkIndex2 const & B);
     void CompareLines(std::vector< itkConnectedComponentImageFilterIUC2IUL2::runLength > & current, std::vector< itkConnectedComponentImageFilterIUC2IUL2::runLength > const & Neighbour);
     void FillOutput(std::vector< std::vector< itkConnectedComponentImageFilterIUC2IUL2::runLength > > const & LineMap, itkProgressReporter & progress);
     void SetupLineOffsets(std::vector< long > & LineOffsets);
     void Wait();
   protected:
     itkConnectedComponentImageFilterIUC2IUL2();
     ~itkConnectedComponentImageFilterIUC2IUL2();
     itkConnectedComponentImageFilterIUC2IUL2(itkConnectedComponentImageFilterIUC2IUL2 const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkConnectedComponentImageFilterIUC2IUL2_Pointer {
   public:
     itkConnectedComponentImageFilterIUC2IUL2_Pointer();
     itkConnectedComponentImageFilterIUC2IUL2_Pointer(itkConnectedComponentImageFilterIUC2IUL2_Pointer const & p);
     itkConnectedComponentImageFilterIUC2IUL2_Pointer(itkConnectedComponentImageFilterIUC2IUL2 * p);
     ~itkConnectedComponentImageFilterIUC2IUL2_Pointer();
     itkConnectedComponentImageFilterIUC2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConnectedComponentImageFilterIUC2IUL2 * GetPointer() const;
     bool operator<(itkConnectedComponentImageFilterIUC2IUL2_Pointer const & r) const;
     bool operator>(itkConnectedComponentImageFilterIUC2IUL2_Pointer const & r) const;
     bool operator<=(itkConnectedComponentImageFilterIUC2IUL2_Pointer const & r) const;
     bool operator>=(itkConnectedComponentImageFilterIUC2IUL2_Pointer const & r) const;
     itkConnectedComponentImageFilterIUC2IUL2_Pointer & operator=(itkConnectedComponentImageFilterIUC2IUL2_Pointer const & r);
     itkConnectedComponentImageFilterIUC2IUL2_Pointer & operator=(itkConnectedComponentImageFilterIUC2IUL2 * r);
     itkConnectedComponentImageFilterIUC2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConnectedComponentImageFilterIUC2IUS2 : public itkImageToImageFilterIUC2IUS2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputImageDimension = 2 };
     enum  {  SameDimension = 1 };
     enum  {  OutputImagePixelTypeIsInteger = 1 };
     virtual char const * GetNameOfClass() const;
     static itkConnectedComponentImageFilterIUC2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual unsigned long const & GetObjectCount() const;
     void SetMaskImage(itkImageUC2 * mask);
     itkImageUC2 const * GetMaskImage() const;
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundValue() const;
   private:
     void InitUnion(unsigned long const size);
     void InsertSet(unsigned long const label);
     unsigned long LookupSet(unsigned long const label);
     void LinkLabels(unsigned long const lab1, unsigned long const lab2);
     unsigned long CreateConsecutive();
     bool CheckNeighbors(itkIndex2 const & A, itkIndex2 const & B);
     void CompareLines(std::vector< itkConnectedComponentImageFilterIUC2IUS2::runLength > & current, std::vector< itkConnectedComponentImageFilterIUC2IUS2::runLength > const & Neighbour);
     void FillOutput(std::vector< std::vector< itkConnectedComponentImageFilterIUC2IUS2::runLength > > const & LineMap, itkProgressReporter & progress);
     void SetupLineOffsets(std::vector< long > & LineOffsets);
     void Wait();
   protected:
     itkConnectedComponentImageFilterIUC2IUS2();
     ~itkConnectedComponentImageFilterIUC2IUS2();
     itkConnectedComponentImageFilterIUC2IUS2(itkConnectedComponentImageFilterIUC2IUS2 const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkConnectedComponentImageFilterIUC2IUS2_Pointer {
   public:
     itkConnectedComponentImageFilterIUC2IUS2_Pointer();
     itkConnectedComponentImageFilterIUC2IUS2_Pointer(itkConnectedComponentImageFilterIUC2IUS2_Pointer const & p);
     itkConnectedComponentImageFilterIUC2IUS2_Pointer(itkConnectedComponentImageFilterIUC2IUS2 * p);
     ~itkConnectedComponentImageFilterIUC2IUS2_Pointer();
     itkConnectedComponentImageFilterIUC2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConnectedComponentImageFilterIUC2IUS2 * GetPointer() const;
     bool operator<(itkConnectedComponentImageFilterIUC2IUS2_Pointer const & r) const;
     bool operator>(itkConnectedComponentImageFilterIUC2IUS2_Pointer const & r) const;
     bool operator<=(itkConnectedComponentImageFilterIUC2IUS2_Pointer const & r) const;
     bool operator>=(itkConnectedComponentImageFilterIUC2IUS2_Pointer const & r) const;
     itkConnectedComponentImageFilterIUC2IUS2_Pointer & operator=(itkConnectedComponentImageFilterIUC2IUS2_Pointer const & r);
     itkConnectedComponentImageFilterIUC2IUS2_Pointer & operator=(itkConnectedComponentImageFilterIUC2IUS2 * r);
     itkConnectedComponentImageFilterIUC2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConnectedComponentImageFilterIUC3IUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputImageDimension = 3 };
     enum  {  SameDimension = 1 };
     enum  {  OutputImagePixelTypeIsInteger = 1 };
     virtual char const * GetNameOfClass() const;
     static itkConnectedComponentImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual unsigned long const & GetObjectCount() const;
     void SetMaskImage(itkImageUC3 * mask);
     itkImageUC3 const * GetMaskImage() const;
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundValue() const;
   private:
     void InitUnion(unsigned long const size);
     void InsertSet(unsigned long const label);
     unsigned long LookupSet(unsigned long const label);
     void LinkLabels(unsigned long const lab1, unsigned long const lab2);
     unsigned long CreateConsecutive();
     bool CheckNeighbors(itkIndex3 const & A, itkIndex3 const & B);
     void CompareLines(std::vector< itkConnectedComponentImageFilterIUC3IUC3::runLength > & current, std::vector< itkConnectedComponentImageFilterIUC3IUC3::runLength > const & Neighbour);
     void FillOutput(std::vector< std::vector< itkConnectedComponentImageFilterIUC3IUC3::runLength > > const & LineMap, itkProgressReporter & progress);
     void SetupLineOffsets(std::vector< long > & LineOffsets);
     void Wait();
   protected:
     itkConnectedComponentImageFilterIUC3IUC3();
     ~itkConnectedComponentImageFilterIUC3IUC3();
     itkConnectedComponentImageFilterIUC3IUC3(itkConnectedComponentImageFilterIUC3IUC3 const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkConnectedComponentImageFilterIUC3IUC3_Pointer {
   public:
     itkConnectedComponentImageFilterIUC3IUC3_Pointer();
     itkConnectedComponentImageFilterIUC3IUC3_Pointer(itkConnectedComponentImageFilterIUC3IUC3_Pointer const & p);
     itkConnectedComponentImageFilterIUC3IUC3_Pointer(itkConnectedComponentImageFilterIUC3IUC3 * p);
     ~itkConnectedComponentImageFilterIUC3IUC3_Pointer();
     itkConnectedComponentImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConnectedComponentImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkConnectedComponentImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkConnectedComponentImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkConnectedComponentImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkConnectedComponentImageFilterIUC3IUC3_Pointer const & r) const;
     itkConnectedComponentImageFilterIUC3IUC3_Pointer & operator=(itkConnectedComponentImageFilterIUC3IUC3_Pointer const & r);
     itkConnectedComponentImageFilterIUC3IUC3_Pointer & operator=(itkConnectedComponentImageFilterIUC3IUC3 * r);
     itkConnectedComponentImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConnectedComponentImageFilterIUC3IUL3 : public itkImageToImageFilterIUC3IUL3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputImageDimension = 3 };
     enum  {  SameDimension = 1 };
     enum  {  OutputImagePixelTypeIsInteger = 1 };
     virtual char const * GetNameOfClass() const;
     static itkConnectedComponentImageFilterIUC3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual unsigned long const & GetObjectCount() const;
     void SetMaskImage(itkImageUC3 * mask);
     itkImageUC3 const * GetMaskImage() const;
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundValue() const;
   private:
     void InitUnion(unsigned long const size);
     void InsertSet(unsigned long const label);
     unsigned long LookupSet(unsigned long const label);
     void LinkLabels(unsigned long const lab1, unsigned long const lab2);
     unsigned long CreateConsecutive();
     bool CheckNeighbors(itkIndex3 const & A, itkIndex3 const & B);
     void CompareLines(std::vector< itkConnectedComponentImageFilterIUC3IUL3::runLength > & current, std::vector< itkConnectedComponentImageFilterIUC3IUL3::runLength > const & Neighbour);
     void FillOutput(std::vector< std::vector< itkConnectedComponentImageFilterIUC3IUL3::runLength > > const & LineMap, itkProgressReporter & progress);
     void SetupLineOffsets(std::vector< long > & LineOffsets);
     void Wait();
   protected:
     itkConnectedComponentImageFilterIUC3IUL3();
     ~itkConnectedComponentImageFilterIUC3IUL3();
     itkConnectedComponentImageFilterIUC3IUL3(itkConnectedComponentImageFilterIUC3IUL3 const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkConnectedComponentImageFilterIUC3IUL3_Pointer {
   public:
     itkConnectedComponentImageFilterIUC3IUL3_Pointer();
     itkConnectedComponentImageFilterIUC3IUL3_Pointer(itkConnectedComponentImageFilterIUC3IUL3_Pointer const & p);
     itkConnectedComponentImageFilterIUC3IUL3_Pointer(itkConnectedComponentImageFilterIUC3IUL3 * p);
     ~itkConnectedComponentImageFilterIUC3IUL3_Pointer();
     itkConnectedComponentImageFilterIUC3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConnectedComponentImageFilterIUC3IUL3 * GetPointer() const;
     bool operator<(itkConnectedComponentImageFilterIUC3IUL3_Pointer const & r) const;
     bool operator>(itkConnectedComponentImageFilterIUC3IUL3_Pointer const & r) const;
     bool operator<=(itkConnectedComponentImageFilterIUC3IUL3_Pointer const & r) const;
     bool operator>=(itkConnectedComponentImageFilterIUC3IUL3_Pointer const & r) const;
     itkConnectedComponentImageFilterIUC3IUL3_Pointer & operator=(itkConnectedComponentImageFilterIUC3IUL3_Pointer const & r);
     itkConnectedComponentImageFilterIUC3IUL3_Pointer & operator=(itkConnectedComponentImageFilterIUC3IUL3 * r);
     itkConnectedComponentImageFilterIUC3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConnectedComponentImageFilterIUC3IUS3 : public itkImageToImageFilterIUC3IUS3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputImageDimension = 3 };
     enum  {  SameDimension = 1 };
     enum  {  OutputImagePixelTypeIsInteger = 1 };
     virtual char const * GetNameOfClass() const;
     static itkConnectedComponentImageFilterIUC3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual unsigned long const & GetObjectCount() const;
     void SetMaskImage(itkImageUC3 * mask);
     itkImageUC3 const * GetMaskImage() const;
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundValue() const;
   private:
     void InitUnion(unsigned long const size);
     void InsertSet(unsigned long const label);
     unsigned long LookupSet(unsigned long const label);
     void LinkLabels(unsigned long const lab1, unsigned long const lab2);
     unsigned long CreateConsecutive();
     bool CheckNeighbors(itkIndex3 const & A, itkIndex3 const & B);
     void CompareLines(std::vector< itkConnectedComponentImageFilterIUC3IUS3::runLength > & current, std::vector< itkConnectedComponentImageFilterIUC3IUS3::runLength > const & Neighbour);
     void FillOutput(std::vector< std::vector< itkConnectedComponentImageFilterIUC3IUS3::runLength > > const & LineMap, itkProgressReporter & progress);
     void SetupLineOffsets(std::vector< long > & LineOffsets);
     void Wait();
   protected:
     itkConnectedComponentImageFilterIUC3IUS3();
     ~itkConnectedComponentImageFilterIUC3IUS3();
     itkConnectedComponentImageFilterIUC3IUS3(itkConnectedComponentImageFilterIUC3IUS3 const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkConnectedComponentImageFilterIUC3IUS3_Pointer {
   public:
     itkConnectedComponentImageFilterIUC3IUS3_Pointer();
     itkConnectedComponentImageFilterIUC3IUS3_Pointer(itkConnectedComponentImageFilterIUC3IUS3_Pointer const & p);
     itkConnectedComponentImageFilterIUC3IUS3_Pointer(itkConnectedComponentImageFilterIUC3IUS3 * p);
     ~itkConnectedComponentImageFilterIUC3IUS3_Pointer();
     itkConnectedComponentImageFilterIUC3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConnectedComponentImageFilterIUC3IUS3 * GetPointer() const;
     bool operator<(itkConnectedComponentImageFilterIUC3IUS3_Pointer const & r) const;
     bool operator>(itkConnectedComponentImageFilterIUC3IUS3_Pointer const & r) const;
     bool operator<=(itkConnectedComponentImageFilterIUC3IUS3_Pointer const & r) const;
     bool operator>=(itkConnectedComponentImageFilterIUC3IUS3_Pointer const & r) const;
     itkConnectedComponentImageFilterIUC3IUS3_Pointer & operator=(itkConnectedComponentImageFilterIUC3IUS3_Pointer const & r);
     itkConnectedComponentImageFilterIUC3IUS3_Pointer & operator=(itkConnectedComponentImageFilterIUC3IUS3 * r);
     itkConnectedComponentImageFilterIUC3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConnectedComponentImageFilterIUL2IUC2 : public itkImageToImageFilterIUL2IUC2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputImageDimension = 2 };
     enum  {  SameDimension = 1 };
     enum  {  OutputImagePixelTypeIsInteger = 1 };
     virtual char const * GetNameOfClass() const;
     static itkConnectedComponentImageFilterIUL2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual unsigned long const & GetObjectCount() const;
     void SetMaskImage(itkImageUL2 * mask);
     itkImageUL2 const * GetMaskImage() const;
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundValue() const;
   private:
     void InitUnion(unsigned long const size);
     void InsertSet(unsigned long const label);
     unsigned long LookupSet(unsigned long const label);
     void LinkLabels(unsigned long const lab1, unsigned long const lab2);
     unsigned long CreateConsecutive();
     bool CheckNeighbors(itkIndex2 const & A, itkIndex2 const & B);
     void CompareLines(std::vector< itkConnectedComponentImageFilterIUL2IUC2::runLength > & current, std::vector< itkConnectedComponentImageFilterIUL2IUC2::runLength > const & Neighbour);
     void FillOutput(std::vector< std::vector< itkConnectedComponentImageFilterIUL2IUC2::runLength > > const & LineMap, itkProgressReporter & progress);
     void SetupLineOffsets(std::vector< long > & LineOffsets);
     void Wait();
   protected:
     itkConnectedComponentImageFilterIUL2IUC2();
     ~itkConnectedComponentImageFilterIUL2IUC2();
     itkConnectedComponentImageFilterIUL2IUC2(itkConnectedComponentImageFilterIUL2IUC2 const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkConnectedComponentImageFilterIUL2IUC2_Pointer {
   public:
     itkConnectedComponentImageFilterIUL2IUC2_Pointer();
     itkConnectedComponentImageFilterIUL2IUC2_Pointer(itkConnectedComponentImageFilterIUL2IUC2_Pointer const & p);
     itkConnectedComponentImageFilterIUL2IUC2_Pointer(itkConnectedComponentImageFilterIUL2IUC2 * p);
     ~itkConnectedComponentImageFilterIUL2IUC2_Pointer();
     itkConnectedComponentImageFilterIUL2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConnectedComponentImageFilterIUL2IUC2 * GetPointer() const;
     bool operator<(itkConnectedComponentImageFilterIUL2IUC2_Pointer const & r) const;
     bool operator>(itkConnectedComponentImageFilterIUL2IUC2_Pointer const & r) const;
     bool operator<=(itkConnectedComponentImageFilterIUL2IUC2_Pointer const & r) const;
     bool operator>=(itkConnectedComponentImageFilterIUL2IUC2_Pointer const & r) const;
     itkConnectedComponentImageFilterIUL2IUC2_Pointer & operator=(itkConnectedComponentImageFilterIUL2IUC2_Pointer const & r);
     itkConnectedComponentImageFilterIUL2IUC2_Pointer & operator=(itkConnectedComponentImageFilterIUL2IUC2 * r);
     itkConnectedComponentImageFilterIUL2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConnectedComponentImageFilterIUL2IUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputImageDimension = 2 };
     enum  {  SameDimension = 1 };
     enum  {  OutputImagePixelTypeIsInteger = 1 };
     virtual char const * GetNameOfClass() const;
     static itkConnectedComponentImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual unsigned long const & GetObjectCount() const;
     void SetMaskImage(itkImageUL2 * mask);
     itkImageUL2 const * GetMaskImage() const;
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundValue() const;
   private:
     void InitUnion(unsigned long const size);
     void InsertSet(unsigned long const label);
     unsigned long LookupSet(unsigned long const label);
     void LinkLabels(unsigned long const lab1, unsigned long const lab2);
     unsigned long CreateConsecutive();
     bool CheckNeighbors(itkIndex2 const & A, itkIndex2 const & B);
     void CompareLines(std::vector< itkConnectedComponentImageFilterIUL2IUL2::runLength > & current, std::vector< itkConnectedComponentImageFilterIUL2IUL2::runLength > const & Neighbour);
     void FillOutput(std::vector< std::vector< itkConnectedComponentImageFilterIUL2IUL2::runLength > > const & LineMap, itkProgressReporter & progress);
     void SetupLineOffsets(std::vector< long > & LineOffsets);
     void Wait();
   protected:
     itkConnectedComponentImageFilterIUL2IUL2();
     ~itkConnectedComponentImageFilterIUL2IUL2();
     itkConnectedComponentImageFilterIUL2IUL2(itkConnectedComponentImageFilterIUL2IUL2 const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkConnectedComponentImageFilterIUL2IUL2_Pointer {
   public:
     itkConnectedComponentImageFilterIUL2IUL2_Pointer();
     itkConnectedComponentImageFilterIUL2IUL2_Pointer(itkConnectedComponentImageFilterIUL2IUL2_Pointer const & p);
     itkConnectedComponentImageFilterIUL2IUL2_Pointer(itkConnectedComponentImageFilterIUL2IUL2 * p);
     ~itkConnectedComponentImageFilterIUL2IUL2_Pointer();
     itkConnectedComponentImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConnectedComponentImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkConnectedComponentImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkConnectedComponentImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkConnectedComponentImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkConnectedComponentImageFilterIUL2IUL2_Pointer const & r) const;
     itkConnectedComponentImageFilterIUL2IUL2_Pointer & operator=(itkConnectedComponentImageFilterIUL2IUL2_Pointer const & r);
     itkConnectedComponentImageFilterIUL2IUL2_Pointer & operator=(itkConnectedComponentImageFilterIUL2IUL2 * r);
     itkConnectedComponentImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConnectedComponentImageFilterIUL2IUS2 : public itkImageToImageFilterIUL2IUS2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputImageDimension = 2 };
     enum  {  SameDimension = 1 };
     enum  {  OutputImagePixelTypeIsInteger = 1 };
     virtual char const * GetNameOfClass() const;
     static itkConnectedComponentImageFilterIUL2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual unsigned long const & GetObjectCount() const;
     void SetMaskImage(itkImageUL2 * mask);
     itkImageUL2 const * GetMaskImage() const;
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundValue() const;
   private:
     void InitUnion(unsigned long const size);
     void InsertSet(unsigned long const label);
     unsigned long LookupSet(unsigned long const label);
     void LinkLabels(unsigned long const lab1, unsigned long const lab2);
     unsigned long CreateConsecutive();
     bool CheckNeighbors(itkIndex2 const & A, itkIndex2 const & B);
     void CompareLines(std::vector< itkConnectedComponentImageFilterIUL2IUS2::runLength > & current, std::vector< itkConnectedComponentImageFilterIUL2IUS2::runLength > const & Neighbour);
     void FillOutput(std::vector< std::vector< itkConnectedComponentImageFilterIUL2IUS2::runLength > > const & LineMap, itkProgressReporter & progress);
     void SetupLineOffsets(std::vector< long > & LineOffsets);
     void Wait();
   protected:
     itkConnectedComponentImageFilterIUL2IUS2();
     ~itkConnectedComponentImageFilterIUL2IUS2();
     itkConnectedComponentImageFilterIUL2IUS2(itkConnectedComponentImageFilterIUL2IUS2 const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkConnectedComponentImageFilterIUL2IUS2_Pointer {
   public:
     itkConnectedComponentImageFilterIUL2IUS2_Pointer();
     itkConnectedComponentImageFilterIUL2IUS2_Pointer(itkConnectedComponentImageFilterIUL2IUS2_Pointer const & p);
     itkConnectedComponentImageFilterIUL2IUS2_Pointer(itkConnectedComponentImageFilterIUL2IUS2 * p);
     ~itkConnectedComponentImageFilterIUL2IUS2_Pointer();
     itkConnectedComponentImageFilterIUL2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConnectedComponentImageFilterIUL2IUS2 * GetPointer() const;
     bool operator<(itkConnectedComponentImageFilterIUL2IUS2_Pointer const & r) const;
     bool operator>(itkConnectedComponentImageFilterIUL2IUS2_Pointer const & r) const;
     bool operator<=(itkConnectedComponentImageFilterIUL2IUS2_Pointer const & r) const;
     bool operator>=(itkConnectedComponentImageFilterIUL2IUS2_Pointer const & r) const;
     itkConnectedComponentImageFilterIUL2IUS2_Pointer & operator=(itkConnectedComponentImageFilterIUL2IUS2_Pointer const & r);
     itkConnectedComponentImageFilterIUL2IUS2_Pointer & operator=(itkConnectedComponentImageFilterIUL2IUS2 * r);
     itkConnectedComponentImageFilterIUL2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConnectedComponentImageFilterIUL3IUC3 : public itkImageToImageFilterIUL3IUC3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputImageDimension = 3 };
     enum  {  SameDimension = 1 };
     enum  {  OutputImagePixelTypeIsInteger = 1 };
     virtual char const * GetNameOfClass() const;
     static itkConnectedComponentImageFilterIUL3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual unsigned long const & GetObjectCount() const;
     void SetMaskImage(itkImageUL3 * mask);
     itkImageUL3 const * GetMaskImage() const;
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundValue() const;
   private:
     void InitUnion(unsigned long const size);
     void InsertSet(unsigned long const label);
     unsigned long LookupSet(unsigned long const label);
     void LinkLabels(unsigned long const lab1, unsigned long const lab2);
     unsigned long CreateConsecutive();
     bool CheckNeighbors(itkIndex3 const & A, itkIndex3 const & B);
     void CompareLines(std::vector< itkConnectedComponentImageFilterIUL3IUC3::runLength > & current, std::vector< itkConnectedComponentImageFilterIUL3IUC3::runLength > const & Neighbour);
     void FillOutput(std::vector< std::vector< itkConnectedComponentImageFilterIUL3IUC3::runLength > > const & LineMap, itkProgressReporter & progress);
     void SetupLineOffsets(std::vector< long > & LineOffsets);
     void Wait();
   protected:
     itkConnectedComponentImageFilterIUL3IUC3();
     ~itkConnectedComponentImageFilterIUL3IUC3();
     itkConnectedComponentImageFilterIUL3IUC3(itkConnectedComponentImageFilterIUL3IUC3 const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkConnectedComponentImageFilterIUL3IUC3_Pointer {
   public:
     itkConnectedComponentImageFilterIUL3IUC3_Pointer();
     itkConnectedComponentImageFilterIUL3IUC3_Pointer(itkConnectedComponentImageFilterIUL3IUC3_Pointer const & p);
     itkConnectedComponentImageFilterIUL3IUC3_Pointer(itkConnectedComponentImageFilterIUL3IUC3 * p);
     ~itkConnectedComponentImageFilterIUL3IUC3_Pointer();
     itkConnectedComponentImageFilterIUL3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConnectedComponentImageFilterIUL3IUC3 * GetPointer() const;
     bool operator<(itkConnectedComponentImageFilterIUL3IUC3_Pointer const & r) const;
     bool operator>(itkConnectedComponentImageFilterIUL3IUC3_Pointer const & r) const;
     bool operator<=(itkConnectedComponentImageFilterIUL3IUC3_Pointer const & r) const;
     bool operator>=(itkConnectedComponentImageFilterIUL3IUC3_Pointer const & r) const;
     itkConnectedComponentImageFilterIUL3IUC3_Pointer & operator=(itkConnectedComponentImageFilterIUL3IUC3_Pointer const & r);
     itkConnectedComponentImageFilterIUL3IUC3_Pointer & operator=(itkConnectedComponentImageFilterIUL3IUC3 * r);
     itkConnectedComponentImageFilterIUL3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConnectedComponentImageFilterIUL3IUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputImageDimension = 3 };
     enum  {  SameDimension = 1 };
     enum  {  OutputImagePixelTypeIsInteger = 1 };
     virtual char const * GetNameOfClass() const;
     static itkConnectedComponentImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual unsigned long const & GetObjectCount() const;
     void SetMaskImage(itkImageUL3 * mask);
     itkImageUL3 const * GetMaskImage() const;
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundValue() const;
   private:
     void InitUnion(unsigned long const size);
     void InsertSet(unsigned long const label);
     unsigned long LookupSet(unsigned long const label);
     void LinkLabels(unsigned long const lab1, unsigned long const lab2);
     unsigned long CreateConsecutive();
     bool CheckNeighbors(itkIndex3 const & A, itkIndex3 const & B);
     void CompareLines(std::vector< itkConnectedComponentImageFilterIUL3IUL3::runLength > & current, std::vector< itkConnectedComponentImageFilterIUL3IUL3::runLength > const & Neighbour);
     void FillOutput(std::vector< std::vector< itkConnectedComponentImageFilterIUL3IUL3::runLength > > const & LineMap, itkProgressReporter & progress);
     void SetupLineOffsets(std::vector< long > & LineOffsets);
     void Wait();
   protected:
     itkConnectedComponentImageFilterIUL3IUL3();
     ~itkConnectedComponentImageFilterIUL3IUL3();
     itkConnectedComponentImageFilterIUL3IUL3(itkConnectedComponentImageFilterIUL3IUL3 const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkConnectedComponentImageFilterIUL3IUL3_Pointer {
   public:
     itkConnectedComponentImageFilterIUL3IUL3_Pointer();
     itkConnectedComponentImageFilterIUL3IUL3_Pointer(itkConnectedComponentImageFilterIUL3IUL3_Pointer const & p);
     itkConnectedComponentImageFilterIUL3IUL3_Pointer(itkConnectedComponentImageFilterIUL3IUL3 * p);
     ~itkConnectedComponentImageFilterIUL3IUL3_Pointer();
     itkConnectedComponentImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConnectedComponentImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkConnectedComponentImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkConnectedComponentImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkConnectedComponentImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkConnectedComponentImageFilterIUL3IUL3_Pointer const & r) const;
     itkConnectedComponentImageFilterIUL3IUL3_Pointer & operator=(itkConnectedComponentImageFilterIUL3IUL3_Pointer const & r);
     itkConnectedComponentImageFilterIUL3IUL3_Pointer & operator=(itkConnectedComponentImageFilterIUL3IUL3 * r);
     itkConnectedComponentImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConnectedComponentImageFilterIUL3IUS3 : public itkImageToImageFilterIUL3IUS3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputImageDimension = 3 };
     enum  {  SameDimension = 1 };
     enum  {  OutputImagePixelTypeIsInteger = 1 };
     virtual char const * GetNameOfClass() const;
     static itkConnectedComponentImageFilterIUL3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual unsigned long const & GetObjectCount() const;
     void SetMaskImage(itkImageUL3 * mask);
     itkImageUL3 const * GetMaskImage() const;
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundValue() const;
   private:
     void InitUnion(unsigned long const size);
     void InsertSet(unsigned long const label);
     unsigned long LookupSet(unsigned long const label);
     void LinkLabels(unsigned long const lab1, unsigned long const lab2);
     unsigned long CreateConsecutive();
     bool CheckNeighbors(itkIndex3 const & A, itkIndex3 const & B);
     void CompareLines(std::vector< itkConnectedComponentImageFilterIUL3IUS3::runLength > & current, std::vector< itkConnectedComponentImageFilterIUL3IUS3::runLength > const & Neighbour);
     void FillOutput(std::vector< std::vector< itkConnectedComponentImageFilterIUL3IUS3::runLength > > const & LineMap, itkProgressReporter & progress);
     void SetupLineOffsets(std::vector< long > & LineOffsets);
     void Wait();
   protected:
     itkConnectedComponentImageFilterIUL3IUS3();
     ~itkConnectedComponentImageFilterIUL3IUS3();
     itkConnectedComponentImageFilterIUL3IUS3(itkConnectedComponentImageFilterIUL3IUS3 const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkConnectedComponentImageFilterIUL3IUS3_Pointer {
   public:
     itkConnectedComponentImageFilterIUL3IUS3_Pointer();
     itkConnectedComponentImageFilterIUL3IUS3_Pointer(itkConnectedComponentImageFilterIUL3IUS3_Pointer const & p);
     itkConnectedComponentImageFilterIUL3IUS3_Pointer(itkConnectedComponentImageFilterIUL3IUS3 * p);
     ~itkConnectedComponentImageFilterIUL3IUS3_Pointer();
     itkConnectedComponentImageFilterIUL3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConnectedComponentImageFilterIUL3IUS3 * GetPointer() const;
     bool operator<(itkConnectedComponentImageFilterIUL3IUS3_Pointer const & r) const;
     bool operator>(itkConnectedComponentImageFilterIUL3IUS3_Pointer const & r) const;
     bool operator<=(itkConnectedComponentImageFilterIUL3IUS3_Pointer const & r) const;
     bool operator>=(itkConnectedComponentImageFilterIUL3IUS3_Pointer const & r) const;
     itkConnectedComponentImageFilterIUL3IUS3_Pointer & operator=(itkConnectedComponentImageFilterIUL3IUS3_Pointer const & r);
     itkConnectedComponentImageFilterIUL3IUS3_Pointer & operator=(itkConnectedComponentImageFilterIUL3IUS3 * r);
     itkConnectedComponentImageFilterIUL3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConnectedComponentImageFilterIUS2IUC2 : public itkImageToImageFilterIUS2IUC2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputImageDimension = 2 };
     enum  {  SameDimension = 1 };
     enum  {  OutputImagePixelTypeIsInteger = 1 };
     virtual char const * GetNameOfClass() const;
     static itkConnectedComponentImageFilterIUS2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual unsigned long const & GetObjectCount() const;
     void SetMaskImage(itkImageUS2 * mask);
     itkImageUS2 const * GetMaskImage() const;
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundValue() const;
   private:
     void InitUnion(unsigned long const size);
     void InsertSet(unsigned long const label);
     unsigned long LookupSet(unsigned long const label);
     void LinkLabels(unsigned long const lab1, unsigned long const lab2);
     unsigned long CreateConsecutive();
     bool CheckNeighbors(itkIndex2 const & A, itkIndex2 const & B);
     void CompareLines(std::vector< itkConnectedComponentImageFilterIUS2IUC2::runLength > & current, std::vector< itkConnectedComponentImageFilterIUS2IUC2::runLength > const & Neighbour);
     void FillOutput(std::vector< std::vector< itkConnectedComponentImageFilterIUS2IUC2::runLength > > const & LineMap, itkProgressReporter & progress);
     void SetupLineOffsets(std::vector< long > & LineOffsets);
     void Wait();
   protected:
     itkConnectedComponentImageFilterIUS2IUC2();
     ~itkConnectedComponentImageFilterIUS2IUC2();
     itkConnectedComponentImageFilterIUS2IUC2(itkConnectedComponentImageFilterIUS2IUC2 const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkConnectedComponentImageFilterIUS2IUC2_Pointer {
   public:
     itkConnectedComponentImageFilterIUS2IUC2_Pointer();
     itkConnectedComponentImageFilterIUS2IUC2_Pointer(itkConnectedComponentImageFilterIUS2IUC2_Pointer const & p);
     itkConnectedComponentImageFilterIUS2IUC2_Pointer(itkConnectedComponentImageFilterIUS2IUC2 * p);
     ~itkConnectedComponentImageFilterIUS2IUC2_Pointer();
     itkConnectedComponentImageFilterIUS2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConnectedComponentImageFilterIUS2IUC2 * GetPointer() const;
     bool operator<(itkConnectedComponentImageFilterIUS2IUC2_Pointer const & r) const;
     bool operator>(itkConnectedComponentImageFilterIUS2IUC2_Pointer const & r) const;
     bool operator<=(itkConnectedComponentImageFilterIUS2IUC2_Pointer const & r) const;
     bool operator>=(itkConnectedComponentImageFilterIUS2IUC2_Pointer const & r) const;
     itkConnectedComponentImageFilterIUS2IUC2_Pointer & operator=(itkConnectedComponentImageFilterIUS2IUC2_Pointer const & r);
     itkConnectedComponentImageFilterIUS2IUC2_Pointer & operator=(itkConnectedComponentImageFilterIUS2IUC2 * r);
     itkConnectedComponentImageFilterIUS2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConnectedComponentImageFilterIUS2IUL2 : public itkImageToImageFilterIUS2IUL2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputImageDimension = 2 };
     enum  {  SameDimension = 1 };
     enum  {  OutputImagePixelTypeIsInteger = 1 };
     virtual char const * GetNameOfClass() const;
     static itkConnectedComponentImageFilterIUS2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual unsigned long const & GetObjectCount() const;
     void SetMaskImage(itkImageUS2 * mask);
     itkImageUS2 const * GetMaskImage() const;
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundValue() const;
   private:
     void InitUnion(unsigned long const size);
     void InsertSet(unsigned long const label);
     unsigned long LookupSet(unsigned long const label);
     void LinkLabels(unsigned long const lab1, unsigned long const lab2);
     unsigned long CreateConsecutive();
     bool CheckNeighbors(itkIndex2 const & A, itkIndex2 const & B);
     void CompareLines(std::vector< itkConnectedComponentImageFilterIUS2IUL2::runLength > & current, std::vector< itkConnectedComponentImageFilterIUS2IUL2::runLength > const & Neighbour);
     void FillOutput(std::vector< std::vector< itkConnectedComponentImageFilterIUS2IUL2::runLength > > const & LineMap, itkProgressReporter & progress);
     void SetupLineOffsets(std::vector< long > & LineOffsets);
     void Wait();
   protected:
     itkConnectedComponentImageFilterIUS2IUL2();
     ~itkConnectedComponentImageFilterIUS2IUL2();
     itkConnectedComponentImageFilterIUS2IUL2(itkConnectedComponentImageFilterIUS2IUL2 const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkConnectedComponentImageFilterIUS2IUL2_Pointer {
   public:
     itkConnectedComponentImageFilterIUS2IUL2_Pointer();
     itkConnectedComponentImageFilterIUS2IUL2_Pointer(itkConnectedComponentImageFilterIUS2IUL2_Pointer const & p);
     itkConnectedComponentImageFilterIUS2IUL2_Pointer(itkConnectedComponentImageFilterIUS2IUL2 * p);
     ~itkConnectedComponentImageFilterIUS2IUL2_Pointer();
     itkConnectedComponentImageFilterIUS2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConnectedComponentImageFilterIUS2IUL2 * GetPointer() const;
     bool operator<(itkConnectedComponentImageFilterIUS2IUL2_Pointer const & r) const;
     bool operator>(itkConnectedComponentImageFilterIUS2IUL2_Pointer const & r) const;
     bool operator<=(itkConnectedComponentImageFilterIUS2IUL2_Pointer const & r) const;
     bool operator>=(itkConnectedComponentImageFilterIUS2IUL2_Pointer const & r) const;
     itkConnectedComponentImageFilterIUS2IUL2_Pointer & operator=(itkConnectedComponentImageFilterIUS2IUL2_Pointer const & r);
     itkConnectedComponentImageFilterIUS2IUL2_Pointer & operator=(itkConnectedComponentImageFilterIUS2IUL2 * r);
     itkConnectedComponentImageFilterIUS2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConnectedComponentImageFilterIUS2IUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputImageDimension = 2 };
     enum  {  SameDimension = 1 };
     enum  {  OutputImagePixelTypeIsInteger = 1 };
     virtual char const * GetNameOfClass() const;
     static itkConnectedComponentImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual unsigned long const & GetObjectCount() const;
     void SetMaskImage(itkImageUS2 * mask);
     itkImageUS2 const * GetMaskImage() const;
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundValue() const;
   private:
     void InitUnion(unsigned long const size);
     void InsertSet(unsigned long const label);
     unsigned long LookupSet(unsigned long const label);
     void LinkLabels(unsigned long const lab1, unsigned long const lab2);
     unsigned long CreateConsecutive();
     bool CheckNeighbors(itkIndex2 const & A, itkIndex2 const & B);
     void CompareLines(std::vector< itkConnectedComponentImageFilterIUS2IUS2::runLength > & current, std::vector< itkConnectedComponentImageFilterIUS2IUS2::runLength > const & Neighbour);
     void FillOutput(std::vector< std::vector< itkConnectedComponentImageFilterIUS2IUS2::runLength > > const & LineMap, itkProgressReporter & progress);
     void SetupLineOffsets(std::vector< long > & LineOffsets);
     void Wait();
   protected:
     itkConnectedComponentImageFilterIUS2IUS2();
     ~itkConnectedComponentImageFilterIUS2IUS2();
     itkConnectedComponentImageFilterIUS2IUS2(itkConnectedComponentImageFilterIUS2IUS2 const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkConnectedComponentImageFilterIUS2IUS2_Pointer {
   public:
     itkConnectedComponentImageFilterIUS2IUS2_Pointer();
     itkConnectedComponentImageFilterIUS2IUS2_Pointer(itkConnectedComponentImageFilterIUS2IUS2_Pointer const & p);
     itkConnectedComponentImageFilterIUS2IUS2_Pointer(itkConnectedComponentImageFilterIUS2IUS2 * p);
     ~itkConnectedComponentImageFilterIUS2IUS2_Pointer();
     itkConnectedComponentImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConnectedComponentImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkConnectedComponentImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkConnectedComponentImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkConnectedComponentImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkConnectedComponentImageFilterIUS2IUS2_Pointer const & r) const;
     itkConnectedComponentImageFilterIUS2IUS2_Pointer & operator=(itkConnectedComponentImageFilterIUS2IUS2_Pointer const & r);
     itkConnectedComponentImageFilterIUS2IUS2_Pointer & operator=(itkConnectedComponentImageFilterIUS2IUS2 * r);
     itkConnectedComponentImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConnectedComponentImageFilterIUS3IUC3 : public itkImageToImageFilterIUS3IUC3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputImageDimension = 3 };
     enum  {  SameDimension = 1 };
     enum  {  OutputImagePixelTypeIsInteger = 1 };
     virtual char const * GetNameOfClass() const;
     static itkConnectedComponentImageFilterIUS3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual unsigned long const & GetObjectCount() const;
     void SetMaskImage(itkImageUS3 * mask);
     itkImageUS3 const * GetMaskImage() const;
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundValue() const;
   private:
     void InitUnion(unsigned long const size);
     void InsertSet(unsigned long const label);
     unsigned long LookupSet(unsigned long const label);
     void LinkLabels(unsigned long const lab1, unsigned long const lab2);
     unsigned long CreateConsecutive();
     bool CheckNeighbors(itkIndex3 const & A, itkIndex3 const & B);
     void CompareLines(std::vector< itkConnectedComponentImageFilterIUS3IUC3::runLength > & current, std::vector< itkConnectedComponentImageFilterIUS3IUC3::runLength > const & Neighbour);
     void FillOutput(std::vector< std::vector< itkConnectedComponentImageFilterIUS3IUC3::runLength > > const & LineMap, itkProgressReporter & progress);
     void SetupLineOffsets(std::vector< long > & LineOffsets);
     void Wait();
   protected:
     itkConnectedComponentImageFilterIUS3IUC3();
     ~itkConnectedComponentImageFilterIUS3IUC3();
     itkConnectedComponentImageFilterIUS3IUC3(itkConnectedComponentImageFilterIUS3IUC3 const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkConnectedComponentImageFilterIUS3IUC3_Pointer {
   public:
     itkConnectedComponentImageFilterIUS3IUC3_Pointer();
     itkConnectedComponentImageFilterIUS3IUC3_Pointer(itkConnectedComponentImageFilterIUS3IUC3_Pointer const & p);
     itkConnectedComponentImageFilterIUS3IUC3_Pointer(itkConnectedComponentImageFilterIUS3IUC3 * p);
     ~itkConnectedComponentImageFilterIUS3IUC3_Pointer();
     itkConnectedComponentImageFilterIUS3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConnectedComponentImageFilterIUS3IUC3 * GetPointer() const;
     bool operator<(itkConnectedComponentImageFilterIUS3IUC3_Pointer const & r) const;
     bool operator>(itkConnectedComponentImageFilterIUS3IUC3_Pointer const & r) const;
     bool operator<=(itkConnectedComponentImageFilterIUS3IUC3_Pointer const & r) const;
     bool operator>=(itkConnectedComponentImageFilterIUS3IUC3_Pointer const & r) const;
     itkConnectedComponentImageFilterIUS3IUC3_Pointer & operator=(itkConnectedComponentImageFilterIUS3IUC3_Pointer const & r);
     itkConnectedComponentImageFilterIUS3IUC3_Pointer & operator=(itkConnectedComponentImageFilterIUS3IUC3 * r);
     itkConnectedComponentImageFilterIUS3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConnectedComponentImageFilterIUS3IUL3 : public itkImageToImageFilterIUS3IUL3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputImageDimension = 3 };
     enum  {  SameDimension = 1 };
     enum  {  OutputImagePixelTypeIsInteger = 1 };
     virtual char const * GetNameOfClass() const;
     static itkConnectedComponentImageFilterIUS3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual unsigned long const & GetObjectCount() const;
     void SetMaskImage(itkImageUS3 * mask);
     itkImageUS3 const * GetMaskImage() const;
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundValue() const;
   private:
     void InitUnion(unsigned long const size);
     void InsertSet(unsigned long const label);
     unsigned long LookupSet(unsigned long const label);
     void LinkLabels(unsigned long const lab1, unsigned long const lab2);
     unsigned long CreateConsecutive();
     bool CheckNeighbors(itkIndex3 const & A, itkIndex3 const & B);
     void CompareLines(std::vector< itkConnectedComponentImageFilterIUS3IUL3::runLength > & current, std::vector< itkConnectedComponentImageFilterIUS3IUL3::runLength > const & Neighbour);
     void FillOutput(std::vector< std::vector< itkConnectedComponentImageFilterIUS3IUL3::runLength > > const & LineMap, itkProgressReporter & progress);
     void SetupLineOffsets(std::vector< long > & LineOffsets);
     void Wait();
   protected:
     itkConnectedComponentImageFilterIUS3IUL3();
     ~itkConnectedComponentImageFilterIUS3IUL3();
     itkConnectedComponentImageFilterIUS3IUL3(itkConnectedComponentImageFilterIUS3IUL3 const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkConnectedComponentImageFilterIUS3IUL3_Pointer {
   public:
     itkConnectedComponentImageFilterIUS3IUL3_Pointer();
     itkConnectedComponentImageFilterIUS3IUL3_Pointer(itkConnectedComponentImageFilterIUS3IUL3_Pointer const & p);
     itkConnectedComponentImageFilterIUS3IUL3_Pointer(itkConnectedComponentImageFilterIUS3IUL3 * p);
     ~itkConnectedComponentImageFilterIUS3IUL3_Pointer();
     itkConnectedComponentImageFilterIUS3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConnectedComponentImageFilterIUS3IUL3 * GetPointer() const;
     bool operator<(itkConnectedComponentImageFilterIUS3IUL3_Pointer const & r) const;
     bool operator>(itkConnectedComponentImageFilterIUS3IUL3_Pointer const & r) const;
     bool operator<=(itkConnectedComponentImageFilterIUS3IUL3_Pointer const & r) const;
     bool operator>=(itkConnectedComponentImageFilterIUS3IUL3_Pointer const & r) const;
     itkConnectedComponentImageFilterIUS3IUL3_Pointer & operator=(itkConnectedComponentImageFilterIUS3IUL3_Pointer const & r);
     itkConnectedComponentImageFilterIUS3IUL3_Pointer & operator=(itkConnectedComponentImageFilterIUS3IUL3 * r);
     itkConnectedComponentImageFilterIUS3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConnectedComponentImageFilterIUS3IUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputImageDimension = 3 };
     enum  {  SameDimension = 1 };
     enum  {  OutputImagePixelTypeIsInteger = 1 };
     virtual char const * GetNameOfClass() const;
     static itkConnectedComponentImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual unsigned long const & GetObjectCount() const;
     void SetMaskImage(itkImageUS3 * mask);
     itkImageUS3 const * GetMaskImage() const;
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundValue() const;
   private:
     void InitUnion(unsigned long const size);
     void InsertSet(unsigned long const label);
     unsigned long LookupSet(unsigned long const label);
     void LinkLabels(unsigned long const lab1, unsigned long const lab2);
     unsigned long CreateConsecutive();
     bool CheckNeighbors(itkIndex3 const & A, itkIndex3 const & B);
     void CompareLines(std::vector< itkConnectedComponentImageFilterIUS3IUS3::runLength > & current, std::vector< itkConnectedComponentImageFilterIUS3IUS3::runLength > const & Neighbour);
     void FillOutput(std::vector< std::vector< itkConnectedComponentImageFilterIUS3IUS3::runLength > > const & LineMap, itkProgressReporter & progress);
     void SetupLineOffsets(std::vector< long > & LineOffsets);
     void Wait();
   protected:
     itkConnectedComponentImageFilterIUS3IUS3();
     ~itkConnectedComponentImageFilterIUS3IUS3();
     itkConnectedComponentImageFilterIUS3IUS3(itkConnectedComponentImageFilterIUS3IUS3 const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkConnectedComponentImageFilterIUS3IUS3_Pointer {
   public:
     itkConnectedComponentImageFilterIUS3IUS3_Pointer();
     itkConnectedComponentImageFilterIUS3IUS3_Pointer(itkConnectedComponentImageFilterIUS3IUS3_Pointer const & p);
     itkConnectedComponentImageFilterIUS3IUS3_Pointer(itkConnectedComponentImageFilterIUS3IUS3 * p);
     ~itkConnectedComponentImageFilterIUS3IUS3_Pointer();
     itkConnectedComponentImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConnectedComponentImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkConnectedComponentImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkConnectedComponentImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkConnectedComponentImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkConnectedComponentImageFilterIUS3IUS3_Pointer const & r) const;
     itkConnectedComponentImageFilterIUS3IUS3_Pointer & operator=(itkConnectedComponentImageFilterIUS3IUS3_Pointer const & r);
     itkConnectedComponentImageFilterIUS3IUS3_Pointer & operator=(itkConnectedComponentImageFilterIUS3IUS3 * r);
     itkConnectedComponentImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConnectedComponentImageFilterIVF22IUC2 : public itkImageToImageFilterIVF22IUC2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputImageDimension = 2 };
     enum  {  SameDimension = 1 };
     enum  {  OutputImagePixelTypeIsInteger = 1 };
     virtual char const * GetNameOfClass() const;
     static itkConnectedComponentImageFilterIVF22IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual unsigned long const & GetObjectCount() const;
     void SetMaskImage(itkImageVF22 * mask);
     itkImageVF22 const * GetMaskImage() const;
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundValue() const;
   private:
     void InitUnion(unsigned long const size);
     void InsertSet(unsigned long const label);
     unsigned long LookupSet(unsigned long const label);
     void LinkLabels(unsigned long const lab1, unsigned long const lab2);
     unsigned long CreateConsecutive();
     bool CheckNeighbors(itkIndex2 const & A, itkIndex2 const & B);
     void CompareLines(std::vector< itkConnectedComponentImageFilterIVF22IUC2::runLength > & current, std::vector< itkConnectedComponentImageFilterIVF22IUC2::runLength > const & Neighbour);
     void FillOutput(std::vector< std::vector< itkConnectedComponentImageFilterIVF22IUC2::runLength > > const & LineMap, itkProgressReporter & progress);
     void SetupLineOffsets(std::vector< long > & LineOffsets);
     void Wait();
   protected:
     itkConnectedComponentImageFilterIVF22IUC2();
     ~itkConnectedComponentImageFilterIVF22IUC2();
     itkConnectedComponentImageFilterIVF22IUC2(itkConnectedComponentImageFilterIVF22IUC2 const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkConnectedComponentImageFilterIVF22IUC2_Pointer {
   public:
     itkConnectedComponentImageFilterIVF22IUC2_Pointer();
     itkConnectedComponentImageFilterIVF22IUC2_Pointer(itkConnectedComponentImageFilterIVF22IUC2_Pointer const & p);
     itkConnectedComponentImageFilterIVF22IUC2_Pointer(itkConnectedComponentImageFilterIVF22IUC2 * p);
     ~itkConnectedComponentImageFilterIVF22IUC2_Pointer();
     itkConnectedComponentImageFilterIVF22IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConnectedComponentImageFilterIVF22IUC2 * GetPointer() const;
     bool operator<(itkConnectedComponentImageFilterIVF22IUC2_Pointer const & r) const;
     bool operator>(itkConnectedComponentImageFilterIVF22IUC2_Pointer const & r) const;
     bool operator<=(itkConnectedComponentImageFilterIVF22IUC2_Pointer const & r) const;
     bool operator>=(itkConnectedComponentImageFilterIVF22IUC2_Pointer const & r) const;
     itkConnectedComponentImageFilterIVF22IUC2_Pointer & operator=(itkConnectedComponentImageFilterIVF22IUC2_Pointer const & r);
     itkConnectedComponentImageFilterIVF22IUC2_Pointer & operator=(itkConnectedComponentImageFilterIVF22IUC2 * r);
     itkConnectedComponentImageFilterIVF22IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConnectedComponentImageFilterIVF22IUL2 : public itkImageToImageFilterIVF22IUL2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputImageDimension = 2 };
     enum  {  SameDimension = 1 };
     enum  {  OutputImagePixelTypeIsInteger = 1 };
     virtual char const * GetNameOfClass() const;
     static itkConnectedComponentImageFilterIVF22IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual unsigned long const & GetObjectCount() const;
     void SetMaskImage(itkImageVF22 * mask);
     itkImageVF22 const * GetMaskImage() const;
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundValue() const;
   private:
     void InitUnion(unsigned long const size);
     void InsertSet(unsigned long const label);
     unsigned long LookupSet(unsigned long const label);
     void LinkLabels(unsigned long const lab1, unsigned long const lab2);
     unsigned long CreateConsecutive();
     bool CheckNeighbors(itkIndex2 const & A, itkIndex2 const & B);
     void CompareLines(std::vector< itkConnectedComponentImageFilterIVF22IUL2::runLength > & current, std::vector< itkConnectedComponentImageFilterIVF22IUL2::runLength > const & Neighbour);
     void FillOutput(std::vector< std::vector< itkConnectedComponentImageFilterIVF22IUL2::runLength > > const & LineMap, itkProgressReporter & progress);
     void SetupLineOffsets(std::vector< long > & LineOffsets);
     void Wait();
   protected:
     itkConnectedComponentImageFilterIVF22IUL2();
     ~itkConnectedComponentImageFilterIVF22IUL2();
     itkConnectedComponentImageFilterIVF22IUL2(itkConnectedComponentImageFilterIVF22IUL2 const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkConnectedComponentImageFilterIVF22IUL2_Pointer {
   public:
     itkConnectedComponentImageFilterIVF22IUL2_Pointer();
     itkConnectedComponentImageFilterIVF22IUL2_Pointer(itkConnectedComponentImageFilterIVF22IUL2_Pointer const & p);
     itkConnectedComponentImageFilterIVF22IUL2_Pointer(itkConnectedComponentImageFilterIVF22IUL2 * p);
     ~itkConnectedComponentImageFilterIVF22IUL2_Pointer();
     itkConnectedComponentImageFilterIVF22IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConnectedComponentImageFilterIVF22IUL2 * GetPointer() const;
     bool operator<(itkConnectedComponentImageFilterIVF22IUL2_Pointer const & r) const;
     bool operator>(itkConnectedComponentImageFilterIVF22IUL2_Pointer const & r) const;
     bool operator<=(itkConnectedComponentImageFilterIVF22IUL2_Pointer const & r) const;
     bool operator>=(itkConnectedComponentImageFilterIVF22IUL2_Pointer const & r) const;
     itkConnectedComponentImageFilterIVF22IUL2_Pointer & operator=(itkConnectedComponentImageFilterIVF22IUL2_Pointer const & r);
     itkConnectedComponentImageFilterIVF22IUL2_Pointer & operator=(itkConnectedComponentImageFilterIVF22IUL2 * r);
     itkConnectedComponentImageFilterIVF22IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConnectedComponentImageFilterIVF22IUS2 : public itkImageToImageFilterIVF22IUS2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputImageDimension = 2 };
     enum  {  SameDimension = 1 };
     enum  {  OutputImagePixelTypeIsInteger = 1 };
     virtual char const * GetNameOfClass() const;
     static itkConnectedComponentImageFilterIVF22IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual unsigned long const & GetObjectCount() const;
     void SetMaskImage(itkImageVF22 * mask);
     itkImageVF22 const * GetMaskImage() const;
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundValue() const;
   private:
     void InitUnion(unsigned long const size);
     void InsertSet(unsigned long const label);
     unsigned long LookupSet(unsigned long const label);
     void LinkLabels(unsigned long const lab1, unsigned long const lab2);
     unsigned long CreateConsecutive();
     bool CheckNeighbors(itkIndex2 const & A, itkIndex2 const & B);
     void CompareLines(std::vector< itkConnectedComponentImageFilterIVF22IUS2::runLength > & current, std::vector< itkConnectedComponentImageFilterIVF22IUS2::runLength > const & Neighbour);
     void FillOutput(std::vector< std::vector< itkConnectedComponentImageFilterIVF22IUS2::runLength > > const & LineMap, itkProgressReporter & progress);
     void SetupLineOffsets(std::vector< long > & LineOffsets);
     void Wait();
   protected:
     itkConnectedComponentImageFilterIVF22IUS2();
     ~itkConnectedComponentImageFilterIVF22IUS2();
     itkConnectedComponentImageFilterIVF22IUS2(itkConnectedComponentImageFilterIVF22IUS2 const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkConnectedComponentImageFilterIVF22IUS2_Pointer {
   public:
     itkConnectedComponentImageFilterIVF22IUS2_Pointer();
     itkConnectedComponentImageFilterIVF22IUS2_Pointer(itkConnectedComponentImageFilterIVF22IUS2_Pointer const & p);
     itkConnectedComponentImageFilterIVF22IUS2_Pointer(itkConnectedComponentImageFilterIVF22IUS2 * p);
     ~itkConnectedComponentImageFilterIVF22IUS2_Pointer();
     itkConnectedComponentImageFilterIVF22IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConnectedComponentImageFilterIVF22IUS2 * GetPointer() const;
     bool operator<(itkConnectedComponentImageFilterIVF22IUS2_Pointer const & r) const;
     bool operator>(itkConnectedComponentImageFilterIVF22IUS2_Pointer const & r) const;
     bool operator<=(itkConnectedComponentImageFilterIVF22IUS2_Pointer const & r) const;
     bool operator>=(itkConnectedComponentImageFilterIVF22IUS2_Pointer const & r) const;
     itkConnectedComponentImageFilterIVF22IUS2_Pointer & operator=(itkConnectedComponentImageFilterIVF22IUS2_Pointer const & r);
     itkConnectedComponentImageFilterIVF22IUS2_Pointer & operator=(itkConnectedComponentImageFilterIVF22IUS2 * r);
     itkConnectedComponentImageFilterIVF22IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConnectedComponentImageFilterIVF33IUC3 : public itkImageToImageFilterIVF33IUC3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputImageDimension = 3 };
     enum  {  SameDimension = 1 };
     enum  {  OutputImagePixelTypeIsInteger = 1 };
     virtual char const * GetNameOfClass() const;
     static itkConnectedComponentImageFilterIVF33IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual unsigned long const & GetObjectCount() const;
     void SetMaskImage(itkImageVF33 * mask);
     itkImageVF33 const * GetMaskImage() const;
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundValue() const;
   private:
     void InitUnion(unsigned long const size);
     void InsertSet(unsigned long const label);
     unsigned long LookupSet(unsigned long const label);
     void LinkLabels(unsigned long const lab1, unsigned long const lab2);
     unsigned long CreateConsecutive();
     bool CheckNeighbors(itkIndex3 const & A, itkIndex3 const & B);
     void CompareLines(std::vector< itkConnectedComponentImageFilterIVF33IUC3::runLength > & current, std::vector< itkConnectedComponentImageFilterIVF33IUC3::runLength > const & Neighbour);
     void FillOutput(std::vector< std::vector< itkConnectedComponentImageFilterIVF33IUC3::runLength > > const & LineMap, itkProgressReporter & progress);
     void SetupLineOffsets(std::vector< long > & LineOffsets);
     void Wait();
   protected:
     itkConnectedComponentImageFilterIVF33IUC3();
     ~itkConnectedComponentImageFilterIVF33IUC3();
     itkConnectedComponentImageFilterIVF33IUC3(itkConnectedComponentImageFilterIVF33IUC3 const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkConnectedComponentImageFilterIVF33IUC3_Pointer {
   public:
     itkConnectedComponentImageFilterIVF33IUC3_Pointer();
     itkConnectedComponentImageFilterIVF33IUC3_Pointer(itkConnectedComponentImageFilterIVF33IUC3_Pointer const & p);
     itkConnectedComponentImageFilterIVF33IUC3_Pointer(itkConnectedComponentImageFilterIVF33IUC3 * p);
     ~itkConnectedComponentImageFilterIVF33IUC3_Pointer();
     itkConnectedComponentImageFilterIVF33IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConnectedComponentImageFilterIVF33IUC3 * GetPointer() const;
     bool operator<(itkConnectedComponentImageFilterIVF33IUC3_Pointer const & r) const;
     bool operator>(itkConnectedComponentImageFilterIVF33IUC3_Pointer const & r) const;
     bool operator<=(itkConnectedComponentImageFilterIVF33IUC3_Pointer const & r) const;
     bool operator>=(itkConnectedComponentImageFilterIVF33IUC3_Pointer const & r) const;
     itkConnectedComponentImageFilterIVF33IUC3_Pointer & operator=(itkConnectedComponentImageFilterIVF33IUC3_Pointer const & r);
     itkConnectedComponentImageFilterIVF33IUC3_Pointer & operator=(itkConnectedComponentImageFilterIVF33IUC3 * r);
     itkConnectedComponentImageFilterIVF33IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConnectedComponentImageFilterIVF33IUL3 : public itkImageToImageFilterIVF33IUL3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputImageDimension = 3 };
     enum  {  SameDimension = 1 };
     enum  {  OutputImagePixelTypeIsInteger = 1 };
     virtual char const * GetNameOfClass() const;
     static itkConnectedComponentImageFilterIVF33IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual unsigned long const & GetObjectCount() const;
     void SetMaskImage(itkImageVF33 * mask);
     itkImageVF33 const * GetMaskImage() const;
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundValue() const;
   private:
     void InitUnion(unsigned long const size);
     void InsertSet(unsigned long const label);
     unsigned long LookupSet(unsigned long const label);
     void LinkLabels(unsigned long const lab1, unsigned long const lab2);
     unsigned long CreateConsecutive();
     bool CheckNeighbors(itkIndex3 const & A, itkIndex3 const & B);
     void CompareLines(std::vector< itkConnectedComponentImageFilterIVF33IUL3::runLength > & current, std::vector< itkConnectedComponentImageFilterIVF33IUL3::runLength > const & Neighbour);
     void FillOutput(std::vector< std::vector< itkConnectedComponentImageFilterIVF33IUL3::runLength > > const & LineMap, itkProgressReporter & progress);
     void SetupLineOffsets(std::vector< long > & LineOffsets);
     void Wait();
   protected:
     itkConnectedComponentImageFilterIVF33IUL3();
     ~itkConnectedComponentImageFilterIVF33IUL3();
     itkConnectedComponentImageFilterIVF33IUL3(itkConnectedComponentImageFilterIVF33IUL3 const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkConnectedComponentImageFilterIVF33IUL3_Pointer {
   public:
     itkConnectedComponentImageFilterIVF33IUL3_Pointer();
     itkConnectedComponentImageFilterIVF33IUL3_Pointer(itkConnectedComponentImageFilterIVF33IUL3_Pointer const & p);
     itkConnectedComponentImageFilterIVF33IUL3_Pointer(itkConnectedComponentImageFilterIVF33IUL3 * p);
     ~itkConnectedComponentImageFilterIVF33IUL3_Pointer();
     itkConnectedComponentImageFilterIVF33IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConnectedComponentImageFilterIVF33IUL3 * GetPointer() const;
     bool operator<(itkConnectedComponentImageFilterIVF33IUL3_Pointer const & r) const;
     bool operator>(itkConnectedComponentImageFilterIVF33IUL3_Pointer const & r) const;
     bool operator<=(itkConnectedComponentImageFilterIVF33IUL3_Pointer const & r) const;
     bool operator>=(itkConnectedComponentImageFilterIVF33IUL3_Pointer const & r) const;
     itkConnectedComponentImageFilterIVF33IUL3_Pointer & operator=(itkConnectedComponentImageFilterIVF33IUL3_Pointer const & r);
     itkConnectedComponentImageFilterIVF33IUL3_Pointer & operator=(itkConnectedComponentImageFilterIVF33IUL3 * r);
     itkConnectedComponentImageFilterIVF33IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConnectedComponentImageFilterIVF33IUS3 : public itkImageToImageFilterIVF33IUS3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputImageDimension = 3 };
     enum  {  SameDimension = 1 };
     enum  {  OutputImagePixelTypeIsInteger = 1 };
     virtual char const * GetNameOfClass() const;
     static itkConnectedComponentImageFilterIVF33IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual unsigned long const & GetObjectCount() const;
     void SetMaskImage(itkImageVF33 * mask);
     itkImageVF33 const * GetMaskImage() const;
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundValue() const;
   private:
     void InitUnion(unsigned long const size);
     void InsertSet(unsigned long const label);
     unsigned long LookupSet(unsigned long const label);
     void LinkLabels(unsigned long const lab1, unsigned long const lab2);
     unsigned long CreateConsecutive();
     bool CheckNeighbors(itkIndex3 const & A, itkIndex3 const & B);
     void CompareLines(std::vector< itkConnectedComponentImageFilterIVF33IUS3::runLength > & current, std::vector< itkConnectedComponentImageFilterIVF33IUS3::runLength > const & Neighbour);
     void FillOutput(std::vector< std::vector< itkConnectedComponentImageFilterIVF33IUS3::runLength > > const & LineMap, itkProgressReporter & progress);
     void SetupLineOffsets(std::vector< long > & LineOffsets);
     void Wait();
   protected:
     itkConnectedComponentImageFilterIVF33IUS3();
     ~itkConnectedComponentImageFilterIVF33IUS3();
     itkConnectedComponentImageFilterIVF33IUS3(itkConnectedComponentImageFilterIVF33IUS3 const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkConnectedComponentImageFilterIVF33IUS3_Pointer {
   public:
     itkConnectedComponentImageFilterIVF33IUS3_Pointer();
     itkConnectedComponentImageFilterIVF33IUS3_Pointer(itkConnectedComponentImageFilterIVF33IUS3_Pointer const & p);
     itkConnectedComponentImageFilterIVF33IUS3_Pointer(itkConnectedComponentImageFilterIVF33IUS3 * p);
     ~itkConnectedComponentImageFilterIVF33IUS3_Pointer();
     itkConnectedComponentImageFilterIVF33IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConnectedComponentImageFilterIVF33IUS3 * GetPointer() const;
     bool operator<(itkConnectedComponentImageFilterIVF33IUS3_Pointer const & r) const;
     bool operator>(itkConnectedComponentImageFilterIVF33IUS3_Pointer const & r) const;
     bool operator<=(itkConnectedComponentImageFilterIVF33IUS3_Pointer const & r) const;
     bool operator>=(itkConnectedComponentImageFilterIVF33IUS3_Pointer const & r) const;
     itkConnectedComponentImageFilterIVF33IUS3_Pointer & operator=(itkConnectedComponentImageFilterIVF33IUS3_Pointer const & r);
     itkConnectedComponentImageFilterIVF33IUS3_Pointer & operator=(itkConnectedComponentImageFilterIVF33IUS3 * r);
     itkConnectedComponentImageFilterIVF33IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


