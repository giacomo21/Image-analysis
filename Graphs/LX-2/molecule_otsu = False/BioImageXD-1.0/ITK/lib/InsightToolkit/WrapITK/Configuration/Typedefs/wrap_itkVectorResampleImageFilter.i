// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkVectorResampleImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkVectorResampleImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkVectorResampleImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkVectorResampleImageFilterJava
#endif
#ifdef SWIGLUA
%module itkVectorResampleImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkVectorResampleImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkVectorResampleImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkVectorResampleImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkVectorResampleImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkVectorResampleImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkVectorResampleImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkVectorResampleImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkVectorResampleImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkVectorResampleImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkVectorResampleImageFilterPython
#endif
#ifdef SWIGR
%module itkVectorResampleImageFilterR
#endif
#ifdef SWIGRUBY
%module itkVectorResampleImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkVectorResampleImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkVectorResampleImageFilterTcl
#endif
#ifdef SWIGXML
%module itkVectorResampleImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Numerics.includes"
#include "Transforms.includes"
#include "SpatialObject.includes"
#include "Resize.includes"
#include "Calculators.includes"
#include "Registration.includes"
%}


%{
%}




%import wrap_itkPoint.i
%import wrap_ITKRegions.i
%import wrap_itkImageToImageFilterA.i
%import wrap_itkTransform.i
%import wrap_itkIndex.i
%import wrap_itkVector.i
%import wrap_itkMatrix.i
%import wrap_ITKCommonBase.i
%import wrap_itkSize.i


%include itk.i
%include wrap_itkVectorResampleImageFilter_ext.i


 class itkVectorResampleImageFilterIVF22IVF22 : public itkImageToImageFilterIVF22IVF22 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkVectorResampleImageFilterIVF22IVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetTransform(itkTransformD22 const * _arg);
     virtual itkTransformD22 const * GetTransform() const;
     virtual void SetInterpolator(itk::VectorInterpolateImageFunction< itk::Image< itk::Vector< float, 2u >, 2u >, double > * _arg);
     virtual itk::VectorInterpolateImageFunction< itk::Image< itk::Vector< float, 2u >, 2u >, double > const * GetInterpolator() const;
     virtual void SetSize(itkSize2 const _arg);
     virtual itkSize2 const & GetSize() const;
     virtual void SetDefaultPixelValue(itkVectorF2 const _arg);
     virtual itkVectorF2 GetDefaultPixelValue() const;
     virtual void SetOutputSpacing(itkVectorD2 const _arg);
     virtual void SetOutputSpacing(double const * values);
     virtual itkVectorD2 const & GetOutputSpacing() const;
     virtual void SetOutputOrigin(itkPointD2 const _arg);
     virtual void SetOutputOrigin(double const * values);
     virtual itkPointD2 const & GetOutputOrigin() const;
     virtual void SetOutputDirection(itkMatrixD22 const _arg);
     virtual itkMatrixD22 const & GetOutputDirection() const;
     virtual void SetOutputStartIndex(itkIndex2 const _arg);
     virtual itkIndex2 const & GetOutputStartIndex() const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual unsigned long GetMTime() const;
   private:
     itkVectorResampleImageFilterIVF22IVF22(itkVectorResampleImageFilterIVF22IVF22 const & arg0);
     void operator=(itkVectorResampleImageFilterIVF22IVF22 const & arg0);
   protected:
     itkVectorResampleImageFilterIVF22IVF22();
     ~itkVectorResampleImageFilterIVF22IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkVectorResampleImageFilterIVF22IVF22_Pointer {
   public:
     itkVectorResampleImageFilterIVF22IVF22_Pointer();
     itkVectorResampleImageFilterIVF22IVF22_Pointer(itkVectorResampleImageFilterIVF22IVF22_Pointer const & p);
     itkVectorResampleImageFilterIVF22IVF22_Pointer(itkVectorResampleImageFilterIVF22IVF22 * p);
     ~itkVectorResampleImageFilterIVF22IVF22_Pointer();
     itkVectorResampleImageFilterIVF22IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVectorResampleImageFilterIVF22IVF22 * GetPointer() const;
     bool operator<(itkVectorResampleImageFilterIVF22IVF22_Pointer const & r) const;
     bool operator>(itkVectorResampleImageFilterIVF22IVF22_Pointer const & r) const;
     bool operator<=(itkVectorResampleImageFilterIVF22IVF22_Pointer const & r) const;
     bool operator>=(itkVectorResampleImageFilterIVF22IVF22_Pointer const & r) const;
     itkVectorResampleImageFilterIVF22IVF22_Pointer & operator=(itkVectorResampleImageFilterIVF22IVF22_Pointer const & r);
     itkVectorResampleImageFilterIVF22IVF22_Pointer & operator=(itkVectorResampleImageFilterIVF22IVF22 * r);
     itkVectorResampleImageFilterIVF22IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVectorResampleImageFilterIVF33IVF33 : public itkImageToImageFilterIVF33IVF33 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkVectorResampleImageFilterIVF33IVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetTransform(itkTransformD33 const * _arg);
     virtual itkTransformD33 const * GetTransform() const;
     virtual void SetInterpolator(itk::VectorInterpolateImageFunction< itk::Image< itk::Vector< float, 3u >, 3u >, double > * _arg);
     virtual itk::VectorInterpolateImageFunction< itk::Image< itk::Vector< float, 3u >, 3u >, double > const * GetInterpolator() const;
     virtual void SetSize(itkSize3 const _arg);
     virtual itkSize3 const & GetSize() const;
     virtual void SetDefaultPixelValue(itkVectorF3 const _arg);
     virtual itkVectorF3 GetDefaultPixelValue() const;
     virtual void SetOutputSpacing(itkVectorD3 const _arg);
     virtual void SetOutputSpacing(double const * values);
     virtual itkVectorD3 const & GetOutputSpacing() const;
     virtual void SetOutputOrigin(itkPointD3 const _arg);
     virtual void SetOutputOrigin(double const * values);
     virtual itkPointD3 const & GetOutputOrigin() const;
     virtual void SetOutputDirection(itkMatrixD33 const _arg);
     virtual itkMatrixD33 const & GetOutputDirection() const;
     virtual void SetOutputStartIndex(itkIndex3 const _arg);
     virtual itkIndex3 const & GetOutputStartIndex() const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual unsigned long GetMTime() const;
   private:
     itkVectorResampleImageFilterIVF33IVF33(itkVectorResampleImageFilterIVF33IVF33 const & arg0);
     void operator=(itkVectorResampleImageFilterIVF33IVF33 const & arg0);
   protected:
     itkVectorResampleImageFilterIVF33IVF33();
     ~itkVectorResampleImageFilterIVF33IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkVectorResampleImageFilterIVF33IVF33_Pointer {
   public:
     itkVectorResampleImageFilterIVF33IVF33_Pointer();
     itkVectorResampleImageFilterIVF33IVF33_Pointer(itkVectorResampleImageFilterIVF33IVF33_Pointer const & p);
     itkVectorResampleImageFilterIVF33IVF33_Pointer(itkVectorResampleImageFilterIVF33IVF33 * p);
     ~itkVectorResampleImageFilterIVF33IVF33_Pointer();
     itkVectorResampleImageFilterIVF33IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVectorResampleImageFilterIVF33IVF33 * GetPointer() const;
     bool operator<(itkVectorResampleImageFilterIVF33IVF33_Pointer const & r) const;
     bool operator>(itkVectorResampleImageFilterIVF33IVF33_Pointer const & r) const;
     bool operator<=(itkVectorResampleImageFilterIVF33IVF33_Pointer const & r) const;
     bool operator>=(itkVectorResampleImageFilterIVF33IVF33_Pointer const & r) const;
     itkVectorResampleImageFilterIVF33IVF33_Pointer & operator=(itkVectorResampleImageFilterIVF33IVF33_Pointer const & r);
     itkVectorResampleImageFilterIVF33IVF33_Pointer & operator=(itkVectorResampleImageFilterIVF33IVF33 * r);
     itkVectorResampleImageFilterIVF33IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


