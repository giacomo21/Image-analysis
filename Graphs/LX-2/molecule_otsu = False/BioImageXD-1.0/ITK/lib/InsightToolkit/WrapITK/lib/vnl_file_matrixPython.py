# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _vnl_file_matrixPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_vnl_file_matrixPython', [dirname(__file__)])
        except ImportError:
            import _vnl_file_matrixPython
            return _vnl_file_matrixPython
        if fp is not None:
            try:
                _mod = imp.load_module('_vnl_file_matrixPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _vnl_file_matrixPython = swig_import_helper()
    del swig_import_helper
else:
    import _vnl_file_matrixPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import vnl_matrixPython
import vcl_complexPython
import pyBasePython
import vnl_vectorPython
class vnl_file_matrixD(vnl_matrixPython.vnl_matrixD):
    """Proxy of C++ vnl_file_matrixD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    __swig_destroy__ = _vnl_file_matrixPython.delete_vnl_file_matrixD
    def __init__(self, *args): 
        """
        __init__(self, vnl_file_matrixD arg0) -> vnl_file_matrixD
        __init__(self, char filename) -> vnl_file_matrixD
        """
        _vnl_file_matrixPython.vnl_file_matrixD_swiginit(self,_vnl_file_matrixPython.new_vnl_file_matrixD(*args))
vnl_file_matrixD_swigregister = _vnl_file_matrixPython.vnl_file_matrixD_swigregister
vnl_file_matrixD_swigregister(vnl_file_matrixD)

class vnl_file_matrixF(vnl_matrixPython.vnl_matrixF):
    """Proxy of C++ vnl_file_matrixF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    __swig_destroy__ = _vnl_file_matrixPython.delete_vnl_file_matrixF
    def __init__(self, *args): 
        """
        __init__(self, vnl_file_matrixF arg0) -> vnl_file_matrixF
        __init__(self, char filename) -> vnl_file_matrixF
        """
        _vnl_file_matrixPython.vnl_file_matrixF_swiginit(self,_vnl_file_matrixPython.new_vnl_file_matrixF(*args))
vnl_file_matrixF_swigregister = _vnl_file_matrixPython.vnl_file_matrixF_swigregister
vnl_file_matrixF_swigregister(vnl_file_matrixF)



