# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkImageToPathFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkImageToPathFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkImageToPathFilterPython
            return _itkImageToPathFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkImageToPathFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkImageToPathFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkImageToPathFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkPathSourcePython
import itkPolyLineParametricPathPython
import itkContinuousIndexPython
import itkVectorContainerPython
import itkLevelSetPython
import itkParametricPathPython
import itkPathPython
def itkImageToPathFilterID3PLPP3_New():
  return itkImageToPathFilterID3PLPP3.New()

def itkImageToPathFilterIF3PLPP3_New():
  return itkImageToPathFilterIF3PLPP3.New()

def itkImageToPathFilterIUS3PLPP3_New():
  return itkImageToPathFilterIUS3PLPP3.New()

def itkImageToPathFilterIUL3PLPP3_New():
  return itkImageToPathFilterIUL3PLPP3.New()

def itkImageToPathFilterIUC3PLPP3_New():
  return itkImageToPathFilterIUC3PLPP3.New()

def itkImageToPathFilterID2PLPP2_New():
  return itkImageToPathFilterID2PLPP2.New()

def itkImageToPathFilterIF2PLPP2_New():
  return itkImageToPathFilterIF2PLPP2.New()

def itkImageToPathFilterIUS2PLPP2_New():
  return itkImageToPathFilterIUS2PLPP2.New()

def itkImageToPathFilterIUL2PLPP2_New():
  return itkImageToPathFilterIUL2PLPP2.New()

def itkImageToPathFilterIUC2PLPP2_New():
  return itkImageToPathFilterIUC2PLPP2.New()

class itkImageToPathFilterID2PLPP2(itkPathSourcePython.itkPathSourcePLPP2):
    """Proxy of C++ itkImageToPathFilterID2PLPP2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToPathFilterPython.itkImageToPathFilterID2PLPP2_InputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD2 image)
        SetInput(self, unsigned int arg0, itkImageD2 image)
        """
        return _itkImageToPathFilterPython.itkImageToPathFilterID2PLPP2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD2
        GetInput(self, unsigned int idx) -> itkImageD2
        """
        return _itkImageToPathFilterPython.itkImageToPathFilterID2PLPP2_GetInput(self, *args)

    __swig_destroy__ = _itkImageToPathFilterPython.delete_itkImageToPathFilterID2PLPP2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToPathFilterID2PLPP2"""
        return _itkImageToPathFilterPython.itkImageToPathFilterID2PLPP2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToPathFilterID2PLPP2"""
        return _itkImageToPathFilterPython.itkImageToPathFilterID2PLPP2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToPathFilterID2PLPP2
        
        Create a new object of the class itkImageToPathFilterID2PLPP2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToPathFilterID2PLPP2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToPathFilterID2PLPP2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToPathFilterID2PLPP2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToPathFilterID2PLPP2.SetInput = new_instancemethod(_itkImageToPathFilterPython.itkImageToPathFilterID2PLPP2_SetInput,None,itkImageToPathFilterID2PLPP2)
itkImageToPathFilterID2PLPP2.GetInput = new_instancemethod(_itkImageToPathFilterPython.itkImageToPathFilterID2PLPP2_GetInput,None,itkImageToPathFilterID2PLPP2)
itkImageToPathFilterID2PLPP2.GetPointer = new_instancemethod(_itkImageToPathFilterPython.itkImageToPathFilterID2PLPP2_GetPointer,None,itkImageToPathFilterID2PLPP2)
itkImageToPathFilterID2PLPP2_swigregister = _itkImageToPathFilterPython.itkImageToPathFilterID2PLPP2_swigregister
itkImageToPathFilterID2PLPP2_swigregister(itkImageToPathFilterID2PLPP2)

def itkImageToPathFilterID2PLPP2_cast(*args):
  """itkImageToPathFilterID2PLPP2_cast(itkLightObject obj) -> itkImageToPathFilterID2PLPP2"""
  return _itkImageToPathFilterPython.itkImageToPathFilterID2PLPP2_cast(*args)

class itkImageToPathFilterID3PLPP3(itkPathSourcePython.itkPathSourcePLPP3):
    """Proxy of C++ itkImageToPathFilterID3PLPP3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToPathFilterPython.itkImageToPathFilterID3PLPP3_InputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD3 image)
        SetInput(self, unsigned int arg0, itkImageD3 image)
        """
        return _itkImageToPathFilterPython.itkImageToPathFilterID3PLPP3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD3
        GetInput(self, unsigned int idx) -> itkImageD3
        """
        return _itkImageToPathFilterPython.itkImageToPathFilterID3PLPP3_GetInput(self, *args)

    __swig_destroy__ = _itkImageToPathFilterPython.delete_itkImageToPathFilterID3PLPP3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToPathFilterID3PLPP3"""
        return _itkImageToPathFilterPython.itkImageToPathFilterID3PLPP3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToPathFilterID3PLPP3"""
        return _itkImageToPathFilterPython.itkImageToPathFilterID3PLPP3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToPathFilterID3PLPP3
        
        Create a new object of the class itkImageToPathFilterID3PLPP3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToPathFilterID3PLPP3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToPathFilterID3PLPP3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToPathFilterID3PLPP3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToPathFilterID3PLPP3.SetInput = new_instancemethod(_itkImageToPathFilterPython.itkImageToPathFilterID3PLPP3_SetInput,None,itkImageToPathFilterID3PLPP3)
itkImageToPathFilterID3PLPP3.GetInput = new_instancemethod(_itkImageToPathFilterPython.itkImageToPathFilterID3PLPP3_GetInput,None,itkImageToPathFilterID3PLPP3)
itkImageToPathFilterID3PLPP3.GetPointer = new_instancemethod(_itkImageToPathFilterPython.itkImageToPathFilterID3PLPP3_GetPointer,None,itkImageToPathFilterID3PLPP3)
itkImageToPathFilterID3PLPP3_swigregister = _itkImageToPathFilterPython.itkImageToPathFilterID3PLPP3_swigregister
itkImageToPathFilterID3PLPP3_swigregister(itkImageToPathFilterID3PLPP3)

def itkImageToPathFilterID3PLPP3_cast(*args):
  """itkImageToPathFilterID3PLPP3_cast(itkLightObject obj) -> itkImageToPathFilterID3PLPP3"""
  return _itkImageToPathFilterPython.itkImageToPathFilterID3PLPP3_cast(*args)

class itkImageToPathFilterIF2PLPP2(itkPathSourcePython.itkPathSourcePLPP2):
    """Proxy of C++ itkImageToPathFilterIF2PLPP2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToPathFilterPython.itkImageToPathFilterIF2PLPP2_InputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF2 image)
        SetInput(self, unsigned int arg0, itkImageF2 image)
        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIF2PLPP2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF2
        GetInput(self, unsigned int idx) -> itkImageF2
        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIF2PLPP2_GetInput(self, *args)

    __swig_destroy__ = _itkImageToPathFilterPython.delete_itkImageToPathFilterIF2PLPP2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToPathFilterIF2PLPP2"""
        return _itkImageToPathFilterPython.itkImageToPathFilterIF2PLPP2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToPathFilterIF2PLPP2"""
        return _itkImageToPathFilterPython.itkImageToPathFilterIF2PLPP2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToPathFilterIF2PLPP2
        
        Create a new object of the class itkImageToPathFilterIF2PLPP2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToPathFilterIF2PLPP2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToPathFilterIF2PLPP2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToPathFilterIF2PLPP2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToPathFilterIF2PLPP2.SetInput = new_instancemethod(_itkImageToPathFilterPython.itkImageToPathFilterIF2PLPP2_SetInput,None,itkImageToPathFilterIF2PLPP2)
itkImageToPathFilterIF2PLPP2.GetInput = new_instancemethod(_itkImageToPathFilterPython.itkImageToPathFilterIF2PLPP2_GetInput,None,itkImageToPathFilterIF2PLPP2)
itkImageToPathFilterIF2PLPP2.GetPointer = new_instancemethod(_itkImageToPathFilterPython.itkImageToPathFilterIF2PLPP2_GetPointer,None,itkImageToPathFilterIF2PLPP2)
itkImageToPathFilterIF2PLPP2_swigregister = _itkImageToPathFilterPython.itkImageToPathFilterIF2PLPP2_swigregister
itkImageToPathFilterIF2PLPP2_swigregister(itkImageToPathFilterIF2PLPP2)

def itkImageToPathFilterIF2PLPP2_cast(*args):
  """itkImageToPathFilterIF2PLPP2_cast(itkLightObject obj) -> itkImageToPathFilterIF2PLPP2"""
  return _itkImageToPathFilterPython.itkImageToPathFilterIF2PLPP2_cast(*args)

class itkImageToPathFilterIF3PLPP3(itkPathSourcePython.itkPathSourcePLPP3):
    """Proxy of C++ itkImageToPathFilterIF3PLPP3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToPathFilterPython.itkImageToPathFilterIF3PLPP3_InputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF3 image)
        SetInput(self, unsigned int arg0, itkImageF3 image)
        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIF3PLPP3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF3
        GetInput(self, unsigned int idx) -> itkImageF3
        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIF3PLPP3_GetInput(self, *args)

    __swig_destroy__ = _itkImageToPathFilterPython.delete_itkImageToPathFilterIF3PLPP3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToPathFilterIF3PLPP3"""
        return _itkImageToPathFilterPython.itkImageToPathFilterIF3PLPP3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToPathFilterIF3PLPP3"""
        return _itkImageToPathFilterPython.itkImageToPathFilterIF3PLPP3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToPathFilterIF3PLPP3
        
        Create a new object of the class itkImageToPathFilterIF3PLPP3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToPathFilterIF3PLPP3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToPathFilterIF3PLPP3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToPathFilterIF3PLPP3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToPathFilterIF3PLPP3.SetInput = new_instancemethod(_itkImageToPathFilterPython.itkImageToPathFilterIF3PLPP3_SetInput,None,itkImageToPathFilterIF3PLPP3)
itkImageToPathFilterIF3PLPP3.GetInput = new_instancemethod(_itkImageToPathFilterPython.itkImageToPathFilterIF3PLPP3_GetInput,None,itkImageToPathFilterIF3PLPP3)
itkImageToPathFilterIF3PLPP3.GetPointer = new_instancemethod(_itkImageToPathFilterPython.itkImageToPathFilterIF3PLPP3_GetPointer,None,itkImageToPathFilterIF3PLPP3)
itkImageToPathFilterIF3PLPP3_swigregister = _itkImageToPathFilterPython.itkImageToPathFilterIF3PLPP3_swigregister
itkImageToPathFilterIF3PLPP3_swigregister(itkImageToPathFilterIF3PLPP3)

def itkImageToPathFilterIF3PLPP3_cast(*args):
  """itkImageToPathFilterIF3PLPP3_cast(itkLightObject obj) -> itkImageToPathFilterIF3PLPP3"""
  return _itkImageToPathFilterPython.itkImageToPathFilterIF3PLPP3_cast(*args)

class itkImageToPathFilterIUC2PLPP2(itkPathSourcePython.itkPathSourcePLPP2):
    """Proxy of C++ itkImageToPathFilterIUC2PLPP2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToPathFilterPython.itkImageToPathFilterIUC2PLPP2_InputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC2 image)
        SetInput(self, unsigned int arg0, itkImageUC2 image)
        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIUC2PLPP2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC2
        GetInput(self, unsigned int idx) -> itkImageUC2
        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIUC2PLPP2_GetInput(self, *args)

    __swig_destroy__ = _itkImageToPathFilterPython.delete_itkImageToPathFilterIUC2PLPP2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToPathFilterIUC2PLPP2"""
        return _itkImageToPathFilterPython.itkImageToPathFilterIUC2PLPP2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToPathFilterIUC2PLPP2"""
        return _itkImageToPathFilterPython.itkImageToPathFilterIUC2PLPP2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToPathFilterIUC2PLPP2
        
        Create a new object of the class itkImageToPathFilterIUC2PLPP2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToPathFilterIUC2PLPP2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToPathFilterIUC2PLPP2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToPathFilterIUC2PLPP2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToPathFilterIUC2PLPP2.SetInput = new_instancemethod(_itkImageToPathFilterPython.itkImageToPathFilterIUC2PLPP2_SetInput,None,itkImageToPathFilterIUC2PLPP2)
itkImageToPathFilterIUC2PLPP2.GetInput = new_instancemethod(_itkImageToPathFilterPython.itkImageToPathFilterIUC2PLPP2_GetInput,None,itkImageToPathFilterIUC2PLPP2)
itkImageToPathFilterIUC2PLPP2.GetPointer = new_instancemethod(_itkImageToPathFilterPython.itkImageToPathFilterIUC2PLPP2_GetPointer,None,itkImageToPathFilterIUC2PLPP2)
itkImageToPathFilterIUC2PLPP2_swigregister = _itkImageToPathFilterPython.itkImageToPathFilterIUC2PLPP2_swigregister
itkImageToPathFilterIUC2PLPP2_swigregister(itkImageToPathFilterIUC2PLPP2)

def itkImageToPathFilterIUC2PLPP2_cast(*args):
  """itkImageToPathFilterIUC2PLPP2_cast(itkLightObject obj) -> itkImageToPathFilterIUC2PLPP2"""
  return _itkImageToPathFilterPython.itkImageToPathFilterIUC2PLPP2_cast(*args)

class itkImageToPathFilterIUC3PLPP3(itkPathSourcePython.itkPathSourcePLPP3):
    """Proxy of C++ itkImageToPathFilterIUC3PLPP3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToPathFilterPython.itkImageToPathFilterIUC3PLPP3_InputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC3 image)
        SetInput(self, unsigned int arg0, itkImageUC3 image)
        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIUC3PLPP3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC3
        GetInput(self, unsigned int idx) -> itkImageUC3
        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIUC3PLPP3_GetInput(self, *args)

    __swig_destroy__ = _itkImageToPathFilterPython.delete_itkImageToPathFilterIUC3PLPP3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToPathFilterIUC3PLPP3"""
        return _itkImageToPathFilterPython.itkImageToPathFilterIUC3PLPP3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToPathFilterIUC3PLPP3"""
        return _itkImageToPathFilterPython.itkImageToPathFilterIUC3PLPP3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToPathFilterIUC3PLPP3
        
        Create a new object of the class itkImageToPathFilterIUC3PLPP3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToPathFilterIUC3PLPP3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToPathFilterIUC3PLPP3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToPathFilterIUC3PLPP3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToPathFilterIUC3PLPP3.SetInput = new_instancemethod(_itkImageToPathFilterPython.itkImageToPathFilterIUC3PLPP3_SetInput,None,itkImageToPathFilterIUC3PLPP3)
itkImageToPathFilterIUC3PLPP3.GetInput = new_instancemethod(_itkImageToPathFilterPython.itkImageToPathFilterIUC3PLPP3_GetInput,None,itkImageToPathFilterIUC3PLPP3)
itkImageToPathFilterIUC3PLPP3.GetPointer = new_instancemethod(_itkImageToPathFilterPython.itkImageToPathFilterIUC3PLPP3_GetPointer,None,itkImageToPathFilterIUC3PLPP3)
itkImageToPathFilterIUC3PLPP3_swigregister = _itkImageToPathFilterPython.itkImageToPathFilterIUC3PLPP3_swigregister
itkImageToPathFilterIUC3PLPP3_swigregister(itkImageToPathFilterIUC3PLPP3)

def itkImageToPathFilterIUC3PLPP3_cast(*args):
  """itkImageToPathFilterIUC3PLPP3_cast(itkLightObject obj) -> itkImageToPathFilterIUC3PLPP3"""
  return _itkImageToPathFilterPython.itkImageToPathFilterIUC3PLPP3_cast(*args)

class itkImageToPathFilterIUL2PLPP2(itkPathSourcePython.itkPathSourcePLPP2):
    """Proxy of C++ itkImageToPathFilterIUL2PLPP2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToPathFilterPython.itkImageToPathFilterIUL2PLPP2_InputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL2 image)
        SetInput(self, unsigned int arg0, itkImageUL2 image)
        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIUL2PLPP2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL2
        GetInput(self, unsigned int idx) -> itkImageUL2
        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIUL2PLPP2_GetInput(self, *args)

    __swig_destroy__ = _itkImageToPathFilterPython.delete_itkImageToPathFilterIUL2PLPP2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToPathFilterIUL2PLPP2"""
        return _itkImageToPathFilterPython.itkImageToPathFilterIUL2PLPP2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToPathFilterIUL2PLPP2"""
        return _itkImageToPathFilterPython.itkImageToPathFilterIUL2PLPP2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToPathFilterIUL2PLPP2
        
        Create a new object of the class itkImageToPathFilterIUL2PLPP2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToPathFilterIUL2PLPP2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToPathFilterIUL2PLPP2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToPathFilterIUL2PLPP2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToPathFilterIUL2PLPP2.SetInput = new_instancemethod(_itkImageToPathFilterPython.itkImageToPathFilterIUL2PLPP2_SetInput,None,itkImageToPathFilterIUL2PLPP2)
itkImageToPathFilterIUL2PLPP2.GetInput = new_instancemethod(_itkImageToPathFilterPython.itkImageToPathFilterIUL2PLPP2_GetInput,None,itkImageToPathFilterIUL2PLPP2)
itkImageToPathFilterIUL2PLPP2.GetPointer = new_instancemethod(_itkImageToPathFilterPython.itkImageToPathFilterIUL2PLPP2_GetPointer,None,itkImageToPathFilterIUL2PLPP2)
itkImageToPathFilterIUL2PLPP2_swigregister = _itkImageToPathFilterPython.itkImageToPathFilterIUL2PLPP2_swigregister
itkImageToPathFilterIUL2PLPP2_swigregister(itkImageToPathFilterIUL2PLPP2)

def itkImageToPathFilterIUL2PLPP2_cast(*args):
  """itkImageToPathFilterIUL2PLPP2_cast(itkLightObject obj) -> itkImageToPathFilterIUL2PLPP2"""
  return _itkImageToPathFilterPython.itkImageToPathFilterIUL2PLPP2_cast(*args)

class itkImageToPathFilterIUL3PLPP3(itkPathSourcePython.itkPathSourcePLPP3):
    """Proxy of C++ itkImageToPathFilterIUL3PLPP3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToPathFilterPython.itkImageToPathFilterIUL3PLPP3_InputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL3 image)
        SetInput(self, unsigned int arg0, itkImageUL3 image)
        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIUL3PLPP3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL3
        GetInput(self, unsigned int idx) -> itkImageUL3
        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIUL3PLPP3_GetInput(self, *args)

    __swig_destroy__ = _itkImageToPathFilterPython.delete_itkImageToPathFilterIUL3PLPP3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToPathFilterIUL3PLPP3"""
        return _itkImageToPathFilterPython.itkImageToPathFilterIUL3PLPP3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToPathFilterIUL3PLPP3"""
        return _itkImageToPathFilterPython.itkImageToPathFilterIUL3PLPP3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToPathFilterIUL3PLPP3
        
        Create a new object of the class itkImageToPathFilterIUL3PLPP3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToPathFilterIUL3PLPP3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToPathFilterIUL3PLPP3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToPathFilterIUL3PLPP3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToPathFilterIUL3PLPP3.SetInput = new_instancemethod(_itkImageToPathFilterPython.itkImageToPathFilterIUL3PLPP3_SetInput,None,itkImageToPathFilterIUL3PLPP3)
itkImageToPathFilterIUL3PLPP3.GetInput = new_instancemethod(_itkImageToPathFilterPython.itkImageToPathFilterIUL3PLPP3_GetInput,None,itkImageToPathFilterIUL3PLPP3)
itkImageToPathFilterIUL3PLPP3.GetPointer = new_instancemethod(_itkImageToPathFilterPython.itkImageToPathFilterIUL3PLPP3_GetPointer,None,itkImageToPathFilterIUL3PLPP3)
itkImageToPathFilterIUL3PLPP3_swigregister = _itkImageToPathFilterPython.itkImageToPathFilterIUL3PLPP3_swigregister
itkImageToPathFilterIUL3PLPP3_swigregister(itkImageToPathFilterIUL3PLPP3)

def itkImageToPathFilterIUL3PLPP3_cast(*args):
  """itkImageToPathFilterIUL3PLPP3_cast(itkLightObject obj) -> itkImageToPathFilterIUL3PLPP3"""
  return _itkImageToPathFilterPython.itkImageToPathFilterIUL3PLPP3_cast(*args)

class itkImageToPathFilterIUS2PLPP2(itkPathSourcePython.itkPathSourcePLPP2):
    """Proxy of C++ itkImageToPathFilterIUS2PLPP2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToPathFilterPython.itkImageToPathFilterIUS2PLPP2_InputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS2 image)
        SetInput(self, unsigned int arg0, itkImageUS2 image)
        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIUS2PLPP2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS2
        GetInput(self, unsigned int idx) -> itkImageUS2
        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIUS2PLPP2_GetInput(self, *args)

    __swig_destroy__ = _itkImageToPathFilterPython.delete_itkImageToPathFilterIUS2PLPP2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToPathFilterIUS2PLPP2"""
        return _itkImageToPathFilterPython.itkImageToPathFilterIUS2PLPP2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToPathFilterIUS2PLPP2"""
        return _itkImageToPathFilterPython.itkImageToPathFilterIUS2PLPP2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToPathFilterIUS2PLPP2
        
        Create a new object of the class itkImageToPathFilterIUS2PLPP2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToPathFilterIUS2PLPP2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToPathFilterIUS2PLPP2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToPathFilterIUS2PLPP2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToPathFilterIUS2PLPP2.SetInput = new_instancemethod(_itkImageToPathFilterPython.itkImageToPathFilterIUS2PLPP2_SetInput,None,itkImageToPathFilterIUS2PLPP2)
itkImageToPathFilterIUS2PLPP2.GetInput = new_instancemethod(_itkImageToPathFilterPython.itkImageToPathFilterIUS2PLPP2_GetInput,None,itkImageToPathFilterIUS2PLPP2)
itkImageToPathFilterIUS2PLPP2.GetPointer = new_instancemethod(_itkImageToPathFilterPython.itkImageToPathFilterIUS2PLPP2_GetPointer,None,itkImageToPathFilterIUS2PLPP2)
itkImageToPathFilterIUS2PLPP2_swigregister = _itkImageToPathFilterPython.itkImageToPathFilterIUS2PLPP2_swigregister
itkImageToPathFilterIUS2PLPP2_swigregister(itkImageToPathFilterIUS2PLPP2)

def itkImageToPathFilterIUS2PLPP2_cast(*args):
  """itkImageToPathFilterIUS2PLPP2_cast(itkLightObject obj) -> itkImageToPathFilterIUS2PLPP2"""
  return _itkImageToPathFilterPython.itkImageToPathFilterIUS2PLPP2_cast(*args)

class itkImageToPathFilterIUS3PLPP3(itkPathSourcePython.itkPathSourcePLPP3):
    """Proxy of C++ itkImageToPathFilterIUS3PLPP3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToPathFilterPython.itkImageToPathFilterIUS3PLPP3_InputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS3 image)
        SetInput(self, unsigned int arg0, itkImageUS3 image)
        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIUS3PLPP3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS3
        GetInput(self, unsigned int idx) -> itkImageUS3
        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIUS3PLPP3_GetInput(self, *args)

    __swig_destroy__ = _itkImageToPathFilterPython.delete_itkImageToPathFilterIUS3PLPP3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToPathFilterIUS3PLPP3"""
        return _itkImageToPathFilterPython.itkImageToPathFilterIUS3PLPP3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToPathFilterIUS3PLPP3"""
        return _itkImageToPathFilterPython.itkImageToPathFilterIUS3PLPP3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToPathFilterIUS3PLPP3
        
        Create a new object of the class itkImageToPathFilterIUS3PLPP3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToPathFilterIUS3PLPP3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToPathFilterIUS3PLPP3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToPathFilterIUS3PLPP3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToPathFilterIUS3PLPP3.SetInput = new_instancemethod(_itkImageToPathFilterPython.itkImageToPathFilterIUS3PLPP3_SetInput,None,itkImageToPathFilterIUS3PLPP3)
itkImageToPathFilterIUS3PLPP3.GetInput = new_instancemethod(_itkImageToPathFilterPython.itkImageToPathFilterIUS3PLPP3_GetInput,None,itkImageToPathFilterIUS3PLPP3)
itkImageToPathFilterIUS3PLPP3.GetPointer = new_instancemethod(_itkImageToPathFilterPython.itkImageToPathFilterIUS3PLPP3_GetPointer,None,itkImageToPathFilterIUS3PLPP3)
itkImageToPathFilterIUS3PLPP3_swigregister = _itkImageToPathFilterPython.itkImageToPathFilterIUS3PLPP3_swigregister
itkImageToPathFilterIUS3PLPP3_swigregister(itkImageToPathFilterIUS3PLPP3)

def itkImageToPathFilterIUS3PLPP3_cast(*args):
  """itkImageToPathFilterIUS3PLPP3_cast(itkLightObject obj) -> itkImageToPathFilterIUS3PLPP3"""
  return _itkImageToPathFilterPython.itkImageToPathFilterIUS3PLPP3_cast(*args)



