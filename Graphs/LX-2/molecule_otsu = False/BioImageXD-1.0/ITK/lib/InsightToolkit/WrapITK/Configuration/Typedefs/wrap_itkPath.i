// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkPathChicken
#endif
#ifdef SWIGCSHARP
%module itkPathCsharp
#endif
#ifdef SWIGGUILE
%module itkPathGuile
#endif
#ifdef SWIGJAVA
%module itkPathJava
#endif
#ifdef SWIGLUA
%module itkPathLua
#endif
#ifdef SWIGMODULA3
%module itkPathModula3
#endif
#ifdef SWIGMZSCHEME
%module itkPathMzscheme
#endif
#ifdef SWIGOCAML
%module itkPathOcaml
#endif
#ifdef SWIGPERL
%module itkPathPerl
#endif
#ifdef SWIGPERL5
%module itkPathPerl5
#endif
#ifdef SWIGPHP
%module itkPathPhp
#endif
#ifdef SWIGPHP4
%module itkPathPhp4
#endif
#ifdef SWIGPHP5
%module itkPathPhp5
#endif
#ifdef SWIGPIKE
%module itkPathPike
#endif
#ifdef SWIGPYTHON
%module itkPathPython
#endif
#ifdef SWIGR
%module itkPathR
#endif
#ifdef SWIGRUBY
%module itkPathRuby
#endif
#ifdef SWIGSEXP
%module itkPathSexp
#endif
#ifdef SWIGTCL
%module itkPathTcl
#endif
#ifdef SWIGXML
%module itkPathXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkIndex.i
%import wrap_itkOffset.i
%import wrap_itkContinuousIndex.i


%include itk.i
%include wrap_itkPath_ext.i


 class itkPathDCID22 : public itkDataObject {
   public:
     enum  {  PathDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual double StartOfInput() const;
     virtual double EndOfInput() const;
     virtual itkContinuousIndexD2 Evaluate(double const & input) const = 0;
     virtual itkIndex2 EvaluateToIndex(double const & input) const = 0;
     virtual itkOffset2 IncrementInput(double & input) const = 0;
   private:
     itkPathDCID22(itkPathDCID22 const & arg0);
     void operator=(itkPathDCID22 const & arg0);
   protected:
     itkPathDCID22();
     ~itkPathDCID22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itkOffset2 GetZeroOffset() const;
     virtual itkIndex2 GetZeroIndex() const;
 };


 class itkPathDCID22_Pointer {
   public:
     itkPathDCID22_Pointer();
     itkPathDCID22_Pointer(itkPathDCID22_Pointer const & p);
     itkPathDCID22_Pointer(itkPathDCID22 * p);
     ~itkPathDCID22_Pointer();
     itkPathDCID22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkPathDCID22 * GetPointer() const;
     bool operator<(itkPathDCID22_Pointer const & r) const;
     bool operator>(itkPathDCID22_Pointer const & r) const;
     bool operator<=(itkPathDCID22_Pointer const & r) const;
     bool operator>=(itkPathDCID22_Pointer const & r) const;
     itkPathDCID22_Pointer & operator=(itkPathDCID22_Pointer const & r);
     itkPathDCID22_Pointer & operator=(itkPathDCID22 * r);
     itkPathDCID22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkPathDCID33 : public itkDataObject {
   public:
     enum  {  PathDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual double StartOfInput() const;
     virtual double EndOfInput() const;
     virtual itkContinuousIndexD3 Evaluate(double const & input) const = 0;
     virtual itkIndex3 EvaluateToIndex(double const & input) const = 0;
     virtual itkOffset3 IncrementInput(double & input) const = 0;
   private:
     itkPathDCID33(itkPathDCID33 const & arg0);
     void operator=(itkPathDCID33 const & arg0);
   protected:
     itkPathDCID33();
     ~itkPathDCID33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itkOffset3 GetZeroOffset() const;
     virtual itkIndex3 GetZeroIndex() const;
 };


 class itkPathDCID33_Pointer {
   public:
     itkPathDCID33_Pointer();
     itkPathDCID33_Pointer(itkPathDCID33_Pointer const & p);
     itkPathDCID33_Pointer(itkPathDCID33 * p);
     ~itkPathDCID33_Pointer();
     itkPathDCID33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkPathDCID33 * GetPointer() const;
     bool operator<(itkPathDCID33_Pointer const & r) const;
     bool operator>(itkPathDCID33_Pointer const & r) const;
     bool operator<=(itkPathDCID33_Pointer const & r) const;
     bool operator>=(itkPathDCID33_Pointer const & r) const;
     itkPathDCID33_Pointer & operator=(itkPathDCID33_Pointer const & r);
     itkPathDCID33_Pointer & operator=(itkPathDCID33 * r);
     itkPathDCID33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


