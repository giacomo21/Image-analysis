// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkCenteredTransformInitializerChicken
#endif
#ifdef SWIGCSHARP
%module itkCenteredTransformInitializerCsharp
#endif
#ifdef SWIGGUILE
%module itkCenteredTransformInitializerGuile
#endif
#ifdef SWIGJAVA
%module itkCenteredTransformInitializerJava
#endif
#ifdef SWIGLUA
%module itkCenteredTransformInitializerLua
#endif
#ifdef SWIGMODULA3
%module itkCenteredTransformInitializerModula3
#endif
#ifdef SWIGMZSCHEME
%module itkCenteredTransformInitializerMzscheme
#endif
#ifdef SWIGOCAML
%module itkCenteredTransformInitializerOcaml
#endif
#ifdef SWIGPERL
%module itkCenteredTransformInitializerPerl
#endif
#ifdef SWIGPERL5
%module itkCenteredTransformInitializerPerl5
#endif
#ifdef SWIGPHP
%module itkCenteredTransformInitializerPhp
#endif
#ifdef SWIGPHP4
%module itkCenteredTransformInitializerPhp4
#endif
#ifdef SWIGPHP5
%module itkCenteredTransformInitializerPhp5
#endif
#ifdef SWIGPIKE
%module itkCenteredTransformInitializerPike
#endif
#ifdef SWIGPYTHON
%module itkCenteredTransformInitializerPython
#endif
#ifdef SWIGR
%module itkCenteredTransformInitializerR
#endif
#ifdef SWIGRUBY
%module itkCenteredTransformInitializerRuby
#endif
#ifdef SWIGSEXP
%module itkCenteredTransformInitializerSexp
#endif
#ifdef SWIGTCL
%module itkCenteredTransformInitializerTcl
#endif
#ifdef SWIGXML
%module itkCenteredTransformInitializerXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "Calculators.includes"
#include "SpatialObject.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_ITKVersorRigidTransform.i
%import wrap_itkImage.i
%import wrap_itkImageMomentsCalculator.i


%include itk.i
%include wrap_itkCenteredTransformInitializer_ext.i


 class itkCenteredTransformInitializerVR3DTDID3ID3 : public itkObject {
   public:
     enum  {  InputSpaceDimension = 3 };
     enum  {  OutputSpaceDimension = 3 };
     static itkCenteredTransformInitializerVR3DTDID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetTransform(itkVersorRigid3DTransformD * _arg);
     virtual void SetFixedImage(itkImageD3 const * _arg);
     virtual void SetMovingImage(itkImageD3 const * _arg);
     virtual void InitializeTransform();
     void GeometryOn();
     void MomentsOn();
     virtual itkImageMomentsCalculatorID3 const * GetFixedCalculator() const;
     virtual itkImageMomentsCalculatorID3 const * GetMovingCalculator() const;
   private:
     itkCenteredTransformInitializerVR3DTDID3ID3(itkCenteredTransformInitializerVR3DTDID3ID3 const & arg0);
     void operator=(itkCenteredTransformInitializerVR3DTDID3ID3 const & arg0);
   protected:
     itkCenteredTransformInitializerVR3DTDID3ID3();
     ~itkCenteredTransformInitializerVR3DTDID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itkVersorRigid3DTransformD * GetTransform();
 };


 class itkCenteredTransformInitializerVR3DTDID3ID3_Pointer {
   public:
     itkCenteredTransformInitializerVR3DTDID3ID3_Pointer();
     itkCenteredTransformInitializerVR3DTDID3ID3_Pointer(itkCenteredTransformInitializerVR3DTDID3ID3_Pointer const & p);
     itkCenteredTransformInitializerVR3DTDID3ID3_Pointer(itkCenteredTransformInitializerVR3DTDID3ID3 * p);
     ~itkCenteredTransformInitializerVR3DTDID3ID3_Pointer();
     itkCenteredTransformInitializerVR3DTDID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkCenteredTransformInitializerVR3DTDID3ID3 * GetPointer() const;
     bool operator<(itkCenteredTransformInitializerVR3DTDID3ID3_Pointer const & r) const;
     bool operator>(itkCenteredTransformInitializerVR3DTDID3ID3_Pointer const & r) const;
     bool operator<=(itkCenteredTransformInitializerVR3DTDID3ID3_Pointer const & r) const;
     bool operator>=(itkCenteredTransformInitializerVR3DTDID3ID3_Pointer const & r) const;
     itkCenteredTransformInitializerVR3DTDID3ID3_Pointer & operator=(itkCenteredTransformInitializerVR3DTDID3ID3_Pointer const & r);
     itkCenteredTransformInitializerVR3DTDID3ID3_Pointer & operator=(itkCenteredTransformInitializerVR3DTDID3ID3 * r);
     itkCenteredTransformInitializerVR3DTDID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkCenteredTransformInitializerVR3DTDIF3IF3 : public itkObject {
   public:
     enum  {  InputSpaceDimension = 3 };
     enum  {  OutputSpaceDimension = 3 };
     static itkCenteredTransformInitializerVR3DTDIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetTransform(itkVersorRigid3DTransformD * _arg);
     virtual void SetFixedImage(itkImageF3 const * _arg);
     virtual void SetMovingImage(itkImageF3 const * _arg);
     virtual void InitializeTransform();
     void GeometryOn();
     void MomentsOn();
     virtual itkImageMomentsCalculatorIF3 const * GetFixedCalculator() const;
     virtual itkImageMomentsCalculatorIF3 const * GetMovingCalculator() const;
   private:
     itkCenteredTransformInitializerVR3DTDIF3IF3(itkCenteredTransformInitializerVR3DTDIF3IF3 const & arg0);
     void operator=(itkCenteredTransformInitializerVR3DTDIF3IF3 const & arg0);
   protected:
     itkCenteredTransformInitializerVR3DTDIF3IF3();
     ~itkCenteredTransformInitializerVR3DTDIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itkVersorRigid3DTransformD * GetTransform();
 };


 class itkCenteredTransformInitializerVR3DTDIF3IF3_Pointer {
   public:
     itkCenteredTransformInitializerVR3DTDIF3IF3_Pointer();
     itkCenteredTransformInitializerVR3DTDIF3IF3_Pointer(itkCenteredTransformInitializerVR3DTDIF3IF3_Pointer const & p);
     itkCenteredTransformInitializerVR3DTDIF3IF3_Pointer(itkCenteredTransformInitializerVR3DTDIF3IF3 * p);
     ~itkCenteredTransformInitializerVR3DTDIF3IF3_Pointer();
     itkCenteredTransformInitializerVR3DTDIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkCenteredTransformInitializerVR3DTDIF3IF3 * GetPointer() const;
     bool operator<(itkCenteredTransformInitializerVR3DTDIF3IF3_Pointer const & r) const;
     bool operator>(itkCenteredTransformInitializerVR3DTDIF3IF3_Pointer const & r) const;
     bool operator<=(itkCenteredTransformInitializerVR3DTDIF3IF3_Pointer const & r) const;
     bool operator>=(itkCenteredTransformInitializerVR3DTDIF3IF3_Pointer const & r) const;
     itkCenteredTransformInitializerVR3DTDIF3IF3_Pointer & operator=(itkCenteredTransformInitializerVR3DTDIF3IF3_Pointer const & r);
     itkCenteredTransformInitializerVR3DTDIF3IF3_Pointer & operator=(itkCenteredTransformInitializerVR3DTDIF3IF3 * r);
     itkCenteredTransformInitializerVR3DTDIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkCenteredTransformInitializerVR3DTDIUC3IUC3 : public itkObject {
   public:
     enum  {  InputSpaceDimension = 3 };
     enum  {  OutputSpaceDimension = 3 };
     static itkCenteredTransformInitializerVR3DTDIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetTransform(itkVersorRigid3DTransformD * _arg);
     virtual void SetFixedImage(itkImageUC3 const * _arg);
     virtual void SetMovingImage(itkImageUC3 const * _arg);
     virtual void InitializeTransform();
     void GeometryOn();
     void MomentsOn();
     virtual itkImageMomentsCalculatorIUC3 const * GetFixedCalculator() const;
     virtual itkImageMomentsCalculatorIUC3 const * GetMovingCalculator() const;
   private:
     itkCenteredTransformInitializerVR3DTDIUC3IUC3(itkCenteredTransformInitializerVR3DTDIUC3IUC3 const & arg0);
     void operator=(itkCenteredTransformInitializerVR3DTDIUC3IUC3 const & arg0);
   protected:
     itkCenteredTransformInitializerVR3DTDIUC3IUC3();
     ~itkCenteredTransformInitializerVR3DTDIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itkVersorRigid3DTransformD * GetTransform();
 };


 class itkCenteredTransformInitializerVR3DTDIUC3IUC3_Pointer {
   public:
     itkCenteredTransformInitializerVR3DTDIUC3IUC3_Pointer();
     itkCenteredTransformInitializerVR3DTDIUC3IUC3_Pointer(itkCenteredTransformInitializerVR3DTDIUC3IUC3_Pointer const & p);
     itkCenteredTransformInitializerVR3DTDIUC3IUC3_Pointer(itkCenteredTransformInitializerVR3DTDIUC3IUC3 * p);
     ~itkCenteredTransformInitializerVR3DTDIUC3IUC3_Pointer();
     itkCenteredTransformInitializerVR3DTDIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkCenteredTransformInitializerVR3DTDIUC3IUC3 * GetPointer() const;
     bool operator<(itkCenteredTransformInitializerVR3DTDIUC3IUC3_Pointer const & r) const;
     bool operator>(itkCenteredTransformInitializerVR3DTDIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkCenteredTransformInitializerVR3DTDIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkCenteredTransformInitializerVR3DTDIUC3IUC3_Pointer const & r) const;
     itkCenteredTransformInitializerVR3DTDIUC3IUC3_Pointer & operator=(itkCenteredTransformInitializerVR3DTDIUC3IUC3_Pointer const & r);
     itkCenteredTransformInitializerVR3DTDIUC3IUC3_Pointer & operator=(itkCenteredTransformInitializerVR3DTDIUC3IUC3 * r);
     itkCenteredTransformInitializerVR3DTDIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkCenteredTransformInitializerVR3DTDIUL3IUL3 : public itkObject {
   public:
     enum  {  InputSpaceDimension = 3 };
     enum  {  OutputSpaceDimension = 3 };
     static itkCenteredTransformInitializerVR3DTDIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetTransform(itkVersorRigid3DTransformD * _arg);
     virtual void SetFixedImage(itkImageUL3 const * _arg);
     virtual void SetMovingImage(itkImageUL3 const * _arg);
     virtual void InitializeTransform();
     void GeometryOn();
     void MomentsOn();
     virtual itkImageMomentsCalculatorIUL3 const * GetFixedCalculator() const;
     virtual itkImageMomentsCalculatorIUL3 const * GetMovingCalculator() const;
   private:
     itkCenteredTransformInitializerVR3DTDIUL3IUL3(itkCenteredTransformInitializerVR3DTDIUL3IUL3 const & arg0);
     void operator=(itkCenteredTransformInitializerVR3DTDIUL3IUL3 const & arg0);
   protected:
     itkCenteredTransformInitializerVR3DTDIUL3IUL3();
     ~itkCenteredTransformInitializerVR3DTDIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itkVersorRigid3DTransformD * GetTransform();
 };


 class itkCenteredTransformInitializerVR3DTDIUL3IUL3_Pointer {
   public:
     itkCenteredTransformInitializerVR3DTDIUL3IUL3_Pointer();
     itkCenteredTransformInitializerVR3DTDIUL3IUL3_Pointer(itkCenteredTransformInitializerVR3DTDIUL3IUL3_Pointer const & p);
     itkCenteredTransformInitializerVR3DTDIUL3IUL3_Pointer(itkCenteredTransformInitializerVR3DTDIUL3IUL3 * p);
     ~itkCenteredTransformInitializerVR3DTDIUL3IUL3_Pointer();
     itkCenteredTransformInitializerVR3DTDIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkCenteredTransformInitializerVR3DTDIUL3IUL3 * GetPointer() const;
     bool operator<(itkCenteredTransformInitializerVR3DTDIUL3IUL3_Pointer const & r) const;
     bool operator>(itkCenteredTransformInitializerVR3DTDIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkCenteredTransformInitializerVR3DTDIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkCenteredTransformInitializerVR3DTDIUL3IUL3_Pointer const & r) const;
     itkCenteredTransformInitializerVR3DTDIUL3IUL3_Pointer & operator=(itkCenteredTransformInitializerVR3DTDIUL3IUL3_Pointer const & r);
     itkCenteredTransformInitializerVR3DTDIUL3IUL3_Pointer & operator=(itkCenteredTransformInitializerVR3DTDIUL3IUL3 * r);
     itkCenteredTransformInitializerVR3DTDIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkCenteredTransformInitializerVR3DTDIUS3IUS3 : public itkObject {
   public:
     enum  {  InputSpaceDimension = 3 };
     enum  {  OutputSpaceDimension = 3 };
     static itkCenteredTransformInitializerVR3DTDIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetTransform(itkVersorRigid3DTransformD * _arg);
     virtual void SetFixedImage(itkImageUS3 const * _arg);
     virtual void SetMovingImage(itkImageUS3 const * _arg);
     virtual void InitializeTransform();
     void GeometryOn();
     void MomentsOn();
     virtual itkImageMomentsCalculatorIUS3 const * GetFixedCalculator() const;
     virtual itkImageMomentsCalculatorIUS3 const * GetMovingCalculator() const;
   private:
     itkCenteredTransformInitializerVR3DTDIUS3IUS3(itkCenteredTransformInitializerVR3DTDIUS3IUS3 const & arg0);
     void operator=(itkCenteredTransformInitializerVR3DTDIUS3IUS3 const & arg0);
   protected:
     itkCenteredTransformInitializerVR3DTDIUS3IUS3();
     ~itkCenteredTransformInitializerVR3DTDIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itkVersorRigid3DTransformD * GetTransform();
 };


 class itkCenteredTransformInitializerVR3DTDIUS3IUS3_Pointer {
   public:
     itkCenteredTransformInitializerVR3DTDIUS3IUS3_Pointer();
     itkCenteredTransformInitializerVR3DTDIUS3IUS3_Pointer(itkCenteredTransformInitializerVR3DTDIUS3IUS3_Pointer const & p);
     itkCenteredTransformInitializerVR3DTDIUS3IUS3_Pointer(itkCenteredTransformInitializerVR3DTDIUS3IUS3 * p);
     ~itkCenteredTransformInitializerVR3DTDIUS3IUS3_Pointer();
     itkCenteredTransformInitializerVR3DTDIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkCenteredTransformInitializerVR3DTDIUS3IUS3 * GetPointer() const;
     bool operator<(itkCenteredTransformInitializerVR3DTDIUS3IUS3_Pointer const & r) const;
     bool operator>(itkCenteredTransformInitializerVR3DTDIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkCenteredTransformInitializerVR3DTDIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkCenteredTransformInitializerVR3DTDIUS3IUS3_Pointer const & r) const;
     itkCenteredTransformInitializerVR3DTDIUS3IUS3_Pointer & operator=(itkCenteredTransformInitializerVR3DTDIUS3IUS3_Pointer const & r);
     itkCenteredTransformInitializerVR3DTDIUS3IUS3_Pointer & operator=(itkCenteredTransformInitializerVR3DTDIUS3IUS3 * r);
     itkCenteredTransformInitializerVR3DTDIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


