// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkESMDemonsRegistrationFunctionChicken
#endif
#ifdef SWIGCSHARP
%module itkESMDemonsRegistrationFunctionCsharp
#endif
#ifdef SWIGGUILE
%module itkESMDemonsRegistrationFunctionGuile
#endif
#ifdef SWIGJAVA
%module itkESMDemonsRegistrationFunctionJava
#endif
#ifdef SWIGLUA
%module itkESMDemonsRegistrationFunctionLua
#endif
#ifdef SWIGMODULA3
%module itkESMDemonsRegistrationFunctionModula3
#endif
#ifdef SWIGMZSCHEME
%module itkESMDemonsRegistrationFunctionMzscheme
#endif
#ifdef SWIGOCAML
%module itkESMDemonsRegistrationFunctionOcaml
#endif
#ifdef SWIGPERL
%module itkESMDemonsRegistrationFunctionPerl
#endif
#ifdef SWIGPERL5
%module itkESMDemonsRegistrationFunctionPerl5
#endif
#ifdef SWIGPHP
%module itkESMDemonsRegistrationFunctionPhp
#endif
#ifdef SWIGPHP4
%module itkESMDemonsRegistrationFunctionPhp4
#endif
#ifdef SWIGPHP5
%module itkESMDemonsRegistrationFunctionPhp5
#endif
#ifdef SWIGPIKE
%module itkESMDemonsRegistrationFunctionPike
#endif
#ifdef SWIGPYTHON
%module itkESMDemonsRegistrationFunctionPython
#endif
#ifdef SWIGR
%module itkESMDemonsRegistrationFunctionR
#endif
#ifdef SWIGRUBY
%module itkESMDemonsRegistrationFunctionRuby
#endif
#ifdef SWIGSEXP
%module itkESMDemonsRegistrationFunctionSexp
#endif
#ifdef SWIGTCL
%module itkESMDemonsRegistrationFunctionTcl
#endif
#ifdef SWIGXML
%module itkESMDemonsRegistrationFunctionXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Numerics.includes"
#include "Transforms.includes"
#include "SpatialObject.includes"
#include "Resize.includes"
#include "Calculators.includes"
#include "Registration.includes"
%}


%{
%}




%import wrap_itkPDEDeformableRegistrationFunction.i
%import wrap_ITKCommonBase.i
%import wrap_itkVector.i
%import wrap_itkInterpolateImageFunction.i


%include itk.i
%include wrap_itkESMDemonsRegistrationFunction_ext.i


 class itkESMDemonsRegistrationFunctionID2ID2IVF22 : public itkPDEDeformableRegistrationFunctionID2ID2IVF22 {
   public:
     enum  {  ImageDimension = 2 };
     enum GradientType {  Symmetric = 0,  Fixed = 1,  WarpedMoving = 2,  MappedMoving = 3 };
     static itkESMDemonsRegistrationFunctionID2ID2IVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMovingImageInterpolator(itkInterpolateImageFunctionID2D * ptr);
     itkInterpolateImageFunctionID2D * GetMovingImageInterpolator();
     virtual double ComputeGlobalTimeStep(void * arg0) const;
     virtual void * GetGlobalDataPointer() const;
     virtual void ReleaseGlobalDataPointer(void * GlobalData) const;
     virtual void InitializeIteration();
     virtual itkVectorF2 ComputeUpdate(itk::ConstNeighborhoodIterator< itk::Image< itk::Vector< float, 2u >, 2u >, itk::ZeroFluxNeumannBoundaryCondition< itk::Image< itk::Vector< float, 2u >, 2u > > > const & neighborhood, void * globalData, itkVectorF2 const & offset = (typename itk::PDEDeformableRegistrationFunction<TFixedImage, TMovingImage, TDeformationField>::FloatOffsetType)(0.0));
     virtual double GetMetric() const;
     virtual double const & GetRMSChange() const;
     virtual void SetIntensityDifferenceThreshold(double arg0);
     virtual double GetIntensityDifferenceThreshold() const;
     virtual void SetMaximumUpdateStepLength(double sm);
     virtual double GetMaximumUpdateStepLength() const;
     virtual void SetUseGradientType(itkESMDemonsRegistrationFunctionID2ID2IVF22::GradientType gtype);
     virtual itkESMDemonsRegistrationFunctionID2ID2IVF22::GradientType GetUseGradientType() const;
   private:
     itkESMDemonsRegistrationFunctionID2ID2IVF22(itkESMDemonsRegistrationFunctionID2ID2IVF22 const & arg0);
     void operator=(itkESMDemonsRegistrationFunctionID2ID2IVF22 const & arg0);
   protected:
     itkESMDemonsRegistrationFunctionID2ID2IVF22();
     ~itkESMDemonsRegistrationFunctionID2ID2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkESMDemonsRegistrationFunctionID2ID2IVF22_Pointer {
   public:
     itkESMDemonsRegistrationFunctionID2ID2IVF22_Pointer();
     itkESMDemonsRegistrationFunctionID2ID2IVF22_Pointer(itkESMDemonsRegistrationFunctionID2ID2IVF22_Pointer const & p);
     itkESMDemonsRegistrationFunctionID2ID2IVF22_Pointer(itkESMDemonsRegistrationFunctionID2ID2IVF22 * p);
     ~itkESMDemonsRegistrationFunctionID2ID2IVF22_Pointer();
     itkESMDemonsRegistrationFunctionID2ID2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkESMDemonsRegistrationFunctionID2ID2IVF22 * GetPointer() const;
     bool operator<(itkESMDemonsRegistrationFunctionID2ID2IVF22_Pointer const & r) const;
     bool operator>(itkESMDemonsRegistrationFunctionID2ID2IVF22_Pointer const & r) const;
     bool operator<=(itkESMDemonsRegistrationFunctionID2ID2IVF22_Pointer const & r) const;
     bool operator>=(itkESMDemonsRegistrationFunctionID2ID2IVF22_Pointer const & r) const;
     itkESMDemonsRegistrationFunctionID2ID2IVF22_Pointer & operator=(itkESMDemonsRegistrationFunctionID2ID2IVF22_Pointer const & r);
     itkESMDemonsRegistrationFunctionID2ID2IVF22_Pointer & operator=(itkESMDemonsRegistrationFunctionID2ID2IVF22 * r);
     itkESMDemonsRegistrationFunctionID2ID2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkESMDemonsRegistrationFunctionID3ID3IVF33 : public itkPDEDeformableRegistrationFunctionID3ID3IVF33 {
   public:
     enum  {  ImageDimension = 3 };
     enum GradientType {  Symmetric = 0,  Fixed = 1,  WarpedMoving = 2,  MappedMoving = 3 };
     static itkESMDemonsRegistrationFunctionID3ID3IVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMovingImageInterpolator(itkInterpolateImageFunctionID3D * ptr);
     itkInterpolateImageFunctionID3D * GetMovingImageInterpolator();
     virtual double ComputeGlobalTimeStep(void * arg0) const;
     virtual void * GetGlobalDataPointer() const;
     virtual void ReleaseGlobalDataPointer(void * GlobalData) const;
     virtual void InitializeIteration();
     virtual itkVectorF3 ComputeUpdate(itk::ConstNeighborhoodIterator< itk::Image< itk::Vector< float, 3u >, 3u >, itk::ZeroFluxNeumannBoundaryCondition< itk::Image< itk::Vector< float, 3u >, 3u > > > const & neighborhood, void * globalData, itkVectorF3 const & offset = (typename itk::PDEDeformableRegistrationFunction<TFixedImage, TMovingImage, TDeformationField>::FloatOffsetType)(0.0));
     virtual double GetMetric() const;
     virtual double const & GetRMSChange() const;
     virtual void SetIntensityDifferenceThreshold(double arg0);
     virtual double GetIntensityDifferenceThreshold() const;
     virtual void SetMaximumUpdateStepLength(double sm);
     virtual double GetMaximumUpdateStepLength() const;
     virtual void SetUseGradientType(itkESMDemonsRegistrationFunctionID3ID3IVF33::GradientType gtype);
     virtual itkESMDemonsRegistrationFunctionID3ID3IVF33::GradientType GetUseGradientType() const;
   private:
     itkESMDemonsRegistrationFunctionID3ID3IVF33(itkESMDemonsRegistrationFunctionID3ID3IVF33 const & arg0);
     void operator=(itkESMDemonsRegistrationFunctionID3ID3IVF33 const & arg0);
   protected:
     itkESMDemonsRegistrationFunctionID3ID3IVF33();
     ~itkESMDemonsRegistrationFunctionID3ID3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkESMDemonsRegistrationFunctionID3ID3IVF33_Pointer {
   public:
     itkESMDemonsRegistrationFunctionID3ID3IVF33_Pointer();
     itkESMDemonsRegistrationFunctionID3ID3IVF33_Pointer(itkESMDemonsRegistrationFunctionID3ID3IVF33_Pointer const & p);
     itkESMDemonsRegistrationFunctionID3ID3IVF33_Pointer(itkESMDemonsRegistrationFunctionID3ID3IVF33 * p);
     ~itkESMDemonsRegistrationFunctionID3ID3IVF33_Pointer();
     itkESMDemonsRegistrationFunctionID3ID3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkESMDemonsRegistrationFunctionID3ID3IVF33 * GetPointer() const;
     bool operator<(itkESMDemonsRegistrationFunctionID3ID3IVF33_Pointer const & r) const;
     bool operator>(itkESMDemonsRegistrationFunctionID3ID3IVF33_Pointer const & r) const;
     bool operator<=(itkESMDemonsRegistrationFunctionID3ID3IVF33_Pointer const & r) const;
     bool operator>=(itkESMDemonsRegistrationFunctionID3ID3IVF33_Pointer const & r) const;
     itkESMDemonsRegistrationFunctionID3ID3IVF33_Pointer & operator=(itkESMDemonsRegistrationFunctionID3ID3IVF33_Pointer const & r);
     itkESMDemonsRegistrationFunctionID3ID3IVF33_Pointer & operator=(itkESMDemonsRegistrationFunctionID3ID3IVF33 * r);
     itkESMDemonsRegistrationFunctionID3ID3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkESMDemonsRegistrationFunctionIF2IF2IVF22 : public itkPDEDeformableRegistrationFunctionIF2IF2IVF22 {
   public:
     enum  {  ImageDimension = 2 };
     enum GradientType {  Symmetric = 0,  Fixed = 1,  WarpedMoving = 2,  MappedMoving = 3 };
     static itkESMDemonsRegistrationFunctionIF2IF2IVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMovingImageInterpolator(itkInterpolateImageFunctionIF2D * ptr);
     itkInterpolateImageFunctionIF2D * GetMovingImageInterpolator();
     virtual double ComputeGlobalTimeStep(void * arg0) const;
     virtual void * GetGlobalDataPointer() const;
     virtual void ReleaseGlobalDataPointer(void * GlobalData) const;
     virtual void InitializeIteration();
     virtual itkVectorF2 ComputeUpdate(itk::ConstNeighborhoodIterator< itk::Image< itk::Vector< float, 2u >, 2u >, itk::ZeroFluxNeumannBoundaryCondition< itk::Image< itk::Vector< float, 2u >, 2u > > > const & neighborhood, void * globalData, itkVectorF2 const & offset = (typename itk::PDEDeformableRegistrationFunction<TFixedImage, TMovingImage, TDeformationField>::FloatOffsetType)(0.0));
     virtual double GetMetric() const;
     virtual double const & GetRMSChange() const;
     virtual void SetIntensityDifferenceThreshold(double arg0);
     virtual double GetIntensityDifferenceThreshold() const;
     virtual void SetMaximumUpdateStepLength(double sm);
     virtual double GetMaximumUpdateStepLength() const;
     virtual void SetUseGradientType(itkESMDemonsRegistrationFunctionIF2IF2IVF22::GradientType gtype);
     virtual itkESMDemonsRegistrationFunctionIF2IF2IVF22::GradientType GetUseGradientType() const;
   private:
     itkESMDemonsRegistrationFunctionIF2IF2IVF22(itkESMDemonsRegistrationFunctionIF2IF2IVF22 const & arg0);
     void operator=(itkESMDemonsRegistrationFunctionIF2IF2IVF22 const & arg0);
   protected:
     itkESMDemonsRegistrationFunctionIF2IF2IVF22();
     ~itkESMDemonsRegistrationFunctionIF2IF2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkESMDemonsRegistrationFunctionIF2IF2IVF22_Pointer {
   public:
     itkESMDemonsRegistrationFunctionIF2IF2IVF22_Pointer();
     itkESMDemonsRegistrationFunctionIF2IF2IVF22_Pointer(itkESMDemonsRegistrationFunctionIF2IF2IVF22_Pointer const & p);
     itkESMDemonsRegistrationFunctionIF2IF2IVF22_Pointer(itkESMDemonsRegistrationFunctionIF2IF2IVF22 * p);
     ~itkESMDemonsRegistrationFunctionIF2IF2IVF22_Pointer();
     itkESMDemonsRegistrationFunctionIF2IF2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkESMDemonsRegistrationFunctionIF2IF2IVF22 * GetPointer() const;
     bool operator<(itkESMDemonsRegistrationFunctionIF2IF2IVF22_Pointer const & r) const;
     bool operator>(itkESMDemonsRegistrationFunctionIF2IF2IVF22_Pointer const & r) const;
     bool operator<=(itkESMDemonsRegistrationFunctionIF2IF2IVF22_Pointer const & r) const;
     bool operator>=(itkESMDemonsRegistrationFunctionIF2IF2IVF22_Pointer const & r) const;
     itkESMDemonsRegistrationFunctionIF2IF2IVF22_Pointer & operator=(itkESMDemonsRegistrationFunctionIF2IF2IVF22_Pointer const & r);
     itkESMDemonsRegistrationFunctionIF2IF2IVF22_Pointer & operator=(itkESMDemonsRegistrationFunctionIF2IF2IVF22 * r);
     itkESMDemonsRegistrationFunctionIF2IF2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkESMDemonsRegistrationFunctionIF3IF3IVF33 : public itkPDEDeformableRegistrationFunctionIF3IF3IVF33 {
   public:
     enum  {  ImageDimension = 3 };
     enum GradientType {  Symmetric = 0,  Fixed = 1,  WarpedMoving = 2,  MappedMoving = 3 };
     static itkESMDemonsRegistrationFunctionIF3IF3IVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMovingImageInterpolator(itkInterpolateImageFunctionIF3D * ptr);
     itkInterpolateImageFunctionIF3D * GetMovingImageInterpolator();
     virtual double ComputeGlobalTimeStep(void * arg0) const;
     virtual void * GetGlobalDataPointer() const;
     virtual void ReleaseGlobalDataPointer(void * GlobalData) const;
     virtual void InitializeIteration();
     virtual itkVectorF3 ComputeUpdate(itk::ConstNeighborhoodIterator< itk::Image< itk::Vector< float, 3u >, 3u >, itk::ZeroFluxNeumannBoundaryCondition< itk::Image< itk::Vector< float, 3u >, 3u > > > const & neighborhood, void * globalData, itkVectorF3 const & offset = (typename itk::PDEDeformableRegistrationFunction<TFixedImage, TMovingImage, TDeformationField>::FloatOffsetType)(0.0));
     virtual double GetMetric() const;
     virtual double const & GetRMSChange() const;
     virtual void SetIntensityDifferenceThreshold(double arg0);
     virtual double GetIntensityDifferenceThreshold() const;
     virtual void SetMaximumUpdateStepLength(double sm);
     virtual double GetMaximumUpdateStepLength() const;
     virtual void SetUseGradientType(itkESMDemonsRegistrationFunctionIF3IF3IVF33::GradientType gtype);
     virtual itkESMDemonsRegistrationFunctionIF3IF3IVF33::GradientType GetUseGradientType() const;
   private:
     itkESMDemonsRegistrationFunctionIF3IF3IVF33(itkESMDemonsRegistrationFunctionIF3IF3IVF33 const & arg0);
     void operator=(itkESMDemonsRegistrationFunctionIF3IF3IVF33 const & arg0);
   protected:
     itkESMDemonsRegistrationFunctionIF3IF3IVF33();
     ~itkESMDemonsRegistrationFunctionIF3IF3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkESMDemonsRegistrationFunctionIF3IF3IVF33_Pointer {
   public:
     itkESMDemonsRegistrationFunctionIF3IF3IVF33_Pointer();
     itkESMDemonsRegistrationFunctionIF3IF3IVF33_Pointer(itkESMDemonsRegistrationFunctionIF3IF3IVF33_Pointer const & p);
     itkESMDemonsRegistrationFunctionIF3IF3IVF33_Pointer(itkESMDemonsRegistrationFunctionIF3IF3IVF33 * p);
     ~itkESMDemonsRegistrationFunctionIF3IF3IVF33_Pointer();
     itkESMDemonsRegistrationFunctionIF3IF3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkESMDemonsRegistrationFunctionIF3IF3IVF33 * GetPointer() const;
     bool operator<(itkESMDemonsRegistrationFunctionIF3IF3IVF33_Pointer const & r) const;
     bool operator>(itkESMDemonsRegistrationFunctionIF3IF3IVF33_Pointer const & r) const;
     bool operator<=(itkESMDemonsRegistrationFunctionIF3IF3IVF33_Pointer const & r) const;
     bool operator>=(itkESMDemonsRegistrationFunctionIF3IF3IVF33_Pointer const & r) const;
     itkESMDemonsRegistrationFunctionIF3IF3IVF33_Pointer & operator=(itkESMDemonsRegistrationFunctionIF3IF3IVF33_Pointer const & r);
     itkESMDemonsRegistrationFunctionIF3IF3IVF33_Pointer & operator=(itkESMDemonsRegistrationFunctionIF3IF3IVF33 * r);
     itkESMDemonsRegistrationFunctionIF3IF3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkESMDemonsRegistrationFunctionIUC2IUC2IVF22 : public itkPDEDeformableRegistrationFunctionIUC2IUC2IVF22 {
   public:
     enum  {  ImageDimension = 2 };
     enum GradientType {  Symmetric = 0,  Fixed = 1,  WarpedMoving = 2,  MappedMoving = 3 };
     static itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMovingImageInterpolator(itkInterpolateImageFunctionIUC2D * ptr);
     itkInterpolateImageFunctionIUC2D * GetMovingImageInterpolator();
     virtual double ComputeGlobalTimeStep(void * arg0) const;
     virtual void * GetGlobalDataPointer() const;
     virtual void ReleaseGlobalDataPointer(void * GlobalData) const;
     virtual void InitializeIteration();
     virtual itkVectorF2 ComputeUpdate(itk::ConstNeighborhoodIterator< itk::Image< itk::Vector< float, 2u >, 2u >, itk::ZeroFluxNeumannBoundaryCondition< itk::Image< itk::Vector< float, 2u >, 2u > > > const & neighborhood, void * globalData, itkVectorF2 const & offset = (typename itk::PDEDeformableRegistrationFunction<TFixedImage, TMovingImage, TDeformationField>::FloatOffsetType)(0.0));
     virtual double GetMetric() const;
     virtual double const & GetRMSChange() const;
     virtual void SetIntensityDifferenceThreshold(double arg0);
     virtual double GetIntensityDifferenceThreshold() const;
     virtual void SetMaximumUpdateStepLength(double sm);
     virtual double GetMaximumUpdateStepLength() const;
     virtual void SetUseGradientType(itkESMDemonsRegistrationFunctionIUC2IUC2IVF22::GradientType gtype);
     virtual itkESMDemonsRegistrationFunctionIUC2IUC2IVF22::GradientType GetUseGradientType() const;
   private:
     itkESMDemonsRegistrationFunctionIUC2IUC2IVF22(itkESMDemonsRegistrationFunctionIUC2IUC2IVF22 const & arg0);
     void operator=(itkESMDemonsRegistrationFunctionIUC2IUC2IVF22 const & arg0);
   protected:
     itkESMDemonsRegistrationFunctionIUC2IUC2IVF22();
     ~itkESMDemonsRegistrationFunctionIUC2IUC2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_Pointer {
   public:
     itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_Pointer();
     itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_Pointer(itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_Pointer const & p);
     itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_Pointer(itkESMDemonsRegistrationFunctionIUC2IUC2IVF22 * p);
     ~itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_Pointer();
     itkESMDemonsRegistrationFunctionIUC2IUC2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkESMDemonsRegistrationFunctionIUC2IUC2IVF22 * GetPointer() const;
     bool operator<(itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_Pointer const & r) const;
     bool operator>(itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_Pointer const & r) const;
     bool operator<=(itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_Pointer const & r) const;
     bool operator>=(itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_Pointer const & r) const;
     itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_Pointer & operator=(itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_Pointer const & r);
     itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_Pointer & operator=(itkESMDemonsRegistrationFunctionIUC2IUC2IVF22 * r);
     itkESMDemonsRegistrationFunctionIUC2IUC2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkESMDemonsRegistrationFunctionIUC3IUC3IVF33 : public itkPDEDeformableRegistrationFunctionIUC3IUC3IVF33 {
   public:
     enum  {  ImageDimension = 3 };
     enum GradientType {  Symmetric = 0,  Fixed = 1,  WarpedMoving = 2,  MappedMoving = 3 };
     static itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMovingImageInterpolator(itkInterpolateImageFunctionIUC3D * ptr);
     itkInterpolateImageFunctionIUC3D * GetMovingImageInterpolator();
     virtual double ComputeGlobalTimeStep(void * arg0) const;
     virtual void * GetGlobalDataPointer() const;
     virtual void ReleaseGlobalDataPointer(void * GlobalData) const;
     virtual void InitializeIteration();
     virtual itkVectorF3 ComputeUpdate(itk::ConstNeighborhoodIterator< itk::Image< itk::Vector< float, 3u >, 3u >, itk::ZeroFluxNeumannBoundaryCondition< itk::Image< itk::Vector< float, 3u >, 3u > > > const & neighborhood, void * globalData, itkVectorF3 const & offset = (typename itk::PDEDeformableRegistrationFunction<TFixedImage, TMovingImage, TDeformationField>::FloatOffsetType)(0.0));
     virtual double GetMetric() const;
     virtual double const & GetRMSChange() const;
     virtual void SetIntensityDifferenceThreshold(double arg0);
     virtual double GetIntensityDifferenceThreshold() const;
     virtual void SetMaximumUpdateStepLength(double sm);
     virtual double GetMaximumUpdateStepLength() const;
     virtual void SetUseGradientType(itkESMDemonsRegistrationFunctionIUC3IUC3IVF33::GradientType gtype);
     virtual itkESMDemonsRegistrationFunctionIUC3IUC3IVF33::GradientType GetUseGradientType() const;
   private:
     itkESMDemonsRegistrationFunctionIUC3IUC3IVF33(itkESMDemonsRegistrationFunctionIUC3IUC3IVF33 const & arg0);
     void operator=(itkESMDemonsRegistrationFunctionIUC3IUC3IVF33 const & arg0);
   protected:
     itkESMDemonsRegistrationFunctionIUC3IUC3IVF33();
     ~itkESMDemonsRegistrationFunctionIUC3IUC3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_Pointer {
   public:
     itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_Pointer();
     itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_Pointer(itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_Pointer const & p);
     itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_Pointer(itkESMDemonsRegistrationFunctionIUC3IUC3IVF33 * p);
     ~itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_Pointer();
     itkESMDemonsRegistrationFunctionIUC3IUC3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkESMDemonsRegistrationFunctionIUC3IUC3IVF33 * GetPointer() const;
     bool operator<(itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_Pointer const & r) const;
     bool operator>(itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_Pointer const & r) const;
     bool operator<=(itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_Pointer const & r) const;
     bool operator>=(itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_Pointer const & r) const;
     itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_Pointer & operator=(itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_Pointer const & r);
     itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_Pointer & operator=(itkESMDemonsRegistrationFunctionIUC3IUC3IVF33 * r);
     itkESMDemonsRegistrationFunctionIUC3IUC3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkESMDemonsRegistrationFunctionIUL2IUL2IVF22 : public itkPDEDeformableRegistrationFunctionIUL2IUL2IVF22 {
   public:
     enum  {  ImageDimension = 2 };
     enum GradientType {  Symmetric = 0,  Fixed = 1,  WarpedMoving = 2,  MappedMoving = 3 };
     static itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMovingImageInterpolator(itkInterpolateImageFunctionIUL2D * ptr);
     itkInterpolateImageFunctionIUL2D * GetMovingImageInterpolator();
     virtual double ComputeGlobalTimeStep(void * arg0) const;
     virtual void * GetGlobalDataPointer() const;
     virtual void ReleaseGlobalDataPointer(void * GlobalData) const;
     virtual void InitializeIteration();
     virtual itkVectorF2 ComputeUpdate(itk::ConstNeighborhoodIterator< itk::Image< itk::Vector< float, 2u >, 2u >, itk::ZeroFluxNeumannBoundaryCondition< itk::Image< itk::Vector< float, 2u >, 2u > > > const & neighborhood, void * globalData, itkVectorF2 const & offset = (typename itk::PDEDeformableRegistrationFunction<TFixedImage, TMovingImage, TDeformationField>::FloatOffsetType)(0.0));
     virtual double GetMetric() const;
     virtual double const & GetRMSChange() const;
     virtual void SetIntensityDifferenceThreshold(double arg0);
     virtual double GetIntensityDifferenceThreshold() const;
     virtual void SetMaximumUpdateStepLength(double sm);
     virtual double GetMaximumUpdateStepLength() const;
     virtual void SetUseGradientType(itkESMDemonsRegistrationFunctionIUL2IUL2IVF22::GradientType gtype);
     virtual itkESMDemonsRegistrationFunctionIUL2IUL2IVF22::GradientType GetUseGradientType() const;
   private:
     itkESMDemonsRegistrationFunctionIUL2IUL2IVF22(itkESMDemonsRegistrationFunctionIUL2IUL2IVF22 const & arg0);
     void operator=(itkESMDemonsRegistrationFunctionIUL2IUL2IVF22 const & arg0);
   protected:
     itkESMDemonsRegistrationFunctionIUL2IUL2IVF22();
     ~itkESMDemonsRegistrationFunctionIUL2IUL2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_Pointer {
   public:
     itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_Pointer();
     itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_Pointer(itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_Pointer const & p);
     itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_Pointer(itkESMDemonsRegistrationFunctionIUL2IUL2IVF22 * p);
     ~itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_Pointer();
     itkESMDemonsRegistrationFunctionIUL2IUL2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkESMDemonsRegistrationFunctionIUL2IUL2IVF22 * GetPointer() const;
     bool operator<(itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_Pointer const & r) const;
     bool operator>(itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_Pointer const & r) const;
     bool operator<=(itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_Pointer const & r) const;
     bool operator>=(itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_Pointer const & r) const;
     itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_Pointer & operator=(itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_Pointer const & r);
     itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_Pointer & operator=(itkESMDemonsRegistrationFunctionIUL2IUL2IVF22 * r);
     itkESMDemonsRegistrationFunctionIUL2IUL2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkESMDemonsRegistrationFunctionIUL3IUL3IVF33 : public itkPDEDeformableRegistrationFunctionIUL3IUL3IVF33 {
   public:
     enum  {  ImageDimension = 3 };
     enum GradientType {  Symmetric = 0,  Fixed = 1,  WarpedMoving = 2,  MappedMoving = 3 };
     static itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMovingImageInterpolator(itkInterpolateImageFunctionIUL3D * ptr);
     itkInterpolateImageFunctionIUL3D * GetMovingImageInterpolator();
     virtual double ComputeGlobalTimeStep(void * arg0) const;
     virtual void * GetGlobalDataPointer() const;
     virtual void ReleaseGlobalDataPointer(void * GlobalData) const;
     virtual void InitializeIteration();
     virtual itkVectorF3 ComputeUpdate(itk::ConstNeighborhoodIterator< itk::Image< itk::Vector< float, 3u >, 3u >, itk::ZeroFluxNeumannBoundaryCondition< itk::Image< itk::Vector< float, 3u >, 3u > > > const & neighborhood, void * globalData, itkVectorF3 const & offset = (typename itk::PDEDeformableRegistrationFunction<TFixedImage, TMovingImage, TDeformationField>::FloatOffsetType)(0.0));
     virtual double GetMetric() const;
     virtual double const & GetRMSChange() const;
     virtual void SetIntensityDifferenceThreshold(double arg0);
     virtual double GetIntensityDifferenceThreshold() const;
     virtual void SetMaximumUpdateStepLength(double sm);
     virtual double GetMaximumUpdateStepLength() const;
     virtual void SetUseGradientType(itkESMDemonsRegistrationFunctionIUL3IUL3IVF33::GradientType gtype);
     virtual itkESMDemonsRegistrationFunctionIUL3IUL3IVF33::GradientType GetUseGradientType() const;
   private:
     itkESMDemonsRegistrationFunctionIUL3IUL3IVF33(itkESMDemonsRegistrationFunctionIUL3IUL3IVF33 const & arg0);
     void operator=(itkESMDemonsRegistrationFunctionIUL3IUL3IVF33 const & arg0);
   protected:
     itkESMDemonsRegistrationFunctionIUL3IUL3IVF33();
     ~itkESMDemonsRegistrationFunctionIUL3IUL3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_Pointer {
   public:
     itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_Pointer();
     itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_Pointer(itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_Pointer const & p);
     itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_Pointer(itkESMDemonsRegistrationFunctionIUL3IUL3IVF33 * p);
     ~itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_Pointer();
     itkESMDemonsRegistrationFunctionIUL3IUL3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkESMDemonsRegistrationFunctionIUL3IUL3IVF33 * GetPointer() const;
     bool operator<(itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_Pointer const & r) const;
     bool operator>(itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_Pointer const & r) const;
     bool operator<=(itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_Pointer const & r) const;
     bool operator>=(itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_Pointer const & r) const;
     itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_Pointer & operator=(itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_Pointer const & r);
     itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_Pointer & operator=(itkESMDemonsRegistrationFunctionIUL3IUL3IVF33 * r);
     itkESMDemonsRegistrationFunctionIUL3IUL3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkESMDemonsRegistrationFunctionIUS2IUS2IVF22 : public itkPDEDeformableRegistrationFunctionIUS2IUS2IVF22 {
   public:
     enum  {  ImageDimension = 2 };
     enum GradientType {  Symmetric = 0,  Fixed = 1,  WarpedMoving = 2,  MappedMoving = 3 };
     static itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMovingImageInterpolator(itkInterpolateImageFunctionIUS2D * ptr);
     itkInterpolateImageFunctionIUS2D * GetMovingImageInterpolator();
     virtual double ComputeGlobalTimeStep(void * arg0) const;
     virtual void * GetGlobalDataPointer() const;
     virtual void ReleaseGlobalDataPointer(void * GlobalData) const;
     virtual void InitializeIteration();
     virtual itkVectorF2 ComputeUpdate(itk::ConstNeighborhoodIterator< itk::Image< itk::Vector< float, 2u >, 2u >, itk::ZeroFluxNeumannBoundaryCondition< itk::Image< itk::Vector< float, 2u >, 2u > > > const & neighborhood, void * globalData, itkVectorF2 const & offset = (typename itk::PDEDeformableRegistrationFunction<TFixedImage, TMovingImage, TDeformationField>::FloatOffsetType)(0.0));
     virtual double GetMetric() const;
     virtual double const & GetRMSChange() const;
     virtual void SetIntensityDifferenceThreshold(double arg0);
     virtual double GetIntensityDifferenceThreshold() const;
     virtual void SetMaximumUpdateStepLength(double sm);
     virtual double GetMaximumUpdateStepLength() const;
     virtual void SetUseGradientType(itkESMDemonsRegistrationFunctionIUS2IUS2IVF22::GradientType gtype);
     virtual itkESMDemonsRegistrationFunctionIUS2IUS2IVF22::GradientType GetUseGradientType() const;
   private:
     itkESMDemonsRegistrationFunctionIUS2IUS2IVF22(itkESMDemonsRegistrationFunctionIUS2IUS2IVF22 const & arg0);
     void operator=(itkESMDemonsRegistrationFunctionIUS2IUS2IVF22 const & arg0);
   protected:
     itkESMDemonsRegistrationFunctionIUS2IUS2IVF22();
     ~itkESMDemonsRegistrationFunctionIUS2IUS2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_Pointer {
   public:
     itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_Pointer();
     itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_Pointer(itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_Pointer const & p);
     itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_Pointer(itkESMDemonsRegistrationFunctionIUS2IUS2IVF22 * p);
     ~itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_Pointer();
     itkESMDemonsRegistrationFunctionIUS2IUS2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkESMDemonsRegistrationFunctionIUS2IUS2IVF22 * GetPointer() const;
     bool operator<(itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_Pointer const & r) const;
     bool operator>(itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_Pointer const & r) const;
     bool operator<=(itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_Pointer const & r) const;
     bool operator>=(itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_Pointer const & r) const;
     itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_Pointer & operator=(itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_Pointer const & r);
     itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_Pointer & operator=(itkESMDemonsRegistrationFunctionIUS2IUS2IVF22 * r);
     itkESMDemonsRegistrationFunctionIUS2IUS2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkESMDemonsRegistrationFunctionIUS3IUS3IVF33 : public itkPDEDeformableRegistrationFunctionIUS3IUS3IVF33 {
   public:
     enum  {  ImageDimension = 3 };
     enum GradientType {  Symmetric = 0,  Fixed = 1,  WarpedMoving = 2,  MappedMoving = 3 };
     static itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMovingImageInterpolator(itkInterpolateImageFunctionIUS3D * ptr);
     itkInterpolateImageFunctionIUS3D * GetMovingImageInterpolator();
     virtual double ComputeGlobalTimeStep(void * arg0) const;
     virtual void * GetGlobalDataPointer() const;
     virtual void ReleaseGlobalDataPointer(void * GlobalData) const;
     virtual void InitializeIteration();
     virtual itkVectorF3 ComputeUpdate(itk::ConstNeighborhoodIterator< itk::Image< itk::Vector< float, 3u >, 3u >, itk::ZeroFluxNeumannBoundaryCondition< itk::Image< itk::Vector< float, 3u >, 3u > > > const & neighborhood, void * globalData, itkVectorF3 const & offset = (typename itk::PDEDeformableRegistrationFunction<TFixedImage, TMovingImage, TDeformationField>::FloatOffsetType)(0.0));
     virtual double GetMetric() const;
     virtual double const & GetRMSChange() const;
     virtual void SetIntensityDifferenceThreshold(double arg0);
     virtual double GetIntensityDifferenceThreshold() const;
     virtual void SetMaximumUpdateStepLength(double sm);
     virtual double GetMaximumUpdateStepLength() const;
     virtual void SetUseGradientType(itkESMDemonsRegistrationFunctionIUS3IUS3IVF33::GradientType gtype);
     virtual itkESMDemonsRegistrationFunctionIUS3IUS3IVF33::GradientType GetUseGradientType() const;
   private:
     itkESMDemonsRegistrationFunctionIUS3IUS3IVF33(itkESMDemonsRegistrationFunctionIUS3IUS3IVF33 const & arg0);
     void operator=(itkESMDemonsRegistrationFunctionIUS3IUS3IVF33 const & arg0);
   protected:
     itkESMDemonsRegistrationFunctionIUS3IUS3IVF33();
     ~itkESMDemonsRegistrationFunctionIUS3IUS3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_Pointer {
   public:
     itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_Pointer();
     itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_Pointer(itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_Pointer const & p);
     itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_Pointer(itkESMDemonsRegistrationFunctionIUS3IUS3IVF33 * p);
     ~itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_Pointer();
     itkESMDemonsRegistrationFunctionIUS3IUS3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkESMDemonsRegistrationFunctionIUS3IUS3IVF33 * GetPointer() const;
     bool operator<(itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_Pointer const & r) const;
     bool operator>(itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_Pointer const & r) const;
     bool operator<=(itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_Pointer const & r) const;
     bool operator>=(itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_Pointer const & r) const;
     itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_Pointer & operator=(itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_Pointer const & r);
     itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_Pointer & operator=(itkESMDemonsRegistrationFunctionIUS3IUS3IVF33 * r);
     itkESMDemonsRegistrationFunctionIUS3IUS3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


