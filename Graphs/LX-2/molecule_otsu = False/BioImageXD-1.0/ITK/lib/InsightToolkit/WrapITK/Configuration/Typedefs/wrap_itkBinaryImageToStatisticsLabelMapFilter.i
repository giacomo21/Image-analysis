// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkBinaryImageToStatisticsLabelMapFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkBinaryImageToStatisticsLabelMapFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkBinaryImageToStatisticsLabelMapFilterGuile
#endif
#ifdef SWIGJAVA
%module itkBinaryImageToStatisticsLabelMapFilterJava
#endif
#ifdef SWIGLUA
%module itkBinaryImageToStatisticsLabelMapFilterLua
#endif
#ifdef SWIGMODULA3
%module itkBinaryImageToStatisticsLabelMapFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkBinaryImageToStatisticsLabelMapFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkBinaryImageToStatisticsLabelMapFilterOcaml
#endif
#ifdef SWIGPERL
%module itkBinaryImageToStatisticsLabelMapFilterPerl
#endif
#ifdef SWIGPERL5
%module itkBinaryImageToStatisticsLabelMapFilterPerl5
#endif
#ifdef SWIGPHP
%module itkBinaryImageToStatisticsLabelMapFilterPhp
#endif
#ifdef SWIGPHP4
%module itkBinaryImageToStatisticsLabelMapFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkBinaryImageToStatisticsLabelMapFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkBinaryImageToStatisticsLabelMapFilterPike
#endif
#ifdef SWIGPYTHON
%module itkBinaryImageToStatisticsLabelMapFilterPython
#endif
#ifdef SWIGR
%module itkBinaryImageToStatisticsLabelMapFilterR
#endif
#ifdef SWIGRUBY
%module itkBinaryImageToStatisticsLabelMapFilterRuby
#endif
#ifdef SWIGSEXP
%module itkBinaryImageToStatisticsLabelMapFilterSexp
#endif
#ifdef SWIGTCL
%module itkBinaryImageToStatisticsLabelMapFilterTcl
#endif
#ifdef SWIGXML
%module itkBinaryImageToStatisticsLabelMapFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "Numerics.includes"
#include "BinaryMorphology.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_ITKLabelMapBase.i
%import wrap_itkImage.i


%include itk.i
%include wrap_itkBinaryImageToStatisticsLabelMapFilter_ext.i


 class itkBinaryImageToStatisticsLabelMapFilterIUC2ID2LM2 : public itkImageToImageFilterIUC2LM2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToStatisticsLabelMapFilterIUC2ID2LM2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned char const _arg);
     virtual unsigned char GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetFeatureImage(itkImageD2 const * input);
     itkImageD2 const * GetFeatureImage();
     void SetInput1(itkImageUC2 const * input);
     void SetInput2(itkImageD2 const * input);
     virtual void SetComputeHistogram(bool const _arg);
     virtual bool const & GetComputeHistogram() const;
     virtual void ComputeHistogramOn();
     virtual void ComputeHistogramOff();
     virtual void SetNumberOfBins(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfBins() const;
   private:
     itkBinaryImageToStatisticsLabelMapFilterIUC2ID2LM2(itkBinaryImageToStatisticsLabelMapFilterIUC2ID2LM2 const & arg0);
     void operator=(itkBinaryImageToStatisticsLabelMapFilterIUC2ID2LM2 const & arg0);
   protected:
     itkBinaryImageToStatisticsLabelMapFilterIUC2ID2LM2();
     ~itkBinaryImageToStatisticsLabelMapFilterIUC2ID2LM2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUC2ID2LM2_Pointer {
   public:
     itkBinaryImageToStatisticsLabelMapFilterIUC2ID2LM2_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUC2ID2LM2_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUC2ID2LM2_Pointer const & p);
     itkBinaryImageToStatisticsLabelMapFilterIUC2ID2LM2_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUC2ID2LM2 * p);
     ~itkBinaryImageToStatisticsLabelMapFilterIUC2ID2LM2_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUC2ID2LM2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToStatisticsLabelMapFilterIUC2ID2LM2 * GetPointer() const;
     bool operator<(itkBinaryImageToStatisticsLabelMapFilterIUC2ID2LM2_Pointer const & r) const;
     bool operator>(itkBinaryImageToStatisticsLabelMapFilterIUC2ID2LM2_Pointer const & r) const;
     bool operator<=(itkBinaryImageToStatisticsLabelMapFilterIUC2ID2LM2_Pointer const & r) const;
     bool operator>=(itkBinaryImageToStatisticsLabelMapFilterIUC2ID2LM2_Pointer const & r) const;
     itkBinaryImageToStatisticsLabelMapFilterIUC2ID2LM2_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUC2ID2LM2_Pointer const & r);
     itkBinaryImageToStatisticsLabelMapFilterIUC2ID2LM2_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUC2ID2LM2 * r);
     itkBinaryImageToStatisticsLabelMapFilterIUC2ID2LM2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUC2IF2LM2 : public itkImageToImageFilterIUC2LM2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToStatisticsLabelMapFilterIUC2IF2LM2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned char const _arg);
     virtual unsigned char GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetFeatureImage(itkImageF2 const * input);
     itkImageF2 const * GetFeatureImage();
     void SetInput1(itkImageUC2 const * input);
     void SetInput2(itkImageF2 const * input);
     virtual void SetComputeHistogram(bool const _arg);
     virtual bool const & GetComputeHistogram() const;
     virtual void ComputeHistogramOn();
     virtual void ComputeHistogramOff();
     virtual void SetNumberOfBins(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfBins() const;
   private:
     itkBinaryImageToStatisticsLabelMapFilterIUC2IF2LM2(itkBinaryImageToStatisticsLabelMapFilterIUC2IF2LM2 const & arg0);
     void operator=(itkBinaryImageToStatisticsLabelMapFilterIUC2IF2LM2 const & arg0);
   protected:
     itkBinaryImageToStatisticsLabelMapFilterIUC2IF2LM2();
     ~itkBinaryImageToStatisticsLabelMapFilterIUC2IF2LM2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUC2IF2LM2_Pointer {
   public:
     itkBinaryImageToStatisticsLabelMapFilterIUC2IF2LM2_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUC2IF2LM2_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUC2IF2LM2_Pointer const & p);
     itkBinaryImageToStatisticsLabelMapFilterIUC2IF2LM2_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUC2IF2LM2 * p);
     ~itkBinaryImageToStatisticsLabelMapFilterIUC2IF2LM2_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUC2IF2LM2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToStatisticsLabelMapFilterIUC2IF2LM2 * GetPointer() const;
     bool operator<(itkBinaryImageToStatisticsLabelMapFilterIUC2IF2LM2_Pointer const & r) const;
     bool operator>(itkBinaryImageToStatisticsLabelMapFilterIUC2IF2LM2_Pointer const & r) const;
     bool operator<=(itkBinaryImageToStatisticsLabelMapFilterIUC2IF2LM2_Pointer const & r) const;
     bool operator>=(itkBinaryImageToStatisticsLabelMapFilterIUC2IF2LM2_Pointer const & r) const;
     itkBinaryImageToStatisticsLabelMapFilterIUC2IF2LM2_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUC2IF2LM2_Pointer const & r);
     itkBinaryImageToStatisticsLabelMapFilterIUC2IF2LM2_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUC2IF2LM2 * r);
     itkBinaryImageToStatisticsLabelMapFilterIUC2IF2LM2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUC2IUC2LM2 : public itkImageToImageFilterIUC2LM2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToStatisticsLabelMapFilterIUC2IUC2LM2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned char const _arg);
     virtual unsigned char GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetFeatureImage(itkImageUC2 const * input);
     itkImageUC2 const * GetFeatureImage();
     void SetInput1(itkImageUC2 const * input);
     void SetInput2(itkImageUC2 const * input);
     virtual void SetComputeHistogram(bool const _arg);
     virtual bool const & GetComputeHistogram() const;
     virtual void ComputeHistogramOn();
     virtual void ComputeHistogramOff();
     virtual void SetNumberOfBins(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfBins() const;
   private:
     itkBinaryImageToStatisticsLabelMapFilterIUC2IUC2LM2(itkBinaryImageToStatisticsLabelMapFilterIUC2IUC2LM2 const & arg0);
     void operator=(itkBinaryImageToStatisticsLabelMapFilterIUC2IUC2LM2 const & arg0);
   protected:
     itkBinaryImageToStatisticsLabelMapFilterIUC2IUC2LM2();
     ~itkBinaryImageToStatisticsLabelMapFilterIUC2IUC2LM2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUC2IUC2LM2_Pointer {
   public:
     itkBinaryImageToStatisticsLabelMapFilterIUC2IUC2LM2_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUC2IUC2LM2_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUC2IUC2LM2_Pointer const & p);
     itkBinaryImageToStatisticsLabelMapFilterIUC2IUC2LM2_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUC2IUC2LM2 * p);
     ~itkBinaryImageToStatisticsLabelMapFilterIUC2IUC2LM2_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUC2IUC2LM2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToStatisticsLabelMapFilterIUC2IUC2LM2 * GetPointer() const;
     bool operator<(itkBinaryImageToStatisticsLabelMapFilterIUC2IUC2LM2_Pointer const & r) const;
     bool operator>(itkBinaryImageToStatisticsLabelMapFilterIUC2IUC2LM2_Pointer const & r) const;
     bool operator<=(itkBinaryImageToStatisticsLabelMapFilterIUC2IUC2LM2_Pointer const & r) const;
     bool operator>=(itkBinaryImageToStatisticsLabelMapFilterIUC2IUC2LM2_Pointer const & r) const;
     itkBinaryImageToStatisticsLabelMapFilterIUC2IUC2LM2_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUC2IUC2LM2_Pointer const & r);
     itkBinaryImageToStatisticsLabelMapFilterIUC2IUC2LM2_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUC2IUC2LM2 * r);
     itkBinaryImageToStatisticsLabelMapFilterIUC2IUC2LM2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUC2IUL2LM2 : public itkImageToImageFilterIUC2LM2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToStatisticsLabelMapFilterIUC2IUL2LM2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned char const _arg);
     virtual unsigned char GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetFeatureImage(itkImageUL2 const * input);
     itkImageUL2 const * GetFeatureImage();
     void SetInput1(itkImageUC2 const * input);
     void SetInput2(itkImageUL2 const * input);
     virtual void SetComputeHistogram(bool const _arg);
     virtual bool const & GetComputeHistogram() const;
     virtual void ComputeHistogramOn();
     virtual void ComputeHistogramOff();
     virtual void SetNumberOfBins(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfBins() const;
   private:
     itkBinaryImageToStatisticsLabelMapFilterIUC2IUL2LM2(itkBinaryImageToStatisticsLabelMapFilterIUC2IUL2LM2 const & arg0);
     void operator=(itkBinaryImageToStatisticsLabelMapFilterIUC2IUL2LM2 const & arg0);
   protected:
     itkBinaryImageToStatisticsLabelMapFilterIUC2IUL2LM2();
     ~itkBinaryImageToStatisticsLabelMapFilterIUC2IUL2LM2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUC2IUL2LM2_Pointer {
   public:
     itkBinaryImageToStatisticsLabelMapFilterIUC2IUL2LM2_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUC2IUL2LM2_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUC2IUL2LM2_Pointer const & p);
     itkBinaryImageToStatisticsLabelMapFilterIUC2IUL2LM2_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUC2IUL2LM2 * p);
     ~itkBinaryImageToStatisticsLabelMapFilterIUC2IUL2LM2_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUC2IUL2LM2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToStatisticsLabelMapFilterIUC2IUL2LM2 * GetPointer() const;
     bool operator<(itkBinaryImageToStatisticsLabelMapFilterIUC2IUL2LM2_Pointer const & r) const;
     bool operator>(itkBinaryImageToStatisticsLabelMapFilterIUC2IUL2LM2_Pointer const & r) const;
     bool operator<=(itkBinaryImageToStatisticsLabelMapFilterIUC2IUL2LM2_Pointer const & r) const;
     bool operator>=(itkBinaryImageToStatisticsLabelMapFilterIUC2IUL2LM2_Pointer const & r) const;
     itkBinaryImageToStatisticsLabelMapFilterIUC2IUL2LM2_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUC2IUL2LM2_Pointer const & r);
     itkBinaryImageToStatisticsLabelMapFilterIUC2IUL2LM2_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUC2IUL2LM2 * r);
     itkBinaryImageToStatisticsLabelMapFilterIUC2IUL2LM2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUC2IUS2LM2 : public itkImageToImageFilterIUC2LM2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToStatisticsLabelMapFilterIUC2IUS2LM2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned char const _arg);
     virtual unsigned char GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetFeatureImage(itkImageUS2 const * input);
     itkImageUS2 const * GetFeatureImage();
     void SetInput1(itkImageUC2 const * input);
     void SetInput2(itkImageUS2 const * input);
     virtual void SetComputeHistogram(bool const _arg);
     virtual bool const & GetComputeHistogram() const;
     virtual void ComputeHistogramOn();
     virtual void ComputeHistogramOff();
     virtual void SetNumberOfBins(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfBins() const;
   private:
     itkBinaryImageToStatisticsLabelMapFilterIUC2IUS2LM2(itkBinaryImageToStatisticsLabelMapFilterIUC2IUS2LM2 const & arg0);
     void operator=(itkBinaryImageToStatisticsLabelMapFilterIUC2IUS2LM2 const & arg0);
   protected:
     itkBinaryImageToStatisticsLabelMapFilterIUC2IUS2LM2();
     ~itkBinaryImageToStatisticsLabelMapFilterIUC2IUS2LM2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUC2IUS2LM2_Pointer {
   public:
     itkBinaryImageToStatisticsLabelMapFilterIUC2IUS2LM2_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUC2IUS2LM2_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUC2IUS2LM2_Pointer const & p);
     itkBinaryImageToStatisticsLabelMapFilterIUC2IUS2LM2_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUC2IUS2LM2 * p);
     ~itkBinaryImageToStatisticsLabelMapFilterIUC2IUS2LM2_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUC2IUS2LM2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToStatisticsLabelMapFilterIUC2IUS2LM2 * GetPointer() const;
     bool operator<(itkBinaryImageToStatisticsLabelMapFilterIUC2IUS2LM2_Pointer const & r) const;
     bool operator>(itkBinaryImageToStatisticsLabelMapFilterIUC2IUS2LM2_Pointer const & r) const;
     bool operator<=(itkBinaryImageToStatisticsLabelMapFilterIUC2IUS2LM2_Pointer const & r) const;
     bool operator>=(itkBinaryImageToStatisticsLabelMapFilterIUC2IUS2LM2_Pointer const & r) const;
     itkBinaryImageToStatisticsLabelMapFilterIUC2IUS2LM2_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUC2IUS2LM2_Pointer const & r);
     itkBinaryImageToStatisticsLabelMapFilterIUC2IUS2LM2_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUC2IUS2LM2 * r);
     itkBinaryImageToStatisticsLabelMapFilterIUC2IUS2LM2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUC3ID3LM3 : public itkImageToImageFilterIUC3LM3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToStatisticsLabelMapFilterIUC3ID3LM3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned char const _arg);
     virtual unsigned char GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetFeatureImage(itkImageD3 const * input);
     itkImageD3 const * GetFeatureImage();
     void SetInput1(itkImageUC3 const * input);
     void SetInput2(itkImageD3 const * input);
     virtual void SetComputeHistogram(bool const _arg);
     virtual bool const & GetComputeHistogram() const;
     virtual void ComputeHistogramOn();
     virtual void ComputeHistogramOff();
     virtual void SetNumberOfBins(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfBins() const;
   private:
     itkBinaryImageToStatisticsLabelMapFilterIUC3ID3LM3(itkBinaryImageToStatisticsLabelMapFilterIUC3ID3LM3 const & arg0);
     void operator=(itkBinaryImageToStatisticsLabelMapFilterIUC3ID3LM3 const & arg0);
   protected:
     itkBinaryImageToStatisticsLabelMapFilterIUC3ID3LM3();
     ~itkBinaryImageToStatisticsLabelMapFilterIUC3ID3LM3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUC3ID3LM3_Pointer {
   public:
     itkBinaryImageToStatisticsLabelMapFilterIUC3ID3LM3_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUC3ID3LM3_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUC3ID3LM3_Pointer const & p);
     itkBinaryImageToStatisticsLabelMapFilterIUC3ID3LM3_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUC3ID3LM3 * p);
     ~itkBinaryImageToStatisticsLabelMapFilterIUC3ID3LM3_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUC3ID3LM3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToStatisticsLabelMapFilterIUC3ID3LM3 * GetPointer() const;
     bool operator<(itkBinaryImageToStatisticsLabelMapFilterIUC3ID3LM3_Pointer const & r) const;
     bool operator>(itkBinaryImageToStatisticsLabelMapFilterIUC3ID3LM3_Pointer const & r) const;
     bool operator<=(itkBinaryImageToStatisticsLabelMapFilterIUC3ID3LM3_Pointer const & r) const;
     bool operator>=(itkBinaryImageToStatisticsLabelMapFilterIUC3ID3LM3_Pointer const & r) const;
     itkBinaryImageToStatisticsLabelMapFilterIUC3ID3LM3_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUC3ID3LM3_Pointer const & r);
     itkBinaryImageToStatisticsLabelMapFilterIUC3ID3LM3_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUC3ID3LM3 * r);
     itkBinaryImageToStatisticsLabelMapFilterIUC3ID3LM3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUC3IF3LM3 : public itkImageToImageFilterIUC3LM3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToStatisticsLabelMapFilterIUC3IF3LM3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned char const _arg);
     virtual unsigned char GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetFeatureImage(itkImageF3 const * input);
     itkImageF3 const * GetFeatureImage();
     void SetInput1(itkImageUC3 const * input);
     void SetInput2(itkImageF3 const * input);
     virtual void SetComputeHistogram(bool const _arg);
     virtual bool const & GetComputeHistogram() const;
     virtual void ComputeHistogramOn();
     virtual void ComputeHistogramOff();
     virtual void SetNumberOfBins(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfBins() const;
   private:
     itkBinaryImageToStatisticsLabelMapFilterIUC3IF3LM3(itkBinaryImageToStatisticsLabelMapFilterIUC3IF3LM3 const & arg0);
     void operator=(itkBinaryImageToStatisticsLabelMapFilterIUC3IF3LM3 const & arg0);
   protected:
     itkBinaryImageToStatisticsLabelMapFilterIUC3IF3LM3();
     ~itkBinaryImageToStatisticsLabelMapFilterIUC3IF3LM3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUC3IF3LM3_Pointer {
   public:
     itkBinaryImageToStatisticsLabelMapFilterIUC3IF3LM3_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUC3IF3LM3_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUC3IF3LM3_Pointer const & p);
     itkBinaryImageToStatisticsLabelMapFilterIUC3IF3LM3_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUC3IF3LM3 * p);
     ~itkBinaryImageToStatisticsLabelMapFilterIUC3IF3LM3_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUC3IF3LM3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToStatisticsLabelMapFilterIUC3IF3LM3 * GetPointer() const;
     bool operator<(itkBinaryImageToStatisticsLabelMapFilterIUC3IF3LM3_Pointer const & r) const;
     bool operator>(itkBinaryImageToStatisticsLabelMapFilterIUC3IF3LM3_Pointer const & r) const;
     bool operator<=(itkBinaryImageToStatisticsLabelMapFilterIUC3IF3LM3_Pointer const & r) const;
     bool operator>=(itkBinaryImageToStatisticsLabelMapFilterIUC3IF3LM3_Pointer const & r) const;
     itkBinaryImageToStatisticsLabelMapFilterIUC3IF3LM3_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUC3IF3LM3_Pointer const & r);
     itkBinaryImageToStatisticsLabelMapFilterIUC3IF3LM3_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUC3IF3LM3 * r);
     itkBinaryImageToStatisticsLabelMapFilterIUC3IF3LM3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUC3IUC3LM3 : public itkImageToImageFilterIUC3LM3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToStatisticsLabelMapFilterIUC3IUC3LM3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned char const _arg);
     virtual unsigned char GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetFeatureImage(itkImageUC3 const * input);
     itkImageUC3 const * GetFeatureImage();
     void SetInput1(itkImageUC3 const * input);
     void SetInput2(itkImageUC3 const * input);
     virtual void SetComputeHistogram(bool const _arg);
     virtual bool const & GetComputeHistogram() const;
     virtual void ComputeHistogramOn();
     virtual void ComputeHistogramOff();
     virtual void SetNumberOfBins(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfBins() const;
   private:
     itkBinaryImageToStatisticsLabelMapFilterIUC3IUC3LM3(itkBinaryImageToStatisticsLabelMapFilterIUC3IUC3LM3 const & arg0);
     void operator=(itkBinaryImageToStatisticsLabelMapFilterIUC3IUC3LM3 const & arg0);
   protected:
     itkBinaryImageToStatisticsLabelMapFilterIUC3IUC3LM3();
     ~itkBinaryImageToStatisticsLabelMapFilterIUC3IUC3LM3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUC3IUC3LM3_Pointer {
   public:
     itkBinaryImageToStatisticsLabelMapFilterIUC3IUC3LM3_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUC3IUC3LM3_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUC3IUC3LM3_Pointer const & p);
     itkBinaryImageToStatisticsLabelMapFilterIUC3IUC3LM3_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUC3IUC3LM3 * p);
     ~itkBinaryImageToStatisticsLabelMapFilterIUC3IUC3LM3_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUC3IUC3LM3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToStatisticsLabelMapFilterIUC3IUC3LM3 * GetPointer() const;
     bool operator<(itkBinaryImageToStatisticsLabelMapFilterIUC3IUC3LM3_Pointer const & r) const;
     bool operator>(itkBinaryImageToStatisticsLabelMapFilterIUC3IUC3LM3_Pointer const & r) const;
     bool operator<=(itkBinaryImageToStatisticsLabelMapFilterIUC3IUC3LM3_Pointer const & r) const;
     bool operator>=(itkBinaryImageToStatisticsLabelMapFilterIUC3IUC3LM3_Pointer const & r) const;
     itkBinaryImageToStatisticsLabelMapFilterIUC3IUC3LM3_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUC3IUC3LM3_Pointer const & r);
     itkBinaryImageToStatisticsLabelMapFilterIUC3IUC3LM3_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUC3IUC3LM3 * r);
     itkBinaryImageToStatisticsLabelMapFilterIUC3IUC3LM3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUC3IUL3LM3 : public itkImageToImageFilterIUC3LM3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToStatisticsLabelMapFilterIUC3IUL3LM3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned char const _arg);
     virtual unsigned char GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetFeatureImage(itkImageUL3 const * input);
     itkImageUL3 const * GetFeatureImage();
     void SetInput1(itkImageUC3 const * input);
     void SetInput2(itkImageUL3 const * input);
     virtual void SetComputeHistogram(bool const _arg);
     virtual bool const & GetComputeHistogram() const;
     virtual void ComputeHistogramOn();
     virtual void ComputeHistogramOff();
     virtual void SetNumberOfBins(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfBins() const;
   private:
     itkBinaryImageToStatisticsLabelMapFilterIUC3IUL3LM3(itkBinaryImageToStatisticsLabelMapFilterIUC3IUL3LM3 const & arg0);
     void operator=(itkBinaryImageToStatisticsLabelMapFilterIUC3IUL3LM3 const & arg0);
   protected:
     itkBinaryImageToStatisticsLabelMapFilterIUC3IUL3LM3();
     ~itkBinaryImageToStatisticsLabelMapFilterIUC3IUL3LM3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUC3IUL3LM3_Pointer {
   public:
     itkBinaryImageToStatisticsLabelMapFilterIUC3IUL3LM3_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUC3IUL3LM3_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUC3IUL3LM3_Pointer const & p);
     itkBinaryImageToStatisticsLabelMapFilterIUC3IUL3LM3_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUC3IUL3LM3 * p);
     ~itkBinaryImageToStatisticsLabelMapFilterIUC3IUL3LM3_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUC3IUL3LM3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToStatisticsLabelMapFilterIUC3IUL3LM3 * GetPointer() const;
     bool operator<(itkBinaryImageToStatisticsLabelMapFilterIUC3IUL3LM3_Pointer const & r) const;
     bool operator>(itkBinaryImageToStatisticsLabelMapFilterIUC3IUL3LM3_Pointer const & r) const;
     bool operator<=(itkBinaryImageToStatisticsLabelMapFilterIUC3IUL3LM3_Pointer const & r) const;
     bool operator>=(itkBinaryImageToStatisticsLabelMapFilterIUC3IUL3LM3_Pointer const & r) const;
     itkBinaryImageToStatisticsLabelMapFilterIUC3IUL3LM3_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUC3IUL3LM3_Pointer const & r);
     itkBinaryImageToStatisticsLabelMapFilterIUC3IUL3LM3_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUC3IUL3LM3 * r);
     itkBinaryImageToStatisticsLabelMapFilterIUC3IUL3LM3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUC3IUS3LM3 : public itkImageToImageFilterIUC3LM3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToStatisticsLabelMapFilterIUC3IUS3LM3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned char const _arg);
     virtual unsigned char GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetFeatureImage(itkImageUS3 const * input);
     itkImageUS3 const * GetFeatureImage();
     void SetInput1(itkImageUC3 const * input);
     void SetInput2(itkImageUS3 const * input);
     virtual void SetComputeHistogram(bool const _arg);
     virtual bool const & GetComputeHistogram() const;
     virtual void ComputeHistogramOn();
     virtual void ComputeHistogramOff();
     virtual void SetNumberOfBins(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfBins() const;
   private:
     itkBinaryImageToStatisticsLabelMapFilterIUC3IUS3LM3(itkBinaryImageToStatisticsLabelMapFilterIUC3IUS3LM3 const & arg0);
     void operator=(itkBinaryImageToStatisticsLabelMapFilterIUC3IUS3LM3 const & arg0);
   protected:
     itkBinaryImageToStatisticsLabelMapFilterIUC3IUS3LM3();
     ~itkBinaryImageToStatisticsLabelMapFilterIUC3IUS3LM3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUC3IUS3LM3_Pointer {
   public:
     itkBinaryImageToStatisticsLabelMapFilterIUC3IUS3LM3_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUC3IUS3LM3_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUC3IUS3LM3_Pointer const & p);
     itkBinaryImageToStatisticsLabelMapFilterIUC3IUS3LM3_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUC3IUS3LM3 * p);
     ~itkBinaryImageToStatisticsLabelMapFilterIUC3IUS3LM3_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUC3IUS3LM3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToStatisticsLabelMapFilterIUC3IUS3LM3 * GetPointer() const;
     bool operator<(itkBinaryImageToStatisticsLabelMapFilterIUC3IUS3LM3_Pointer const & r) const;
     bool operator>(itkBinaryImageToStatisticsLabelMapFilterIUC3IUS3LM3_Pointer const & r) const;
     bool operator<=(itkBinaryImageToStatisticsLabelMapFilterIUC3IUS3LM3_Pointer const & r) const;
     bool operator>=(itkBinaryImageToStatisticsLabelMapFilterIUC3IUS3LM3_Pointer const & r) const;
     itkBinaryImageToStatisticsLabelMapFilterIUC3IUS3LM3_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUC3IUS3LM3_Pointer const & r);
     itkBinaryImageToStatisticsLabelMapFilterIUC3IUS3LM3_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUC3IUS3LM3 * r);
     itkBinaryImageToStatisticsLabelMapFilterIUC3IUS3LM3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUL2ID2LM2 : public itkImageToImageFilterIUL2LM2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToStatisticsLabelMapFilterIUL2ID2LM2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned long const _arg);
     virtual unsigned long GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetFeatureImage(itkImageD2 const * input);
     itkImageD2 const * GetFeatureImage();
     void SetInput1(itkImageUL2 const * input);
     void SetInput2(itkImageD2 const * input);
     virtual void SetComputeHistogram(bool const _arg);
     virtual bool const & GetComputeHistogram() const;
     virtual void ComputeHistogramOn();
     virtual void ComputeHistogramOff();
     virtual void SetNumberOfBins(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfBins() const;
   private:
     itkBinaryImageToStatisticsLabelMapFilterIUL2ID2LM2(itkBinaryImageToStatisticsLabelMapFilterIUL2ID2LM2 const & arg0);
     void operator=(itkBinaryImageToStatisticsLabelMapFilterIUL2ID2LM2 const & arg0);
   protected:
     itkBinaryImageToStatisticsLabelMapFilterIUL2ID2LM2();
     ~itkBinaryImageToStatisticsLabelMapFilterIUL2ID2LM2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUL2ID2LM2_Pointer {
   public:
     itkBinaryImageToStatisticsLabelMapFilterIUL2ID2LM2_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUL2ID2LM2_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUL2ID2LM2_Pointer const & p);
     itkBinaryImageToStatisticsLabelMapFilterIUL2ID2LM2_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUL2ID2LM2 * p);
     ~itkBinaryImageToStatisticsLabelMapFilterIUL2ID2LM2_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUL2ID2LM2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToStatisticsLabelMapFilterIUL2ID2LM2 * GetPointer() const;
     bool operator<(itkBinaryImageToStatisticsLabelMapFilterIUL2ID2LM2_Pointer const & r) const;
     bool operator>(itkBinaryImageToStatisticsLabelMapFilterIUL2ID2LM2_Pointer const & r) const;
     bool operator<=(itkBinaryImageToStatisticsLabelMapFilterIUL2ID2LM2_Pointer const & r) const;
     bool operator>=(itkBinaryImageToStatisticsLabelMapFilterIUL2ID2LM2_Pointer const & r) const;
     itkBinaryImageToStatisticsLabelMapFilterIUL2ID2LM2_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUL2ID2LM2_Pointer const & r);
     itkBinaryImageToStatisticsLabelMapFilterIUL2ID2LM2_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUL2ID2LM2 * r);
     itkBinaryImageToStatisticsLabelMapFilterIUL2ID2LM2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUL2IF2LM2 : public itkImageToImageFilterIUL2LM2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToStatisticsLabelMapFilterIUL2IF2LM2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned long const _arg);
     virtual unsigned long GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetFeatureImage(itkImageF2 const * input);
     itkImageF2 const * GetFeatureImage();
     void SetInput1(itkImageUL2 const * input);
     void SetInput2(itkImageF2 const * input);
     virtual void SetComputeHistogram(bool const _arg);
     virtual bool const & GetComputeHistogram() const;
     virtual void ComputeHistogramOn();
     virtual void ComputeHistogramOff();
     virtual void SetNumberOfBins(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfBins() const;
   private:
     itkBinaryImageToStatisticsLabelMapFilterIUL2IF2LM2(itkBinaryImageToStatisticsLabelMapFilterIUL2IF2LM2 const & arg0);
     void operator=(itkBinaryImageToStatisticsLabelMapFilterIUL2IF2LM2 const & arg0);
   protected:
     itkBinaryImageToStatisticsLabelMapFilterIUL2IF2LM2();
     ~itkBinaryImageToStatisticsLabelMapFilterIUL2IF2LM2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUL2IF2LM2_Pointer {
   public:
     itkBinaryImageToStatisticsLabelMapFilterIUL2IF2LM2_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUL2IF2LM2_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUL2IF2LM2_Pointer const & p);
     itkBinaryImageToStatisticsLabelMapFilterIUL2IF2LM2_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUL2IF2LM2 * p);
     ~itkBinaryImageToStatisticsLabelMapFilterIUL2IF2LM2_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUL2IF2LM2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToStatisticsLabelMapFilterIUL2IF2LM2 * GetPointer() const;
     bool operator<(itkBinaryImageToStatisticsLabelMapFilterIUL2IF2LM2_Pointer const & r) const;
     bool operator>(itkBinaryImageToStatisticsLabelMapFilterIUL2IF2LM2_Pointer const & r) const;
     bool operator<=(itkBinaryImageToStatisticsLabelMapFilterIUL2IF2LM2_Pointer const & r) const;
     bool operator>=(itkBinaryImageToStatisticsLabelMapFilterIUL2IF2LM2_Pointer const & r) const;
     itkBinaryImageToStatisticsLabelMapFilterIUL2IF2LM2_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUL2IF2LM2_Pointer const & r);
     itkBinaryImageToStatisticsLabelMapFilterIUL2IF2LM2_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUL2IF2LM2 * r);
     itkBinaryImageToStatisticsLabelMapFilterIUL2IF2LM2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUL2IUC2LM2 : public itkImageToImageFilterIUL2LM2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToStatisticsLabelMapFilterIUL2IUC2LM2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned long const _arg);
     virtual unsigned long GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetFeatureImage(itkImageUC2 const * input);
     itkImageUC2 const * GetFeatureImage();
     void SetInput1(itkImageUL2 const * input);
     void SetInput2(itkImageUC2 const * input);
     virtual void SetComputeHistogram(bool const _arg);
     virtual bool const & GetComputeHistogram() const;
     virtual void ComputeHistogramOn();
     virtual void ComputeHistogramOff();
     virtual void SetNumberOfBins(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfBins() const;
   private:
     itkBinaryImageToStatisticsLabelMapFilterIUL2IUC2LM2(itkBinaryImageToStatisticsLabelMapFilterIUL2IUC2LM2 const & arg0);
     void operator=(itkBinaryImageToStatisticsLabelMapFilterIUL2IUC2LM2 const & arg0);
   protected:
     itkBinaryImageToStatisticsLabelMapFilterIUL2IUC2LM2();
     ~itkBinaryImageToStatisticsLabelMapFilterIUL2IUC2LM2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUL2IUC2LM2_Pointer {
   public:
     itkBinaryImageToStatisticsLabelMapFilterIUL2IUC2LM2_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUL2IUC2LM2_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUL2IUC2LM2_Pointer const & p);
     itkBinaryImageToStatisticsLabelMapFilterIUL2IUC2LM2_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUL2IUC2LM2 * p);
     ~itkBinaryImageToStatisticsLabelMapFilterIUL2IUC2LM2_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUL2IUC2LM2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToStatisticsLabelMapFilterIUL2IUC2LM2 * GetPointer() const;
     bool operator<(itkBinaryImageToStatisticsLabelMapFilterIUL2IUC2LM2_Pointer const & r) const;
     bool operator>(itkBinaryImageToStatisticsLabelMapFilterIUL2IUC2LM2_Pointer const & r) const;
     bool operator<=(itkBinaryImageToStatisticsLabelMapFilterIUL2IUC2LM2_Pointer const & r) const;
     bool operator>=(itkBinaryImageToStatisticsLabelMapFilterIUL2IUC2LM2_Pointer const & r) const;
     itkBinaryImageToStatisticsLabelMapFilterIUL2IUC2LM2_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUL2IUC2LM2_Pointer const & r);
     itkBinaryImageToStatisticsLabelMapFilterIUL2IUC2LM2_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUL2IUC2LM2 * r);
     itkBinaryImageToStatisticsLabelMapFilterIUL2IUC2LM2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUL2IUL2LM2 : public itkImageToImageFilterIUL2LM2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToStatisticsLabelMapFilterIUL2IUL2LM2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned long const _arg);
     virtual unsigned long GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetFeatureImage(itkImageUL2 const * input);
     itkImageUL2 const * GetFeatureImage();
     void SetInput1(itkImageUL2 const * input);
     void SetInput2(itkImageUL2 const * input);
     virtual void SetComputeHistogram(bool const _arg);
     virtual bool const & GetComputeHistogram() const;
     virtual void ComputeHistogramOn();
     virtual void ComputeHistogramOff();
     virtual void SetNumberOfBins(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfBins() const;
   private:
     itkBinaryImageToStatisticsLabelMapFilterIUL2IUL2LM2(itkBinaryImageToStatisticsLabelMapFilterIUL2IUL2LM2 const & arg0);
     void operator=(itkBinaryImageToStatisticsLabelMapFilterIUL2IUL2LM2 const & arg0);
   protected:
     itkBinaryImageToStatisticsLabelMapFilterIUL2IUL2LM2();
     ~itkBinaryImageToStatisticsLabelMapFilterIUL2IUL2LM2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUL2IUL2LM2_Pointer {
   public:
     itkBinaryImageToStatisticsLabelMapFilterIUL2IUL2LM2_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUL2IUL2LM2_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUL2IUL2LM2_Pointer const & p);
     itkBinaryImageToStatisticsLabelMapFilterIUL2IUL2LM2_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUL2IUL2LM2 * p);
     ~itkBinaryImageToStatisticsLabelMapFilterIUL2IUL2LM2_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUL2IUL2LM2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToStatisticsLabelMapFilterIUL2IUL2LM2 * GetPointer() const;
     bool operator<(itkBinaryImageToStatisticsLabelMapFilterIUL2IUL2LM2_Pointer const & r) const;
     bool operator>(itkBinaryImageToStatisticsLabelMapFilterIUL2IUL2LM2_Pointer const & r) const;
     bool operator<=(itkBinaryImageToStatisticsLabelMapFilterIUL2IUL2LM2_Pointer const & r) const;
     bool operator>=(itkBinaryImageToStatisticsLabelMapFilterIUL2IUL2LM2_Pointer const & r) const;
     itkBinaryImageToStatisticsLabelMapFilterIUL2IUL2LM2_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUL2IUL2LM2_Pointer const & r);
     itkBinaryImageToStatisticsLabelMapFilterIUL2IUL2LM2_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUL2IUL2LM2 * r);
     itkBinaryImageToStatisticsLabelMapFilterIUL2IUL2LM2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUL2IUS2LM2 : public itkImageToImageFilterIUL2LM2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToStatisticsLabelMapFilterIUL2IUS2LM2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned long const _arg);
     virtual unsigned long GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetFeatureImage(itkImageUS2 const * input);
     itkImageUS2 const * GetFeatureImage();
     void SetInput1(itkImageUL2 const * input);
     void SetInput2(itkImageUS2 const * input);
     virtual void SetComputeHistogram(bool const _arg);
     virtual bool const & GetComputeHistogram() const;
     virtual void ComputeHistogramOn();
     virtual void ComputeHistogramOff();
     virtual void SetNumberOfBins(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfBins() const;
   private:
     itkBinaryImageToStatisticsLabelMapFilterIUL2IUS2LM2(itkBinaryImageToStatisticsLabelMapFilterIUL2IUS2LM2 const & arg0);
     void operator=(itkBinaryImageToStatisticsLabelMapFilterIUL2IUS2LM2 const & arg0);
   protected:
     itkBinaryImageToStatisticsLabelMapFilterIUL2IUS2LM2();
     ~itkBinaryImageToStatisticsLabelMapFilterIUL2IUS2LM2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUL2IUS2LM2_Pointer {
   public:
     itkBinaryImageToStatisticsLabelMapFilterIUL2IUS2LM2_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUL2IUS2LM2_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUL2IUS2LM2_Pointer const & p);
     itkBinaryImageToStatisticsLabelMapFilterIUL2IUS2LM2_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUL2IUS2LM2 * p);
     ~itkBinaryImageToStatisticsLabelMapFilterIUL2IUS2LM2_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUL2IUS2LM2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToStatisticsLabelMapFilterIUL2IUS2LM2 * GetPointer() const;
     bool operator<(itkBinaryImageToStatisticsLabelMapFilterIUL2IUS2LM2_Pointer const & r) const;
     bool operator>(itkBinaryImageToStatisticsLabelMapFilterIUL2IUS2LM2_Pointer const & r) const;
     bool operator<=(itkBinaryImageToStatisticsLabelMapFilterIUL2IUS2LM2_Pointer const & r) const;
     bool operator>=(itkBinaryImageToStatisticsLabelMapFilterIUL2IUS2LM2_Pointer const & r) const;
     itkBinaryImageToStatisticsLabelMapFilterIUL2IUS2LM2_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUL2IUS2LM2_Pointer const & r);
     itkBinaryImageToStatisticsLabelMapFilterIUL2IUS2LM2_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUL2IUS2LM2 * r);
     itkBinaryImageToStatisticsLabelMapFilterIUL2IUS2LM2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUL3ID3LM3 : public itkImageToImageFilterIUL3LM3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToStatisticsLabelMapFilterIUL3ID3LM3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned long const _arg);
     virtual unsigned long GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetFeatureImage(itkImageD3 const * input);
     itkImageD3 const * GetFeatureImage();
     void SetInput1(itkImageUL3 const * input);
     void SetInput2(itkImageD3 const * input);
     virtual void SetComputeHistogram(bool const _arg);
     virtual bool const & GetComputeHistogram() const;
     virtual void ComputeHistogramOn();
     virtual void ComputeHistogramOff();
     virtual void SetNumberOfBins(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfBins() const;
   private:
     itkBinaryImageToStatisticsLabelMapFilterIUL3ID3LM3(itkBinaryImageToStatisticsLabelMapFilterIUL3ID3LM3 const & arg0);
     void operator=(itkBinaryImageToStatisticsLabelMapFilterIUL3ID3LM3 const & arg0);
   protected:
     itkBinaryImageToStatisticsLabelMapFilterIUL3ID3LM3();
     ~itkBinaryImageToStatisticsLabelMapFilterIUL3ID3LM3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUL3ID3LM3_Pointer {
   public:
     itkBinaryImageToStatisticsLabelMapFilterIUL3ID3LM3_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUL3ID3LM3_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUL3ID3LM3_Pointer const & p);
     itkBinaryImageToStatisticsLabelMapFilterIUL3ID3LM3_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUL3ID3LM3 * p);
     ~itkBinaryImageToStatisticsLabelMapFilterIUL3ID3LM3_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUL3ID3LM3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToStatisticsLabelMapFilterIUL3ID3LM3 * GetPointer() const;
     bool operator<(itkBinaryImageToStatisticsLabelMapFilterIUL3ID3LM3_Pointer const & r) const;
     bool operator>(itkBinaryImageToStatisticsLabelMapFilterIUL3ID3LM3_Pointer const & r) const;
     bool operator<=(itkBinaryImageToStatisticsLabelMapFilterIUL3ID3LM3_Pointer const & r) const;
     bool operator>=(itkBinaryImageToStatisticsLabelMapFilterIUL3ID3LM3_Pointer const & r) const;
     itkBinaryImageToStatisticsLabelMapFilterIUL3ID3LM3_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUL3ID3LM3_Pointer const & r);
     itkBinaryImageToStatisticsLabelMapFilterIUL3ID3LM3_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUL3ID3LM3 * r);
     itkBinaryImageToStatisticsLabelMapFilterIUL3ID3LM3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUL3IF3LM3 : public itkImageToImageFilterIUL3LM3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToStatisticsLabelMapFilterIUL3IF3LM3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned long const _arg);
     virtual unsigned long GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetFeatureImage(itkImageF3 const * input);
     itkImageF3 const * GetFeatureImage();
     void SetInput1(itkImageUL3 const * input);
     void SetInput2(itkImageF3 const * input);
     virtual void SetComputeHistogram(bool const _arg);
     virtual bool const & GetComputeHistogram() const;
     virtual void ComputeHistogramOn();
     virtual void ComputeHistogramOff();
     virtual void SetNumberOfBins(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfBins() const;
   private:
     itkBinaryImageToStatisticsLabelMapFilterIUL3IF3LM3(itkBinaryImageToStatisticsLabelMapFilterIUL3IF3LM3 const & arg0);
     void operator=(itkBinaryImageToStatisticsLabelMapFilterIUL3IF3LM3 const & arg0);
   protected:
     itkBinaryImageToStatisticsLabelMapFilterIUL3IF3LM3();
     ~itkBinaryImageToStatisticsLabelMapFilterIUL3IF3LM3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUL3IF3LM3_Pointer {
   public:
     itkBinaryImageToStatisticsLabelMapFilterIUL3IF3LM3_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUL3IF3LM3_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUL3IF3LM3_Pointer const & p);
     itkBinaryImageToStatisticsLabelMapFilterIUL3IF3LM3_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUL3IF3LM3 * p);
     ~itkBinaryImageToStatisticsLabelMapFilterIUL3IF3LM3_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUL3IF3LM3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToStatisticsLabelMapFilterIUL3IF3LM3 * GetPointer() const;
     bool operator<(itkBinaryImageToStatisticsLabelMapFilterIUL3IF3LM3_Pointer const & r) const;
     bool operator>(itkBinaryImageToStatisticsLabelMapFilterIUL3IF3LM3_Pointer const & r) const;
     bool operator<=(itkBinaryImageToStatisticsLabelMapFilterIUL3IF3LM3_Pointer const & r) const;
     bool operator>=(itkBinaryImageToStatisticsLabelMapFilterIUL3IF3LM3_Pointer const & r) const;
     itkBinaryImageToStatisticsLabelMapFilterIUL3IF3LM3_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUL3IF3LM3_Pointer const & r);
     itkBinaryImageToStatisticsLabelMapFilterIUL3IF3LM3_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUL3IF3LM3 * r);
     itkBinaryImageToStatisticsLabelMapFilterIUL3IF3LM3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUL3IUC3LM3 : public itkImageToImageFilterIUL3LM3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToStatisticsLabelMapFilterIUL3IUC3LM3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned long const _arg);
     virtual unsigned long GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetFeatureImage(itkImageUC3 const * input);
     itkImageUC3 const * GetFeatureImage();
     void SetInput1(itkImageUL3 const * input);
     void SetInput2(itkImageUC3 const * input);
     virtual void SetComputeHistogram(bool const _arg);
     virtual bool const & GetComputeHistogram() const;
     virtual void ComputeHistogramOn();
     virtual void ComputeHistogramOff();
     virtual void SetNumberOfBins(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfBins() const;
   private:
     itkBinaryImageToStatisticsLabelMapFilterIUL3IUC3LM3(itkBinaryImageToStatisticsLabelMapFilterIUL3IUC3LM3 const & arg0);
     void operator=(itkBinaryImageToStatisticsLabelMapFilterIUL3IUC3LM3 const & arg0);
   protected:
     itkBinaryImageToStatisticsLabelMapFilterIUL3IUC3LM3();
     ~itkBinaryImageToStatisticsLabelMapFilterIUL3IUC3LM3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUL3IUC3LM3_Pointer {
   public:
     itkBinaryImageToStatisticsLabelMapFilterIUL3IUC3LM3_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUL3IUC3LM3_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUL3IUC3LM3_Pointer const & p);
     itkBinaryImageToStatisticsLabelMapFilterIUL3IUC3LM3_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUL3IUC3LM3 * p);
     ~itkBinaryImageToStatisticsLabelMapFilterIUL3IUC3LM3_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUL3IUC3LM3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToStatisticsLabelMapFilterIUL3IUC3LM3 * GetPointer() const;
     bool operator<(itkBinaryImageToStatisticsLabelMapFilterIUL3IUC3LM3_Pointer const & r) const;
     bool operator>(itkBinaryImageToStatisticsLabelMapFilterIUL3IUC3LM3_Pointer const & r) const;
     bool operator<=(itkBinaryImageToStatisticsLabelMapFilterIUL3IUC3LM3_Pointer const & r) const;
     bool operator>=(itkBinaryImageToStatisticsLabelMapFilterIUL3IUC3LM3_Pointer const & r) const;
     itkBinaryImageToStatisticsLabelMapFilterIUL3IUC3LM3_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUL3IUC3LM3_Pointer const & r);
     itkBinaryImageToStatisticsLabelMapFilterIUL3IUC3LM3_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUL3IUC3LM3 * r);
     itkBinaryImageToStatisticsLabelMapFilterIUL3IUC3LM3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUL3IUL3LM3 : public itkImageToImageFilterIUL3LM3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToStatisticsLabelMapFilterIUL3IUL3LM3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned long const _arg);
     virtual unsigned long GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetFeatureImage(itkImageUL3 const * input);
     itkImageUL3 const * GetFeatureImage();
     void SetInput1(itkImageUL3 const * input);
     void SetInput2(itkImageUL3 const * input);
     virtual void SetComputeHistogram(bool const _arg);
     virtual bool const & GetComputeHistogram() const;
     virtual void ComputeHistogramOn();
     virtual void ComputeHistogramOff();
     virtual void SetNumberOfBins(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfBins() const;
   private:
     itkBinaryImageToStatisticsLabelMapFilterIUL3IUL3LM3(itkBinaryImageToStatisticsLabelMapFilterIUL3IUL3LM3 const & arg0);
     void operator=(itkBinaryImageToStatisticsLabelMapFilterIUL3IUL3LM3 const & arg0);
   protected:
     itkBinaryImageToStatisticsLabelMapFilterIUL3IUL3LM3();
     ~itkBinaryImageToStatisticsLabelMapFilterIUL3IUL3LM3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUL3IUL3LM3_Pointer {
   public:
     itkBinaryImageToStatisticsLabelMapFilterIUL3IUL3LM3_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUL3IUL3LM3_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUL3IUL3LM3_Pointer const & p);
     itkBinaryImageToStatisticsLabelMapFilterIUL3IUL3LM3_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUL3IUL3LM3 * p);
     ~itkBinaryImageToStatisticsLabelMapFilterIUL3IUL3LM3_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUL3IUL3LM3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToStatisticsLabelMapFilterIUL3IUL3LM3 * GetPointer() const;
     bool operator<(itkBinaryImageToStatisticsLabelMapFilterIUL3IUL3LM3_Pointer const & r) const;
     bool operator>(itkBinaryImageToStatisticsLabelMapFilterIUL3IUL3LM3_Pointer const & r) const;
     bool operator<=(itkBinaryImageToStatisticsLabelMapFilterIUL3IUL3LM3_Pointer const & r) const;
     bool operator>=(itkBinaryImageToStatisticsLabelMapFilterIUL3IUL3LM3_Pointer const & r) const;
     itkBinaryImageToStatisticsLabelMapFilterIUL3IUL3LM3_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUL3IUL3LM3_Pointer const & r);
     itkBinaryImageToStatisticsLabelMapFilterIUL3IUL3LM3_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUL3IUL3LM3 * r);
     itkBinaryImageToStatisticsLabelMapFilterIUL3IUL3LM3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUL3IUS3LM3 : public itkImageToImageFilterIUL3LM3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToStatisticsLabelMapFilterIUL3IUS3LM3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned long const _arg);
     virtual unsigned long GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetFeatureImage(itkImageUS3 const * input);
     itkImageUS3 const * GetFeatureImage();
     void SetInput1(itkImageUL3 const * input);
     void SetInput2(itkImageUS3 const * input);
     virtual void SetComputeHistogram(bool const _arg);
     virtual bool const & GetComputeHistogram() const;
     virtual void ComputeHistogramOn();
     virtual void ComputeHistogramOff();
     virtual void SetNumberOfBins(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfBins() const;
   private:
     itkBinaryImageToStatisticsLabelMapFilterIUL3IUS3LM3(itkBinaryImageToStatisticsLabelMapFilterIUL3IUS3LM3 const & arg0);
     void operator=(itkBinaryImageToStatisticsLabelMapFilterIUL3IUS3LM3 const & arg0);
   protected:
     itkBinaryImageToStatisticsLabelMapFilterIUL3IUS3LM3();
     ~itkBinaryImageToStatisticsLabelMapFilterIUL3IUS3LM3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUL3IUS3LM3_Pointer {
   public:
     itkBinaryImageToStatisticsLabelMapFilterIUL3IUS3LM3_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUL3IUS3LM3_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUL3IUS3LM3_Pointer const & p);
     itkBinaryImageToStatisticsLabelMapFilterIUL3IUS3LM3_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUL3IUS3LM3 * p);
     ~itkBinaryImageToStatisticsLabelMapFilterIUL3IUS3LM3_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUL3IUS3LM3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToStatisticsLabelMapFilterIUL3IUS3LM3 * GetPointer() const;
     bool operator<(itkBinaryImageToStatisticsLabelMapFilterIUL3IUS3LM3_Pointer const & r) const;
     bool operator>(itkBinaryImageToStatisticsLabelMapFilterIUL3IUS3LM3_Pointer const & r) const;
     bool operator<=(itkBinaryImageToStatisticsLabelMapFilterIUL3IUS3LM3_Pointer const & r) const;
     bool operator>=(itkBinaryImageToStatisticsLabelMapFilterIUL3IUS3LM3_Pointer const & r) const;
     itkBinaryImageToStatisticsLabelMapFilterIUL3IUS3LM3_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUL3IUS3LM3_Pointer const & r);
     itkBinaryImageToStatisticsLabelMapFilterIUL3IUS3LM3_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUL3IUS3LM3 * r);
     itkBinaryImageToStatisticsLabelMapFilterIUL3IUS3LM3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUS2ID2LM2 : public itkImageToImageFilterIUS2LM2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToStatisticsLabelMapFilterIUS2ID2LM2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned short const _arg);
     virtual unsigned short GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetFeatureImage(itkImageD2 const * input);
     itkImageD2 const * GetFeatureImage();
     void SetInput1(itkImageUS2 const * input);
     void SetInput2(itkImageD2 const * input);
     virtual void SetComputeHistogram(bool const _arg);
     virtual bool const & GetComputeHistogram() const;
     virtual void ComputeHistogramOn();
     virtual void ComputeHistogramOff();
     virtual void SetNumberOfBins(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfBins() const;
   private:
     itkBinaryImageToStatisticsLabelMapFilterIUS2ID2LM2(itkBinaryImageToStatisticsLabelMapFilterIUS2ID2LM2 const & arg0);
     void operator=(itkBinaryImageToStatisticsLabelMapFilterIUS2ID2LM2 const & arg0);
   protected:
     itkBinaryImageToStatisticsLabelMapFilterIUS2ID2LM2();
     ~itkBinaryImageToStatisticsLabelMapFilterIUS2ID2LM2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUS2ID2LM2_Pointer {
   public:
     itkBinaryImageToStatisticsLabelMapFilterIUS2ID2LM2_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUS2ID2LM2_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUS2ID2LM2_Pointer const & p);
     itkBinaryImageToStatisticsLabelMapFilterIUS2ID2LM2_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUS2ID2LM2 * p);
     ~itkBinaryImageToStatisticsLabelMapFilterIUS2ID2LM2_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUS2ID2LM2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToStatisticsLabelMapFilterIUS2ID2LM2 * GetPointer() const;
     bool operator<(itkBinaryImageToStatisticsLabelMapFilterIUS2ID2LM2_Pointer const & r) const;
     bool operator>(itkBinaryImageToStatisticsLabelMapFilterIUS2ID2LM2_Pointer const & r) const;
     bool operator<=(itkBinaryImageToStatisticsLabelMapFilterIUS2ID2LM2_Pointer const & r) const;
     bool operator>=(itkBinaryImageToStatisticsLabelMapFilterIUS2ID2LM2_Pointer const & r) const;
     itkBinaryImageToStatisticsLabelMapFilterIUS2ID2LM2_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUS2ID2LM2_Pointer const & r);
     itkBinaryImageToStatisticsLabelMapFilterIUS2ID2LM2_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUS2ID2LM2 * r);
     itkBinaryImageToStatisticsLabelMapFilterIUS2ID2LM2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUS2IF2LM2 : public itkImageToImageFilterIUS2LM2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToStatisticsLabelMapFilterIUS2IF2LM2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned short const _arg);
     virtual unsigned short GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetFeatureImage(itkImageF2 const * input);
     itkImageF2 const * GetFeatureImage();
     void SetInput1(itkImageUS2 const * input);
     void SetInput2(itkImageF2 const * input);
     virtual void SetComputeHistogram(bool const _arg);
     virtual bool const & GetComputeHistogram() const;
     virtual void ComputeHistogramOn();
     virtual void ComputeHistogramOff();
     virtual void SetNumberOfBins(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfBins() const;
   private:
     itkBinaryImageToStatisticsLabelMapFilterIUS2IF2LM2(itkBinaryImageToStatisticsLabelMapFilterIUS2IF2LM2 const & arg0);
     void operator=(itkBinaryImageToStatisticsLabelMapFilterIUS2IF2LM2 const & arg0);
   protected:
     itkBinaryImageToStatisticsLabelMapFilterIUS2IF2LM2();
     ~itkBinaryImageToStatisticsLabelMapFilterIUS2IF2LM2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUS2IF2LM2_Pointer {
   public:
     itkBinaryImageToStatisticsLabelMapFilterIUS2IF2LM2_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUS2IF2LM2_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUS2IF2LM2_Pointer const & p);
     itkBinaryImageToStatisticsLabelMapFilterIUS2IF2LM2_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUS2IF2LM2 * p);
     ~itkBinaryImageToStatisticsLabelMapFilterIUS2IF2LM2_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUS2IF2LM2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToStatisticsLabelMapFilterIUS2IF2LM2 * GetPointer() const;
     bool operator<(itkBinaryImageToStatisticsLabelMapFilterIUS2IF2LM2_Pointer const & r) const;
     bool operator>(itkBinaryImageToStatisticsLabelMapFilterIUS2IF2LM2_Pointer const & r) const;
     bool operator<=(itkBinaryImageToStatisticsLabelMapFilterIUS2IF2LM2_Pointer const & r) const;
     bool operator>=(itkBinaryImageToStatisticsLabelMapFilterIUS2IF2LM2_Pointer const & r) const;
     itkBinaryImageToStatisticsLabelMapFilterIUS2IF2LM2_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUS2IF2LM2_Pointer const & r);
     itkBinaryImageToStatisticsLabelMapFilterIUS2IF2LM2_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUS2IF2LM2 * r);
     itkBinaryImageToStatisticsLabelMapFilterIUS2IF2LM2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUS2IUC2LM2 : public itkImageToImageFilterIUS2LM2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToStatisticsLabelMapFilterIUS2IUC2LM2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned short const _arg);
     virtual unsigned short GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetFeatureImage(itkImageUC2 const * input);
     itkImageUC2 const * GetFeatureImage();
     void SetInput1(itkImageUS2 const * input);
     void SetInput2(itkImageUC2 const * input);
     virtual void SetComputeHistogram(bool const _arg);
     virtual bool const & GetComputeHistogram() const;
     virtual void ComputeHistogramOn();
     virtual void ComputeHistogramOff();
     virtual void SetNumberOfBins(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfBins() const;
   private:
     itkBinaryImageToStatisticsLabelMapFilterIUS2IUC2LM2(itkBinaryImageToStatisticsLabelMapFilterIUS2IUC2LM2 const & arg0);
     void operator=(itkBinaryImageToStatisticsLabelMapFilterIUS2IUC2LM2 const & arg0);
   protected:
     itkBinaryImageToStatisticsLabelMapFilterIUS2IUC2LM2();
     ~itkBinaryImageToStatisticsLabelMapFilterIUS2IUC2LM2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUS2IUC2LM2_Pointer {
   public:
     itkBinaryImageToStatisticsLabelMapFilterIUS2IUC2LM2_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUS2IUC2LM2_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUS2IUC2LM2_Pointer const & p);
     itkBinaryImageToStatisticsLabelMapFilterIUS2IUC2LM2_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUS2IUC2LM2 * p);
     ~itkBinaryImageToStatisticsLabelMapFilterIUS2IUC2LM2_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUS2IUC2LM2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToStatisticsLabelMapFilterIUS2IUC2LM2 * GetPointer() const;
     bool operator<(itkBinaryImageToStatisticsLabelMapFilterIUS2IUC2LM2_Pointer const & r) const;
     bool operator>(itkBinaryImageToStatisticsLabelMapFilterIUS2IUC2LM2_Pointer const & r) const;
     bool operator<=(itkBinaryImageToStatisticsLabelMapFilterIUS2IUC2LM2_Pointer const & r) const;
     bool operator>=(itkBinaryImageToStatisticsLabelMapFilterIUS2IUC2LM2_Pointer const & r) const;
     itkBinaryImageToStatisticsLabelMapFilterIUS2IUC2LM2_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUS2IUC2LM2_Pointer const & r);
     itkBinaryImageToStatisticsLabelMapFilterIUS2IUC2LM2_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUS2IUC2LM2 * r);
     itkBinaryImageToStatisticsLabelMapFilterIUS2IUC2LM2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUS2IUL2LM2 : public itkImageToImageFilterIUS2LM2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToStatisticsLabelMapFilterIUS2IUL2LM2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned short const _arg);
     virtual unsigned short GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetFeatureImage(itkImageUL2 const * input);
     itkImageUL2 const * GetFeatureImage();
     void SetInput1(itkImageUS2 const * input);
     void SetInput2(itkImageUL2 const * input);
     virtual void SetComputeHistogram(bool const _arg);
     virtual bool const & GetComputeHistogram() const;
     virtual void ComputeHistogramOn();
     virtual void ComputeHistogramOff();
     virtual void SetNumberOfBins(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfBins() const;
   private:
     itkBinaryImageToStatisticsLabelMapFilterIUS2IUL2LM2(itkBinaryImageToStatisticsLabelMapFilterIUS2IUL2LM2 const & arg0);
     void operator=(itkBinaryImageToStatisticsLabelMapFilterIUS2IUL2LM2 const & arg0);
   protected:
     itkBinaryImageToStatisticsLabelMapFilterIUS2IUL2LM2();
     ~itkBinaryImageToStatisticsLabelMapFilterIUS2IUL2LM2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUS2IUL2LM2_Pointer {
   public:
     itkBinaryImageToStatisticsLabelMapFilterIUS2IUL2LM2_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUS2IUL2LM2_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUS2IUL2LM2_Pointer const & p);
     itkBinaryImageToStatisticsLabelMapFilterIUS2IUL2LM2_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUS2IUL2LM2 * p);
     ~itkBinaryImageToStatisticsLabelMapFilterIUS2IUL2LM2_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUS2IUL2LM2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToStatisticsLabelMapFilterIUS2IUL2LM2 * GetPointer() const;
     bool operator<(itkBinaryImageToStatisticsLabelMapFilterIUS2IUL2LM2_Pointer const & r) const;
     bool operator>(itkBinaryImageToStatisticsLabelMapFilterIUS2IUL2LM2_Pointer const & r) const;
     bool operator<=(itkBinaryImageToStatisticsLabelMapFilterIUS2IUL2LM2_Pointer const & r) const;
     bool operator>=(itkBinaryImageToStatisticsLabelMapFilterIUS2IUL2LM2_Pointer const & r) const;
     itkBinaryImageToStatisticsLabelMapFilterIUS2IUL2LM2_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUS2IUL2LM2_Pointer const & r);
     itkBinaryImageToStatisticsLabelMapFilterIUS2IUL2LM2_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUS2IUL2LM2 * r);
     itkBinaryImageToStatisticsLabelMapFilterIUS2IUL2LM2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUS2IUS2LM2 : public itkImageToImageFilterIUS2LM2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToStatisticsLabelMapFilterIUS2IUS2LM2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned short const _arg);
     virtual unsigned short GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetFeatureImage(itkImageUS2 const * input);
     itkImageUS2 const * GetFeatureImage();
     void SetInput1(itkImageUS2 const * input);
     void SetInput2(itkImageUS2 const * input);
     virtual void SetComputeHistogram(bool const _arg);
     virtual bool const & GetComputeHistogram() const;
     virtual void ComputeHistogramOn();
     virtual void ComputeHistogramOff();
     virtual void SetNumberOfBins(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfBins() const;
   private:
     itkBinaryImageToStatisticsLabelMapFilterIUS2IUS2LM2(itkBinaryImageToStatisticsLabelMapFilterIUS2IUS2LM2 const & arg0);
     void operator=(itkBinaryImageToStatisticsLabelMapFilterIUS2IUS2LM2 const & arg0);
   protected:
     itkBinaryImageToStatisticsLabelMapFilterIUS2IUS2LM2();
     ~itkBinaryImageToStatisticsLabelMapFilterIUS2IUS2LM2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUS2IUS2LM2_Pointer {
   public:
     itkBinaryImageToStatisticsLabelMapFilterIUS2IUS2LM2_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUS2IUS2LM2_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUS2IUS2LM2_Pointer const & p);
     itkBinaryImageToStatisticsLabelMapFilterIUS2IUS2LM2_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUS2IUS2LM2 * p);
     ~itkBinaryImageToStatisticsLabelMapFilterIUS2IUS2LM2_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUS2IUS2LM2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToStatisticsLabelMapFilterIUS2IUS2LM2 * GetPointer() const;
     bool operator<(itkBinaryImageToStatisticsLabelMapFilterIUS2IUS2LM2_Pointer const & r) const;
     bool operator>(itkBinaryImageToStatisticsLabelMapFilterIUS2IUS2LM2_Pointer const & r) const;
     bool operator<=(itkBinaryImageToStatisticsLabelMapFilterIUS2IUS2LM2_Pointer const & r) const;
     bool operator>=(itkBinaryImageToStatisticsLabelMapFilterIUS2IUS2LM2_Pointer const & r) const;
     itkBinaryImageToStatisticsLabelMapFilterIUS2IUS2LM2_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUS2IUS2LM2_Pointer const & r);
     itkBinaryImageToStatisticsLabelMapFilterIUS2IUS2LM2_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUS2IUS2LM2 * r);
     itkBinaryImageToStatisticsLabelMapFilterIUS2IUS2LM2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUS3ID3LM3 : public itkImageToImageFilterIUS3LM3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToStatisticsLabelMapFilterIUS3ID3LM3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned short const _arg);
     virtual unsigned short GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetFeatureImage(itkImageD3 const * input);
     itkImageD3 const * GetFeatureImage();
     void SetInput1(itkImageUS3 const * input);
     void SetInput2(itkImageD3 const * input);
     virtual void SetComputeHistogram(bool const _arg);
     virtual bool const & GetComputeHistogram() const;
     virtual void ComputeHistogramOn();
     virtual void ComputeHistogramOff();
     virtual void SetNumberOfBins(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfBins() const;
   private:
     itkBinaryImageToStatisticsLabelMapFilterIUS3ID3LM3(itkBinaryImageToStatisticsLabelMapFilterIUS3ID3LM3 const & arg0);
     void operator=(itkBinaryImageToStatisticsLabelMapFilterIUS3ID3LM3 const & arg0);
   protected:
     itkBinaryImageToStatisticsLabelMapFilterIUS3ID3LM3();
     ~itkBinaryImageToStatisticsLabelMapFilterIUS3ID3LM3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUS3ID3LM3_Pointer {
   public:
     itkBinaryImageToStatisticsLabelMapFilterIUS3ID3LM3_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUS3ID3LM3_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUS3ID3LM3_Pointer const & p);
     itkBinaryImageToStatisticsLabelMapFilterIUS3ID3LM3_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUS3ID3LM3 * p);
     ~itkBinaryImageToStatisticsLabelMapFilterIUS3ID3LM3_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUS3ID3LM3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToStatisticsLabelMapFilterIUS3ID3LM3 * GetPointer() const;
     bool operator<(itkBinaryImageToStatisticsLabelMapFilterIUS3ID3LM3_Pointer const & r) const;
     bool operator>(itkBinaryImageToStatisticsLabelMapFilterIUS3ID3LM3_Pointer const & r) const;
     bool operator<=(itkBinaryImageToStatisticsLabelMapFilterIUS3ID3LM3_Pointer const & r) const;
     bool operator>=(itkBinaryImageToStatisticsLabelMapFilterIUS3ID3LM3_Pointer const & r) const;
     itkBinaryImageToStatisticsLabelMapFilterIUS3ID3LM3_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUS3ID3LM3_Pointer const & r);
     itkBinaryImageToStatisticsLabelMapFilterIUS3ID3LM3_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUS3ID3LM3 * r);
     itkBinaryImageToStatisticsLabelMapFilterIUS3ID3LM3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUS3IF3LM3 : public itkImageToImageFilterIUS3LM3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToStatisticsLabelMapFilterIUS3IF3LM3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned short const _arg);
     virtual unsigned short GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetFeatureImage(itkImageF3 const * input);
     itkImageF3 const * GetFeatureImage();
     void SetInput1(itkImageUS3 const * input);
     void SetInput2(itkImageF3 const * input);
     virtual void SetComputeHistogram(bool const _arg);
     virtual bool const & GetComputeHistogram() const;
     virtual void ComputeHistogramOn();
     virtual void ComputeHistogramOff();
     virtual void SetNumberOfBins(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfBins() const;
   private:
     itkBinaryImageToStatisticsLabelMapFilterIUS3IF3LM3(itkBinaryImageToStatisticsLabelMapFilterIUS3IF3LM3 const & arg0);
     void operator=(itkBinaryImageToStatisticsLabelMapFilterIUS3IF3LM3 const & arg0);
   protected:
     itkBinaryImageToStatisticsLabelMapFilterIUS3IF3LM3();
     ~itkBinaryImageToStatisticsLabelMapFilterIUS3IF3LM3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUS3IF3LM3_Pointer {
   public:
     itkBinaryImageToStatisticsLabelMapFilterIUS3IF3LM3_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUS3IF3LM3_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUS3IF3LM3_Pointer const & p);
     itkBinaryImageToStatisticsLabelMapFilterIUS3IF3LM3_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUS3IF3LM3 * p);
     ~itkBinaryImageToStatisticsLabelMapFilterIUS3IF3LM3_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUS3IF3LM3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToStatisticsLabelMapFilterIUS3IF3LM3 * GetPointer() const;
     bool operator<(itkBinaryImageToStatisticsLabelMapFilterIUS3IF3LM3_Pointer const & r) const;
     bool operator>(itkBinaryImageToStatisticsLabelMapFilterIUS3IF3LM3_Pointer const & r) const;
     bool operator<=(itkBinaryImageToStatisticsLabelMapFilterIUS3IF3LM3_Pointer const & r) const;
     bool operator>=(itkBinaryImageToStatisticsLabelMapFilterIUS3IF3LM3_Pointer const & r) const;
     itkBinaryImageToStatisticsLabelMapFilterIUS3IF3LM3_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUS3IF3LM3_Pointer const & r);
     itkBinaryImageToStatisticsLabelMapFilterIUS3IF3LM3_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUS3IF3LM3 * r);
     itkBinaryImageToStatisticsLabelMapFilterIUS3IF3LM3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUS3IUC3LM3 : public itkImageToImageFilterIUS3LM3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToStatisticsLabelMapFilterIUS3IUC3LM3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned short const _arg);
     virtual unsigned short GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetFeatureImage(itkImageUC3 const * input);
     itkImageUC3 const * GetFeatureImage();
     void SetInput1(itkImageUS3 const * input);
     void SetInput2(itkImageUC3 const * input);
     virtual void SetComputeHistogram(bool const _arg);
     virtual bool const & GetComputeHistogram() const;
     virtual void ComputeHistogramOn();
     virtual void ComputeHistogramOff();
     virtual void SetNumberOfBins(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfBins() const;
   private:
     itkBinaryImageToStatisticsLabelMapFilterIUS3IUC3LM3(itkBinaryImageToStatisticsLabelMapFilterIUS3IUC3LM3 const & arg0);
     void operator=(itkBinaryImageToStatisticsLabelMapFilterIUS3IUC3LM3 const & arg0);
   protected:
     itkBinaryImageToStatisticsLabelMapFilterIUS3IUC3LM3();
     ~itkBinaryImageToStatisticsLabelMapFilterIUS3IUC3LM3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUS3IUC3LM3_Pointer {
   public:
     itkBinaryImageToStatisticsLabelMapFilterIUS3IUC3LM3_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUS3IUC3LM3_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUS3IUC3LM3_Pointer const & p);
     itkBinaryImageToStatisticsLabelMapFilterIUS3IUC3LM3_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUS3IUC3LM3 * p);
     ~itkBinaryImageToStatisticsLabelMapFilterIUS3IUC3LM3_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUS3IUC3LM3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToStatisticsLabelMapFilterIUS3IUC3LM3 * GetPointer() const;
     bool operator<(itkBinaryImageToStatisticsLabelMapFilterIUS3IUC3LM3_Pointer const & r) const;
     bool operator>(itkBinaryImageToStatisticsLabelMapFilterIUS3IUC3LM3_Pointer const & r) const;
     bool operator<=(itkBinaryImageToStatisticsLabelMapFilterIUS3IUC3LM3_Pointer const & r) const;
     bool operator>=(itkBinaryImageToStatisticsLabelMapFilterIUS3IUC3LM3_Pointer const & r) const;
     itkBinaryImageToStatisticsLabelMapFilterIUS3IUC3LM3_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUS3IUC3LM3_Pointer const & r);
     itkBinaryImageToStatisticsLabelMapFilterIUS3IUC3LM3_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUS3IUC3LM3 * r);
     itkBinaryImageToStatisticsLabelMapFilterIUS3IUC3LM3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUS3IUL3LM3 : public itkImageToImageFilterIUS3LM3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToStatisticsLabelMapFilterIUS3IUL3LM3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned short const _arg);
     virtual unsigned short GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetFeatureImage(itkImageUL3 const * input);
     itkImageUL3 const * GetFeatureImage();
     void SetInput1(itkImageUS3 const * input);
     void SetInput2(itkImageUL3 const * input);
     virtual void SetComputeHistogram(bool const _arg);
     virtual bool const & GetComputeHistogram() const;
     virtual void ComputeHistogramOn();
     virtual void ComputeHistogramOff();
     virtual void SetNumberOfBins(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfBins() const;
   private:
     itkBinaryImageToStatisticsLabelMapFilterIUS3IUL3LM3(itkBinaryImageToStatisticsLabelMapFilterIUS3IUL3LM3 const & arg0);
     void operator=(itkBinaryImageToStatisticsLabelMapFilterIUS3IUL3LM3 const & arg0);
   protected:
     itkBinaryImageToStatisticsLabelMapFilterIUS3IUL3LM3();
     ~itkBinaryImageToStatisticsLabelMapFilterIUS3IUL3LM3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUS3IUL3LM3_Pointer {
   public:
     itkBinaryImageToStatisticsLabelMapFilterIUS3IUL3LM3_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUS3IUL3LM3_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUS3IUL3LM3_Pointer const & p);
     itkBinaryImageToStatisticsLabelMapFilterIUS3IUL3LM3_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUS3IUL3LM3 * p);
     ~itkBinaryImageToStatisticsLabelMapFilterIUS3IUL3LM3_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUS3IUL3LM3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToStatisticsLabelMapFilterIUS3IUL3LM3 * GetPointer() const;
     bool operator<(itkBinaryImageToStatisticsLabelMapFilterIUS3IUL3LM3_Pointer const & r) const;
     bool operator>(itkBinaryImageToStatisticsLabelMapFilterIUS3IUL3LM3_Pointer const & r) const;
     bool operator<=(itkBinaryImageToStatisticsLabelMapFilterIUS3IUL3LM3_Pointer const & r) const;
     bool operator>=(itkBinaryImageToStatisticsLabelMapFilterIUS3IUL3LM3_Pointer const & r) const;
     itkBinaryImageToStatisticsLabelMapFilterIUS3IUL3LM3_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUS3IUL3LM3_Pointer const & r);
     itkBinaryImageToStatisticsLabelMapFilterIUS3IUL3LM3_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUS3IUL3LM3 * r);
     itkBinaryImageToStatisticsLabelMapFilterIUS3IUL3LM3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUS3IUS3LM3 : public itkImageToImageFilterIUS3LM3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToStatisticsLabelMapFilterIUS3IUS3LM3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned short const _arg);
     virtual unsigned short GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetFeatureImage(itkImageUS3 const * input);
     itkImageUS3 const * GetFeatureImage();
     void SetInput1(itkImageUS3 const * input);
     void SetInput2(itkImageUS3 const * input);
     virtual void SetComputeHistogram(bool const _arg);
     virtual bool const & GetComputeHistogram() const;
     virtual void ComputeHistogramOn();
     virtual void ComputeHistogramOff();
     virtual void SetNumberOfBins(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfBins() const;
   private:
     itkBinaryImageToStatisticsLabelMapFilterIUS3IUS3LM3(itkBinaryImageToStatisticsLabelMapFilterIUS3IUS3LM3 const & arg0);
     void operator=(itkBinaryImageToStatisticsLabelMapFilterIUS3IUS3LM3 const & arg0);
   protected:
     itkBinaryImageToStatisticsLabelMapFilterIUS3IUS3LM3();
     ~itkBinaryImageToStatisticsLabelMapFilterIUS3IUS3LM3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToStatisticsLabelMapFilterIUS3IUS3LM3_Pointer {
   public:
     itkBinaryImageToStatisticsLabelMapFilterIUS3IUS3LM3_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUS3IUS3LM3_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUS3IUS3LM3_Pointer const & p);
     itkBinaryImageToStatisticsLabelMapFilterIUS3IUS3LM3_Pointer(itkBinaryImageToStatisticsLabelMapFilterIUS3IUS3LM3 * p);
     ~itkBinaryImageToStatisticsLabelMapFilterIUS3IUS3LM3_Pointer();
     itkBinaryImageToStatisticsLabelMapFilterIUS3IUS3LM3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToStatisticsLabelMapFilterIUS3IUS3LM3 * GetPointer() const;
     bool operator<(itkBinaryImageToStatisticsLabelMapFilterIUS3IUS3LM3_Pointer const & r) const;
     bool operator>(itkBinaryImageToStatisticsLabelMapFilterIUS3IUS3LM3_Pointer const & r) const;
     bool operator<=(itkBinaryImageToStatisticsLabelMapFilterIUS3IUS3LM3_Pointer const & r) const;
     bool operator>=(itkBinaryImageToStatisticsLabelMapFilterIUS3IUS3LM3_Pointer const & r) const;
     itkBinaryImageToStatisticsLabelMapFilterIUS3IUS3LM3_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUS3IUS3LM3_Pointer const & r);
     itkBinaryImageToStatisticsLabelMapFilterIUS3IUS3LM3_Pointer & operator=(itkBinaryImageToStatisticsLabelMapFilterIUS3IUS3LM3 * r);
     itkBinaryImageToStatisticsLabelMapFilterIUS3IUS3LM3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


