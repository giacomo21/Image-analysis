# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkDifferenceOfGaussiansGradientImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkDifferenceOfGaussiansGradientImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkDifferenceOfGaussiansGradientImageFilterPython
            return _itkDifferenceOfGaussiansGradientImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkDifferenceOfGaussiansGradientImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkDifferenceOfGaussiansGradientImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkDifferenceOfGaussiansGradientImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkImageToImageFilterBPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
def itkDifferenceOfGaussiansGradientImageFilterID3F_New():
  return itkDifferenceOfGaussiansGradientImageFilterID3F.New()

def itkDifferenceOfGaussiansGradientImageFilterIF3F_New():
  return itkDifferenceOfGaussiansGradientImageFilterIF3F.New()

def itkDifferenceOfGaussiansGradientImageFilterIUS3F_New():
  return itkDifferenceOfGaussiansGradientImageFilterIUS3F.New()

def itkDifferenceOfGaussiansGradientImageFilterIUL3F_New():
  return itkDifferenceOfGaussiansGradientImageFilterIUL3F.New()

def itkDifferenceOfGaussiansGradientImageFilterIUC3F_New():
  return itkDifferenceOfGaussiansGradientImageFilterIUC3F.New()

def itkDifferenceOfGaussiansGradientImageFilterID2F_New():
  return itkDifferenceOfGaussiansGradientImageFilterID2F.New()

def itkDifferenceOfGaussiansGradientImageFilterIF2F_New():
  return itkDifferenceOfGaussiansGradientImageFilterIF2F.New()

def itkDifferenceOfGaussiansGradientImageFilterIUS2F_New():
  return itkDifferenceOfGaussiansGradientImageFilterIUS2F.New()

def itkDifferenceOfGaussiansGradientImageFilterIUL2F_New():
  return itkDifferenceOfGaussiansGradientImageFilterIUL2F.New()

def itkDifferenceOfGaussiansGradientImageFilterIUC2F_New():
  return itkDifferenceOfGaussiansGradientImageFilterIUC2F.New()

class itkDifferenceOfGaussiansGradientImageFilterID2F(itkImageToImageFilterBPython.itkImageToImageFilterID2ICVF22):
    """Proxy of C++ itkDifferenceOfGaussiansGradientImageFilterID2F class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NDimensions = _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterID2F_NDimensions
    DataTypeHasNumericTraitsCheck = _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterID2F_DataTypeHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterID2F___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetWidth(self):
        """GetWidth(self) -> unsigned int"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterID2F_GetWidth(self)

    def SetWidth(self, *args):
        """SetWidth(self, unsigned int _arg)"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterID2F_SetWidth(self, *args)

    __swig_destroy__ = _itkDifferenceOfGaussiansGradientImageFilterPython.delete_itkDifferenceOfGaussiansGradientImageFilterID2F
    def cast(*args):
        """cast(itkLightObject obj) -> itkDifferenceOfGaussiansGradientImageFilterID2F"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterID2F_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDifferenceOfGaussiansGradientImageFilterID2F"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterID2F_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDifferenceOfGaussiansGradientImageFilterID2F
        
        Create a new object of the class itkDifferenceOfGaussiansGradientImageFilterID2F and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDifferenceOfGaussiansGradientImageFilterID2F.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDifferenceOfGaussiansGradientImageFilterID2F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDifferenceOfGaussiansGradientImageFilterID2F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDifferenceOfGaussiansGradientImageFilterID2F.GetWidth = new_instancemethod(_itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterID2F_GetWidth,None,itkDifferenceOfGaussiansGradientImageFilterID2F)
itkDifferenceOfGaussiansGradientImageFilterID2F.SetWidth = new_instancemethod(_itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterID2F_SetWidth,None,itkDifferenceOfGaussiansGradientImageFilterID2F)
itkDifferenceOfGaussiansGradientImageFilterID2F.GetPointer = new_instancemethod(_itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterID2F_GetPointer,None,itkDifferenceOfGaussiansGradientImageFilterID2F)
itkDifferenceOfGaussiansGradientImageFilterID2F_swigregister = _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterID2F_swigregister
itkDifferenceOfGaussiansGradientImageFilterID2F_swigregister(itkDifferenceOfGaussiansGradientImageFilterID2F)

def itkDifferenceOfGaussiansGradientImageFilterID2F___New_orig__():
  """itkDifferenceOfGaussiansGradientImageFilterID2F___New_orig__()"""
  return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterID2F___New_orig__()

def itkDifferenceOfGaussiansGradientImageFilterID2F_cast(*args):
  """itkDifferenceOfGaussiansGradientImageFilterID2F_cast(itkLightObject obj) -> itkDifferenceOfGaussiansGradientImageFilterID2F"""
  return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterID2F_cast(*args)

class itkDifferenceOfGaussiansGradientImageFilterID3F(itkImageToImageFilterBPython.itkImageToImageFilterID3ICVF33):
    """Proxy of C++ itkDifferenceOfGaussiansGradientImageFilterID3F class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NDimensions = _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterID3F_NDimensions
    DataTypeHasNumericTraitsCheck = _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterID3F_DataTypeHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterID3F___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetWidth(self):
        """GetWidth(self) -> unsigned int"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterID3F_GetWidth(self)

    def SetWidth(self, *args):
        """SetWidth(self, unsigned int _arg)"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterID3F_SetWidth(self, *args)

    __swig_destroy__ = _itkDifferenceOfGaussiansGradientImageFilterPython.delete_itkDifferenceOfGaussiansGradientImageFilterID3F
    def cast(*args):
        """cast(itkLightObject obj) -> itkDifferenceOfGaussiansGradientImageFilterID3F"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterID3F_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDifferenceOfGaussiansGradientImageFilterID3F"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterID3F_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDifferenceOfGaussiansGradientImageFilterID3F
        
        Create a new object of the class itkDifferenceOfGaussiansGradientImageFilterID3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDifferenceOfGaussiansGradientImageFilterID3F.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDifferenceOfGaussiansGradientImageFilterID3F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDifferenceOfGaussiansGradientImageFilterID3F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDifferenceOfGaussiansGradientImageFilterID3F.GetWidth = new_instancemethod(_itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterID3F_GetWidth,None,itkDifferenceOfGaussiansGradientImageFilterID3F)
itkDifferenceOfGaussiansGradientImageFilterID3F.SetWidth = new_instancemethod(_itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterID3F_SetWidth,None,itkDifferenceOfGaussiansGradientImageFilterID3F)
itkDifferenceOfGaussiansGradientImageFilterID3F.GetPointer = new_instancemethod(_itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterID3F_GetPointer,None,itkDifferenceOfGaussiansGradientImageFilterID3F)
itkDifferenceOfGaussiansGradientImageFilterID3F_swigregister = _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterID3F_swigregister
itkDifferenceOfGaussiansGradientImageFilterID3F_swigregister(itkDifferenceOfGaussiansGradientImageFilterID3F)

def itkDifferenceOfGaussiansGradientImageFilterID3F___New_orig__():
  """itkDifferenceOfGaussiansGradientImageFilterID3F___New_orig__()"""
  return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterID3F___New_orig__()

def itkDifferenceOfGaussiansGradientImageFilterID3F_cast(*args):
  """itkDifferenceOfGaussiansGradientImageFilterID3F_cast(itkLightObject obj) -> itkDifferenceOfGaussiansGradientImageFilterID3F"""
  return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterID3F_cast(*args)

class itkDifferenceOfGaussiansGradientImageFilterIF2F(itkImageToImageFilterBPython.itkImageToImageFilterIF2ICVF22):
    """Proxy of C++ itkDifferenceOfGaussiansGradientImageFilterIF2F class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NDimensions = _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIF2F_NDimensions
    DataTypeHasNumericTraitsCheck = _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIF2F_DataTypeHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIF2F___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetWidth(self):
        """GetWidth(self) -> unsigned int"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIF2F_GetWidth(self)

    def SetWidth(self, *args):
        """SetWidth(self, unsigned int _arg)"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIF2F_SetWidth(self, *args)

    __swig_destroy__ = _itkDifferenceOfGaussiansGradientImageFilterPython.delete_itkDifferenceOfGaussiansGradientImageFilterIF2F
    def cast(*args):
        """cast(itkLightObject obj) -> itkDifferenceOfGaussiansGradientImageFilterIF2F"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIF2F_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDifferenceOfGaussiansGradientImageFilterIF2F"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIF2F_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDifferenceOfGaussiansGradientImageFilterIF2F
        
        Create a new object of the class itkDifferenceOfGaussiansGradientImageFilterIF2F and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDifferenceOfGaussiansGradientImageFilterIF2F.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDifferenceOfGaussiansGradientImageFilterIF2F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDifferenceOfGaussiansGradientImageFilterIF2F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDifferenceOfGaussiansGradientImageFilterIF2F.GetWidth = new_instancemethod(_itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIF2F_GetWidth,None,itkDifferenceOfGaussiansGradientImageFilterIF2F)
itkDifferenceOfGaussiansGradientImageFilterIF2F.SetWidth = new_instancemethod(_itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIF2F_SetWidth,None,itkDifferenceOfGaussiansGradientImageFilterIF2F)
itkDifferenceOfGaussiansGradientImageFilterIF2F.GetPointer = new_instancemethod(_itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIF2F_GetPointer,None,itkDifferenceOfGaussiansGradientImageFilterIF2F)
itkDifferenceOfGaussiansGradientImageFilterIF2F_swigregister = _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIF2F_swigregister
itkDifferenceOfGaussiansGradientImageFilterIF2F_swigregister(itkDifferenceOfGaussiansGradientImageFilterIF2F)

def itkDifferenceOfGaussiansGradientImageFilterIF2F___New_orig__():
  """itkDifferenceOfGaussiansGradientImageFilterIF2F___New_orig__()"""
  return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIF2F___New_orig__()

def itkDifferenceOfGaussiansGradientImageFilterIF2F_cast(*args):
  """itkDifferenceOfGaussiansGradientImageFilterIF2F_cast(itkLightObject obj) -> itkDifferenceOfGaussiansGradientImageFilterIF2F"""
  return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIF2F_cast(*args)

class itkDifferenceOfGaussiansGradientImageFilterIF3F(itkImageToImageFilterBPython.itkImageToImageFilterIF3ICVF33):
    """Proxy of C++ itkDifferenceOfGaussiansGradientImageFilterIF3F class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NDimensions = _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIF3F_NDimensions
    DataTypeHasNumericTraitsCheck = _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIF3F_DataTypeHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIF3F___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetWidth(self):
        """GetWidth(self) -> unsigned int"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIF3F_GetWidth(self)

    def SetWidth(self, *args):
        """SetWidth(self, unsigned int _arg)"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIF3F_SetWidth(self, *args)

    __swig_destroy__ = _itkDifferenceOfGaussiansGradientImageFilterPython.delete_itkDifferenceOfGaussiansGradientImageFilterIF3F
    def cast(*args):
        """cast(itkLightObject obj) -> itkDifferenceOfGaussiansGradientImageFilterIF3F"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIF3F_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDifferenceOfGaussiansGradientImageFilterIF3F"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIF3F_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDifferenceOfGaussiansGradientImageFilterIF3F
        
        Create a new object of the class itkDifferenceOfGaussiansGradientImageFilterIF3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDifferenceOfGaussiansGradientImageFilterIF3F.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDifferenceOfGaussiansGradientImageFilterIF3F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDifferenceOfGaussiansGradientImageFilterIF3F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDifferenceOfGaussiansGradientImageFilterIF3F.GetWidth = new_instancemethod(_itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIF3F_GetWidth,None,itkDifferenceOfGaussiansGradientImageFilterIF3F)
itkDifferenceOfGaussiansGradientImageFilterIF3F.SetWidth = new_instancemethod(_itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIF3F_SetWidth,None,itkDifferenceOfGaussiansGradientImageFilterIF3F)
itkDifferenceOfGaussiansGradientImageFilterIF3F.GetPointer = new_instancemethod(_itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIF3F_GetPointer,None,itkDifferenceOfGaussiansGradientImageFilterIF3F)
itkDifferenceOfGaussiansGradientImageFilterIF3F_swigregister = _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIF3F_swigregister
itkDifferenceOfGaussiansGradientImageFilterIF3F_swigregister(itkDifferenceOfGaussiansGradientImageFilterIF3F)

def itkDifferenceOfGaussiansGradientImageFilterIF3F___New_orig__():
  """itkDifferenceOfGaussiansGradientImageFilterIF3F___New_orig__()"""
  return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIF3F___New_orig__()

def itkDifferenceOfGaussiansGradientImageFilterIF3F_cast(*args):
  """itkDifferenceOfGaussiansGradientImageFilterIF3F_cast(itkLightObject obj) -> itkDifferenceOfGaussiansGradientImageFilterIF3F"""
  return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIF3F_cast(*args)

class itkDifferenceOfGaussiansGradientImageFilterIUC2F(itkImageToImageFilterBPython.itkImageToImageFilterIUC2ICVF22):
    """Proxy of C++ itkDifferenceOfGaussiansGradientImageFilterIUC2F class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NDimensions = _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUC2F_NDimensions
    DataTypeHasNumericTraitsCheck = _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUC2F_DataTypeHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUC2F___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetWidth(self):
        """GetWidth(self) -> unsigned int"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUC2F_GetWidth(self)

    def SetWidth(self, *args):
        """SetWidth(self, unsigned int _arg)"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUC2F_SetWidth(self, *args)

    __swig_destroy__ = _itkDifferenceOfGaussiansGradientImageFilterPython.delete_itkDifferenceOfGaussiansGradientImageFilterIUC2F
    def cast(*args):
        """cast(itkLightObject obj) -> itkDifferenceOfGaussiansGradientImageFilterIUC2F"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUC2F_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDifferenceOfGaussiansGradientImageFilterIUC2F"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUC2F_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDifferenceOfGaussiansGradientImageFilterIUC2F
        
        Create a new object of the class itkDifferenceOfGaussiansGradientImageFilterIUC2F and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDifferenceOfGaussiansGradientImageFilterIUC2F.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDifferenceOfGaussiansGradientImageFilterIUC2F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDifferenceOfGaussiansGradientImageFilterIUC2F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDifferenceOfGaussiansGradientImageFilterIUC2F.GetWidth = new_instancemethod(_itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUC2F_GetWidth,None,itkDifferenceOfGaussiansGradientImageFilterIUC2F)
itkDifferenceOfGaussiansGradientImageFilterIUC2F.SetWidth = new_instancemethod(_itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUC2F_SetWidth,None,itkDifferenceOfGaussiansGradientImageFilterIUC2F)
itkDifferenceOfGaussiansGradientImageFilterIUC2F.GetPointer = new_instancemethod(_itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUC2F_GetPointer,None,itkDifferenceOfGaussiansGradientImageFilterIUC2F)
itkDifferenceOfGaussiansGradientImageFilterIUC2F_swigregister = _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUC2F_swigregister
itkDifferenceOfGaussiansGradientImageFilterIUC2F_swigregister(itkDifferenceOfGaussiansGradientImageFilterIUC2F)

def itkDifferenceOfGaussiansGradientImageFilterIUC2F___New_orig__():
  """itkDifferenceOfGaussiansGradientImageFilterIUC2F___New_orig__()"""
  return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUC2F___New_orig__()

def itkDifferenceOfGaussiansGradientImageFilterIUC2F_cast(*args):
  """itkDifferenceOfGaussiansGradientImageFilterIUC2F_cast(itkLightObject obj) -> itkDifferenceOfGaussiansGradientImageFilterIUC2F"""
  return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUC2F_cast(*args)

class itkDifferenceOfGaussiansGradientImageFilterIUC3F(itkImageToImageFilterBPython.itkImageToImageFilterIUC3ICVF33):
    """Proxy of C++ itkDifferenceOfGaussiansGradientImageFilterIUC3F class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NDimensions = _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUC3F_NDimensions
    DataTypeHasNumericTraitsCheck = _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUC3F_DataTypeHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUC3F___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetWidth(self):
        """GetWidth(self) -> unsigned int"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUC3F_GetWidth(self)

    def SetWidth(self, *args):
        """SetWidth(self, unsigned int _arg)"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUC3F_SetWidth(self, *args)

    __swig_destroy__ = _itkDifferenceOfGaussiansGradientImageFilterPython.delete_itkDifferenceOfGaussiansGradientImageFilterIUC3F
    def cast(*args):
        """cast(itkLightObject obj) -> itkDifferenceOfGaussiansGradientImageFilterIUC3F"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUC3F_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDifferenceOfGaussiansGradientImageFilterIUC3F"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUC3F_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDifferenceOfGaussiansGradientImageFilterIUC3F
        
        Create a new object of the class itkDifferenceOfGaussiansGradientImageFilterIUC3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDifferenceOfGaussiansGradientImageFilterIUC3F.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDifferenceOfGaussiansGradientImageFilterIUC3F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDifferenceOfGaussiansGradientImageFilterIUC3F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDifferenceOfGaussiansGradientImageFilterIUC3F.GetWidth = new_instancemethod(_itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUC3F_GetWidth,None,itkDifferenceOfGaussiansGradientImageFilterIUC3F)
itkDifferenceOfGaussiansGradientImageFilterIUC3F.SetWidth = new_instancemethod(_itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUC3F_SetWidth,None,itkDifferenceOfGaussiansGradientImageFilterIUC3F)
itkDifferenceOfGaussiansGradientImageFilterIUC3F.GetPointer = new_instancemethod(_itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUC3F_GetPointer,None,itkDifferenceOfGaussiansGradientImageFilterIUC3F)
itkDifferenceOfGaussiansGradientImageFilterIUC3F_swigregister = _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUC3F_swigregister
itkDifferenceOfGaussiansGradientImageFilterIUC3F_swigregister(itkDifferenceOfGaussiansGradientImageFilterIUC3F)

def itkDifferenceOfGaussiansGradientImageFilterIUC3F___New_orig__():
  """itkDifferenceOfGaussiansGradientImageFilterIUC3F___New_orig__()"""
  return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUC3F___New_orig__()

def itkDifferenceOfGaussiansGradientImageFilterIUC3F_cast(*args):
  """itkDifferenceOfGaussiansGradientImageFilterIUC3F_cast(itkLightObject obj) -> itkDifferenceOfGaussiansGradientImageFilterIUC3F"""
  return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUC3F_cast(*args)

class itkDifferenceOfGaussiansGradientImageFilterIUL2F(itkImageToImageFilterBPython.itkImageToImageFilterIUL2ICVF22):
    """Proxy of C++ itkDifferenceOfGaussiansGradientImageFilterIUL2F class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NDimensions = _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUL2F_NDimensions
    DataTypeHasNumericTraitsCheck = _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUL2F_DataTypeHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUL2F___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetWidth(self):
        """GetWidth(self) -> unsigned int"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUL2F_GetWidth(self)

    def SetWidth(self, *args):
        """SetWidth(self, unsigned int _arg)"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUL2F_SetWidth(self, *args)

    __swig_destroy__ = _itkDifferenceOfGaussiansGradientImageFilterPython.delete_itkDifferenceOfGaussiansGradientImageFilterIUL2F
    def cast(*args):
        """cast(itkLightObject obj) -> itkDifferenceOfGaussiansGradientImageFilterIUL2F"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUL2F_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDifferenceOfGaussiansGradientImageFilterIUL2F"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUL2F_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDifferenceOfGaussiansGradientImageFilterIUL2F
        
        Create a new object of the class itkDifferenceOfGaussiansGradientImageFilterIUL2F and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDifferenceOfGaussiansGradientImageFilterIUL2F.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDifferenceOfGaussiansGradientImageFilterIUL2F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDifferenceOfGaussiansGradientImageFilterIUL2F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDifferenceOfGaussiansGradientImageFilterIUL2F.GetWidth = new_instancemethod(_itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUL2F_GetWidth,None,itkDifferenceOfGaussiansGradientImageFilterIUL2F)
itkDifferenceOfGaussiansGradientImageFilterIUL2F.SetWidth = new_instancemethod(_itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUL2F_SetWidth,None,itkDifferenceOfGaussiansGradientImageFilterIUL2F)
itkDifferenceOfGaussiansGradientImageFilterIUL2F.GetPointer = new_instancemethod(_itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUL2F_GetPointer,None,itkDifferenceOfGaussiansGradientImageFilterIUL2F)
itkDifferenceOfGaussiansGradientImageFilterIUL2F_swigregister = _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUL2F_swigregister
itkDifferenceOfGaussiansGradientImageFilterIUL2F_swigregister(itkDifferenceOfGaussiansGradientImageFilterIUL2F)

def itkDifferenceOfGaussiansGradientImageFilterIUL2F___New_orig__():
  """itkDifferenceOfGaussiansGradientImageFilterIUL2F___New_orig__()"""
  return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUL2F___New_orig__()

def itkDifferenceOfGaussiansGradientImageFilterIUL2F_cast(*args):
  """itkDifferenceOfGaussiansGradientImageFilterIUL2F_cast(itkLightObject obj) -> itkDifferenceOfGaussiansGradientImageFilterIUL2F"""
  return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUL2F_cast(*args)

class itkDifferenceOfGaussiansGradientImageFilterIUL3F(itkImageToImageFilterBPython.itkImageToImageFilterIUL3ICVF33):
    """Proxy of C++ itkDifferenceOfGaussiansGradientImageFilterIUL3F class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NDimensions = _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUL3F_NDimensions
    DataTypeHasNumericTraitsCheck = _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUL3F_DataTypeHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUL3F___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetWidth(self):
        """GetWidth(self) -> unsigned int"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUL3F_GetWidth(self)

    def SetWidth(self, *args):
        """SetWidth(self, unsigned int _arg)"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUL3F_SetWidth(self, *args)

    __swig_destroy__ = _itkDifferenceOfGaussiansGradientImageFilterPython.delete_itkDifferenceOfGaussiansGradientImageFilterIUL3F
    def cast(*args):
        """cast(itkLightObject obj) -> itkDifferenceOfGaussiansGradientImageFilterIUL3F"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUL3F_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDifferenceOfGaussiansGradientImageFilterIUL3F"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUL3F_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDifferenceOfGaussiansGradientImageFilterIUL3F
        
        Create a new object of the class itkDifferenceOfGaussiansGradientImageFilterIUL3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDifferenceOfGaussiansGradientImageFilterIUL3F.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDifferenceOfGaussiansGradientImageFilterIUL3F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDifferenceOfGaussiansGradientImageFilterIUL3F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDifferenceOfGaussiansGradientImageFilterIUL3F.GetWidth = new_instancemethod(_itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUL3F_GetWidth,None,itkDifferenceOfGaussiansGradientImageFilterIUL3F)
itkDifferenceOfGaussiansGradientImageFilterIUL3F.SetWidth = new_instancemethod(_itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUL3F_SetWidth,None,itkDifferenceOfGaussiansGradientImageFilterIUL3F)
itkDifferenceOfGaussiansGradientImageFilterIUL3F.GetPointer = new_instancemethod(_itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUL3F_GetPointer,None,itkDifferenceOfGaussiansGradientImageFilterIUL3F)
itkDifferenceOfGaussiansGradientImageFilterIUL3F_swigregister = _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUL3F_swigregister
itkDifferenceOfGaussiansGradientImageFilterIUL3F_swigregister(itkDifferenceOfGaussiansGradientImageFilterIUL3F)

def itkDifferenceOfGaussiansGradientImageFilterIUL3F___New_orig__():
  """itkDifferenceOfGaussiansGradientImageFilterIUL3F___New_orig__()"""
  return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUL3F___New_orig__()

def itkDifferenceOfGaussiansGradientImageFilterIUL3F_cast(*args):
  """itkDifferenceOfGaussiansGradientImageFilterIUL3F_cast(itkLightObject obj) -> itkDifferenceOfGaussiansGradientImageFilterIUL3F"""
  return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUL3F_cast(*args)

class itkDifferenceOfGaussiansGradientImageFilterIUS2F(itkImageToImageFilterBPython.itkImageToImageFilterIUS2ICVF22):
    """Proxy of C++ itkDifferenceOfGaussiansGradientImageFilterIUS2F class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NDimensions = _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUS2F_NDimensions
    DataTypeHasNumericTraitsCheck = _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUS2F_DataTypeHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUS2F___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetWidth(self):
        """GetWidth(self) -> unsigned int"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUS2F_GetWidth(self)

    def SetWidth(self, *args):
        """SetWidth(self, unsigned int _arg)"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUS2F_SetWidth(self, *args)

    __swig_destroy__ = _itkDifferenceOfGaussiansGradientImageFilterPython.delete_itkDifferenceOfGaussiansGradientImageFilterIUS2F
    def cast(*args):
        """cast(itkLightObject obj) -> itkDifferenceOfGaussiansGradientImageFilterIUS2F"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUS2F_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDifferenceOfGaussiansGradientImageFilterIUS2F"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUS2F_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDifferenceOfGaussiansGradientImageFilterIUS2F
        
        Create a new object of the class itkDifferenceOfGaussiansGradientImageFilterIUS2F and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDifferenceOfGaussiansGradientImageFilterIUS2F.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDifferenceOfGaussiansGradientImageFilterIUS2F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDifferenceOfGaussiansGradientImageFilterIUS2F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDifferenceOfGaussiansGradientImageFilterIUS2F.GetWidth = new_instancemethod(_itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUS2F_GetWidth,None,itkDifferenceOfGaussiansGradientImageFilterIUS2F)
itkDifferenceOfGaussiansGradientImageFilterIUS2F.SetWidth = new_instancemethod(_itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUS2F_SetWidth,None,itkDifferenceOfGaussiansGradientImageFilterIUS2F)
itkDifferenceOfGaussiansGradientImageFilterIUS2F.GetPointer = new_instancemethod(_itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUS2F_GetPointer,None,itkDifferenceOfGaussiansGradientImageFilterIUS2F)
itkDifferenceOfGaussiansGradientImageFilterIUS2F_swigregister = _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUS2F_swigregister
itkDifferenceOfGaussiansGradientImageFilterIUS2F_swigregister(itkDifferenceOfGaussiansGradientImageFilterIUS2F)

def itkDifferenceOfGaussiansGradientImageFilterIUS2F___New_orig__():
  """itkDifferenceOfGaussiansGradientImageFilterIUS2F___New_orig__()"""
  return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUS2F___New_orig__()

def itkDifferenceOfGaussiansGradientImageFilterIUS2F_cast(*args):
  """itkDifferenceOfGaussiansGradientImageFilterIUS2F_cast(itkLightObject obj) -> itkDifferenceOfGaussiansGradientImageFilterIUS2F"""
  return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUS2F_cast(*args)

class itkDifferenceOfGaussiansGradientImageFilterIUS3F(itkImageToImageFilterBPython.itkImageToImageFilterIUS3ICVF33):
    """Proxy of C++ itkDifferenceOfGaussiansGradientImageFilterIUS3F class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NDimensions = _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUS3F_NDimensions
    DataTypeHasNumericTraitsCheck = _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUS3F_DataTypeHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUS3F___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetWidth(self):
        """GetWidth(self) -> unsigned int"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUS3F_GetWidth(self)

    def SetWidth(self, *args):
        """SetWidth(self, unsigned int _arg)"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUS3F_SetWidth(self, *args)

    __swig_destroy__ = _itkDifferenceOfGaussiansGradientImageFilterPython.delete_itkDifferenceOfGaussiansGradientImageFilterIUS3F
    def cast(*args):
        """cast(itkLightObject obj) -> itkDifferenceOfGaussiansGradientImageFilterIUS3F"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUS3F_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDifferenceOfGaussiansGradientImageFilterIUS3F"""
        return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUS3F_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDifferenceOfGaussiansGradientImageFilterIUS3F
        
        Create a new object of the class itkDifferenceOfGaussiansGradientImageFilterIUS3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDifferenceOfGaussiansGradientImageFilterIUS3F.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDifferenceOfGaussiansGradientImageFilterIUS3F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDifferenceOfGaussiansGradientImageFilterIUS3F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDifferenceOfGaussiansGradientImageFilterIUS3F.GetWidth = new_instancemethod(_itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUS3F_GetWidth,None,itkDifferenceOfGaussiansGradientImageFilterIUS3F)
itkDifferenceOfGaussiansGradientImageFilterIUS3F.SetWidth = new_instancemethod(_itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUS3F_SetWidth,None,itkDifferenceOfGaussiansGradientImageFilterIUS3F)
itkDifferenceOfGaussiansGradientImageFilterIUS3F.GetPointer = new_instancemethod(_itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUS3F_GetPointer,None,itkDifferenceOfGaussiansGradientImageFilterIUS3F)
itkDifferenceOfGaussiansGradientImageFilterIUS3F_swigregister = _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUS3F_swigregister
itkDifferenceOfGaussiansGradientImageFilterIUS3F_swigregister(itkDifferenceOfGaussiansGradientImageFilterIUS3F)

def itkDifferenceOfGaussiansGradientImageFilterIUS3F___New_orig__():
  """itkDifferenceOfGaussiansGradientImageFilterIUS3F___New_orig__()"""
  return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUS3F___New_orig__()

def itkDifferenceOfGaussiansGradientImageFilterIUS3F_cast(*args):
  """itkDifferenceOfGaussiansGradientImageFilterIUS3F_cast(itkLightObject obj) -> itkDifferenceOfGaussiansGradientImageFilterIUS3F"""
  return _itkDifferenceOfGaussiansGradientImageFilterPython.itkDifferenceOfGaussiansGradientImageFilterIUS3F_cast(*args)



