# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkEllipseSpatialObjectPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkEllipseSpatialObjectPython', [dirname(__file__)])
        except ImportError:
            import _itkEllipseSpatialObjectPython
            return _itkEllipseSpatialObjectPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkEllipseSpatialObjectPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkEllipseSpatialObjectPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkEllipseSpatialObjectPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkFixedArrayPython
import itkPointPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkSpatialObjectBasePython
import itkCovariantVectorPython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import ITKRegionsPython
import itkSpatialObjectPropertyPython
import itkRGBAPixelPython
import itkScalableAffineTransformPython
import itkAffineTransformPython
import itkTransformPython
import itkArray2DPython
import itkArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkMatrixOffsetTransformBasePython
import itkAffineGeometryFramePython
import itkBoundingBoxPython
import itkMapContainerPython
import itkVectorContainerPython
import itkContinuousIndexPython
import itkLevelSetPython
def itkEllipseSpatialObject3_New():
  return itkEllipseSpatialObject3.New()

def itkEllipseSpatialObject2_New():
  return itkEllipseSpatialObject2.New()

class itkEllipseSpatialObject2(itkSpatialObjectBasePython.itkSpatialObject2):
    """Proxy of C++ itkEllipseSpatialObject2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NumberOfDimension = _itkEllipseSpatialObjectPython.itkEllipseSpatialObject2_NumberOfDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkEllipseSpatialObjectPython.itkEllipseSpatialObject2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRadius(self, *args):
        """
        SetRadius(self, double radius)
        SetRadius(self, itkFixedArrayD2 _arg)
        """
        return _itkEllipseSpatialObjectPython.itkEllipseSpatialObject2_SetRadius(self, *args)

    def GetRadius(self):
        """GetRadius(self) -> itkFixedArrayD2"""
        return _itkEllipseSpatialObjectPython.itkEllipseSpatialObject2_GetRadius(self)

    def ValueAt(self, *args):
        """
        ValueAt(self, itkPointD2 point, double value, unsigned int depth = 0, 
            char name = 0l) -> bool
        ValueAt(self, itkPointD2 point, double value, unsigned int depth = 0) -> bool
        ValueAt(self, itkPointD2 point, double value) -> bool
        """
        return _itkEllipseSpatialObjectPython.itkEllipseSpatialObject2_ValueAt(self, *args)

    def IsEvaluableAt(self, *args):
        """
        IsEvaluableAt(self, itkPointD2 point, unsigned int depth = 0, char name = 0l) -> bool
        IsEvaluableAt(self, itkPointD2 point, unsigned int depth = 0) -> bool
        IsEvaluableAt(self, itkPointD2 point) -> bool
        """
        return _itkEllipseSpatialObjectPython.itkEllipseSpatialObject2_IsEvaluableAt(self, *args)

    def IsInside(self, *args):
        """
        IsInside(self, itkPointD2 point, unsigned int depth, char arg2) -> bool
        IsInside(self, itkPointD2 point) -> bool
        """
        return _itkEllipseSpatialObjectPython.itkEllipseSpatialObject2_IsInside(self, *args)

    __swig_destroy__ = _itkEllipseSpatialObjectPython.delete_itkEllipseSpatialObject2
    def cast(*args):
        """cast(itkLightObject obj) -> itkEllipseSpatialObject2"""
        return _itkEllipseSpatialObjectPython.itkEllipseSpatialObject2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkEllipseSpatialObject2"""
        return _itkEllipseSpatialObjectPython.itkEllipseSpatialObject2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkEllipseSpatialObject2
        
        Create a new object of the class itkEllipseSpatialObject2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkEllipseSpatialObject2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkEllipseSpatialObject2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkEllipseSpatialObject2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkEllipseSpatialObject2.SetRadius = new_instancemethod(_itkEllipseSpatialObjectPython.itkEllipseSpatialObject2_SetRadius,None,itkEllipseSpatialObject2)
itkEllipseSpatialObject2.GetRadius = new_instancemethod(_itkEllipseSpatialObjectPython.itkEllipseSpatialObject2_GetRadius,None,itkEllipseSpatialObject2)
itkEllipseSpatialObject2.ValueAt = new_instancemethod(_itkEllipseSpatialObjectPython.itkEllipseSpatialObject2_ValueAt,None,itkEllipseSpatialObject2)
itkEllipseSpatialObject2.IsEvaluableAt = new_instancemethod(_itkEllipseSpatialObjectPython.itkEllipseSpatialObject2_IsEvaluableAt,None,itkEllipseSpatialObject2)
itkEllipseSpatialObject2.IsInside = new_instancemethod(_itkEllipseSpatialObjectPython.itkEllipseSpatialObject2_IsInside,None,itkEllipseSpatialObject2)
itkEllipseSpatialObject2.GetPointer = new_instancemethod(_itkEllipseSpatialObjectPython.itkEllipseSpatialObject2_GetPointer,None,itkEllipseSpatialObject2)
itkEllipseSpatialObject2_swigregister = _itkEllipseSpatialObjectPython.itkEllipseSpatialObject2_swigregister
itkEllipseSpatialObject2_swigregister(itkEllipseSpatialObject2)

def itkEllipseSpatialObject2___New_orig__():
  """itkEllipseSpatialObject2___New_orig__()"""
  return _itkEllipseSpatialObjectPython.itkEllipseSpatialObject2___New_orig__()

def itkEllipseSpatialObject2_cast(*args):
  """itkEllipseSpatialObject2_cast(itkLightObject obj) -> itkEllipseSpatialObject2"""
  return _itkEllipseSpatialObjectPython.itkEllipseSpatialObject2_cast(*args)

class itkEllipseSpatialObject3(itkSpatialObjectBasePython.itkSpatialObject3):
    """Proxy of C++ itkEllipseSpatialObject3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NumberOfDimension = _itkEllipseSpatialObjectPython.itkEllipseSpatialObject3_NumberOfDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkEllipseSpatialObjectPython.itkEllipseSpatialObject3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRadius(self, *args):
        """
        SetRadius(self, double radius)
        SetRadius(self, itkFixedArrayD3 _arg)
        """
        return _itkEllipseSpatialObjectPython.itkEllipseSpatialObject3_SetRadius(self, *args)

    def GetRadius(self):
        """GetRadius(self) -> itkFixedArrayD3"""
        return _itkEllipseSpatialObjectPython.itkEllipseSpatialObject3_GetRadius(self)

    def ValueAt(self, *args):
        """
        ValueAt(self, itkPointD3 point, double value, unsigned int depth = 0, 
            char name = 0l) -> bool
        ValueAt(self, itkPointD3 point, double value, unsigned int depth = 0) -> bool
        ValueAt(self, itkPointD3 point, double value) -> bool
        """
        return _itkEllipseSpatialObjectPython.itkEllipseSpatialObject3_ValueAt(self, *args)

    def IsEvaluableAt(self, *args):
        """
        IsEvaluableAt(self, itkPointD3 point, unsigned int depth = 0, char name = 0l) -> bool
        IsEvaluableAt(self, itkPointD3 point, unsigned int depth = 0) -> bool
        IsEvaluableAt(self, itkPointD3 point) -> bool
        """
        return _itkEllipseSpatialObjectPython.itkEllipseSpatialObject3_IsEvaluableAt(self, *args)

    def IsInside(self, *args):
        """
        IsInside(self, itkPointD3 point, unsigned int depth, char arg2) -> bool
        IsInside(self, itkPointD3 point) -> bool
        """
        return _itkEllipseSpatialObjectPython.itkEllipseSpatialObject3_IsInside(self, *args)

    __swig_destroy__ = _itkEllipseSpatialObjectPython.delete_itkEllipseSpatialObject3
    def cast(*args):
        """cast(itkLightObject obj) -> itkEllipseSpatialObject3"""
        return _itkEllipseSpatialObjectPython.itkEllipseSpatialObject3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkEllipseSpatialObject3"""
        return _itkEllipseSpatialObjectPython.itkEllipseSpatialObject3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkEllipseSpatialObject3
        
        Create a new object of the class itkEllipseSpatialObject3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkEllipseSpatialObject3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkEllipseSpatialObject3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkEllipseSpatialObject3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkEllipseSpatialObject3.SetRadius = new_instancemethod(_itkEllipseSpatialObjectPython.itkEllipseSpatialObject3_SetRadius,None,itkEllipseSpatialObject3)
itkEllipseSpatialObject3.GetRadius = new_instancemethod(_itkEllipseSpatialObjectPython.itkEllipseSpatialObject3_GetRadius,None,itkEllipseSpatialObject3)
itkEllipseSpatialObject3.ValueAt = new_instancemethod(_itkEllipseSpatialObjectPython.itkEllipseSpatialObject3_ValueAt,None,itkEllipseSpatialObject3)
itkEllipseSpatialObject3.IsEvaluableAt = new_instancemethod(_itkEllipseSpatialObjectPython.itkEllipseSpatialObject3_IsEvaluableAt,None,itkEllipseSpatialObject3)
itkEllipseSpatialObject3.IsInside = new_instancemethod(_itkEllipseSpatialObjectPython.itkEllipseSpatialObject3_IsInside,None,itkEllipseSpatialObject3)
itkEllipseSpatialObject3.GetPointer = new_instancemethod(_itkEllipseSpatialObjectPython.itkEllipseSpatialObject3_GetPointer,None,itkEllipseSpatialObject3)
itkEllipseSpatialObject3_swigregister = _itkEllipseSpatialObjectPython.itkEllipseSpatialObject3_swigregister
itkEllipseSpatialObject3_swigregister(itkEllipseSpatialObject3)

def itkEllipseSpatialObject3___New_orig__():
  """itkEllipseSpatialObject3___New_orig__()"""
  return _itkEllipseSpatialObjectPython.itkEllipseSpatialObject3___New_orig__()

def itkEllipseSpatialObject3_cast(*args):
  """itkEllipseSpatialObject3_cast(itkLightObject obj) -> itkEllipseSpatialObject3"""
  return _itkEllipseSpatialObjectPython.itkEllipseSpatialObject3_cast(*args)



