// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkSizeChicken
#endif
#ifdef SWIGCSHARP
%module itkSizeCsharp
#endif
#ifdef SWIGGUILE
%module itkSizeGuile
#endif
#ifdef SWIGJAVA
%module itkSizeJava
#endif
#ifdef SWIGLUA
%module itkSizeLua
#endif
#ifdef SWIGMODULA3
%module itkSizeModula3
#endif
#ifdef SWIGMZSCHEME
%module itkSizeMzscheme
#endif
#ifdef SWIGOCAML
%module itkSizeOcaml
#endif
#ifdef SWIGPERL
%module itkSizePerl
#endif
#ifdef SWIGPERL5
%module itkSizePerl5
#endif
#ifdef SWIGPHP
%module itkSizePhp
#endif
#ifdef SWIGPHP4
%module itkSizePhp4
#endif
#ifdef SWIGPHP5
%module itkSizePhp5
#endif
#ifdef SWIGPIKE
%module itkSizePike
#endif
#ifdef SWIGPYTHON
%module itkSizePython
#endif
#ifdef SWIGR
%module itkSizeR
#endif
#ifdef SWIGRUBY
%module itkSizeRuby
#endif
#ifdef SWIGSEXP
%module itkSizeSexp
#endif
#ifdef SWIGTCL
%module itkSizeTcl
#endif
#ifdef SWIGXML
%module itkSizeXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
%}


%{
%}






%include itk.i
%include wrap_itkSize_ext.i


 class itkSize1 {
   public:
     ~itkSize1();
     static unsigned int GetSizeDimension();
     itkSize1 const operator+(itkSize1 const & vec) const;
     itkSize1 const & operator+=(itkSize1 const & vec);
     itkSize1 const operator-(itkSize1 const & vec) const;
     itkSize1 const & operator-=(itkSize1 const & vec);
     itkSize1 const operator*(itkSize1 const & vec) const;
     itkSize1 const & operator*=(itkSize1 const & vec);
     bool operator==(itkSize1 const & vec) const;
     bool operator!=(itkSize1 const & vec) const;
     unsigned long & operator[](unsigned int dim);
     unsigned long operator[](unsigned int dim) const;
     unsigned long const * GetSize() const;
     void SetSize(unsigned long const * val);
     void SetElement(unsigned long element, unsigned long val);
     unsigned long GetElement(unsigned long element) const;
     void Fill(unsigned long value);
     itkSize1();
     itkSize1(itkSize1 const & arg0);
     void operator=(itkSize1 const & arg0);
   private:
   protected:
 };


 class itkSize2 {
   public:
     ~itkSize2();
     static unsigned int GetSizeDimension();
     itkSize2 const operator+(itkSize2 const & vec) const;
     itkSize2 const & operator+=(itkSize2 const & vec);
     itkSize2 const operator-(itkSize2 const & vec) const;
     itkSize2 const & operator-=(itkSize2 const & vec);
     itkSize2 const operator*(itkSize2 const & vec) const;
     itkSize2 const & operator*=(itkSize2 const & vec);
     bool operator==(itkSize2 const & vec) const;
     bool operator!=(itkSize2 const & vec) const;
     unsigned long & operator[](unsigned int dim);
     unsigned long operator[](unsigned int dim) const;
     unsigned long const * GetSize() const;
     void SetSize(unsigned long const * val);
     void SetElement(unsigned long element, unsigned long val);
     unsigned long GetElement(unsigned long element) const;
     void Fill(unsigned long value);
     itkSize2();
     itkSize2(itkSize2 const & arg0);
     void operator=(itkSize2 const & arg0);
   private:
   protected:
 };


 class itkSize3 {
   public:
     ~itkSize3();
     static unsigned int GetSizeDimension();
     itkSize3 const operator+(itkSize3 const & vec) const;
     itkSize3 const & operator+=(itkSize3 const & vec);
     itkSize3 const operator-(itkSize3 const & vec) const;
     itkSize3 const & operator-=(itkSize3 const & vec);
     itkSize3 const operator*(itkSize3 const & vec) const;
     itkSize3 const & operator*=(itkSize3 const & vec);
     bool operator==(itkSize3 const & vec) const;
     bool operator!=(itkSize3 const & vec) const;
     unsigned long & operator[](unsigned int dim);
     unsigned long operator[](unsigned int dim) const;
     unsigned long const * GetSize() const;
     void SetSize(unsigned long const * val);
     void SetElement(unsigned long element, unsigned long val);
     unsigned long GetElement(unsigned long element) const;
     void Fill(unsigned long value);
     itkSize3();
     itkSize3(itkSize3 const & arg0);
     void operator=(itkSize3 const & arg0);
   private:
   protected:
 };


