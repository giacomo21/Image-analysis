// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkShapeLabelMapFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkShapeLabelMapFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkShapeLabelMapFilterGuile
#endif
#ifdef SWIGJAVA
%module itkShapeLabelMapFilterJava
#endif
#ifdef SWIGLUA
%module itkShapeLabelMapFilterLua
#endif
#ifdef SWIGMODULA3
%module itkShapeLabelMapFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkShapeLabelMapFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkShapeLabelMapFilterOcaml
#endif
#ifdef SWIGPERL
%module itkShapeLabelMapFilterPerl
#endif
#ifdef SWIGPERL5
%module itkShapeLabelMapFilterPerl5
#endif
#ifdef SWIGPHP
%module itkShapeLabelMapFilterPhp
#endif
#ifdef SWIGPHP4
%module itkShapeLabelMapFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkShapeLabelMapFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkShapeLabelMapFilterPike
#endif
#ifdef SWIGPYTHON
%module itkShapeLabelMapFilterPython
#endif
#ifdef SWIGR
%module itkShapeLabelMapFilterR
#endif
#ifdef SWIGRUBY
%module itkShapeLabelMapFilterRuby
#endif
#ifdef SWIGSEXP
%module itkShapeLabelMapFilterSexp
#endif
#ifdef SWIGTCL
%module itkShapeLabelMapFilterTcl
#endif
#ifdef SWIGXML
%module itkShapeLabelMapFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "Numerics.includes"
#include "BinaryMorphology.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImage.i
%import wrap_itkStatisticsLabelObject.i
%import wrap_itkInPlaceLabelMapFilter.i


%include itk.i
%include wrap_itkShapeLabelMapFilter_ext.i


 class itkShapeLabelMapFilterLM2 : public itkInPlaceLabelMapFilterLM2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkShapeLabelMapFilterLM2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetLabelImage(itkImageUL2 const * input);
   private:
     itkShapeLabelMapFilterLM2(itkShapeLabelMapFilterLM2 const & arg0);
     void operator=(itkShapeLabelMapFilterLM2 const & arg0);
     void ComputeFeretDiameter(itkStatisticsLabelObjectUL2 * labelObject);
     static long Factorial(long n);
     static long DoubleFactorial(long n);
     static double GammaN2p1(long n);
     static double HyperSphereVolume(double radius);
     static double HyperSpherePerimeter(double radius);
     static double HyperSphereRadiusFromVolume(double volume);
   protected:
     itkShapeLabelMapFilterLM2();
     ~itkShapeLabelMapFilterLM2();
     virtual void ThreadedProcessLabelObject(itkStatisticsLabelObjectUL2 * labelObject);
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkShapeLabelMapFilterLM2_Pointer {
   public:
     itkShapeLabelMapFilterLM2_Pointer();
     itkShapeLabelMapFilterLM2_Pointer(itkShapeLabelMapFilterLM2_Pointer const & p);
     itkShapeLabelMapFilterLM2_Pointer(itkShapeLabelMapFilterLM2 * p);
     ~itkShapeLabelMapFilterLM2_Pointer();
     itkShapeLabelMapFilterLM2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkShapeLabelMapFilterLM2 * GetPointer() const;
     bool operator<(itkShapeLabelMapFilterLM2_Pointer const & r) const;
     bool operator>(itkShapeLabelMapFilterLM2_Pointer const & r) const;
     bool operator<=(itkShapeLabelMapFilterLM2_Pointer const & r) const;
     bool operator>=(itkShapeLabelMapFilterLM2_Pointer const & r) const;
     itkShapeLabelMapFilterLM2_Pointer & operator=(itkShapeLabelMapFilterLM2_Pointer const & r);
     itkShapeLabelMapFilterLM2_Pointer & operator=(itkShapeLabelMapFilterLM2 * r);
     itkShapeLabelMapFilterLM2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkShapeLabelMapFilterLM3 : public itkInPlaceLabelMapFilterLM3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkShapeLabelMapFilterLM3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
     void SetLabelImage(itkImageUL3 const * input);
   private:
     itkShapeLabelMapFilterLM3(itkShapeLabelMapFilterLM3 const & arg0);
     void operator=(itkShapeLabelMapFilterLM3 const & arg0);
     void ComputeFeretDiameter(itkStatisticsLabelObjectUL3 * labelObject);
     static long Factorial(long n);
     static long DoubleFactorial(long n);
     static double GammaN2p1(long n);
     static double HyperSphereVolume(double radius);
     static double HyperSpherePerimeter(double radius);
     static double HyperSphereRadiusFromVolume(double volume);
   protected:
     itkShapeLabelMapFilterLM3();
     ~itkShapeLabelMapFilterLM3();
     virtual void ThreadedProcessLabelObject(itkStatisticsLabelObjectUL3 * labelObject);
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkShapeLabelMapFilterLM3_Pointer {
   public:
     itkShapeLabelMapFilterLM3_Pointer();
     itkShapeLabelMapFilterLM3_Pointer(itkShapeLabelMapFilterLM3_Pointer const & p);
     itkShapeLabelMapFilterLM3_Pointer(itkShapeLabelMapFilterLM3 * p);
     ~itkShapeLabelMapFilterLM3_Pointer();
     itkShapeLabelMapFilterLM3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkShapeLabelMapFilterLM3 * GetPointer() const;
     bool operator<(itkShapeLabelMapFilterLM3_Pointer const & r) const;
     bool operator>(itkShapeLabelMapFilterLM3_Pointer const & r) const;
     bool operator<=(itkShapeLabelMapFilterLM3_Pointer const & r) const;
     bool operator>=(itkShapeLabelMapFilterLM3_Pointer const & r) const;
     itkShapeLabelMapFilterLM3_Pointer & operator=(itkShapeLabelMapFilterLM3_Pointer const & r);
     itkShapeLabelMapFilterLM3_Pointer & operator=(itkShapeLabelMapFilterLM3 * r);
     itkShapeLabelMapFilterLM3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


