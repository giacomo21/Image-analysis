// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkNeighborhoodOperatorChicken
#endif
#ifdef SWIGCSHARP
%module itkNeighborhoodOperatorCsharp
#endif
#ifdef SWIGGUILE
%module itkNeighborhoodOperatorGuile
#endif
#ifdef SWIGJAVA
%module itkNeighborhoodOperatorJava
#endif
#ifdef SWIGLUA
%module itkNeighborhoodOperatorLua
#endif
#ifdef SWIGMODULA3
%module itkNeighborhoodOperatorModula3
#endif
#ifdef SWIGMZSCHEME
%module itkNeighborhoodOperatorMzscheme
#endif
#ifdef SWIGOCAML
%module itkNeighborhoodOperatorOcaml
#endif
#ifdef SWIGPERL
%module itkNeighborhoodOperatorPerl
#endif
#ifdef SWIGPERL5
%module itkNeighborhoodOperatorPerl5
#endif
#ifdef SWIGPHP
%module itkNeighborhoodOperatorPhp
#endif
#ifdef SWIGPHP4
%module itkNeighborhoodOperatorPhp4
#endif
#ifdef SWIGPHP5
%module itkNeighborhoodOperatorPhp5
#endif
#ifdef SWIGPIKE
%module itkNeighborhoodOperatorPike
#endif
#ifdef SWIGPYTHON
%module itkNeighborhoodOperatorPython
#endif
#ifdef SWIGR
%module itkNeighborhoodOperatorR
#endif
#ifdef SWIGRUBY
%module itkNeighborhoodOperatorRuby
#endif
#ifdef SWIGSEXP
%module itkNeighborhoodOperatorSexp
#endif
#ifdef SWIGTCL
%module itkNeighborhoodOperatorTcl
#endif
#ifdef SWIGXML
%module itkNeighborhoodOperatorXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkSize.i
%import wrap_itkNeighborhood.i


%include itk.i
%include wrap_itkNeighborhoodOperator_ext.i


 class itkNeighborhoodOperatorB2 : public itkNeighborhoodB2 {
   public:
     itkNeighborhoodOperatorB2();
     itkNeighborhoodOperatorB2(itkNeighborhoodOperatorB2 const & orig);
     itkNeighborhoodOperatorB2 & operator=(itkNeighborhoodOperatorB2 const & orig);
     void SetDirection(unsigned long const & direction);
     unsigned long GetDirection() const;
     virtual void CreateDirectional();
     virtual void CreateToRadius(itkSize2 const & arg0);
     virtual void CreateToRadius(unsigned long const arg0);
     virtual void FlipAxes();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent i) const;
     void ScaleCoefficients(double arg0);
     ~itkNeighborhoodOperatorB2();
   private:
   protected:
     virtual std::vector< double > GenerateCoefficients() = 0;
     virtual void Fill(std::vector< double > const & arg0) = 0;
     virtual void FillCenteredDirectional(std::vector< double > const & arg0);
     void InitializeToZero();
 };


 class itkNeighborhoodOperatorB3 : public itkNeighborhoodB3 {
   public:
     itkNeighborhoodOperatorB3();
     itkNeighborhoodOperatorB3(itkNeighborhoodOperatorB3 const & orig);
     itkNeighborhoodOperatorB3 & operator=(itkNeighborhoodOperatorB3 const & orig);
     void SetDirection(unsigned long const & direction);
     unsigned long GetDirection() const;
     virtual void CreateDirectional();
     virtual void CreateToRadius(itkSize3 const & arg0);
     virtual void CreateToRadius(unsigned long const arg0);
     virtual void FlipAxes();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent i) const;
     void ScaleCoefficients(double arg0);
     ~itkNeighborhoodOperatorB3();
   private:
   protected:
     virtual std::vector< double > GenerateCoefficients() = 0;
     virtual void Fill(std::vector< double > const & arg0) = 0;
     virtual void FillCenteredDirectional(std::vector< double > const & arg0);
     void InitializeToZero();
 };


 class itkNeighborhoodOperatorD2 : public itkNeighborhoodD2 {
   public:
     itkNeighborhoodOperatorD2();
     itkNeighborhoodOperatorD2(itkNeighborhoodOperatorD2 const & orig);
     itkNeighborhoodOperatorD2 & operator=(itkNeighborhoodOperatorD2 const & orig);
     void SetDirection(unsigned long const & direction);
     unsigned long GetDirection() const;
     virtual void CreateDirectional();
     virtual void CreateToRadius(itkSize2 const & arg0);
     virtual void CreateToRadius(unsigned long const arg0);
     virtual void FlipAxes();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent i) const;
     void ScaleCoefficients(double arg0);
     ~itkNeighborhoodOperatorD2();
   private:
   protected:
     virtual std::vector< double > GenerateCoefficients() = 0;
     virtual void Fill(std::vector< double > const & arg0) = 0;
     virtual void FillCenteredDirectional(std::vector< double > const & arg0);
     void InitializeToZero();
 };


 class itkNeighborhoodOperatorD3 : public itkNeighborhoodD3 {
   public:
     itkNeighborhoodOperatorD3();
     itkNeighborhoodOperatorD3(itkNeighborhoodOperatorD3 const & orig);
     itkNeighborhoodOperatorD3 & operator=(itkNeighborhoodOperatorD3 const & orig);
     void SetDirection(unsigned long const & direction);
     unsigned long GetDirection() const;
     virtual void CreateDirectional();
     virtual void CreateToRadius(itkSize3 const & arg0);
     virtual void CreateToRadius(unsigned long const arg0);
     virtual void FlipAxes();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent i) const;
     void ScaleCoefficients(double arg0);
     ~itkNeighborhoodOperatorD3();
   private:
   protected:
     virtual std::vector< double > GenerateCoefficients() = 0;
     virtual void Fill(std::vector< double > const & arg0) = 0;
     virtual void FillCenteredDirectional(std::vector< double > const & arg0);
     void InitializeToZero();
 };


 class itkNeighborhoodOperatorF2 : public itkNeighborhoodF2 {
   public:
     itkNeighborhoodOperatorF2();
     itkNeighborhoodOperatorF2(itkNeighborhoodOperatorF2 const & orig);
     itkNeighborhoodOperatorF2 & operator=(itkNeighborhoodOperatorF2 const & orig);
     void SetDirection(unsigned long const & direction);
     unsigned long GetDirection() const;
     virtual void CreateDirectional();
     virtual void CreateToRadius(itkSize2 const & arg0);
     virtual void CreateToRadius(unsigned long const arg0);
     virtual void FlipAxes();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent i) const;
     void ScaleCoefficients(double arg0);
     ~itkNeighborhoodOperatorF2();
   private:
   protected:
     virtual std::vector< double > GenerateCoefficients() = 0;
     virtual void Fill(std::vector< double > const & arg0) = 0;
     virtual void FillCenteredDirectional(std::vector< double > const & arg0);
     void InitializeToZero();
 };


 class itkNeighborhoodOperatorF3 : public itkNeighborhoodF3 {
   public:
     itkNeighborhoodOperatorF3();
     itkNeighborhoodOperatorF3(itkNeighborhoodOperatorF3 const & orig);
     itkNeighborhoodOperatorF3 & operator=(itkNeighborhoodOperatorF3 const & orig);
     void SetDirection(unsigned long const & direction);
     unsigned long GetDirection() const;
     virtual void CreateDirectional();
     virtual void CreateToRadius(itkSize3 const & arg0);
     virtual void CreateToRadius(unsigned long const arg0);
     virtual void FlipAxes();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent i) const;
     void ScaleCoefficients(double arg0);
     ~itkNeighborhoodOperatorF3();
   private:
   protected:
     virtual std::vector< double > GenerateCoefficients() = 0;
     virtual void Fill(std::vector< double > const & arg0) = 0;
     virtual void FillCenteredDirectional(std::vector< double > const & arg0);
     void InitializeToZero();
 };


 class itkNeighborhoodOperatorUC2 : public itkNeighborhoodUC2 {
   public:
     itkNeighborhoodOperatorUC2();
     itkNeighborhoodOperatorUC2(itkNeighborhoodOperatorUC2 const & orig);
     itkNeighborhoodOperatorUC2 & operator=(itkNeighborhoodOperatorUC2 const & orig);
     void SetDirection(unsigned long const & direction);
     unsigned long GetDirection() const;
     virtual void CreateDirectional();
     virtual void CreateToRadius(itkSize2 const & arg0);
     virtual void CreateToRadius(unsigned long const arg0);
     virtual void FlipAxes();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent i) const;
     void ScaleCoefficients(double arg0);
     ~itkNeighborhoodOperatorUC2();
   private:
   protected:
     virtual std::vector< double > GenerateCoefficients() = 0;
     virtual void Fill(std::vector< double > const & arg0) = 0;
     virtual void FillCenteredDirectional(std::vector< double > const & arg0);
     void InitializeToZero();
 };


 class itkNeighborhoodOperatorUC3 : public itkNeighborhoodUC3 {
   public:
     itkNeighborhoodOperatorUC3();
     itkNeighborhoodOperatorUC3(itkNeighborhoodOperatorUC3 const & orig);
     itkNeighborhoodOperatorUC3 & operator=(itkNeighborhoodOperatorUC3 const & orig);
     void SetDirection(unsigned long const & direction);
     unsigned long GetDirection() const;
     virtual void CreateDirectional();
     virtual void CreateToRadius(itkSize3 const & arg0);
     virtual void CreateToRadius(unsigned long const arg0);
     virtual void FlipAxes();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent i) const;
     void ScaleCoefficients(double arg0);
     ~itkNeighborhoodOperatorUC3();
   private:
   protected:
     virtual std::vector< double > GenerateCoefficients() = 0;
     virtual void Fill(std::vector< double > const & arg0) = 0;
     virtual void FillCenteredDirectional(std::vector< double > const & arg0);
     void InitializeToZero();
 };


 class itkNeighborhoodOperatorUL2 : public itkNeighborhoodUL2 {
   public:
     itkNeighborhoodOperatorUL2();
     itkNeighborhoodOperatorUL2(itkNeighborhoodOperatorUL2 const & orig);
     itkNeighborhoodOperatorUL2 & operator=(itkNeighborhoodOperatorUL2 const & orig);
     void SetDirection(unsigned long const & direction);
     unsigned long GetDirection() const;
     virtual void CreateDirectional();
     virtual void CreateToRadius(itkSize2 const & arg0);
     virtual void CreateToRadius(unsigned long const arg0);
     virtual void FlipAxes();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent i) const;
     void ScaleCoefficients(double arg0);
     ~itkNeighborhoodOperatorUL2();
   private:
   protected:
     virtual std::vector< double > GenerateCoefficients() = 0;
     virtual void Fill(std::vector< double > const & arg0) = 0;
     virtual void FillCenteredDirectional(std::vector< double > const & arg0);
     void InitializeToZero();
 };


 class itkNeighborhoodOperatorUL3 : public itkNeighborhoodUL3 {
   public:
     itkNeighborhoodOperatorUL3();
     itkNeighborhoodOperatorUL3(itkNeighborhoodOperatorUL3 const & orig);
     itkNeighborhoodOperatorUL3 & operator=(itkNeighborhoodOperatorUL3 const & orig);
     void SetDirection(unsigned long const & direction);
     unsigned long GetDirection() const;
     virtual void CreateDirectional();
     virtual void CreateToRadius(itkSize3 const & arg0);
     virtual void CreateToRadius(unsigned long const arg0);
     virtual void FlipAxes();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent i) const;
     void ScaleCoefficients(double arg0);
     ~itkNeighborhoodOperatorUL3();
   private:
   protected:
     virtual std::vector< double > GenerateCoefficients() = 0;
     virtual void Fill(std::vector< double > const & arg0) = 0;
     virtual void FillCenteredDirectional(std::vector< double > const & arg0);
     void InitializeToZero();
 };


 class itkNeighborhoodOperatorUS2 : public itkNeighborhoodUS2 {
   public:
     itkNeighborhoodOperatorUS2();
     itkNeighborhoodOperatorUS2(itkNeighborhoodOperatorUS2 const & orig);
     itkNeighborhoodOperatorUS2 & operator=(itkNeighborhoodOperatorUS2 const & orig);
     void SetDirection(unsigned long const & direction);
     unsigned long GetDirection() const;
     virtual void CreateDirectional();
     virtual void CreateToRadius(itkSize2 const & arg0);
     virtual void CreateToRadius(unsigned long const arg0);
     virtual void FlipAxes();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent i) const;
     void ScaleCoefficients(double arg0);
     ~itkNeighborhoodOperatorUS2();
   private:
   protected:
     virtual std::vector< double > GenerateCoefficients() = 0;
     virtual void Fill(std::vector< double > const & arg0) = 0;
     virtual void FillCenteredDirectional(std::vector< double > const & arg0);
     void InitializeToZero();
 };


 class itkNeighborhoodOperatorUS3 : public itkNeighborhoodUS3 {
   public:
     itkNeighborhoodOperatorUS3();
     itkNeighborhoodOperatorUS3(itkNeighborhoodOperatorUS3 const & orig);
     itkNeighborhoodOperatorUS3 & operator=(itkNeighborhoodOperatorUS3 const & orig);
     void SetDirection(unsigned long const & direction);
     unsigned long GetDirection() const;
     virtual void CreateDirectional();
     virtual void CreateToRadius(itkSize3 const & arg0);
     virtual void CreateToRadius(unsigned long const arg0);
     virtual void FlipAxes();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent i) const;
     void ScaleCoefficients(double arg0);
     ~itkNeighborhoodOperatorUS3();
   private:
   protected:
     virtual std::vector< double > GenerateCoefficients() = 0;
     virtual void Fill(std::vector< double > const & arg0) = 0;
     virtual void FillCenteredDirectional(std::vector< double > const & arg0);
     void InitializeToZero();
 };


