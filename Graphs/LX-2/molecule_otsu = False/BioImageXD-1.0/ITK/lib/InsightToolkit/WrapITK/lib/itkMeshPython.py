# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkMeshPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkMeshPython', [dirname(__file__)])
        except ImportError:
            import _itkMeshPython
            return _itkMeshPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkMeshPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkMeshPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkMeshPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkPointSetPython
import itkPointPython
import vnl_vectorPython
import vcl_complexPython
import pyBasePython
import vnl_matrixPython
import itkFixedArrayPython
import itkVectorPython
import vnl_vector_refPython
import itkMapContainerPython
import ITKCommonBasePython
import itkEventObjectsPython
import itkQuadEdgeMeshBasePython
import itkCellInterfacePython
import itkArrayPython
import itkQuadEdgeMeshPointPython
import itkGeometricalQuadEdgePython
import itkQuadEdgePython
import itkVectorContainerPython
import itkOffsetPython
import itkSizePython
import itkContinuousIndexPython
import itkIndexPython
import itkLevelSetPython
import itkBoundingBoxPython
def itkMeshD3Q_New():
  return itkMeshD3Q.New()

def itkMeshD3D_New():
  return itkMeshD3D.New()

def itkMeshD3S_New():
  return itkMeshD3S.New()

def itkMeshD2Q_New():
  return itkMeshD2Q.New()

def itkMeshD2D_New():
  return itkMeshD2D.New()

def itkMeshD2S_New():
  return itkMeshD2S.New()

class itkMeshD2D(itkPointSetPython.itkPointSetD2D):
    """Proxy of C++ itkMeshD2D class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    PointDimension = _itkMeshPython.itkMeshD2D_PointDimension
    MaxTopologicalDimension = _itkMeshPython.itkMeshD2D_MaxTopologicalDimension
    CellsAllocationMethodUndefined = _itkMeshPython.itkMeshD2D_CellsAllocationMethodUndefined
    CellsAllocatedAsStaticArray = _itkMeshPython.itkMeshD2D_CellsAllocatedAsStaticArray
    CellsAllocatedAsADynamicArray = _itkMeshPython.itkMeshD2D_CellsAllocatedAsADynamicArray
    CellsAllocatedDynamicallyCellByCell = _itkMeshPython.itkMeshD2D_CellsAllocatedDynamicallyCellByCell
    def __New_orig__():
        """__New_orig__()"""
        return _itkMeshPython.itkMeshD2D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetNumberOfCells(self):
        """GetNumberOfCells(self) -> unsigned long"""
        return _itkMeshPython.itkMeshD2D_GetNumberOfCells(self)

    def PassStructure(self, *args):
        """PassStructure(self, itkMeshD2D inputMesh)"""
        return _itkMeshPython.itkMeshD2D_PassStructure(self, *args)

    def SetCellLinks(self, *args):
        """SetCellLinks(self, itkMapContainerULSUL arg0)"""
        return _itkMeshPython.itkMeshD2D_SetCellLinks(self, *args)

    def SetCellData(self, *args):
        """
        SetCellData(self, itkMapContainerULD arg0)
        SetCellData(self, unsigned long arg0, double arg1)
        """
        return _itkMeshPython.itkMeshD2D_SetCellData(self, *args)

    def GetCellData(self, *args):
        """
        GetCellData(self) -> itkMapContainerULD
        GetCellData(self) -> itkMapContainerULD
        GetCellData(self, unsigned long arg0, double arg1) -> bool
        """
        return _itkMeshPython.itkMeshD2D_GetCellData(self, *args)

    def SetBoundaryAssignment(self, *args):
        """
        SetBoundaryAssignment(self, int dimension, unsigned long cellId, unsigned long featureId, 
            unsigned long boundaryId)
        """
        return _itkMeshPython.itkMeshD2D_SetBoundaryAssignment(self, *args)

    def GetBoundaryAssignment(self, *args):
        """
        GetBoundaryAssignment(self, int dimension, unsigned long cellId, unsigned long featureId, 
            unsigned long boundaryId) -> bool
        """
        return _itkMeshPython.itkMeshD2D_GetBoundaryAssignment(self, *args)

    def RemoveBoundaryAssignment(self, *args):
        """RemoveBoundaryAssignment(self, int dimension, unsigned long cellId, unsigned long featureId) -> bool"""
        return _itkMeshPython.itkMeshD2D_RemoveBoundaryAssignment(self, *args)

    def GetNumberOfCellBoundaryFeatures(self, *args):
        """GetNumberOfCellBoundaryFeatures(self, int dimension, unsigned long arg1) -> unsigned long"""
        return _itkMeshPython.itkMeshD2D_GetNumberOfCellBoundaryFeatures(self, *args)

    def GetCellBoundaryFeatureNeighbors(self, *args):
        """
        GetCellBoundaryFeatureNeighbors(self, int dimension, unsigned long arg1, unsigned long arg2, 
            setUL cellSet) -> unsigned long
        """
        return _itkMeshPython.itkMeshD2D_GetCellBoundaryFeatureNeighbors(self, *args)

    def GetCellNeighbors(self, *args):
        """GetCellNeighbors(self, unsigned long cellId, setUL cellSet) -> unsigned long"""
        return _itkMeshPython.itkMeshD2D_GetCellNeighbors(self, *args)

    def BuildCellLinks(self):
        """BuildCellLinks(self)"""
        return _itkMeshPython.itkMeshD2D_BuildCellLinks(self)

    def SetCellsAllocationMethod(self, *args):
        """SetCellsAllocationMethod(self, CellsAllocationMethodType _arg)"""
        return _itkMeshPython.itkMeshD2D_SetCellsAllocationMethod(self, *args)

    def GetCellsAllocationMethod(self):
        """GetCellsAllocationMethod(self) -> CellsAllocationMethodType"""
        return _itkMeshPython.itkMeshD2D_GetCellsAllocationMethod(self)

    __swig_destroy__ = _itkMeshPython.delete_itkMeshD2D
    def cast(*args):
        """cast(itkLightObject obj) -> itkMeshD2D"""
        return _itkMeshPython.itkMeshD2D_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMeshD2D"""
        return _itkMeshPython.itkMeshD2D_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMeshD2D
        
        Create a new object of the class itkMeshD2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMeshD2D.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMeshD2D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeshD2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeshD2D.GetNumberOfCells = new_instancemethod(_itkMeshPython.itkMeshD2D_GetNumberOfCells,None,itkMeshD2D)
itkMeshD2D.PassStructure = new_instancemethod(_itkMeshPython.itkMeshD2D_PassStructure,None,itkMeshD2D)
itkMeshD2D.SetCellLinks = new_instancemethod(_itkMeshPython.itkMeshD2D_SetCellLinks,None,itkMeshD2D)
itkMeshD2D.SetCellData = new_instancemethod(_itkMeshPython.itkMeshD2D_SetCellData,None,itkMeshD2D)
itkMeshD2D.GetCellData = new_instancemethod(_itkMeshPython.itkMeshD2D_GetCellData,None,itkMeshD2D)
itkMeshD2D.SetBoundaryAssignment = new_instancemethod(_itkMeshPython.itkMeshD2D_SetBoundaryAssignment,None,itkMeshD2D)
itkMeshD2D.GetBoundaryAssignment = new_instancemethod(_itkMeshPython.itkMeshD2D_GetBoundaryAssignment,None,itkMeshD2D)
itkMeshD2D.RemoveBoundaryAssignment = new_instancemethod(_itkMeshPython.itkMeshD2D_RemoveBoundaryAssignment,None,itkMeshD2D)
itkMeshD2D.GetNumberOfCellBoundaryFeatures = new_instancemethod(_itkMeshPython.itkMeshD2D_GetNumberOfCellBoundaryFeatures,None,itkMeshD2D)
itkMeshD2D.GetCellBoundaryFeatureNeighbors = new_instancemethod(_itkMeshPython.itkMeshD2D_GetCellBoundaryFeatureNeighbors,None,itkMeshD2D)
itkMeshD2D.GetCellNeighbors = new_instancemethod(_itkMeshPython.itkMeshD2D_GetCellNeighbors,None,itkMeshD2D)
itkMeshD2D.BuildCellLinks = new_instancemethod(_itkMeshPython.itkMeshD2D_BuildCellLinks,None,itkMeshD2D)
itkMeshD2D.SetCellsAllocationMethod = new_instancemethod(_itkMeshPython.itkMeshD2D_SetCellsAllocationMethod,None,itkMeshD2D)
itkMeshD2D.GetCellsAllocationMethod = new_instancemethod(_itkMeshPython.itkMeshD2D_GetCellsAllocationMethod,None,itkMeshD2D)
itkMeshD2D.GetPointer = new_instancemethod(_itkMeshPython.itkMeshD2D_GetPointer,None,itkMeshD2D)
itkMeshD2D_swigregister = _itkMeshPython.itkMeshD2D_swigregister
itkMeshD2D_swigregister(itkMeshD2D)

def itkMeshD2D___New_orig__():
  """itkMeshD2D___New_orig__()"""
  return _itkMeshPython.itkMeshD2D___New_orig__()

def itkMeshD2D_cast(*args):
  """itkMeshD2D_cast(itkLightObject obj) -> itkMeshD2D"""
  return _itkMeshPython.itkMeshD2D_cast(*args)

class itkMeshD2Q(itkPointSetPython.itkPointSetD2Q):
    """Proxy of C++ itkMeshD2Q class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    PointDimension = _itkMeshPython.itkMeshD2Q_PointDimension
    MaxTopologicalDimension = _itkMeshPython.itkMeshD2Q_MaxTopologicalDimension
    CellsAllocationMethodUndefined = _itkMeshPython.itkMeshD2Q_CellsAllocationMethodUndefined
    CellsAllocatedAsStaticArray = _itkMeshPython.itkMeshD2Q_CellsAllocatedAsStaticArray
    CellsAllocatedAsADynamicArray = _itkMeshPython.itkMeshD2Q_CellsAllocatedAsADynamicArray
    CellsAllocatedDynamicallyCellByCell = _itkMeshPython.itkMeshD2Q_CellsAllocatedDynamicallyCellByCell
    def __New_orig__():
        """__New_orig__()"""
        return _itkMeshPython.itkMeshD2Q___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetNumberOfCells(self):
        """GetNumberOfCells(self) -> unsigned long"""
        return _itkMeshPython.itkMeshD2Q_GetNumberOfCells(self)

    def PassStructure(self, *args):
        """PassStructure(self, itkMeshD2Q inputMesh)"""
        return _itkMeshPython.itkMeshD2Q_PassStructure(self, *args)

    def SetCellLinks(self, *args):
        """SetCellLinks(self, itkMapContainerULSUL arg0)"""
        return _itkMeshPython.itkMeshD2Q_SetCellLinks(self, *args)

    def SetCellData(self, *args):
        """
        SetCellData(self, itkMapContainerULD arg0)
        SetCellData(self, unsigned long arg0, double arg1)
        """
        return _itkMeshPython.itkMeshD2Q_SetCellData(self, *args)

    def GetCellData(self, *args):
        """
        GetCellData(self) -> itkMapContainerULD
        GetCellData(self) -> itkMapContainerULD
        GetCellData(self, unsigned long arg0, double arg1) -> bool
        """
        return _itkMeshPython.itkMeshD2Q_GetCellData(self, *args)

    def SetBoundaryAssignment(self, *args):
        """
        SetBoundaryAssignment(self, int dimension, unsigned long cellId, unsigned char featureId, 
            unsigned long boundaryId)
        """
        return _itkMeshPython.itkMeshD2Q_SetBoundaryAssignment(self, *args)

    def GetBoundaryAssignment(self, *args):
        """
        GetBoundaryAssignment(self, int dimension, unsigned long cellId, unsigned char featureId, 
            unsigned long boundaryId) -> bool
        """
        return _itkMeshPython.itkMeshD2Q_GetBoundaryAssignment(self, *args)

    def RemoveBoundaryAssignment(self, *args):
        """RemoveBoundaryAssignment(self, int dimension, unsigned long cellId, unsigned char featureId) -> bool"""
        return _itkMeshPython.itkMeshD2Q_RemoveBoundaryAssignment(self, *args)

    def GetNumberOfCellBoundaryFeatures(self, *args):
        """GetNumberOfCellBoundaryFeatures(self, int dimension, unsigned long arg1) -> unsigned char"""
        return _itkMeshPython.itkMeshD2Q_GetNumberOfCellBoundaryFeatures(self, *args)

    def GetCellBoundaryFeatureNeighbors(self, *args):
        """
        GetCellBoundaryFeatureNeighbors(self, int dimension, unsigned long arg1, unsigned char arg2, 
            setUL cellSet) -> unsigned long
        """
        return _itkMeshPython.itkMeshD2Q_GetCellBoundaryFeatureNeighbors(self, *args)

    def GetCellNeighbors(self, *args):
        """GetCellNeighbors(self, unsigned long cellId, setUL cellSet) -> unsigned long"""
        return _itkMeshPython.itkMeshD2Q_GetCellNeighbors(self, *args)

    def BuildCellLinks(self):
        """BuildCellLinks(self)"""
        return _itkMeshPython.itkMeshD2Q_BuildCellLinks(self)

    def SetCellsAllocationMethod(self, *args):
        """SetCellsAllocationMethod(self, CellsAllocationMethodType _arg)"""
        return _itkMeshPython.itkMeshD2Q_SetCellsAllocationMethod(self, *args)

    def GetCellsAllocationMethod(self):
        """GetCellsAllocationMethod(self) -> CellsAllocationMethodType"""
        return _itkMeshPython.itkMeshD2Q_GetCellsAllocationMethod(self)

    __swig_destroy__ = _itkMeshPython.delete_itkMeshD2Q
    def cast(*args):
        """cast(itkLightObject obj) -> itkMeshD2Q"""
        return _itkMeshPython.itkMeshD2Q_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMeshD2Q"""
        return _itkMeshPython.itkMeshD2Q_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMeshD2Q
        
        Create a new object of the class itkMeshD2Q and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMeshD2Q.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMeshD2Q.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeshD2Q.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeshD2Q.GetNumberOfCells = new_instancemethod(_itkMeshPython.itkMeshD2Q_GetNumberOfCells,None,itkMeshD2Q)
itkMeshD2Q.PassStructure = new_instancemethod(_itkMeshPython.itkMeshD2Q_PassStructure,None,itkMeshD2Q)
itkMeshD2Q.SetCellLinks = new_instancemethod(_itkMeshPython.itkMeshD2Q_SetCellLinks,None,itkMeshD2Q)
itkMeshD2Q.SetCellData = new_instancemethod(_itkMeshPython.itkMeshD2Q_SetCellData,None,itkMeshD2Q)
itkMeshD2Q.GetCellData = new_instancemethod(_itkMeshPython.itkMeshD2Q_GetCellData,None,itkMeshD2Q)
itkMeshD2Q.SetBoundaryAssignment = new_instancemethod(_itkMeshPython.itkMeshD2Q_SetBoundaryAssignment,None,itkMeshD2Q)
itkMeshD2Q.GetBoundaryAssignment = new_instancemethod(_itkMeshPython.itkMeshD2Q_GetBoundaryAssignment,None,itkMeshD2Q)
itkMeshD2Q.RemoveBoundaryAssignment = new_instancemethod(_itkMeshPython.itkMeshD2Q_RemoveBoundaryAssignment,None,itkMeshD2Q)
itkMeshD2Q.GetNumberOfCellBoundaryFeatures = new_instancemethod(_itkMeshPython.itkMeshD2Q_GetNumberOfCellBoundaryFeatures,None,itkMeshD2Q)
itkMeshD2Q.GetCellBoundaryFeatureNeighbors = new_instancemethod(_itkMeshPython.itkMeshD2Q_GetCellBoundaryFeatureNeighbors,None,itkMeshD2Q)
itkMeshD2Q.GetCellNeighbors = new_instancemethod(_itkMeshPython.itkMeshD2Q_GetCellNeighbors,None,itkMeshD2Q)
itkMeshD2Q.BuildCellLinks = new_instancemethod(_itkMeshPython.itkMeshD2Q_BuildCellLinks,None,itkMeshD2Q)
itkMeshD2Q.SetCellsAllocationMethod = new_instancemethod(_itkMeshPython.itkMeshD2Q_SetCellsAllocationMethod,None,itkMeshD2Q)
itkMeshD2Q.GetCellsAllocationMethod = new_instancemethod(_itkMeshPython.itkMeshD2Q_GetCellsAllocationMethod,None,itkMeshD2Q)
itkMeshD2Q.GetPointer = new_instancemethod(_itkMeshPython.itkMeshD2Q_GetPointer,None,itkMeshD2Q)
itkMeshD2Q_swigregister = _itkMeshPython.itkMeshD2Q_swigregister
itkMeshD2Q_swigregister(itkMeshD2Q)

def itkMeshD2Q___New_orig__():
  """itkMeshD2Q___New_orig__()"""
  return _itkMeshPython.itkMeshD2Q___New_orig__()

def itkMeshD2Q_cast(*args):
  """itkMeshD2Q_cast(itkLightObject obj) -> itkMeshD2Q"""
  return _itkMeshPython.itkMeshD2Q_cast(*args)

class itkMeshD2S(itkPointSetPython.itkPointSetD2S):
    """Proxy of C++ itkMeshD2S class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    PointDimension = _itkMeshPython.itkMeshD2S_PointDimension
    MaxTopologicalDimension = _itkMeshPython.itkMeshD2S_MaxTopologicalDimension
    CellsAllocationMethodUndefined = _itkMeshPython.itkMeshD2S_CellsAllocationMethodUndefined
    CellsAllocatedAsStaticArray = _itkMeshPython.itkMeshD2S_CellsAllocatedAsStaticArray
    CellsAllocatedAsADynamicArray = _itkMeshPython.itkMeshD2S_CellsAllocatedAsADynamicArray
    CellsAllocatedDynamicallyCellByCell = _itkMeshPython.itkMeshD2S_CellsAllocatedDynamicallyCellByCell
    def __New_orig__():
        """__New_orig__()"""
        return _itkMeshPython.itkMeshD2S___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetNumberOfCells(self):
        """GetNumberOfCells(self) -> unsigned long"""
        return _itkMeshPython.itkMeshD2S_GetNumberOfCells(self)

    def PassStructure(self, *args):
        """PassStructure(self, itkMeshD2S inputMesh)"""
        return _itkMeshPython.itkMeshD2S_PassStructure(self, *args)

    def SetCellLinks(self, *args):
        """SetCellLinks(self, itkVectorContainerULSUL arg0)"""
        return _itkMeshPython.itkMeshD2S_SetCellLinks(self, *args)

    def SetCellData(self, *args):
        """
        SetCellData(self, itkVectorContainerULD arg0)
        SetCellData(self, unsigned long arg0, double arg1)
        """
        return _itkMeshPython.itkMeshD2S_SetCellData(self, *args)

    def GetCellData(self, *args):
        """
        GetCellData(self) -> itkVectorContainerULD
        GetCellData(self) -> itkVectorContainerULD
        GetCellData(self, unsigned long arg0, double arg1) -> bool
        """
        return _itkMeshPython.itkMeshD2S_GetCellData(self, *args)

    def SetBoundaryAssignment(self, *args):
        """
        SetBoundaryAssignment(self, int dimension, unsigned long cellId, unsigned long featureId, 
            unsigned long boundaryId)
        """
        return _itkMeshPython.itkMeshD2S_SetBoundaryAssignment(self, *args)

    def GetBoundaryAssignment(self, *args):
        """
        GetBoundaryAssignment(self, int dimension, unsigned long cellId, unsigned long featureId, 
            unsigned long boundaryId) -> bool
        """
        return _itkMeshPython.itkMeshD2S_GetBoundaryAssignment(self, *args)

    def RemoveBoundaryAssignment(self, *args):
        """RemoveBoundaryAssignment(self, int dimension, unsigned long cellId, unsigned long featureId) -> bool"""
        return _itkMeshPython.itkMeshD2S_RemoveBoundaryAssignment(self, *args)

    def GetNumberOfCellBoundaryFeatures(self, *args):
        """GetNumberOfCellBoundaryFeatures(self, int dimension, unsigned long arg1) -> unsigned long"""
        return _itkMeshPython.itkMeshD2S_GetNumberOfCellBoundaryFeatures(self, *args)

    def GetCellBoundaryFeatureNeighbors(self, *args):
        """
        GetCellBoundaryFeatureNeighbors(self, int dimension, unsigned long arg1, unsigned long arg2, 
            setUL cellSet) -> unsigned long
        """
        return _itkMeshPython.itkMeshD2S_GetCellBoundaryFeatureNeighbors(self, *args)

    def GetCellNeighbors(self, *args):
        """GetCellNeighbors(self, unsigned long cellId, setUL cellSet) -> unsigned long"""
        return _itkMeshPython.itkMeshD2S_GetCellNeighbors(self, *args)

    def BuildCellLinks(self):
        """BuildCellLinks(self)"""
        return _itkMeshPython.itkMeshD2S_BuildCellLinks(self)

    def SetCellsAllocationMethod(self, *args):
        """SetCellsAllocationMethod(self, CellsAllocationMethodType _arg)"""
        return _itkMeshPython.itkMeshD2S_SetCellsAllocationMethod(self, *args)

    def GetCellsAllocationMethod(self):
        """GetCellsAllocationMethod(self) -> CellsAllocationMethodType"""
        return _itkMeshPython.itkMeshD2S_GetCellsAllocationMethod(self)

    __swig_destroy__ = _itkMeshPython.delete_itkMeshD2S
    def cast(*args):
        """cast(itkLightObject obj) -> itkMeshD2S"""
        return _itkMeshPython.itkMeshD2S_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMeshD2S"""
        return _itkMeshPython.itkMeshD2S_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMeshD2S
        
        Create a new object of the class itkMeshD2S and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMeshD2S.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMeshD2S.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeshD2S.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeshD2S.GetNumberOfCells = new_instancemethod(_itkMeshPython.itkMeshD2S_GetNumberOfCells,None,itkMeshD2S)
itkMeshD2S.PassStructure = new_instancemethod(_itkMeshPython.itkMeshD2S_PassStructure,None,itkMeshD2S)
itkMeshD2S.SetCellLinks = new_instancemethod(_itkMeshPython.itkMeshD2S_SetCellLinks,None,itkMeshD2S)
itkMeshD2S.SetCellData = new_instancemethod(_itkMeshPython.itkMeshD2S_SetCellData,None,itkMeshD2S)
itkMeshD2S.GetCellData = new_instancemethod(_itkMeshPython.itkMeshD2S_GetCellData,None,itkMeshD2S)
itkMeshD2S.SetBoundaryAssignment = new_instancemethod(_itkMeshPython.itkMeshD2S_SetBoundaryAssignment,None,itkMeshD2S)
itkMeshD2S.GetBoundaryAssignment = new_instancemethod(_itkMeshPython.itkMeshD2S_GetBoundaryAssignment,None,itkMeshD2S)
itkMeshD2S.RemoveBoundaryAssignment = new_instancemethod(_itkMeshPython.itkMeshD2S_RemoveBoundaryAssignment,None,itkMeshD2S)
itkMeshD2S.GetNumberOfCellBoundaryFeatures = new_instancemethod(_itkMeshPython.itkMeshD2S_GetNumberOfCellBoundaryFeatures,None,itkMeshD2S)
itkMeshD2S.GetCellBoundaryFeatureNeighbors = new_instancemethod(_itkMeshPython.itkMeshD2S_GetCellBoundaryFeatureNeighbors,None,itkMeshD2S)
itkMeshD2S.GetCellNeighbors = new_instancemethod(_itkMeshPython.itkMeshD2S_GetCellNeighbors,None,itkMeshD2S)
itkMeshD2S.BuildCellLinks = new_instancemethod(_itkMeshPython.itkMeshD2S_BuildCellLinks,None,itkMeshD2S)
itkMeshD2S.SetCellsAllocationMethod = new_instancemethod(_itkMeshPython.itkMeshD2S_SetCellsAllocationMethod,None,itkMeshD2S)
itkMeshD2S.GetCellsAllocationMethod = new_instancemethod(_itkMeshPython.itkMeshD2S_GetCellsAllocationMethod,None,itkMeshD2S)
itkMeshD2S.GetPointer = new_instancemethod(_itkMeshPython.itkMeshD2S_GetPointer,None,itkMeshD2S)
itkMeshD2S_swigregister = _itkMeshPython.itkMeshD2S_swigregister
itkMeshD2S_swigregister(itkMeshD2S)

def itkMeshD2S___New_orig__():
  """itkMeshD2S___New_orig__()"""
  return _itkMeshPython.itkMeshD2S___New_orig__()

def itkMeshD2S_cast(*args):
  """itkMeshD2S_cast(itkLightObject obj) -> itkMeshD2S"""
  return _itkMeshPython.itkMeshD2S_cast(*args)

class itkMeshD3D(itkPointSetPython.itkPointSetD3D):
    """Proxy of C++ itkMeshD3D class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    PointDimension = _itkMeshPython.itkMeshD3D_PointDimension
    MaxTopologicalDimension = _itkMeshPython.itkMeshD3D_MaxTopologicalDimension
    CellsAllocationMethodUndefined = _itkMeshPython.itkMeshD3D_CellsAllocationMethodUndefined
    CellsAllocatedAsStaticArray = _itkMeshPython.itkMeshD3D_CellsAllocatedAsStaticArray
    CellsAllocatedAsADynamicArray = _itkMeshPython.itkMeshD3D_CellsAllocatedAsADynamicArray
    CellsAllocatedDynamicallyCellByCell = _itkMeshPython.itkMeshD3D_CellsAllocatedDynamicallyCellByCell
    def __New_orig__():
        """__New_orig__()"""
        return _itkMeshPython.itkMeshD3D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetNumberOfCells(self):
        """GetNumberOfCells(self) -> unsigned long"""
        return _itkMeshPython.itkMeshD3D_GetNumberOfCells(self)

    def PassStructure(self, *args):
        """PassStructure(self, itkMeshD3D inputMesh)"""
        return _itkMeshPython.itkMeshD3D_PassStructure(self, *args)

    def SetCellLinks(self, *args):
        """SetCellLinks(self, itkMapContainerULSUL arg0)"""
        return _itkMeshPython.itkMeshD3D_SetCellLinks(self, *args)

    def SetCellData(self, *args):
        """
        SetCellData(self, itkMapContainerULD arg0)
        SetCellData(self, unsigned long arg0, double arg1)
        """
        return _itkMeshPython.itkMeshD3D_SetCellData(self, *args)

    def GetCellData(self, *args):
        """
        GetCellData(self) -> itkMapContainerULD
        GetCellData(self) -> itkMapContainerULD
        GetCellData(self, unsigned long arg0, double arg1) -> bool
        """
        return _itkMeshPython.itkMeshD3D_GetCellData(self, *args)

    def SetBoundaryAssignment(self, *args):
        """
        SetBoundaryAssignment(self, int dimension, unsigned long cellId, unsigned long featureId, 
            unsigned long boundaryId)
        """
        return _itkMeshPython.itkMeshD3D_SetBoundaryAssignment(self, *args)

    def GetBoundaryAssignment(self, *args):
        """
        GetBoundaryAssignment(self, int dimension, unsigned long cellId, unsigned long featureId, 
            unsigned long boundaryId) -> bool
        """
        return _itkMeshPython.itkMeshD3D_GetBoundaryAssignment(self, *args)

    def RemoveBoundaryAssignment(self, *args):
        """RemoveBoundaryAssignment(self, int dimension, unsigned long cellId, unsigned long featureId) -> bool"""
        return _itkMeshPython.itkMeshD3D_RemoveBoundaryAssignment(self, *args)

    def GetNumberOfCellBoundaryFeatures(self, *args):
        """GetNumberOfCellBoundaryFeatures(self, int dimension, unsigned long arg1) -> unsigned long"""
        return _itkMeshPython.itkMeshD3D_GetNumberOfCellBoundaryFeatures(self, *args)

    def GetCellBoundaryFeatureNeighbors(self, *args):
        """
        GetCellBoundaryFeatureNeighbors(self, int dimension, unsigned long arg1, unsigned long arg2, 
            setUL cellSet) -> unsigned long
        """
        return _itkMeshPython.itkMeshD3D_GetCellBoundaryFeatureNeighbors(self, *args)

    def GetCellNeighbors(self, *args):
        """GetCellNeighbors(self, unsigned long cellId, setUL cellSet) -> unsigned long"""
        return _itkMeshPython.itkMeshD3D_GetCellNeighbors(self, *args)

    def BuildCellLinks(self):
        """BuildCellLinks(self)"""
        return _itkMeshPython.itkMeshD3D_BuildCellLinks(self)

    def SetCellsAllocationMethod(self, *args):
        """SetCellsAllocationMethod(self, CellsAllocationMethodType _arg)"""
        return _itkMeshPython.itkMeshD3D_SetCellsAllocationMethod(self, *args)

    def GetCellsAllocationMethod(self):
        """GetCellsAllocationMethod(self) -> CellsAllocationMethodType"""
        return _itkMeshPython.itkMeshD3D_GetCellsAllocationMethod(self)

    __swig_destroy__ = _itkMeshPython.delete_itkMeshD3D
    def cast(*args):
        """cast(itkLightObject obj) -> itkMeshD3D"""
        return _itkMeshPython.itkMeshD3D_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMeshD3D"""
        return _itkMeshPython.itkMeshD3D_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMeshD3D
        
        Create a new object of the class itkMeshD3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMeshD3D.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMeshD3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeshD3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeshD3D.GetNumberOfCells = new_instancemethod(_itkMeshPython.itkMeshD3D_GetNumberOfCells,None,itkMeshD3D)
itkMeshD3D.PassStructure = new_instancemethod(_itkMeshPython.itkMeshD3D_PassStructure,None,itkMeshD3D)
itkMeshD3D.SetCellLinks = new_instancemethod(_itkMeshPython.itkMeshD3D_SetCellLinks,None,itkMeshD3D)
itkMeshD3D.SetCellData = new_instancemethod(_itkMeshPython.itkMeshD3D_SetCellData,None,itkMeshD3D)
itkMeshD3D.GetCellData = new_instancemethod(_itkMeshPython.itkMeshD3D_GetCellData,None,itkMeshD3D)
itkMeshD3D.SetBoundaryAssignment = new_instancemethod(_itkMeshPython.itkMeshD3D_SetBoundaryAssignment,None,itkMeshD3D)
itkMeshD3D.GetBoundaryAssignment = new_instancemethod(_itkMeshPython.itkMeshD3D_GetBoundaryAssignment,None,itkMeshD3D)
itkMeshD3D.RemoveBoundaryAssignment = new_instancemethod(_itkMeshPython.itkMeshD3D_RemoveBoundaryAssignment,None,itkMeshD3D)
itkMeshD3D.GetNumberOfCellBoundaryFeatures = new_instancemethod(_itkMeshPython.itkMeshD3D_GetNumberOfCellBoundaryFeatures,None,itkMeshD3D)
itkMeshD3D.GetCellBoundaryFeatureNeighbors = new_instancemethod(_itkMeshPython.itkMeshD3D_GetCellBoundaryFeatureNeighbors,None,itkMeshD3D)
itkMeshD3D.GetCellNeighbors = new_instancemethod(_itkMeshPython.itkMeshD3D_GetCellNeighbors,None,itkMeshD3D)
itkMeshD3D.BuildCellLinks = new_instancemethod(_itkMeshPython.itkMeshD3D_BuildCellLinks,None,itkMeshD3D)
itkMeshD3D.SetCellsAllocationMethod = new_instancemethod(_itkMeshPython.itkMeshD3D_SetCellsAllocationMethod,None,itkMeshD3D)
itkMeshD3D.GetCellsAllocationMethod = new_instancemethod(_itkMeshPython.itkMeshD3D_GetCellsAllocationMethod,None,itkMeshD3D)
itkMeshD3D.GetPointer = new_instancemethod(_itkMeshPython.itkMeshD3D_GetPointer,None,itkMeshD3D)
itkMeshD3D_swigregister = _itkMeshPython.itkMeshD3D_swigregister
itkMeshD3D_swigregister(itkMeshD3D)

def itkMeshD3D___New_orig__():
  """itkMeshD3D___New_orig__()"""
  return _itkMeshPython.itkMeshD3D___New_orig__()

def itkMeshD3D_cast(*args):
  """itkMeshD3D_cast(itkLightObject obj) -> itkMeshD3D"""
  return _itkMeshPython.itkMeshD3D_cast(*args)

class itkMeshD3Q(itkPointSetPython.itkPointSetD3Q):
    """Proxy of C++ itkMeshD3Q class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    PointDimension = _itkMeshPython.itkMeshD3Q_PointDimension
    MaxTopologicalDimension = _itkMeshPython.itkMeshD3Q_MaxTopologicalDimension
    CellsAllocationMethodUndefined = _itkMeshPython.itkMeshD3Q_CellsAllocationMethodUndefined
    CellsAllocatedAsStaticArray = _itkMeshPython.itkMeshD3Q_CellsAllocatedAsStaticArray
    CellsAllocatedAsADynamicArray = _itkMeshPython.itkMeshD3Q_CellsAllocatedAsADynamicArray
    CellsAllocatedDynamicallyCellByCell = _itkMeshPython.itkMeshD3Q_CellsAllocatedDynamicallyCellByCell
    def __New_orig__():
        """__New_orig__()"""
        return _itkMeshPython.itkMeshD3Q___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetNumberOfCells(self):
        """GetNumberOfCells(self) -> unsigned long"""
        return _itkMeshPython.itkMeshD3Q_GetNumberOfCells(self)

    def PassStructure(self, *args):
        """PassStructure(self, itkMeshD3Q inputMesh)"""
        return _itkMeshPython.itkMeshD3Q_PassStructure(self, *args)

    def SetCellLinks(self, *args):
        """SetCellLinks(self, itkMapContainerULSUL arg0)"""
        return _itkMeshPython.itkMeshD3Q_SetCellLinks(self, *args)

    def SetCellData(self, *args):
        """
        SetCellData(self, itkMapContainerULD arg0)
        SetCellData(self, unsigned long arg0, double arg1)
        """
        return _itkMeshPython.itkMeshD3Q_SetCellData(self, *args)

    def GetCellData(self, *args):
        """
        GetCellData(self) -> itkMapContainerULD
        GetCellData(self) -> itkMapContainerULD
        GetCellData(self, unsigned long arg0, double arg1) -> bool
        """
        return _itkMeshPython.itkMeshD3Q_GetCellData(self, *args)

    def SetBoundaryAssignment(self, *args):
        """
        SetBoundaryAssignment(self, int dimension, unsigned long cellId, unsigned char featureId, 
            unsigned long boundaryId)
        """
        return _itkMeshPython.itkMeshD3Q_SetBoundaryAssignment(self, *args)

    def GetBoundaryAssignment(self, *args):
        """
        GetBoundaryAssignment(self, int dimension, unsigned long cellId, unsigned char featureId, 
            unsigned long boundaryId) -> bool
        """
        return _itkMeshPython.itkMeshD3Q_GetBoundaryAssignment(self, *args)

    def RemoveBoundaryAssignment(self, *args):
        """RemoveBoundaryAssignment(self, int dimension, unsigned long cellId, unsigned char featureId) -> bool"""
        return _itkMeshPython.itkMeshD3Q_RemoveBoundaryAssignment(self, *args)

    def GetNumberOfCellBoundaryFeatures(self, *args):
        """GetNumberOfCellBoundaryFeatures(self, int dimension, unsigned long arg1) -> unsigned char"""
        return _itkMeshPython.itkMeshD3Q_GetNumberOfCellBoundaryFeatures(self, *args)

    def GetCellBoundaryFeatureNeighbors(self, *args):
        """
        GetCellBoundaryFeatureNeighbors(self, int dimension, unsigned long arg1, unsigned char arg2, 
            setUL cellSet) -> unsigned long
        """
        return _itkMeshPython.itkMeshD3Q_GetCellBoundaryFeatureNeighbors(self, *args)

    def GetCellNeighbors(self, *args):
        """GetCellNeighbors(self, unsigned long cellId, setUL cellSet) -> unsigned long"""
        return _itkMeshPython.itkMeshD3Q_GetCellNeighbors(self, *args)

    def BuildCellLinks(self):
        """BuildCellLinks(self)"""
        return _itkMeshPython.itkMeshD3Q_BuildCellLinks(self)

    def SetCellsAllocationMethod(self, *args):
        """SetCellsAllocationMethod(self, CellsAllocationMethodType _arg)"""
        return _itkMeshPython.itkMeshD3Q_SetCellsAllocationMethod(self, *args)

    def GetCellsAllocationMethod(self):
        """GetCellsAllocationMethod(self) -> CellsAllocationMethodType"""
        return _itkMeshPython.itkMeshD3Q_GetCellsAllocationMethod(self)

    __swig_destroy__ = _itkMeshPython.delete_itkMeshD3Q
    def cast(*args):
        """cast(itkLightObject obj) -> itkMeshD3Q"""
        return _itkMeshPython.itkMeshD3Q_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMeshD3Q"""
        return _itkMeshPython.itkMeshD3Q_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMeshD3Q
        
        Create a new object of the class itkMeshD3Q and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMeshD3Q.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMeshD3Q.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeshD3Q.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeshD3Q.GetNumberOfCells = new_instancemethod(_itkMeshPython.itkMeshD3Q_GetNumberOfCells,None,itkMeshD3Q)
itkMeshD3Q.PassStructure = new_instancemethod(_itkMeshPython.itkMeshD3Q_PassStructure,None,itkMeshD3Q)
itkMeshD3Q.SetCellLinks = new_instancemethod(_itkMeshPython.itkMeshD3Q_SetCellLinks,None,itkMeshD3Q)
itkMeshD3Q.SetCellData = new_instancemethod(_itkMeshPython.itkMeshD3Q_SetCellData,None,itkMeshD3Q)
itkMeshD3Q.GetCellData = new_instancemethod(_itkMeshPython.itkMeshD3Q_GetCellData,None,itkMeshD3Q)
itkMeshD3Q.SetBoundaryAssignment = new_instancemethod(_itkMeshPython.itkMeshD3Q_SetBoundaryAssignment,None,itkMeshD3Q)
itkMeshD3Q.GetBoundaryAssignment = new_instancemethod(_itkMeshPython.itkMeshD3Q_GetBoundaryAssignment,None,itkMeshD3Q)
itkMeshD3Q.RemoveBoundaryAssignment = new_instancemethod(_itkMeshPython.itkMeshD3Q_RemoveBoundaryAssignment,None,itkMeshD3Q)
itkMeshD3Q.GetNumberOfCellBoundaryFeatures = new_instancemethod(_itkMeshPython.itkMeshD3Q_GetNumberOfCellBoundaryFeatures,None,itkMeshD3Q)
itkMeshD3Q.GetCellBoundaryFeatureNeighbors = new_instancemethod(_itkMeshPython.itkMeshD3Q_GetCellBoundaryFeatureNeighbors,None,itkMeshD3Q)
itkMeshD3Q.GetCellNeighbors = new_instancemethod(_itkMeshPython.itkMeshD3Q_GetCellNeighbors,None,itkMeshD3Q)
itkMeshD3Q.BuildCellLinks = new_instancemethod(_itkMeshPython.itkMeshD3Q_BuildCellLinks,None,itkMeshD3Q)
itkMeshD3Q.SetCellsAllocationMethod = new_instancemethod(_itkMeshPython.itkMeshD3Q_SetCellsAllocationMethod,None,itkMeshD3Q)
itkMeshD3Q.GetCellsAllocationMethod = new_instancemethod(_itkMeshPython.itkMeshD3Q_GetCellsAllocationMethod,None,itkMeshD3Q)
itkMeshD3Q.GetPointer = new_instancemethod(_itkMeshPython.itkMeshD3Q_GetPointer,None,itkMeshD3Q)
itkMeshD3Q_swigregister = _itkMeshPython.itkMeshD3Q_swigregister
itkMeshD3Q_swigregister(itkMeshD3Q)

def itkMeshD3Q___New_orig__():
  """itkMeshD3Q___New_orig__()"""
  return _itkMeshPython.itkMeshD3Q___New_orig__()

def itkMeshD3Q_cast(*args):
  """itkMeshD3Q_cast(itkLightObject obj) -> itkMeshD3Q"""
  return _itkMeshPython.itkMeshD3Q_cast(*args)

class itkMeshD3S(itkPointSetPython.itkPointSetD3S):
    """Proxy of C++ itkMeshD3S class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    PointDimension = _itkMeshPython.itkMeshD3S_PointDimension
    MaxTopologicalDimension = _itkMeshPython.itkMeshD3S_MaxTopologicalDimension
    CellsAllocationMethodUndefined = _itkMeshPython.itkMeshD3S_CellsAllocationMethodUndefined
    CellsAllocatedAsStaticArray = _itkMeshPython.itkMeshD3S_CellsAllocatedAsStaticArray
    CellsAllocatedAsADynamicArray = _itkMeshPython.itkMeshD3S_CellsAllocatedAsADynamicArray
    CellsAllocatedDynamicallyCellByCell = _itkMeshPython.itkMeshD3S_CellsAllocatedDynamicallyCellByCell
    def __New_orig__():
        """__New_orig__()"""
        return _itkMeshPython.itkMeshD3S___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetNumberOfCells(self):
        """GetNumberOfCells(self) -> unsigned long"""
        return _itkMeshPython.itkMeshD3S_GetNumberOfCells(self)

    def PassStructure(self, *args):
        """PassStructure(self, itkMeshD3S inputMesh)"""
        return _itkMeshPython.itkMeshD3S_PassStructure(self, *args)

    def SetCellLinks(self, *args):
        """SetCellLinks(self, itkVectorContainerULSUL arg0)"""
        return _itkMeshPython.itkMeshD3S_SetCellLinks(self, *args)

    def SetCellData(self, *args):
        """
        SetCellData(self, itkVectorContainerULD arg0)
        SetCellData(self, unsigned long arg0, double arg1)
        """
        return _itkMeshPython.itkMeshD3S_SetCellData(self, *args)

    def GetCellData(self, *args):
        """
        GetCellData(self) -> itkVectorContainerULD
        GetCellData(self) -> itkVectorContainerULD
        GetCellData(self, unsigned long arg0, double arg1) -> bool
        """
        return _itkMeshPython.itkMeshD3S_GetCellData(self, *args)

    def SetBoundaryAssignment(self, *args):
        """
        SetBoundaryAssignment(self, int dimension, unsigned long cellId, unsigned long featureId, 
            unsigned long boundaryId)
        """
        return _itkMeshPython.itkMeshD3S_SetBoundaryAssignment(self, *args)

    def GetBoundaryAssignment(self, *args):
        """
        GetBoundaryAssignment(self, int dimension, unsigned long cellId, unsigned long featureId, 
            unsigned long boundaryId) -> bool
        """
        return _itkMeshPython.itkMeshD3S_GetBoundaryAssignment(self, *args)

    def RemoveBoundaryAssignment(self, *args):
        """RemoveBoundaryAssignment(self, int dimension, unsigned long cellId, unsigned long featureId) -> bool"""
        return _itkMeshPython.itkMeshD3S_RemoveBoundaryAssignment(self, *args)

    def GetNumberOfCellBoundaryFeatures(self, *args):
        """GetNumberOfCellBoundaryFeatures(self, int dimension, unsigned long arg1) -> unsigned long"""
        return _itkMeshPython.itkMeshD3S_GetNumberOfCellBoundaryFeatures(self, *args)

    def GetCellBoundaryFeatureNeighbors(self, *args):
        """
        GetCellBoundaryFeatureNeighbors(self, int dimension, unsigned long arg1, unsigned long arg2, 
            setUL cellSet) -> unsigned long
        """
        return _itkMeshPython.itkMeshD3S_GetCellBoundaryFeatureNeighbors(self, *args)

    def GetCellNeighbors(self, *args):
        """GetCellNeighbors(self, unsigned long cellId, setUL cellSet) -> unsigned long"""
        return _itkMeshPython.itkMeshD3S_GetCellNeighbors(self, *args)

    def BuildCellLinks(self):
        """BuildCellLinks(self)"""
        return _itkMeshPython.itkMeshD3S_BuildCellLinks(self)

    def SetCellsAllocationMethod(self, *args):
        """SetCellsAllocationMethod(self, CellsAllocationMethodType _arg)"""
        return _itkMeshPython.itkMeshD3S_SetCellsAllocationMethod(self, *args)

    def GetCellsAllocationMethod(self):
        """GetCellsAllocationMethod(self) -> CellsAllocationMethodType"""
        return _itkMeshPython.itkMeshD3S_GetCellsAllocationMethod(self)

    __swig_destroy__ = _itkMeshPython.delete_itkMeshD3S
    def cast(*args):
        """cast(itkLightObject obj) -> itkMeshD3S"""
        return _itkMeshPython.itkMeshD3S_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMeshD3S"""
        return _itkMeshPython.itkMeshD3S_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMeshD3S
        
        Create a new object of the class itkMeshD3S and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMeshD3S.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMeshD3S.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeshD3S.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeshD3S.GetNumberOfCells = new_instancemethod(_itkMeshPython.itkMeshD3S_GetNumberOfCells,None,itkMeshD3S)
itkMeshD3S.PassStructure = new_instancemethod(_itkMeshPython.itkMeshD3S_PassStructure,None,itkMeshD3S)
itkMeshD3S.SetCellLinks = new_instancemethod(_itkMeshPython.itkMeshD3S_SetCellLinks,None,itkMeshD3S)
itkMeshD3S.SetCellData = new_instancemethod(_itkMeshPython.itkMeshD3S_SetCellData,None,itkMeshD3S)
itkMeshD3S.GetCellData = new_instancemethod(_itkMeshPython.itkMeshD3S_GetCellData,None,itkMeshD3S)
itkMeshD3S.SetBoundaryAssignment = new_instancemethod(_itkMeshPython.itkMeshD3S_SetBoundaryAssignment,None,itkMeshD3S)
itkMeshD3S.GetBoundaryAssignment = new_instancemethod(_itkMeshPython.itkMeshD3S_GetBoundaryAssignment,None,itkMeshD3S)
itkMeshD3S.RemoveBoundaryAssignment = new_instancemethod(_itkMeshPython.itkMeshD3S_RemoveBoundaryAssignment,None,itkMeshD3S)
itkMeshD3S.GetNumberOfCellBoundaryFeatures = new_instancemethod(_itkMeshPython.itkMeshD3S_GetNumberOfCellBoundaryFeatures,None,itkMeshD3S)
itkMeshD3S.GetCellBoundaryFeatureNeighbors = new_instancemethod(_itkMeshPython.itkMeshD3S_GetCellBoundaryFeatureNeighbors,None,itkMeshD3S)
itkMeshD3S.GetCellNeighbors = new_instancemethod(_itkMeshPython.itkMeshD3S_GetCellNeighbors,None,itkMeshD3S)
itkMeshD3S.BuildCellLinks = new_instancemethod(_itkMeshPython.itkMeshD3S_BuildCellLinks,None,itkMeshD3S)
itkMeshD3S.SetCellsAllocationMethod = new_instancemethod(_itkMeshPython.itkMeshD3S_SetCellsAllocationMethod,None,itkMeshD3S)
itkMeshD3S.GetCellsAllocationMethod = new_instancemethod(_itkMeshPython.itkMeshD3S_GetCellsAllocationMethod,None,itkMeshD3S)
itkMeshD3S.GetPointer = new_instancemethod(_itkMeshPython.itkMeshD3S_GetPointer,None,itkMeshD3S)
itkMeshD3S_swigregister = _itkMeshPython.itkMeshD3S_swigregister
itkMeshD3S_swigregister(itkMeshD3S)

def itkMeshD3S___New_orig__():
  """itkMeshD3S___New_orig__()"""
  return _itkMeshPython.itkMeshD3S___New_orig__()

def itkMeshD3S_cast(*args):
  """itkMeshD3S_cast(itkLightObject obj) -> itkMeshD3S"""
  return _itkMeshPython.itkMeshD3S_cast(*args)



