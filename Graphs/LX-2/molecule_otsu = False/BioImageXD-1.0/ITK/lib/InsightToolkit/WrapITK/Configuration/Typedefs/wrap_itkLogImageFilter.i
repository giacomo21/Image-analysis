// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkLogImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkLogImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkLogImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkLogImageFilterJava
#endif
#ifdef SWIGLUA
%module itkLogImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkLogImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkLogImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkLogImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkLogImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkLogImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkLogImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkLogImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkLogImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkLogImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkLogImageFilterPython
#endif
#ifdef SWIGR
%module itkLogImageFilterR
#endif
#ifdef SWIGRUBY
%module itkLogImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkLogImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkLogImageFilterTcl
#endif
#ifdef SWIGXML
%module itkLogImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "UnaryPixelMath.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkInPlaceImageFilterA.i
%import wrap_ITKRegions.i


%include itk.i
%include wrap_itkLogImageFilter_ext.i


 class itkLogImageFilterID2ID2_Pointer {
   public:
     itkLogImageFilterID2ID2_Pointer();
     itkLogImageFilterID2ID2_Pointer(itkLogImageFilterID2ID2_Pointer const & p);
     itkLogImageFilterID2ID2_Pointer(itkLogImageFilterID2ID2 * p);
     ~itkLogImageFilterID2ID2_Pointer();
     itkLogImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLogImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkLogImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkLogImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkLogImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkLogImageFilterID2ID2_Pointer const & r) const;
     itkLogImageFilterID2ID2_Pointer & operator=(itkLogImageFilterID2ID2_Pointer const & r);
     itkLogImageFilterID2ID2_Pointer & operator=(itkLogImageFilterID2ID2 * r);
     itkLogImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLogImageFilterID2ID2_Superclass : public itkInPlaceImageFilterID2ID2 {
   public:
     static itkLogImageFilterID2ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Function::Log< double, double > & GetFunctor();
     itk::Function::Log< double, double > const & GetFunctor() const;
     void SetFunctor(itk::Function::Log< double, double > const & functor);
   private:
     itkLogImageFilterID2ID2_Superclass(itkLogImageFilterID2ID2_Superclass const & arg0);
     void operator=(itkLogImageFilterID2ID2_Superclass const & arg0);
   protected:
     itkLogImageFilterID2ID2_Superclass();
     ~itkLogImageFilterID2ID2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkLogImageFilterID2ID2_Superclass_Pointer {
   public:
     itkLogImageFilterID2ID2_Superclass_Pointer();
     itkLogImageFilterID2ID2_Superclass_Pointer(itkLogImageFilterID2ID2_Superclass_Pointer const & p);
     itkLogImageFilterID2ID2_Superclass_Pointer(itkLogImageFilterID2ID2_Superclass * p);
     ~itkLogImageFilterID2ID2_Superclass_Pointer();
     itkLogImageFilterID2ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLogImageFilterID2ID2_Superclass * GetPointer() const;
     bool operator<(itkLogImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator>(itkLogImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkLogImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkLogImageFilterID2ID2_Superclass_Pointer const & r) const;
     itkLogImageFilterID2ID2_Superclass_Pointer & operator=(itkLogImageFilterID2ID2_Superclass_Pointer const & r);
     itkLogImageFilterID2ID2_Superclass_Pointer & operator=(itkLogImageFilterID2ID2_Superclass * r);
     itkLogImageFilterID2ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLogImageFilterID3ID3_Pointer {
   public:
     itkLogImageFilterID3ID3_Pointer();
     itkLogImageFilterID3ID3_Pointer(itkLogImageFilterID3ID3_Pointer const & p);
     itkLogImageFilterID3ID3_Pointer(itkLogImageFilterID3ID3 * p);
     ~itkLogImageFilterID3ID3_Pointer();
     itkLogImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLogImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkLogImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkLogImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkLogImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkLogImageFilterID3ID3_Pointer const & r) const;
     itkLogImageFilterID3ID3_Pointer & operator=(itkLogImageFilterID3ID3_Pointer const & r);
     itkLogImageFilterID3ID3_Pointer & operator=(itkLogImageFilterID3ID3 * r);
     itkLogImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLogImageFilterID3ID3_Superclass : public itkInPlaceImageFilterID3ID3 {
   public:
     static itkLogImageFilterID3ID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Function::Log< double, double > & GetFunctor();
     itk::Function::Log< double, double > const & GetFunctor() const;
     void SetFunctor(itk::Function::Log< double, double > const & functor);
   private:
     itkLogImageFilterID3ID3_Superclass(itkLogImageFilterID3ID3_Superclass const & arg0);
     void operator=(itkLogImageFilterID3ID3_Superclass const & arg0);
   protected:
     itkLogImageFilterID3ID3_Superclass();
     ~itkLogImageFilterID3ID3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkLogImageFilterID3ID3_Superclass_Pointer {
   public:
     itkLogImageFilterID3ID3_Superclass_Pointer();
     itkLogImageFilterID3ID3_Superclass_Pointer(itkLogImageFilterID3ID3_Superclass_Pointer const & p);
     itkLogImageFilterID3ID3_Superclass_Pointer(itkLogImageFilterID3ID3_Superclass * p);
     ~itkLogImageFilterID3ID3_Superclass_Pointer();
     itkLogImageFilterID3ID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLogImageFilterID3ID3_Superclass * GetPointer() const;
     bool operator<(itkLogImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator>(itkLogImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator<=(itkLogImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator>=(itkLogImageFilterID3ID3_Superclass_Pointer const & r) const;
     itkLogImageFilterID3ID3_Superclass_Pointer & operator=(itkLogImageFilterID3ID3_Superclass_Pointer const & r);
     itkLogImageFilterID3ID3_Superclass_Pointer & operator=(itkLogImageFilterID3ID3_Superclass * r);
     itkLogImageFilterID3ID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLogImageFilterIF2IF2_Pointer {
   public:
     itkLogImageFilterIF2IF2_Pointer();
     itkLogImageFilterIF2IF2_Pointer(itkLogImageFilterIF2IF2_Pointer const & p);
     itkLogImageFilterIF2IF2_Pointer(itkLogImageFilterIF2IF2 * p);
     ~itkLogImageFilterIF2IF2_Pointer();
     itkLogImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLogImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkLogImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkLogImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkLogImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkLogImageFilterIF2IF2_Pointer const & r) const;
     itkLogImageFilterIF2IF2_Pointer & operator=(itkLogImageFilterIF2IF2_Pointer const & r);
     itkLogImageFilterIF2IF2_Pointer & operator=(itkLogImageFilterIF2IF2 * r);
     itkLogImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLogImageFilterIF2IF2_Superclass : public itkInPlaceImageFilterIF2IF2 {
   public:
     static itkLogImageFilterIF2IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Function::Log< float, float > & GetFunctor();
     itk::Function::Log< float, float > const & GetFunctor() const;
     void SetFunctor(itk::Function::Log< float, float > const & functor);
   private:
     itkLogImageFilterIF2IF2_Superclass(itkLogImageFilterIF2IF2_Superclass const & arg0);
     void operator=(itkLogImageFilterIF2IF2_Superclass const & arg0);
   protected:
     itkLogImageFilterIF2IF2_Superclass();
     ~itkLogImageFilterIF2IF2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkLogImageFilterIF2IF2_Superclass_Pointer {
   public:
     itkLogImageFilterIF2IF2_Superclass_Pointer();
     itkLogImageFilterIF2IF2_Superclass_Pointer(itkLogImageFilterIF2IF2_Superclass_Pointer const & p);
     itkLogImageFilterIF2IF2_Superclass_Pointer(itkLogImageFilterIF2IF2_Superclass * p);
     ~itkLogImageFilterIF2IF2_Superclass_Pointer();
     itkLogImageFilterIF2IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLogImageFilterIF2IF2_Superclass * GetPointer() const;
     bool operator<(itkLogImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator>(itkLogImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkLogImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkLogImageFilterIF2IF2_Superclass_Pointer const & r) const;
     itkLogImageFilterIF2IF2_Superclass_Pointer & operator=(itkLogImageFilterIF2IF2_Superclass_Pointer const & r);
     itkLogImageFilterIF2IF2_Superclass_Pointer & operator=(itkLogImageFilterIF2IF2_Superclass * r);
     itkLogImageFilterIF2IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLogImageFilterIF3IF3_Pointer {
   public:
     itkLogImageFilterIF3IF3_Pointer();
     itkLogImageFilterIF3IF3_Pointer(itkLogImageFilterIF3IF3_Pointer const & p);
     itkLogImageFilterIF3IF3_Pointer(itkLogImageFilterIF3IF3 * p);
     ~itkLogImageFilterIF3IF3_Pointer();
     itkLogImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLogImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkLogImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkLogImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkLogImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkLogImageFilterIF3IF3_Pointer const & r) const;
     itkLogImageFilterIF3IF3_Pointer & operator=(itkLogImageFilterIF3IF3_Pointer const & r);
     itkLogImageFilterIF3IF3_Pointer & operator=(itkLogImageFilterIF3IF3 * r);
     itkLogImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLogImageFilterIF3IF3_Superclass : public itkInPlaceImageFilterIF3IF3 {
   public:
     static itkLogImageFilterIF3IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Function::Log< float, float > & GetFunctor();
     itk::Function::Log< float, float > const & GetFunctor() const;
     void SetFunctor(itk::Function::Log< float, float > const & functor);
   private:
     itkLogImageFilterIF3IF3_Superclass(itkLogImageFilterIF3IF3_Superclass const & arg0);
     void operator=(itkLogImageFilterIF3IF3_Superclass const & arg0);
   protected:
     itkLogImageFilterIF3IF3_Superclass();
     ~itkLogImageFilterIF3IF3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkLogImageFilterIF3IF3_Superclass_Pointer {
   public:
     itkLogImageFilterIF3IF3_Superclass_Pointer();
     itkLogImageFilterIF3IF3_Superclass_Pointer(itkLogImageFilterIF3IF3_Superclass_Pointer const & p);
     itkLogImageFilterIF3IF3_Superclass_Pointer(itkLogImageFilterIF3IF3_Superclass * p);
     ~itkLogImageFilterIF3IF3_Superclass_Pointer();
     itkLogImageFilterIF3IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLogImageFilterIF3IF3_Superclass * GetPointer() const;
     bool operator<(itkLogImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator>(itkLogImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkLogImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkLogImageFilterIF3IF3_Superclass_Pointer const & r) const;
     itkLogImageFilterIF3IF3_Superclass_Pointer & operator=(itkLogImageFilterIF3IF3_Superclass_Pointer const & r);
     itkLogImageFilterIF3IF3_Superclass_Pointer & operator=(itkLogImageFilterIF3IF3_Superclass * r);
     itkLogImageFilterIF3IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLogImageFilterIUC2IUC2_Pointer {
   public:
     itkLogImageFilterIUC2IUC2_Pointer();
     itkLogImageFilterIUC2IUC2_Pointer(itkLogImageFilterIUC2IUC2_Pointer const & p);
     itkLogImageFilterIUC2IUC2_Pointer(itkLogImageFilterIUC2IUC2 * p);
     ~itkLogImageFilterIUC2IUC2_Pointer();
     itkLogImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLogImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkLogImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkLogImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkLogImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkLogImageFilterIUC2IUC2_Pointer const & r) const;
     itkLogImageFilterIUC2IUC2_Pointer & operator=(itkLogImageFilterIUC2IUC2_Pointer const & r);
     itkLogImageFilterIUC2IUC2_Pointer & operator=(itkLogImageFilterIUC2IUC2 * r);
     itkLogImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLogImageFilterIUC2IUC2_Superclass : public itkInPlaceImageFilterIUC2IUC2 {
   public:
     static itkLogImageFilterIUC2IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Function::Log< unsigned char, unsigned char > & GetFunctor();
     itk::Function::Log< unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Function::Log< unsigned char, unsigned char > const & functor);
   private:
     itkLogImageFilterIUC2IUC2_Superclass(itkLogImageFilterIUC2IUC2_Superclass const & arg0);
     void operator=(itkLogImageFilterIUC2IUC2_Superclass const & arg0);
   protected:
     itkLogImageFilterIUC2IUC2_Superclass();
     ~itkLogImageFilterIUC2IUC2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkLogImageFilterIUC2IUC2_Superclass_Pointer {
   public:
     itkLogImageFilterIUC2IUC2_Superclass_Pointer();
     itkLogImageFilterIUC2IUC2_Superclass_Pointer(itkLogImageFilterIUC2IUC2_Superclass_Pointer const & p);
     itkLogImageFilterIUC2IUC2_Superclass_Pointer(itkLogImageFilterIUC2IUC2_Superclass * p);
     ~itkLogImageFilterIUC2IUC2_Superclass_Pointer();
     itkLogImageFilterIUC2IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLogImageFilterIUC2IUC2_Superclass * GetPointer() const;
     bool operator<(itkLogImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkLogImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkLogImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkLogImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     itkLogImageFilterIUC2IUC2_Superclass_Pointer & operator=(itkLogImageFilterIUC2IUC2_Superclass_Pointer const & r);
     itkLogImageFilterIUC2IUC2_Superclass_Pointer & operator=(itkLogImageFilterIUC2IUC2_Superclass * r);
     itkLogImageFilterIUC2IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLogImageFilterIUC3IUC3_Pointer {
   public:
     itkLogImageFilterIUC3IUC3_Pointer();
     itkLogImageFilterIUC3IUC3_Pointer(itkLogImageFilterIUC3IUC3_Pointer const & p);
     itkLogImageFilterIUC3IUC3_Pointer(itkLogImageFilterIUC3IUC3 * p);
     ~itkLogImageFilterIUC3IUC3_Pointer();
     itkLogImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLogImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkLogImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkLogImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkLogImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkLogImageFilterIUC3IUC3_Pointer const & r) const;
     itkLogImageFilterIUC3IUC3_Pointer & operator=(itkLogImageFilterIUC3IUC3_Pointer const & r);
     itkLogImageFilterIUC3IUC3_Pointer & operator=(itkLogImageFilterIUC3IUC3 * r);
     itkLogImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLogImageFilterIUC3IUC3_Superclass : public itkInPlaceImageFilterIUC3IUC3 {
   public:
     static itkLogImageFilterIUC3IUC3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Function::Log< unsigned char, unsigned char > & GetFunctor();
     itk::Function::Log< unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Function::Log< unsigned char, unsigned char > const & functor);
   private:
     itkLogImageFilterIUC3IUC3_Superclass(itkLogImageFilterIUC3IUC3_Superclass const & arg0);
     void operator=(itkLogImageFilterIUC3IUC3_Superclass const & arg0);
   protected:
     itkLogImageFilterIUC3IUC3_Superclass();
     ~itkLogImageFilterIUC3IUC3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkLogImageFilterIUC3IUC3_Superclass_Pointer {
   public:
     itkLogImageFilterIUC3IUC3_Superclass_Pointer();
     itkLogImageFilterIUC3IUC3_Superclass_Pointer(itkLogImageFilterIUC3IUC3_Superclass_Pointer const & p);
     itkLogImageFilterIUC3IUC3_Superclass_Pointer(itkLogImageFilterIUC3IUC3_Superclass * p);
     ~itkLogImageFilterIUC3IUC3_Superclass_Pointer();
     itkLogImageFilterIUC3IUC3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLogImageFilterIUC3IUC3_Superclass * GetPointer() const;
     bool operator<(itkLogImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>(itkLogImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator<=(itkLogImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>=(itkLogImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     itkLogImageFilterIUC3IUC3_Superclass_Pointer & operator=(itkLogImageFilterIUC3IUC3_Superclass_Pointer const & r);
     itkLogImageFilterIUC3IUC3_Superclass_Pointer & operator=(itkLogImageFilterIUC3IUC3_Superclass * r);
     itkLogImageFilterIUC3IUC3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLogImageFilterIUL2IUL2_Pointer {
   public:
     itkLogImageFilterIUL2IUL2_Pointer();
     itkLogImageFilterIUL2IUL2_Pointer(itkLogImageFilterIUL2IUL2_Pointer const & p);
     itkLogImageFilterIUL2IUL2_Pointer(itkLogImageFilterIUL2IUL2 * p);
     ~itkLogImageFilterIUL2IUL2_Pointer();
     itkLogImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLogImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkLogImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkLogImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkLogImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkLogImageFilterIUL2IUL2_Pointer const & r) const;
     itkLogImageFilterIUL2IUL2_Pointer & operator=(itkLogImageFilterIUL2IUL2_Pointer const & r);
     itkLogImageFilterIUL2IUL2_Pointer & operator=(itkLogImageFilterIUL2IUL2 * r);
     itkLogImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLogImageFilterIUL2IUL2_Superclass : public itkInPlaceImageFilterIUL2IUL2 {
   public:
     static itkLogImageFilterIUL2IUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Function::Log< unsigned long, unsigned long > & GetFunctor();
     itk::Function::Log< unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Function::Log< unsigned long, unsigned long > const & functor);
   private:
     itkLogImageFilterIUL2IUL2_Superclass(itkLogImageFilterIUL2IUL2_Superclass const & arg0);
     void operator=(itkLogImageFilterIUL2IUL2_Superclass const & arg0);
   protected:
     itkLogImageFilterIUL2IUL2_Superclass();
     ~itkLogImageFilterIUL2IUL2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkLogImageFilterIUL2IUL2_Superclass_Pointer {
   public:
     itkLogImageFilterIUL2IUL2_Superclass_Pointer();
     itkLogImageFilterIUL2IUL2_Superclass_Pointer(itkLogImageFilterIUL2IUL2_Superclass_Pointer const & p);
     itkLogImageFilterIUL2IUL2_Superclass_Pointer(itkLogImageFilterIUL2IUL2_Superclass * p);
     ~itkLogImageFilterIUL2IUL2_Superclass_Pointer();
     itkLogImageFilterIUL2IUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLogImageFilterIUL2IUL2_Superclass * GetPointer() const;
     bool operator<(itkLogImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>(itkLogImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkLogImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkLogImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     itkLogImageFilterIUL2IUL2_Superclass_Pointer & operator=(itkLogImageFilterIUL2IUL2_Superclass_Pointer const & r);
     itkLogImageFilterIUL2IUL2_Superclass_Pointer & operator=(itkLogImageFilterIUL2IUL2_Superclass * r);
     itkLogImageFilterIUL2IUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLogImageFilterIUL3IUL3_Pointer {
   public:
     itkLogImageFilterIUL3IUL3_Pointer();
     itkLogImageFilterIUL3IUL3_Pointer(itkLogImageFilterIUL3IUL3_Pointer const & p);
     itkLogImageFilterIUL3IUL3_Pointer(itkLogImageFilterIUL3IUL3 * p);
     ~itkLogImageFilterIUL3IUL3_Pointer();
     itkLogImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLogImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkLogImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkLogImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkLogImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkLogImageFilterIUL3IUL3_Pointer const & r) const;
     itkLogImageFilterIUL3IUL3_Pointer & operator=(itkLogImageFilterIUL3IUL3_Pointer const & r);
     itkLogImageFilterIUL3IUL3_Pointer & operator=(itkLogImageFilterIUL3IUL3 * r);
     itkLogImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLogImageFilterIUL3IUL3_Superclass : public itkInPlaceImageFilterIUL3IUL3 {
   public:
     static itkLogImageFilterIUL3IUL3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Function::Log< unsigned long, unsigned long > & GetFunctor();
     itk::Function::Log< unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Function::Log< unsigned long, unsigned long > const & functor);
   private:
     itkLogImageFilterIUL3IUL3_Superclass(itkLogImageFilterIUL3IUL3_Superclass const & arg0);
     void operator=(itkLogImageFilterIUL3IUL3_Superclass const & arg0);
   protected:
     itkLogImageFilterIUL3IUL3_Superclass();
     ~itkLogImageFilterIUL3IUL3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkLogImageFilterIUL3IUL3_Superclass_Pointer {
   public:
     itkLogImageFilterIUL3IUL3_Superclass_Pointer();
     itkLogImageFilterIUL3IUL3_Superclass_Pointer(itkLogImageFilterIUL3IUL3_Superclass_Pointer const & p);
     itkLogImageFilterIUL3IUL3_Superclass_Pointer(itkLogImageFilterIUL3IUL3_Superclass * p);
     ~itkLogImageFilterIUL3IUL3_Superclass_Pointer();
     itkLogImageFilterIUL3IUL3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLogImageFilterIUL3IUL3_Superclass * GetPointer() const;
     bool operator<(itkLogImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>(itkLogImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator<=(itkLogImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>=(itkLogImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     itkLogImageFilterIUL3IUL3_Superclass_Pointer & operator=(itkLogImageFilterIUL3IUL3_Superclass_Pointer const & r);
     itkLogImageFilterIUL3IUL3_Superclass_Pointer & operator=(itkLogImageFilterIUL3IUL3_Superclass * r);
     itkLogImageFilterIUL3IUL3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLogImageFilterIUS2IUS2_Pointer {
   public:
     itkLogImageFilterIUS2IUS2_Pointer();
     itkLogImageFilterIUS2IUS2_Pointer(itkLogImageFilterIUS2IUS2_Pointer const & p);
     itkLogImageFilterIUS2IUS2_Pointer(itkLogImageFilterIUS2IUS2 * p);
     ~itkLogImageFilterIUS2IUS2_Pointer();
     itkLogImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLogImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkLogImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkLogImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkLogImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkLogImageFilterIUS2IUS2_Pointer const & r) const;
     itkLogImageFilterIUS2IUS2_Pointer & operator=(itkLogImageFilterIUS2IUS2_Pointer const & r);
     itkLogImageFilterIUS2IUS2_Pointer & operator=(itkLogImageFilterIUS2IUS2 * r);
     itkLogImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLogImageFilterIUS2IUS2_Superclass : public itkInPlaceImageFilterIUS2IUS2 {
   public:
     static itkLogImageFilterIUS2IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Function::Log< unsigned short, unsigned short > & GetFunctor();
     itk::Function::Log< unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Function::Log< unsigned short, unsigned short > const & functor);
   private:
     itkLogImageFilterIUS2IUS2_Superclass(itkLogImageFilterIUS2IUS2_Superclass const & arg0);
     void operator=(itkLogImageFilterIUS2IUS2_Superclass const & arg0);
   protected:
     itkLogImageFilterIUS2IUS2_Superclass();
     ~itkLogImageFilterIUS2IUS2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkLogImageFilterIUS2IUS2_Superclass_Pointer {
   public:
     itkLogImageFilterIUS2IUS2_Superclass_Pointer();
     itkLogImageFilterIUS2IUS2_Superclass_Pointer(itkLogImageFilterIUS2IUS2_Superclass_Pointer const & p);
     itkLogImageFilterIUS2IUS2_Superclass_Pointer(itkLogImageFilterIUS2IUS2_Superclass * p);
     ~itkLogImageFilterIUS2IUS2_Superclass_Pointer();
     itkLogImageFilterIUS2IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLogImageFilterIUS2IUS2_Superclass * GetPointer() const;
     bool operator<(itkLogImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkLogImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkLogImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkLogImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     itkLogImageFilterIUS2IUS2_Superclass_Pointer & operator=(itkLogImageFilterIUS2IUS2_Superclass_Pointer const & r);
     itkLogImageFilterIUS2IUS2_Superclass_Pointer & operator=(itkLogImageFilterIUS2IUS2_Superclass * r);
     itkLogImageFilterIUS2IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLogImageFilterIUS3IUS3_Pointer {
   public:
     itkLogImageFilterIUS3IUS3_Pointer();
     itkLogImageFilterIUS3IUS3_Pointer(itkLogImageFilterIUS3IUS3_Pointer const & p);
     itkLogImageFilterIUS3IUS3_Pointer(itkLogImageFilterIUS3IUS3 * p);
     ~itkLogImageFilterIUS3IUS3_Pointer();
     itkLogImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLogImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkLogImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkLogImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkLogImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkLogImageFilterIUS3IUS3_Pointer const & r) const;
     itkLogImageFilterIUS3IUS3_Pointer & operator=(itkLogImageFilterIUS3IUS3_Pointer const & r);
     itkLogImageFilterIUS3IUS3_Pointer & operator=(itkLogImageFilterIUS3IUS3 * r);
     itkLogImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLogImageFilterIUS3IUS3_Superclass : public itkInPlaceImageFilterIUS3IUS3 {
   public:
     static itkLogImageFilterIUS3IUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Function::Log< unsigned short, unsigned short > & GetFunctor();
     itk::Function::Log< unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Function::Log< unsigned short, unsigned short > const & functor);
   private:
     itkLogImageFilterIUS3IUS3_Superclass(itkLogImageFilterIUS3IUS3_Superclass const & arg0);
     void operator=(itkLogImageFilterIUS3IUS3_Superclass const & arg0);
   protected:
     itkLogImageFilterIUS3IUS3_Superclass();
     ~itkLogImageFilterIUS3IUS3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkLogImageFilterIUS3IUS3_Superclass_Pointer {
   public:
     itkLogImageFilterIUS3IUS3_Superclass_Pointer();
     itkLogImageFilterIUS3IUS3_Superclass_Pointer(itkLogImageFilterIUS3IUS3_Superclass_Pointer const & p);
     itkLogImageFilterIUS3IUS3_Superclass_Pointer(itkLogImageFilterIUS3IUS3_Superclass * p);
     ~itkLogImageFilterIUS3IUS3_Superclass_Pointer();
     itkLogImageFilterIUS3IUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLogImageFilterIUS3IUS3_Superclass * GetPointer() const;
     bool operator<(itkLogImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>(itkLogImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkLogImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkLogImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     itkLogImageFilterIUS3IUS3_Superclass_Pointer & operator=(itkLogImageFilterIUS3IUS3_Superclass_Pointer const & r);
     itkLogImageFilterIUS3IUS3_Superclass_Pointer & operator=(itkLogImageFilterIUS3IUS3_Superclass * r);
     itkLogImageFilterIUS3IUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLogImageFilterID2ID2 : public itkLogImageFilterID2ID2_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkLogImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkLogImageFilterID2ID2(itkLogImageFilterID2ID2 const & arg0);
     void operator=(itkLogImageFilterID2ID2 const & arg0);
   protected:
     itkLogImageFilterID2ID2();
     ~itkLogImageFilterID2ID2();
 };


 class itkLogImageFilterID3ID3 : public itkLogImageFilterID3ID3_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkLogImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkLogImageFilterID3ID3(itkLogImageFilterID3ID3 const & arg0);
     void operator=(itkLogImageFilterID3ID3 const & arg0);
   protected:
     itkLogImageFilterID3ID3();
     ~itkLogImageFilterID3ID3();
 };


 class itkLogImageFilterIF2IF2 : public itkLogImageFilterIF2IF2_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkLogImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkLogImageFilterIF2IF2(itkLogImageFilterIF2IF2 const & arg0);
     void operator=(itkLogImageFilterIF2IF2 const & arg0);
   protected:
     itkLogImageFilterIF2IF2();
     ~itkLogImageFilterIF2IF2();
 };


 class itkLogImageFilterIF3IF3 : public itkLogImageFilterIF3IF3_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkLogImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkLogImageFilterIF3IF3(itkLogImageFilterIF3IF3 const & arg0);
     void operator=(itkLogImageFilterIF3IF3 const & arg0);
   protected:
     itkLogImageFilterIF3IF3();
     ~itkLogImageFilterIF3IF3();
 };


 class itkLogImageFilterIUC2IUC2 : public itkLogImageFilterIUC2IUC2_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkLogImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkLogImageFilterIUC2IUC2(itkLogImageFilterIUC2IUC2 const & arg0);
     void operator=(itkLogImageFilterIUC2IUC2 const & arg0);
   protected:
     itkLogImageFilterIUC2IUC2();
     ~itkLogImageFilterIUC2IUC2();
 };


 class itkLogImageFilterIUC3IUC3 : public itkLogImageFilterIUC3IUC3_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkLogImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkLogImageFilterIUC3IUC3(itkLogImageFilterIUC3IUC3 const & arg0);
     void operator=(itkLogImageFilterIUC3IUC3 const & arg0);
   protected:
     itkLogImageFilterIUC3IUC3();
     ~itkLogImageFilterIUC3IUC3();
 };


 class itkLogImageFilterIUL2IUL2 : public itkLogImageFilterIUL2IUL2_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkLogImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkLogImageFilterIUL2IUL2(itkLogImageFilterIUL2IUL2 const & arg0);
     void operator=(itkLogImageFilterIUL2IUL2 const & arg0);
   protected:
     itkLogImageFilterIUL2IUL2();
     ~itkLogImageFilterIUL2IUL2();
 };


 class itkLogImageFilterIUL3IUL3 : public itkLogImageFilterIUL3IUL3_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkLogImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkLogImageFilterIUL3IUL3(itkLogImageFilterIUL3IUL3 const & arg0);
     void operator=(itkLogImageFilterIUL3IUL3 const & arg0);
   protected:
     itkLogImageFilterIUL3IUL3();
     ~itkLogImageFilterIUL3IUL3();
 };


 class itkLogImageFilterIUS2IUS2 : public itkLogImageFilterIUS2IUS2_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkLogImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkLogImageFilterIUS2IUS2(itkLogImageFilterIUS2IUS2 const & arg0);
     void operator=(itkLogImageFilterIUS2IUS2 const & arg0);
   protected:
     itkLogImageFilterIUS2IUS2();
     ~itkLogImageFilterIUS2IUS2();
 };


 class itkLogImageFilterIUS3IUS3 : public itkLogImageFilterIUS3IUS3_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkLogImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkLogImageFilterIUS3IUS3(itkLogImageFilterIUS3IUS3 const & arg0);
     void operator=(itkLogImageFilterIUS3IUS3 const & arg0);
   protected:
     itkLogImageFilterIUS3IUS3();
     ~itkLogImageFilterIUS3IUS3();
 };


