// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkTanImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkTanImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkTanImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkTanImageFilterJava
#endif
#ifdef SWIGLUA
%module itkTanImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkTanImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkTanImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkTanImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkTanImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkTanImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkTanImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkTanImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkTanImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkTanImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkTanImageFilterPython
#endif
#ifdef SWIGR
%module itkTanImageFilterR
#endif
#ifdef SWIGRUBY
%module itkTanImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkTanImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkTanImageFilterTcl
#endif
#ifdef SWIGXML
%module itkTanImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "UnaryPixelMath.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkInPlaceImageFilterA.i
%import wrap_ITKRegions.i


%include itk.i
%include wrap_itkTanImageFilter_ext.i


 class itkTanImageFilterID2ID2_Pointer {
   public:
     itkTanImageFilterID2ID2_Pointer();
     itkTanImageFilterID2ID2_Pointer(itkTanImageFilterID2ID2_Pointer const & p);
     itkTanImageFilterID2ID2_Pointer(itkTanImageFilterID2ID2 * p);
     ~itkTanImageFilterID2ID2_Pointer();
     itkTanImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkTanImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkTanImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkTanImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkTanImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkTanImageFilterID2ID2_Pointer const & r) const;
     itkTanImageFilterID2ID2_Pointer & operator=(itkTanImageFilterID2ID2_Pointer const & r);
     itkTanImageFilterID2ID2_Pointer & operator=(itkTanImageFilterID2ID2 * r);
     itkTanImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkTanImageFilterID2ID2_Superclass : public itkInPlaceImageFilterID2ID2 {
   public:
     static itkTanImageFilterID2ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Function::Tan< double, double > & GetFunctor();
     itk::Function::Tan< double, double > const & GetFunctor() const;
     void SetFunctor(itk::Function::Tan< double, double > const & functor);
   private:
     itkTanImageFilterID2ID2_Superclass(itkTanImageFilterID2ID2_Superclass const & arg0);
     void operator=(itkTanImageFilterID2ID2_Superclass const & arg0);
   protected:
     itkTanImageFilterID2ID2_Superclass();
     ~itkTanImageFilterID2ID2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkTanImageFilterID2ID2_Superclass_Pointer {
   public:
     itkTanImageFilterID2ID2_Superclass_Pointer();
     itkTanImageFilterID2ID2_Superclass_Pointer(itkTanImageFilterID2ID2_Superclass_Pointer const & p);
     itkTanImageFilterID2ID2_Superclass_Pointer(itkTanImageFilterID2ID2_Superclass * p);
     ~itkTanImageFilterID2ID2_Superclass_Pointer();
     itkTanImageFilterID2ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkTanImageFilterID2ID2_Superclass * GetPointer() const;
     bool operator<(itkTanImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator>(itkTanImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkTanImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkTanImageFilterID2ID2_Superclass_Pointer const & r) const;
     itkTanImageFilterID2ID2_Superclass_Pointer & operator=(itkTanImageFilterID2ID2_Superclass_Pointer const & r);
     itkTanImageFilterID2ID2_Superclass_Pointer & operator=(itkTanImageFilterID2ID2_Superclass * r);
     itkTanImageFilterID2ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkTanImageFilterID3ID3_Pointer {
   public:
     itkTanImageFilterID3ID3_Pointer();
     itkTanImageFilterID3ID3_Pointer(itkTanImageFilterID3ID3_Pointer const & p);
     itkTanImageFilterID3ID3_Pointer(itkTanImageFilterID3ID3 * p);
     ~itkTanImageFilterID3ID3_Pointer();
     itkTanImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkTanImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkTanImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkTanImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkTanImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkTanImageFilterID3ID3_Pointer const & r) const;
     itkTanImageFilterID3ID3_Pointer & operator=(itkTanImageFilterID3ID3_Pointer const & r);
     itkTanImageFilterID3ID3_Pointer & operator=(itkTanImageFilterID3ID3 * r);
     itkTanImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkTanImageFilterID3ID3_Superclass : public itkInPlaceImageFilterID3ID3 {
   public:
     static itkTanImageFilterID3ID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Function::Tan< double, double > & GetFunctor();
     itk::Function::Tan< double, double > const & GetFunctor() const;
     void SetFunctor(itk::Function::Tan< double, double > const & functor);
   private:
     itkTanImageFilterID3ID3_Superclass(itkTanImageFilterID3ID3_Superclass const & arg0);
     void operator=(itkTanImageFilterID3ID3_Superclass const & arg0);
   protected:
     itkTanImageFilterID3ID3_Superclass();
     ~itkTanImageFilterID3ID3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkTanImageFilterID3ID3_Superclass_Pointer {
   public:
     itkTanImageFilterID3ID3_Superclass_Pointer();
     itkTanImageFilterID3ID3_Superclass_Pointer(itkTanImageFilterID3ID3_Superclass_Pointer const & p);
     itkTanImageFilterID3ID3_Superclass_Pointer(itkTanImageFilterID3ID3_Superclass * p);
     ~itkTanImageFilterID3ID3_Superclass_Pointer();
     itkTanImageFilterID3ID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkTanImageFilterID3ID3_Superclass * GetPointer() const;
     bool operator<(itkTanImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator>(itkTanImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator<=(itkTanImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator>=(itkTanImageFilterID3ID3_Superclass_Pointer const & r) const;
     itkTanImageFilterID3ID3_Superclass_Pointer & operator=(itkTanImageFilterID3ID3_Superclass_Pointer const & r);
     itkTanImageFilterID3ID3_Superclass_Pointer & operator=(itkTanImageFilterID3ID3_Superclass * r);
     itkTanImageFilterID3ID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkTanImageFilterIF2IF2_Pointer {
   public:
     itkTanImageFilterIF2IF2_Pointer();
     itkTanImageFilterIF2IF2_Pointer(itkTanImageFilterIF2IF2_Pointer const & p);
     itkTanImageFilterIF2IF2_Pointer(itkTanImageFilterIF2IF2 * p);
     ~itkTanImageFilterIF2IF2_Pointer();
     itkTanImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkTanImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkTanImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkTanImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkTanImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkTanImageFilterIF2IF2_Pointer const & r) const;
     itkTanImageFilterIF2IF2_Pointer & operator=(itkTanImageFilterIF2IF2_Pointer const & r);
     itkTanImageFilterIF2IF2_Pointer & operator=(itkTanImageFilterIF2IF2 * r);
     itkTanImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkTanImageFilterIF2IF2_Superclass : public itkInPlaceImageFilterIF2IF2 {
   public:
     static itkTanImageFilterIF2IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Function::Tan< float, float > & GetFunctor();
     itk::Function::Tan< float, float > const & GetFunctor() const;
     void SetFunctor(itk::Function::Tan< float, float > const & functor);
   private:
     itkTanImageFilterIF2IF2_Superclass(itkTanImageFilterIF2IF2_Superclass const & arg0);
     void operator=(itkTanImageFilterIF2IF2_Superclass const & arg0);
   protected:
     itkTanImageFilterIF2IF2_Superclass();
     ~itkTanImageFilterIF2IF2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkTanImageFilterIF2IF2_Superclass_Pointer {
   public:
     itkTanImageFilterIF2IF2_Superclass_Pointer();
     itkTanImageFilterIF2IF2_Superclass_Pointer(itkTanImageFilterIF2IF2_Superclass_Pointer const & p);
     itkTanImageFilterIF2IF2_Superclass_Pointer(itkTanImageFilterIF2IF2_Superclass * p);
     ~itkTanImageFilterIF2IF2_Superclass_Pointer();
     itkTanImageFilterIF2IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkTanImageFilterIF2IF2_Superclass * GetPointer() const;
     bool operator<(itkTanImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator>(itkTanImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkTanImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkTanImageFilterIF2IF2_Superclass_Pointer const & r) const;
     itkTanImageFilterIF2IF2_Superclass_Pointer & operator=(itkTanImageFilterIF2IF2_Superclass_Pointer const & r);
     itkTanImageFilterIF2IF2_Superclass_Pointer & operator=(itkTanImageFilterIF2IF2_Superclass * r);
     itkTanImageFilterIF2IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkTanImageFilterIF3IF3_Pointer {
   public:
     itkTanImageFilterIF3IF3_Pointer();
     itkTanImageFilterIF3IF3_Pointer(itkTanImageFilterIF3IF3_Pointer const & p);
     itkTanImageFilterIF3IF3_Pointer(itkTanImageFilterIF3IF3 * p);
     ~itkTanImageFilterIF3IF3_Pointer();
     itkTanImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkTanImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkTanImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkTanImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkTanImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkTanImageFilterIF3IF3_Pointer const & r) const;
     itkTanImageFilterIF3IF3_Pointer & operator=(itkTanImageFilterIF3IF3_Pointer const & r);
     itkTanImageFilterIF3IF3_Pointer & operator=(itkTanImageFilterIF3IF3 * r);
     itkTanImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkTanImageFilterIF3IF3_Superclass : public itkInPlaceImageFilterIF3IF3 {
   public:
     static itkTanImageFilterIF3IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Function::Tan< float, float > & GetFunctor();
     itk::Function::Tan< float, float > const & GetFunctor() const;
     void SetFunctor(itk::Function::Tan< float, float > const & functor);
   private:
     itkTanImageFilterIF3IF3_Superclass(itkTanImageFilterIF3IF3_Superclass const & arg0);
     void operator=(itkTanImageFilterIF3IF3_Superclass const & arg0);
   protected:
     itkTanImageFilterIF3IF3_Superclass();
     ~itkTanImageFilterIF3IF3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkTanImageFilterIF3IF3_Superclass_Pointer {
   public:
     itkTanImageFilterIF3IF3_Superclass_Pointer();
     itkTanImageFilterIF3IF3_Superclass_Pointer(itkTanImageFilterIF3IF3_Superclass_Pointer const & p);
     itkTanImageFilterIF3IF3_Superclass_Pointer(itkTanImageFilterIF3IF3_Superclass * p);
     ~itkTanImageFilterIF3IF3_Superclass_Pointer();
     itkTanImageFilterIF3IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkTanImageFilterIF3IF3_Superclass * GetPointer() const;
     bool operator<(itkTanImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator>(itkTanImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkTanImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkTanImageFilterIF3IF3_Superclass_Pointer const & r) const;
     itkTanImageFilterIF3IF3_Superclass_Pointer & operator=(itkTanImageFilterIF3IF3_Superclass_Pointer const & r);
     itkTanImageFilterIF3IF3_Superclass_Pointer & operator=(itkTanImageFilterIF3IF3_Superclass * r);
     itkTanImageFilterIF3IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkTanImageFilterID2ID2 : public itkTanImageFilterID2ID2_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkTanImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkTanImageFilterID2ID2(itkTanImageFilterID2ID2 const & arg0);
     void operator=(itkTanImageFilterID2ID2 const & arg0);
   protected:
     itkTanImageFilterID2ID2();
     ~itkTanImageFilterID2ID2();
 };


 class itkTanImageFilterID3ID3 : public itkTanImageFilterID3ID3_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkTanImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkTanImageFilterID3ID3(itkTanImageFilterID3ID3 const & arg0);
     void operator=(itkTanImageFilterID3ID3 const & arg0);
   protected:
     itkTanImageFilterID3ID3();
     ~itkTanImageFilterID3ID3();
 };


 class itkTanImageFilterIF2IF2 : public itkTanImageFilterIF2IF2_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkTanImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkTanImageFilterIF2IF2(itkTanImageFilterIF2IF2 const & arg0);
     void operator=(itkTanImageFilterIF2IF2 const & arg0);
   protected:
     itkTanImageFilterIF2IF2();
     ~itkTanImageFilterIF2IF2();
 };


 class itkTanImageFilterIF3IF3 : public itkTanImageFilterIF3IF3_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkTanImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkTanImageFilterIF3IF3(itkTanImageFilterIF3IF3 const & arg0);
     void operator=(itkTanImageFilterIF3IF3 const & arg0);
   protected:
     itkTanImageFilterIF3IF3();
     ~itkTanImageFilterIF3IF3();
 };


