# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkBinaryMarkBranchingPointImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkBinaryMarkBranchingPointImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkBinaryMarkBranchingPointImageFilterPython
            return _itkBinaryMarkBranchingPointImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkBinaryMarkBranchingPointImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkBinaryMarkBranchingPointImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkBinaryMarkBranchingPointImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkImageToImageFilterAPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
def itkBinaryMarkBranchingPointImageFilterIUS3IUS3_New():
  return itkBinaryMarkBranchingPointImageFilterIUS3IUS3.New()

def itkBinaryMarkBranchingPointImageFilterIUS2IUS2_New():
  return itkBinaryMarkBranchingPointImageFilterIUS2IUS2.New()

def itkBinaryMarkBranchingPointImageFilterIUS3IUC3_New():
  return itkBinaryMarkBranchingPointImageFilterIUS3IUC3.New()

def itkBinaryMarkBranchingPointImageFilterIUS2IUC2_New():
  return itkBinaryMarkBranchingPointImageFilterIUS2IUC2.New()

def itkBinaryMarkBranchingPointImageFilterIUS3IUL3_New():
  return itkBinaryMarkBranchingPointImageFilterIUS3IUL3.New()

def itkBinaryMarkBranchingPointImageFilterIUS2IUL2_New():
  return itkBinaryMarkBranchingPointImageFilterIUS2IUL2.New()

def itkBinaryMarkBranchingPointImageFilterIUL3IUS3_New():
  return itkBinaryMarkBranchingPointImageFilterIUL3IUS3.New()

def itkBinaryMarkBranchingPointImageFilterIUL2IUS2_New():
  return itkBinaryMarkBranchingPointImageFilterIUL2IUS2.New()

def itkBinaryMarkBranchingPointImageFilterIUL3IUC3_New():
  return itkBinaryMarkBranchingPointImageFilterIUL3IUC3.New()

def itkBinaryMarkBranchingPointImageFilterIUL2IUC2_New():
  return itkBinaryMarkBranchingPointImageFilterIUL2IUC2.New()

def itkBinaryMarkBranchingPointImageFilterIUL3IUL3_New():
  return itkBinaryMarkBranchingPointImageFilterIUL3IUL3.New()

def itkBinaryMarkBranchingPointImageFilterIUL2IUL2_New():
  return itkBinaryMarkBranchingPointImageFilterIUL2IUL2.New()

def itkBinaryMarkBranchingPointImageFilterIUC3IUS3_New():
  return itkBinaryMarkBranchingPointImageFilterIUC3IUS3.New()

def itkBinaryMarkBranchingPointImageFilterIUC2IUS2_New():
  return itkBinaryMarkBranchingPointImageFilterIUC2IUS2.New()

def itkBinaryMarkBranchingPointImageFilterIUC3IUC3_New():
  return itkBinaryMarkBranchingPointImageFilterIUC3IUC3.New()

def itkBinaryMarkBranchingPointImageFilterIUC2IUC2_New():
  return itkBinaryMarkBranchingPointImageFilterIUC2IUC2.New()

def itkBinaryMarkBranchingPointImageFilterIUC3IUL3_New():
  return itkBinaryMarkBranchingPointImageFilterIUC3IUL3.New()

def itkBinaryMarkBranchingPointImageFilterIUC2IUL2_New():
  return itkBinaryMarkBranchingPointImageFilterIUC2IUL2.New()

class itkBinaryMarkBranchingPointImageFilterIUC2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """Proxy of C++ itkBinaryMarkBranchingPointImageFilterIUC2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUC2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetNumberOfLabels(self):
        """GetNumberOfLabels(self) -> unsigned char"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUC2_GetNumberOfLabels(self)

    def SetBackground(self, *args):
        """SetBackground(self, unsigned char _arg)"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUC2_SetBackground(self, *args)

    def GetBackground(self):
        """GetBackground(self) -> unsigned char"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUC2_GetBackground(self)

    def GetIndexes(self):
        """GetIndexes(self) -> std::vector<(itkIndex2,std::allocator<(itkIndex2)>)>"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUC2_GetIndexes(self)

    def GetIndex(self, *args):
        """GetIndex(self, unsigned int i) -> itkIndex2"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUC2_GetIndex(self, *args)

    __swig_destroy__ = _itkBinaryMarkBranchingPointImageFilterPython.delete_itkBinaryMarkBranchingPointImageFilterIUC2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUC2IUC2"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBinaryMarkBranchingPointImageFilterIUC2IUC2"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBinaryMarkBranchingPointImageFilterIUC2IUC2
        
        Create a new object of the class itkBinaryMarkBranchingPointImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBinaryMarkBranchingPointImageFilterIUC2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBinaryMarkBranchingPointImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryMarkBranchingPointImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryMarkBranchingPointImageFilterIUC2IUC2.GetNumberOfLabels = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUC2_GetNumberOfLabels,None,itkBinaryMarkBranchingPointImageFilterIUC2IUC2)
itkBinaryMarkBranchingPointImageFilterIUC2IUC2.SetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUC2_SetBackground,None,itkBinaryMarkBranchingPointImageFilterIUC2IUC2)
itkBinaryMarkBranchingPointImageFilterIUC2IUC2.GetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUC2_GetBackground,None,itkBinaryMarkBranchingPointImageFilterIUC2IUC2)
itkBinaryMarkBranchingPointImageFilterIUC2IUC2.GetIndexes = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUC2_GetIndexes,None,itkBinaryMarkBranchingPointImageFilterIUC2IUC2)
itkBinaryMarkBranchingPointImageFilterIUC2IUC2.GetIndex = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUC2_GetIndex,None,itkBinaryMarkBranchingPointImageFilterIUC2IUC2)
itkBinaryMarkBranchingPointImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUC2_GetPointer,None,itkBinaryMarkBranchingPointImageFilterIUC2IUC2)
itkBinaryMarkBranchingPointImageFilterIUC2IUC2_swigregister = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUC2_swigregister
itkBinaryMarkBranchingPointImageFilterIUC2IUC2_swigregister(itkBinaryMarkBranchingPointImageFilterIUC2IUC2)

def itkBinaryMarkBranchingPointImageFilterIUC2IUC2___New_orig__():
  """itkBinaryMarkBranchingPointImageFilterIUC2IUC2___New_orig__()"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUC2___New_orig__()

def itkBinaryMarkBranchingPointImageFilterIUC2IUC2_cast(*args):
  """itkBinaryMarkBranchingPointImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUC2IUC2"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUC2_cast(*args)

class itkBinaryMarkBranchingPointImageFilterIUC2IUL2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2):
    """Proxy of C++ itkBinaryMarkBranchingPointImageFilterIUC2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUL2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetNumberOfLabels(self):
        """GetNumberOfLabels(self) -> unsigned long"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUL2_GetNumberOfLabels(self)

    def SetBackground(self, *args):
        """SetBackground(self, unsigned long _arg)"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUL2_SetBackground(self, *args)

    def GetBackground(self):
        """GetBackground(self) -> unsigned long"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUL2_GetBackground(self)

    def GetIndexes(self):
        """GetIndexes(self) -> std::vector<(itkIndex2,std::allocator<(itkIndex2)>)>"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUL2_GetIndexes(self)

    def GetIndex(self, *args):
        """GetIndex(self, unsigned int i) -> itkIndex2"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUL2_GetIndex(self, *args)

    __swig_destroy__ = _itkBinaryMarkBranchingPointImageFilterPython.delete_itkBinaryMarkBranchingPointImageFilterIUC2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUC2IUL2"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBinaryMarkBranchingPointImageFilterIUC2IUL2"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBinaryMarkBranchingPointImageFilterIUC2IUL2
        
        Create a new object of the class itkBinaryMarkBranchingPointImageFilterIUC2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBinaryMarkBranchingPointImageFilterIUC2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBinaryMarkBranchingPointImageFilterIUC2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryMarkBranchingPointImageFilterIUC2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryMarkBranchingPointImageFilterIUC2IUL2.GetNumberOfLabels = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUL2_GetNumberOfLabels,None,itkBinaryMarkBranchingPointImageFilterIUC2IUL2)
itkBinaryMarkBranchingPointImageFilterIUC2IUL2.SetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUL2_SetBackground,None,itkBinaryMarkBranchingPointImageFilterIUC2IUL2)
itkBinaryMarkBranchingPointImageFilterIUC2IUL2.GetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUL2_GetBackground,None,itkBinaryMarkBranchingPointImageFilterIUC2IUL2)
itkBinaryMarkBranchingPointImageFilterIUC2IUL2.GetIndexes = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUL2_GetIndexes,None,itkBinaryMarkBranchingPointImageFilterIUC2IUL2)
itkBinaryMarkBranchingPointImageFilterIUC2IUL2.GetIndex = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUL2_GetIndex,None,itkBinaryMarkBranchingPointImageFilterIUC2IUL2)
itkBinaryMarkBranchingPointImageFilterIUC2IUL2.GetPointer = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUL2_GetPointer,None,itkBinaryMarkBranchingPointImageFilterIUC2IUL2)
itkBinaryMarkBranchingPointImageFilterIUC2IUL2_swigregister = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUL2_swigregister
itkBinaryMarkBranchingPointImageFilterIUC2IUL2_swigregister(itkBinaryMarkBranchingPointImageFilterIUC2IUL2)

def itkBinaryMarkBranchingPointImageFilterIUC2IUL2___New_orig__():
  """itkBinaryMarkBranchingPointImageFilterIUC2IUL2___New_orig__()"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUL2___New_orig__()

def itkBinaryMarkBranchingPointImageFilterIUC2IUL2_cast(*args):
  """itkBinaryMarkBranchingPointImageFilterIUC2IUL2_cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUC2IUL2"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUL2_cast(*args)

class itkBinaryMarkBranchingPointImageFilterIUC2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2):
    """Proxy of C++ itkBinaryMarkBranchingPointImageFilterIUC2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUS2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetNumberOfLabels(self):
        """GetNumberOfLabels(self) -> unsigned short"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUS2_GetNumberOfLabels(self)

    def SetBackground(self, *args):
        """SetBackground(self, unsigned short _arg)"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUS2_SetBackground(self, *args)

    def GetBackground(self):
        """GetBackground(self) -> unsigned short"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUS2_GetBackground(self)

    def GetIndexes(self):
        """GetIndexes(self) -> std::vector<(itkIndex2,std::allocator<(itkIndex2)>)>"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUS2_GetIndexes(self)

    def GetIndex(self, *args):
        """GetIndex(self, unsigned int i) -> itkIndex2"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUS2_GetIndex(self, *args)

    __swig_destroy__ = _itkBinaryMarkBranchingPointImageFilterPython.delete_itkBinaryMarkBranchingPointImageFilterIUC2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUC2IUS2"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBinaryMarkBranchingPointImageFilterIUC2IUS2"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBinaryMarkBranchingPointImageFilterIUC2IUS2
        
        Create a new object of the class itkBinaryMarkBranchingPointImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBinaryMarkBranchingPointImageFilterIUC2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBinaryMarkBranchingPointImageFilterIUC2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryMarkBranchingPointImageFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryMarkBranchingPointImageFilterIUC2IUS2.GetNumberOfLabels = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUS2_GetNumberOfLabels,None,itkBinaryMarkBranchingPointImageFilterIUC2IUS2)
itkBinaryMarkBranchingPointImageFilterIUC2IUS2.SetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUS2_SetBackground,None,itkBinaryMarkBranchingPointImageFilterIUC2IUS2)
itkBinaryMarkBranchingPointImageFilterIUC2IUS2.GetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUS2_GetBackground,None,itkBinaryMarkBranchingPointImageFilterIUC2IUS2)
itkBinaryMarkBranchingPointImageFilterIUC2IUS2.GetIndexes = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUS2_GetIndexes,None,itkBinaryMarkBranchingPointImageFilterIUC2IUS2)
itkBinaryMarkBranchingPointImageFilterIUC2IUS2.GetIndex = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUS2_GetIndex,None,itkBinaryMarkBranchingPointImageFilterIUC2IUS2)
itkBinaryMarkBranchingPointImageFilterIUC2IUS2.GetPointer = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUS2_GetPointer,None,itkBinaryMarkBranchingPointImageFilterIUC2IUS2)
itkBinaryMarkBranchingPointImageFilterIUC2IUS2_swigregister = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUS2_swigregister
itkBinaryMarkBranchingPointImageFilterIUC2IUS2_swigregister(itkBinaryMarkBranchingPointImageFilterIUC2IUS2)

def itkBinaryMarkBranchingPointImageFilterIUC2IUS2___New_orig__():
  """itkBinaryMarkBranchingPointImageFilterIUC2IUS2___New_orig__()"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUS2___New_orig__()

def itkBinaryMarkBranchingPointImageFilterIUC2IUS2_cast(*args):
  """itkBinaryMarkBranchingPointImageFilterIUC2IUS2_cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUC2IUS2"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC2IUS2_cast(*args)

class itkBinaryMarkBranchingPointImageFilterIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """Proxy of C++ itkBinaryMarkBranchingPointImageFilterIUC3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUC3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetNumberOfLabels(self):
        """GetNumberOfLabels(self) -> unsigned char"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUC3_GetNumberOfLabels(self)

    def SetBackground(self, *args):
        """SetBackground(self, unsigned char _arg)"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUC3_SetBackground(self, *args)

    def GetBackground(self):
        """GetBackground(self) -> unsigned char"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUC3_GetBackground(self)

    def GetIndexes(self):
        """GetIndexes(self) -> std::vector<(itkIndex3,std::allocator<(itkIndex3)>)>"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUC3_GetIndexes(self)

    def GetIndex(self, *args):
        """GetIndex(self, unsigned int i) -> itkIndex3"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUC3_GetIndex(self, *args)

    __swig_destroy__ = _itkBinaryMarkBranchingPointImageFilterPython.delete_itkBinaryMarkBranchingPointImageFilterIUC3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUC3IUC3"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBinaryMarkBranchingPointImageFilterIUC3IUC3"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBinaryMarkBranchingPointImageFilterIUC3IUC3
        
        Create a new object of the class itkBinaryMarkBranchingPointImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBinaryMarkBranchingPointImageFilterIUC3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBinaryMarkBranchingPointImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryMarkBranchingPointImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryMarkBranchingPointImageFilterIUC3IUC3.GetNumberOfLabels = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUC3_GetNumberOfLabels,None,itkBinaryMarkBranchingPointImageFilterIUC3IUC3)
itkBinaryMarkBranchingPointImageFilterIUC3IUC3.SetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUC3_SetBackground,None,itkBinaryMarkBranchingPointImageFilterIUC3IUC3)
itkBinaryMarkBranchingPointImageFilterIUC3IUC3.GetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUC3_GetBackground,None,itkBinaryMarkBranchingPointImageFilterIUC3IUC3)
itkBinaryMarkBranchingPointImageFilterIUC3IUC3.GetIndexes = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUC3_GetIndexes,None,itkBinaryMarkBranchingPointImageFilterIUC3IUC3)
itkBinaryMarkBranchingPointImageFilterIUC3IUC3.GetIndex = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUC3_GetIndex,None,itkBinaryMarkBranchingPointImageFilterIUC3IUC3)
itkBinaryMarkBranchingPointImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUC3_GetPointer,None,itkBinaryMarkBranchingPointImageFilterIUC3IUC3)
itkBinaryMarkBranchingPointImageFilterIUC3IUC3_swigregister = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUC3_swigregister
itkBinaryMarkBranchingPointImageFilterIUC3IUC3_swigregister(itkBinaryMarkBranchingPointImageFilterIUC3IUC3)

def itkBinaryMarkBranchingPointImageFilterIUC3IUC3___New_orig__():
  """itkBinaryMarkBranchingPointImageFilterIUC3IUC3___New_orig__()"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUC3___New_orig__()

def itkBinaryMarkBranchingPointImageFilterIUC3IUC3_cast(*args):
  """itkBinaryMarkBranchingPointImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUC3IUC3"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUC3_cast(*args)

class itkBinaryMarkBranchingPointImageFilterIUC3IUL3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3):
    """Proxy of C++ itkBinaryMarkBranchingPointImageFilterIUC3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUL3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetNumberOfLabels(self):
        """GetNumberOfLabels(self) -> unsigned long"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUL3_GetNumberOfLabels(self)

    def SetBackground(self, *args):
        """SetBackground(self, unsigned long _arg)"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUL3_SetBackground(self, *args)

    def GetBackground(self):
        """GetBackground(self) -> unsigned long"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUL3_GetBackground(self)

    def GetIndexes(self):
        """GetIndexes(self) -> std::vector<(itkIndex3,std::allocator<(itkIndex3)>)>"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUL3_GetIndexes(self)

    def GetIndex(self, *args):
        """GetIndex(self, unsigned int i) -> itkIndex3"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUL3_GetIndex(self, *args)

    __swig_destroy__ = _itkBinaryMarkBranchingPointImageFilterPython.delete_itkBinaryMarkBranchingPointImageFilterIUC3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUC3IUL3"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBinaryMarkBranchingPointImageFilterIUC3IUL3"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBinaryMarkBranchingPointImageFilterIUC3IUL3
        
        Create a new object of the class itkBinaryMarkBranchingPointImageFilterIUC3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBinaryMarkBranchingPointImageFilterIUC3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBinaryMarkBranchingPointImageFilterIUC3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryMarkBranchingPointImageFilterIUC3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryMarkBranchingPointImageFilterIUC3IUL3.GetNumberOfLabels = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUL3_GetNumberOfLabels,None,itkBinaryMarkBranchingPointImageFilterIUC3IUL3)
itkBinaryMarkBranchingPointImageFilterIUC3IUL3.SetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUL3_SetBackground,None,itkBinaryMarkBranchingPointImageFilterIUC3IUL3)
itkBinaryMarkBranchingPointImageFilterIUC3IUL3.GetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUL3_GetBackground,None,itkBinaryMarkBranchingPointImageFilterIUC3IUL3)
itkBinaryMarkBranchingPointImageFilterIUC3IUL3.GetIndexes = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUL3_GetIndexes,None,itkBinaryMarkBranchingPointImageFilterIUC3IUL3)
itkBinaryMarkBranchingPointImageFilterIUC3IUL3.GetIndex = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUL3_GetIndex,None,itkBinaryMarkBranchingPointImageFilterIUC3IUL3)
itkBinaryMarkBranchingPointImageFilterIUC3IUL3.GetPointer = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUL3_GetPointer,None,itkBinaryMarkBranchingPointImageFilterIUC3IUL3)
itkBinaryMarkBranchingPointImageFilterIUC3IUL3_swigregister = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUL3_swigregister
itkBinaryMarkBranchingPointImageFilterIUC3IUL3_swigregister(itkBinaryMarkBranchingPointImageFilterIUC3IUL3)

def itkBinaryMarkBranchingPointImageFilterIUC3IUL3___New_orig__():
  """itkBinaryMarkBranchingPointImageFilterIUC3IUL3___New_orig__()"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUL3___New_orig__()

def itkBinaryMarkBranchingPointImageFilterIUC3IUL3_cast(*args):
  """itkBinaryMarkBranchingPointImageFilterIUC3IUL3_cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUC3IUL3"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUL3_cast(*args)

class itkBinaryMarkBranchingPointImageFilterIUC3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3):
    """Proxy of C++ itkBinaryMarkBranchingPointImageFilterIUC3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUS3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetNumberOfLabels(self):
        """GetNumberOfLabels(self) -> unsigned short"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUS3_GetNumberOfLabels(self)

    def SetBackground(self, *args):
        """SetBackground(self, unsigned short _arg)"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUS3_SetBackground(self, *args)

    def GetBackground(self):
        """GetBackground(self) -> unsigned short"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUS3_GetBackground(self)

    def GetIndexes(self):
        """GetIndexes(self) -> std::vector<(itkIndex3,std::allocator<(itkIndex3)>)>"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUS3_GetIndexes(self)

    def GetIndex(self, *args):
        """GetIndex(self, unsigned int i) -> itkIndex3"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUS3_GetIndex(self, *args)

    __swig_destroy__ = _itkBinaryMarkBranchingPointImageFilterPython.delete_itkBinaryMarkBranchingPointImageFilterIUC3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUC3IUS3"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBinaryMarkBranchingPointImageFilterIUC3IUS3"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBinaryMarkBranchingPointImageFilterIUC3IUS3
        
        Create a new object of the class itkBinaryMarkBranchingPointImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBinaryMarkBranchingPointImageFilterIUC3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBinaryMarkBranchingPointImageFilterIUC3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryMarkBranchingPointImageFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryMarkBranchingPointImageFilterIUC3IUS3.GetNumberOfLabels = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUS3_GetNumberOfLabels,None,itkBinaryMarkBranchingPointImageFilterIUC3IUS3)
itkBinaryMarkBranchingPointImageFilterIUC3IUS3.SetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUS3_SetBackground,None,itkBinaryMarkBranchingPointImageFilterIUC3IUS3)
itkBinaryMarkBranchingPointImageFilterIUC3IUS3.GetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUS3_GetBackground,None,itkBinaryMarkBranchingPointImageFilterIUC3IUS3)
itkBinaryMarkBranchingPointImageFilterIUC3IUS3.GetIndexes = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUS3_GetIndexes,None,itkBinaryMarkBranchingPointImageFilterIUC3IUS3)
itkBinaryMarkBranchingPointImageFilterIUC3IUS3.GetIndex = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUS3_GetIndex,None,itkBinaryMarkBranchingPointImageFilterIUC3IUS3)
itkBinaryMarkBranchingPointImageFilterIUC3IUS3.GetPointer = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUS3_GetPointer,None,itkBinaryMarkBranchingPointImageFilterIUC3IUS3)
itkBinaryMarkBranchingPointImageFilterIUC3IUS3_swigregister = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUS3_swigregister
itkBinaryMarkBranchingPointImageFilterIUC3IUS3_swigregister(itkBinaryMarkBranchingPointImageFilterIUC3IUS3)

def itkBinaryMarkBranchingPointImageFilterIUC3IUS3___New_orig__():
  """itkBinaryMarkBranchingPointImageFilterIUC3IUS3___New_orig__()"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUS3___New_orig__()

def itkBinaryMarkBranchingPointImageFilterIUC3IUS3_cast(*args):
  """itkBinaryMarkBranchingPointImageFilterIUC3IUS3_cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUC3IUS3"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUC3IUS3_cast(*args)

class itkBinaryMarkBranchingPointImageFilterIUL2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2):
    """Proxy of C++ itkBinaryMarkBranchingPointImageFilterIUL2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUC2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetNumberOfLabels(self):
        """GetNumberOfLabels(self) -> unsigned char"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUC2_GetNumberOfLabels(self)

    def SetBackground(self, *args):
        """SetBackground(self, unsigned char _arg)"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUC2_SetBackground(self, *args)

    def GetBackground(self):
        """GetBackground(self) -> unsigned char"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUC2_GetBackground(self)

    def GetIndexes(self):
        """GetIndexes(self) -> std::vector<(itkIndex2,std::allocator<(itkIndex2)>)>"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUC2_GetIndexes(self)

    def GetIndex(self, *args):
        """GetIndex(self, unsigned int i) -> itkIndex2"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUC2_GetIndex(self, *args)

    __swig_destroy__ = _itkBinaryMarkBranchingPointImageFilterPython.delete_itkBinaryMarkBranchingPointImageFilterIUL2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUL2IUC2"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBinaryMarkBranchingPointImageFilterIUL2IUC2"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBinaryMarkBranchingPointImageFilterIUL2IUC2
        
        Create a new object of the class itkBinaryMarkBranchingPointImageFilterIUL2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBinaryMarkBranchingPointImageFilterIUL2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBinaryMarkBranchingPointImageFilterIUL2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryMarkBranchingPointImageFilterIUL2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryMarkBranchingPointImageFilterIUL2IUC2.GetNumberOfLabels = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUC2_GetNumberOfLabels,None,itkBinaryMarkBranchingPointImageFilterIUL2IUC2)
itkBinaryMarkBranchingPointImageFilterIUL2IUC2.SetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUC2_SetBackground,None,itkBinaryMarkBranchingPointImageFilterIUL2IUC2)
itkBinaryMarkBranchingPointImageFilterIUL2IUC2.GetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUC2_GetBackground,None,itkBinaryMarkBranchingPointImageFilterIUL2IUC2)
itkBinaryMarkBranchingPointImageFilterIUL2IUC2.GetIndexes = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUC2_GetIndexes,None,itkBinaryMarkBranchingPointImageFilterIUL2IUC2)
itkBinaryMarkBranchingPointImageFilterIUL2IUC2.GetIndex = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUC2_GetIndex,None,itkBinaryMarkBranchingPointImageFilterIUL2IUC2)
itkBinaryMarkBranchingPointImageFilterIUL2IUC2.GetPointer = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUC2_GetPointer,None,itkBinaryMarkBranchingPointImageFilterIUL2IUC2)
itkBinaryMarkBranchingPointImageFilterIUL2IUC2_swigregister = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUC2_swigregister
itkBinaryMarkBranchingPointImageFilterIUL2IUC2_swigregister(itkBinaryMarkBranchingPointImageFilterIUL2IUC2)

def itkBinaryMarkBranchingPointImageFilterIUL2IUC2___New_orig__():
  """itkBinaryMarkBranchingPointImageFilterIUL2IUC2___New_orig__()"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUC2___New_orig__()

def itkBinaryMarkBranchingPointImageFilterIUL2IUC2_cast(*args):
  """itkBinaryMarkBranchingPointImageFilterIUL2IUC2_cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUL2IUC2"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUC2_cast(*args)

class itkBinaryMarkBranchingPointImageFilterIUL2IUL2(itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2):
    """Proxy of C++ itkBinaryMarkBranchingPointImageFilterIUL2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUL2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetNumberOfLabels(self):
        """GetNumberOfLabels(self) -> unsigned long"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUL2_GetNumberOfLabels(self)

    def SetBackground(self, *args):
        """SetBackground(self, unsigned long _arg)"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUL2_SetBackground(self, *args)

    def GetBackground(self):
        """GetBackground(self) -> unsigned long"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUL2_GetBackground(self)

    def GetIndexes(self):
        """GetIndexes(self) -> std::vector<(itkIndex2,std::allocator<(itkIndex2)>)>"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUL2_GetIndexes(self)

    def GetIndex(self, *args):
        """GetIndex(self, unsigned int i) -> itkIndex2"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUL2_GetIndex(self, *args)

    __swig_destroy__ = _itkBinaryMarkBranchingPointImageFilterPython.delete_itkBinaryMarkBranchingPointImageFilterIUL2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUL2IUL2"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBinaryMarkBranchingPointImageFilterIUL2IUL2"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBinaryMarkBranchingPointImageFilterIUL2IUL2
        
        Create a new object of the class itkBinaryMarkBranchingPointImageFilterIUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBinaryMarkBranchingPointImageFilterIUL2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBinaryMarkBranchingPointImageFilterIUL2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryMarkBranchingPointImageFilterIUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryMarkBranchingPointImageFilterIUL2IUL2.GetNumberOfLabels = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUL2_GetNumberOfLabels,None,itkBinaryMarkBranchingPointImageFilterIUL2IUL2)
itkBinaryMarkBranchingPointImageFilterIUL2IUL2.SetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUL2_SetBackground,None,itkBinaryMarkBranchingPointImageFilterIUL2IUL2)
itkBinaryMarkBranchingPointImageFilterIUL2IUL2.GetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUL2_GetBackground,None,itkBinaryMarkBranchingPointImageFilterIUL2IUL2)
itkBinaryMarkBranchingPointImageFilterIUL2IUL2.GetIndexes = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUL2_GetIndexes,None,itkBinaryMarkBranchingPointImageFilterIUL2IUL2)
itkBinaryMarkBranchingPointImageFilterIUL2IUL2.GetIndex = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUL2_GetIndex,None,itkBinaryMarkBranchingPointImageFilterIUL2IUL2)
itkBinaryMarkBranchingPointImageFilterIUL2IUL2.GetPointer = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUL2_GetPointer,None,itkBinaryMarkBranchingPointImageFilterIUL2IUL2)
itkBinaryMarkBranchingPointImageFilterIUL2IUL2_swigregister = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUL2_swigregister
itkBinaryMarkBranchingPointImageFilterIUL2IUL2_swigregister(itkBinaryMarkBranchingPointImageFilterIUL2IUL2)

def itkBinaryMarkBranchingPointImageFilterIUL2IUL2___New_orig__():
  """itkBinaryMarkBranchingPointImageFilterIUL2IUL2___New_orig__()"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUL2___New_orig__()

def itkBinaryMarkBranchingPointImageFilterIUL2IUL2_cast(*args):
  """itkBinaryMarkBranchingPointImageFilterIUL2IUL2_cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUL2IUL2"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUL2_cast(*args)

class itkBinaryMarkBranchingPointImageFilterIUL2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2):
    """Proxy of C++ itkBinaryMarkBranchingPointImageFilterIUL2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUS2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetNumberOfLabels(self):
        """GetNumberOfLabels(self) -> unsigned short"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUS2_GetNumberOfLabels(self)

    def SetBackground(self, *args):
        """SetBackground(self, unsigned short _arg)"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUS2_SetBackground(self, *args)

    def GetBackground(self):
        """GetBackground(self) -> unsigned short"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUS2_GetBackground(self)

    def GetIndexes(self):
        """GetIndexes(self) -> std::vector<(itkIndex2,std::allocator<(itkIndex2)>)>"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUS2_GetIndexes(self)

    def GetIndex(self, *args):
        """GetIndex(self, unsigned int i) -> itkIndex2"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUS2_GetIndex(self, *args)

    __swig_destroy__ = _itkBinaryMarkBranchingPointImageFilterPython.delete_itkBinaryMarkBranchingPointImageFilterIUL2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUL2IUS2"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBinaryMarkBranchingPointImageFilterIUL2IUS2"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBinaryMarkBranchingPointImageFilterIUL2IUS2
        
        Create a new object of the class itkBinaryMarkBranchingPointImageFilterIUL2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBinaryMarkBranchingPointImageFilterIUL2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBinaryMarkBranchingPointImageFilterIUL2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryMarkBranchingPointImageFilterIUL2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryMarkBranchingPointImageFilterIUL2IUS2.GetNumberOfLabels = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUS2_GetNumberOfLabels,None,itkBinaryMarkBranchingPointImageFilterIUL2IUS2)
itkBinaryMarkBranchingPointImageFilterIUL2IUS2.SetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUS2_SetBackground,None,itkBinaryMarkBranchingPointImageFilterIUL2IUS2)
itkBinaryMarkBranchingPointImageFilterIUL2IUS2.GetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUS2_GetBackground,None,itkBinaryMarkBranchingPointImageFilterIUL2IUS2)
itkBinaryMarkBranchingPointImageFilterIUL2IUS2.GetIndexes = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUS2_GetIndexes,None,itkBinaryMarkBranchingPointImageFilterIUL2IUS2)
itkBinaryMarkBranchingPointImageFilterIUL2IUS2.GetIndex = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUS2_GetIndex,None,itkBinaryMarkBranchingPointImageFilterIUL2IUS2)
itkBinaryMarkBranchingPointImageFilterIUL2IUS2.GetPointer = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUS2_GetPointer,None,itkBinaryMarkBranchingPointImageFilterIUL2IUS2)
itkBinaryMarkBranchingPointImageFilterIUL2IUS2_swigregister = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUS2_swigregister
itkBinaryMarkBranchingPointImageFilterIUL2IUS2_swigregister(itkBinaryMarkBranchingPointImageFilterIUL2IUS2)

def itkBinaryMarkBranchingPointImageFilterIUL2IUS2___New_orig__():
  """itkBinaryMarkBranchingPointImageFilterIUL2IUS2___New_orig__()"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUS2___New_orig__()

def itkBinaryMarkBranchingPointImageFilterIUL2IUS2_cast(*args):
  """itkBinaryMarkBranchingPointImageFilterIUL2IUS2_cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUL2IUS2"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL2IUS2_cast(*args)

class itkBinaryMarkBranchingPointImageFilterIUL3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3):
    """Proxy of C++ itkBinaryMarkBranchingPointImageFilterIUL3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUC3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetNumberOfLabels(self):
        """GetNumberOfLabels(self) -> unsigned char"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUC3_GetNumberOfLabels(self)

    def SetBackground(self, *args):
        """SetBackground(self, unsigned char _arg)"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUC3_SetBackground(self, *args)

    def GetBackground(self):
        """GetBackground(self) -> unsigned char"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUC3_GetBackground(self)

    def GetIndexes(self):
        """GetIndexes(self) -> std::vector<(itkIndex3,std::allocator<(itkIndex3)>)>"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUC3_GetIndexes(self)

    def GetIndex(self, *args):
        """GetIndex(self, unsigned int i) -> itkIndex3"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUC3_GetIndex(self, *args)

    __swig_destroy__ = _itkBinaryMarkBranchingPointImageFilterPython.delete_itkBinaryMarkBranchingPointImageFilterIUL3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUL3IUC3"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBinaryMarkBranchingPointImageFilterIUL3IUC3"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBinaryMarkBranchingPointImageFilterIUL3IUC3
        
        Create a new object of the class itkBinaryMarkBranchingPointImageFilterIUL3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBinaryMarkBranchingPointImageFilterIUL3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBinaryMarkBranchingPointImageFilterIUL3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryMarkBranchingPointImageFilterIUL3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryMarkBranchingPointImageFilterIUL3IUC3.GetNumberOfLabels = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUC3_GetNumberOfLabels,None,itkBinaryMarkBranchingPointImageFilterIUL3IUC3)
itkBinaryMarkBranchingPointImageFilterIUL3IUC3.SetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUC3_SetBackground,None,itkBinaryMarkBranchingPointImageFilterIUL3IUC3)
itkBinaryMarkBranchingPointImageFilterIUL3IUC3.GetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUC3_GetBackground,None,itkBinaryMarkBranchingPointImageFilterIUL3IUC3)
itkBinaryMarkBranchingPointImageFilterIUL3IUC3.GetIndexes = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUC3_GetIndexes,None,itkBinaryMarkBranchingPointImageFilterIUL3IUC3)
itkBinaryMarkBranchingPointImageFilterIUL3IUC3.GetIndex = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUC3_GetIndex,None,itkBinaryMarkBranchingPointImageFilterIUL3IUC3)
itkBinaryMarkBranchingPointImageFilterIUL3IUC3.GetPointer = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUC3_GetPointer,None,itkBinaryMarkBranchingPointImageFilterIUL3IUC3)
itkBinaryMarkBranchingPointImageFilterIUL3IUC3_swigregister = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUC3_swigregister
itkBinaryMarkBranchingPointImageFilterIUL3IUC3_swigregister(itkBinaryMarkBranchingPointImageFilterIUL3IUC3)

def itkBinaryMarkBranchingPointImageFilterIUL3IUC3___New_orig__():
  """itkBinaryMarkBranchingPointImageFilterIUL3IUC3___New_orig__()"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUC3___New_orig__()

def itkBinaryMarkBranchingPointImageFilterIUL3IUC3_cast(*args):
  """itkBinaryMarkBranchingPointImageFilterIUL3IUC3_cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUL3IUC3"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUC3_cast(*args)

class itkBinaryMarkBranchingPointImageFilterIUL3IUL3(itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3):
    """Proxy of C++ itkBinaryMarkBranchingPointImageFilterIUL3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUL3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetNumberOfLabels(self):
        """GetNumberOfLabels(self) -> unsigned long"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUL3_GetNumberOfLabels(self)

    def SetBackground(self, *args):
        """SetBackground(self, unsigned long _arg)"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUL3_SetBackground(self, *args)

    def GetBackground(self):
        """GetBackground(self) -> unsigned long"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUL3_GetBackground(self)

    def GetIndexes(self):
        """GetIndexes(self) -> std::vector<(itkIndex3,std::allocator<(itkIndex3)>)>"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUL3_GetIndexes(self)

    def GetIndex(self, *args):
        """GetIndex(self, unsigned int i) -> itkIndex3"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUL3_GetIndex(self, *args)

    __swig_destroy__ = _itkBinaryMarkBranchingPointImageFilterPython.delete_itkBinaryMarkBranchingPointImageFilterIUL3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUL3IUL3"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBinaryMarkBranchingPointImageFilterIUL3IUL3"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBinaryMarkBranchingPointImageFilterIUL3IUL3
        
        Create a new object of the class itkBinaryMarkBranchingPointImageFilterIUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBinaryMarkBranchingPointImageFilterIUL3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBinaryMarkBranchingPointImageFilterIUL3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryMarkBranchingPointImageFilterIUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryMarkBranchingPointImageFilterIUL3IUL3.GetNumberOfLabels = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUL3_GetNumberOfLabels,None,itkBinaryMarkBranchingPointImageFilterIUL3IUL3)
itkBinaryMarkBranchingPointImageFilterIUL3IUL3.SetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUL3_SetBackground,None,itkBinaryMarkBranchingPointImageFilterIUL3IUL3)
itkBinaryMarkBranchingPointImageFilterIUL3IUL3.GetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUL3_GetBackground,None,itkBinaryMarkBranchingPointImageFilterIUL3IUL3)
itkBinaryMarkBranchingPointImageFilterIUL3IUL3.GetIndexes = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUL3_GetIndexes,None,itkBinaryMarkBranchingPointImageFilterIUL3IUL3)
itkBinaryMarkBranchingPointImageFilterIUL3IUL3.GetIndex = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUL3_GetIndex,None,itkBinaryMarkBranchingPointImageFilterIUL3IUL3)
itkBinaryMarkBranchingPointImageFilterIUL3IUL3.GetPointer = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUL3_GetPointer,None,itkBinaryMarkBranchingPointImageFilterIUL3IUL3)
itkBinaryMarkBranchingPointImageFilterIUL3IUL3_swigregister = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUL3_swigregister
itkBinaryMarkBranchingPointImageFilterIUL3IUL3_swigregister(itkBinaryMarkBranchingPointImageFilterIUL3IUL3)

def itkBinaryMarkBranchingPointImageFilterIUL3IUL3___New_orig__():
  """itkBinaryMarkBranchingPointImageFilterIUL3IUL3___New_orig__()"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUL3___New_orig__()

def itkBinaryMarkBranchingPointImageFilterIUL3IUL3_cast(*args):
  """itkBinaryMarkBranchingPointImageFilterIUL3IUL3_cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUL3IUL3"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUL3_cast(*args)

class itkBinaryMarkBranchingPointImageFilterIUL3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3):
    """Proxy of C++ itkBinaryMarkBranchingPointImageFilterIUL3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUS3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetNumberOfLabels(self):
        """GetNumberOfLabels(self) -> unsigned short"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUS3_GetNumberOfLabels(self)

    def SetBackground(self, *args):
        """SetBackground(self, unsigned short _arg)"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUS3_SetBackground(self, *args)

    def GetBackground(self):
        """GetBackground(self) -> unsigned short"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUS3_GetBackground(self)

    def GetIndexes(self):
        """GetIndexes(self) -> std::vector<(itkIndex3,std::allocator<(itkIndex3)>)>"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUS3_GetIndexes(self)

    def GetIndex(self, *args):
        """GetIndex(self, unsigned int i) -> itkIndex3"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUS3_GetIndex(self, *args)

    __swig_destroy__ = _itkBinaryMarkBranchingPointImageFilterPython.delete_itkBinaryMarkBranchingPointImageFilterIUL3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUL3IUS3"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBinaryMarkBranchingPointImageFilterIUL3IUS3"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBinaryMarkBranchingPointImageFilterIUL3IUS3
        
        Create a new object of the class itkBinaryMarkBranchingPointImageFilterIUL3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBinaryMarkBranchingPointImageFilterIUL3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBinaryMarkBranchingPointImageFilterIUL3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryMarkBranchingPointImageFilterIUL3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryMarkBranchingPointImageFilterIUL3IUS3.GetNumberOfLabels = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUS3_GetNumberOfLabels,None,itkBinaryMarkBranchingPointImageFilterIUL3IUS3)
itkBinaryMarkBranchingPointImageFilterIUL3IUS3.SetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUS3_SetBackground,None,itkBinaryMarkBranchingPointImageFilterIUL3IUS3)
itkBinaryMarkBranchingPointImageFilterIUL3IUS3.GetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUS3_GetBackground,None,itkBinaryMarkBranchingPointImageFilterIUL3IUS3)
itkBinaryMarkBranchingPointImageFilterIUL3IUS3.GetIndexes = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUS3_GetIndexes,None,itkBinaryMarkBranchingPointImageFilterIUL3IUS3)
itkBinaryMarkBranchingPointImageFilterIUL3IUS3.GetIndex = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUS3_GetIndex,None,itkBinaryMarkBranchingPointImageFilterIUL3IUS3)
itkBinaryMarkBranchingPointImageFilterIUL3IUS3.GetPointer = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUS3_GetPointer,None,itkBinaryMarkBranchingPointImageFilterIUL3IUS3)
itkBinaryMarkBranchingPointImageFilterIUL3IUS3_swigregister = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUS3_swigregister
itkBinaryMarkBranchingPointImageFilterIUL3IUS3_swigregister(itkBinaryMarkBranchingPointImageFilterIUL3IUS3)

def itkBinaryMarkBranchingPointImageFilterIUL3IUS3___New_orig__():
  """itkBinaryMarkBranchingPointImageFilterIUL3IUS3___New_orig__()"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUS3___New_orig__()

def itkBinaryMarkBranchingPointImageFilterIUL3IUS3_cast(*args):
  """itkBinaryMarkBranchingPointImageFilterIUL3IUS3_cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUL3IUS3"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUL3IUS3_cast(*args)

class itkBinaryMarkBranchingPointImageFilterIUS2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2):
    """Proxy of C++ itkBinaryMarkBranchingPointImageFilterIUS2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUC2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetNumberOfLabels(self):
        """GetNumberOfLabels(self) -> unsigned char"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUC2_GetNumberOfLabels(self)

    def SetBackground(self, *args):
        """SetBackground(self, unsigned char _arg)"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUC2_SetBackground(self, *args)

    def GetBackground(self):
        """GetBackground(self) -> unsigned char"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUC2_GetBackground(self)

    def GetIndexes(self):
        """GetIndexes(self) -> std::vector<(itkIndex2,std::allocator<(itkIndex2)>)>"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUC2_GetIndexes(self)

    def GetIndex(self, *args):
        """GetIndex(self, unsigned int i) -> itkIndex2"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUC2_GetIndex(self, *args)

    __swig_destroy__ = _itkBinaryMarkBranchingPointImageFilterPython.delete_itkBinaryMarkBranchingPointImageFilterIUS2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUS2IUC2"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBinaryMarkBranchingPointImageFilterIUS2IUC2"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBinaryMarkBranchingPointImageFilterIUS2IUC2
        
        Create a new object of the class itkBinaryMarkBranchingPointImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBinaryMarkBranchingPointImageFilterIUS2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBinaryMarkBranchingPointImageFilterIUS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryMarkBranchingPointImageFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryMarkBranchingPointImageFilterIUS2IUC2.GetNumberOfLabels = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUC2_GetNumberOfLabels,None,itkBinaryMarkBranchingPointImageFilterIUS2IUC2)
itkBinaryMarkBranchingPointImageFilterIUS2IUC2.SetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUC2_SetBackground,None,itkBinaryMarkBranchingPointImageFilterIUS2IUC2)
itkBinaryMarkBranchingPointImageFilterIUS2IUC2.GetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUC2_GetBackground,None,itkBinaryMarkBranchingPointImageFilterIUS2IUC2)
itkBinaryMarkBranchingPointImageFilterIUS2IUC2.GetIndexes = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUC2_GetIndexes,None,itkBinaryMarkBranchingPointImageFilterIUS2IUC2)
itkBinaryMarkBranchingPointImageFilterIUS2IUC2.GetIndex = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUC2_GetIndex,None,itkBinaryMarkBranchingPointImageFilterIUS2IUC2)
itkBinaryMarkBranchingPointImageFilterIUS2IUC2.GetPointer = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUC2_GetPointer,None,itkBinaryMarkBranchingPointImageFilterIUS2IUC2)
itkBinaryMarkBranchingPointImageFilterIUS2IUC2_swigregister = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUC2_swigregister
itkBinaryMarkBranchingPointImageFilterIUS2IUC2_swigregister(itkBinaryMarkBranchingPointImageFilterIUS2IUC2)

def itkBinaryMarkBranchingPointImageFilterIUS2IUC2___New_orig__():
  """itkBinaryMarkBranchingPointImageFilterIUS2IUC2___New_orig__()"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUC2___New_orig__()

def itkBinaryMarkBranchingPointImageFilterIUS2IUC2_cast(*args):
  """itkBinaryMarkBranchingPointImageFilterIUS2IUC2_cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUS2IUC2"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUC2_cast(*args)

class itkBinaryMarkBranchingPointImageFilterIUS2IUL2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2):
    """Proxy of C++ itkBinaryMarkBranchingPointImageFilterIUS2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUL2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetNumberOfLabels(self):
        """GetNumberOfLabels(self) -> unsigned long"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUL2_GetNumberOfLabels(self)

    def SetBackground(self, *args):
        """SetBackground(self, unsigned long _arg)"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUL2_SetBackground(self, *args)

    def GetBackground(self):
        """GetBackground(self) -> unsigned long"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUL2_GetBackground(self)

    def GetIndexes(self):
        """GetIndexes(self) -> std::vector<(itkIndex2,std::allocator<(itkIndex2)>)>"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUL2_GetIndexes(self)

    def GetIndex(self, *args):
        """GetIndex(self, unsigned int i) -> itkIndex2"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUL2_GetIndex(self, *args)

    __swig_destroy__ = _itkBinaryMarkBranchingPointImageFilterPython.delete_itkBinaryMarkBranchingPointImageFilterIUS2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUS2IUL2"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBinaryMarkBranchingPointImageFilterIUS2IUL2"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBinaryMarkBranchingPointImageFilterIUS2IUL2
        
        Create a new object of the class itkBinaryMarkBranchingPointImageFilterIUS2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBinaryMarkBranchingPointImageFilterIUS2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBinaryMarkBranchingPointImageFilterIUS2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryMarkBranchingPointImageFilterIUS2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryMarkBranchingPointImageFilterIUS2IUL2.GetNumberOfLabels = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUL2_GetNumberOfLabels,None,itkBinaryMarkBranchingPointImageFilterIUS2IUL2)
itkBinaryMarkBranchingPointImageFilterIUS2IUL2.SetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUL2_SetBackground,None,itkBinaryMarkBranchingPointImageFilterIUS2IUL2)
itkBinaryMarkBranchingPointImageFilterIUS2IUL2.GetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUL2_GetBackground,None,itkBinaryMarkBranchingPointImageFilterIUS2IUL2)
itkBinaryMarkBranchingPointImageFilterIUS2IUL2.GetIndexes = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUL2_GetIndexes,None,itkBinaryMarkBranchingPointImageFilterIUS2IUL2)
itkBinaryMarkBranchingPointImageFilterIUS2IUL2.GetIndex = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUL2_GetIndex,None,itkBinaryMarkBranchingPointImageFilterIUS2IUL2)
itkBinaryMarkBranchingPointImageFilterIUS2IUL2.GetPointer = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUL2_GetPointer,None,itkBinaryMarkBranchingPointImageFilterIUS2IUL2)
itkBinaryMarkBranchingPointImageFilterIUS2IUL2_swigregister = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUL2_swigregister
itkBinaryMarkBranchingPointImageFilterIUS2IUL2_swigregister(itkBinaryMarkBranchingPointImageFilterIUS2IUL2)

def itkBinaryMarkBranchingPointImageFilterIUS2IUL2___New_orig__():
  """itkBinaryMarkBranchingPointImageFilterIUS2IUL2___New_orig__()"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUL2___New_orig__()

def itkBinaryMarkBranchingPointImageFilterIUS2IUL2_cast(*args):
  """itkBinaryMarkBranchingPointImageFilterIUS2IUL2_cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUS2IUL2"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUL2_cast(*args)

class itkBinaryMarkBranchingPointImageFilterIUS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """Proxy of C++ itkBinaryMarkBranchingPointImageFilterIUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUS2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetNumberOfLabels(self):
        """GetNumberOfLabels(self) -> unsigned short"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUS2_GetNumberOfLabels(self)

    def SetBackground(self, *args):
        """SetBackground(self, unsigned short _arg)"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUS2_SetBackground(self, *args)

    def GetBackground(self):
        """GetBackground(self) -> unsigned short"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUS2_GetBackground(self)

    def GetIndexes(self):
        """GetIndexes(self) -> std::vector<(itkIndex2,std::allocator<(itkIndex2)>)>"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUS2_GetIndexes(self)

    def GetIndex(self, *args):
        """GetIndex(self, unsigned int i) -> itkIndex2"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUS2_GetIndex(self, *args)

    __swig_destroy__ = _itkBinaryMarkBranchingPointImageFilterPython.delete_itkBinaryMarkBranchingPointImageFilterIUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUS2IUS2"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBinaryMarkBranchingPointImageFilterIUS2IUS2"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBinaryMarkBranchingPointImageFilterIUS2IUS2
        
        Create a new object of the class itkBinaryMarkBranchingPointImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBinaryMarkBranchingPointImageFilterIUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBinaryMarkBranchingPointImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryMarkBranchingPointImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryMarkBranchingPointImageFilterIUS2IUS2.GetNumberOfLabels = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUS2_GetNumberOfLabels,None,itkBinaryMarkBranchingPointImageFilterIUS2IUS2)
itkBinaryMarkBranchingPointImageFilterIUS2IUS2.SetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUS2_SetBackground,None,itkBinaryMarkBranchingPointImageFilterIUS2IUS2)
itkBinaryMarkBranchingPointImageFilterIUS2IUS2.GetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUS2_GetBackground,None,itkBinaryMarkBranchingPointImageFilterIUS2IUS2)
itkBinaryMarkBranchingPointImageFilterIUS2IUS2.GetIndexes = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUS2_GetIndexes,None,itkBinaryMarkBranchingPointImageFilterIUS2IUS2)
itkBinaryMarkBranchingPointImageFilterIUS2IUS2.GetIndex = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUS2_GetIndex,None,itkBinaryMarkBranchingPointImageFilterIUS2IUS2)
itkBinaryMarkBranchingPointImageFilterIUS2IUS2.GetPointer = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUS2_GetPointer,None,itkBinaryMarkBranchingPointImageFilterIUS2IUS2)
itkBinaryMarkBranchingPointImageFilterIUS2IUS2_swigregister = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUS2_swigregister
itkBinaryMarkBranchingPointImageFilterIUS2IUS2_swigregister(itkBinaryMarkBranchingPointImageFilterIUS2IUS2)

def itkBinaryMarkBranchingPointImageFilterIUS2IUS2___New_orig__():
  """itkBinaryMarkBranchingPointImageFilterIUS2IUS2___New_orig__()"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUS2___New_orig__()

def itkBinaryMarkBranchingPointImageFilterIUS2IUS2_cast(*args):
  """itkBinaryMarkBranchingPointImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUS2IUS2"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS2IUS2_cast(*args)

class itkBinaryMarkBranchingPointImageFilterIUS3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3):
    """Proxy of C++ itkBinaryMarkBranchingPointImageFilterIUS3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUC3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetNumberOfLabels(self):
        """GetNumberOfLabels(self) -> unsigned char"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUC3_GetNumberOfLabels(self)

    def SetBackground(self, *args):
        """SetBackground(self, unsigned char _arg)"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUC3_SetBackground(self, *args)

    def GetBackground(self):
        """GetBackground(self) -> unsigned char"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUC3_GetBackground(self)

    def GetIndexes(self):
        """GetIndexes(self) -> std::vector<(itkIndex3,std::allocator<(itkIndex3)>)>"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUC3_GetIndexes(self)

    def GetIndex(self, *args):
        """GetIndex(self, unsigned int i) -> itkIndex3"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUC3_GetIndex(self, *args)

    __swig_destroy__ = _itkBinaryMarkBranchingPointImageFilterPython.delete_itkBinaryMarkBranchingPointImageFilterIUS3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUS3IUC3"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBinaryMarkBranchingPointImageFilterIUS3IUC3"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBinaryMarkBranchingPointImageFilterIUS3IUC3
        
        Create a new object of the class itkBinaryMarkBranchingPointImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBinaryMarkBranchingPointImageFilterIUS3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBinaryMarkBranchingPointImageFilterIUS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryMarkBranchingPointImageFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryMarkBranchingPointImageFilterIUS3IUC3.GetNumberOfLabels = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUC3_GetNumberOfLabels,None,itkBinaryMarkBranchingPointImageFilterIUS3IUC3)
itkBinaryMarkBranchingPointImageFilterIUS3IUC3.SetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUC3_SetBackground,None,itkBinaryMarkBranchingPointImageFilterIUS3IUC3)
itkBinaryMarkBranchingPointImageFilterIUS3IUC3.GetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUC3_GetBackground,None,itkBinaryMarkBranchingPointImageFilterIUS3IUC3)
itkBinaryMarkBranchingPointImageFilterIUS3IUC3.GetIndexes = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUC3_GetIndexes,None,itkBinaryMarkBranchingPointImageFilterIUS3IUC3)
itkBinaryMarkBranchingPointImageFilterIUS3IUC3.GetIndex = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUC3_GetIndex,None,itkBinaryMarkBranchingPointImageFilterIUS3IUC3)
itkBinaryMarkBranchingPointImageFilterIUS3IUC3.GetPointer = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUC3_GetPointer,None,itkBinaryMarkBranchingPointImageFilterIUS3IUC3)
itkBinaryMarkBranchingPointImageFilterIUS3IUC3_swigregister = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUC3_swigregister
itkBinaryMarkBranchingPointImageFilterIUS3IUC3_swigregister(itkBinaryMarkBranchingPointImageFilterIUS3IUC3)

def itkBinaryMarkBranchingPointImageFilterIUS3IUC3___New_orig__():
  """itkBinaryMarkBranchingPointImageFilterIUS3IUC3___New_orig__()"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUC3___New_orig__()

def itkBinaryMarkBranchingPointImageFilterIUS3IUC3_cast(*args):
  """itkBinaryMarkBranchingPointImageFilterIUS3IUC3_cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUS3IUC3"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUC3_cast(*args)

class itkBinaryMarkBranchingPointImageFilterIUS3IUL3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3):
    """Proxy of C++ itkBinaryMarkBranchingPointImageFilterIUS3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUL3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetNumberOfLabels(self):
        """GetNumberOfLabels(self) -> unsigned long"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUL3_GetNumberOfLabels(self)

    def SetBackground(self, *args):
        """SetBackground(self, unsigned long _arg)"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUL3_SetBackground(self, *args)

    def GetBackground(self):
        """GetBackground(self) -> unsigned long"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUL3_GetBackground(self)

    def GetIndexes(self):
        """GetIndexes(self) -> std::vector<(itkIndex3,std::allocator<(itkIndex3)>)>"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUL3_GetIndexes(self)

    def GetIndex(self, *args):
        """GetIndex(self, unsigned int i) -> itkIndex3"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUL3_GetIndex(self, *args)

    __swig_destroy__ = _itkBinaryMarkBranchingPointImageFilterPython.delete_itkBinaryMarkBranchingPointImageFilterIUS3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUS3IUL3"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBinaryMarkBranchingPointImageFilterIUS3IUL3"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBinaryMarkBranchingPointImageFilterIUS3IUL3
        
        Create a new object of the class itkBinaryMarkBranchingPointImageFilterIUS3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBinaryMarkBranchingPointImageFilterIUS3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBinaryMarkBranchingPointImageFilterIUS3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryMarkBranchingPointImageFilterIUS3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryMarkBranchingPointImageFilterIUS3IUL3.GetNumberOfLabels = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUL3_GetNumberOfLabels,None,itkBinaryMarkBranchingPointImageFilterIUS3IUL3)
itkBinaryMarkBranchingPointImageFilterIUS3IUL3.SetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUL3_SetBackground,None,itkBinaryMarkBranchingPointImageFilterIUS3IUL3)
itkBinaryMarkBranchingPointImageFilterIUS3IUL3.GetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUL3_GetBackground,None,itkBinaryMarkBranchingPointImageFilterIUS3IUL3)
itkBinaryMarkBranchingPointImageFilterIUS3IUL3.GetIndexes = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUL3_GetIndexes,None,itkBinaryMarkBranchingPointImageFilterIUS3IUL3)
itkBinaryMarkBranchingPointImageFilterIUS3IUL3.GetIndex = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUL3_GetIndex,None,itkBinaryMarkBranchingPointImageFilterIUS3IUL3)
itkBinaryMarkBranchingPointImageFilterIUS3IUL3.GetPointer = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUL3_GetPointer,None,itkBinaryMarkBranchingPointImageFilterIUS3IUL3)
itkBinaryMarkBranchingPointImageFilterIUS3IUL3_swigregister = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUL3_swigregister
itkBinaryMarkBranchingPointImageFilterIUS3IUL3_swigregister(itkBinaryMarkBranchingPointImageFilterIUS3IUL3)

def itkBinaryMarkBranchingPointImageFilterIUS3IUL3___New_orig__():
  """itkBinaryMarkBranchingPointImageFilterIUS3IUL3___New_orig__()"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUL3___New_orig__()

def itkBinaryMarkBranchingPointImageFilterIUS3IUL3_cast(*args):
  """itkBinaryMarkBranchingPointImageFilterIUS3IUL3_cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUS3IUL3"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUL3_cast(*args)

class itkBinaryMarkBranchingPointImageFilterIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """Proxy of C++ itkBinaryMarkBranchingPointImageFilterIUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUS3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetNumberOfLabels(self):
        """GetNumberOfLabels(self) -> unsigned short"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUS3_GetNumberOfLabels(self)

    def SetBackground(self, *args):
        """SetBackground(self, unsigned short _arg)"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUS3_SetBackground(self, *args)

    def GetBackground(self):
        """GetBackground(self) -> unsigned short"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUS3_GetBackground(self)

    def GetIndexes(self):
        """GetIndexes(self) -> std::vector<(itkIndex3,std::allocator<(itkIndex3)>)>"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUS3_GetIndexes(self)

    def GetIndex(self, *args):
        """GetIndex(self, unsigned int i) -> itkIndex3"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUS3_GetIndex(self, *args)

    __swig_destroy__ = _itkBinaryMarkBranchingPointImageFilterPython.delete_itkBinaryMarkBranchingPointImageFilterIUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUS3IUS3"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBinaryMarkBranchingPointImageFilterIUS3IUS3"""
        return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBinaryMarkBranchingPointImageFilterIUS3IUS3
        
        Create a new object of the class itkBinaryMarkBranchingPointImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBinaryMarkBranchingPointImageFilterIUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBinaryMarkBranchingPointImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryMarkBranchingPointImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryMarkBranchingPointImageFilterIUS3IUS3.GetNumberOfLabels = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUS3_GetNumberOfLabels,None,itkBinaryMarkBranchingPointImageFilterIUS3IUS3)
itkBinaryMarkBranchingPointImageFilterIUS3IUS3.SetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUS3_SetBackground,None,itkBinaryMarkBranchingPointImageFilterIUS3IUS3)
itkBinaryMarkBranchingPointImageFilterIUS3IUS3.GetBackground = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUS3_GetBackground,None,itkBinaryMarkBranchingPointImageFilterIUS3IUS3)
itkBinaryMarkBranchingPointImageFilterIUS3IUS3.GetIndexes = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUS3_GetIndexes,None,itkBinaryMarkBranchingPointImageFilterIUS3IUS3)
itkBinaryMarkBranchingPointImageFilterIUS3IUS3.GetIndex = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUS3_GetIndex,None,itkBinaryMarkBranchingPointImageFilterIUS3IUS3)
itkBinaryMarkBranchingPointImageFilterIUS3IUS3.GetPointer = new_instancemethod(_itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUS3_GetPointer,None,itkBinaryMarkBranchingPointImageFilterIUS3IUS3)
itkBinaryMarkBranchingPointImageFilterIUS3IUS3_swigregister = _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUS3_swigregister
itkBinaryMarkBranchingPointImageFilterIUS3IUS3_swigregister(itkBinaryMarkBranchingPointImageFilterIUS3IUS3)

def itkBinaryMarkBranchingPointImageFilterIUS3IUS3___New_orig__():
  """itkBinaryMarkBranchingPointImageFilterIUS3IUS3___New_orig__()"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUS3___New_orig__()

def itkBinaryMarkBranchingPointImageFilterIUS3IUS3_cast(*args):
  """itkBinaryMarkBranchingPointImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkBinaryMarkBranchingPointImageFilterIUS3IUS3"""
  return _itkBinaryMarkBranchingPointImageFilterPython.itkBinaryMarkBranchingPointImageFilterIUS3IUS3_cast(*args)



