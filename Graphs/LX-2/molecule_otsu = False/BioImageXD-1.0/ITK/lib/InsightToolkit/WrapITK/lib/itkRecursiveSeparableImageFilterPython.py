# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkRecursiveSeparableImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkRecursiveSeparableImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkRecursiveSeparableImageFilterPython
            return _itkRecursiveSeparableImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkRecursiveSeparableImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkRecursiveSeparableImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkRecursiveSeparableImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageToImageFilterAPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
def itkRecursiveSeparableImageFilterID3ID3_New():
  return itkRecursiveSeparableImageFilterID3ID3.New()

def itkRecursiveSeparableImageFilterID2ID2_New():
  return itkRecursiveSeparableImageFilterID2ID2.New()

def itkRecursiveSeparableImageFilterIF3IF3_New():
  return itkRecursiveSeparableImageFilterIF3IF3.New()

def itkRecursiveSeparableImageFilterIF2IF2_New():
  return itkRecursiveSeparableImageFilterIF2IF2.New()

def itkRecursiveSeparableImageFilterIUS3IUS3_New():
  return itkRecursiveSeparableImageFilterIUS3IUS3.New()

def itkRecursiveSeparableImageFilterIUS2IUS2_New():
  return itkRecursiveSeparableImageFilterIUS2IUS2.New()

def itkRecursiveSeparableImageFilterIUL3IUL3_New():
  return itkRecursiveSeparableImageFilterIUL3IUL3.New()

def itkRecursiveSeparableImageFilterIUL2IUL2_New():
  return itkRecursiveSeparableImageFilterIUL2IUL2.New()

def itkRecursiveSeparableImageFilterIUC3IUC3_New():
  return itkRecursiveSeparableImageFilterIUC3IUC3.New()

def itkRecursiveSeparableImageFilterIUC2IUC2_New():
  return itkRecursiveSeparableImageFilterIUC2IUC2.New()

class itkRecursiveSeparableImageFilterID2ID2(itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    """Proxy of C++ itkRecursiveSeparableImageFilterID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def GetDirection(self):
        """GetDirection(self) -> unsigned int"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterID2ID2_GetDirection(self)

    def SetDirection(self, *args):
        """SetDirection(self, unsigned int _arg)"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterID2ID2_SetDirection(self, *args)

    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageD2 arg0)"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterID2ID2_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageD2"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterID2ID2_GetInputImage(self)

    __swig_destroy__ = _itkRecursiveSeparableImageFilterPython.delete_itkRecursiveSeparableImageFilterID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkRecursiveSeparableImageFilterID2ID2"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkRecursiveSeparableImageFilterID2ID2"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkRecursiveSeparableImageFilterID2ID2
        
        Create a new object of the class itkRecursiveSeparableImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkRecursiveSeparableImageFilterID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkRecursiveSeparableImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRecursiveSeparableImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRecursiveSeparableImageFilterID2ID2.GetDirection = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterID2ID2_GetDirection,None,itkRecursiveSeparableImageFilterID2ID2)
itkRecursiveSeparableImageFilterID2ID2.SetDirection = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterID2ID2_SetDirection,None,itkRecursiveSeparableImageFilterID2ID2)
itkRecursiveSeparableImageFilterID2ID2.SetInputImage = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterID2ID2_SetInputImage,None,itkRecursiveSeparableImageFilterID2ID2)
itkRecursiveSeparableImageFilterID2ID2.GetInputImage = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterID2ID2_GetInputImage,None,itkRecursiveSeparableImageFilterID2ID2)
itkRecursiveSeparableImageFilterID2ID2.GetPointer = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterID2ID2_GetPointer,None,itkRecursiveSeparableImageFilterID2ID2)
itkRecursiveSeparableImageFilterID2ID2_swigregister = _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterID2ID2_swigregister
itkRecursiveSeparableImageFilterID2ID2_swigregister(itkRecursiveSeparableImageFilterID2ID2)

def itkRecursiveSeparableImageFilterID2ID2_cast(*args):
  """itkRecursiveSeparableImageFilterID2ID2_cast(itkLightObject obj) -> itkRecursiveSeparableImageFilterID2ID2"""
  return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterID2ID2_cast(*args)

class itkRecursiveSeparableImageFilterID3ID3(itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    """Proxy of C++ itkRecursiveSeparableImageFilterID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def GetDirection(self):
        """GetDirection(self) -> unsigned int"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterID3ID3_GetDirection(self)

    def SetDirection(self, *args):
        """SetDirection(self, unsigned int _arg)"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterID3ID3_SetDirection(self, *args)

    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageD3 arg0)"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterID3ID3_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageD3"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterID3ID3_GetInputImage(self)

    __swig_destroy__ = _itkRecursiveSeparableImageFilterPython.delete_itkRecursiveSeparableImageFilterID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkRecursiveSeparableImageFilterID3ID3"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkRecursiveSeparableImageFilterID3ID3"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkRecursiveSeparableImageFilterID3ID3
        
        Create a new object of the class itkRecursiveSeparableImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkRecursiveSeparableImageFilterID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkRecursiveSeparableImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRecursiveSeparableImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRecursiveSeparableImageFilterID3ID3.GetDirection = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterID3ID3_GetDirection,None,itkRecursiveSeparableImageFilterID3ID3)
itkRecursiveSeparableImageFilterID3ID3.SetDirection = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterID3ID3_SetDirection,None,itkRecursiveSeparableImageFilterID3ID3)
itkRecursiveSeparableImageFilterID3ID3.SetInputImage = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterID3ID3_SetInputImage,None,itkRecursiveSeparableImageFilterID3ID3)
itkRecursiveSeparableImageFilterID3ID3.GetInputImage = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterID3ID3_GetInputImage,None,itkRecursiveSeparableImageFilterID3ID3)
itkRecursiveSeparableImageFilterID3ID3.GetPointer = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterID3ID3_GetPointer,None,itkRecursiveSeparableImageFilterID3ID3)
itkRecursiveSeparableImageFilterID3ID3_swigregister = _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterID3ID3_swigregister
itkRecursiveSeparableImageFilterID3ID3_swigregister(itkRecursiveSeparableImageFilterID3ID3)

def itkRecursiveSeparableImageFilterID3ID3_cast(*args):
  """itkRecursiveSeparableImageFilterID3ID3_cast(itkLightObject obj) -> itkRecursiveSeparableImageFilterID3ID3"""
  return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterID3ID3_cast(*args)

class itkRecursiveSeparableImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkRecursiveSeparableImageFilterIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def GetDirection(self):
        """GetDirection(self) -> unsigned int"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIF2IF2_GetDirection(self)

    def SetDirection(self, *args):
        """SetDirection(self, unsigned int _arg)"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIF2IF2_SetDirection(self, *args)

    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageF2 arg0)"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIF2IF2_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageF2"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIF2IF2_GetInputImage(self)

    __swig_destroy__ = _itkRecursiveSeparableImageFilterPython.delete_itkRecursiveSeparableImageFilterIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkRecursiveSeparableImageFilterIF2IF2"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkRecursiveSeparableImageFilterIF2IF2"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkRecursiveSeparableImageFilterIF2IF2
        
        Create a new object of the class itkRecursiveSeparableImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkRecursiveSeparableImageFilterIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkRecursiveSeparableImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRecursiveSeparableImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRecursiveSeparableImageFilterIF2IF2.GetDirection = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIF2IF2_GetDirection,None,itkRecursiveSeparableImageFilterIF2IF2)
itkRecursiveSeparableImageFilterIF2IF2.SetDirection = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIF2IF2_SetDirection,None,itkRecursiveSeparableImageFilterIF2IF2)
itkRecursiveSeparableImageFilterIF2IF2.SetInputImage = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIF2IF2_SetInputImage,None,itkRecursiveSeparableImageFilterIF2IF2)
itkRecursiveSeparableImageFilterIF2IF2.GetInputImage = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIF2IF2_GetInputImage,None,itkRecursiveSeparableImageFilterIF2IF2)
itkRecursiveSeparableImageFilterIF2IF2.GetPointer = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIF2IF2_GetPointer,None,itkRecursiveSeparableImageFilterIF2IF2)
itkRecursiveSeparableImageFilterIF2IF2_swigregister = _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIF2IF2_swigregister
itkRecursiveSeparableImageFilterIF2IF2_swigregister(itkRecursiveSeparableImageFilterIF2IF2)

def itkRecursiveSeparableImageFilterIF2IF2_cast(*args):
  """itkRecursiveSeparableImageFilterIF2IF2_cast(itkLightObject obj) -> itkRecursiveSeparableImageFilterIF2IF2"""
  return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIF2IF2_cast(*args)

class itkRecursiveSeparableImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkRecursiveSeparableImageFilterIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def GetDirection(self):
        """GetDirection(self) -> unsigned int"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIF3IF3_GetDirection(self)

    def SetDirection(self, *args):
        """SetDirection(self, unsigned int _arg)"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIF3IF3_SetDirection(self, *args)

    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageF3 arg0)"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIF3IF3_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageF3"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIF3IF3_GetInputImage(self)

    __swig_destroy__ = _itkRecursiveSeparableImageFilterPython.delete_itkRecursiveSeparableImageFilterIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkRecursiveSeparableImageFilterIF3IF3"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkRecursiveSeparableImageFilterIF3IF3"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkRecursiveSeparableImageFilterIF3IF3
        
        Create a new object of the class itkRecursiveSeparableImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkRecursiveSeparableImageFilterIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkRecursiveSeparableImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRecursiveSeparableImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRecursiveSeparableImageFilterIF3IF3.GetDirection = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIF3IF3_GetDirection,None,itkRecursiveSeparableImageFilterIF3IF3)
itkRecursiveSeparableImageFilterIF3IF3.SetDirection = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIF3IF3_SetDirection,None,itkRecursiveSeparableImageFilterIF3IF3)
itkRecursiveSeparableImageFilterIF3IF3.SetInputImage = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIF3IF3_SetInputImage,None,itkRecursiveSeparableImageFilterIF3IF3)
itkRecursiveSeparableImageFilterIF3IF3.GetInputImage = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIF3IF3_GetInputImage,None,itkRecursiveSeparableImageFilterIF3IF3)
itkRecursiveSeparableImageFilterIF3IF3.GetPointer = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIF3IF3_GetPointer,None,itkRecursiveSeparableImageFilterIF3IF3)
itkRecursiveSeparableImageFilterIF3IF3_swigregister = _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIF3IF3_swigregister
itkRecursiveSeparableImageFilterIF3IF3_swigregister(itkRecursiveSeparableImageFilterIF3IF3)

def itkRecursiveSeparableImageFilterIF3IF3_cast(*args):
  """itkRecursiveSeparableImageFilterIF3IF3_cast(itkLightObject obj) -> itkRecursiveSeparableImageFilterIF3IF3"""
  return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIF3IF3_cast(*args)

class itkRecursiveSeparableImageFilterIUC2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """Proxy of C++ itkRecursiveSeparableImageFilterIUC2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def GetDirection(self):
        """GetDirection(self) -> unsigned int"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUC2IUC2_GetDirection(self)

    def SetDirection(self, *args):
        """SetDirection(self, unsigned int _arg)"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUC2IUC2_SetDirection(self, *args)

    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageUC2 arg0)"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUC2IUC2_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageUC2"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUC2IUC2_GetInputImage(self)

    __swig_destroy__ = _itkRecursiveSeparableImageFilterPython.delete_itkRecursiveSeparableImageFilterIUC2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkRecursiveSeparableImageFilterIUC2IUC2"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUC2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkRecursiveSeparableImageFilterIUC2IUC2"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUC2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkRecursiveSeparableImageFilterIUC2IUC2
        
        Create a new object of the class itkRecursiveSeparableImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkRecursiveSeparableImageFilterIUC2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkRecursiveSeparableImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRecursiveSeparableImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRecursiveSeparableImageFilterIUC2IUC2.GetDirection = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUC2IUC2_GetDirection,None,itkRecursiveSeparableImageFilterIUC2IUC2)
itkRecursiveSeparableImageFilterIUC2IUC2.SetDirection = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUC2IUC2_SetDirection,None,itkRecursiveSeparableImageFilterIUC2IUC2)
itkRecursiveSeparableImageFilterIUC2IUC2.SetInputImage = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUC2IUC2_SetInputImage,None,itkRecursiveSeparableImageFilterIUC2IUC2)
itkRecursiveSeparableImageFilterIUC2IUC2.GetInputImage = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUC2IUC2_GetInputImage,None,itkRecursiveSeparableImageFilterIUC2IUC2)
itkRecursiveSeparableImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUC2IUC2_GetPointer,None,itkRecursiveSeparableImageFilterIUC2IUC2)
itkRecursiveSeparableImageFilterIUC2IUC2_swigregister = _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUC2IUC2_swigregister
itkRecursiveSeparableImageFilterIUC2IUC2_swigregister(itkRecursiveSeparableImageFilterIUC2IUC2)

def itkRecursiveSeparableImageFilterIUC2IUC2_cast(*args):
  """itkRecursiveSeparableImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkRecursiveSeparableImageFilterIUC2IUC2"""
  return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUC2IUC2_cast(*args)

class itkRecursiveSeparableImageFilterIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """Proxy of C++ itkRecursiveSeparableImageFilterIUC3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def GetDirection(self):
        """GetDirection(self) -> unsigned int"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUC3IUC3_GetDirection(self)

    def SetDirection(self, *args):
        """SetDirection(self, unsigned int _arg)"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUC3IUC3_SetDirection(self, *args)

    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageUC3 arg0)"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUC3IUC3_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageUC3"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUC3IUC3_GetInputImage(self)

    __swig_destroy__ = _itkRecursiveSeparableImageFilterPython.delete_itkRecursiveSeparableImageFilterIUC3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkRecursiveSeparableImageFilterIUC3IUC3"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUC3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkRecursiveSeparableImageFilterIUC3IUC3"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUC3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkRecursiveSeparableImageFilterIUC3IUC3
        
        Create a new object of the class itkRecursiveSeparableImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkRecursiveSeparableImageFilterIUC3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkRecursiveSeparableImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRecursiveSeparableImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRecursiveSeparableImageFilterIUC3IUC3.GetDirection = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUC3IUC3_GetDirection,None,itkRecursiveSeparableImageFilterIUC3IUC3)
itkRecursiveSeparableImageFilterIUC3IUC3.SetDirection = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUC3IUC3_SetDirection,None,itkRecursiveSeparableImageFilterIUC3IUC3)
itkRecursiveSeparableImageFilterIUC3IUC3.SetInputImage = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUC3IUC3_SetInputImage,None,itkRecursiveSeparableImageFilterIUC3IUC3)
itkRecursiveSeparableImageFilterIUC3IUC3.GetInputImage = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUC3IUC3_GetInputImage,None,itkRecursiveSeparableImageFilterIUC3IUC3)
itkRecursiveSeparableImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUC3IUC3_GetPointer,None,itkRecursiveSeparableImageFilterIUC3IUC3)
itkRecursiveSeparableImageFilterIUC3IUC3_swigregister = _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUC3IUC3_swigregister
itkRecursiveSeparableImageFilterIUC3IUC3_swigregister(itkRecursiveSeparableImageFilterIUC3IUC3)

def itkRecursiveSeparableImageFilterIUC3IUC3_cast(*args):
  """itkRecursiveSeparableImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkRecursiveSeparableImageFilterIUC3IUC3"""
  return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUC3IUC3_cast(*args)

class itkRecursiveSeparableImageFilterIUL2IUL2(itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2):
    """Proxy of C++ itkRecursiveSeparableImageFilterIUL2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def GetDirection(self):
        """GetDirection(self) -> unsigned int"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUL2IUL2_GetDirection(self)

    def SetDirection(self, *args):
        """SetDirection(self, unsigned int _arg)"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUL2IUL2_SetDirection(self, *args)

    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageUL2 arg0)"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUL2IUL2_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageUL2"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUL2IUL2_GetInputImage(self)

    __swig_destroy__ = _itkRecursiveSeparableImageFilterPython.delete_itkRecursiveSeparableImageFilterIUL2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkRecursiveSeparableImageFilterIUL2IUL2"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUL2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkRecursiveSeparableImageFilterIUL2IUL2"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUL2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkRecursiveSeparableImageFilterIUL2IUL2
        
        Create a new object of the class itkRecursiveSeparableImageFilterIUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkRecursiveSeparableImageFilterIUL2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkRecursiveSeparableImageFilterIUL2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRecursiveSeparableImageFilterIUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRecursiveSeparableImageFilterIUL2IUL2.GetDirection = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUL2IUL2_GetDirection,None,itkRecursiveSeparableImageFilterIUL2IUL2)
itkRecursiveSeparableImageFilterIUL2IUL2.SetDirection = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUL2IUL2_SetDirection,None,itkRecursiveSeparableImageFilterIUL2IUL2)
itkRecursiveSeparableImageFilterIUL2IUL2.SetInputImage = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUL2IUL2_SetInputImage,None,itkRecursiveSeparableImageFilterIUL2IUL2)
itkRecursiveSeparableImageFilterIUL2IUL2.GetInputImage = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUL2IUL2_GetInputImage,None,itkRecursiveSeparableImageFilterIUL2IUL2)
itkRecursiveSeparableImageFilterIUL2IUL2.GetPointer = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUL2IUL2_GetPointer,None,itkRecursiveSeparableImageFilterIUL2IUL2)
itkRecursiveSeparableImageFilterIUL2IUL2_swigregister = _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUL2IUL2_swigregister
itkRecursiveSeparableImageFilterIUL2IUL2_swigregister(itkRecursiveSeparableImageFilterIUL2IUL2)

def itkRecursiveSeparableImageFilterIUL2IUL2_cast(*args):
  """itkRecursiveSeparableImageFilterIUL2IUL2_cast(itkLightObject obj) -> itkRecursiveSeparableImageFilterIUL2IUL2"""
  return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUL2IUL2_cast(*args)

class itkRecursiveSeparableImageFilterIUL3IUL3(itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3):
    """Proxy of C++ itkRecursiveSeparableImageFilterIUL3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def GetDirection(self):
        """GetDirection(self) -> unsigned int"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUL3IUL3_GetDirection(self)

    def SetDirection(self, *args):
        """SetDirection(self, unsigned int _arg)"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUL3IUL3_SetDirection(self, *args)

    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageUL3 arg0)"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUL3IUL3_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageUL3"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUL3IUL3_GetInputImage(self)

    __swig_destroy__ = _itkRecursiveSeparableImageFilterPython.delete_itkRecursiveSeparableImageFilterIUL3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkRecursiveSeparableImageFilterIUL3IUL3"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUL3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkRecursiveSeparableImageFilterIUL3IUL3"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUL3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkRecursiveSeparableImageFilterIUL3IUL3
        
        Create a new object of the class itkRecursiveSeparableImageFilterIUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkRecursiveSeparableImageFilterIUL3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkRecursiveSeparableImageFilterIUL3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRecursiveSeparableImageFilterIUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRecursiveSeparableImageFilterIUL3IUL3.GetDirection = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUL3IUL3_GetDirection,None,itkRecursiveSeparableImageFilterIUL3IUL3)
itkRecursiveSeparableImageFilterIUL3IUL3.SetDirection = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUL3IUL3_SetDirection,None,itkRecursiveSeparableImageFilterIUL3IUL3)
itkRecursiveSeparableImageFilterIUL3IUL3.SetInputImage = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUL3IUL3_SetInputImage,None,itkRecursiveSeparableImageFilterIUL3IUL3)
itkRecursiveSeparableImageFilterIUL3IUL3.GetInputImage = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUL3IUL3_GetInputImage,None,itkRecursiveSeparableImageFilterIUL3IUL3)
itkRecursiveSeparableImageFilterIUL3IUL3.GetPointer = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUL3IUL3_GetPointer,None,itkRecursiveSeparableImageFilterIUL3IUL3)
itkRecursiveSeparableImageFilterIUL3IUL3_swigregister = _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUL3IUL3_swigregister
itkRecursiveSeparableImageFilterIUL3IUL3_swigregister(itkRecursiveSeparableImageFilterIUL3IUL3)

def itkRecursiveSeparableImageFilterIUL3IUL3_cast(*args):
  """itkRecursiveSeparableImageFilterIUL3IUL3_cast(itkLightObject obj) -> itkRecursiveSeparableImageFilterIUL3IUL3"""
  return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUL3IUL3_cast(*args)

class itkRecursiveSeparableImageFilterIUS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """Proxy of C++ itkRecursiveSeparableImageFilterIUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def GetDirection(self):
        """GetDirection(self) -> unsigned int"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUS2IUS2_GetDirection(self)

    def SetDirection(self, *args):
        """SetDirection(self, unsigned int _arg)"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUS2IUS2_SetDirection(self, *args)

    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageUS2 arg0)"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUS2IUS2_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageUS2"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUS2IUS2_GetInputImage(self)

    __swig_destroy__ = _itkRecursiveSeparableImageFilterPython.delete_itkRecursiveSeparableImageFilterIUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkRecursiveSeparableImageFilterIUS2IUS2"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkRecursiveSeparableImageFilterIUS2IUS2"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkRecursiveSeparableImageFilterIUS2IUS2
        
        Create a new object of the class itkRecursiveSeparableImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkRecursiveSeparableImageFilterIUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkRecursiveSeparableImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRecursiveSeparableImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRecursiveSeparableImageFilterIUS2IUS2.GetDirection = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUS2IUS2_GetDirection,None,itkRecursiveSeparableImageFilterIUS2IUS2)
itkRecursiveSeparableImageFilterIUS2IUS2.SetDirection = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUS2IUS2_SetDirection,None,itkRecursiveSeparableImageFilterIUS2IUS2)
itkRecursiveSeparableImageFilterIUS2IUS2.SetInputImage = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUS2IUS2_SetInputImage,None,itkRecursiveSeparableImageFilterIUS2IUS2)
itkRecursiveSeparableImageFilterIUS2IUS2.GetInputImage = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUS2IUS2_GetInputImage,None,itkRecursiveSeparableImageFilterIUS2IUS2)
itkRecursiveSeparableImageFilterIUS2IUS2.GetPointer = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUS2IUS2_GetPointer,None,itkRecursiveSeparableImageFilterIUS2IUS2)
itkRecursiveSeparableImageFilterIUS2IUS2_swigregister = _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUS2IUS2_swigregister
itkRecursiveSeparableImageFilterIUS2IUS2_swigregister(itkRecursiveSeparableImageFilterIUS2IUS2)

def itkRecursiveSeparableImageFilterIUS2IUS2_cast(*args):
  """itkRecursiveSeparableImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkRecursiveSeparableImageFilterIUS2IUS2"""
  return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUS2IUS2_cast(*args)

class itkRecursiveSeparableImageFilterIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """Proxy of C++ itkRecursiveSeparableImageFilterIUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def GetDirection(self):
        """GetDirection(self) -> unsigned int"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUS3IUS3_GetDirection(self)

    def SetDirection(self, *args):
        """SetDirection(self, unsigned int _arg)"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUS3IUS3_SetDirection(self, *args)

    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageUS3 arg0)"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUS3IUS3_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageUS3"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUS3IUS3_GetInputImage(self)

    __swig_destroy__ = _itkRecursiveSeparableImageFilterPython.delete_itkRecursiveSeparableImageFilterIUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkRecursiveSeparableImageFilterIUS3IUS3"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkRecursiveSeparableImageFilterIUS3IUS3"""
        return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkRecursiveSeparableImageFilterIUS3IUS3
        
        Create a new object of the class itkRecursiveSeparableImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkRecursiveSeparableImageFilterIUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkRecursiveSeparableImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRecursiveSeparableImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRecursiveSeparableImageFilterIUS3IUS3.GetDirection = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUS3IUS3_GetDirection,None,itkRecursiveSeparableImageFilterIUS3IUS3)
itkRecursiveSeparableImageFilterIUS3IUS3.SetDirection = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUS3IUS3_SetDirection,None,itkRecursiveSeparableImageFilterIUS3IUS3)
itkRecursiveSeparableImageFilterIUS3IUS3.SetInputImage = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUS3IUS3_SetInputImage,None,itkRecursiveSeparableImageFilterIUS3IUS3)
itkRecursiveSeparableImageFilterIUS3IUS3.GetInputImage = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUS3IUS3_GetInputImage,None,itkRecursiveSeparableImageFilterIUS3IUS3)
itkRecursiveSeparableImageFilterIUS3IUS3.GetPointer = new_instancemethod(_itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUS3IUS3_GetPointer,None,itkRecursiveSeparableImageFilterIUS3IUS3)
itkRecursiveSeparableImageFilterIUS3IUS3_swigregister = _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUS3IUS3_swigregister
itkRecursiveSeparableImageFilterIUS3IUS3_swigregister(itkRecursiveSeparableImageFilterIUS3IUS3)

def itkRecursiveSeparableImageFilterIUS3IUS3_cast(*args):
  """itkRecursiveSeparableImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkRecursiveSeparableImageFilterIUS3IUS3"""
  return _itkRecursiveSeparableImageFilterPython.itkRecursiveSeparableImageFilterIUS3IUS3_cast(*args)



