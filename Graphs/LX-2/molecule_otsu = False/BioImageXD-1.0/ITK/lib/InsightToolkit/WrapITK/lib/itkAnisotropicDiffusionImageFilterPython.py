# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkAnisotropicDiffusionImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkAnisotropicDiffusionImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkAnisotropicDiffusionImageFilterPython
            return _itkAnisotropicDiffusionImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkAnisotropicDiffusionImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkAnisotropicDiffusionImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkAnisotropicDiffusionImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkDenseFiniteDifferenceImageFilterPython
import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkFiniteDifferenceImageFilterPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterAPython
import itkFiniteDifferenceFunctionPython
def itkAnisotropicDiffusionImageFilterICVF33ICVF33_New():
  return itkAnisotropicDiffusionImageFilterICVF33ICVF33.New()

def itkAnisotropicDiffusionImageFilterICVF22ICVF22_New():
  return itkAnisotropicDiffusionImageFilterICVF22ICVF22.New()

def itkAnisotropicDiffusionImageFilterIVF33IVF33_New():
  return itkAnisotropicDiffusionImageFilterIVF33IVF33.New()

def itkAnisotropicDiffusionImageFilterIVF22IVF22_New():
  return itkAnisotropicDiffusionImageFilterIVF22IVF22.New()

def itkAnisotropicDiffusionImageFilterID3ID3_New():
  return itkAnisotropicDiffusionImageFilterID3ID3.New()

def itkAnisotropicDiffusionImageFilterID2ID2_New():
  return itkAnisotropicDiffusionImageFilterID2ID2.New()

def itkAnisotropicDiffusionImageFilterIF3IF3_New():
  return itkAnisotropicDiffusionImageFilterIF3IF3.New()

def itkAnisotropicDiffusionImageFilterIF2IF2_New():
  return itkAnisotropicDiffusionImageFilterIF2IF2.New()

class itkAnisotropicDiffusionImageFilterICVF22ICVF22(itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterICVF22ICVF22):
    """Proxy of C++ itkAnisotropicDiffusionImageFilterICVF22ICVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_ImageDimension
    def SetTimeStep(self, *args):
        """SetTimeStep(self, double _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_SetTimeStep(self, *args)

    def GetTimeStep(self):
        """GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_GetTimeStep(self)

    def SetConductanceParameter(self, *args):
        """SetConductanceParameter(self, double _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_SetConductanceParameter(self, *args)

    def GetConductanceParameter(self):
        """GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, *args):
        """SetConductanceScalingUpdateInterval(self, unsigned int _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_SetConductanceScalingUpdateInterval(self, *args)

    def GetConductanceScalingUpdateInterval(self):
        """GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, *args):
        """SetConductanceScalingParameter(self, double _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_SetConductanceScalingParameter(self, *args)

    def GetConductanceScalingParameter(self):
        """GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, *args):
        """SetFixedAverageGradientMagnitude(self, double a)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_SetFixedAverageGradientMagnitude(self, *args)

    def GetFixedAverageGradientMagnitude(self):
        """GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_GetFixedAverageGradientMagnitude(self)

    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterICVF22ICVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkAnisotropicDiffusionImageFilterICVF22ICVF22"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAnisotropicDiffusionImageFilterICVF22ICVF22"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAnisotropicDiffusionImageFilterICVF22ICVF22
        
        Create a new object of the class itkAnisotropicDiffusionImageFilterICVF22ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAnisotropicDiffusionImageFilterICVF22ICVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAnisotropicDiffusionImageFilterICVF22ICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAnisotropicDiffusionImageFilterICVF22ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAnisotropicDiffusionImageFilterICVF22ICVF22.SetTimeStep = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_SetTimeStep,None,itkAnisotropicDiffusionImageFilterICVF22ICVF22)
itkAnisotropicDiffusionImageFilterICVF22ICVF22.GetTimeStep = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_GetTimeStep,None,itkAnisotropicDiffusionImageFilterICVF22ICVF22)
itkAnisotropicDiffusionImageFilterICVF22ICVF22.SetConductanceParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_SetConductanceParameter,None,itkAnisotropicDiffusionImageFilterICVF22ICVF22)
itkAnisotropicDiffusionImageFilterICVF22ICVF22.GetConductanceParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_GetConductanceParameter,None,itkAnisotropicDiffusionImageFilterICVF22ICVF22)
itkAnisotropicDiffusionImageFilterICVF22ICVF22.SetConductanceScalingUpdateInterval = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_SetConductanceScalingUpdateInterval,None,itkAnisotropicDiffusionImageFilterICVF22ICVF22)
itkAnisotropicDiffusionImageFilterICVF22ICVF22.GetConductanceScalingUpdateInterval = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_GetConductanceScalingUpdateInterval,None,itkAnisotropicDiffusionImageFilterICVF22ICVF22)
itkAnisotropicDiffusionImageFilterICVF22ICVF22.SetConductanceScalingParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_SetConductanceScalingParameter,None,itkAnisotropicDiffusionImageFilterICVF22ICVF22)
itkAnisotropicDiffusionImageFilterICVF22ICVF22.GetConductanceScalingParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_GetConductanceScalingParameter,None,itkAnisotropicDiffusionImageFilterICVF22ICVF22)
itkAnisotropicDiffusionImageFilterICVF22ICVF22.SetFixedAverageGradientMagnitude = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_SetFixedAverageGradientMagnitude,None,itkAnisotropicDiffusionImageFilterICVF22ICVF22)
itkAnisotropicDiffusionImageFilterICVF22ICVF22.GetFixedAverageGradientMagnitude = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_GetFixedAverageGradientMagnitude,None,itkAnisotropicDiffusionImageFilterICVF22ICVF22)
itkAnisotropicDiffusionImageFilterICVF22ICVF22.GetPointer = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_GetPointer,None,itkAnisotropicDiffusionImageFilterICVF22ICVF22)
itkAnisotropicDiffusionImageFilterICVF22ICVF22_swigregister = _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_swigregister
itkAnisotropicDiffusionImageFilterICVF22ICVF22_swigregister(itkAnisotropicDiffusionImageFilterICVF22ICVF22)

def itkAnisotropicDiffusionImageFilterICVF22ICVF22_cast(*args):
  """itkAnisotropicDiffusionImageFilterICVF22ICVF22_cast(itkLightObject obj) -> itkAnisotropicDiffusionImageFilterICVF22ICVF22"""
  return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_cast(*args)

class itkAnisotropicDiffusionImageFilterICVF33ICVF33(itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterICVF33ICVF33):
    """Proxy of C++ itkAnisotropicDiffusionImageFilterICVF33ICVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_ImageDimension
    def SetTimeStep(self, *args):
        """SetTimeStep(self, double _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_SetTimeStep(self, *args)

    def GetTimeStep(self):
        """GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_GetTimeStep(self)

    def SetConductanceParameter(self, *args):
        """SetConductanceParameter(self, double _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_SetConductanceParameter(self, *args)

    def GetConductanceParameter(self):
        """GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, *args):
        """SetConductanceScalingUpdateInterval(self, unsigned int _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_SetConductanceScalingUpdateInterval(self, *args)

    def GetConductanceScalingUpdateInterval(self):
        """GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, *args):
        """SetConductanceScalingParameter(self, double _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_SetConductanceScalingParameter(self, *args)

    def GetConductanceScalingParameter(self):
        """GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, *args):
        """SetFixedAverageGradientMagnitude(self, double a)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_SetFixedAverageGradientMagnitude(self, *args)

    def GetFixedAverageGradientMagnitude(self):
        """GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_GetFixedAverageGradientMagnitude(self)

    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterICVF33ICVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkAnisotropicDiffusionImageFilterICVF33ICVF33"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAnisotropicDiffusionImageFilterICVF33ICVF33"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAnisotropicDiffusionImageFilterICVF33ICVF33
        
        Create a new object of the class itkAnisotropicDiffusionImageFilterICVF33ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAnisotropicDiffusionImageFilterICVF33ICVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAnisotropicDiffusionImageFilterICVF33ICVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAnisotropicDiffusionImageFilterICVF33ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAnisotropicDiffusionImageFilterICVF33ICVF33.SetTimeStep = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_SetTimeStep,None,itkAnisotropicDiffusionImageFilterICVF33ICVF33)
itkAnisotropicDiffusionImageFilterICVF33ICVF33.GetTimeStep = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_GetTimeStep,None,itkAnisotropicDiffusionImageFilterICVF33ICVF33)
itkAnisotropicDiffusionImageFilterICVF33ICVF33.SetConductanceParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_SetConductanceParameter,None,itkAnisotropicDiffusionImageFilterICVF33ICVF33)
itkAnisotropicDiffusionImageFilterICVF33ICVF33.GetConductanceParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_GetConductanceParameter,None,itkAnisotropicDiffusionImageFilterICVF33ICVF33)
itkAnisotropicDiffusionImageFilterICVF33ICVF33.SetConductanceScalingUpdateInterval = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_SetConductanceScalingUpdateInterval,None,itkAnisotropicDiffusionImageFilterICVF33ICVF33)
itkAnisotropicDiffusionImageFilterICVF33ICVF33.GetConductanceScalingUpdateInterval = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_GetConductanceScalingUpdateInterval,None,itkAnisotropicDiffusionImageFilterICVF33ICVF33)
itkAnisotropicDiffusionImageFilterICVF33ICVF33.SetConductanceScalingParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_SetConductanceScalingParameter,None,itkAnisotropicDiffusionImageFilterICVF33ICVF33)
itkAnisotropicDiffusionImageFilterICVF33ICVF33.GetConductanceScalingParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_GetConductanceScalingParameter,None,itkAnisotropicDiffusionImageFilterICVF33ICVF33)
itkAnisotropicDiffusionImageFilterICVF33ICVF33.SetFixedAverageGradientMagnitude = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_SetFixedAverageGradientMagnitude,None,itkAnisotropicDiffusionImageFilterICVF33ICVF33)
itkAnisotropicDiffusionImageFilterICVF33ICVF33.GetFixedAverageGradientMagnitude = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_GetFixedAverageGradientMagnitude,None,itkAnisotropicDiffusionImageFilterICVF33ICVF33)
itkAnisotropicDiffusionImageFilterICVF33ICVF33.GetPointer = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_GetPointer,None,itkAnisotropicDiffusionImageFilterICVF33ICVF33)
itkAnisotropicDiffusionImageFilterICVF33ICVF33_swigregister = _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_swigregister
itkAnisotropicDiffusionImageFilterICVF33ICVF33_swigregister(itkAnisotropicDiffusionImageFilterICVF33ICVF33)

def itkAnisotropicDiffusionImageFilterICVF33ICVF33_cast(*args):
  """itkAnisotropicDiffusionImageFilterICVF33ICVF33_cast(itkLightObject obj) -> itkAnisotropicDiffusionImageFilterICVF33ICVF33"""
  return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_cast(*args)

class itkAnisotropicDiffusionImageFilterID2ID2(itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterID2ID2):
    """Proxy of C++ itkAnisotropicDiffusionImageFilterID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_ImageDimension
    def SetTimeStep(self, *args):
        """SetTimeStep(self, double _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_SetTimeStep(self, *args)

    def GetTimeStep(self):
        """GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_GetTimeStep(self)

    def SetConductanceParameter(self, *args):
        """SetConductanceParameter(self, double _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_SetConductanceParameter(self, *args)

    def GetConductanceParameter(self):
        """GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, *args):
        """SetConductanceScalingUpdateInterval(self, unsigned int _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_SetConductanceScalingUpdateInterval(self, *args)

    def GetConductanceScalingUpdateInterval(self):
        """GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, *args):
        """SetConductanceScalingParameter(self, double _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_SetConductanceScalingParameter(self, *args)

    def GetConductanceScalingParameter(self):
        """GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, *args):
        """SetFixedAverageGradientMagnitude(self, double a)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_SetFixedAverageGradientMagnitude(self, *args)

    def GetFixedAverageGradientMagnitude(self):
        """GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_GetFixedAverageGradientMagnitude(self)

    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkAnisotropicDiffusionImageFilterID2ID2"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAnisotropicDiffusionImageFilterID2ID2"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAnisotropicDiffusionImageFilterID2ID2
        
        Create a new object of the class itkAnisotropicDiffusionImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAnisotropicDiffusionImageFilterID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAnisotropicDiffusionImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAnisotropicDiffusionImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAnisotropicDiffusionImageFilterID2ID2.SetTimeStep = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_SetTimeStep,None,itkAnisotropicDiffusionImageFilterID2ID2)
itkAnisotropicDiffusionImageFilterID2ID2.GetTimeStep = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_GetTimeStep,None,itkAnisotropicDiffusionImageFilterID2ID2)
itkAnisotropicDiffusionImageFilterID2ID2.SetConductanceParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_SetConductanceParameter,None,itkAnisotropicDiffusionImageFilterID2ID2)
itkAnisotropicDiffusionImageFilterID2ID2.GetConductanceParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_GetConductanceParameter,None,itkAnisotropicDiffusionImageFilterID2ID2)
itkAnisotropicDiffusionImageFilterID2ID2.SetConductanceScalingUpdateInterval = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_SetConductanceScalingUpdateInterval,None,itkAnisotropicDiffusionImageFilterID2ID2)
itkAnisotropicDiffusionImageFilterID2ID2.GetConductanceScalingUpdateInterval = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_GetConductanceScalingUpdateInterval,None,itkAnisotropicDiffusionImageFilterID2ID2)
itkAnisotropicDiffusionImageFilterID2ID2.SetConductanceScalingParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_SetConductanceScalingParameter,None,itkAnisotropicDiffusionImageFilterID2ID2)
itkAnisotropicDiffusionImageFilterID2ID2.GetConductanceScalingParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_GetConductanceScalingParameter,None,itkAnisotropicDiffusionImageFilterID2ID2)
itkAnisotropicDiffusionImageFilterID2ID2.SetFixedAverageGradientMagnitude = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_SetFixedAverageGradientMagnitude,None,itkAnisotropicDiffusionImageFilterID2ID2)
itkAnisotropicDiffusionImageFilterID2ID2.GetFixedAverageGradientMagnitude = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_GetFixedAverageGradientMagnitude,None,itkAnisotropicDiffusionImageFilterID2ID2)
itkAnisotropicDiffusionImageFilterID2ID2.GetPointer = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_GetPointer,None,itkAnisotropicDiffusionImageFilterID2ID2)
itkAnisotropicDiffusionImageFilterID2ID2_swigregister = _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_swigregister
itkAnisotropicDiffusionImageFilterID2ID2_swigregister(itkAnisotropicDiffusionImageFilterID2ID2)

def itkAnisotropicDiffusionImageFilterID2ID2_cast(*args):
  """itkAnisotropicDiffusionImageFilterID2ID2_cast(itkLightObject obj) -> itkAnisotropicDiffusionImageFilterID2ID2"""
  return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_cast(*args)

class itkAnisotropicDiffusionImageFilterID3ID3(itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterID3ID3):
    """Proxy of C++ itkAnisotropicDiffusionImageFilterID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_ImageDimension
    def SetTimeStep(self, *args):
        """SetTimeStep(self, double _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_SetTimeStep(self, *args)

    def GetTimeStep(self):
        """GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_GetTimeStep(self)

    def SetConductanceParameter(self, *args):
        """SetConductanceParameter(self, double _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_SetConductanceParameter(self, *args)

    def GetConductanceParameter(self):
        """GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, *args):
        """SetConductanceScalingUpdateInterval(self, unsigned int _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_SetConductanceScalingUpdateInterval(self, *args)

    def GetConductanceScalingUpdateInterval(self):
        """GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, *args):
        """SetConductanceScalingParameter(self, double _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_SetConductanceScalingParameter(self, *args)

    def GetConductanceScalingParameter(self):
        """GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, *args):
        """SetFixedAverageGradientMagnitude(self, double a)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_SetFixedAverageGradientMagnitude(self, *args)

    def GetFixedAverageGradientMagnitude(self):
        """GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_GetFixedAverageGradientMagnitude(self)

    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkAnisotropicDiffusionImageFilterID3ID3"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAnisotropicDiffusionImageFilterID3ID3"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAnisotropicDiffusionImageFilterID3ID3
        
        Create a new object of the class itkAnisotropicDiffusionImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAnisotropicDiffusionImageFilterID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAnisotropicDiffusionImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAnisotropicDiffusionImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAnisotropicDiffusionImageFilterID3ID3.SetTimeStep = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_SetTimeStep,None,itkAnisotropicDiffusionImageFilterID3ID3)
itkAnisotropicDiffusionImageFilterID3ID3.GetTimeStep = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_GetTimeStep,None,itkAnisotropicDiffusionImageFilterID3ID3)
itkAnisotropicDiffusionImageFilterID3ID3.SetConductanceParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_SetConductanceParameter,None,itkAnisotropicDiffusionImageFilterID3ID3)
itkAnisotropicDiffusionImageFilterID3ID3.GetConductanceParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_GetConductanceParameter,None,itkAnisotropicDiffusionImageFilterID3ID3)
itkAnisotropicDiffusionImageFilterID3ID3.SetConductanceScalingUpdateInterval = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_SetConductanceScalingUpdateInterval,None,itkAnisotropicDiffusionImageFilterID3ID3)
itkAnisotropicDiffusionImageFilterID3ID3.GetConductanceScalingUpdateInterval = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_GetConductanceScalingUpdateInterval,None,itkAnisotropicDiffusionImageFilterID3ID3)
itkAnisotropicDiffusionImageFilterID3ID3.SetConductanceScalingParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_SetConductanceScalingParameter,None,itkAnisotropicDiffusionImageFilterID3ID3)
itkAnisotropicDiffusionImageFilterID3ID3.GetConductanceScalingParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_GetConductanceScalingParameter,None,itkAnisotropicDiffusionImageFilterID3ID3)
itkAnisotropicDiffusionImageFilterID3ID3.SetFixedAverageGradientMagnitude = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_SetFixedAverageGradientMagnitude,None,itkAnisotropicDiffusionImageFilterID3ID3)
itkAnisotropicDiffusionImageFilterID3ID3.GetFixedAverageGradientMagnitude = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_GetFixedAverageGradientMagnitude,None,itkAnisotropicDiffusionImageFilterID3ID3)
itkAnisotropicDiffusionImageFilterID3ID3.GetPointer = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_GetPointer,None,itkAnisotropicDiffusionImageFilterID3ID3)
itkAnisotropicDiffusionImageFilterID3ID3_swigregister = _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_swigregister
itkAnisotropicDiffusionImageFilterID3ID3_swigregister(itkAnisotropicDiffusionImageFilterID3ID3)

def itkAnisotropicDiffusionImageFilterID3ID3_cast(*args):
  """itkAnisotropicDiffusionImageFilterID3ID3_cast(itkLightObject obj) -> itkAnisotropicDiffusionImageFilterID3ID3"""
  return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_cast(*args)

class itkAnisotropicDiffusionImageFilterIF2IF2(itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterIF2IF2):
    """Proxy of C++ itkAnisotropicDiffusionImageFilterIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_ImageDimension
    def SetTimeStep(self, *args):
        """SetTimeStep(self, double _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_SetTimeStep(self, *args)

    def GetTimeStep(self):
        """GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_GetTimeStep(self)

    def SetConductanceParameter(self, *args):
        """SetConductanceParameter(self, double _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_SetConductanceParameter(self, *args)

    def GetConductanceParameter(self):
        """GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, *args):
        """SetConductanceScalingUpdateInterval(self, unsigned int _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_SetConductanceScalingUpdateInterval(self, *args)

    def GetConductanceScalingUpdateInterval(self):
        """GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, *args):
        """SetConductanceScalingParameter(self, double _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_SetConductanceScalingParameter(self, *args)

    def GetConductanceScalingParameter(self):
        """GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, *args):
        """SetFixedAverageGradientMagnitude(self, double a)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_SetFixedAverageGradientMagnitude(self, *args)

    def GetFixedAverageGradientMagnitude(self):
        """GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_GetFixedAverageGradientMagnitude(self)

    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkAnisotropicDiffusionImageFilterIF2IF2"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAnisotropicDiffusionImageFilterIF2IF2"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAnisotropicDiffusionImageFilterIF2IF2
        
        Create a new object of the class itkAnisotropicDiffusionImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAnisotropicDiffusionImageFilterIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAnisotropicDiffusionImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAnisotropicDiffusionImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAnisotropicDiffusionImageFilterIF2IF2.SetTimeStep = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_SetTimeStep,None,itkAnisotropicDiffusionImageFilterIF2IF2)
itkAnisotropicDiffusionImageFilterIF2IF2.GetTimeStep = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_GetTimeStep,None,itkAnisotropicDiffusionImageFilterIF2IF2)
itkAnisotropicDiffusionImageFilterIF2IF2.SetConductanceParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_SetConductanceParameter,None,itkAnisotropicDiffusionImageFilterIF2IF2)
itkAnisotropicDiffusionImageFilterIF2IF2.GetConductanceParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_GetConductanceParameter,None,itkAnisotropicDiffusionImageFilterIF2IF2)
itkAnisotropicDiffusionImageFilterIF2IF2.SetConductanceScalingUpdateInterval = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_SetConductanceScalingUpdateInterval,None,itkAnisotropicDiffusionImageFilterIF2IF2)
itkAnisotropicDiffusionImageFilterIF2IF2.GetConductanceScalingUpdateInterval = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_GetConductanceScalingUpdateInterval,None,itkAnisotropicDiffusionImageFilterIF2IF2)
itkAnisotropicDiffusionImageFilterIF2IF2.SetConductanceScalingParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_SetConductanceScalingParameter,None,itkAnisotropicDiffusionImageFilterIF2IF2)
itkAnisotropicDiffusionImageFilterIF2IF2.GetConductanceScalingParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_GetConductanceScalingParameter,None,itkAnisotropicDiffusionImageFilterIF2IF2)
itkAnisotropicDiffusionImageFilterIF2IF2.SetFixedAverageGradientMagnitude = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_SetFixedAverageGradientMagnitude,None,itkAnisotropicDiffusionImageFilterIF2IF2)
itkAnisotropicDiffusionImageFilterIF2IF2.GetFixedAverageGradientMagnitude = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_GetFixedAverageGradientMagnitude,None,itkAnisotropicDiffusionImageFilterIF2IF2)
itkAnisotropicDiffusionImageFilterIF2IF2.GetPointer = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_GetPointer,None,itkAnisotropicDiffusionImageFilterIF2IF2)
itkAnisotropicDiffusionImageFilterIF2IF2_swigregister = _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_swigregister
itkAnisotropicDiffusionImageFilterIF2IF2_swigregister(itkAnisotropicDiffusionImageFilterIF2IF2)

def itkAnisotropicDiffusionImageFilterIF2IF2_cast(*args):
  """itkAnisotropicDiffusionImageFilterIF2IF2_cast(itkLightObject obj) -> itkAnisotropicDiffusionImageFilterIF2IF2"""
  return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_cast(*args)

class itkAnisotropicDiffusionImageFilterIF3IF3(itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterIF3IF3):
    """Proxy of C++ itkAnisotropicDiffusionImageFilterIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_ImageDimension
    def SetTimeStep(self, *args):
        """SetTimeStep(self, double _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_SetTimeStep(self, *args)

    def GetTimeStep(self):
        """GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_GetTimeStep(self)

    def SetConductanceParameter(self, *args):
        """SetConductanceParameter(self, double _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_SetConductanceParameter(self, *args)

    def GetConductanceParameter(self):
        """GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, *args):
        """SetConductanceScalingUpdateInterval(self, unsigned int _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_SetConductanceScalingUpdateInterval(self, *args)

    def GetConductanceScalingUpdateInterval(self):
        """GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, *args):
        """SetConductanceScalingParameter(self, double _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_SetConductanceScalingParameter(self, *args)

    def GetConductanceScalingParameter(self):
        """GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, *args):
        """SetFixedAverageGradientMagnitude(self, double a)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_SetFixedAverageGradientMagnitude(self, *args)

    def GetFixedAverageGradientMagnitude(self):
        """GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_GetFixedAverageGradientMagnitude(self)

    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkAnisotropicDiffusionImageFilterIF3IF3"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAnisotropicDiffusionImageFilterIF3IF3"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAnisotropicDiffusionImageFilterIF3IF3
        
        Create a new object of the class itkAnisotropicDiffusionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAnisotropicDiffusionImageFilterIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAnisotropicDiffusionImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAnisotropicDiffusionImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAnisotropicDiffusionImageFilterIF3IF3.SetTimeStep = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_SetTimeStep,None,itkAnisotropicDiffusionImageFilterIF3IF3)
itkAnisotropicDiffusionImageFilterIF3IF3.GetTimeStep = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_GetTimeStep,None,itkAnisotropicDiffusionImageFilterIF3IF3)
itkAnisotropicDiffusionImageFilterIF3IF3.SetConductanceParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_SetConductanceParameter,None,itkAnisotropicDiffusionImageFilterIF3IF3)
itkAnisotropicDiffusionImageFilterIF3IF3.GetConductanceParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_GetConductanceParameter,None,itkAnisotropicDiffusionImageFilterIF3IF3)
itkAnisotropicDiffusionImageFilterIF3IF3.SetConductanceScalingUpdateInterval = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_SetConductanceScalingUpdateInterval,None,itkAnisotropicDiffusionImageFilterIF3IF3)
itkAnisotropicDiffusionImageFilterIF3IF3.GetConductanceScalingUpdateInterval = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_GetConductanceScalingUpdateInterval,None,itkAnisotropicDiffusionImageFilterIF3IF3)
itkAnisotropicDiffusionImageFilterIF3IF3.SetConductanceScalingParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_SetConductanceScalingParameter,None,itkAnisotropicDiffusionImageFilterIF3IF3)
itkAnisotropicDiffusionImageFilterIF3IF3.GetConductanceScalingParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_GetConductanceScalingParameter,None,itkAnisotropicDiffusionImageFilterIF3IF3)
itkAnisotropicDiffusionImageFilterIF3IF3.SetFixedAverageGradientMagnitude = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_SetFixedAverageGradientMagnitude,None,itkAnisotropicDiffusionImageFilterIF3IF3)
itkAnisotropicDiffusionImageFilterIF3IF3.GetFixedAverageGradientMagnitude = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_GetFixedAverageGradientMagnitude,None,itkAnisotropicDiffusionImageFilterIF3IF3)
itkAnisotropicDiffusionImageFilterIF3IF3.GetPointer = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_GetPointer,None,itkAnisotropicDiffusionImageFilterIF3IF3)
itkAnisotropicDiffusionImageFilterIF3IF3_swigregister = _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_swigregister
itkAnisotropicDiffusionImageFilterIF3IF3_swigregister(itkAnisotropicDiffusionImageFilterIF3IF3)

def itkAnisotropicDiffusionImageFilterIF3IF3_cast(*args):
  """itkAnisotropicDiffusionImageFilterIF3IF3_cast(itkLightObject obj) -> itkAnisotropicDiffusionImageFilterIF3IF3"""
  return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_cast(*args)

class itkAnisotropicDiffusionImageFilterIVF22IVF22(itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterIVF22IVF22):
    """Proxy of C++ itkAnisotropicDiffusionImageFilterIVF22IVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_ImageDimension
    def SetTimeStep(self, *args):
        """SetTimeStep(self, double _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_SetTimeStep(self, *args)

    def GetTimeStep(self):
        """GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_GetTimeStep(self)

    def SetConductanceParameter(self, *args):
        """SetConductanceParameter(self, double _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_SetConductanceParameter(self, *args)

    def GetConductanceParameter(self):
        """GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, *args):
        """SetConductanceScalingUpdateInterval(self, unsigned int _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_SetConductanceScalingUpdateInterval(self, *args)

    def GetConductanceScalingUpdateInterval(self):
        """GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, *args):
        """SetConductanceScalingParameter(self, double _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_SetConductanceScalingParameter(self, *args)

    def GetConductanceScalingParameter(self):
        """GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, *args):
        """SetFixedAverageGradientMagnitude(self, double a)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_SetFixedAverageGradientMagnitude(self, *args)

    def GetFixedAverageGradientMagnitude(self):
        """GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_GetFixedAverageGradientMagnitude(self)

    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterIVF22IVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkAnisotropicDiffusionImageFilterIVF22IVF22"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAnisotropicDiffusionImageFilterIVF22IVF22"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAnisotropicDiffusionImageFilterIVF22IVF22
        
        Create a new object of the class itkAnisotropicDiffusionImageFilterIVF22IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAnisotropicDiffusionImageFilterIVF22IVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAnisotropicDiffusionImageFilterIVF22IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAnisotropicDiffusionImageFilterIVF22IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAnisotropicDiffusionImageFilterIVF22IVF22.SetTimeStep = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_SetTimeStep,None,itkAnisotropicDiffusionImageFilterIVF22IVF22)
itkAnisotropicDiffusionImageFilterIVF22IVF22.GetTimeStep = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_GetTimeStep,None,itkAnisotropicDiffusionImageFilterIVF22IVF22)
itkAnisotropicDiffusionImageFilterIVF22IVF22.SetConductanceParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_SetConductanceParameter,None,itkAnisotropicDiffusionImageFilterIVF22IVF22)
itkAnisotropicDiffusionImageFilterIVF22IVF22.GetConductanceParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_GetConductanceParameter,None,itkAnisotropicDiffusionImageFilterIVF22IVF22)
itkAnisotropicDiffusionImageFilterIVF22IVF22.SetConductanceScalingUpdateInterval = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_SetConductanceScalingUpdateInterval,None,itkAnisotropicDiffusionImageFilterIVF22IVF22)
itkAnisotropicDiffusionImageFilterIVF22IVF22.GetConductanceScalingUpdateInterval = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_GetConductanceScalingUpdateInterval,None,itkAnisotropicDiffusionImageFilterIVF22IVF22)
itkAnisotropicDiffusionImageFilterIVF22IVF22.SetConductanceScalingParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_SetConductanceScalingParameter,None,itkAnisotropicDiffusionImageFilterIVF22IVF22)
itkAnisotropicDiffusionImageFilterIVF22IVF22.GetConductanceScalingParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_GetConductanceScalingParameter,None,itkAnisotropicDiffusionImageFilterIVF22IVF22)
itkAnisotropicDiffusionImageFilterIVF22IVF22.SetFixedAverageGradientMagnitude = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_SetFixedAverageGradientMagnitude,None,itkAnisotropicDiffusionImageFilterIVF22IVF22)
itkAnisotropicDiffusionImageFilterIVF22IVF22.GetFixedAverageGradientMagnitude = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_GetFixedAverageGradientMagnitude,None,itkAnisotropicDiffusionImageFilterIVF22IVF22)
itkAnisotropicDiffusionImageFilterIVF22IVF22.GetPointer = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_GetPointer,None,itkAnisotropicDiffusionImageFilterIVF22IVF22)
itkAnisotropicDiffusionImageFilterIVF22IVF22_swigregister = _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_swigregister
itkAnisotropicDiffusionImageFilterIVF22IVF22_swigregister(itkAnisotropicDiffusionImageFilterIVF22IVF22)

def itkAnisotropicDiffusionImageFilterIVF22IVF22_cast(*args):
  """itkAnisotropicDiffusionImageFilterIVF22IVF22_cast(itkLightObject obj) -> itkAnisotropicDiffusionImageFilterIVF22IVF22"""
  return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_cast(*args)

class itkAnisotropicDiffusionImageFilterIVF33IVF33(itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterIVF33IVF33):
    """Proxy of C++ itkAnisotropicDiffusionImageFilterIVF33IVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_ImageDimension
    def SetTimeStep(self, *args):
        """SetTimeStep(self, double _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_SetTimeStep(self, *args)

    def GetTimeStep(self):
        """GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_GetTimeStep(self)

    def SetConductanceParameter(self, *args):
        """SetConductanceParameter(self, double _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_SetConductanceParameter(self, *args)

    def GetConductanceParameter(self):
        """GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, *args):
        """SetConductanceScalingUpdateInterval(self, unsigned int _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_SetConductanceScalingUpdateInterval(self, *args)

    def GetConductanceScalingUpdateInterval(self):
        """GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, *args):
        """SetConductanceScalingParameter(self, double _arg)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_SetConductanceScalingParameter(self, *args)

    def GetConductanceScalingParameter(self):
        """GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, *args):
        """SetFixedAverageGradientMagnitude(self, double a)"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_SetFixedAverageGradientMagnitude(self, *args)

    def GetFixedAverageGradientMagnitude(self):
        """GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_GetFixedAverageGradientMagnitude(self)

    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterIVF33IVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkAnisotropicDiffusionImageFilterIVF33IVF33"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAnisotropicDiffusionImageFilterIVF33IVF33"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAnisotropicDiffusionImageFilterIVF33IVF33
        
        Create a new object of the class itkAnisotropicDiffusionImageFilterIVF33IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAnisotropicDiffusionImageFilterIVF33IVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAnisotropicDiffusionImageFilterIVF33IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAnisotropicDiffusionImageFilterIVF33IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAnisotropicDiffusionImageFilterIVF33IVF33.SetTimeStep = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_SetTimeStep,None,itkAnisotropicDiffusionImageFilterIVF33IVF33)
itkAnisotropicDiffusionImageFilterIVF33IVF33.GetTimeStep = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_GetTimeStep,None,itkAnisotropicDiffusionImageFilterIVF33IVF33)
itkAnisotropicDiffusionImageFilterIVF33IVF33.SetConductanceParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_SetConductanceParameter,None,itkAnisotropicDiffusionImageFilterIVF33IVF33)
itkAnisotropicDiffusionImageFilterIVF33IVF33.GetConductanceParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_GetConductanceParameter,None,itkAnisotropicDiffusionImageFilterIVF33IVF33)
itkAnisotropicDiffusionImageFilterIVF33IVF33.SetConductanceScalingUpdateInterval = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_SetConductanceScalingUpdateInterval,None,itkAnisotropicDiffusionImageFilterIVF33IVF33)
itkAnisotropicDiffusionImageFilterIVF33IVF33.GetConductanceScalingUpdateInterval = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_GetConductanceScalingUpdateInterval,None,itkAnisotropicDiffusionImageFilterIVF33IVF33)
itkAnisotropicDiffusionImageFilterIVF33IVF33.SetConductanceScalingParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_SetConductanceScalingParameter,None,itkAnisotropicDiffusionImageFilterIVF33IVF33)
itkAnisotropicDiffusionImageFilterIVF33IVF33.GetConductanceScalingParameter = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_GetConductanceScalingParameter,None,itkAnisotropicDiffusionImageFilterIVF33IVF33)
itkAnisotropicDiffusionImageFilterIVF33IVF33.SetFixedAverageGradientMagnitude = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_SetFixedAverageGradientMagnitude,None,itkAnisotropicDiffusionImageFilterIVF33IVF33)
itkAnisotropicDiffusionImageFilterIVF33IVF33.GetFixedAverageGradientMagnitude = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_GetFixedAverageGradientMagnitude,None,itkAnisotropicDiffusionImageFilterIVF33IVF33)
itkAnisotropicDiffusionImageFilterIVF33IVF33.GetPointer = new_instancemethod(_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_GetPointer,None,itkAnisotropicDiffusionImageFilterIVF33IVF33)
itkAnisotropicDiffusionImageFilterIVF33IVF33_swigregister = _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_swigregister
itkAnisotropicDiffusionImageFilterIVF33IVF33_swigregister(itkAnisotropicDiffusionImageFilterIVF33IVF33)

def itkAnisotropicDiffusionImageFilterIVF33IVF33_cast(*args):
  """itkAnisotropicDiffusionImageFilterIVF33IVF33_cast(itkLightObject obj) -> itkAnisotropicDiffusionImageFilterIVF33IVF33"""
  return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_cast(*args)



