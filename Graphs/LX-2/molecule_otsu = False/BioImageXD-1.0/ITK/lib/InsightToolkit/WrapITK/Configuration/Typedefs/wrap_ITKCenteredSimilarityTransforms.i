// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module ITKCenteredSimilarityTransformsChicken
#endif
#ifdef SWIGCSHARP
%module ITKCenteredSimilarityTransformsCsharp
#endif
#ifdef SWIGGUILE
%module ITKCenteredSimilarityTransformsGuile
#endif
#ifdef SWIGJAVA
%module ITKCenteredSimilarityTransformsJava
#endif
#ifdef SWIGLUA
%module ITKCenteredSimilarityTransformsLua
#endif
#ifdef SWIGMODULA3
%module ITKCenteredSimilarityTransformsModula3
#endif
#ifdef SWIGMZSCHEME
%module ITKCenteredSimilarityTransformsMzscheme
#endif
#ifdef SWIGOCAML
%module ITKCenteredSimilarityTransformsOcaml
#endif
#ifdef SWIGPERL
%module ITKCenteredSimilarityTransformsPerl
#endif
#ifdef SWIGPERL5
%module ITKCenteredSimilarityTransformsPerl5
#endif
#ifdef SWIGPHP
%module ITKCenteredSimilarityTransformsPhp
#endif
#ifdef SWIGPHP4
%module ITKCenteredSimilarityTransformsPhp4
#endif
#ifdef SWIGPHP5
%module ITKCenteredSimilarityTransformsPhp5
#endif
#ifdef SWIGPIKE
%module ITKCenteredSimilarityTransformsPike
#endif
#ifdef SWIGPYTHON
%module ITKCenteredSimilarityTransformsPython
#endif
#ifdef SWIGR
%module ITKCenteredSimilarityTransformsR
#endif
#ifdef SWIGRUBY
%module ITKCenteredSimilarityTransformsRuby
#endif
#ifdef SWIGSEXP
%module ITKCenteredSimilarityTransformsSexp
#endif
#ifdef SWIGTCL
%module ITKCenteredSimilarityTransformsTcl
#endif
#ifdef SWIGXML
%module ITKCenteredSimilarityTransformsXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
%}


%{
%}




%import wrap_itkPoint.i
%import wrap_ITKSimilarityTransforms.i
%import wrap_itkTransform.i
%import wrap_itkArray2D.i
%import wrap_itkArray.i
%import wrap_ITKCommonBase.i


%include itk.i
%include wrap_ITKCenteredSimilarityTransforms_ext.i


 class itkCenteredSimilarity2DTransformD : public itkSimilarity2DTransformD {
   public:
     enum  {  SpaceDimension = 2 };
     enum  {  InputSpaceDimension = 2 };
     enum  {  OutputSpaceDimension = 2 };
     enum  {  ParametersDimension = 6 };
     static itkCenteredSimilarity2DTransformD_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetParameters(itkArrayD const & parameters);
     virtual itkArrayD const & GetParameters() const;
     virtual itkArray2DD const & GetJacobian(itkPointD2 const & point) const;
     virtual void SetFixedParameters(itkArrayD const & arg0);
     virtual itkArrayD const & GetFixedParameters() const;
     void CloneInverseTo(itkCenteredSimilarity2DTransformD_Pointer & newinverse) const;
     bool GetInverse(itkCenteredSimilarity2DTransformD * inverse) const;
     virtual itkTransformBase_Pointer GetInverseTransform() const;
     void CloneTo(itkCenteredSimilarity2DTransformD_Pointer & clone) const;
   private:
     itkCenteredSimilarity2DTransformD(itkCenteredSimilarity2DTransformD const & arg0);
     void operator=(itkCenteredSimilarity2DTransformD const & arg0);
   protected:
     itkCenteredSimilarity2DTransformD();
     itkCenteredSimilarity2DTransformD(unsigned int spaceDimension, unsigned int parametersDimension);
     ~itkCenteredSimilarity2DTransformD();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkCenteredSimilarity2DTransformD_Pointer {
   public:
     itkCenteredSimilarity2DTransformD_Pointer();
     itkCenteredSimilarity2DTransformD_Pointer(itkCenteredSimilarity2DTransformD_Pointer const & p);
     itkCenteredSimilarity2DTransformD_Pointer(itkCenteredSimilarity2DTransformD * p);
     ~itkCenteredSimilarity2DTransformD_Pointer();
     itkCenteredSimilarity2DTransformD * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkCenteredSimilarity2DTransformD * GetPointer() const;
     bool operator<(itkCenteredSimilarity2DTransformD_Pointer const & r) const;
     bool operator>(itkCenteredSimilarity2DTransformD_Pointer const & r) const;
     bool operator<=(itkCenteredSimilarity2DTransformD_Pointer const & r) const;
     bool operator>=(itkCenteredSimilarity2DTransformD_Pointer const & r) const;
     itkCenteredSimilarity2DTransformD_Pointer & operator=(itkCenteredSimilarity2DTransformD_Pointer const & r);
     itkCenteredSimilarity2DTransformD_Pointer & operator=(itkCenteredSimilarity2DTransformD * r);
     itkCenteredSimilarity2DTransformD * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


