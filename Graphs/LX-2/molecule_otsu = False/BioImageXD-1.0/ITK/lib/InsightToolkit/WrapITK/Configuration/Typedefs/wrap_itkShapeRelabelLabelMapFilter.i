// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkShapeRelabelLabelMapFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkShapeRelabelLabelMapFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkShapeRelabelLabelMapFilterGuile
#endif
#ifdef SWIGJAVA
%module itkShapeRelabelLabelMapFilterJava
#endif
#ifdef SWIGLUA
%module itkShapeRelabelLabelMapFilterLua
#endif
#ifdef SWIGMODULA3
%module itkShapeRelabelLabelMapFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkShapeRelabelLabelMapFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkShapeRelabelLabelMapFilterOcaml
#endif
#ifdef SWIGPERL
%module itkShapeRelabelLabelMapFilterPerl
#endif
#ifdef SWIGPERL5
%module itkShapeRelabelLabelMapFilterPerl5
#endif
#ifdef SWIGPHP
%module itkShapeRelabelLabelMapFilterPhp
#endif
#ifdef SWIGPHP4
%module itkShapeRelabelLabelMapFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkShapeRelabelLabelMapFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkShapeRelabelLabelMapFilterPike
#endif
#ifdef SWIGPYTHON
%module itkShapeRelabelLabelMapFilterPython
#endif
#ifdef SWIGR
%module itkShapeRelabelLabelMapFilterR
#endif
#ifdef SWIGRUBY
%module itkShapeRelabelLabelMapFilterRuby
#endif
#ifdef SWIGSEXP
%module itkShapeRelabelLabelMapFilterSexp
#endif
#ifdef SWIGTCL
%module itkShapeRelabelLabelMapFilterTcl
#endif
#ifdef SWIGXML
%module itkShapeRelabelLabelMapFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "Numerics.includes"
#include "BinaryMorphology.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkInPlaceLabelMapFilter.i


%include itk.i
%include wrap_itkShapeRelabelLabelMapFilter_ext.i


 class itkShapeRelabelLabelMapFilterLM2 : public itkInPlaceLabelMapFilterLM2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkShapeRelabelLabelMapFilterLM2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual bool const & GetReverseOrdering() const;
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
   private:
     itkShapeRelabelLabelMapFilterLM2(itkShapeRelabelLabelMapFilterLM2 const & arg0);
     void operator=(itkShapeRelabelLabelMapFilterLM2 const & arg0);
   protected:
     itkShapeRelabelLabelMapFilterLM2();
     ~itkShapeRelabelLabelMapFilterLM2();
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkShapeRelabelLabelMapFilterLM2_Pointer {
   public:
     itkShapeRelabelLabelMapFilterLM2_Pointer();
     itkShapeRelabelLabelMapFilterLM2_Pointer(itkShapeRelabelLabelMapFilterLM2_Pointer const & p);
     itkShapeRelabelLabelMapFilterLM2_Pointer(itkShapeRelabelLabelMapFilterLM2 * p);
     ~itkShapeRelabelLabelMapFilterLM2_Pointer();
     itkShapeRelabelLabelMapFilterLM2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkShapeRelabelLabelMapFilterLM2 * GetPointer() const;
     bool operator<(itkShapeRelabelLabelMapFilterLM2_Pointer const & r) const;
     bool operator>(itkShapeRelabelLabelMapFilterLM2_Pointer const & r) const;
     bool operator<=(itkShapeRelabelLabelMapFilterLM2_Pointer const & r) const;
     bool operator>=(itkShapeRelabelLabelMapFilterLM2_Pointer const & r) const;
     itkShapeRelabelLabelMapFilterLM2_Pointer & operator=(itkShapeRelabelLabelMapFilterLM2_Pointer const & r);
     itkShapeRelabelLabelMapFilterLM2_Pointer & operator=(itkShapeRelabelLabelMapFilterLM2 * r);
     itkShapeRelabelLabelMapFilterLM2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkShapeRelabelLabelMapFilterLM3 : public itkInPlaceLabelMapFilterLM3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkShapeRelabelLabelMapFilterLM3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual bool const & GetReverseOrdering() const;
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
   private:
     itkShapeRelabelLabelMapFilterLM3(itkShapeRelabelLabelMapFilterLM3 const & arg0);
     void operator=(itkShapeRelabelLabelMapFilterLM3 const & arg0);
   protected:
     itkShapeRelabelLabelMapFilterLM3();
     ~itkShapeRelabelLabelMapFilterLM3();
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkShapeRelabelLabelMapFilterLM3_Pointer {
   public:
     itkShapeRelabelLabelMapFilterLM3_Pointer();
     itkShapeRelabelLabelMapFilterLM3_Pointer(itkShapeRelabelLabelMapFilterLM3_Pointer const & p);
     itkShapeRelabelLabelMapFilterLM3_Pointer(itkShapeRelabelLabelMapFilterLM3 * p);
     ~itkShapeRelabelLabelMapFilterLM3_Pointer();
     itkShapeRelabelLabelMapFilterLM3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkShapeRelabelLabelMapFilterLM3 * GetPointer() const;
     bool operator<(itkShapeRelabelLabelMapFilterLM3_Pointer const & r) const;
     bool operator>(itkShapeRelabelLabelMapFilterLM3_Pointer const & r) const;
     bool operator<=(itkShapeRelabelLabelMapFilterLM3_Pointer const & r) const;
     bool operator>=(itkShapeRelabelLabelMapFilterLM3_Pointer const & r) const;
     itkShapeRelabelLabelMapFilterLM3_Pointer & operator=(itkShapeRelabelLabelMapFilterLM3_Pointer const & r);
     itkShapeRelabelLabelMapFilterLM3_Pointer & operator=(itkShapeRelabelLabelMapFilterLM3 * r);
     itkShapeRelabelLabelMapFilterLM3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


