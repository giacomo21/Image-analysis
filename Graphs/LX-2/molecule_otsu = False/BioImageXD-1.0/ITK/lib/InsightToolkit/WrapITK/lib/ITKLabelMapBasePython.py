# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _ITKLabelMapBasePython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_ITKLabelMapBasePython', [dirname(__file__)])
        except ImportError:
            import _ITKLabelMapBasePython
            return _ITKLabelMapBasePython
        if fp is not None:
            try:
                _mod = imp.load_module('_ITKLabelMapBasePython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _ITKLabelMapBasePython = swig_import_helper()
    del swig_import_helper
else:
    import _ITKLabelMapBasePython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkLabelMapPython
import itkStatisticsLabelObjectPython
import itkPointPython
import vnl_vectorPython
import vcl_complexPython
import pyBasePython
import vnl_matrixPython
import itkFixedArrayPython
import itkVectorPython
import vnl_vector_refPython
import itkAffineTransformPython
import itkTransformPython
import itkCovariantVectorPython
import itkArray2DPython
import itkArrayPython
import ITKCommonBasePython
import itkEventObjectsPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkMatrixOffsetTransformBasePython
import itkLabelObjectPython
import itkLabelObjectLinePython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import itkShapeLabelObjectPython
import ITKRegionsPython
import itkHistogramPython
import itkSamplePython
import itkImagePython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
def itkImageToImageFilterLM3IRGBUS3_New():
  return itkImageToImageFilterLM3IRGBUS3.New()

def itkImageToImageFilterLM3ID3_New():
  return itkImageToImageFilterLM3ID3.New()

def itkImageToImageFilterID3LM3_New():
  return itkImageToImageFilterID3LM3.New()

def itkImageToImageFilterLM3IF3_New():
  return itkImageToImageFilterLM3IF3.New()

def itkImageToImageFilterIF3LM3_New():
  return itkImageToImageFilterIF3LM3.New()

def itkImageToImageFilterLM3IUS3_New():
  return itkImageToImageFilterLM3IUS3.New()

def itkImageToImageFilterIUS3LM3_New():
  return itkImageToImageFilterIUS3LM3.New()

def itkImageToImageFilterLM3IUL3_New():
  return itkImageToImageFilterLM3IUL3.New()

def itkImageToImageFilterIUL3LM3_New():
  return itkImageToImageFilterIUL3LM3.New()

def itkImageToImageFilterLM3IUC3_New():
  return itkImageToImageFilterLM3IUC3.New()

def itkImageToImageFilterIUC3LM3_New():
  return itkImageToImageFilterIUC3LM3.New()

def itkImageToImageFilterLM3LM3_New():
  return itkImageToImageFilterLM3LM3.New()

def itkImageToImageFilterLM2IRGBUS2_New():
  return itkImageToImageFilterLM2IRGBUS2.New()

def itkImageToImageFilterLM2ID2_New():
  return itkImageToImageFilterLM2ID2.New()

def itkImageToImageFilterID2LM2_New():
  return itkImageToImageFilterID2LM2.New()

def itkImageToImageFilterLM2IF2_New():
  return itkImageToImageFilterLM2IF2.New()

def itkImageToImageFilterIF2LM2_New():
  return itkImageToImageFilterIF2LM2.New()

def itkImageToImageFilterLM2IUS2_New():
  return itkImageToImageFilterLM2IUS2.New()

def itkImageToImageFilterIUS2LM2_New():
  return itkImageToImageFilterIUS2LM2.New()

def itkImageToImageFilterLM2IUL2_New():
  return itkImageToImageFilterLM2IUL2.New()

def itkImageToImageFilterIUL2LM2_New():
  return itkImageToImageFilterIUL2LM2.New()

def itkImageToImageFilterLM2IUC2_New():
  return itkImageToImageFilterLM2IUC2.New()

def itkImageToImageFilterIUC2LM2_New():
  return itkImageToImageFilterIUC2LM2.New()

def itkImageToImageFilterLM2LM2_New():
  return itkImageToImageFilterLM2LM2.New()

def itkImageSourceLM3_New():
  return itkImageSourceLM3.New()

def itkImageSourceLM2_New():
  return itkImageSourceLM2.New()

class itkImageSourceLM2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageSourceLM2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputImageDimension = _ITKLabelMapBasePython.itkImageSourceLM2_OutputImageDimension
    def GetOutput(self, *args):
        """
        GetOutput(self) -> itkLabelMap2
        GetOutput(self, unsigned int idx) -> itkLabelMap2
        """
        return _ITKLabelMapBasePython.itkImageSourceLM2_GetOutput(self, *args)

    def GraftOutput(self, *args):
        """GraftOutput(self, itkDataObject output)"""
        return _ITKLabelMapBasePython.itkImageSourceLM2_GraftOutput(self, *args)

    def GraftNthOutput(self, *args):
        """GraftNthOutput(self, unsigned int idx, itkDataObject output)"""
        return _ITKLabelMapBasePython.itkImageSourceLM2_GraftNthOutput(self, *args)

    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageSourceLM2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageSourceLM2"""
        return _ITKLabelMapBasePython.itkImageSourceLM2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageSourceLM2"""
        return _ITKLabelMapBasePython.itkImageSourceLM2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageSourceLM2
        
        Create a new object of the class itkImageSourceLM2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageSourceLM2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageSourceLM2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSourceLM2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageSourceLM2.GetOutput = new_instancemethod(_ITKLabelMapBasePython.itkImageSourceLM2_GetOutput,None,itkImageSourceLM2)
itkImageSourceLM2.GraftOutput = new_instancemethod(_ITKLabelMapBasePython.itkImageSourceLM2_GraftOutput,None,itkImageSourceLM2)
itkImageSourceLM2.GraftNthOutput = new_instancemethod(_ITKLabelMapBasePython.itkImageSourceLM2_GraftNthOutput,None,itkImageSourceLM2)
itkImageSourceLM2.GetPointer = new_instancemethod(_ITKLabelMapBasePython.itkImageSourceLM2_GetPointer,None,itkImageSourceLM2)
itkImageSourceLM2_swigregister = _ITKLabelMapBasePython.itkImageSourceLM2_swigregister
itkImageSourceLM2_swigregister(itkImageSourceLM2)

def itkImageSourceLM2_cast(*args):
  """itkImageSourceLM2_cast(itkLightObject obj) -> itkImageSourceLM2"""
  return _ITKLabelMapBasePython.itkImageSourceLM2_cast(*args)

class itkImageSourceLM3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageSourceLM3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OutputImageDimension = _ITKLabelMapBasePython.itkImageSourceLM3_OutputImageDimension
    def GetOutput(self, *args):
        """
        GetOutput(self) -> itkLabelMap3
        GetOutput(self, unsigned int idx) -> itkLabelMap3
        """
        return _ITKLabelMapBasePython.itkImageSourceLM3_GetOutput(self, *args)

    def GraftOutput(self, *args):
        """GraftOutput(self, itkDataObject output)"""
        return _ITKLabelMapBasePython.itkImageSourceLM3_GraftOutput(self, *args)

    def GraftNthOutput(self, *args):
        """GraftNthOutput(self, unsigned int idx, itkDataObject output)"""
        return _ITKLabelMapBasePython.itkImageSourceLM3_GraftNthOutput(self, *args)

    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageSourceLM3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageSourceLM3"""
        return _ITKLabelMapBasePython.itkImageSourceLM3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageSourceLM3"""
        return _ITKLabelMapBasePython.itkImageSourceLM3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageSourceLM3
        
        Create a new object of the class itkImageSourceLM3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageSourceLM3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageSourceLM3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSourceLM3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageSourceLM3.GetOutput = new_instancemethod(_ITKLabelMapBasePython.itkImageSourceLM3_GetOutput,None,itkImageSourceLM3)
itkImageSourceLM3.GraftOutput = new_instancemethod(_ITKLabelMapBasePython.itkImageSourceLM3_GraftOutput,None,itkImageSourceLM3)
itkImageSourceLM3.GraftNthOutput = new_instancemethod(_ITKLabelMapBasePython.itkImageSourceLM3_GraftNthOutput,None,itkImageSourceLM3)
itkImageSourceLM3.GetPointer = new_instancemethod(_ITKLabelMapBasePython.itkImageSourceLM3_GetPointer,None,itkImageSourceLM3)
itkImageSourceLM3_swigregister = _ITKLabelMapBasePython.itkImageSourceLM3_swigregister
itkImageSourceLM3_swigregister(itkImageSourceLM3)

def itkImageSourceLM3_cast(*args):
  """itkImageSourceLM3_cast(itkLightObject obj) -> itkImageSourceLM3"""
  return _ITKLabelMapBasePython.itkImageSourceLM3_cast(*args)

class itkImageToImageFilterID2LM2(itkImageSourceLM2):
    """Proxy of C++ itkImageToImageFilterID2LM2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterID2LM2_InputImageDimension
    OutputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterID2LM2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD2 image)
        SetInput(self, unsigned int arg0, itkImageD2 image)
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterID2LM2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD2
        GetInput(self, unsigned int idx) -> itkImageD2
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterID2LM2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD2 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterID2LM2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterID2LM2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD2 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterID2LM2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterID2LM2_PopFrontInput(self)

    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterID2LM2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID2LM2"""
        return _ITKLabelMapBasePython.itkImageToImageFilterID2LM2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID2LM2"""
        return _ITKLabelMapBasePython.itkImageToImageFilterID2LM2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID2LM2
        
        Create a new object of the class itkImageToImageFilterID2LM2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID2LM2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID2LM2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID2LM2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID2LM2.SetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterID2LM2_SetInput,None,itkImageToImageFilterID2LM2)
itkImageToImageFilterID2LM2.GetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterID2LM2_GetInput,None,itkImageToImageFilterID2LM2)
itkImageToImageFilterID2LM2.PushBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterID2LM2_PushBackInput,None,itkImageToImageFilterID2LM2)
itkImageToImageFilterID2LM2.PopBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterID2LM2_PopBackInput,None,itkImageToImageFilterID2LM2)
itkImageToImageFilterID2LM2.PushFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterID2LM2_PushFrontInput,None,itkImageToImageFilterID2LM2)
itkImageToImageFilterID2LM2.PopFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterID2LM2_PopFrontInput,None,itkImageToImageFilterID2LM2)
itkImageToImageFilterID2LM2.GetPointer = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterID2LM2_GetPointer,None,itkImageToImageFilterID2LM2)
itkImageToImageFilterID2LM2_swigregister = _ITKLabelMapBasePython.itkImageToImageFilterID2LM2_swigregister
itkImageToImageFilterID2LM2_swigregister(itkImageToImageFilterID2LM2)

def itkImageToImageFilterID2LM2_cast(*args):
  """itkImageToImageFilterID2LM2_cast(itkLightObject obj) -> itkImageToImageFilterID2LM2"""
  return _ITKLabelMapBasePython.itkImageToImageFilterID2LM2_cast(*args)

class itkImageToImageFilterID3LM3(itkImageSourceLM3):
    """Proxy of C++ itkImageToImageFilterID3LM3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterID3LM3_InputImageDimension
    OutputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterID3LM3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD3 image)
        SetInput(self, unsigned int arg0, itkImageD3 image)
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterID3LM3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD3
        GetInput(self, unsigned int idx) -> itkImageD3
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterID3LM3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD3 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterID3LM3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterID3LM3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD3 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterID3LM3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterID3LM3_PopFrontInput(self)

    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterID3LM3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID3LM3"""
        return _ITKLabelMapBasePython.itkImageToImageFilterID3LM3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID3LM3"""
        return _ITKLabelMapBasePython.itkImageToImageFilterID3LM3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID3LM3
        
        Create a new object of the class itkImageToImageFilterID3LM3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID3LM3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID3LM3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID3LM3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID3LM3.SetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterID3LM3_SetInput,None,itkImageToImageFilterID3LM3)
itkImageToImageFilterID3LM3.GetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterID3LM3_GetInput,None,itkImageToImageFilterID3LM3)
itkImageToImageFilterID3LM3.PushBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterID3LM3_PushBackInput,None,itkImageToImageFilterID3LM3)
itkImageToImageFilterID3LM3.PopBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterID3LM3_PopBackInput,None,itkImageToImageFilterID3LM3)
itkImageToImageFilterID3LM3.PushFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterID3LM3_PushFrontInput,None,itkImageToImageFilterID3LM3)
itkImageToImageFilterID3LM3.PopFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterID3LM3_PopFrontInput,None,itkImageToImageFilterID3LM3)
itkImageToImageFilterID3LM3.GetPointer = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterID3LM3_GetPointer,None,itkImageToImageFilterID3LM3)
itkImageToImageFilterID3LM3_swigregister = _ITKLabelMapBasePython.itkImageToImageFilterID3LM3_swigregister
itkImageToImageFilterID3LM3_swigregister(itkImageToImageFilterID3LM3)

def itkImageToImageFilterID3LM3_cast(*args):
  """itkImageToImageFilterID3LM3_cast(itkLightObject obj) -> itkImageToImageFilterID3LM3"""
  return _ITKLabelMapBasePython.itkImageToImageFilterID3LM3_cast(*args)

class itkImageToImageFilterIF2LM2(itkImageSourceLM2):
    """Proxy of C++ itkImageToImageFilterIF2LM2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_InputImageDimension
    OutputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF2 image)
        SetInput(self, unsigned int arg0, itkImageF2 image)
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF2
        GetInput(self, unsigned int idx) -> itkImageF2
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF2 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF2 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_PopFrontInput(self)

    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterIF2LM2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF2LM2"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF2LM2"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF2LM2
        
        Create a new object of the class itkImageToImageFilterIF2LM2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF2LM2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF2LM2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF2LM2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF2LM2.SetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_SetInput,None,itkImageToImageFilterIF2LM2)
itkImageToImageFilterIF2LM2.GetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_GetInput,None,itkImageToImageFilterIF2LM2)
itkImageToImageFilterIF2LM2.PushBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_PushBackInput,None,itkImageToImageFilterIF2LM2)
itkImageToImageFilterIF2LM2.PopBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_PopBackInput,None,itkImageToImageFilterIF2LM2)
itkImageToImageFilterIF2LM2.PushFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_PushFrontInput,None,itkImageToImageFilterIF2LM2)
itkImageToImageFilterIF2LM2.PopFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_PopFrontInput,None,itkImageToImageFilterIF2LM2)
itkImageToImageFilterIF2LM2.GetPointer = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_GetPointer,None,itkImageToImageFilterIF2LM2)
itkImageToImageFilterIF2LM2_swigregister = _ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_swigregister
itkImageToImageFilterIF2LM2_swigregister(itkImageToImageFilterIF2LM2)

def itkImageToImageFilterIF2LM2_cast(*args):
  """itkImageToImageFilterIF2LM2_cast(itkLightObject obj) -> itkImageToImageFilterIF2LM2"""
  return _ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_cast(*args)

class itkImageToImageFilterIF3LM3(itkImageSourceLM3):
    """Proxy of C++ itkImageToImageFilterIF3LM3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_InputImageDimension
    OutputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF3 image)
        SetInput(self, unsigned int arg0, itkImageF3 image)
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF3
        GetInput(self, unsigned int idx) -> itkImageF3
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF3 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF3 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_PopFrontInput(self)

    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterIF3LM3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF3LM3"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF3LM3"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF3LM3
        
        Create a new object of the class itkImageToImageFilterIF3LM3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF3LM3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF3LM3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF3LM3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF3LM3.SetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_SetInput,None,itkImageToImageFilterIF3LM3)
itkImageToImageFilterIF3LM3.GetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_GetInput,None,itkImageToImageFilterIF3LM3)
itkImageToImageFilterIF3LM3.PushBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_PushBackInput,None,itkImageToImageFilterIF3LM3)
itkImageToImageFilterIF3LM3.PopBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_PopBackInput,None,itkImageToImageFilterIF3LM3)
itkImageToImageFilterIF3LM3.PushFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_PushFrontInput,None,itkImageToImageFilterIF3LM3)
itkImageToImageFilterIF3LM3.PopFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_PopFrontInput,None,itkImageToImageFilterIF3LM3)
itkImageToImageFilterIF3LM3.GetPointer = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_GetPointer,None,itkImageToImageFilterIF3LM3)
itkImageToImageFilterIF3LM3_swigregister = _ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_swigregister
itkImageToImageFilterIF3LM3_swigregister(itkImageToImageFilterIF3LM3)

def itkImageToImageFilterIF3LM3_cast(*args):
  """itkImageToImageFilterIF3LM3_cast(itkLightObject obj) -> itkImageToImageFilterIF3LM3"""
  return _ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_cast(*args)

class itkImageToImageFilterIUC2LM2(itkImageSourceLM2):
    """Proxy of C++ itkImageToImageFilterIUC2LM2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_InputImageDimension
    OutputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC2 image)
        SetInput(self, unsigned int arg0, itkImageUC2 image)
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC2
        GetInput(self, unsigned int idx) -> itkImageUC2
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC2 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC2 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_PopFrontInput(self)

    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterIUC2LM2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC2LM2"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC2LM2"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC2LM2
        
        Create a new object of the class itkImageToImageFilterIUC2LM2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC2LM2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC2LM2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC2LM2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC2LM2.SetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_SetInput,None,itkImageToImageFilterIUC2LM2)
itkImageToImageFilterIUC2LM2.GetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_GetInput,None,itkImageToImageFilterIUC2LM2)
itkImageToImageFilterIUC2LM2.PushBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_PushBackInput,None,itkImageToImageFilterIUC2LM2)
itkImageToImageFilterIUC2LM2.PopBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_PopBackInput,None,itkImageToImageFilterIUC2LM2)
itkImageToImageFilterIUC2LM2.PushFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_PushFrontInput,None,itkImageToImageFilterIUC2LM2)
itkImageToImageFilterIUC2LM2.PopFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_PopFrontInput,None,itkImageToImageFilterIUC2LM2)
itkImageToImageFilterIUC2LM2.GetPointer = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_GetPointer,None,itkImageToImageFilterIUC2LM2)
itkImageToImageFilterIUC2LM2_swigregister = _ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_swigregister
itkImageToImageFilterIUC2LM2_swigregister(itkImageToImageFilterIUC2LM2)

def itkImageToImageFilterIUC2LM2_cast(*args):
  """itkImageToImageFilterIUC2LM2_cast(itkLightObject obj) -> itkImageToImageFilterIUC2LM2"""
  return _ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_cast(*args)

class itkImageToImageFilterIUC3LM3(itkImageSourceLM3):
    """Proxy of C++ itkImageToImageFilterIUC3LM3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_InputImageDimension
    OutputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC3 image)
        SetInput(self, unsigned int arg0, itkImageUC3 image)
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC3
        GetInput(self, unsigned int idx) -> itkImageUC3
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC3 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC3 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_PopFrontInput(self)

    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterIUC3LM3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC3LM3"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC3LM3"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC3LM3
        
        Create a new object of the class itkImageToImageFilterIUC3LM3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC3LM3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC3LM3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC3LM3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC3LM3.SetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_SetInput,None,itkImageToImageFilterIUC3LM3)
itkImageToImageFilterIUC3LM3.GetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_GetInput,None,itkImageToImageFilterIUC3LM3)
itkImageToImageFilterIUC3LM3.PushBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_PushBackInput,None,itkImageToImageFilterIUC3LM3)
itkImageToImageFilterIUC3LM3.PopBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_PopBackInput,None,itkImageToImageFilterIUC3LM3)
itkImageToImageFilterIUC3LM3.PushFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_PushFrontInput,None,itkImageToImageFilterIUC3LM3)
itkImageToImageFilterIUC3LM3.PopFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_PopFrontInput,None,itkImageToImageFilterIUC3LM3)
itkImageToImageFilterIUC3LM3.GetPointer = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_GetPointer,None,itkImageToImageFilterIUC3LM3)
itkImageToImageFilterIUC3LM3_swigregister = _ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_swigregister
itkImageToImageFilterIUC3LM3_swigregister(itkImageToImageFilterIUC3LM3)

def itkImageToImageFilterIUC3LM3_cast(*args):
  """itkImageToImageFilterIUC3LM3_cast(itkLightObject obj) -> itkImageToImageFilterIUC3LM3"""
  return _ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_cast(*args)

class itkImageToImageFilterIUL2LM2(itkImageSourceLM2):
    """Proxy of C++ itkImageToImageFilterIUL2LM2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterIUL2LM2_InputImageDimension
    OutputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterIUL2LM2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL2 image)
        SetInput(self, unsigned int arg0, itkImageUL2 image)
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterIUL2LM2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL2
        GetInput(self, unsigned int idx) -> itkImageUL2
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterIUL2LM2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL2 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUL2LM2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUL2LM2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL2 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUL2LM2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUL2LM2_PopFrontInput(self)

    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterIUL2LM2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL2LM2"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUL2LM2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL2LM2"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUL2LM2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL2LM2
        
        Create a new object of the class itkImageToImageFilterIUL2LM2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL2LM2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL2LM2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL2LM2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL2LM2.SetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUL2LM2_SetInput,None,itkImageToImageFilterIUL2LM2)
itkImageToImageFilterIUL2LM2.GetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUL2LM2_GetInput,None,itkImageToImageFilterIUL2LM2)
itkImageToImageFilterIUL2LM2.PushBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUL2LM2_PushBackInput,None,itkImageToImageFilterIUL2LM2)
itkImageToImageFilterIUL2LM2.PopBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUL2LM2_PopBackInput,None,itkImageToImageFilterIUL2LM2)
itkImageToImageFilterIUL2LM2.PushFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUL2LM2_PushFrontInput,None,itkImageToImageFilterIUL2LM2)
itkImageToImageFilterIUL2LM2.PopFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUL2LM2_PopFrontInput,None,itkImageToImageFilterIUL2LM2)
itkImageToImageFilterIUL2LM2.GetPointer = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUL2LM2_GetPointer,None,itkImageToImageFilterIUL2LM2)
itkImageToImageFilterIUL2LM2_swigregister = _ITKLabelMapBasePython.itkImageToImageFilterIUL2LM2_swigregister
itkImageToImageFilterIUL2LM2_swigregister(itkImageToImageFilterIUL2LM2)

def itkImageToImageFilterIUL2LM2_cast(*args):
  """itkImageToImageFilterIUL2LM2_cast(itkLightObject obj) -> itkImageToImageFilterIUL2LM2"""
  return _ITKLabelMapBasePython.itkImageToImageFilterIUL2LM2_cast(*args)

class itkImageToImageFilterIUL3LM3(itkImageSourceLM3):
    """Proxy of C++ itkImageToImageFilterIUL3LM3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterIUL3LM3_InputImageDimension
    OutputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterIUL3LM3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL3 image)
        SetInput(self, unsigned int arg0, itkImageUL3 image)
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterIUL3LM3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL3
        GetInput(self, unsigned int idx) -> itkImageUL3
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterIUL3LM3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL3 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUL3LM3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUL3LM3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL3 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUL3LM3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUL3LM3_PopFrontInput(self)

    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterIUL3LM3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL3LM3"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUL3LM3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL3LM3"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUL3LM3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL3LM3
        
        Create a new object of the class itkImageToImageFilterIUL3LM3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL3LM3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL3LM3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL3LM3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL3LM3.SetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUL3LM3_SetInput,None,itkImageToImageFilterIUL3LM3)
itkImageToImageFilterIUL3LM3.GetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUL3LM3_GetInput,None,itkImageToImageFilterIUL3LM3)
itkImageToImageFilterIUL3LM3.PushBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUL3LM3_PushBackInput,None,itkImageToImageFilterIUL3LM3)
itkImageToImageFilterIUL3LM3.PopBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUL3LM3_PopBackInput,None,itkImageToImageFilterIUL3LM3)
itkImageToImageFilterIUL3LM3.PushFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUL3LM3_PushFrontInput,None,itkImageToImageFilterIUL3LM3)
itkImageToImageFilterIUL3LM3.PopFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUL3LM3_PopFrontInput,None,itkImageToImageFilterIUL3LM3)
itkImageToImageFilterIUL3LM3.GetPointer = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUL3LM3_GetPointer,None,itkImageToImageFilterIUL3LM3)
itkImageToImageFilterIUL3LM3_swigregister = _ITKLabelMapBasePython.itkImageToImageFilterIUL3LM3_swigregister
itkImageToImageFilterIUL3LM3_swigregister(itkImageToImageFilterIUL3LM3)

def itkImageToImageFilterIUL3LM3_cast(*args):
  """itkImageToImageFilterIUL3LM3_cast(itkLightObject obj) -> itkImageToImageFilterIUL3LM3"""
  return _ITKLabelMapBasePython.itkImageToImageFilterIUL3LM3_cast(*args)

class itkImageToImageFilterIUS2LM2(itkImageSourceLM2):
    """Proxy of C++ itkImageToImageFilterIUS2LM2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_InputImageDimension
    OutputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS2 image)
        SetInput(self, unsigned int arg0, itkImageUS2 image)
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS2
        GetInput(self, unsigned int idx) -> itkImageUS2
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS2 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS2 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_PopFrontInput(self)

    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterIUS2LM2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS2LM2"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS2LM2"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS2LM2
        
        Create a new object of the class itkImageToImageFilterIUS2LM2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS2LM2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS2LM2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS2LM2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS2LM2.SetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_SetInput,None,itkImageToImageFilterIUS2LM2)
itkImageToImageFilterIUS2LM2.GetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_GetInput,None,itkImageToImageFilterIUS2LM2)
itkImageToImageFilterIUS2LM2.PushBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_PushBackInput,None,itkImageToImageFilterIUS2LM2)
itkImageToImageFilterIUS2LM2.PopBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_PopBackInput,None,itkImageToImageFilterIUS2LM2)
itkImageToImageFilterIUS2LM2.PushFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_PushFrontInput,None,itkImageToImageFilterIUS2LM2)
itkImageToImageFilterIUS2LM2.PopFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_PopFrontInput,None,itkImageToImageFilterIUS2LM2)
itkImageToImageFilterIUS2LM2.GetPointer = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_GetPointer,None,itkImageToImageFilterIUS2LM2)
itkImageToImageFilterIUS2LM2_swigregister = _ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_swigregister
itkImageToImageFilterIUS2LM2_swigregister(itkImageToImageFilterIUS2LM2)

def itkImageToImageFilterIUS2LM2_cast(*args):
  """itkImageToImageFilterIUS2LM2_cast(itkLightObject obj) -> itkImageToImageFilterIUS2LM2"""
  return _ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_cast(*args)

class itkImageToImageFilterIUS3LM3(itkImageSourceLM3):
    """Proxy of C++ itkImageToImageFilterIUS3LM3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_InputImageDimension
    OutputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS3 image)
        SetInput(self, unsigned int arg0, itkImageUS3 image)
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS3
        GetInput(self, unsigned int idx) -> itkImageUS3
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS3 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS3 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_PopFrontInput(self)

    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterIUS3LM3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS3LM3"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS3LM3"""
        return _ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS3LM3
        
        Create a new object of the class itkImageToImageFilterIUS3LM3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS3LM3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS3LM3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS3LM3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS3LM3.SetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_SetInput,None,itkImageToImageFilterIUS3LM3)
itkImageToImageFilterIUS3LM3.GetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_GetInput,None,itkImageToImageFilterIUS3LM3)
itkImageToImageFilterIUS3LM3.PushBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_PushBackInput,None,itkImageToImageFilterIUS3LM3)
itkImageToImageFilterIUS3LM3.PopBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_PopBackInput,None,itkImageToImageFilterIUS3LM3)
itkImageToImageFilterIUS3LM3.PushFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_PushFrontInput,None,itkImageToImageFilterIUS3LM3)
itkImageToImageFilterIUS3LM3.PopFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_PopFrontInput,None,itkImageToImageFilterIUS3LM3)
itkImageToImageFilterIUS3LM3.GetPointer = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_GetPointer,None,itkImageToImageFilterIUS3LM3)
itkImageToImageFilterIUS3LM3_swigregister = _ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_swigregister
itkImageToImageFilterIUS3LM3_swigregister(itkImageToImageFilterIUS3LM3)

def itkImageToImageFilterIUS3LM3_cast(*args):
  """itkImageToImageFilterIUS3LM3_cast(itkLightObject obj) -> itkImageToImageFilterIUS3LM3"""
  return _ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_cast(*args)

class itkImageToImageFilterLM2ID2(itkImageSourcePython.itkImageSourceID2):
    """Proxy of C++ itkImageToImageFilterLM2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_InputImageDimension
    OutputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkLabelMap2 image)
        SetInput(self, unsigned int arg0, itkLabelMap2 image)
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkLabelMap2
        GetInput(self, unsigned int idx) -> itkLabelMap2
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkLabelMap2 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkLabelMap2 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_PopFrontInput(self)

    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterLM2ID2"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterLM2ID2"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterLM2ID2
        
        Create a new object of the class itkImageToImageFilterLM2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterLM2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterLM2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterLM2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterLM2ID2.SetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_SetInput,None,itkImageToImageFilterLM2ID2)
itkImageToImageFilterLM2ID2.GetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_GetInput,None,itkImageToImageFilterLM2ID2)
itkImageToImageFilterLM2ID2.PushBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_PushBackInput,None,itkImageToImageFilterLM2ID2)
itkImageToImageFilterLM2ID2.PopBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_PopBackInput,None,itkImageToImageFilterLM2ID2)
itkImageToImageFilterLM2ID2.PushFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_PushFrontInput,None,itkImageToImageFilterLM2ID2)
itkImageToImageFilterLM2ID2.PopFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_PopFrontInput,None,itkImageToImageFilterLM2ID2)
itkImageToImageFilterLM2ID2.GetPointer = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_GetPointer,None,itkImageToImageFilterLM2ID2)
itkImageToImageFilterLM2ID2_swigregister = _ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_swigregister
itkImageToImageFilterLM2ID2_swigregister(itkImageToImageFilterLM2ID2)

def itkImageToImageFilterLM2ID2_cast(*args):
  """itkImageToImageFilterLM2ID2_cast(itkLightObject obj) -> itkImageToImageFilterLM2ID2"""
  return _ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_cast(*args)

class itkImageToImageFilterLM2IF2(itkImageSourcePython.itkImageSourceIF2):
    """Proxy of C++ itkImageToImageFilterLM2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_InputImageDimension
    OutputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkLabelMap2 image)
        SetInput(self, unsigned int arg0, itkLabelMap2 image)
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkLabelMap2
        GetInput(self, unsigned int idx) -> itkLabelMap2
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkLabelMap2 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkLabelMap2 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_PopFrontInput(self)

    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterLM2IF2"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterLM2IF2"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterLM2IF2
        
        Create a new object of the class itkImageToImageFilterLM2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterLM2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterLM2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterLM2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterLM2IF2.SetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_SetInput,None,itkImageToImageFilterLM2IF2)
itkImageToImageFilterLM2IF2.GetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_GetInput,None,itkImageToImageFilterLM2IF2)
itkImageToImageFilterLM2IF2.PushBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_PushBackInput,None,itkImageToImageFilterLM2IF2)
itkImageToImageFilterLM2IF2.PopBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_PopBackInput,None,itkImageToImageFilterLM2IF2)
itkImageToImageFilterLM2IF2.PushFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_PushFrontInput,None,itkImageToImageFilterLM2IF2)
itkImageToImageFilterLM2IF2.PopFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_PopFrontInput,None,itkImageToImageFilterLM2IF2)
itkImageToImageFilterLM2IF2.GetPointer = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_GetPointer,None,itkImageToImageFilterLM2IF2)
itkImageToImageFilterLM2IF2_swigregister = _ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_swigregister
itkImageToImageFilterLM2IF2_swigregister(itkImageToImageFilterLM2IF2)

def itkImageToImageFilterLM2IF2_cast(*args):
  """itkImageToImageFilterLM2IF2_cast(itkLightObject obj) -> itkImageToImageFilterLM2IF2"""
  return _ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_cast(*args)

class itkImageToImageFilterLM2IRGBUS2(itkImageSourcePython.itkImageSourceIRGBUS2):
    """Proxy of C++ itkImageToImageFilterLM2IRGBUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUS2_InputImageDimension
    OutputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkLabelMap2 image)
        SetInput(self, unsigned int arg0, itkLabelMap2 image)
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkLabelMap2
        GetInput(self, unsigned int idx) -> itkLabelMap2
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkLabelMap2 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkLabelMap2 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUS2_PopFrontInput(self)

    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM2IRGBUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterLM2IRGBUS2"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterLM2IRGBUS2"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterLM2IRGBUS2
        
        Create a new object of the class itkImageToImageFilterLM2IRGBUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterLM2IRGBUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterLM2IRGBUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterLM2IRGBUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterLM2IRGBUS2.SetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUS2_SetInput,None,itkImageToImageFilterLM2IRGBUS2)
itkImageToImageFilterLM2IRGBUS2.GetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUS2_GetInput,None,itkImageToImageFilterLM2IRGBUS2)
itkImageToImageFilterLM2IRGBUS2.PushBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUS2_PushBackInput,None,itkImageToImageFilterLM2IRGBUS2)
itkImageToImageFilterLM2IRGBUS2.PopBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUS2_PopBackInput,None,itkImageToImageFilterLM2IRGBUS2)
itkImageToImageFilterLM2IRGBUS2.PushFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUS2_PushFrontInput,None,itkImageToImageFilterLM2IRGBUS2)
itkImageToImageFilterLM2IRGBUS2.PopFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUS2_PopFrontInput,None,itkImageToImageFilterLM2IRGBUS2)
itkImageToImageFilterLM2IRGBUS2.GetPointer = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUS2_GetPointer,None,itkImageToImageFilterLM2IRGBUS2)
itkImageToImageFilterLM2IRGBUS2_swigregister = _ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUS2_swigregister
itkImageToImageFilterLM2IRGBUS2_swigregister(itkImageToImageFilterLM2IRGBUS2)

def itkImageToImageFilterLM2IRGBUS2_cast(*args):
  """itkImageToImageFilterLM2IRGBUS2_cast(itkLightObject obj) -> itkImageToImageFilterLM2IRGBUS2"""
  return _ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUS2_cast(*args)

class itkImageToImageFilterLM2IUC2(itkImageSourcePython.itkImageSourceIUC2):
    """Proxy of C++ itkImageToImageFilterLM2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_InputImageDimension
    OutputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkLabelMap2 image)
        SetInput(self, unsigned int arg0, itkLabelMap2 image)
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkLabelMap2
        GetInput(self, unsigned int idx) -> itkLabelMap2
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkLabelMap2 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkLabelMap2 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_PopFrontInput(self)

    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterLM2IUC2"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterLM2IUC2"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterLM2IUC2
        
        Create a new object of the class itkImageToImageFilterLM2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterLM2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterLM2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterLM2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterLM2IUC2.SetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_SetInput,None,itkImageToImageFilterLM2IUC2)
itkImageToImageFilterLM2IUC2.GetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_GetInput,None,itkImageToImageFilterLM2IUC2)
itkImageToImageFilterLM2IUC2.PushBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_PushBackInput,None,itkImageToImageFilterLM2IUC2)
itkImageToImageFilterLM2IUC2.PopBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_PopBackInput,None,itkImageToImageFilterLM2IUC2)
itkImageToImageFilterLM2IUC2.PushFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_PushFrontInput,None,itkImageToImageFilterLM2IUC2)
itkImageToImageFilterLM2IUC2.PopFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_PopFrontInput,None,itkImageToImageFilterLM2IUC2)
itkImageToImageFilterLM2IUC2.GetPointer = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_GetPointer,None,itkImageToImageFilterLM2IUC2)
itkImageToImageFilterLM2IUC2_swigregister = _ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_swigregister
itkImageToImageFilterLM2IUC2_swigregister(itkImageToImageFilterLM2IUC2)

def itkImageToImageFilterLM2IUC2_cast(*args):
  """itkImageToImageFilterLM2IUC2_cast(itkLightObject obj) -> itkImageToImageFilterLM2IUC2"""
  return _ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_cast(*args)

class itkImageToImageFilterLM2IUL2(itkImageSourcePython.itkImageSourceIUL2):
    """Proxy of C++ itkImageToImageFilterLM2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterLM2IUL2_InputImageDimension
    OutputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterLM2IUL2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkLabelMap2 image)
        SetInput(self, unsigned int arg0, itkLabelMap2 image)
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IUL2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkLabelMap2
        GetInput(self, unsigned int idx) -> itkLabelMap2
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IUL2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkLabelMap2 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IUL2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IUL2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkLabelMap2 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IUL2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IUL2_PopFrontInput(self)

    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterLM2IUL2"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterLM2IUL2"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterLM2IUL2
        
        Create a new object of the class itkImageToImageFilterLM2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterLM2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterLM2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterLM2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterLM2IUL2.SetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUL2_SetInput,None,itkImageToImageFilterLM2IUL2)
itkImageToImageFilterLM2IUL2.GetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUL2_GetInput,None,itkImageToImageFilterLM2IUL2)
itkImageToImageFilterLM2IUL2.PushBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUL2_PushBackInput,None,itkImageToImageFilterLM2IUL2)
itkImageToImageFilterLM2IUL2.PopBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUL2_PopBackInput,None,itkImageToImageFilterLM2IUL2)
itkImageToImageFilterLM2IUL2.PushFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUL2_PushFrontInput,None,itkImageToImageFilterLM2IUL2)
itkImageToImageFilterLM2IUL2.PopFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUL2_PopFrontInput,None,itkImageToImageFilterLM2IUL2)
itkImageToImageFilterLM2IUL2.GetPointer = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUL2_GetPointer,None,itkImageToImageFilterLM2IUL2)
itkImageToImageFilterLM2IUL2_swigregister = _ITKLabelMapBasePython.itkImageToImageFilterLM2IUL2_swigregister
itkImageToImageFilterLM2IUL2_swigregister(itkImageToImageFilterLM2IUL2)

def itkImageToImageFilterLM2IUL2_cast(*args):
  """itkImageToImageFilterLM2IUL2_cast(itkLightObject obj) -> itkImageToImageFilterLM2IUL2"""
  return _ITKLabelMapBasePython.itkImageToImageFilterLM2IUL2_cast(*args)

class itkImageToImageFilterLM2IUS2(itkImageSourcePython.itkImageSourceIUS2):
    """Proxy of C++ itkImageToImageFilterLM2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_InputImageDimension
    OutputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkLabelMap2 image)
        SetInput(self, unsigned int arg0, itkLabelMap2 image)
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkLabelMap2
        GetInput(self, unsigned int idx) -> itkLabelMap2
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkLabelMap2 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkLabelMap2 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_PopFrontInput(self)

    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterLM2IUS2"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterLM2IUS2"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterLM2IUS2
        
        Create a new object of the class itkImageToImageFilterLM2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterLM2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterLM2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterLM2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterLM2IUS2.SetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_SetInput,None,itkImageToImageFilterLM2IUS2)
itkImageToImageFilterLM2IUS2.GetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_GetInput,None,itkImageToImageFilterLM2IUS2)
itkImageToImageFilterLM2IUS2.PushBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_PushBackInput,None,itkImageToImageFilterLM2IUS2)
itkImageToImageFilterLM2IUS2.PopBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_PopBackInput,None,itkImageToImageFilterLM2IUS2)
itkImageToImageFilterLM2IUS2.PushFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_PushFrontInput,None,itkImageToImageFilterLM2IUS2)
itkImageToImageFilterLM2IUS2.PopFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_PopFrontInput,None,itkImageToImageFilterLM2IUS2)
itkImageToImageFilterLM2IUS2.GetPointer = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_GetPointer,None,itkImageToImageFilterLM2IUS2)
itkImageToImageFilterLM2IUS2_swigregister = _ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_swigregister
itkImageToImageFilterLM2IUS2_swigregister(itkImageToImageFilterLM2IUS2)

def itkImageToImageFilterLM2IUS2_cast(*args):
  """itkImageToImageFilterLM2IUS2_cast(itkLightObject obj) -> itkImageToImageFilterLM2IUS2"""
  return _ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_cast(*args)

class itkImageToImageFilterLM2LM2(itkImageSourceLM2):
    """Proxy of C++ itkImageToImageFilterLM2LM2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_InputImageDimension
    OutputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkLabelMap2 image)
        SetInput(self, unsigned int arg0, itkLabelMap2 image)
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkLabelMap2
        GetInput(self, unsigned int idx) -> itkLabelMap2
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkLabelMap2 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkLabelMap2 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_PopFrontInput(self)

    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM2LM2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterLM2LM2"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterLM2LM2"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterLM2LM2
        
        Create a new object of the class itkImageToImageFilterLM2LM2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterLM2LM2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterLM2LM2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterLM2LM2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterLM2LM2.SetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_SetInput,None,itkImageToImageFilterLM2LM2)
itkImageToImageFilterLM2LM2.GetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_GetInput,None,itkImageToImageFilterLM2LM2)
itkImageToImageFilterLM2LM2.PushBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_PushBackInput,None,itkImageToImageFilterLM2LM2)
itkImageToImageFilterLM2LM2.PopBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_PopBackInput,None,itkImageToImageFilterLM2LM2)
itkImageToImageFilterLM2LM2.PushFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_PushFrontInput,None,itkImageToImageFilterLM2LM2)
itkImageToImageFilterLM2LM2.PopFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_PopFrontInput,None,itkImageToImageFilterLM2LM2)
itkImageToImageFilterLM2LM2.GetPointer = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_GetPointer,None,itkImageToImageFilterLM2LM2)
itkImageToImageFilterLM2LM2_swigregister = _ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_swigregister
itkImageToImageFilterLM2LM2_swigregister(itkImageToImageFilterLM2LM2)

def itkImageToImageFilterLM2LM2_cast(*args):
  """itkImageToImageFilterLM2LM2_cast(itkLightObject obj) -> itkImageToImageFilterLM2LM2"""
  return _ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_cast(*args)

class itkImageToImageFilterLM3ID3(itkImageSourcePython.itkImageSourceID3):
    """Proxy of C++ itkImageToImageFilterLM3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_InputImageDimension
    OutputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkLabelMap3 image)
        SetInput(self, unsigned int arg0, itkLabelMap3 image)
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkLabelMap3
        GetInput(self, unsigned int idx) -> itkLabelMap3
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkLabelMap3 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkLabelMap3 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_PopFrontInput(self)

    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterLM3ID3"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterLM3ID3"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterLM3ID3
        
        Create a new object of the class itkImageToImageFilterLM3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterLM3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterLM3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterLM3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterLM3ID3.SetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_SetInput,None,itkImageToImageFilterLM3ID3)
itkImageToImageFilterLM3ID3.GetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_GetInput,None,itkImageToImageFilterLM3ID3)
itkImageToImageFilterLM3ID3.PushBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_PushBackInput,None,itkImageToImageFilterLM3ID3)
itkImageToImageFilterLM3ID3.PopBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_PopBackInput,None,itkImageToImageFilterLM3ID3)
itkImageToImageFilterLM3ID3.PushFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_PushFrontInput,None,itkImageToImageFilterLM3ID3)
itkImageToImageFilterLM3ID3.PopFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_PopFrontInput,None,itkImageToImageFilterLM3ID3)
itkImageToImageFilterLM3ID3.GetPointer = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_GetPointer,None,itkImageToImageFilterLM3ID3)
itkImageToImageFilterLM3ID3_swigregister = _ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_swigregister
itkImageToImageFilterLM3ID3_swigregister(itkImageToImageFilterLM3ID3)

def itkImageToImageFilterLM3ID3_cast(*args):
  """itkImageToImageFilterLM3ID3_cast(itkLightObject obj) -> itkImageToImageFilterLM3ID3"""
  return _ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_cast(*args)

class itkImageToImageFilterLM3IF3(itkImageSourcePython.itkImageSourceIF3):
    """Proxy of C++ itkImageToImageFilterLM3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_InputImageDimension
    OutputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkLabelMap3 image)
        SetInput(self, unsigned int arg0, itkLabelMap3 image)
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkLabelMap3
        GetInput(self, unsigned int idx) -> itkLabelMap3
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkLabelMap3 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkLabelMap3 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_PopFrontInput(self)

    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterLM3IF3"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterLM3IF3"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterLM3IF3
        
        Create a new object of the class itkImageToImageFilterLM3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterLM3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterLM3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterLM3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterLM3IF3.SetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_SetInput,None,itkImageToImageFilterLM3IF3)
itkImageToImageFilterLM3IF3.GetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_GetInput,None,itkImageToImageFilterLM3IF3)
itkImageToImageFilterLM3IF3.PushBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_PushBackInput,None,itkImageToImageFilterLM3IF3)
itkImageToImageFilterLM3IF3.PopBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_PopBackInput,None,itkImageToImageFilterLM3IF3)
itkImageToImageFilterLM3IF3.PushFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_PushFrontInput,None,itkImageToImageFilterLM3IF3)
itkImageToImageFilterLM3IF3.PopFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_PopFrontInput,None,itkImageToImageFilterLM3IF3)
itkImageToImageFilterLM3IF3.GetPointer = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_GetPointer,None,itkImageToImageFilterLM3IF3)
itkImageToImageFilterLM3IF3_swigregister = _ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_swigregister
itkImageToImageFilterLM3IF3_swigregister(itkImageToImageFilterLM3IF3)

def itkImageToImageFilterLM3IF3_cast(*args):
  """itkImageToImageFilterLM3IF3_cast(itkLightObject obj) -> itkImageToImageFilterLM3IF3"""
  return _ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_cast(*args)

class itkImageToImageFilterLM3IRGBUS3(itkImageSourcePython.itkImageSourceIRGBUS3):
    """Proxy of C++ itkImageToImageFilterLM3IRGBUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUS3_InputImageDimension
    OutputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkLabelMap3 image)
        SetInput(self, unsigned int arg0, itkLabelMap3 image)
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkLabelMap3
        GetInput(self, unsigned int idx) -> itkLabelMap3
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkLabelMap3 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkLabelMap3 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUS3_PopFrontInput(self)

    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM3IRGBUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterLM3IRGBUS3"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterLM3IRGBUS3"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterLM3IRGBUS3
        
        Create a new object of the class itkImageToImageFilterLM3IRGBUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterLM3IRGBUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterLM3IRGBUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterLM3IRGBUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterLM3IRGBUS3.SetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUS3_SetInput,None,itkImageToImageFilterLM3IRGBUS3)
itkImageToImageFilterLM3IRGBUS3.GetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUS3_GetInput,None,itkImageToImageFilterLM3IRGBUS3)
itkImageToImageFilterLM3IRGBUS3.PushBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUS3_PushBackInput,None,itkImageToImageFilterLM3IRGBUS3)
itkImageToImageFilterLM3IRGBUS3.PopBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUS3_PopBackInput,None,itkImageToImageFilterLM3IRGBUS3)
itkImageToImageFilterLM3IRGBUS3.PushFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUS3_PushFrontInput,None,itkImageToImageFilterLM3IRGBUS3)
itkImageToImageFilterLM3IRGBUS3.PopFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUS3_PopFrontInput,None,itkImageToImageFilterLM3IRGBUS3)
itkImageToImageFilterLM3IRGBUS3.GetPointer = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUS3_GetPointer,None,itkImageToImageFilterLM3IRGBUS3)
itkImageToImageFilterLM3IRGBUS3_swigregister = _ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUS3_swigregister
itkImageToImageFilterLM3IRGBUS3_swigregister(itkImageToImageFilterLM3IRGBUS3)

def itkImageToImageFilterLM3IRGBUS3_cast(*args):
  """itkImageToImageFilterLM3IRGBUS3_cast(itkLightObject obj) -> itkImageToImageFilterLM3IRGBUS3"""
  return _ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUS3_cast(*args)

class itkImageToImageFilterLM3IUC3(itkImageSourcePython.itkImageSourceIUC3):
    """Proxy of C++ itkImageToImageFilterLM3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_InputImageDimension
    OutputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkLabelMap3 image)
        SetInput(self, unsigned int arg0, itkLabelMap3 image)
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkLabelMap3
        GetInput(self, unsigned int idx) -> itkLabelMap3
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkLabelMap3 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkLabelMap3 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_PopFrontInput(self)

    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterLM3IUC3"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterLM3IUC3"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterLM3IUC3
        
        Create a new object of the class itkImageToImageFilterLM3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterLM3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterLM3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterLM3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterLM3IUC3.SetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_SetInput,None,itkImageToImageFilterLM3IUC3)
itkImageToImageFilterLM3IUC3.GetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_GetInput,None,itkImageToImageFilterLM3IUC3)
itkImageToImageFilterLM3IUC3.PushBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_PushBackInput,None,itkImageToImageFilterLM3IUC3)
itkImageToImageFilterLM3IUC3.PopBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_PopBackInput,None,itkImageToImageFilterLM3IUC3)
itkImageToImageFilterLM3IUC3.PushFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_PushFrontInput,None,itkImageToImageFilterLM3IUC3)
itkImageToImageFilterLM3IUC3.PopFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_PopFrontInput,None,itkImageToImageFilterLM3IUC3)
itkImageToImageFilterLM3IUC3.GetPointer = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_GetPointer,None,itkImageToImageFilterLM3IUC3)
itkImageToImageFilterLM3IUC3_swigregister = _ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_swigregister
itkImageToImageFilterLM3IUC3_swigregister(itkImageToImageFilterLM3IUC3)

def itkImageToImageFilterLM3IUC3_cast(*args):
  """itkImageToImageFilterLM3IUC3_cast(itkLightObject obj) -> itkImageToImageFilterLM3IUC3"""
  return _ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_cast(*args)

class itkImageToImageFilterLM3IUL3(itkImageSourcePython.itkImageSourceIUL3):
    """Proxy of C++ itkImageToImageFilterLM3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterLM3IUL3_InputImageDimension
    OutputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterLM3IUL3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkLabelMap3 image)
        SetInput(self, unsigned int arg0, itkLabelMap3 image)
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IUL3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkLabelMap3
        GetInput(self, unsigned int idx) -> itkLabelMap3
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IUL3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkLabelMap3 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IUL3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IUL3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkLabelMap3 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IUL3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IUL3_PopFrontInput(self)

    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterLM3IUL3"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterLM3IUL3"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterLM3IUL3
        
        Create a new object of the class itkImageToImageFilterLM3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterLM3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterLM3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterLM3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterLM3IUL3.SetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUL3_SetInput,None,itkImageToImageFilterLM3IUL3)
itkImageToImageFilterLM3IUL3.GetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUL3_GetInput,None,itkImageToImageFilterLM3IUL3)
itkImageToImageFilterLM3IUL3.PushBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUL3_PushBackInput,None,itkImageToImageFilterLM3IUL3)
itkImageToImageFilterLM3IUL3.PopBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUL3_PopBackInput,None,itkImageToImageFilterLM3IUL3)
itkImageToImageFilterLM3IUL3.PushFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUL3_PushFrontInput,None,itkImageToImageFilterLM3IUL3)
itkImageToImageFilterLM3IUL3.PopFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUL3_PopFrontInput,None,itkImageToImageFilterLM3IUL3)
itkImageToImageFilterLM3IUL3.GetPointer = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUL3_GetPointer,None,itkImageToImageFilterLM3IUL3)
itkImageToImageFilterLM3IUL3_swigregister = _ITKLabelMapBasePython.itkImageToImageFilterLM3IUL3_swigregister
itkImageToImageFilterLM3IUL3_swigregister(itkImageToImageFilterLM3IUL3)

def itkImageToImageFilterLM3IUL3_cast(*args):
  """itkImageToImageFilterLM3IUL3_cast(itkLightObject obj) -> itkImageToImageFilterLM3IUL3"""
  return _ITKLabelMapBasePython.itkImageToImageFilterLM3IUL3_cast(*args)

class itkImageToImageFilterLM3IUS3(itkImageSourcePython.itkImageSourceIUS3):
    """Proxy of C++ itkImageToImageFilterLM3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_InputImageDimension
    OutputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkLabelMap3 image)
        SetInput(self, unsigned int arg0, itkLabelMap3 image)
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkLabelMap3
        GetInput(self, unsigned int idx) -> itkLabelMap3
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkLabelMap3 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkLabelMap3 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_PopFrontInput(self)

    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterLM3IUS3"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterLM3IUS3"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterLM3IUS3
        
        Create a new object of the class itkImageToImageFilterLM3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterLM3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterLM3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterLM3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterLM3IUS3.SetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_SetInput,None,itkImageToImageFilterLM3IUS3)
itkImageToImageFilterLM3IUS3.GetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_GetInput,None,itkImageToImageFilterLM3IUS3)
itkImageToImageFilterLM3IUS3.PushBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_PushBackInput,None,itkImageToImageFilterLM3IUS3)
itkImageToImageFilterLM3IUS3.PopBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_PopBackInput,None,itkImageToImageFilterLM3IUS3)
itkImageToImageFilterLM3IUS3.PushFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_PushFrontInput,None,itkImageToImageFilterLM3IUS3)
itkImageToImageFilterLM3IUS3.PopFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_PopFrontInput,None,itkImageToImageFilterLM3IUS3)
itkImageToImageFilterLM3IUS3.GetPointer = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_GetPointer,None,itkImageToImageFilterLM3IUS3)
itkImageToImageFilterLM3IUS3_swigregister = _ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_swigregister
itkImageToImageFilterLM3IUS3_swigregister(itkImageToImageFilterLM3IUS3)

def itkImageToImageFilterLM3IUS3_cast(*args):
  """itkImageToImageFilterLM3IUS3_cast(itkLightObject obj) -> itkImageToImageFilterLM3IUS3"""
  return _ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_cast(*args)

class itkImageToImageFilterLM3LM3(itkImageSourceLM3):
    """Proxy of C++ itkImageToImageFilterLM3LM3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_InputImageDimension
    OutputImageDimension = _ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkLabelMap3 image)
        SetInput(self, unsigned int arg0, itkLabelMap3 image)
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkLabelMap3
        GetInput(self, unsigned int idx) -> itkLabelMap3
        """
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkLabelMap3 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkLabelMap3 image)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_PopFrontInput(self)

    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM3LM3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterLM3LM3"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterLM3LM3"""
        return _ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterLM3LM3
        
        Create a new object of the class itkImageToImageFilterLM3LM3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterLM3LM3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterLM3LM3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterLM3LM3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterLM3LM3.SetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_SetInput,None,itkImageToImageFilterLM3LM3)
itkImageToImageFilterLM3LM3.GetInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_GetInput,None,itkImageToImageFilterLM3LM3)
itkImageToImageFilterLM3LM3.PushBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_PushBackInput,None,itkImageToImageFilterLM3LM3)
itkImageToImageFilterLM3LM3.PopBackInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_PopBackInput,None,itkImageToImageFilterLM3LM3)
itkImageToImageFilterLM3LM3.PushFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_PushFrontInput,None,itkImageToImageFilterLM3LM3)
itkImageToImageFilterLM3LM3.PopFrontInput = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_PopFrontInput,None,itkImageToImageFilterLM3LM3)
itkImageToImageFilterLM3LM3.GetPointer = new_instancemethod(_ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_GetPointer,None,itkImageToImageFilterLM3LM3)
itkImageToImageFilterLM3LM3_swigregister = _ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_swigregister
itkImageToImageFilterLM3LM3_swigregister(itkImageToImageFilterLM3LM3)

def itkImageToImageFilterLM3LM3_cast(*args):
  """itkImageToImageFilterLM3LM3_cast(itkLightObject obj) -> itkImageToImageFilterLM3LM3"""
  return _ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_cast(*args)



