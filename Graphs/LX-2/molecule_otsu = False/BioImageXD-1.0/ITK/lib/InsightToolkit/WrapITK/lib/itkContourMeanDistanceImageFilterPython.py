# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkContourMeanDistanceImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkContourMeanDistanceImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkContourMeanDistanceImageFilterPython
            return _itkContourMeanDistanceImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkContourMeanDistanceImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkContourMeanDistanceImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkContourMeanDistanceImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageToImageFilterAPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
def itkContourMeanDistanceImageFilterID3ID3_New():
  return itkContourMeanDistanceImageFilterID3ID3.New()

def itkContourMeanDistanceImageFilterID2ID2_New():
  return itkContourMeanDistanceImageFilterID2ID2.New()

def itkContourMeanDistanceImageFilterIF3IF3_New():
  return itkContourMeanDistanceImageFilterIF3IF3.New()

def itkContourMeanDistanceImageFilterIF2IF2_New():
  return itkContourMeanDistanceImageFilterIF2IF2.New()

def itkContourMeanDistanceImageFilterIUS3IUS3_New():
  return itkContourMeanDistanceImageFilterIUS3IUS3.New()

def itkContourMeanDistanceImageFilterIUS2IUS2_New():
  return itkContourMeanDistanceImageFilterIUS2IUS2.New()

def itkContourMeanDistanceImageFilterIUL3IUL3_New():
  return itkContourMeanDistanceImageFilterIUL3IUL3.New()

def itkContourMeanDistanceImageFilterIUL2IUL2_New():
  return itkContourMeanDistanceImageFilterIUL2IUL2.New()

def itkContourMeanDistanceImageFilterIUC3IUC3_New():
  return itkContourMeanDistanceImageFilterIUC3IUC3.New()

def itkContourMeanDistanceImageFilterIUC2IUC2_New():
  return itkContourMeanDistanceImageFilterIUC2IUC2.New()

class itkContourMeanDistanceImageFilterID2ID2(itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    """Proxy of C++ itkContourMeanDistanceImageFilterID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID2ID2_ImageDimension
    InputHasNumericTraitsCheck = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID2ID2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageD2 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID2ID2_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageD2 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID2ID2_SetInput2(self, *args)

    def GetInput1(self):
        """GetInput1(self) -> itkImageD2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID2ID2_GetInput1(self)

    def GetInput2(self):
        """GetInput2(self) -> itkImageD2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID2ID2_GetInput2(self)

    def GetMeanDistance(self):
        """GetMeanDistance(self) -> double"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID2ID2_GetMeanDistance(self)

    __swig_destroy__ = _itkContourMeanDistanceImageFilterPython.delete_itkContourMeanDistanceImageFilterID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterID2ID2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkContourMeanDistanceImageFilterID2ID2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkContourMeanDistanceImageFilterID2ID2
        
        Create a new object of the class itkContourMeanDistanceImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkContourMeanDistanceImageFilterID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkContourMeanDistanceImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourMeanDistanceImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourMeanDistanceImageFilterID2ID2.SetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID2ID2_SetInput1,None,itkContourMeanDistanceImageFilterID2ID2)
itkContourMeanDistanceImageFilterID2ID2.SetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID2ID2_SetInput2,None,itkContourMeanDistanceImageFilterID2ID2)
itkContourMeanDistanceImageFilterID2ID2.GetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID2ID2_GetInput1,None,itkContourMeanDistanceImageFilterID2ID2)
itkContourMeanDistanceImageFilterID2ID2.GetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID2ID2_GetInput2,None,itkContourMeanDistanceImageFilterID2ID2)
itkContourMeanDistanceImageFilterID2ID2.GetMeanDistance = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID2ID2_GetMeanDistance,None,itkContourMeanDistanceImageFilterID2ID2)
itkContourMeanDistanceImageFilterID2ID2.GetPointer = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID2ID2_GetPointer,None,itkContourMeanDistanceImageFilterID2ID2)
itkContourMeanDistanceImageFilterID2ID2_swigregister = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID2ID2_swigregister
itkContourMeanDistanceImageFilterID2ID2_swigregister(itkContourMeanDistanceImageFilterID2ID2)

def itkContourMeanDistanceImageFilterID2ID2___New_orig__():
  """itkContourMeanDistanceImageFilterID2ID2___New_orig__()"""
  return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID2ID2___New_orig__()

def itkContourMeanDistanceImageFilterID2ID2_cast(*args):
  """itkContourMeanDistanceImageFilterID2ID2_cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterID2ID2"""
  return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID2ID2_cast(*args)

class itkContourMeanDistanceImageFilterID3ID3(itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    """Proxy of C++ itkContourMeanDistanceImageFilterID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID3ID3_ImageDimension
    InputHasNumericTraitsCheck = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID3ID3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageD3 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID3ID3_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageD3 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID3ID3_SetInput2(self, *args)

    def GetInput1(self):
        """GetInput1(self) -> itkImageD3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID3ID3_GetInput1(self)

    def GetInput2(self):
        """GetInput2(self) -> itkImageD3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID3ID3_GetInput2(self)

    def GetMeanDistance(self):
        """GetMeanDistance(self) -> double"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID3ID3_GetMeanDistance(self)

    __swig_destroy__ = _itkContourMeanDistanceImageFilterPython.delete_itkContourMeanDistanceImageFilterID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterID3ID3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkContourMeanDistanceImageFilterID3ID3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkContourMeanDistanceImageFilterID3ID3
        
        Create a new object of the class itkContourMeanDistanceImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkContourMeanDistanceImageFilterID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkContourMeanDistanceImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourMeanDistanceImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourMeanDistanceImageFilterID3ID3.SetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID3ID3_SetInput1,None,itkContourMeanDistanceImageFilterID3ID3)
itkContourMeanDistanceImageFilterID3ID3.SetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID3ID3_SetInput2,None,itkContourMeanDistanceImageFilterID3ID3)
itkContourMeanDistanceImageFilterID3ID3.GetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID3ID3_GetInput1,None,itkContourMeanDistanceImageFilterID3ID3)
itkContourMeanDistanceImageFilterID3ID3.GetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID3ID3_GetInput2,None,itkContourMeanDistanceImageFilterID3ID3)
itkContourMeanDistanceImageFilterID3ID3.GetMeanDistance = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID3ID3_GetMeanDistance,None,itkContourMeanDistanceImageFilterID3ID3)
itkContourMeanDistanceImageFilterID3ID3.GetPointer = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID3ID3_GetPointer,None,itkContourMeanDistanceImageFilterID3ID3)
itkContourMeanDistanceImageFilterID3ID3_swigregister = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID3ID3_swigregister
itkContourMeanDistanceImageFilterID3ID3_swigregister(itkContourMeanDistanceImageFilterID3ID3)

def itkContourMeanDistanceImageFilterID3ID3___New_orig__():
  """itkContourMeanDistanceImageFilterID3ID3___New_orig__()"""
  return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID3ID3___New_orig__()

def itkContourMeanDistanceImageFilterID3ID3_cast(*args):
  """itkContourMeanDistanceImageFilterID3ID3_cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterID3ID3"""
  return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterID3ID3_cast(*args)

class itkContourMeanDistanceImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkContourMeanDistanceImageFilterIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_ImageDimension
    InputHasNumericTraitsCheck = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageF2 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageF2 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_SetInput2(self, *args)

    def GetInput1(self):
        """GetInput1(self) -> itkImageF2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_GetInput1(self)

    def GetInput2(self):
        """GetInput2(self) -> itkImageF2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_GetInput2(self)

    def GetMeanDistance(self):
        """GetMeanDistance(self) -> double"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_GetMeanDistance(self)

    __swig_destroy__ = _itkContourMeanDistanceImageFilterPython.delete_itkContourMeanDistanceImageFilterIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterIF2IF2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkContourMeanDistanceImageFilterIF2IF2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkContourMeanDistanceImageFilterIF2IF2
        
        Create a new object of the class itkContourMeanDistanceImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkContourMeanDistanceImageFilterIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkContourMeanDistanceImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourMeanDistanceImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourMeanDistanceImageFilterIF2IF2.SetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_SetInput1,None,itkContourMeanDistanceImageFilterIF2IF2)
itkContourMeanDistanceImageFilterIF2IF2.SetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_SetInput2,None,itkContourMeanDistanceImageFilterIF2IF2)
itkContourMeanDistanceImageFilterIF2IF2.GetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_GetInput1,None,itkContourMeanDistanceImageFilterIF2IF2)
itkContourMeanDistanceImageFilterIF2IF2.GetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_GetInput2,None,itkContourMeanDistanceImageFilterIF2IF2)
itkContourMeanDistanceImageFilterIF2IF2.GetMeanDistance = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_GetMeanDistance,None,itkContourMeanDistanceImageFilterIF2IF2)
itkContourMeanDistanceImageFilterIF2IF2.GetPointer = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_GetPointer,None,itkContourMeanDistanceImageFilterIF2IF2)
itkContourMeanDistanceImageFilterIF2IF2_swigregister = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_swigregister
itkContourMeanDistanceImageFilterIF2IF2_swigregister(itkContourMeanDistanceImageFilterIF2IF2)

def itkContourMeanDistanceImageFilterIF2IF2___New_orig__():
  """itkContourMeanDistanceImageFilterIF2IF2___New_orig__()"""
  return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2___New_orig__()

def itkContourMeanDistanceImageFilterIF2IF2_cast(*args):
  """itkContourMeanDistanceImageFilterIF2IF2_cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterIF2IF2"""
  return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF2IF2_cast(*args)

class itkContourMeanDistanceImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkContourMeanDistanceImageFilterIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_ImageDimension
    InputHasNumericTraitsCheck = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageF3 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageF3 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_SetInput2(self, *args)

    def GetInput1(self):
        """GetInput1(self) -> itkImageF3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_GetInput1(self)

    def GetInput2(self):
        """GetInput2(self) -> itkImageF3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_GetInput2(self)

    def GetMeanDistance(self):
        """GetMeanDistance(self) -> double"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_GetMeanDistance(self)

    __swig_destroy__ = _itkContourMeanDistanceImageFilterPython.delete_itkContourMeanDistanceImageFilterIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterIF3IF3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkContourMeanDistanceImageFilterIF3IF3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkContourMeanDistanceImageFilterIF3IF3
        
        Create a new object of the class itkContourMeanDistanceImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkContourMeanDistanceImageFilterIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkContourMeanDistanceImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourMeanDistanceImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourMeanDistanceImageFilterIF3IF3.SetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_SetInput1,None,itkContourMeanDistanceImageFilterIF3IF3)
itkContourMeanDistanceImageFilterIF3IF3.SetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_SetInput2,None,itkContourMeanDistanceImageFilterIF3IF3)
itkContourMeanDistanceImageFilterIF3IF3.GetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_GetInput1,None,itkContourMeanDistanceImageFilterIF3IF3)
itkContourMeanDistanceImageFilterIF3IF3.GetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_GetInput2,None,itkContourMeanDistanceImageFilterIF3IF3)
itkContourMeanDistanceImageFilterIF3IF3.GetMeanDistance = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_GetMeanDistance,None,itkContourMeanDistanceImageFilterIF3IF3)
itkContourMeanDistanceImageFilterIF3IF3.GetPointer = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_GetPointer,None,itkContourMeanDistanceImageFilterIF3IF3)
itkContourMeanDistanceImageFilterIF3IF3_swigregister = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_swigregister
itkContourMeanDistanceImageFilterIF3IF3_swigregister(itkContourMeanDistanceImageFilterIF3IF3)

def itkContourMeanDistanceImageFilterIF3IF3___New_orig__():
  """itkContourMeanDistanceImageFilterIF3IF3___New_orig__()"""
  return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3___New_orig__()

def itkContourMeanDistanceImageFilterIF3IF3_cast(*args):
  """itkContourMeanDistanceImageFilterIF3IF3_cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterIF3IF3"""
  return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIF3IF3_cast(*args)

class itkContourMeanDistanceImageFilterIUC2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """Proxy of C++ itkContourMeanDistanceImageFilterIUC2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IUC2_ImageDimension
    InputHasNumericTraitsCheck = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageUC2 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IUC2_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageUC2 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IUC2_SetInput2(self, *args)

    def GetInput1(self):
        """GetInput1(self) -> itkImageUC2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IUC2_GetInput1(self)

    def GetInput2(self):
        """GetInput2(self) -> itkImageUC2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IUC2_GetInput2(self)

    def GetMeanDistance(self):
        """GetMeanDistance(self) -> double"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IUC2_GetMeanDistance(self)

    __swig_destroy__ = _itkContourMeanDistanceImageFilterPython.delete_itkContourMeanDistanceImageFilterIUC2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterIUC2IUC2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkContourMeanDistanceImageFilterIUC2IUC2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkContourMeanDistanceImageFilterIUC2IUC2
        
        Create a new object of the class itkContourMeanDistanceImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkContourMeanDistanceImageFilterIUC2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkContourMeanDistanceImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourMeanDistanceImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourMeanDistanceImageFilterIUC2IUC2.SetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IUC2_SetInput1,None,itkContourMeanDistanceImageFilterIUC2IUC2)
itkContourMeanDistanceImageFilterIUC2IUC2.SetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IUC2_SetInput2,None,itkContourMeanDistanceImageFilterIUC2IUC2)
itkContourMeanDistanceImageFilterIUC2IUC2.GetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IUC2_GetInput1,None,itkContourMeanDistanceImageFilterIUC2IUC2)
itkContourMeanDistanceImageFilterIUC2IUC2.GetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IUC2_GetInput2,None,itkContourMeanDistanceImageFilterIUC2IUC2)
itkContourMeanDistanceImageFilterIUC2IUC2.GetMeanDistance = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IUC2_GetMeanDistance,None,itkContourMeanDistanceImageFilterIUC2IUC2)
itkContourMeanDistanceImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IUC2_GetPointer,None,itkContourMeanDistanceImageFilterIUC2IUC2)
itkContourMeanDistanceImageFilterIUC2IUC2_swigregister = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IUC2_swigregister
itkContourMeanDistanceImageFilterIUC2IUC2_swigregister(itkContourMeanDistanceImageFilterIUC2IUC2)

def itkContourMeanDistanceImageFilterIUC2IUC2___New_orig__():
  """itkContourMeanDistanceImageFilterIUC2IUC2___New_orig__()"""
  return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IUC2___New_orig__()

def itkContourMeanDistanceImageFilterIUC2IUC2_cast(*args):
  """itkContourMeanDistanceImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterIUC2IUC2"""
  return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC2IUC2_cast(*args)

class itkContourMeanDistanceImageFilterIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """Proxy of C++ itkContourMeanDistanceImageFilterIUC3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IUC3_ImageDimension
    InputHasNumericTraitsCheck = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageUC3 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IUC3_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageUC3 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IUC3_SetInput2(self, *args)

    def GetInput1(self):
        """GetInput1(self) -> itkImageUC3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IUC3_GetInput1(self)

    def GetInput2(self):
        """GetInput2(self) -> itkImageUC3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IUC3_GetInput2(self)

    def GetMeanDistance(self):
        """GetMeanDistance(self) -> double"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IUC3_GetMeanDistance(self)

    __swig_destroy__ = _itkContourMeanDistanceImageFilterPython.delete_itkContourMeanDistanceImageFilterIUC3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterIUC3IUC3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkContourMeanDistanceImageFilterIUC3IUC3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkContourMeanDistanceImageFilterIUC3IUC3
        
        Create a new object of the class itkContourMeanDistanceImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkContourMeanDistanceImageFilterIUC3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkContourMeanDistanceImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourMeanDistanceImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourMeanDistanceImageFilterIUC3IUC3.SetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IUC3_SetInput1,None,itkContourMeanDistanceImageFilterIUC3IUC3)
itkContourMeanDistanceImageFilterIUC3IUC3.SetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IUC3_SetInput2,None,itkContourMeanDistanceImageFilterIUC3IUC3)
itkContourMeanDistanceImageFilterIUC3IUC3.GetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IUC3_GetInput1,None,itkContourMeanDistanceImageFilterIUC3IUC3)
itkContourMeanDistanceImageFilterIUC3IUC3.GetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IUC3_GetInput2,None,itkContourMeanDistanceImageFilterIUC3IUC3)
itkContourMeanDistanceImageFilterIUC3IUC3.GetMeanDistance = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IUC3_GetMeanDistance,None,itkContourMeanDistanceImageFilterIUC3IUC3)
itkContourMeanDistanceImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IUC3_GetPointer,None,itkContourMeanDistanceImageFilterIUC3IUC3)
itkContourMeanDistanceImageFilterIUC3IUC3_swigregister = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IUC3_swigregister
itkContourMeanDistanceImageFilterIUC3IUC3_swigregister(itkContourMeanDistanceImageFilterIUC3IUC3)

def itkContourMeanDistanceImageFilterIUC3IUC3___New_orig__():
  """itkContourMeanDistanceImageFilterIUC3IUC3___New_orig__()"""
  return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IUC3___New_orig__()

def itkContourMeanDistanceImageFilterIUC3IUC3_cast(*args):
  """itkContourMeanDistanceImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterIUC3IUC3"""
  return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUC3IUC3_cast(*args)

class itkContourMeanDistanceImageFilterIUL2IUL2(itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2):
    """Proxy of C++ itkContourMeanDistanceImageFilterIUL2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL2IUL2_ImageDimension
    InputHasNumericTraitsCheck = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL2IUL2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageUL2 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL2IUL2_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageUL2 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL2IUL2_SetInput2(self, *args)

    def GetInput1(self):
        """GetInput1(self) -> itkImageUL2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL2IUL2_GetInput1(self)

    def GetInput2(self):
        """GetInput2(self) -> itkImageUL2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL2IUL2_GetInput2(self)

    def GetMeanDistance(self):
        """GetMeanDistance(self) -> double"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL2IUL2_GetMeanDistance(self)

    __swig_destroy__ = _itkContourMeanDistanceImageFilterPython.delete_itkContourMeanDistanceImageFilterIUL2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterIUL2IUL2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkContourMeanDistanceImageFilterIUL2IUL2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkContourMeanDistanceImageFilterIUL2IUL2
        
        Create a new object of the class itkContourMeanDistanceImageFilterIUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkContourMeanDistanceImageFilterIUL2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkContourMeanDistanceImageFilterIUL2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourMeanDistanceImageFilterIUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourMeanDistanceImageFilterIUL2IUL2.SetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL2IUL2_SetInput1,None,itkContourMeanDistanceImageFilterIUL2IUL2)
itkContourMeanDistanceImageFilterIUL2IUL2.SetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL2IUL2_SetInput2,None,itkContourMeanDistanceImageFilterIUL2IUL2)
itkContourMeanDistanceImageFilterIUL2IUL2.GetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL2IUL2_GetInput1,None,itkContourMeanDistanceImageFilterIUL2IUL2)
itkContourMeanDistanceImageFilterIUL2IUL2.GetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL2IUL2_GetInput2,None,itkContourMeanDistanceImageFilterIUL2IUL2)
itkContourMeanDistanceImageFilterIUL2IUL2.GetMeanDistance = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL2IUL2_GetMeanDistance,None,itkContourMeanDistanceImageFilterIUL2IUL2)
itkContourMeanDistanceImageFilterIUL2IUL2.GetPointer = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL2IUL2_GetPointer,None,itkContourMeanDistanceImageFilterIUL2IUL2)
itkContourMeanDistanceImageFilterIUL2IUL2_swigregister = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL2IUL2_swigregister
itkContourMeanDistanceImageFilterIUL2IUL2_swigregister(itkContourMeanDistanceImageFilterIUL2IUL2)

def itkContourMeanDistanceImageFilterIUL2IUL2___New_orig__():
  """itkContourMeanDistanceImageFilterIUL2IUL2___New_orig__()"""
  return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL2IUL2___New_orig__()

def itkContourMeanDistanceImageFilterIUL2IUL2_cast(*args):
  """itkContourMeanDistanceImageFilterIUL2IUL2_cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterIUL2IUL2"""
  return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL2IUL2_cast(*args)

class itkContourMeanDistanceImageFilterIUL3IUL3(itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3):
    """Proxy of C++ itkContourMeanDistanceImageFilterIUL3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL3IUL3_ImageDimension
    InputHasNumericTraitsCheck = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL3IUL3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageUL3 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL3IUL3_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageUL3 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL3IUL3_SetInput2(self, *args)

    def GetInput1(self):
        """GetInput1(self) -> itkImageUL3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL3IUL3_GetInput1(self)

    def GetInput2(self):
        """GetInput2(self) -> itkImageUL3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL3IUL3_GetInput2(self)

    def GetMeanDistance(self):
        """GetMeanDistance(self) -> double"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL3IUL3_GetMeanDistance(self)

    __swig_destroy__ = _itkContourMeanDistanceImageFilterPython.delete_itkContourMeanDistanceImageFilterIUL3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterIUL3IUL3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkContourMeanDistanceImageFilterIUL3IUL3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkContourMeanDistanceImageFilterIUL3IUL3
        
        Create a new object of the class itkContourMeanDistanceImageFilterIUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkContourMeanDistanceImageFilterIUL3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkContourMeanDistanceImageFilterIUL3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourMeanDistanceImageFilterIUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourMeanDistanceImageFilterIUL3IUL3.SetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL3IUL3_SetInput1,None,itkContourMeanDistanceImageFilterIUL3IUL3)
itkContourMeanDistanceImageFilterIUL3IUL3.SetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL3IUL3_SetInput2,None,itkContourMeanDistanceImageFilterIUL3IUL3)
itkContourMeanDistanceImageFilterIUL3IUL3.GetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL3IUL3_GetInput1,None,itkContourMeanDistanceImageFilterIUL3IUL3)
itkContourMeanDistanceImageFilterIUL3IUL3.GetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL3IUL3_GetInput2,None,itkContourMeanDistanceImageFilterIUL3IUL3)
itkContourMeanDistanceImageFilterIUL3IUL3.GetMeanDistance = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL3IUL3_GetMeanDistance,None,itkContourMeanDistanceImageFilterIUL3IUL3)
itkContourMeanDistanceImageFilterIUL3IUL3.GetPointer = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL3IUL3_GetPointer,None,itkContourMeanDistanceImageFilterIUL3IUL3)
itkContourMeanDistanceImageFilterIUL3IUL3_swigregister = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL3IUL3_swigregister
itkContourMeanDistanceImageFilterIUL3IUL3_swigregister(itkContourMeanDistanceImageFilterIUL3IUL3)

def itkContourMeanDistanceImageFilterIUL3IUL3___New_orig__():
  """itkContourMeanDistanceImageFilterIUL3IUL3___New_orig__()"""
  return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL3IUL3___New_orig__()

def itkContourMeanDistanceImageFilterIUL3IUL3_cast(*args):
  """itkContourMeanDistanceImageFilterIUL3IUL3_cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterIUL3IUL3"""
  return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUL3IUL3_cast(*args)

class itkContourMeanDistanceImageFilterIUS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """Proxy of C++ itkContourMeanDistanceImageFilterIUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IUS2_ImageDimension
    InputHasNumericTraitsCheck = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageUS2 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IUS2_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageUS2 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IUS2_SetInput2(self, *args)

    def GetInput1(self):
        """GetInput1(self) -> itkImageUS2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IUS2_GetInput1(self)

    def GetInput2(self):
        """GetInput2(self) -> itkImageUS2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IUS2_GetInput2(self)

    def GetMeanDistance(self):
        """GetMeanDistance(self) -> double"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IUS2_GetMeanDistance(self)

    __swig_destroy__ = _itkContourMeanDistanceImageFilterPython.delete_itkContourMeanDistanceImageFilterIUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterIUS2IUS2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkContourMeanDistanceImageFilterIUS2IUS2"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkContourMeanDistanceImageFilterIUS2IUS2
        
        Create a new object of the class itkContourMeanDistanceImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkContourMeanDistanceImageFilterIUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkContourMeanDistanceImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourMeanDistanceImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourMeanDistanceImageFilterIUS2IUS2.SetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IUS2_SetInput1,None,itkContourMeanDistanceImageFilterIUS2IUS2)
itkContourMeanDistanceImageFilterIUS2IUS2.SetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IUS2_SetInput2,None,itkContourMeanDistanceImageFilterIUS2IUS2)
itkContourMeanDistanceImageFilterIUS2IUS2.GetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IUS2_GetInput1,None,itkContourMeanDistanceImageFilterIUS2IUS2)
itkContourMeanDistanceImageFilterIUS2IUS2.GetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IUS2_GetInput2,None,itkContourMeanDistanceImageFilterIUS2IUS2)
itkContourMeanDistanceImageFilterIUS2IUS2.GetMeanDistance = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IUS2_GetMeanDistance,None,itkContourMeanDistanceImageFilterIUS2IUS2)
itkContourMeanDistanceImageFilterIUS2IUS2.GetPointer = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IUS2_GetPointer,None,itkContourMeanDistanceImageFilterIUS2IUS2)
itkContourMeanDistanceImageFilterIUS2IUS2_swigregister = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IUS2_swigregister
itkContourMeanDistanceImageFilterIUS2IUS2_swigregister(itkContourMeanDistanceImageFilterIUS2IUS2)

def itkContourMeanDistanceImageFilterIUS2IUS2___New_orig__():
  """itkContourMeanDistanceImageFilterIUS2IUS2___New_orig__()"""
  return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IUS2___New_orig__()

def itkContourMeanDistanceImageFilterIUS2IUS2_cast(*args):
  """itkContourMeanDistanceImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterIUS2IUS2"""
  return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS2IUS2_cast(*args)

class itkContourMeanDistanceImageFilterIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """Proxy of C++ itkContourMeanDistanceImageFilterIUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IUS3_ImageDimension
    InputHasNumericTraitsCheck = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageUS3 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IUS3_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageUS3 image)"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IUS3_SetInput2(self, *args)

    def GetInput1(self):
        """GetInput1(self) -> itkImageUS3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IUS3_GetInput1(self)

    def GetInput2(self):
        """GetInput2(self) -> itkImageUS3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IUS3_GetInput2(self)

    def GetMeanDistance(self):
        """GetMeanDistance(self) -> double"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IUS3_GetMeanDistance(self)

    __swig_destroy__ = _itkContourMeanDistanceImageFilterPython.delete_itkContourMeanDistanceImageFilterIUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterIUS3IUS3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkContourMeanDistanceImageFilterIUS3IUS3"""
        return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkContourMeanDistanceImageFilterIUS3IUS3
        
        Create a new object of the class itkContourMeanDistanceImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkContourMeanDistanceImageFilterIUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkContourMeanDistanceImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourMeanDistanceImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourMeanDistanceImageFilterIUS3IUS3.SetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IUS3_SetInput1,None,itkContourMeanDistanceImageFilterIUS3IUS3)
itkContourMeanDistanceImageFilterIUS3IUS3.SetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IUS3_SetInput2,None,itkContourMeanDistanceImageFilterIUS3IUS3)
itkContourMeanDistanceImageFilterIUS3IUS3.GetInput1 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IUS3_GetInput1,None,itkContourMeanDistanceImageFilterIUS3IUS3)
itkContourMeanDistanceImageFilterIUS3IUS3.GetInput2 = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IUS3_GetInput2,None,itkContourMeanDistanceImageFilterIUS3IUS3)
itkContourMeanDistanceImageFilterIUS3IUS3.GetMeanDistance = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IUS3_GetMeanDistance,None,itkContourMeanDistanceImageFilterIUS3IUS3)
itkContourMeanDistanceImageFilterIUS3IUS3.GetPointer = new_instancemethod(_itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IUS3_GetPointer,None,itkContourMeanDistanceImageFilterIUS3IUS3)
itkContourMeanDistanceImageFilterIUS3IUS3_swigregister = _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IUS3_swigregister
itkContourMeanDistanceImageFilterIUS3IUS3_swigregister(itkContourMeanDistanceImageFilterIUS3IUS3)

def itkContourMeanDistanceImageFilterIUS3IUS3___New_orig__():
  """itkContourMeanDistanceImageFilterIUS3IUS3___New_orig__()"""
  return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IUS3___New_orig__()

def itkContourMeanDistanceImageFilterIUS3IUS3_cast(*args):
  """itkContourMeanDistanceImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkContourMeanDistanceImageFilterIUS3IUS3"""
  return _itkContourMeanDistanceImageFilterPython.itkContourMeanDistanceImageFilterIUS3IUS3_cast(*args)



