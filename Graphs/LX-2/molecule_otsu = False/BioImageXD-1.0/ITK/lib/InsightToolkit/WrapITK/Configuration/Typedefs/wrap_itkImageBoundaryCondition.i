// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkImageBoundaryConditionChicken
#endif
#ifdef SWIGCSHARP
%module itkImageBoundaryConditionCsharp
#endif
#ifdef SWIGGUILE
%module itkImageBoundaryConditionGuile
#endif
#ifdef SWIGJAVA
%module itkImageBoundaryConditionJava
#endif
#ifdef SWIGLUA
%module itkImageBoundaryConditionLua
#endif
#ifdef SWIGMODULA3
%module itkImageBoundaryConditionModula3
#endif
#ifdef SWIGMZSCHEME
%module itkImageBoundaryConditionMzscheme
#endif
#ifdef SWIGOCAML
%module itkImageBoundaryConditionOcaml
#endif
#ifdef SWIGPERL
%module itkImageBoundaryConditionPerl
#endif
#ifdef SWIGPERL5
%module itkImageBoundaryConditionPerl5
#endif
#ifdef SWIGPHP
%module itkImageBoundaryConditionPhp
#endif
#ifdef SWIGPHP4
%module itkImageBoundaryConditionPhp4
#endif
#ifdef SWIGPHP5
%module itkImageBoundaryConditionPhp5
#endif
#ifdef SWIGPIKE
%module itkImageBoundaryConditionPike
#endif
#ifdef SWIGPYTHON
%module itkImageBoundaryConditionPython
#endif
#ifdef SWIGR
%module itkImageBoundaryConditionR
#endif
#ifdef SWIGRUBY
%module itkImageBoundaryConditionRuby
#endif
#ifdef SWIGSEXP
%module itkImageBoundaryConditionSexp
#endif
#ifdef SWIGTCL
%module itkImageBoundaryConditionTcl
#endif
#ifdef SWIGXML
%module itkImageBoundaryConditionXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
%}


%{
%}




%import wrap_itkCovariantVector.i
%import wrap_vcl_complex.i
%import wrap_itkOffset.i
%import wrap_itkVector.i
%import wrap_itkRGBAPixel.i
%import wrap_itkRGBPixel.i


%include itk.i
%include wrap_itkImageBoundaryCondition_ext.i


 class itkImageBoundaryConditionICF2 {
   public:
     enum  {  ImageDimension = 2 };
     itkImageBoundaryConditionICF2 & operator=(itkImageBoundaryConditionICF2 const & arg0);
     itkImageBoundaryConditionICF2(itkImageBoundaryConditionICF2 const & arg0);
     itkImageBoundaryConditionICF2();
     virtual vcl_complexF operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< std::complex< float >*, 2u, itk::NeighborhoodAllocator< std::complex< float >* > > const * data) const = 0;
     virtual vcl_complexF operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< std::complex< float >*, 2u, itk::NeighborhoodAllocator< std::complex< float >* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< std::complex< float >, 2u > > const & neighborhoodAccessorFunctor) const = 0;
     ~itkImageBoundaryConditionICF2();
     virtual bool RequiresCompleteNeighborhood();
   private:
   protected:
 };


 class itkImageBoundaryConditionICF3 {
   public:
     enum  {  ImageDimension = 3 };
     itkImageBoundaryConditionICF3 & operator=(itkImageBoundaryConditionICF3 const & arg0);
     itkImageBoundaryConditionICF3(itkImageBoundaryConditionICF3 const & arg0);
     itkImageBoundaryConditionICF3();
     virtual vcl_complexF operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< std::complex< float >*, 3u, itk::NeighborhoodAllocator< std::complex< float >* > > const * data) const = 0;
     virtual vcl_complexF operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< std::complex< float >*, 3u, itk::NeighborhoodAllocator< std::complex< float >* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< std::complex< float >, 3u > > const & neighborhoodAccessorFunctor) const = 0;
     ~itkImageBoundaryConditionICF3();
     virtual bool RequiresCompleteNeighborhood();
   private:
   protected:
 };


 class itkImageBoundaryConditionICVF22 {
   public:
     enum  {  ImageDimension = 2 };
     itkImageBoundaryConditionICVF22 & operator=(itkImageBoundaryConditionICVF22 const & arg0);
     itkImageBoundaryConditionICVF22(itkImageBoundaryConditionICVF22 const & arg0);
     itkImageBoundaryConditionICVF22();
     virtual itkCovariantVectorF2 operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< itk::CovariantVector< float, 2u >*, 2u, itk::NeighborhoodAllocator< itk::CovariantVector< float, 2u >* > > const * data) const = 0;
     virtual itkCovariantVectorF2 operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< itk::CovariantVector< float, 2u >*, 2u, itk::NeighborhoodAllocator< itk::CovariantVector< float, 2u >* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< itk::CovariantVector< float, 2u >, 2u > > const & neighborhoodAccessorFunctor) const = 0;
     ~itkImageBoundaryConditionICVF22();
     virtual bool RequiresCompleteNeighborhood();
   private:
   protected:
 };


 class itkImageBoundaryConditionICVF33 {
   public:
     enum  {  ImageDimension = 3 };
     itkImageBoundaryConditionICVF33 & operator=(itkImageBoundaryConditionICVF33 const & arg0);
     itkImageBoundaryConditionICVF33(itkImageBoundaryConditionICVF33 const & arg0);
     itkImageBoundaryConditionICVF33();
     virtual itkCovariantVectorF3 operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< itk::CovariantVector< float, 3u >*, 3u, itk::NeighborhoodAllocator< itk::CovariantVector< float, 3u >* > > const * data) const = 0;
     virtual itkCovariantVectorF3 operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< itk::CovariantVector< float, 3u >*, 3u, itk::NeighborhoodAllocator< itk::CovariantVector< float, 3u >* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< itk::CovariantVector< float, 3u >, 3u > > const & neighborhoodAccessorFunctor) const = 0;
     ~itkImageBoundaryConditionICVF33();
     virtual bool RequiresCompleteNeighborhood();
   private:
   protected:
 };


 class itkImageBoundaryConditionID2 {
   public:
     enum  {  ImageDimension = 2 };
     itkImageBoundaryConditionID2 & operator=(itkImageBoundaryConditionID2 const & arg0);
     itkImageBoundaryConditionID2(itkImageBoundaryConditionID2 const & arg0);
     itkImageBoundaryConditionID2();
     virtual double operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< double*, 2u, itk::NeighborhoodAllocator< double* > > const * data) const = 0;
     virtual double operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< double*, 2u, itk::NeighborhoodAllocator< double* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< double, 2u > > const & neighborhoodAccessorFunctor) const = 0;
     ~itkImageBoundaryConditionID2();
     virtual bool RequiresCompleteNeighborhood();
   private:
   protected:
 };


 class itkImageBoundaryConditionID3 {
   public:
     enum  {  ImageDimension = 3 };
     itkImageBoundaryConditionID3 & operator=(itkImageBoundaryConditionID3 const & arg0);
     itkImageBoundaryConditionID3(itkImageBoundaryConditionID3 const & arg0);
     itkImageBoundaryConditionID3();
     virtual double operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< double*, 3u, itk::NeighborhoodAllocator< double* > > const * data) const = 0;
     virtual double operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< double*, 3u, itk::NeighborhoodAllocator< double* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< double, 3u > > const & neighborhoodAccessorFunctor) const = 0;
     ~itkImageBoundaryConditionID3();
     virtual bool RequiresCompleteNeighborhood();
   private:
   protected:
 };


 class itkImageBoundaryConditionIF2 {
   public:
     enum  {  ImageDimension = 2 };
     itkImageBoundaryConditionIF2 & operator=(itkImageBoundaryConditionIF2 const & arg0);
     itkImageBoundaryConditionIF2(itkImageBoundaryConditionIF2 const & arg0);
     itkImageBoundaryConditionIF2();
     virtual float operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< float*, 2u, itk::NeighborhoodAllocator< float* > > const * data) const = 0;
     virtual float operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< float*, 2u, itk::NeighborhoodAllocator< float* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< float, 2u > > const & neighborhoodAccessorFunctor) const = 0;
     ~itkImageBoundaryConditionIF2();
     virtual bool RequiresCompleteNeighborhood();
   private:
   protected:
 };


 class itkImageBoundaryConditionIF3 {
   public:
     enum  {  ImageDimension = 3 };
     itkImageBoundaryConditionIF3 & operator=(itkImageBoundaryConditionIF3 const & arg0);
     itkImageBoundaryConditionIF3(itkImageBoundaryConditionIF3 const & arg0);
     itkImageBoundaryConditionIF3();
     virtual float operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< float*, 3u, itk::NeighborhoodAllocator< float* > > const * data) const = 0;
     virtual float operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< float*, 3u, itk::NeighborhoodAllocator< float* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< float, 3u > > const & neighborhoodAccessorFunctor) const = 0;
     ~itkImageBoundaryConditionIF3();
     virtual bool RequiresCompleteNeighborhood();
   private:
   protected:
 };


 class itkImageBoundaryConditionIRGBAUS2 {
   public:
     enum  {  ImageDimension = 2 };
     itkImageBoundaryConditionIRGBAUS2 & operator=(itkImageBoundaryConditionIRGBAUS2 const & arg0);
     itkImageBoundaryConditionIRGBAUS2(itkImageBoundaryConditionIRGBAUS2 const & arg0);
     itkImageBoundaryConditionIRGBAUS2();
     virtual itkRGBAPixelUS operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< itk::RGBAPixel< unsigned short >*, 2u, itk::NeighborhoodAllocator< itk::RGBAPixel< unsigned short >* > > const * data) const = 0;
     virtual itkRGBAPixelUS operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< itk::RGBAPixel< unsigned short >*, 2u, itk::NeighborhoodAllocator< itk::RGBAPixel< unsigned short >* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< itk::RGBAPixel< unsigned short >, 2u > > const & neighborhoodAccessorFunctor) const = 0;
     ~itkImageBoundaryConditionIRGBAUS2();
     virtual bool RequiresCompleteNeighborhood();
   private:
   protected:
 };


 class itkImageBoundaryConditionIRGBAUS3 {
   public:
     enum  {  ImageDimension = 3 };
     itkImageBoundaryConditionIRGBAUS3 & operator=(itkImageBoundaryConditionIRGBAUS3 const & arg0);
     itkImageBoundaryConditionIRGBAUS3(itkImageBoundaryConditionIRGBAUS3 const & arg0);
     itkImageBoundaryConditionIRGBAUS3();
     virtual itkRGBAPixelUS operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< itk::RGBAPixel< unsigned short >*, 3u, itk::NeighborhoodAllocator< itk::RGBAPixel< unsigned short >* > > const * data) const = 0;
     virtual itkRGBAPixelUS operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< itk::RGBAPixel< unsigned short >*, 3u, itk::NeighborhoodAllocator< itk::RGBAPixel< unsigned short >* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< itk::RGBAPixel< unsigned short >, 3u > > const & neighborhoodAccessorFunctor) const = 0;
     ~itkImageBoundaryConditionIRGBAUS3();
     virtual bool RequiresCompleteNeighborhood();
   private:
   protected:
 };


 class itkImageBoundaryConditionIRGBUS2 {
   public:
     enum  {  ImageDimension = 2 };
     itkImageBoundaryConditionIRGBUS2 & operator=(itkImageBoundaryConditionIRGBUS2 const & arg0);
     itkImageBoundaryConditionIRGBUS2(itkImageBoundaryConditionIRGBUS2 const & arg0);
     itkImageBoundaryConditionIRGBUS2();
     virtual itkRGBPixelUS operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< itk::RGBPixel< unsigned short >*, 2u, itk::NeighborhoodAllocator< itk::RGBPixel< unsigned short >* > > const * data) const = 0;
     virtual itkRGBPixelUS operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< itk::RGBPixel< unsigned short >*, 2u, itk::NeighborhoodAllocator< itk::RGBPixel< unsigned short >* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< itk::RGBPixel< unsigned short >, 2u > > const & neighborhoodAccessorFunctor) const = 0;
     ~itkImageBoundaryConditionIRGBUS2();
     virtual bool RequiresCompleteNeighborhood();
   private:
   protected:
 };


 class itkImageBoundaryConditionIRGBUS3 {
   public:
     enum  {  ImageDimension = 3 };
     itkImageBoundaryConditionIRGBUS3 & operator=(itkImageBoundaryConditionIRGBUS3 const & arg0);
     itkImageBoundaryConditionIRGBUS3(itkImageBoundaryConditionIRGBUS3 const & arg0);
     itkImageBoundaryConditionIRGBUS3();
     virtual itkRGBPixelUS operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< itk::RGBPixel< unsigned short >*, 3u, itk::NeighborhoodAllocator< itk::RGBPixel< unsigned short >* > > const * data) const = 0;
     virtual itkRGBPixelUS operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< itk::RGBPixel< unsigned short >*, 3u, itk::NeighborhoodAllocator< itk::RGBPixel< unsigned short >* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< itk::RGBPixel< unsigned short >, 3u > > const & neighborhoodAccessorFunctor) const = 0;
     ~itkImageBoundaryConditionIRGBUS3();
     virtual bool RequiresCompleteNeighborhood();
   private:
   protected:
 };


 class itkImageBoundaryConditionIUC2 {
   public:
     enum  {  ImageDimension = 2 };
     itkImageBoundaryConditionIUC2 & operator=(itkImageBoundaryConditionIUC2 const & arg0);
     itkImageBoundaryConditionIUC2(itkImageBoundaryConditionIUC2 const & arg0);
     itkImageBoundaryConditionIUC2();
     virtual unsigned char operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< unsigned char*, 2u, itk::NeighborhoodAllocator< unsigned char* > > const * data) const = 0;
     virtual unsigned char operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< unsigned char*, 2u, itk::NeighborhoodAllocator< unsigned char* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< unsigned char, 2u > > const & neighborhoodAccessorFunctor) const = 0;
     ~itkImageBoundaryConditionIUC2();
     virtual bool RequiresCompleteNeighborhood();
   private:
   protected:
 };


 class itkImageBoundaryConditionIUC3 {
   public:
     enum  {  ImageDimension = 3 };
     itkImageBoundaryConditionIUC3 & operator=(itkImageBoundaryConditionIUC3 const & arg0);
     itkImageBoundaryConditionIUC3(itkImageBoundaryConditionIUC3 const & arg0);
     itkImageBoundaryConditionIUC3();
     virtual unsigned char operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< unsigned char*, 3u, itk::NeighborhoodAllocator< unsigned char* > > const * data) const = 0;
     virtual unsigned char operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< unsigned char*, 3u, itk::NeighborhoodAllocator< unsigned char* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< unsigned char, 3u > > const & neighborhoodAccessorFunctor) const = 0;
     ~itkImageBoundaryConditionIUC3();
     virtual bool RequiresCompleteNeighborhood();
   private:
   protected:
 };


 class itkImageBoundaryConditionIUL2 {
   public:
     enum  {  ImageDimension = 2 };
     itkImageBoundaryConditionIUL2 & operator=(itkImageBoundaryConditionIUL2 const & arg0);
     itkImageBoundaryConditionIUL2(itkImageBoundaryConditionIUL2 const & arg0);
     itkImageBoundaryConditionIUL2();
     virtual unsigned long operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< unsigned long*, 2u, itk::NeighborhoodAllocator< unsigned long* > > const * data) const = 0;
     virtual unsigned long operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< unsigned long*, 2u, itk::NeighborhoodAllocator< unsigned long* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< unsigned long, 2u > > const & neighborhoodAccessorFunctor) const = 0;
     ~itkImageBoundaryConditionIUL2();
     virtual bool RequiresCompleteNeighborhood();
   private:
   protected:
 };


 class itkImageBoundaryConditionIUL3 {
   public:
     enum  {  ImageDimension = 3 };
     itkImageBoundaryConditionIUL3 & operator=(itkImageBoundaryConditionIUL3 const & arg0);
     itkImageBoundaryConditionIUL3(itkImageBoundaryConditionIUL3 const & arg0);
     itkImageBoundaryConditionIUL3();
     virtual unsigned long operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< unsigned long*, 3u, itk::NeighborhoodAllocator< unsigned long* > > const * data) const = 0;
     virtual unsigned long operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< unsigned long*, 3u, itk::NeighborhoodAllocator< unsigned long* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< unsigned long, 3u > > const & neighborhoodAccessorFunctor) const = 0;
     ~itkImageBoundaryConditionIUL3();
     virtual bool RequiresCompleteNeighborhood();
   private:
   protected:
 };


 class itkImageBoundaryConditionIUS2 {
   public:
     enum  {  ImageDimension = 2 };
     itkImageBoundaryConditionIUS2 & operator=(itkImageBoundaryConditionIUS2 const & arg0);
     itkImageBoundaryConditionIUS2(itkImageBoundaryConditionIUS2 const & arg0);
     itkImageBoundaryConditionIUS2();
     virtual unsigned short operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< unsigned short*, 2u, itk::NeighborhoodAllocator< unsigned short* > > const * data) const = 0;
     virtual unsigned short operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< unsigned short*, 2u, itk::NeighborhoodAllocator< unsigned short* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< unsigned short, 2u > > const & neighborhoodAccessorFunctor) const = 0;
     ~itkImageBoundaryConditionIUS2();
     virtual bool RequiresCompleteNeighborhood();
   private:
   protected:
 };


 class itkImageBoundaryConditionIUS3 {
   public:
     enum  {  ImageDimension = 3 };
     itkImageBoundaryConditionIUS3 & operator=(itkImageBoundaryConditionIUS3 const & arg0);
     itkImageBoundaryConditionIUS3(itkImageBoundaryConditionIUS3 const & arg0);
     itkImageBoundaryConditionIUS3();
     virtual unsigned short operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< unsigned short*, 3u, itk::NeighborhoodAllocator< unsigned short* > > const * data) const = 0;
     virtual unsigned short operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< unsigned short*, 3u, itk::NeighborhoodAllocator< unsigned short* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< unsigned short, 3u > > const & neighborhoodAccessorFunctor) const = 0;
     ~itkImageBoundaryConditionIUS3();
     virtual bool RequiresCompleteNeighborhood();
   private:
   protected:
 };


 class itkImageBoundaryConditionIVF22 {
   public:
     enum  {  ImageDimension = 2 };
     itkImageBoundaryConditionIVF22 & operator=(itkImageBoundaryConditionIVF22 const & arg0);
     itkImageBoundaryConditionIVF22(itkImageBoundaryConditionIVF22 const & arg0);
     itkImageBoundaryConditionIVF22();
     virtual itkVectorF2 operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< itk::Vector< float, 2u >*, 2u, itk::NeighborhoodAllocator< itk::Vector< float, 2u >* > > const * data) const = 0;
     virtual itkVectorF2 operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< itk::Vector< float, 2u >*, 2u, itk::NeighborhoodAllocator< itk::Vector< float, 2u >* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< itk::Vector< float, 2u >, 2u > > const & neighborhoodAccessorFunctor) const = 0;
     ~itkImageBoundaryConditionIVF22();
     virtual bool RequiresCompleteNeighborhood();
   private:
   protected:
 };


 class itkImageBoundaryConditionIVF33 {
   public:
     enum  {  ImageDimension = 3 };
     itkImageBoundaryConditionIVF33 & operator=(itkImageBoundaryConditionIVF33 const & arg0);
     itkImageBoundaryConditionIVF33(itkImageBoundaryConditionIVF33 const & arg0);
     itkImageBoundaryConditionIVF33();
     virtual itkVectorF3 operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< itk::Vector< float, 3u >*, 3u, itk::NeighborhoodAllocator< itk::Vector< float, 3u >* > > const * data) const = 0;
     virtual itkVectorF3 operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< itk::Vector< float, 3u >*, 3u, itk::NeighborhoodAllocator< itk::Vector< float, 3u >* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< itk::Vector< float, 3u >, 3u > > const & neighborhoodAccessorFunctor) const = 0;
     ~itkImageBoundaryConditionIVF33();
     virtual bool RequiresCompleteNeighborhood();
   private:
   protected:
 };


 class itkPeriodicBoundaryConditionICF2 : public itkImageBoundaryConditionICF2 {
   public:
     enum  {  ImageDimension = 2 };
     itkPeriodicBoundaryConditionICF2 & operator=(itkPeriodicBoundaryConditionICF2 const & arg0);
     itkPeriodicBoundaryConditionICF2(itkPeriodicBoundaryConditionICF2 const & arg0);
     itkPeriodicBoundaryConditionICF2();
     virtual vcl_complexF operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< std::complex< float >*, 2u, itk::NeighborhoodAllocator< std::complex< float >* > > const * data) const;
     virtual vcl_complexF operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< std::complex< float >*, 2u, itk::NeighborhoodAllocator< std::complex< float >* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< std::complex< float >, 2u > > const & neighborhoodAccessorFunctor) const;
     ~itkPeriodicBoundaryConditionICF2();
   private:
   protected:
 };


 class itkPeriodicBoundaryConditionICF3 : public itkImageBoundaryConditionICF3 {
   public:
     enum  {  ImageDimension = 3 };
     itkPeriodicBoundaryConditionICF3 & operator=(itkPeriodicBoundaryConditionICF3 const & arg0);
     itkPeriodicBoundaryConditionICF3(itkPeriodicBoundaryConditionICF3 const & arg0);
     itkPeriodicBoundaryConditionICF3();
     virtual vcl_complexF operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< std::complex< float >*, 3u, itk::NeighborhoodAllocator< std::complex< float >* > > const * data) const;
     virtual vcl_complexF operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< std::complex< float >*, 3u, itk::NeighborhoodAllocator< std::complex< float >* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< std::complex< float >, 3u > > const & neighborhoodAccessorFunctor) const;
     ~itkPeriodicBoundaryConditionICF3();
   private:
   protected:
 };


 class itkPeriodicBoundaryConditionICVF22 : public itkImageBoundaryConditionICVF22 {
   public:
     enum  {  ImageDimension = 2 };
     itkPeriodicBoundaryConditionICVF22 & operator=(itkPeriodicBoundaryConditionICVF22 const & arg0);
     itkPeriodicBoundaryConditionICVF22(itkPeriodicBoundaryConditionICVF22 const & arg0);
     itkPeriodicBoundaryConditionICVF22();
     virtual itkCovariantVectorF2 operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< itk::CovariantVector< float, 2u >*, 2u, itk::NeighborhoodAllocator< itk::CovariantVector< float, 2u >* > > const * data) const;
     virtual itkCovariantVectorF2 operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< itk::CovariantVector< float, 2u >*, 2u, itk::NeighborhoodAllocator< itk::CovariantVector< float, 2u >* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< itk::CovariantVector< float, 2u >, 2u > > const & neighborhoodAccessorFunctor) const;
     ~itkPeriodicBoundaryConditionICVF22();
   private:
   protected:
 };


 class itkPeriodicBoundaryConditionICVF33 : public itkImageBoundaryConditionICVF33 {
   public:
     enum  {  ImageDimension = 3 };
     itkPeriodicBoundaryConditionICVF33 & operator=(itkPeriodicBoundaryConditionICVF33 const & arg0);
     itkPeriodicBoundaryConditionICVF33(itkPeriodicBoundaryConditionICVF33 const & arg0);
     itkPeriodicBoundaryConditionICVF33();
     virtual itkCovariantVectorF3 operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< itk::CovariantVector< float, 3u >*, 3u, itk::NeighborhoodAllocator< itk::CovariantVector< float, 3u >* > > const * data) const;
     virtual itkCovariantVectorF3 operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< itk::CovariantVector< float, 3u >*, 3u, itk::NeighborhoodAllocator< itk::CovariantVector< float, 3u >* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< itk::CovariantVector< float, 3u >, 3u > > const & neighborhoodAccessorFunctor) const;
     ~itkPeriodicBoundaryConditionICVF33();
   private:
   protected:
 };


 class itkPeriodicBoundaryConditionID2 : public itkImageBoundaryConditionID2 {
   public:
     enum  {  ImageDimension = 2 };
     itkPeriodicBoundaryConditionID2 & operator=(itkPeriodicBoundaryConditionID2 const & arg0);
     itkPeriodicBoundaryConditionID2(itkPeriodicBoundaryConditionID2 const & arg0);
     itkPeriodicBoundaryConditionID2();
     virtual double operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< double*, 2u, itk::NeighborhoodAllocator< double* > > const * data) const;
     virtual double operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< double*, 2u, itk::NeighborhoodAllocator< double* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< double, 2u > > const & neighborhoodAccessorFunctor) const;
     ~itkPeriodicBoundaryConditionID2();
   private:
   protected:
 };


 class itkPeriodicBoundaryConditionID3 : public itkImageBoundaryConditionID3 {
   public:
     enum  {  ImageDimension = 3 };
     itkPeriodicBoundaryConditionID3 & operator=(itkPeriodicBoundaryConditionID3 const & arg0);
     itkPeriodicBoundaryConditionID3(itkPeriodicBoundaryConditionID3 const & arg0);
     itkPeriodicBoundaryConditionID3();
     virtual double operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< double*, 3u, itk::NeighborhoodAllocator< double* > > const * data) const;
     virtual double operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< double*, 3u, itk::NeighborhoodAllocator< double* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< double, 3u > > const & neighborhoodAccessorFunctor) const;
     ~itkPeriodicBoundaryConditionID3();
   private:
   protected:
 };


 class itkPeriodicBoundaryConditionIF2 : public itkImageBoundaryConditionIF2 {
   public:
     enum  {  ImageDimension = 2 };
     itkPeriodicBoundaryConditionIF2 & operator=(itkPeriodicBoundaryConditionIF2 const & arg0);
     itkPeriodicBoundaryConditionIF2(itkPeriodicBoundaryConditionIF2 const & arg0);
     itkPeriodicBoundaryConditionIF2();
     virtual float operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< float*, 2u, itk::NeighborhoodAllocator< float* > > const * data) const;
     virtual float operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< float*, 2u, itk::NeighborhoodAllocator< float* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< float, 2u > > const & neighborhoodAccessorFunctor) const;
     ~itkPeriodicBoundaryConditionIF2();
   private:
   protected:
 };


 class itkPeriodicBoundaryConditionIF3 : public itkImageBoundaryConditionIF3 {
   public:
     enum  {  ImageDimension = 3 };
     itkPeriodicBoundaryConditionIF3 & operator=(itkPeriodicBoundaryConditionIF3 const & arg0);
     itkPeriodicBoundaryConditionIF3(itkPeriodicBoundaryConditionIF3 const & arg0);
     itkPeriodicBoundaryConditionIF3();
     virtual float operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< float*, 3u, itk::NeighborhoodAllocator< float* > > const * data) const;
     virtual float operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< float*, 3u, itk::NeighborhoodAllocator< float* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< float, 3u > > const & neighborhoodAccessorFunctor) const;
     ~itkPeriodicBoundaryConditionIF3();
   private:
   protected:
 };


 class itkPeriodicBoundaryConditionIRGBAUS2 : public itkImageBoundaryConditionIRGBAUS2 {
   public:
     enum  {  ImageDimension = 2 };
     itkPeriodicBoundaryConditionIRGBAUS2 & operator=(itkPeriodicBoundaryConditionIRGBAUS2 const & arg0);
     itkPeriodicBoundaryConditionIRGBAUS2(itkPeriodicBoundaryConditionIRGBAUS2 const & arg0);
     itkPeriodicBoundaryConditionIRGBAUS2();
     virtual itkRGBAPixelUS operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< itk::RGBAPixel< unsigned short >*, 2u, itk::NeighborhoodAllocator< itk::RGBAPixel< unsigned short >* > > const * data) const;
     virtual itkRGBAPixelUS operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< itk::RGBAPixel< unsigned short >*, 2u, itk::NeighborhoodAllocator< itk::RGBAPixel< unsigned short >* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< itk::RGBAPixel< unsigned short >, 2u > > const & neighborhoodAccessorFunctor) const;
     ~itkPeriodicBoundaryConditionIRGBAUS2();
   private:
   protected:
 };


 class itkPeriodicBoundaryConditionIRGBAUS3 : public itkImageBoundaryConditionIRGBAUS3 {
   public:
     enum  {  ImageDimension = 3 };
     itkPeriodicBoundaryConditionIRGBAUS3 & operator=(itkPeriodicBoundaryConditionIRGBAUS3 const & arg0);
     itkPeriodicBoundaryConditionIRGBAUS3(itkPeriodicBoundaryConditionIRGBAUS3 const & arg0);
     itkPeriodicBoundaryConditionIRGBAUS3();
     virtual itkRGBAPixelUS operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< itk::RGBAPixel< unsigned short >*, 3u, itk::NeighborhoodAllocator< itk::RGBAPixel< unsigned short >* > > const * data) const;
     virtual itkRGBAPixelUS operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< itk::RGBAPixel< unsigned short >*, 3u, itk::NeighborhoodAllocator< itk::RGBAPixel< unsigned short >* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< itk::RGBAPixel< unsigned short >, 3u > > const & neighborhoodAccessorFunctor) const;
     ~itkPeriodicBoundaryConditionIRGBAUS3();
   private:
   protected:
 };


 class itkPeriodicBoundaryConditionIRGBUS2 : public itkImageBoundaryConditionIRGBUS2 {
   public:
     enum  {  ImageDimension = 2 };
     itkPeriodicBoundaryConditionIRGBUS2 & operator=(itkPeriodicBoundaryConditionIRGBUS2 const & arg0);
     itkPeriodicBoundaryConditionIRGBUS2(itkPeriodicBoundaryConditionIRGBUS2 const & arg0);
     itkPeriodicBoundaryConditionIRGBUS2();
     virtual itkRGBPixelUS operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< itk::RGBPixel< unsigned short >*, 2u, itk::NeighborhoodAllocator< itk::RGBPixel< unsigned short >* > > const * data) const;
     virtual itkRGBPixelUS operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< itk::RGBPixel< unsigned short >*, 2u, itk::NeighborhoodAllocator< itk::RGBPixel< unsigned short >* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< itk::RGBPixel< unsigned short >, 2u > > const & neighborhoodAccessorFunctor) const;
     ~itkPeriodicBoundaryConditionIRGBUS2();
   private:
   protected:
 };


 class itkPeriodicBoundaryConditionIRGBUS3 : public itkImageBoundaryConditionIRGBUS3 {
   public:
     enum  {  ImageDimension = 3 };
     itkPeriodicBoundaryConditionIRGBUS3 & operator=(itkPeriodicBoundaryConditionIRGBUS3 const & arg0);
     itkPeriodicBoundaryConditionIRGBUS3(itkPeriodicBoundaryConditionIRGBUS3 const & arg0);
     itkPeriodicBoundaryConditionIRGBUS3();
     virtual itkRGBPixelUS operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< itk::RGBPixel< unsigned short >*, 3u, itk::NeighborhoodAllocator< itk::RGBPixel< unsigned short >* > > const * data) const;
     virtual itkRGBPixelUS operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< itk::RGBPixel< unsigned short >*, 3u, itk::NeighborhoodAllocator< itk::RGBPixel< unsigned short >* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< itk::RGBPixel< unsigned short >, 3u > > const & neighborhoodAccessorFunctor) const;
     ~itkPeriodicBoundaryConditionIRGBUS3();
   private:
   protected:
 };


 class itkPeriodicBoundaryConditionIUC2 : public itkImageBoundaryConditionIUC2 {
   public:
     enum  {  ImageDimension = 2 };
     itkPeriodicBoundaryConditionIUC2 & operator=(itkPeriodicBoundaryConditionIUC2 const & arg0);
     itkPeriodicBoundaryConditionIUC2(itkPeriodicBoundaryConditionIUC2 const & arg0);
     itkPeriodicBoundaryConditionIUC2();
     virtual unsigned char operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< unsigned char*, 2u, itk::NeighborhoodAllocator< unsigned char* > > const * data) const;
     virtual unsigned char operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< unsigned char*, 2u, itk::NeighborhoodAllocator< unsigned char* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< unsigned char, 2u > > const & neighborhoodAccessorFunctor) const;
     ~itkPeriodicBoundaryConditionIUC2();
   private:
   protected:
 };


 class itkPeriodicBoundaryConditionIUC3 : public itkImageBoundaryConditionIUC3 {
   public:
     enum  {  ImageDimension = 3 };
     itkPeriodicBoundaryConditionIUC3 & operator=(itkPeriodicBoundaryConditionIUC3 const & arg0);
     itkPeriodicBoundaryConditionIUC3(itkPeriodicBoundaryConditionIUC3 const & arg0);
     itkPeriodicBoundaryConditionIUC3();
     virtual unsigned char operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< unsigned char*, 3u, itk::NeighborhoodAllocator< unsigned char* > > const * data) const;
     virtual unsigned char operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< unsigned char*, 3u, itk::NeighborhoodAllocator< unsigned char* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< unsigned char, 3u > > const & neighborhoodAccessorFunctor) const;
     ~itkPeriodicBoundaryConditionIUC3();
   private:
   protected:
 };


 class itkPeriodicBoundaryConditionIUL2 : public itkImageBoundaryConditionIUL2 {
   public:
     enum  {  ImageDimension = 2 };
     itkPeriodicBoundaryConditionIUL2 & operator=(itkPeriodicBoundaryConditionIUL2 const & arg0);
     itkPeriodicBoundaryConditionIUL2(itkPeriodicBoundaryConditionIUL2 const & arg0);
     itkPeriodicBoundaryConditionIUL2();
     virtual unsigned long operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< unsigned long*, 2u, itk::NeighborhoodAllocator< unsigned long* > > const * data) const;
     virtual unsigned long operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< unsigned long*, 2u, itk::NeighborhoodAllocator< unsigned long* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< unsigned long, 2u > > const & neighborhoodAccessorFunctor) const;
     ~itkPeriodicBoundaryConditionIUL2();
   private:
   protected:
 };


 class itkPeriodicBoundaryConditionIUL3 : public itkImageBoundaryConditionIUL3 {
   public:
     enum  {  ImageDimension = 3 };
     itkPeriodicBoundaryConditionIUL3 & operator=(itkPeriodicBoundaryConditionIUL3 const & arg0);
     itkPeriodicBoundaryConditionIUL3(itkPeriodicBoundaryConditionIUL3 const & arg0);
     itkPeriodicBoundaryConditionIUL3();
     virtual unsigned long operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< unsigned long*, 3u, itk::NeighborhoodAllocator< unsigned long* > > const * data) const;
     virtual unsigned long operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< unsigned long*, 3u, itk::NeighborhoodAllocator< unsigned long* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< unsigned long, 3u > > const & neighborhoodAccessorFunctor) const;
     ~itkPeriodicBoundaryConditionIUL3();
   private:
   protected:
 };


 class itkPeriodicBoundaryConditionIUS2 : public itkImageBoundaryConditionIUS2 {
   public:
     enum  {  ImageDimension = 2 };
     itkPeriodicBoundaryConditionIUS2 & operator=(itkPeriodicBoundaryConditionIUS2 const & arg0);
     itkPeriodicBoundaryConditionIUS2(itkPeriodicBoundaryConditionIUS2 const & arg0);
     itkPeriodicBoundaryConditionIUS2();
     virtual unsigned short operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< unsigned short*, 2u, itk::NeighborhoodAllocator< unsigned short* > > const * data) const;
     virtual unsigned short operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< unsigned short*, 2u, itk::NeighborhoodAllocator< unsigned short* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< unsigned short, 2u > > const & neighborhoodAccessorFunctor) const;
     ~itkPeriodicBoundaryConditionIUS2();
   private:
   protected:
 };


 class itkPeriodicBoundaryConditionIUS3 : public itkImageBoundaryConditionIUS3 {
   public:
     enum  {  ImageDimension = 3 };
     itkPeriodicBoundaryConditionIUS3 & operator=(itkPeriodicBoundaryConditionIUS3 const & arg0);
     itkPeriodicBoundaryConditionIUS3(itkPeriodicBoundaryConditionIUS3 const & arg0);
     itkPeriodicBoundaryConditionIUS3();
     virtual unsigned short operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< unsigned short*, 3u, itk::NeighborhoodAllocator< unsigned short* > > const * data) const;
     virtual unsigned short operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< unsigned short*, 3u, itk::NeighborhoodAllocator< unsigned short* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< unsigned short, 3u > > const & neighborhoodAccessorFunctor) const;
     ~itkPeriodicBoundaryConditionIUS3();
   private:
   protected:
 };


 class itkPeriodicBoundaryConditionIVF22 : public itkImageBoundaryConditionIVF22 {
   public:
     enum  {  ImageDimension = 2 };
     itkPeriodicBoundaryConditionIVF22 & operator=(itkPeriodicBoundaryConditionIVF22 const & arg0);
     itkPeriodicBoundaryConditionIVF22(itkPeriodicBoundaryConditionIVF22 const & arg0);
     itkPeriodicBoundaryConditionIVF22();
     virtual itkVectorF2 operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< itk::Vector< float, 2u >*, 2u, itk::NeighborhoodAllocator< itk::Vector< float, 2u >* > > const * data) const;
     virtual itkVectorF2 operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< itk::Vector< float, 2u >*, 2u, itk::NeighborhoodAllocator< itk::Vector< float, 2u >* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< itk::Vector< float, 2u >, 2u > > const & neighborhoodAccessorFunctor) const;
     ~itkPeriodicBoundaryConditionIVF22();
   private:
   protected:
 };


 class itkPeriodicBoundaryConditionIVF33 : public itkImageBoundaryConditionIVF33 {
   public:
     enum  {  ImageDimension = 3 };
     itkPeriodicBoundaryConditionIVF33 & operator=(itkPeriodicBoundaryConditionIVF33 const & arg0);
     itkPeriodicBoundaryConditionIVF33(itkPeriodicBoundaryConditionIVF33 const & arg0);
     itkPeriodicBoundaryConditionIVF33();
     virtual itkVectorF3 operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< itk::Vector< float, 3u >*, 3u, itk::NeighborhoodAllocator< itk::Vector< float, 3u >* > > const * data) const;
     virtual itkVectorF3 operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< itk::Vector< float, 3u >*, 3u, itk::NeighborhoodAllocator< itk::Vector< float, 3u >* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< itk::Vector< float, 3u >, 3u > > const & neighborhoodAccessorFunctor) const;
     ~itkPeriodicBoundaryConditionIVF33();
   private:
   protected:
 };


 class itkZeroFluxNeumannBoundaryConditionICF2 : public itkImageBoundaryConditionICF2 {
   public:
     enum  {  ImageDimension = 2 };
     itkZeroFluxNeumannBoundaryConditionICF2 & operator=(itkZeroFluxNeumannBoundaryConditionICF2 const & arg0);
     itkZeroFluxNeumannBoundaryConditionICF2(itkZeroFluxNeumannBoundaryConditionICF2 const & arg0);
     itkZeroFluxNeumannBoundaryConditionICF2();
     virtual vcl_complexF operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< std::complex< float >*, 2u, itk::NeighborhoodAllocator< std::complex< float >* > > const * data) const;
     virtual vcl_complexF operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< std::complex< float >*, 2u, itk::NeighborhoodAllocator< std::complex< float >* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< std::complex< float >, 2u > > const & neighborhoodAccessorFunctor) const;
     ~itkZeroFluxNeumannBoundaryConditionICF2();
   private:
   protected:
 };


 class itkZeroFluxNeumannBoundaryConditionICF3 : public itkImageBoundaryConditionICF3 {
   public:
     enum  {  ImageDimension = 3 };
     itkZeroFluxNeumannBoundaryConditionICF3 & operator=(itkZeroFluxNeumannBoundaryConditionICF3 const & arg0);
     itkZeroFluxNeumannBoundaryConditionICF3(itkZeroFluxNeumannBoundaryConditionICF3 const & arg0);
     itkZeroFluxNeumannBoundaryConditionICF3();
     virtual vcl_complexF operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< std::complex< float >*, 3u, itk::NeighborhoodAllocator< std::complex< float >* > > const * data) const;
     virtual vcl_complexF operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< std::complex< float >*, 3u, itk::NeighborhoodAllocator< std::complex< float >* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< std::complex< float >, 3u > > const & neighborhoodAccessorFunctor) const;
     ~itkZeroFluxNeumannBoundaryConditionICF3();
   private:
   protected:
 };


 class itkZeroFluxNeumannBoundaryConditionICVF22 : public itkImageBoundaryConditionICVF22 {
   public:
     enum  {  ImageDimension = 2 };
     itkZeroFluxNeumannBoundaryConditionICVF22 & operator=(itkZeroFluxNeumannBoundaryConditionICVF22 const & arg0);
     itkZeroFluxNeumannBoundaryConditionICVF22(itkZeroFluxNeumannBoundaryConditionICVF22 const & arg0);
     itkZeroFluxNeumannBoundaryConditionICVF22();
     virtual itkCovariantVectorF2 operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< itk::CovariantVector< float, 2u >*, 2u, itk::NeighborhoodAllocator< itk::CovariantVector< float, 2u >* > > const * data) const;
     virtual itkCovariantVectorF2 operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< itk::CovariantVector< float, 2u >*, 2u, itk::NeighborhoodAllocator< itk::CovariantVector< float, 2u >* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< itk::CovariantVector< float, 2u >, 2u > > const & neighborhoodAccessorFunctor) const;
     ~itkZeroFluxNeumannBoundaryConditionICVF22();
   private:
   protected:
 };


 class itkZeroFluxNeumannBoundaryConditionICVF33 : public itkImageBoundaryConditionICVF33 {
   public:
     enum  {  ImageDimension = 3 };
     itkZeroFluxNeumannBoundaryConditionICVF33 & operator=(itkZeroFluxNeumannBoundaryConditionICVF33 const & arg0);
     itkZeroFluxNeumannBoundaryConditionICVF33(itkZeroFluxNeumannBoundaryConditionICVF33 const & arg0);
     itkZeroFluxNeumannBoundaryConditionICVF33();
     virtual itkCovariantVectorF3 operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< itk::CovariantVector< float, 3u >*, 3u, itk::NeighborhoodAllocator< itk::CovariantVector< float, 3u >* > > const * data) const;
     virtual itkCovariantVectorF3 operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< itk::CovariantVector< float, 3u >*, 3u, itk::NeighborhoodAllocator< itk::CovariantVector< float, 3u >* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< itk::CovariantVector< float, 3u >, 3u > > const & neighborhoodAccessorFunctor) const;
     ~itkZeroFluxNeumannBoundaryConditionICVF33();
   private:
   protected:
 };


 class itkZeroFluxNeumannBoundaryConditionID2 : public itkImageBoundaryConditionID2 {
   public:
     enum  {  ImageDimension = 2 };
     itkZeroFluxNeumannBoundaryConditionID2 & operator=(itkZeroFluxNeumannBoundaryConditionID2 const & arg0);
     itkZeroFluxNeumannBoundaryConditionID2(itkZeroFluxNeumannBoundaryConditionID2 const & arg0);
     itkZeroFluxNeumannBoundaryConditionID2();
     virtual double operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< double*, 2u, itk::NeighborhoodAllocator< double* > > const * data) const;
     virtual double operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< double*, 2u, itk::NeighborhoodAllocator< double* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< double, 2u > > const & neighborhoodAccessorFunctor) const;
     ~itkZeroFluxNeumannBoundaryConditionID2();
   private:
   protected:
 };


 class itkZeroFluxNeumannBoundaryConditionID3 : public itkImageBoundaryConditionID3 {
   public:
     enum  {  ImageDimension = 3 };
     itkZeroFluxNeumannBoundaryConditionID3 & operator=(itkZeroFluxNeumannBoundaryConditionID3 const & arg0);
     itkZeroFluxNeumannBoundaryConditionID3(itkZeroFluxNeumannBoundaryConditionID3 const & arg0);
     itkZeroFluxNeumannBoundaryConditionID3();
     virtual double operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< double*, 3u, itk::NeighborhoodAllocator< double* > > const * data) const;
     virtual double operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< double*, 3u, itk::NeighborhoodAllocator< double* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< double, 3u > > const & neighborhoodAccessorFunctor) const;
     ~itkZeroFluxNeumannBoundaryConditionID3();
   private:
   protected:
 };


 class itkZeroFluxNeumannBoundaryConditionIF2 : public itkImageBoundaryConditionIF2 {
   public:
     enum  {  ImageDimension = 2 };
     itkZeroFluxNeumannBoundaryConditionIF2 & operator=(itkZeroFluxNeumannBoundaryConditionIF2 const & arg0);
     itkZeroFluxNeumannBoundaryConditionIF2(itkZeroFluxNeumannBoundaryConditionIF2 const & arg0);
     itkZeroFluxNeumannBoundaryConditionIF2();
     virtual float operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< float*, 2u, itk::NeighborhoodAllocator< float* > > const * data) const;
     virtual float operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< float*, 2u, itk::NeighborhoodAllocator< float* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< float, 2u > > const & neighborhoodAccessorFunctor) const;
     ~itkZeroFluxNeumannBoundaryConditionIF2();
   private:
   protected:
 };


 class itkZeroFluxNeumannBoundaryConditionIF3 : public itkImageBoundaryConditionIF3 {
   public:
     enum  {  ImageDimension = 3 };
     itkZeroFluxNeumannBoundaryConditionIF3 & operator=(itkZeroFluxNeumannBoundaryConditionIF3 const & arg0);
     itkZeroFluxNeumannBoundaryConditionIF3(itkZeroFluxNeumannBoundaryConditionIF3 const & arg0);
     itkZeroFluxNeumannBoundaryConditionIF3();
     virtual float operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< float*, 3u, itk::NeighborhoodAllocator< float* > > const * data) const;
     virtual float operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< float*, 3u, itk::NeighborhoodAllocator< float* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< float, 3u > > const & neighborhoodAccessorFunctor) const;
     ~itkZeroFluxNeumannBoundaryConditionIF3();
   private:
   protected:
 };


 class itkZeroFluxNeumannBoundaryConditionIRGBAUS2 : public itkImageBoundaryConditionIRGBAUS2 {
   public:
     enum  {  ImageDimension = 2 };
     itkZeroFluxNeumannBoundaryConditionIRGBAUS2 & operator=(itkZeroFluxNeumannBoundaryConditionIRGBAUS2 const & arg0);
     itkZeroFluxNeumannBoundaryConditionIRGBAUS2(itkZeroFluxNeumannBoundaryConditionIRGBAUS2 const & arg0);
     itkZeroFluxNeumannBoundaryConditionIRGBAUS2();
     virtual itkRGBAPixelUS operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< itk::RGBAPixel< unsigned short >*, 2u, itk::NeighborhoodAllocator< itk::RGBAPixel< unsigned short >* > > const * data) const;
     virtual itkRGBAPixelUS operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< itk::RGBAPixel< unsigned short >*, 2u, itk::NeighborhoodAllocator< itk::RGBAPixel< unsigned short >* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< itk::RGBAPixel< unsigned short >, 2u > > const & neighborhoodAccessorFunctor) const;
     ~itkZeroFluxNeumannBoundaryConditionIRGBAUS2();
   private:
   protected:
 };


 class itkZeroFluxNeumannBoundaryConditionIRGBAUS3 : public itkImageBoundaryConditionIRGBAUS3 {
   public:
     enum  {  ImageDimension = 3 };
     itkZeroFluxNeumannBoundaryConditionIRGBAUS3 & operator=(itkZeroFluxNeumannBoundaryConditionIRGBAUS3 const & arg0);
     itkZeroFluxNeumannBoundaryConditionIRGBAUS3(itkZeroFluxNeumannBoundaryConditionIRGBAUS3 const & arg0);
     itkZeroFluxNeumannBoundaryConditionIRGBAUS3();
     virtual itkRGBAPixelUS operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< itk::RGBAPixel< unsigned short >*, 3u, itk::NeighborhoodAllocator< itk::RGBAPixel< unsigned short >* > > const * data) const;
     virtual itkRGBAPixelUS operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< itk::RGBAPixel< unsigned short >*, 3u, itk::NeighborhoodAllocator< itk::RGBAPixel< unsigned short >* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< itk::RGBAPixel< unsigned short >, 3u > > const & neighborhoodAccessorFunctor) const;
     ~itkZeroFluxNeumannBoundaryConditionIRGBAUS3();
   private:
   protected:
 };


 class itkZeroFluxNeumannBoundaryConditionIRGBUS2 : public itkImageBoundaryConditionIRGBUS2 {
   public:
     enum  {  ImageDimension = 2 };
     itkZeroFluxNeumannBoundaryConditionIRGBUS2 & operator=(itkZeroFluxNeumannBoundaryConditionIRGBUS2 const & arg0);
     itkZeroFluxNeumannBoundaryConditionIRGBUS2(itkZeroFluxNeumannBoundaryConditionIRGBUS2 const & arg0);
     itkZeroFluxNeumannBoundaryConditionIRGBUS2();
     virtual itkRGBPixelUS operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< itk::RGBPixel< unsigned short >*, 2u, itk::NeighborhoodAllocator< itk::RGBPixel< unsigned short >* > > const * data) const;
     virtual itkRGBPixelUS operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< itk::RGBPixel< unsigned short >*, 2u, itk::NeighborhoodAllocator< itk::RGBPixel< unsigned short >* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< itk::RGBPixel< unsigned short >, 2u > > const & neighborhoodAccessorFunctor) const;
     ~itkZeroFluxNeumannBoundaryConditionIRGBUS2();
   private:
   protected:
 };


 class itkZeroFluxNeumannBoundaryConditionIRGBUS3 : public itkImageBoundaryConditionIRGBUS3 {
   public:
     enum  {  ImageDimension = 3 };
     itkZeroFluxNeumannBoundaryConditionIRGBUS3 & operator=(itkZeroFluxNeumannBoundaryConditionIRGBUS3 const & arg0);
     itkZeroFluxNeumannBoundaryConditionIRGBUS3(itkZeroFluxNeumannBoundaryConditionIRGBUS3 const & arg0);
     itkZeroFluxNeumannBoundaryConditionIRGBUS3();
     virtual itkRGBPixelUS operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< itk::RGBPixel< unsigned short >*, 3u, itk::NeighborhoodAllocator< itk::RGBPixel< unsigned short >* > > const * data) const;
     virtual itkRGBPixelUS operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< itk::RGBPixel< unsigned short >*, 3u, itk::NeighborhoodAllocator< itk::RGBPixel< unsigned short >* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< itk::RGBPixel< unsigned short >, 3u > > const & neighborhoodAccessorFunctor) const;
     ~itkZeroFluxNeumannBoundaryConditionIRGBUS3();
   private:
   protected:
 };


 class itkZeroFluxNeumannBoundaryConditionIUC2 : public itkImageBoundaryConditionIUC2 {
   public:
     enum  {  ImageDimension = 2 };
     itkZeroFluxNeumannBoundaryConditionIUC2 & operator=(itkZeroFluxNeumannBoundaryConditionIUC2 const & arg0);
     itkZeroFluxNeumannBoundaryConditionIUC2(itkZeroFluxNeumannBoundaryConditionIUC2 const & arg0);
     itkZeroFluxNeumannBoundaryConditionIUC2();
     virtual unsigned char operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< unsigned char*, 2u, itk::NeighborhoodAllocator< unsigned char* > > const * data) const;
     virtual unsigned char operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< unsigned char*, 2u, itk::NeighborhoodAllocator< unsigned char* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< unsigned char, 2u > > const & neighborhoodAccessorFunctor) const;
     ~itkZeroFluxNeumannBoundaryConditionIUC2();
   private:
   protected:
 };


 class itkZeroFluxNeumannBoundaryConditionIUC3 : public itkImageBoundaryConditionIUC3 {
   public:
     enum  {  ImageDimension = 3 };
     itkZeroFluxNeumannBoundaryConditionIUC3 & operator=(itkZeroFluxNeumannBoundaryConditionIUC3 const & arg0);
     itkZeroFluxNeumannBoundaryConditionIUC3(itkZeroFluxNeumannBoundaryConditionIUC3 const & arg0);
     itkZeroFluxNeumannBoundaryConditionIUC3();
     virtual unsigned char operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< unsigned char*, 3u, itk::NeighborhoodAllocator< unsigned char* > > const * data) const;
     virtual unsigned char operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< unsigned char*, 3u, itk::NeighborhoodAllocator< unsigned char* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< unsigned char, 3u > > const & neighborhoodAccessorFunctor) const;
     ~itkZeroFluxNeumannBoundaryConditionIUC3();
   private:
   protected:
 };


 class itkZeroFluxNeumannBoundaryConditionIUL2 : public itkImageBoundaryConditionIUL2 {
   public:
     enum  {  ImageDimension = 2 };
     itkZeroFluxNeumannBoundaryConditionIUL2 & operator=(itkZeroFluxNeumannBoundaryConditionIUL2 const & arg0);
     itkZeroFluxNeumannBoundaryConditionIUL2(itkZeroFluxNeumannBoundaryConditionIUL2 const & arg0);
     itkZeroFluxNeumannBoundaryConditionIUL2();
     virtual unsigned long operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< unsigned long*, 2u, itk::NeighborhoodAllocator< unsigned long* > > const * data) const;
     virtual unsigned long operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< unsigned long*, 2u, itk::NeighborhoodAllocator< unsigned long* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< unsigned long, 2u > > const & neighborhoodAccessorFunctor) const;
     ~itkZeroFluxNeumannBoundaryConditionIUL2();
   private:
   protected:
 };


 class itkZeroFluxNeumannBoundaryConditionIUL3 : public itkImageBoundaryConditionIUL3 {
   public:
     enum  {  ImageDimension = 3 };
     itkZeroFluxNeumannBoundaryConditionIUL3 & operator=(itkZeroFluxNeumannBoundaryConditionIUL3 const & arg0);
     itkZeroFluxNeumannBoundaryConditionIUL3(itkZeroFluxNeumannBoundaryConditionIUL3 const & arg0);
     itkZeroFluxNeumannBoundaryConditionIUL3();
     virtual unsigned long operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< unsigned long*, 3u, itk::NeighborhoodAllocator< unsigned long* > > const * data) const;
     virtual unsigned long operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< unsigned long*, 3u, itk::NeighborhoodAllocator< unsigned long* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< unsigned long, 3u > > const & neighborhoodAccessorFunctor) const;
     ~itkZeroFluxNeumannBoundaryConditionIUL3();
   private:
   protected:
 };


 class itkZeroFluxNeumannBoundaryConditionIUS2 : public itkImageBoundaryConditionIUS2 {
   public:
     enum  {  ImageDimension = 2 };
     itkZeroFluxNeumannBoundaryConditionIUS2 & operator=(itkZeroFluxNeumannBoundaryConditionIUS2 const & arg0);
     itkZeroFluxNeumannBoundaryConditionIUS2(itkZeroFluxNeumannBoundaryConditionIUS2 const & arg0);
     itkZeroFluxNeumannBoundaryConditionIUS2();
     virtual unsigned short operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< unsigned short*, 2u, itk::NeighborhoodAllocator< unsigned short* > > const * data) const;
     virtual unsigned short operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< unsigned short*, 2u, itk::NeighborhoodAllocator< unsigned short* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< unsigned short, 2u > > const & neighborhoodAccessorFunctor) const;
     ~itkZeroFluxNeumannBoundaryConditionIUS2();
   private:
   protected:
 };


 class itkZeroFluxNeumannBoundaryConditionIUS3 : public itkImageBoundaryConditionIUS3 {
   public:
     enum  {  ImageDimension = 3 };
     itkZeroFluxNeumannBoundaryConditionIUS3 & operator=(itkZeroFluxNeumannBoundaryConditionIUS3 const & arg0);
     itkZeroFluxNeumannBoundaryConditionIUS3(itkZeroFluxNeumannBoundaryConditionIUS3 const & arg0);
     itkZeroFluxNeumannBoundaryConditionIUS3();
     virtual unsigned short operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< unsigned short*, 3u, itk::NeighborhoodAllocator< unsigned short* > > const * data) const;
     virtual unsigned short operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< unsigned short*, 3u, itk::NeighborhoodAllocator< unsigned short* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< unsigned short, 3u > > const & neighborhoodAccessorFunctor) const;
     ~itkZeroFluxNeumannBoundaryConditionIUS3();
   private:
   protected:
 };


 class itkZeroFluxNeumannBoundaryConditionIVF22 : public itkImageBoundaryConditionIVF22 {
   public:
     enum  {  ImageDimension = 2 };
     itkZeroFluxNeumannBoundaryConditionIVF22 & operator=(itkZeroFluxNeumannBoundaryConditionIVF22 const & arg0);
     itkZeroFluxNeumannBoundaryConditionIVF22(itkZeroFluxNeumannBoundaryConditionIVF22 const & arg0);
     itkZeroFluxNeumannBoundaryConditionIVF22();
     virtual itkVectorF2 operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< itk::Vector< float, 2u >*, 2u, itk::NeighborhoodAllocator< itk::Vector< float, 2u >* > > const * data) const;
     virtual itkVectorF2 operator()(itkOffset2 const & point_index, itkOffset2 const & boundary_offset, itk::Neighborhood< itk::Vector< float, 2u >*, 2u, itk::NeighborhoodAllocator< itk::Vector< float, 2u >* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< itk::Vector< float, 2u >, 2u > > const & neighborhoodAccessorFunctor) const;
     ~itkZeroFluxNeumannBoundaryConditionIVF22();
   private:
   protected:
 };


 class itkZeroFluxNeumannBoundaryConditionIVF33 : public itkImageBoundaryConditionIVF33 {
   public:
     enum  {  ImageDimension = 3 };
     itkZeroFluxNeumannBoundaryConditionIVF33 & operator=(itkZeroFluxNeumannBoundaryConditionIVF33 const & arg0);
     itkZeroFluxNeumannBoundaryConditionIVF33(itkZeroFluxNeumannBoundaryConditionIVF33 const & arg0);
     itkZeroFluxNeumannBoundaryConditionIVF33();
     virtual itkVectorF3 operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< itk::Vector< float, 3u >*, 3u, itk::NeighborhoodAllocator< itk::Vector< float, 3u >* > > const * data) const;
     virtual itkVectorF3 operator()(itkOffset3 const & point_index, itkOffset3 const & boundary_offset, itk::Neighborhood< itk::Vector< float, 3u >*, 3u, itk::NeighborhoodAllocator< itk::Vector< float, 3u >* > > const * data, itk::NeighborhoodAccessorFunctor< itk::Image< itk::Vector< float, 3u >, 3u > > const & neighborhoodAccessorFunctor) const;
     ~itkZeroFluxNeumannBoundaryConditionIVF33();
   private:
   protected:
 };


 class itkConstantBoundaryConditionICF2 : public itkImageBoundaryConditionICF2 {
   public:
     enum  {  ImageDimension = 2 };
     itkConstantBoundaryConditionICF2 & operator=(itkConstantBoundaryConditionICF2 const & arg0);
     itkConstantBoundaryConditionICF2(itkConstantBoundaryConditionICF2 const & arg0);
     itkConstantBoundaryConditionICF2();
     virtual vcl_complexF operator()(itkOffset2 const & arg0, itkOffset2 const & arg1, itk::Neighborhood< std::complex< float >*, 2u, itk::NeighborhoodAllocator< std::complex< float >* > > const * arg2) const;
     virtual vcl_complexF operator()(itkOffset2 const & arg0, itkOffset2 const & arg1, itk::Neighborhood< std::complex< float >*, 2u, itk::NeighborhoodAllocator< std::complex< float >* > > const * arg2, itk::NeighborhoodAccessorFunctor< itk::Image< std::complex< float >, 2u > > const & arg3) const;
     void SetConstant(vcl_complexF const & c);
     vcl_complexF const & GetConstant() const;
     virtual bool RequiresCompleteNeighborhood();
     ~itkConstantBoundaryConditionICF2();
   private:
   protected:
 };


 class itkConstantBoundaryConditionICF3 : public itkImageBoundaryConditionICF3 {
   public:
     enum  {  ImageDimension = 3 };
     itkConstantBoundaryConditionICF3 & operator=(itkConstantBoundaryConditionICF3 const & arg0);
     itkConstantBoundaryConditionICF3(itkConstantBoundaryConditionICF3 const & arg0);
     itkConstantBoundaryConditionICF3();
     virtual vcl_complexF operator()(itkOffset3 const & arg0, itkOffset3 const & arg1, itk::Neighborhood< std::complex< float >*, 3u, itk::NeighborhoodAllocator< std::complex< float >* > > const * arg2) const;
     virtual vcl_complexF operator()(itkOffset3 const & arg0, itkOffset3 const & arg1, itk::Neighborhood< std::complex< float >*, 3u, itk::NeighborhoodAllocator< std::complex< float >* > > const * arg2, itk::NeighborhoodAccessorFunctor< itk::Image< std::complex< float >, 3u > > const & arg3) const;
     void SetConstant(vcl_complexF const & c);
     vcl_complexF const & GetConstant() const;
     virtual bool RequiresCompleteNeighborhood();
     ~itkConstantBoundaryConditionICF3();
   private:
   protected:
 };


 class itkConstantBoundaryConditionICVF22 : public itkImageBoundaryConditionICVF22 {
   public:
     enum  {  ImageDimension = 2 };
     itkConstantBoundaryConditionICVF22 & operator=(itkConstantBoundaryConditionICVF22 const & arg0);
     itkConstantBoundaryConditionICVF22(itkConstantBoundaryConditionICVF22 const & arg0);
     itkConstantBoundaryConditionICVF22();
     virtual itkCovariantVectorF2 operator()(itkOffset2 const & arg0, itkOffset2 const & arg1, itk::Neighborhood< itk::CovariantVector< float, 2u >*, 2u, itk::NeighborhoodAllocator< itk::CovariantVector< float, 2u >* > > const * arg2) const;
     virtual itkCovariantVectorF2 operator()(itkOffset2 const & arg0, itkOffset2 const & arg1, itk::Neighborhood< itk::CovariantVector< float, 2u >*, 2u, itk::NeighborhoodAllocator< itk::CovariantVector< float, 2u >* > > const * arg2, itk::NeighborhoodAccessorFunctor< itk::Image< itk::CovariantVector< float, 2u >, 2u > > const & arg3) const;
     void SetConstant(itkCovariantVectorF2 const & c);
     itkCovariantVectorF2 const & GetConstant() const;
     virtual bool RequiresCompleteNeighborhood();
     ~itkConstantBoundaryConditionICVF22();
   private:
   protected:
 };


 class itkConstantBoundaryConditionICVF33 : public itkImageBoundaryConditionICVF33 {
   public:
     enum  {  ImageDimension = 3 };
     itkConstantBoundaryConditionICVF33 & operator=(itkConstantBoundaryConditionICVF33 const & arg0);
     itkConstantBoundaryConditionICVF33(itkConstantBoundaryConditionICVF33 const & arg0);
     itkConstantBoundaryConditionICVF33();
     virtual itkCovariantVectorF3 operator()(itkOffset3 const & arg0, itkOffset3 const & arg1, itk::Neighborhood< itk::CovariantVector< float, 3u >*, 3u, itk::NeighborhoodAllocator< itk::CovariantVector< float, 3u >* > > const * arg2) const;
     virtual itkCovariantVectorF3 operator()(itkOffset3 const & arg0, itkOffset3 const & arg1, itk::Neighborhood< itk::CovariantVector< float, 3u >*, 3u, itk::NeighborhoodAllocator< itk::CovariantVector< float, 3u >* > > const * arg2, itk::NeighborhoodAccessorFunctor< itk::Image< itk::CovariantVector< float, 3u >, 3u > > const & arg3) const;
     void SetConstant(itkCovariantVectorF3 const & c);
     itkCovariantVectorF3 const & GetConstant() const;
     virtual bool RequiresCompleteNeighborhood();
     ~itkConstantBoundaryConditionICVF33();
   private:
   protected:
 };


 class itkConstantBoundaryConditionID2 : public itkImageBoundaryConditionID2 {
   public:
     enum  {  ImageDimension = 2 };
     itkConstantBoundaryConditionID2 & operator=(itkConstantBoundaryConditionID2 const & arg0);
     itkConstantBoundaryConditionID2(itkConstantBoundaryConditionID2 const & arg0);
     itkConstantBoundaryConditionID2();
     virtual double operator()(itkOffset2 const & arg0, itkOffset2 const & arg1, itk::Neighborhood< double*, 2u, itk::NeighborhoodAllocator< double* > > const * arg2) const;
     virtual double operator()(itkOffset2 const & arg0, itkOffset2 const & arg1, itk::Neighborhood< double*, 2u, itk::NeighborhoodAllocator< double* > > const * arg2, itk::NeighborhoodAccessorFunctor< itk::Image< double, 2u > > const & arg3) const;
     void SetConstant(double const & c);
     double const & GetConstant() const;
     virtual bool RequiresCompleteNeighborhood();
     ~itkConstantBoundaryConditionID2();
   private:
   protected:
 };


 class itkConstantBoundaryConditionID3 : public itkImageBoundaryConditionID3 {
   public:
     enum  {  ImageDimension = 3 };
     itkConstantBoundaryConditionID3 & operator=(itkConstantBoundaryConditionID3 const & arg0);
     itkConstantBoundaryConditionID3(itkConstantBoundaryConditionID3 const & arg0);
     itkConstantBoundaryConditionID3();
     virtual double operator()(itkOffset3 const & arg0, itkOffset3 const & arg1, itk::Neighborhood< double*, 3u, itk::NeighborhoodAllocator< double* > > const * arg2) const;
     virtual double operator()(itkOffset3 const & arg0, itkOffset3 const & arg1, itk::Neighborhood< double*, 3u, itk::NeighborhoodAllocator< double* > > const * arg2, itk::NeighborhoodAccessorFunctor< itk::Image< double, 3u > > const & arg3) const;
     void SetConstant(double const & c);
     double const & GetConstant() const;
     virtual bool RequiresCompleteNeighborhood();
     ~itkConstantBoundaryConditionID3();
   private:
   protected:
 };


 class itkConstantBoundaryConditionIF2 : public itkImageBoundaryConditionIF2 {
   public:
     enum  {  ImageDimension = 2 };
     itkConstantBoundaryConditionIF2 & operator=(itkConstantBoundaryConditionIF2 const & arg0);
     itkConstantBoundaryConditionIF2(itkConstantBoundaryConditionIF2 const & arg0);
     itkConstantBoundaryConditionIF2();
     virtual float operator()(itkOffset2 const & arg0, itkOffset2 const & arg1, itk::Neighborhood< float*, 2u, itk::NeighborhoodAllocator< float* > > const * arg2) const;
     virtual float operator()(itkOffset2 const & arg0, itkOffset2 const & arg1, itk::Neighborhood< float*, 2u, itk::NeighborhoodAllocator< float* > > const * arg2, itk::NeighborhoodAccessorFunctor< itk::Image< float, 2u > > const & arg3) const;
     void SetConstant(float const & c);
     float const & GetConstant() const;
     virtual bool RequiresCompleteNeighborhood();
     ~itkConstantBoundaryConditionIF2();
   private:
   protected:
 };


 class itkConstantBoundaryConditionIF3 : public itkImageBoundaryConditionIF3 {
   public:
     enum  {  ImageDimension = 3 };
     itkConstantBoundaryConditionIF3 & operator=(itkConstantBoundaryConditionIF3 const & arg0);
     itkConstantBoundaryConditionIF3(itkConstantBoundaryConditionIF3 const & arg0);
     itkConstantBoundaryConditionIF3();
     virtual float operator()(itkOffset3 const & arg0, itkOffset3 const & arg1, itk::Neighborhood< float*, 3u, itk::NeighborhoodAllocator< float* > > const * arg2) const;
     virtual float operator()(itkOffset3 const & arg0, itkOffset3 const & arg1, itk::Neighborhood< float*, 3u, itk::NeighborhoodAllocator< float* > > const * arg2, itk::NeighborhoodAccessorFunctor< itk::Image< float, 3u > > const & arg3) const;
     void SetConstant(float const & c);
     float const & GetConstant() const;
     virtual bool RequiresCompleteNeighborhood();
     ~itkConstantBoundaryConditionIF3();
   private:
   protected:
 };


 class itkConstantBoundaryConditionIRGBAUS2 : public itkImageBoundaryConditionIRGBAUS2 {
   public:
     enum  {  ImageDimension = 2 };
     itkConstantBoundaryConditionIRGBAUS2 & operator=(itkConstantBoundaryConditionIRGBAUS2 const & arg0);
     itkConstantBoundaryConditionIRGBAUS2(itkConstantBoundaryConditionIRGBAUS2 const & arg0);
     itkConstantBoundaryConditionIRGBAUS2();
     virtual itkRGBAPixelUS operator()(itkOffset2 const & arg0, itkOffset2 const & arg1, itk::Neighborhood< itk::RGBAPixel< unsigned short >*, 2u, itk::NeighborhoodAllocator< itk::RGBAPixel< unsigned short >* > > const * arg2) const;
     virtual itkRGBAPixelUS operator()(itkOffset2 const & arg0, itkOffset2 const & arg1, itk::Neighborhood< itk::RGBAPixel< unsigned short >*, 2u, itk::NeighborhoodAllocator< itk::RGBAPixel< unsigned short >* > > const * arg2, itk::NeighborhoodAccessorFunctor< itk::Image< itk::RGBAPixel< unsigned short >, 2u > > const & arg3) const;
     void SetConstant(itkRGBAPixelUS const & c);
     itkRGBAPixelUS const & GetConstant() const;
     virtual bool RequiresCompleteNeighborhood();
     ~itkConstantBoundaryConditionIRGBAUS2();
   private:
   protected:
 };


 class itkConstantBoundaryConditionIRGBAUS3 : public itkImageBoundaryConditionIRGBAUS3 {
   public:
     enum  {  ImageDimension = 3 };
     itkConstantBoundaryConditionIRGBAUS3 & operator=(itkConstantBoundaryConditionIRGBAUS3 const & arg0);
     itkConstantBoundaryConditionIRGBAUS3(itkConstantBoundaryConditionIRGBAUS3 const & arg0);
     itkConstantBoundaryConditionIRGBAUS3();
     virtual itkRGBAPixelUS operator()(itkOffset3 const & arg0, itkOffset3 const & arg1, itk::Neighborhood< itk::RGBAPixel< unsigned short >*, 3u, itk::NeighborhoodAllocator< itk::RGBAPixel< unsigned short >* > > const * arg2) const;
     virtual itkRGBAPixelUS operator()(itkOffset3 const & arg0, itkOffset3 const & arg1, itk::Neighborhood< itk::RGBAPixel< unsigned short >*, 3u, itk::NeighborhoodAllocator< itk::RGBAPixel< unsigned short >* > > const * arg2, itk::NeighborhoodAccessorFunctor< itk::Image< itk::RGBAPixel< unsigned short >, 3u > > const & arg3) const;
     void SetConstant(itkRGBAPixelUS const & c);
     itkRGBAPixelUS const & GetConstant() const;
     virtual bool RequiresCompleteNeighborhood();
     ~itkConstantBoundaryConditionIRGBAUS3();
   private:
   protected:
 };


 class itkConstantBoundaryConditionIRGBUS2 : public itkImageBoundaryConditionIRGBUS2 {
   public:
     enum  {  ImageDimension = 2 };
     itkConstantBoundaryConditionIRGBUS2 & operator=(itkConstantBoundaryConditionIRGBUS2 const & arg0);
     itkConstantBoundaryConditionIRGBUS2(itkConstantBoundaryConditionIRGBUS2 const & arg0);
     itkConstantBoundaryConditionIRGBUS2();
     virtual itkRGBPixelUS operator()(itkOffset2 const & arg0, itkOffset2 const & arg1, itk::Neighborhood< itk::RGBPixel< unsigned short >*, 2u, itk::NeighborhoodAllocator< itk::RGBPixel< unsigned short >* > > const * arg2) const;
     virtual itkRGBPixelUS operator()(itkOffset2 const & arg0, itkOffset2 const & arg1, itk::Neighborhood< itk::RGBPixel< unsigned short >*, 2u, itk::NeighborhoodAllocator< itk::RGBPixel< unsigned short >* > > const * arg2, itk::NeighborhoodAccessorFunctor< itk::Image< itk::RGBPixel< unsigned short >, 2u > > const & arg3) const;
     void SetConstant(itkRGBPixelUS const & c);
     itkRGBPixelUS const & GetConstant() const;
     virtual bool RequiresCompleteNeighborhood();
     ~itkConstantBoundaryConditionIRGBUS2();
   private:
   protected:
 };


 class itkConstantBoundaryConditionIRGBUS3 : public itkImageBoundaryConditionIRGBUS3 {
   public:
     enum  {  ImageDimension = 3 };
     itkConstantBoundaryConditionIRGBUS3 & operator=(itkConstantBoundaryConditionIRGBUS3 const & arg0);
     itkConstantBoundaryConditionIRGBUS3(itkConstantBoundaryConditionIRGBUS3 const & arg0);
     itkConstantBoundaryConditionIRGBUS3();
     virtual itkRGBPixelUS operator()(itkOffset3 const & arg0, itkOffset3 const & arg1, itk::Neighborhood< itk::RGBPixel< unsigned short >*, 3u, itk::NeighborhoodAllocator< itk::RGBPixel< unsigned short >* > > const * arg2) const;
     virtual itkRGBPixelUS operator()(itkOffset3 const & arg0, itkOffset3 const & arg1, itk::Neighborhood< itk::RGBPixel< unsigned short >*, 3u, itk::NeighborhoodAllocator< itk::RGBPixel< unsigned short >* > > const * arg2, itk::NeighborhoodAccessorFunctor< itk::Image< itk::RGBPixel< unsigned short >, 3u > > const & arg3) const;
     void SetConstant(itkRGBPixelUS const & c);
     itkRGBPixelUS const & GetConstant() const;
     virtual bool RequiresCompleteNeighborhood();
     ~itkConstantBoundaryConditionIRGBUS3();
   private:
   protected:
 };


 class itkConstantBoundaryConditionIUC2 : public itkImageBoundaryConditionIUC2 {
   public:
     enum  {  ImageDimension = 2 };
     itkConstantBoundaryConditionIUC2 & operator=(itkConstantBoundaryConditionIUC2 const & arg0);
     itkConstantBoundaryConditionIUC2(itkConstantBoundaryConditionIUC2 const & arg0);
     itkConstantBoundaryConditionIUC2();
     virtual unsigned char operator()(itkOffset2 const & arg0, itkOffset2 const & arg1, itk::Neighborhood< unsigned char*, 2u, itk::NeighborhoodAllocator< unsigned char* > > const * arg2) const;
     virtual unsigned char operator()(itkOffset2 const & arg0, itkOffset2 const & arg1, itk::Neighborhood< unsigned char*, 2u, itk::NeighborhoodAllocator< unsigned char* > > const * arg2, itk::NeighborhoodAccessorFunctor< itk::Image< unsigned char, 2u > > const & arg3) const;
     void SetConstant(unsigned char const & c);
     unsigned char const & GetConstant() const;
     virtual bool RequiresCompleteNeighborhood();
     ~itkConstantBoundaryConditionIUC2();
   private:
   protected:
 };


 class itkConstantBoundaryConditionIUC3 : public itkImageBoundaryConditionIUC3 {
   public:
     enum  {  ImageDimension = 3 };
     itkConstantBoundaryConditionIUC3 & operator=(itkConstantBoundaryConditionIUC3 const & arg0);
     itkConstantBoundaryConditionIUC3(itkConstantBoundaryConditionIUC3 const & arg0);
     itkConstantBoundaryConditionIUC3();
     virtual unsigned char operator()(itkOffset3 const & arg0, itkOffset3 const & arg1, itk::Neighborhood< unsigned char*, 3u, itk::NeighborhoodAllocator< unsigned char* > > const * arg2) const;
     virtual unsigned char operator()(itkOffset3 const & arg0, itkOffset3 const & arg1, itk::Neighborhood< unsigned char*, 3u, itk::NeighborhoodAllocator< unsigned char* > > const * arg2, itk::NeighborhoodAccessorFunctor< itk::Image< unsigned char, 3u > > const & arg3) const;
     void SetConstant(unsigned char const & c);
     unsigned char const & GetConstant() const;
     virtual bool RequiresCompleteNeighborhood();
     ~itkConstantBoundaryConditionIUC3();
   private:
   protected:
 };


 class itkConstantBoundaryConditionIUL2 : public itkImageBoundaryConditionIUL2 {
   public:
     enum  {  ImageDimension = 2 };
     itkConstantBoundaryConditionIUL2 & operator=(itkConstantBoundaryConditionIUL2 const & arg0);
     itkConstantBoundaryConditionIUL2(itkConstantBoundaryConditionIUL2 const & arg0);
     itkConstantBoundaryConditionIUL2();
     virtual unsigned long operator()(itkOffset2 const & arg0, itkOffset2 const & arg1, itk::Neighborhood< unsigned long*, 2u, itk::NeighborhoodAllocator< unsigned long* > > const * arg2) const;
     virtual unsigned long operator()(itkOffset2 const & arg0, itkOffset2 const & arg1, itk::Neighborhood< unsigned long*, 2u, itk::NeighborhoodAllocator< unsigned long* > > const * arg2, itk::NeighborhoodAccessorFunctor< itk::Image< unsigned long, 2u > > const & arg3) const;
     void SetConstant(unsigned long const & c);
     unsigned long const & GetConstant() const;
     virtual bool RequiresCompleteNeighborhood();
     ~itkConstantBoundaryConditionIUL2();
   private:
   protected:
 };


 class itkConstantBoundaryConditionIUL3 : public itkImageBoundaryConditionIUL3 {
   public:
     enum  {  ImageDimension = 3 };
     itkConstantBoundaryConditionIUL3 & operator=(itkConstantBoundaryConditionIUL3 const & arg0);
     itkConstantBoundaryConditionIUL3(itkConstantBoundaryConditionIUL3 const & arg0);
     itkConstantBoundaryConditionIUL3();
     virtual unsigned long operator()(itkOffset3 const & arg0, itkOffset3 const & arg1, itk::Neighborhood< unsigned long*, 3u, itk::NeighborhoodAllocator< unsigned long* > > const * arg2) const;
     virtual unsigned long operator()(itkOffset3 const & arg0, itkOffset3 const & arg1, itk::Neighborhood< unsigned long*, 3u, itk::NeighborhoodAllocator< unsigned long* > > const * arg2, itk::NeighborhoodAccessorFunctor< itk::Image< unsigned long, 3u > > const & arg3) const;
     void SetConstant(unsigned long const & c);
     unsigned long const & GetConstant() const;
     virtual bool RequiresCompleteNeighborhood();
     ~itkConstantBoundaryConditionIUL3();
   private:
   protected:
 };


 class itkConstantBoundaryConditionIUS2 : public itkImageBoundaryConditionIUS2 {
   public:
     enum  {  ImageDimension = 2 };
     itkConstantBoundaryConditionIUS2 & operator=(itkConstantBoundaryConditionIUS2 const & arg0);
     itkConstantBoundaryConditionIUS2(itkConstantBoundaryConditionIUS2 const & arg0);
     itkConstantBoundaryConditionIUS2();
     virtual unsigned short operator()(itkOffset2 const & arg0, itkOffset2 const & arg1, itk::Neighborhood< unsigned short*, 2u, itk::NeighborhoodAllocator< unsigned short* > > const * arg2) const;
     virtual unsigned short operator()(itkOffset2 const & arg0, itkOffset2 const & arg1, itk::Neighborhood< unsigned short*, 2u, itk::NeighborhoodAllocator< unsigned short* > > const * arg2, itk::NeighborhoodAccessorFunctor< itk::Image< unsigned short, 2u > > const & arg3) const;
     void SetConstant(unsigned short const & c);
     unsigned short const & GetConstant() const;
     virtual bool RequiresCompleteNeighborhood();
     ~itkConstantBoundaryConditionIUS2();
   private:
   protected:
 };


 class itkConstantBoundaryConditionIUS3 : public itkImageBoundaryConditionIUS3 {
   public:
     enum  {  ImageDimension = 3 };
     itkConstantBoundaryConditionIUS3 & operator=(itkConstantBoundaryConditionIUS3 const & arg0);
     itkConstantBoundaryConditionIUS3(itkConstantBoundaryConditionIUS3 const & arg0);
     itkConstantBoundaryConditionIUS3();
     virtual unsigned short operator()(itkOffset3 const & arg0, itkOffset3 const & arg1, itk::Neighborhood< unsigned short*, 3u, itk::NeighborhoodAllocator< unsigned short* > > const * arg2) const;
     virtual unsigned short operator()(itkOffset3 const & arg0, itkOffset3 const & arg1, itk::Neighborhood< unsigned short*, 3u, itk::NeighborhoodAllocator< unsigned short* > > const * arg2, itk::NeighborhoodAccessorFunctor< itk::Image< unsigned short, 3u > > const & arg3) const;
     void SetConstant(unsigned short const & c);
     unsigned short const & GetConstant() const;
     virtual bool RequiresCompleteNeighborhood();
     ~itkConstantBoundaryConditionIUS3();
   private:
   protected:
 };


 class itkConstantBoundaryConditionIVF22 : public itkImageBoundaryConditionIVF22 {
   public:
     enum  {  ImageDimension = 2 };
     itkConstantBoundaryConditionIVF22 & operator=(itkConstantBoundaryConditionIVF22 const & arg0);
     itkConstantBoundaryConditionIVF22(itkConstantBoundaryConditionIVF22 const & arg0);
     itkConstantBoundaryConditionIVF22();
     virtual itkVectorF2 operator()(itkOffset2 const & arg0, itkOffset2 const & arg1, itk::Neighborhood< itk::Vector< float, 2u >*, 2u, itk::NeighborhoodAllocator< itk::Vector< float, 2u >* > > const * arg2) const;
     virtual itkVectorF2 operator()(itkOffset2 const & arg0, itkOffset2 const & arg1, itk::Neighborhood< itk::Vector< float, 2u >*, 2u, itk::NeighborhoodAllocator< itk::Vector< float, 2u >* > > const * arg2, itk::NeighborhoodAccessorFunctor< itk::Image< itk::Vector< float, 2u >, 2u > > const & arg3) const;
     void SetConstant(itkVectorF2 const & c);
     itkVectorF2 const & GetConstant() const;
     virtual bool RequiresCompleteNeighborhood();
     ~itkConstantBoundaryConditionIVF22();
   private:
   protected:
 };


 class itkConstantBoundaryConditionIVF33 : public itkImageBoundaryConditionIVF33 {
   public:
     enum  {  ImageDimension = 3 };
     itkConstantBoundaryConditionIVF33 & operator=(itkConstantBoundaryConditionIVF33 const & arg0);
     itkConstantBoundaryConditionIVF33(itkConstantBoundaryConditionIVF33 const & arg0);
     itkConstantBoundaryConditionIVF33();
     virtual itkVectorF3 operator()(itkOffset3 const & arg0, itkOffset3 const & arg1, itk::Neighborhood< itk::Vector< float, 3u >*, 3u, itk::NeighborhoodAllocator< itk::Vector< float, 3u >* > > const * arg2) const;
     virtual itkVectorF3 operator()(itkOffset3 const & arg0, itkOffset3 const & arg1, itk::Neighborhood< itk::Vector< float, 3u >*, 3u, itk::NeighborhoodAllocator< itk::Vector< float, 3u >* > > const * arg2, itk::NeighborhoodAccessorFunctor< itk::Image< itk::Vector< float, 3u >, 3u > > const & arg3) const;
     void SetConstant(itkVectorF3 const & c);
     itkVectorF3 const & GetConstant() const;
     virtual bool RequiresCompleteNeighborhood();
     ~itkConstantBoundaryConditionIVF33();
   private:
   protected:
 };


