// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkAggregateLabelMapFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkAggregateLabelMapFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkAggregateLabelMapFilterGuile
#endif
#ifdef SWIGJAVA
%module itkAggregateLabelMapFilterJava
#endif
#ifdef SWIGLUA
%module itkAggregateLabelMapFilterLua
#endif
#ifdef SWIGMODULA3
%module itkAggregateLabelMapFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkAggregateLabelMapFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkAggregateLabelMapFilterOcaml
#endif
#ifdef SWIGPERL
%module itkAggregateLabelMapFilterPerl
#endif
#ifdef SWIGPERL5
%module itkAggregateLabelMapFilterPerl5
#endif
#ifdef SWIGPHP
%module itkAggregateLabelMapFilterPhp
#endif
#ifdef SWIGPHP4
%module itkAggregateLabelMapFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkAggregateLabelMapFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkAggregateLabelMapFilterPike
#endif
#ifdef SWIGPYTHON
%module itkAggregateLabelMapFilterPython
#endif
#ifdef SWIGR
%module itkAggregateLabelMapFilterR
#endif
#ifdef SWIGRUBY
%module itkAggregateLabelMapFilterRuby
#endif
#ifdef SWIGSEXP
%module itkAggregateLabelMapFilterSexp
#endif
#ifdef SWIGTCL
%module itkAggregateLabelMapFilterTcl
#endif
#ifdef SWIGXML
%module itkAggregateLabelMapFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "Numerics.includes"
#include "BinaryMorphology.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkInPlaceLabelMapFilter.i


%include itk.i
%include wrap_itkAggregateLabelMapFilter_ext.i


 class itkAggregateLabelMapFilterLM2 : public itkInPlaceLabelMapFilterLM2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkAggregateLabelMapFilterLM2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAggregateLabelMapFilterLM2(itkAggregateLabelMapFilterLM2 const & arg0);
     void operator=(itkAggregateLabelMapFilterLM2 const & arg0);
   protected:
     itkAggregateLabelMapFilterLM2();
     ~itkAggregateLabelMapFilterLM2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkAggregateLabelMapFilterLM2_Pointer {
   public:
     itkAggregateLabelMapFilterLM2_Pointer();
     itkAggregateLabelMapFilterLM2_Pointer(itkAggregateLabelMapFilterLM2_Pointer const & p);
     itkAggregateLabelMapFilterLM2_Pointer(itkAggregateLabelMapFilterLM2 * p);
     ~itkAggregateLabelMapFilterLM2_Pointer();
     itkAggregateLabelMapFilterLM2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAggregateLabelMapFilterLM2 * GetPointer() const;
     bool operator<(itkAggregateLabelMapFilterLM2_Pointer const & r) const;
     bool operator>(itkAggregateLabelMapFilterLM2_Pointer const & r) const;
     bool operator<=(itkAggregateLabelMapFilterLM2_Pointer const & r) const;
     bool operator>=(itkAggregateLabelMapFilterLM2_Pointer const & r) const;
     itkAggregateLabelMapFilterLM2_Pointer & operator=(itkAggregateLabelMapFilterLM2_Pointer const & r);
     itkAggregateLabelMapFilterLM2_Pointer & operator=(itkAggregateLabelMapFilterLM2 * r);
     itkAggregateLabelMapFilterLM2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAggregateLabelMapFilterLM3 : public itkInPlaceLabelMapFilterLM3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkAggregateLabelMapFilterLM3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAggregateLabelMapFilterLM3(itkAggregateLabelMapFilterLM3 const & arg0);
     void operator=(itkAggregateLabelMapFilterLM3 const & arg0);
   protected:
     itkAggregateLabelMapFilterLM3();
     ~itkAggregateLabelMapFilterLM3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkAggregateLabelMapFilterLM3_Pointer {
   public:
     itkAggregateLabelMapFilterLM3_Pointer();
     itkAggregateLabelMapFilterLM3_Pointer(itkAggregateLabelMapFilterLM3_Pointer const & p);
     itkAggregateLabelMapFilterLM3_Pointer(itkAggregateLabelMapFilterLM3 * p);
     ~itkAggregateLabelMapFilterLM3_Pointer();
     itkAggregateLabelMapFilterLM3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAggregateLabelMapFilterLM3 * GetPointer() const;
     bool operator<(itkAggregateLabelMapFilterLM3_Pointer const & r) const;
     bool operator>(itkAggregateLabelMapFilterLM3_Pointer const & r) const;
     bool operator<=(itkAggregateLabelMapFilterLM3_Pointer const & r) const;
     bool operator>=(itkAggregateLabelMapFilterLM3_Pointer const & r) const;
     itkAggregateLabelMapFilterLM3_Pointer & operator=(itkAggregateLabelMapFilterLM3_Pointer const & r);
     itkAggregateLabelMapFilterLM3_Pointer & operator=(itkAggregateLabelMapFilterLM3 * r);
     itkAggregateLabelMapFilterLM3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


