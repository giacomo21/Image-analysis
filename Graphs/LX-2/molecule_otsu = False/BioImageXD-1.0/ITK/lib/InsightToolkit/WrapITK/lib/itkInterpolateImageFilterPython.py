# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkInterpolateImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkInterpolateImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkInterpolateImageFilterPython
            return _itkInterpolateImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkInterpolateImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkInterpolateImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkInterpolateImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKRegionsPython
import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImageToImageFilterAPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkInterpolateImageFunctionPython
import itkContinuousIndexPython
import itkImageFunctionPython
import itkFunctionBasePython
import itkArrayPython
def itkInterpolateImageFilterID3ID3_New():
  return itkInterpolateImageFilterID3ID3.New()

def itkInterpolateImageFilterID2ID2_New():
  return itkInterpolateImageFilterID2ID2.New()

def itkInterpolateImageFilterIF3IF3_New():
  return itkInterpolateImageFilterIF3IF3.New()

def itkInterpolateImageFilterIF2IF2_New():
  return itkInterpolateImageFilterIF2IF2.New()

def itkInterpolateImageFilterIUS3IUS3_New():
  return itkInterpolateImageFilterIUS3IUS3.New()

def itkInterpolateImageFilterIUS2IUS2_New():
  return itkInterpolateImageFilterIUS2IUS2.New()

def itkInterpolateImageFilterIUL3IUL3_New():
  return itkInterpolateImageFilterIUL3IUL3.New()

def itkInterpolateImageFilterIUL2IUL2_New():
  return itkInterpolateImageFilterIUL2IUL2.New()

def itkInterpolateImageFilterIUC3IUC3_New():
  return itkInterpolateImageFilterIUC3IUC3.New()

def itkInterpolateImageFilterIUC2IUC2_New():
  return itkInterpolateImageFilterIUC2IUC2.New()

class itkInterpolateImageFilterID2ID2(itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    """Proxy of C++ itkInterpolateImageFilterID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkInterpolateImageFilterPython.itkInterpolateImageFilterID2ID2_ImageDimension
    IntermediateImageDimension = _itkInterpolateImageFilterPython.itkInterpolateImageFilterID2ID2_IntermediateImageDimension
    InputHasNumericTraitsCheck = _itkInterpolateImageFilterPython.itkInterpolateImageFilterID2ID2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageD2 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterID2ID2_SetInput1(self, *args)

    def GetInput1(self):
        """GetInput1(self) -> itkImageD2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterID2ID2_GetInput1(self)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageD2 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterID2ID2_SetInput2(self, *args)

    def GetInput2(self):
        """GetInput2(self) -> itkImageD2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterID2ID2_GetInput2(self)

    def SetDistance(self, *args):
        """SetDistance(self, double _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterID2ID2_SetDistance(self, *args)

    def GetDistance(self):
        """GetDistance(self) -> double"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterID2ID2_GetDistance(self)

    def SetInterpolator(self, *args):
        """SetInterpolator(self, itkInterpolateImageFunctionID3D _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterID2ID2_SetInterpolator(self, *args)

    def GetInterpolator(self):
        """GetInterpolator(self) -> itkInterpolateImageFunctionID3D"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterID2ID2_GetInterpolator(self)

    def BeforeThreadedGenerateData(self):
        """BeforeThreadedGenerateData(self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterID2ID2_BeforeThreadedGenerateData(self)

    def AfterThreadedGenerateData(self):
        """AfterThreadedGenerateData(self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterID2ID2_AfterThreadedGenerateData(self)

    __swig_destroy__ = _itkInterpolateImageFilterPython.delete_itkInterpolateImageFilterID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInterpolateImageFilterID2ID2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInterpolateImageFilterID2ID2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInterpolateImageFilterID2ID2
        
        Create a new object of the class itkInterpolateImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInterpolateImageFilterID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInterpolateImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInterpolateImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInterpolateImageFilterID2ID2.SetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterID2ID2_SetInput1,None,itkInterpolateImageFilterID2ID2)
itkInterpolateImageFilterID2ID2.GetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterID2ID2_GetInput1,None,itkInterpolateImageFilterID2ID2)
itkInterpolateImageFilterID2ID2.SetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterID2ID2_SetInput2,None,itkInterpolateImageFilterID2ID2)
itkInterpolateImageFilterID2ID2.GetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterID2ID2_GetInput2,None,itkInterpolateImageFilterID2ID2)
itkInterpolateImageFilterID2ID2.SetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterID2ID2_SetDistance,None,itkInterpolateImageFilterID2ID2)
itkInterpolateImageFilterID2ID2.GetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterID2ID2_GetDistance,None,itkInterpolateImageFilterID2ID2)
itkInterpolateImageFilterID2ID2.SetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterID2ID2_SetInterpolator,None,itkInterpolateImageFilterID2ID2)
itkInterpolateImageFilterID2ID2.GetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterID2ID2_GetInterpolator,None,itkInterpolateImageFilterID2ID2)
itkInterpolateImageFilterID2ID2.BeforeThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterID2ID2_BeforeThreadedGenerateData,None,itkInterpolateImageFilterID2ID2)
itkInterpolateImageFilterID2ID2.AfterThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterID2ID2_AfterThreadedGenerateData,None,itkInterpolateImageFilterID2ID2)
itkInterpolateImageFilterID2ID2.GetPointer = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterID2ID2_GetPointer,None,itkInterpolateImageFilterID2ID2)
itkInterpolateImageFilterID2ID2_swigregister = _itkInterpolateImageFilterPython.itkInterpolateImageFilterID2ID2_swigregister
itkInterpolateImageFilterID2ID2_swigregister(itkInterpolateImageFilterID2ID2)

def itkInterpolateImageFilterID2ID2___New_orig__():
  """itkInterpolateImageFilterID2ID2___New_orig__()"""
  return _itkInterpolateImageFilterPython.itkInterpolateImageFilterID2ID2___New_orig__()

def itkInterpolateImageFilterID2ID2_cast(*args):
  """itkInterpolateImageFilterID2ID2_cast(itkLightObject obj) -> itkInterpolateImageFilterID2ID2"""
  return _itkInterpolateImageFilterPython.itkInterpolateImageFilterID2ID2_cast(*args)

class itkInterpolateImageFilterID3ID3(itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    """Proxy of C++ itkInterpolateImageFilterID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkInterpolateImageFilterPython.itkInterpolateImageFilterID3ID3_ImageDimension
    IntermediateImageDimension = _itkInterpolateImageFilterPython.itkInterpolateImageFilterID3ID3_IntermediateImageDimension
    InputHasNumericTraitsCheck = _itkInterpolateImageFilterPython.itkInterpolateImageFilterID3ID3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageD3 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterID3ID3_SetInput1(self, *args)

    def GetInput1(self):
        """GetInput1(self) -> itkImageD3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterID3ID3_GetInput1(self)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageD3 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterID3ID3_SetInput2(self, *args)

    def GetInput2(self):
        """GetInput2(self) -> itkImageD3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterID3ID3_GetInput2(self)

    def SetDistance(self, *args):
        """SetDistance(self, double _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterID3ID3_SetDistance(self, *args)

    def GetDistance(self):
        """GetDistance(self) -> double"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterID3ID3_GetDistance(self)

    def SetInterpolator(self, *args):
        """SetInterpolator(self, itk::InterpolateImageFunction<(itk::Image<(double,4u)>,double)> _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterID3ID3_SetInterpolator(self, *args)

    def GetInterpolator(self):
        """GetInterpolator(self) -> itk::InterpolateImageFunction<(itk::Image<(double,4u)>,double)>"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterID3ID3_GetInterpolator(self)

    def BeforeThreadedGenerateData(self):
        """BeforeThreadedGenerateData(self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterID3ID3_BeforeThreadedGenerateData(self)

    def AfterThreadedGenerateData(self):
        """AfterThreadedGenerateData(self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterID3ID3_AfterThreadedGenerateData(self)

    __swig_destroy__ = _itkInterpolateImageFilterPython.delete_itkInterpolateImageFilterID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInterpolateImageFilterID3ID3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInterpolateImageFilterID3ID3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInterpolateImageFilterID3ID3
        
        Create a new object of the class itkInterpolateImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInterpolateImageFilterID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInterpolateImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInterpolateImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInterpolateImageFilterID3ID3.SetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterID3ID3_SetInput1,None,itkInterpolateImageFilterID3ID3)
itkInterpolateImageFilterID3ID3.GetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterID3ID3_GetInput1,None,itkInterpolateImageFilterID3ID3)
itkInterpolateImageFilterID3ID3.SetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterID3ID3_SetInput2,None,itkInterpolateImageFilterID3ID3)
itkInterpolateImageFilterID3ID3.GetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterID3ID3_GetInput2,None,itkInterpolateImageFilterID3ID3)
itkInterpolateImageFilterID3ID3.SetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterID3ID3_SetDistance,None,itkInterpolateImageFilterID3ID3)
itkInterpolateImageFilterID3ID3.GetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterID3ID3_GetDistance,None,itkInterpolateImageFilterID3ID3)
itkInterpolateImageFilterID3ID3.SetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterID3ID3_SetInterpolator,None,itkInterpolateImageFilterID3ID3)
itkInterpolateImageFilterID3ID3.GetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterID3ID3_GetInterpolator,None,itkInterpolateImageFilterID3ID3)
itkInterpolateImageFilterID3ID3.BeforeThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterID3ID3_BeforeThreadedGenerateData,None,itkInterpolateImageFilterID3ID3)
itkInterpolateImageFilterID3ID3.AfterThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterID3ID3_AfterThreadedGenerateData,None,itkInterpolateImageFilterID3ID3)
itkInterpolateImageFilterID3ID3.GetPointer = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterID3ID3_GetPointer,None,itkInterpolateImageFilterID3ID3)
itkInterpolateImageFilterID3ID3_swigregister = _itkInterpolateImageFilterPython.itkInterpolateImageFilterID3ID3_swigregister
itkInterpolateImageFilterID3ID3_swigregister(itkInterpolateImageFilterID3ID3)

def itkInterpolateImageFilterID3ID3___New_orig__():
  """itkInterpolateImageFilterID3ID3___New_orig__()"""
  return _itkInterpolateImageFilterPython.itkInterpolateImageFilterID3ID3___New_orig__()

def itkInterpolateImageFilterID3ID3_cast(*args):
  """itkInterpolateImageFilterID3ID3_cast(itkLightObject obj) -> itkInterpolateImageFilterID3ID3"""
  return _itkInterpolateImageFilterPython.itkInterpolateImageFilterID3ID3_cast(*args)

class itkInterpolateImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkInterpolateImageFilterIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_ImageDimension
    IntermediateImageDimension = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_IntermediateImageDimension
    InputHasNumericTraitsCheck = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageF2 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_SetInput1(self, *args)

    def GetInput1(self):
        """GetInput1(self) -> itkImageF2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_GetInput1(self)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageF2 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_SetInput2(self, *args)

    def GetInput2(self):
        """GetInput2(self) -> itkImageF2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_GetInput2(self)

    def SetDistance(self, *args):
        """SetDistance(self, double _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_SetDistance(self, *args)

    def GetDistance(self):
        """GetDistance(self) -> double"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_GetDistance(self)

    def SetInterpolator(self, *args):
        """SetInterpolator(self, itkInterpolateImageFunctionIF3D _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_SetInterpolator(self, *args)

    def GetInterpolator(self):
        """GetInterpolator(self) -> itkInterpolateImageFunctionIF3D"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_GetInterpolator(self)

    def BeforeThreadedGenerateData(self):
        """BeforeThreadedGenerateData(self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_BeforeThreadedGenerateData(self)

    def AfterThreadedGenerateData(self):
        """AfterThreadedGenerateData(self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_AfterThreadedGenerateData(self)

    __swig_destroy__ = _itkInterpolateImageFilterPython.delete_itkInterpolateImageFilterIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInterpolateImageFilterIF2IF2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInterpolateImageFilterIF2IF2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInterpolateImageFilterIF2IF2
        
        Create a new object of the class itkInterpolateImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInterpolateImageFilterIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInterpolateImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInterpolateImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInterpolateImageFilterIF2IF2.SetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_SetInput1,None,itkInterpolateImageFilterIF2IF2)
itkInterpolateImageFilterIF2IF2.GetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_GetInput1,None,itkInterpolateImageFilterIF2IF2)
itkInterpolateImageFilterIF2IF2.SetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_SetInput2,None,itkInterpolateImageFilterIF2IF2)
itkInterpolateImageFilterIF2IF2.GetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_GetInput2,None,itkInterpolateImageFilterIF2IF2)
itkInterpolateImageFilterIF2IF2.SetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_SetDistance,None,itkInterpolateImageFilterIF2IF2)
itkInterpolateImageFilterIF2IF2.GetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_GetDistance,None,itkInterpolateImageFilterIF2IF2)
itkInterpolateImageFilterIF2IF2.SetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_SetInterpolator,None,itkInterpolateImageFilterIF2IF2)
itkInterpolateImageFilterIF2IF2.GetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_GetInterpolator,None,itkInterpolateImageFilterIF2IF2)
itkInterpolateImageFilterIF2IF2.BeforeThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_BeforeThreadedGenerateData,None,itkInterpolateImageFilterIF2IF2)
itkInterpolateImageFilterIF2IF2.AfterThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_AfterThreadedGenerateData,None,itkInterpolateImageFilterIF2IF2)
itkInterpolateImageFilterIF2IF2.GetPointer = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_GetPointer,None,itkInterpolateImageFilterIF2IF2)
itkInterpolateImageFilterIF2IF2_swigregister = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_swigregister
itkInterpolateImageFilterIF2IF2_swigregister(itkInterpolateImageFilterIF2IF2)

def itkInterpolateImageFilterIF2IF2___New_orig__():
  """itkInterpolateImageFilterIF2IF2___New_orig__()"""
  return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2___New_orig__()

def itkInterpolateImageFilterIF2IF2_cast(*args):
  """itkInterpolateImageFilterIF2IF2_cast(itkLightObject obj) -> itkInterpolateImageFilterIF2IF2"""
  return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF2IF2_cast(*args)

class itkInterpolateImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkInterpolateImageFilterIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_ImageDimension
    IntermediateImageDimension = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_IntermediateImageDimension
    InputHasNumericTraitsCheck = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageF3 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_SetInput1(self, *args)

    def GetInput1(self):
        """GetInput1(self) -> itkImageF3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_GetInput1(self)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageF3 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_SetInput2(self, *args)

    def GetInput2(self):
        """GetInput2(self) -> itkImageF3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_GetInput2(self)

    def SetDistance(self, *args):
        """SetDistance(self, double _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_SetDistance(self, *args)

    def GetDistance(self):
        """GetDistance(self) -> double"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_GetDistance(self)

    def SetInterpolator(self, *args):
        """SetInterpolator(self, itk::InterpolateImageFunction<(itk::Image<(float,4u)>,double)> _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_SetInterpolator(self, *args)

    def GetInterpolator(self):
        """GetInterpolator(self) -> itk::InterpolateImageFunction<(itk::Image<(float,4u)>,double)>"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_GetInterpolator(self)

    def BeforeThreadedGenerateData(self):
        """BeforeThreadedGenerateData(self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_BeforeThreadedGenerateData(self)

    def AfterThreadedGenerateData(self):
        """AfterThreadedGenerateData(self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_AfterThreadedGenerateData(self)

    __swig_destroy__ = _itkInterpolateImageFilterPython.delete_itkInterpolateImageFilterIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInterpolateImageFilterIF3IF3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInterpolateImageFilterIF3IF3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInterpolateImageFilterIF3IF3
        
        Create a new object of the class itkInterpolateImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInterpolateImageFilterIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInterpolateImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInterpolateImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInterpolateImageFilterIF3IF3.SetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_SetInput1,None,itkInterpolateImageFilterIF3IF3)
itkInterpolateImageFilterIF3IF3.GetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_GetInput1,None,itkInterpolateImageFilterIF3IF3)
itkInterpolateImageFilterIF3IF3.SetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_SetInput2,None,itkInterpolateImageFilterIF3IF3)
itkInterpolateImageFilterIF3IF3.GetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_GetInput2,None,itkInterpolateImageFilterIF3IF3)
itkInterpolateImageFilterIF3IF3.SetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_SetDistance,None,itkInterpolateImageFilterIF3IF3)
itkInterpolateImageFilterIF3IF3.GetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_GetDistance,None,itkInterpolateImageFilterIF3IF3)
itkInterpolateImageFilterIF3IF3.SetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_SetInterpolator,None,itkInterpolateImageFilterIF3IF3)
itkInterpolateImageFilterIF3IF3.GetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_GetInterpolator,None,itkInterpolateImageFilterIF3IF3)
itkInterpolateImageFilterIF3IF3.BeforeThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_BeforeThreadedGenerateData,None,itkInterpolateImageFilterIF3IF3)
itkInterpolateImageFilterIF3IF3.AfterThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_AfterThreadedGenerateData,None,itkInterpolateImageFilterIF3IF3)
itkInterpolateImageFilterIF3IF3.GetPointer = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_GetPointer,None,itkInterpolateImageFilterIF3IF3)
itkInterpolateImageFilterIF3IF3_swigregister = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_swigregister
itkInterpolateImageFilterIF3IF3_swigregister(itkInterpolateImageFilterIF3IF3)

def itkInterpolateImageFilterIF3IF3___New_orig__():
  """itkInterpolateImageFilterIF3IF3___New_orig__()"""
  return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3___New_orig__()

def itkInterpolateImageFilterIF3IF3_cast(*args):
  """itkInterpolateImageFilterIF3IF3_cast(itkLightObject obj) -> itkInterpolateImageFilterIF3IF3"""
  return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIF3IF3_cast(*args)

class itkInterpolateImageFilterIUC2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """Proxy of C++ itkInterpolateImageFilterIUC2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_ImageDimension
    IntermediateImageDimension = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_IntermediateImageDimension
    InputHasNumericTraitsCheck = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageUC2 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_SetInput1(self, *args)

    def GetInput1(self):
        """GetInput1(self) -> itkImageUC2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_GetInput1(self)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageUC2 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_SetInput2(self, *args)

    def GetInput2(self):
        """GetInput2(self) -> itkImageUC2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_GetInput2(self)

    def SetDistance(self, *args):
        """SetDistance(self, double _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_SetDistance(self, *args)

    def GetDistance(self):
        """GetDistance(self) -> double"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_GetDistance(self)

    def SetInterpolator(self, *args):
        """SetInterpolator(self, itkInterpolateImageFunctionIUC3D _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_SetInterpolator(self, *args)

    def GetInterpolator(self):
        """GetInterpolator(self) -> itkInterpolateImageFunctionIUC3D"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_GetInterpolator(self)

    def BeforeThreadedGenerateData(self):
        """BeforeThreadedGenerateData(self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_BeforeThreadedGenerateData(self)

    def AfterThreadedGenerateData(self):
        """AfterThreadedGenerateData(self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_AfterThreadedGenerateData(self)

    __swig_destroy__ = _itkInterpolateImageFilterPython.delete_itkInterpolateImageFilterIUC2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInterpolateImageFilterIUC2IUC2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInterpolateImageFilterIUC2IUC2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInterpolateImageFilterIUC2IUC2
        
        Create a new object of the class itkInterpolateImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInterpolateImageFilterIUC2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInterpolateImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInterpolateImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInterpolateImageFilterIUC2IUC2.SetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_SetInput1,None,itkInterpolateImageFilterIUC2IUC2)
itkInterpolateImageFilterIUC2IUC2.GetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_GetInput1,None,itkInterpolateImageFilterIUC2IUC2)
itkInterpolateImageFilterIUC2IUC2.SetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_SetInput2,None,itkInterpolateImageFilterIUC2IUC2)
itkInterpolateImageFilterIUC2IUC2.GetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_GetInput2,None,itkInterpolateImageFilterIUC2IUC2)
itkInterpolateImageFilterIUC2IUC2.SetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_SetDistance,None,itkInterpolateImageFilterIUC2IUC2)
itkInterpolateImageFilterIUC2IUC2.GetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_GetDistance,None,itkInterpolateImageFilterIUC2IUC2)
itkInterpolateImageFilterIUC2IUC2.SetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_SetInterpolator,None,itkInterpolateImageFilterIUC2IUC2)
itkInterpolateImageFilterIUC2IUC2.GetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_GetInterpolator,None,itkInterpolateImageFilterIUC2IUC2)
itkInterpolateImageFilterIUC2IUC2.BeforeThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_BeforeThreadedGenerateData,None,itkInterpolateImageFilterIUC2IUC2)
itkInterpolateImageFilterIUC2IUC2.AfterThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_AfterThreadedGenerateData,None,itkInterpolateImageFilterIUC2IUC2)
itkInterpolateImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_GetPointer,None,itkInterpolateImageFilterIUC2IUC2)
itkInterpolateImageFilterIUC2IUC2_swigregister = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_swigregister
itkInterpolateImageFilterIUC2IUC2_swigregister(itkInterpolateImageFilterIUC2IUC2)

def itkInterpolateImageFilterIUC2IUC2___New_orig__():
  """itkInterpolateImageFilterIUC2IUC2___New_orig__()"""
  return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2___New_orig__()

def itkInterpolateImageFilterIUC2IUC2_cast(*args):
  """itkInterpolateImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkInterpolateImageFilterIUC2IUC2"""
  return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC2IUC2_cast(*args)

class itkInterpolateImageFilterIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """Proxy of C++ itkInterpolateImageFilterIUC3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_ImageDimension
    IntermediateImageDimension = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_IntermediateImageDimension
    InputHasNumericTraitsCheck = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageUC3 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_SetInput1(self, *args)

    def GetInput1(self):
        """GetInput1(self) -> itkImageUC3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_GetInput1(self)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageUC3 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_SetInput2(self, *args)

    def GetInput2(self):
        """GetInput2(self) -> itkImageUC3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_GetInput2(self)

    def SetDistance(self, *args):
        """SetDistance(self, double _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_SetDistance(self, *args)

    def GetDistance(self):
        """GetDistance(self) -> double"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_GetDistance(self)

    def SetInterpolator(self, *args):
        """SetInterpolator(self, itk::InterpolateImageFunction<(itk::Image<(unsigned char,4u)>,double)> _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_SetInterpolator(self, *args)

    def GetInterpolator(self):
        """GetInterpolator(self) -> itk::InterpolateImageFunction<(itk::Image<(unsigned char,4u)>,double)>"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_GetInterpolator(self)

    def BeforeThreadedGenerateData(self):
        """BeforeThreadedGenerateData(self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_BeforeThreadedGenerateData(self)

    def AfterThreadedGenerateData(self):
        """AfterThreadedGenerateData(self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_AfterThreadedGenerateData(self)

    __swig_destroy__ = _itkInterpolateImageFilterPython.delete_itkInterpolateImageFilterIUC3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInterpolateImageFilterIUC3IUC3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInterpolateImageFilterIUC3IUC3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInterpolateImageFilterIUC3IUC3
        
        Create a new object of the class itkInterpolateImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInterpolateImageFilterIUC3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInterpolateImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInterpolateImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInterpolateImageFilterIUC3IUC3.SetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_SetInput1,None,itkInterpolateImageFilterIUC3IUC3)
itkInterpolateImageFilterIUC3IUC3.GetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_GetInput1,None,itkInterpolateImageFilterIUC3IUC3)
itkInterpolateImageFilterIUC3IUC3.SetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_SetInput2,None,itkInterpolateImageFilterIUC3IUC3)
itkInterpolateImageFilterIUC3IUC3.GetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_GetInput2,None,itkInterpolateImageFilterIUC3IUC3)
itkInterpolateImageFilterIUC3IUC3.SetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_SetDistance,None,itkInterpolateImageFilterIUC3IUC3)
itkInterpolateImageFilterIUC3IUC3.GetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_GetDistance,None,itkInterpolateImageFilterIUC3IUC3)
itkInterpolateImageFilterIUC3IUC3.SetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_SetInterpolator,None,itkInterpolateImageFilterIUC3IUC3)
itkInterpolateImageFilterIUC3IUC3.GetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_GetInterpolator,None,itkInterpolateImageFilterIUC3IUC3)
itkInterpolateImageFilterIUC3IUC3.BeforeThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_BeforeThreadedGenerateData,None,itkInterpolateImageFilterIUC3IUC3)
itkInterpolateImageFilterIUC3IUC3.AfterThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_AfterThreadedGenerateData,None,itkInterpolateImageFilterIUC3IUC3)
itkInterpolateImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_GetPointer,None,itkInterpolateImageFilterIUC3IUC3)
itkInterpolateImageFilterIUC3IUC3_swigregister = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_swigregister
itkInterpolateImageFilterIUC3IUC3_swigregister(itkInterpolateImageFilterIUC3IUC3)

def itkInterpolateImageFilterIUC3IUC3___New_orig__():
  """itkInterpolateImageFilterIUC3IUC3___New_orig__()"""
  return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3___New_orig__()

def itkInterpolateImageFilterIUC3IUC3_cast(*args):
  """itkInterpolateImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkInterpolateImageFilterIUC3IUC3"""
  return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUC3IUC3_cast(*args)

class itkInterpolateImageFilterIUL2IUL2(itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2):
    """Proxy of C++ itkInterpolateImageFilterIUL2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL2IUL2_ImageDimension
    IntermediateImageDimension = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL2IUL2_IntermediateImageDimension
    InputHasNumericTraitsCheck = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL2IUL2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageUL2 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL2IUL2_SetInput1(self, *args)

    def GetInput1(self):
        """GetInput1(self) -> itkImageUL2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL2IUL2_GetInput1(self)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageUL2 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL2IUL2_SetInput2(self, *args)

    def GetInput2(self):
        """GetInput2(self) -> itkImageUL2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL2IUL2_GetInput2(self)

    def SetDistance(self, *args):
        """SetDistance(self, double _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL2IUL2_SetDistance(self, *args)

    def GetDistance(self):
        """GetDistance(self) -> double"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL2IUL2_GetDistance(self)

    def SetInterpolator(self, *args):
        """SetInterpolator(self, itkInterpolateImageFunctionIUL3D _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL2IUL2_SetInterpolator(self, *args)

    def GetInterpolator(self):
        """GetInterpolator(self) -> itkInterpolateImageFunctionIUL3D"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL2IUL2_GetInterpolator(self)

    def BeforeThreadedGenerateData(self):
        """BeforeThreadedGenerateData(self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL2IUL2_BeforeThreadedGenerateData(self)

    def AfterThreadedGenerateData(self):
        """AfterThreadedGenerateData(self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL2IUL2_AfterThreadedGenerateData(self)

    __swig_destroy__ = _itkInterpolateImageFilterPython.delete_itkInterpolateImageFilterIUL2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInterpolateImageFilterIUL2IUL2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInterpolateImageFilterIUL2IUL2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInterpolateImageFilterIUL2IUL2
        
        Create a new object of the class itkInterpolateImageFilterIUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInterpolateImageFilterIUL2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInterpolateImageFilterIUL2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInterpolateImageFilterIUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInterpolateImageFilterIUL2IUL2.SetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL2IUL2_SetInput1,None,itkInterpolateImageFilterIUL2IUL2)
itkInterpolateImageFilterIUL2IUL2.GetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL2IUL2_GetInput1,None,itkInterpolateImageFilterIUL2IUL2)
itkInterpolateImageFilterIUL2IUL2.SetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL2IUL2_SetInput2,None,itkInterpolateImageFilterIUL2IUL2)
itkInterpolateImageFilterIUL2IUL2.GetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL2IUL2_GetInput2,None,itkInterpolateImageFilterIUL2IUL2)
itkInterpolateImageFilterIUL2IUL2.SetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL2IUL2_SetDistance,None,itkInterpolateImageFilterIUL2IUL2)
itkInterpolateImageFilterIUL2IUL2.GetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL2IUL2_GetDistance,None,itkInterpolateImageFilterIUL2IUL2)
itkInterpolateImageFilterIUL2IUL2.SetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL2IUL2_SetInterpolator,None,itkInterpolateImageFilterIUL2IUL2)
itkInterpolateImageFilterIUL2IUL2.GetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL2IUL2_GetInterpolator,None,itkInterpolateImageFilterIUL2IUL2)
itkInterpolateImageFilterIUL2IUL2.BeforeThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL2IUL2_BeforeThreadedGenerateData,None,itkInterpolateImageFilterIUL2IUL2)
itkInterpolateImageFilterIUL2IUL2.AfterThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL2IUL2_AfterThreadedGenerateData,None,itkInterpolateImageFilterIUL2IUL2)
itkInterpolateImageFilterIUL2IUL2.GetPointer = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL2IUL2_GetPointer,None,itkInterpolateImageFilterIUL2IUL2)
itkInterpolateImageFilterIUL2IUL2_swigregister = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL2IUL2_swigregister
itkInterpolateImageFilterIUL2IUL2_swigregister(itkInterpolateImageFilterIUL2IUL2)

def itkInterpolateImageFilterIUL2IUL2___New_orig__():
  """itkInterpolateImageFilterIUL2IUL2___New_orig__()"""
  return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL2IUL2___New_orig__()

def itkInterpolateImageFilterIUL2IUL2_cast(*args):
  """itkInterpolateImageFilterIUL2IUL2_cast(itkLightObject obj) -> itkInterpolateImageFilterIUL2IUL2"""
  return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL2IUL2_cast(*args)

class itkInterpolateImageFilterIUL3IUL3(itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3):
    """Proxy of C++ itkInterpolateImageFilterIUL3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL3IUL3_ImageDimension
    IntermediateImageDimension = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL3IUL3_IntermediateImageDimension
    InputHasNumericTraitsCheck = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL3IUL3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageUL3 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL3IUL3_SetInput1(self, *args)

    def GetInput1(self):
        """GetInput1(self) -> itkImageUL3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL3IUL3_GetInput1(self)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageUL3 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL3IUL3_SetInput2(self, *args)

    def GetInput2(self):
        """GetInput2(self) -> itkImageUL3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL3IUL3_GetInput2(self)

    def SetDistance(self, *args):
        """SetDistance(self, double _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL3IUL3_SetDistance(self, *args)

    def GetDistance(self):
        """GetDistance(self) -> double"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL3IUL3_GetDistance(self)

    def SetInterpolator(self, *args):
        """SetInterpolator(self, itk::InterpolateImageFunction<(itk::Image<(unsigned long,4u)>,double)> _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL3IUL3_SetInterpolator(self, *args)

    def GetInterpolator(self):
        """GetInterpolator(self) -> itk::InterpolateImageFunction<(itk::Image<(unsigned long,4u)>,double)>"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL3IUL3_GetInterpolator(self)

    def BeforeThreadedGenerateData(self):
        """BeforeThreadedGenerateData(self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL3IUL3_BeforeThreadedGenerateData(self)

    def AfterThreadedGenerateData(self):
        """AfterThreadedGenerateData(self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL3IUL3_AfterThreadedGenerateData(self)

    __swig_destroy__ = _itkInterpolateImageFilterPython.delete_itkInterpolateImageFilterIUL3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInterpolateImageFilterIUL3IUL3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInterpolateImageFilterIUL3IUL3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInterpolateImageFilterIUL3IUL3
        
        Create a new object of the class itkInterpolateImageFilterIUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInterpolateImageFilterIUL3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInterpolateImageFilterIUL3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInterpolateImageFilterIUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInterpolateImageFilterIUL3IUL3.SetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL3IUL3_SetInput1,None,itkInterpolateImageFilterIUL3IUL3)
itkInterpolateImageFilterIUL3IUL3.GetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL3IUL3_GetInput1,None,itkInterpolateImageFilterIUL3IUL3)
itkInterpolateImageFilterIUL3IUL3.SetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL3IUL3_SetInput2,None,itkInterpolateImageFilterIUL3IUL3)
itkInterpolateImageFilterIUL3IUL3.GetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL3IUL3_GetInput2,None,itkInterpolateImageFilterIUL3IUL3)
itkInterpolateImageFilterIUL3IUL3.SetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL3IUL3_SetDistance,None,itkInterpolateImageFilterIUL3IUL3)
itkInterpolateImageFilterIUL3IUL3.GetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL3IUL3_GetDistance,None,itkInterpolateImageFilterIUL3IUL3)
itkInterpolateImageFilterIUL3IUL3.SetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL3IUL3_SetInterpolator,None,itkInterpolateImageFilterIUL3IUL3)
itkInterpolateImageFilterIUL3IUL3.GetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL3IUL3_GetInterpolator,None,itkInterpolateImageFilterIUL3IUL3)
itkInterpolateImageFilterIUL3IUL3.BeforeThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL3IUL3_BeforeThreadedGenerateData,None,itkInterpolateImageFilterIUL3IUL3)
itkInterpolateImageFilterIUL3IUL3.AfterThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL3IUL3_AfterThreadedGenerateData,None,itkInterpolateImageFilterIUL3IUL3)
itkInterpolateImageFilterIUL3IUL3.GetPointer = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL3IUL3_GetPointer,None,itkInterpolateImageFilterIUL3IUL3)
itkInterpolateImageFilterIUL3IUL3_swigregister = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL3IUL3_swigregister
itkInterpolateImageFilterIUL3IUL3_swigregister(itkInterpolateImageFilterIUL3IUL3)

def itkInterpolateImageFilterIUL3IUL3___New_orig__():
  """itkInterpolateImageFilterIUL3IUL3___New_orig__()"""
  return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL3IUL3___New_orig__()

def itkInterpolateImageFilterIUL3IUL3_cast(*args):
  """itkInterpolateImageFilterIUL3IUL3_cast(itkLightObject obj) -> itkInterpolateImageFilterIUL3IUL3"""
  return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUL3IUL3_cast(*args)

class itkInterpolateImageFilterIUS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """Proxy of C++ itkInterpolateImageFilterIUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_ImageDimension
    IntermediateImageDimension = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_IntermediateImageDimension
    InputHasNumericTraitsCheck = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageUS2 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_SetInput1(self, *args)

    def GetInput1(self):
        """GetInput1(self) -> itkImageUS2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_GetInput1(self)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageUS2 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_SetInput2(self, *args)

    def GetInput2(self):
        """GetInput2(self) -> itkImageUS2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_GetInput2(self)

    def SetDistance(self, *args):
        """SetDistance(self, double _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_SetDistance(self, *args)

    def GetDistance(self):
        """GetDistance(self) -> double"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_GetDistance(self)

    def SetInterpolator(self, *args):
        """SetInterpolator(self, itkInterpolateImageFunctionIUS3D _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_SetInterpolator(self, *args)

    def GetInterpolator(self):
        """GetInterpolator(self) -> itkInterpolateImageFunctionIUS3D"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_GetInterpolator(self)

    def BeforeThreadedGenerateData(self):
        """BeforeThreadedGenerateData(self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_BeforeThreadedGenerateData(self)

    def AfterThreadedGenerateData(self):
        """AfterThreadedGenerateData(self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_AfterThreadedGenerateData(self)

    __swig_destroy__ = _itkInterpolateImageFilterPython.delete_itkInterpolateImageFilterIUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInterpolateImageFilterIUS2IUS2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInterpolateImageFilterIUS2IUS2"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInterpolateImageFilterIUS2IUS2
        
        Create a new object of the class itkInterpolateImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInterpolateImageFilterIUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInterpolateImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInterpolateImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInterpolateImageFilterIUS2IUS2.SetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_SetInput1,None,itkInterpolateImageFilterIUS2IUS2)
itkInterpolateImageFilterIUS2IUS2.GetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_GetInput1,None,itkInterpolateImageFilterIUS2IUS2)
itkInterpolateImageFilterIUS2IUS2.SetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_SetInput2,None,itkInterpolateImageFilterIUS2IUS2)
itkInterpolateImageFilterIUS2IUS2.GetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_GetInput2,None,itkInterpolateImageFilterIUS2IUS2)
itkInterpolateImageFilterIUS2IUS2.SetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_SetDistance,None,itkInterpolateImageFilterIUS2IUS2)
itkInterpolateImageFilterIUS2IUS2.GetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_GetDistance,None,itkInterpolateImageFilterIUS2IUS2)
itkInterpolateImageFilterIUS2IUS2.SetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_SetInterpolator,None,itkInterpolateImageFilterIUS2IUS2)
itkInterpolateImageFilterIUS2IUS2.GetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_GetInterpolator,None,itkInterpolateImageFilterIUS2IUS2)
itkInterpolateImageFilterIUS2IUS2.BeforeThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_BeforeThreadedGenerateData,None,itkInterpolateImageFilterIUS2IUS2)
itkInterpolateImageFilterIUS2IUS2.AfterThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_AfterThreadedGenerateData,None,itkInterpolateImageFilterIUS2IUS2)
itkInterpolateImageFilterIUS2IUS2.GetPointer = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_GetPointer,None,itkInterpolateImageFilterIUS2IUS2)
itkInterpolateImageFilterIUS2IUS2_swigregister = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_swigregister
itkInterpolateImageFilterIUS2IUS2_swigregister(itkInterpolateImageFilterIUS2IUS2)

def itkInterpolateImageFilterIUS2IUS2___New_orig__():
  """itkInterpolateImageFilterIUS2IUS2___New_orig__()"""
  return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2___New_orig__()

def itkInterpolateImageFilterIUS2IUS2_cast(*args):
  """itkInterpolateImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkInterpolateImageFilterIUS2IUS2"""
  return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS2IUS2_cast(*args)

class itkInterpolateImageFilterIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """Proxy of C++ itkInterpolateImageFilterIUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_ImageDimension
    IntermediateImageDimension = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_IntermediateImageDimension
    InputHasNumericTraitsCheck = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageUS3 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_SetInput1(self, *args)

    def GetInput1(self):
        """GetInput1(self) -> itkImageUS3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_GetInput1(self)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageUS3 image)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_SetInput2(self, *args)

    def GetInput2(self):
        """GetInput2(self) -> itkImageUS3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_GetInput2(self)

    def SetDistance(self, *args):
        """SetDistance(self, double _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_SetDistance(self, *args)

    def GetDistance(self):
        """GetDistance(self) -> double"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_GetDistance(self)

    def SetInterpolator(self, *args):
        """SetInterpolator(self, itk::InterpolateImageFunction<(itk::Image<(unsigned short,4u)>,double)> _arg)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_SetInterpolator(self, *args)

    def GetInterpolator(self):
        """GetInterpolator(self) -> itk::InterpolateImageFunction<(itk::Image<(unsigned short,4u)>,double)>"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_GetInterpolator(self)

    def BeforeThreadedGenerateData(self):
        """BeforeThreadedGenerateData(self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_BeforeThreadedGenerateData(self)

    def AfterThreadedGenerateData(self):
        """AfterThreadedGenerateData(self)"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_AfterThreadedGenerateData(self)

    __swig_destroy__ = _itkInterpolateImageFilterPython.delete_itkInterpolateImageFilterIUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInterpolateImageFilterIUS3IUS3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInterpolateImageFilterIUS3IUS3"""
        return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInterpolateImageFilterIUS3IUS3
        
        Create a new object of the class itkInterpolateImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInterpolateImageFilterIUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInterpolateImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInterpolateImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInterpolateImageFilterIUS3IUS3.SetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_SetInput1,None,itkInterpolateImageFilterIUS3IUS3)
itkInterpolateImageFilterIUS3IUS3.GetInput1 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_GetInput1,None,itkInterpolateImageFilterIUS3IUS3)
itkInterpolateImageFilterIUS3IUS3.SetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_SetInput2,None,itkInterpolateImageFilterIUS3IUS3)
itkInterpolateImageFilterIUS3IUS3.GetInput2 = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_GetInput2,None,itkInterpolateImageFilterIUS3IUS3)
itkInterpolateImageFilterIUS3IUS3.SetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_SetDistance,None,itkInterpolateImageFilterIUS3IUS3)
itkInterpolateImageFilterIUS3IUS3.GetDistance = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_GetDistance,None,itkInterpolateImageFilterIUS3IUS3)
itkInterpolateImageFilterIUS3IUS3.SetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_SetInterpolator,None,itkInterpolateImageFilterIUS3IUS3)
itkInterpolateImageFilterIUS3IUS3.GetInterpolator = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_GetInterpolator,None,itkInterpolateImageFilterIUS3IUS3)
itkInterpolateImageFilterIUS3IUS3.BeforeThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_BeforeThreadedGenerateData,None,itkInterpolateImageFilterIUS3IUS3)
itkInterpolateImageFilterIUS3IUS3.AfterThreadedGenerateData = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_AfterThreadedGenerateData,None,itkInterpolateImageFilterIUS3IUS3)
itkInterpolateImageFilterIUS3IUS3.GetPointer = new_instancemethod(_itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_GetPointer,None,itkInterpolateImageFilterIUS3IUS3)
itkInterpolateImageFilterIUS3IUS3_swigregister = _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_swigregister
itkInterpolateImageFilterIUS3IUS3_swigregister(itkInterpolateImageFilterIUS3IUS3)

def itkInterpolateImageFilterIUS3IUS3___New_orig__():
  """itkInterpolateImageFilterIUS3IUS3___New_orig__()"""
  return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3___New_orig__()

def itkInterpolateImageFilterIUS3IUS3_cast(*args):
  """itkInterpolateImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkInterpolateImageFilterIUS3IUS3"""
  return _itkInterpolateImageFilterPython.itkInterpolateImageFilterIUS3IUS3_cast(*args)



