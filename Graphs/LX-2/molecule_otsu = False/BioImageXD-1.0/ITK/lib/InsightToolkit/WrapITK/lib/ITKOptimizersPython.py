# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _ITKOptimizersPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_ITKOptimizersPython', [dirname(__file__)])
        except ImportError:
            import _ITKOptimizersPython
            return _ITKOptimizersPython
        if fp is not None:
            try:
                _mod = imp.load_module('_ITKOptimizersPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _ITKOptimizersPython = swig_import_helper()
    del swig_import_helper
else:
    import _ITKOptimizersPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkArray2DPython
import vnl_matrixPython
import vcl_complexPython
import pyBasePython
import vnl_vectorPython
import itkArrayPython
import ITKCommonBasePython
import itkEventObjectsPython
import ITKCostFunctionsPython
import itkFixedArrayPython
import vnl_least_squares_functionPython
import itkImagePython
import itkCovariantVectorPython
import itkVectorPython
import vnl_vector_refPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkVectorContainerPython
import itkContinuousIndexPython
import itkLevelSetPython
import vnl_cost_functionPython
import vnl_unary_functionPython
def itkVersorRigid3DTransformOptimizer_New():
  return itkVersorRigid3DTransformOptimizer.New()

def itkSPSAOptimizer_New():
  return itkSPSAOptimizer.New()

def itkPowellOptimizer_New():
  return itkPowellOptimizer.New()

def itkLBFGSBOptimizer_New():
  return itkLBFGSBOptimizer.New()

def itkFRPROptimizer_New():
  return itkFRPROptimizer.New()

def itkExhaustiveOptimizer_New():
  return itkExhaustiveOptimizer.New()

def itkCumulativeGaussianOptimizer_New():
  return itkCumulativeGaussianOptimizer.New()

def itkAmoebaOptimizer_New():
  return itkAmoebaOptimizer.New()

def itkVersorTransformOptimizer_New():
  return itkVersorTransformOptimizer.New()

def itkRegularStepGradientDescentOptimizer_New():
  return itkRegularStepGradientDescentOptimizer.New()

def itkRegularStepGradientDescentBaseOptimizer_New():
  return itkRegularStepGradientDescentBaseOptimizer.New()

def itkQuaternionRigidTransformGradientDescentOptimizer_New():
  return itkQuaternionRigidTransformGradientDescentOptimizer.New()

def itkOnePlusOneEvolutionaryOptimizer_New():
  return itkOnePlusOneEvolutionaryOptimizer.New()

def itkLevenbergMarquardtOptimizer_New():
  return itkLevenbergMarquardtOptimizer.New()

def itkLBFGSOptimizer_New():
  return itkLBFGSOptimizer.New()

def itkGradientDescentOptimizer_New():
  return itkGradientDescentOptimizer.New()

def itkConjugateGradientOptimizer_New():
  return itkConjugateGradientOptimizer.New()

def itkMultipleValuedNonLinearVnlOptimizer_New():
  return itkMultipleValuedNonLinearVnlOptimizer.New()

def itkMultipleValuedNonLinearOptimizer_New():
  return itkMultipleValuedNonLinearOptimizer.New()

def itkSingleValuedNonLinearVnlOptimizer_New():
  return itkSingleValuedNonLinearVnlOptimizer.New()

def itkSingleValuedNonLinearOptimizer_New():
  return itkSingleValuedNonLinearOptimizer.New()

def itkNonLinearOptimizer_New():
  return itkNonLinearOptimizer.New()

def itkOptimizer_New():
  return itkOptimizer.New()

class itkOptimizer(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkOptimizer class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKOptimizersPython.itkOptimizer___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInitialPosition(self, *args):
        """SetInitialPosition(self, itkArrayD param)"""
        return _ITKOptimizersPython.itkOptimizer_SetInitialPosition(self, *args)

    def GetInitialPosition(self):
        """GetInitialPosition(self) -> itkArrayD"""
        return _ITKOptimizersPython.itkOptimizer_GetInitialPosition(self)

    def SetScales(self, *args):
        """SetScales(self, itkArrayD scales)"""
        return _ITKOptimizersPython.itkOptimizer_SetScales(self, *args)

    def GetScales(self):
        """GetScales(self) -> itkArrayD"""
        return _ITKOptimizersPython.itkOptimizer_GetScales(self)

    def GetCurrentPosition(self):
        """GetCurrentPosition(self) -> itkArrayD"""
        return _ITKOptimizersPython.itkOptimizer_GetCurrentPosition(self)

    def StartOptimization(self):
        """StartOptimization(self)"""
        return _ITKOptimizersPython.itkOptimizer_StartOptimization(self)

    def GetStopConditionDescription(self):
        """GetStopConditionDescription(self) -> string"""
        return _ITKOptimizersPython.itkOptimizer_GetStopConditionDescription(self)

    __swig_destroy__ = _ITKOptimizersPython.delete_itkOptimizer
    def cast(*args):
        """cast(itkLightObject obj) -> itkOptimizer"""
        return _ITKOptimizersPython.itkOptimizer_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkOptimizer"""
        return _ITKOptimizersPython.itkOptimizer_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkOptimizer
        
        Create a new object of the class itkOptimizer and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkOptimizer.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkOptimizer.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOptimizer.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOptimizer.SetInitialPosition = new_instancemethod(_ITKOptimizersPython.itkOptimizer_SetInitialPosition,None,itkOptimizer)
itkOptimizer.GetInitialPosition = new_instancemethod(_ITKOptimizersPython.itkOptimizer_GetInitialPosition,None,itkOptimizer)
itkOptimizer.SetScales = new_instancemethod(_ITKOptimizersPython.itkOptimizer_SetScales,None,itkOptimizer)
itkOptimizer.GetScales = new_instancemethod(_ITKOptimizersPython.itkOptimizer_GetScales,None,itkOptimizer)
itkOptimizer.GetCurrentPosition = new_instancemethod(_ITKOptimizersPython.itkOptimizer_GetCurrentPosition,None,itkOptimizer)
itkOptimizer.StartOptimization = new_instancemethod(_ITKOptimizersPython.itkOptimizer_StartOptimization,None,itkOptimizer)
itkOptimizer.GetStopConditionDescription = new_instancemethod(_ITKOptimizersPython.itkOptimizer_GetStopConditionDescription,None,itkOptimizer)
itkOptimizer.GetPointer = new_instancemethod(_ITKOptimizersPython.itkOptimizer_GetPointer,None,itkOptimizer)
itkOptimizer_swigregister = _ITKOptimizersPython.itkOptimizer_swigregister
itkOptimizer_swigregister(itkOptimizer)

def itkOptimizer___New_orig__():
  """itkOptimizer___New_orig__()"""
  return _ITKOptimizersPython.itkOptimizer___New_orig__()

def itkOptimizer_cast(*args):
  """itkOptimizer_cast(itkLightObject obj) -> itkOptimizer"""
  return _ITKOptimizersPython.itkOptimizer_cast(*args)

class itkNonLinearOptimizer(itkOptimizer):
    """Proxy of C++ itkNonLinearOptimizer class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKOptimizersPython.itkNonLinearOptimizer___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _ITKOptimizersPython.delete_itkNonLinearOptimizer
    def cast(*args):
        """cast(itkLightObject obj) -> itkNonLinearOptimizer"""
        return _ITKOptimizersPython.itkNonLinearOptimizer_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNonLinearOptimizer"""
        return _ITKOptimizersPython.itkNonLinearOptimizer_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNonLinearOptimizer
        
        Create a new object of the class itkNonLinearOptimizer and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNonLinearOptimizer.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNonLinearOptimizer.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNonLinearOptimizer.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNonLinearOptimizer.GetPointer = new_instancemethod(_ITKOptimizersPython.itkNonLinearOptimizer_GetPointer,None,itkNonLinearOptimizer)
itkNonLinearOptimizer_swigregister = _ITKOptimizersPython.itkNonLinearOptimizer_swigregister
itkNonLinearOptimizer_swigregister(itkNonLinearOptimizer)

def itkNonLinearOptimizer___New_orig__():
  """itkNonLinearOptimizer___New_orig__()"""
  return _ITKOptimizersPython.itkNonLinearOptimizer___New_orig__()

def itkNonLinearOptimizer_cast(*args):
  """itkNonLinearOptimizer_cast(itkLightObject obj) -> itkNonLinearOptimizer"""
  return _ITKOptimizersPython.itkNonLinearOptimizer_cast(*args)

class itkSingleValuedNonLinearOptimizer(itkNonLinearOptimizer):
    """Proxy of C++ itkSingleValuedNonLinearOptimizer class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKOptimizersPython.itkSingleValuedNonLinearOptimizer___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetCostFunction(self, *args):
        """SetCostFunction(self, itkSingleValuedCostFunction costFunction)"""
        return _ITKOptimizersPython.itkSingleValuedNonLinearOptimizer_SetCostFunction(self, *args)

    def GetCostFunction(self):
        """GetCostFunction(self) -> itkSingleValuedCostFunction"""
        return _ITKOptimizersPython.itkSingleValuedNonLinearOptimizer_GetCostFunction(self)

    def GetValue(self, *args):
        """GetValue(self, itkArrayD parameters) -> double"""
        return _ITKOptimizersPython.itkSingleValuedNonLinearOptimizer_GetValue(self, *args)

    __swig_destroy__ = _ITKOptimizersPython.delete_itkSingleValuedNonLinearOptimizer
    def cast(*args):
        """cast(itkLightObject obj) -> itkSingleValuedNonLinearOptimizer"""
        return _ITKOptimizersPython.itkSingleValuedNonLinearOptimizer_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSingleValuedNonLinearOptimizer"""
        return _ITKOptimizersPython.itkSingleValuedNonLinearOptimizer_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSingleValuedNonLinearOptimizer
        
        Create a new object of the class itkSingleValuedNonLinearOptimizer and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSingleValuedNonLinearOptimizer.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSingleValuedNonLinearOptimizer.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSingleValuedNonLinearOptimizer.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSingleValuedNonLinearOptimizer.SetCostFunction = new_instancemethod(_ITKOptimizersPython.itkSingleValuedNonLinearOptimizer_SetCostFunction,None,itkSingleValuedNonLinearOptimizer)
itkSingleValuedNonLinearOptimizer.GetCostFunction = new_instancemethod(_ITKOptimizersPython.itkSingleValuedNonLinearOptimizer_GetCostFunction,None,itkSingleValuedNonLinearOptimizer)
itkSingleValuedNonLinearOptimizer.GetValue = new_instancemethod(_ITKOptimizersPython.itkSingleValuedNonLinearOptimizer_GetValue,None,itkSingleValuedNonLinearOptimizer)
itkSingleValuedNonLinearOptimizer.GetPointer = new_instancemethod(_ITKOptimizersPython.itkSingleValuedNonLinearOptimizer_GetPointer,None,itkSingleValuedNonLinearOptimizer)
itkSingleValuedNonLinearOptimizer_swigregister = _ITKOptimizersPython.itkSingleValuedNonLinearOptimizer_swigregister
itkSingleValuedNonLinearOptimizer_swigregister(itkSingleValuedNonLinearOptimizer)

def itkSingleValuedNonLinearOptimizer___New_orig__():
  """itkSingleValuedNonLinearOptimizer___New_orig__()"""
  return _ITKOptimizersPython.itkSingleValuedNonLinearOptimizer___New_orig__()

def itkSingleValuedNonLinearOptimizer_cast(*args):
  """itkSingleValuedNonLinearOptimizer_cast(itkLightObject obj) -> itkSingleValuedNonLinearOptimizer"""
  return _ITKOptimizersPython.itkSingleValuedNonLinearOptimizer_cast(*args)

class itkSingleValuedNonLinearVnlOptimizer(itkSingleValuedNonLinearOptimizer):
    """Proxy of C++ itkSingleValuedNonLinearVnlOptimizer class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def GetMaximize(self):
        """GetMaximize(self) -> bool"""
        return _ITKOptimizersPython.itkSingleValuedNonLinearVnlOptimizer_GetMaximize(self)

    def SetMaximize(self, *args):
        """SetMaximize(self, bool _arg)"""
        return _ITKOptimizersPython.itkSingleValuedNonLinearVnlOptimizer_SetMaximize(self, *args)

    def MaximizeOn(self):
        """MaximizeOn(self)"""
        return _ITKOptimizersPython.itkSingleValuedNonLinearVnlOptimizer_MaximizeOn(self)

    def MaximizeOff(self):
        """MaximizeOff(self)"""
        return _ITKOptimizersPython.itkSingleValuedNonLinearVnlOptimizer_MaximizeOff(self)

    def GetMinimize(self):
        """GetMinimize(self) -> bool"""
        return _ITKOptimizersPython.itkSingleValuedNonLinearVnlOptimizer_GetMinimize(self)

    def SetMinimize(self, *args):
        """SetMinimize(self, bool v)"""
        return _ITKOptimizersPython.itkSingleValuedNonLinearVnlOptimizer_SetMinimize(self, *args)

    def MinimizeOn(self):
        """MinimizeOn(self)"""
        return _ITKOptimizersPython.itkSingleValuedNonLinearVnlOptimizer_MinimizeOn(self)

    def MinimizeOff(self):
        """MinimizeOff(self)"""
        return _ITKOptimizersPython.itkSingleValuedNonLinearVnlOptimizer_MinimizeOff(self)

    def GetCachedValue(self):
        """GetCachedValue(self) -> double"""
        return _ITKOptimizersPython.itkSingleValuedNonLinearVnlOptimizer_GetCachedValue(self)

    def GetCachedDerivative(self):
        """GetCachedDerivative(self) -> itkArrayD"""
        return _ITKOptimizersPython.itkSingleValuedNonLinearVnlOptimizer_GetCachedDerivative(self)

    def GetCachedCurrentPosition(self):
        """GetCachedCurrentPosition(self) -> itkArrayD"""
        return _ITKOptimizersPython.itkSingleValuedNonLinearVnlOptimizer_GetCachedCurrentPosition(self)

    __swig_destroy__ = _ITKOptimizersPython.delete_itkSingleValuedNonLinearVnlOptimizer
    def cast(*args):
        """cast(itkLightObject obj) -> itkSingleValuedNonLinearVnlOptimizer"""
        return _ITKOptimizersPython.itkSingleValuedNonLinearVnlOptimizer_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSingleValuedNonLinearVnlOptimizer"""
        return _ITKOptimizersPython.itkSingleValuedNonLinearVnlOptimizer_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSingleValuedNonLinearVnlOptimizer
        
        Create a new object of the class itkSingleValuedNonLinearVnlOptimizer and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSingleValuedNonLinearVnlOptimizer.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSingleValuedNonLinearVnlOptimizer.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSingleValuedNonLinearVnlOptimizer.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSingleValuedNonLinearVnlOptimizer.GetMaximize = new_instancemethod(_ITKOptimizersPython.itkSingleValuedNonLinearVnlOptimizer_GetMaximize,None,itkSingleValuedNonLinearVnlOptimizer)
itkSingleValuedNonLinearVnlOptimizer.SetMaximize = new_instancemethod(_ITKOptimizersPython.itkSingleValuedNonLinearVnlOptimizer_SetMaximize,None,itkSingleValuedNonLinearVnlOptimizer)
itkSingleValuedNonLinearVnlOptimizer.MaximizeOn = new_instancemethod(_ITKOptimizersPython.itkSingleValuedNonLinearVnlOptimizer_MaximizeOn,None,itkSingleValuedNonLinearVnlOptimizer)
itkSingleValuedNonLinearVnlOptimizer.MaximizeOff = new_instancemethod(_ITKOptimizersPython.itkSingleValuedNonLinearVnlOptimizer_MaximizeOff,None,itkSingleValuedNonLinearVnlOptimizer)
itkSingleValuedNonLinearVnlOptimizer.GetMinimize = new_instancemethod(_ITKOptimizersPython.itkSingleValuedNonLinearVnlOptimizer_GetMinimize,None,itkSingleValuedNonLinearVnlOptimizer)
itkSingleValuedNonLinearVnlOptimizer.SetMinimize = new_instancemethod(_ITKOptimizersPython.itkSingleValuedNonLinearVnlOptimizer_SetMinimize,None,itkSingleValuedNonLinearVnlOptimizer)
itkSingleValuedNonLinearVnlOptimizer.MinimizeOn = new_instancemethod(_ITKOptimizersPython.itkSingleValuedNonLinearVnlOptimizer_MinimizeOn,None,itkSingleValuedNonLinearVnlOptimizer)
itkSingleValuedNonLinearVnlOptimizer.MinimizeOff = new_instancemethod(_ITKOptimizersPython.itkSingleValuedNonLinearVnlOptimizer_MinimizeOff,None,itkSingleValuedNonLinearVnlOptimizer)
itkSingleValuedNonLinearVnlOptimizer.GetCachedValue = new_instancemethod(_ITKOptimizersPython.itkSingleValuedNonLinearVnlOptimizer_GetCachedValue,None,itkSingleValuedNonLinearVnlOptimizer)
itkSingleValuedNonLinearVnlOptimizer.GetCachedDerivative = new_instancemethod(_ITKOptimizersPython.itkSingleValuedNonLinearVnlOptimizer_GetCachedDerivative,None,itkSingleValuedNonLinearVnlOptimizer)
itkSingleValuedNonLinearVnlOptimizer.GetCachedCurrentPosition = new_instancemethod(_ITKOptimizersPython.itkSingleValuedNonLinearVnlOptimizer_GetCachedCurrentPosition,None,itkSingleValuedNonLinearVnlOptimizer)
itkSingleValuedNonLinearVnlOptimizer.GetPointer = new_instancemethod(_ITKOptimizersPython.itkSingleValuedNonLinearVnlOptimizer_GetPointer,None,itkSingleValuedNonLinearVnlOptimizer)
itkSingleValuedNonLinearVnlOptimizer_swigregister = _ITKOptimizersPython.itkSingleValuedNonLinearVnlOptimizer_swigregister
itkSingleValuedNonLinearVnlOptimizer_swigregister(itkSingleValuedNonLinearVnlOptimizer)

def itkSingleValuedNonLinearVnlOptimizer_cast(*args):
  """itkSingleValuedNonLinearVnlOptimizer_cast(itkLightObject obj) -> itkSingleValuedNonLinearVnlOptimizer"""
  return _ITKOptimizersPython.itkSingleValuedNonLinearVnlOptimizer_cast(*args)

class itkAmoebaOptimizer(itkSingleValuedNonLinearVnlOptimizer):
    """Proxy of C++ itkAmoebaOptimizer class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKOptimizersPython.itkAmoebaOptimizer___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetOptimizer(self):
        """GetOptimizer(self) -> vnl_amoeba"""
        return _ITKOptimizersPython.itkAmoebaOptimizer_GetOptimizer(self)

    def SetMaximumNumberOfIterations(self, *args):
        """SetMaximumNumberOfIterations(self, unsigned int n)"""
        return _ITKOptimizersPython.itkAmoebaOptimizer_SetMaximumNumberOfIterations(self, *args)

    def GetMaximumNumberOfIterations(self):
        """GetMaximumNumberOfIterations(self) -> unsigned int"""
        return _ITKOptimizersPython.itkAmoebaOptimizer_GetMaximumNumberOfIterations(self)

    def SetAutomaticInitialSimplex(self, *args):
        """SetAutomaticInitialSimplex(self, bool _arg)"""
        return _ITKOptimizersPython.itkAmoebaOptimizer_SetAutomaticInitialSimplex(self, *args)

    def AutomaticInitialSimplexOn(self):
        """AutomaticInitialSimplexOn(self)"""
        return _ITKOptimizersPython.itkAmoebaOptimizer_AutomaticInitialSimplexOn(self)

    def AutomaticInitialSimplexOff(self):
        """AutomaticInitialSimplexOff(self)"""
        return _ITKOptimizersPython.itkAmoebaOptimizer_AutomaticInitialSimplexOff(self)

    def GetAutomaticInitialSimplex(self):
        """GetAutomaticInitialSimplex(self) -> bool"""
        return _ITKOptimizersPython.itkAmoebaOptimizer_GetAutomaticInitialSimplex(self)

    def SetInitialSimplexDelta(self, *args):
        """SetInitialSimplexDelta(self, itkArrayD _arg)"""
        return _ITKOptimizersPython.itkAmoebaOptimizer_SetInitialSimplexDelta(self, *args)

    def GetInitialSimplexDelta(self):
        """GetInitialSimplexDelta(self) -> itkArrayD"""
        return _ITKOptimizersPython.itkAmoebaOptimizer_GetInitialSimplexDelta(self)

    def SetParametersConvergenceTolerance(self, *args):
        """SetParametersConvergenceTolerance(self, double tol)"""
        return _ITKOptimizersPython.itkAmoebaOptimizer_SetParametersConvergenceTolerance(self, *args)

    def GetParametersConvergenceTolerance(self):
        """GetParametersConvergenceTolerance(self) -> double"""
        return _ITKOptimizersPython.itkAmoebaOptimizer_GetParametersConvergenceTolerance(self)

    def SetFunctionConvergenceTolerance(self, *args):
        """SetFunctionConvergenceTolerance(self, double tol)"""
        return _ITKOptimizersPython.itkAmoebaOptimizer_SetFunctionConvergenceTolerance(self, *args)

    def GetFunctionConvergenceTolerance(self):
        """GetFunctionConvergenceTolerance(self) -> double"""
        return _ITKOptimizersPython.itkAmoebaOptimizer_GetFunctionConvergenceTolerance(self)

    def GetValue(self):
        """GetValue(self) -> double"""
        return _ITKOptimizersPython.itkAmoebaOptimizer_GetValue(self)

    __swig_destroy__ = _ITKOptimizersPython.delete_itkAmoebaOptimizer
    def cast(*args):
        """cast(itkLightObject obj) -> itkAmoebaOptimizer"""
        return _ITKOptimizersPython.itkAmoebaOptimizer_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAmoebaOptimizer"""
        return _ITKOptimizersPython.itkAmoebaOptimizer_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAmoebaOptimizer
        
        Create a new object of the class itkAmoebaOptimizer and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAmoebaOptimizer.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAmoebaOptimizer.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAmoebaOptimizer.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAmoebaOptimizer.GetOptimizer = new_instancemethod(_ITKOptimizersPython.itkAmoebaOptimizer_GetOptimizer,None,itkAmoebaOptimizer)
itkAmoebaOptimizer.SetMaximumNumberOfIterations = new_instancemethod(_ITKOptimizersPython.itkAmoebaOptimizer_SetMaximumNumberOfIterations,None,itkAmoebaOptimizer)
itkAmoebaOptimizer.GetMaximumNumberOfIterations = new_instancemethod(_ITKOptimizersPython.itkAmoebaOptimizer_GetMaximumNumberOfIterations,None,itkAmoebaOptimizer)
itkAmoebaOptimizer.SetAutomaticInitialSimplex = new_instancemethod(_ITKOptimizersPython.itkAmoebaOptimizer_SetAutomaticInitialSimplex,None,itkAmoebaOptimizer)
itkAmoebaOptimizer.AutomaticInitialSimplexOn = new_instancemethod(_ITKOptimizersPython.itkAmoebaOptimizer_AutomaticInitialSimplexOn,None,itkAmoebaOptimizer)
itkAmoebaOptimizer.AutomaticInitialSimplexOff = new_instancemethod(_ITKOptimizersPython.itkAmoebaOptimizer_AutomaticInitialSimplexOff,None,itkAmoebaOptimizer)
itkAmoebaOptimizer.GetAutomaticInitialSimplex = new_instancemethod(_ITKOptimizersPython.itkAmoebaOptimizer_GetAutomaticInitialSimplex,None,itkAmoebaOptimizer)
itkAmoebaOptimizer.SetInitialSimplexDelta = new_instancemethod(_ITKOptimizersPython.itkAmoebaOptimizer_SetInitialSimplexDelta,None,itkAmoebaOptimizer)
itkAmoebaOptimizer.GetInitialSimplexDelta = new_instancemethod(_ITKOptimizersPython.itkAmoebaOptimizer_GetInitialSimplexDelta,None,itkAmoebaOptimizer)
itkAmoebaOptimizer.SetParametersConvergenceTolerance = new_instancemethod(_ITKOptimizersPython.itkAmoebaOptimizer_SetParametersConvergenceTolerance,None,itkAmoebaOptimizer)
itkAmoebaOptimizer.GetParametersConvergenceTolerance = new_instancemethod(_ITKOptimizersPython.itkAmoebaOptimizer_GetParametersConvergenceTolerance,None,itkAmoebaOptimizer)
itkAmoebaOptimizer.SetFunctionConvergenceTolerance = new_instancemethod(_ITKOptimizersPython.itkAmoebaOptimizer_SetFunctionConvergenceTolerance,None,itkAmoebaOptimizer)
itkAmoebaOptimizer.GetFunctionConvergenceTolerance = new_instancemethod(_ITKOptimizersPython.itkAmoebaOptimizer_GetFunctionConvergenceTolerance,None,itkAmoebaOptimizer)
itkAmoebaOptimizer.GetValue = new_instancemethod(_ITKOptimizersPython.itkAmoebaOptimizer_GetValue,None,itkAmoebaOptimizer)
itkAmoebaOptimizer.GetPointer = new_instancemethod(_ITKOptimizersPython.itkAmoebaOptimizer_GetPointer,None,itkAmoebaOptimizer)
itkAmoebaOptimizer_swigregister = _ITKOptimizersPython.itkAmoebaOptimizer_swigregister
itkAmoebaOptimizer_swigregister(itkAmoebaOptimizer)

def itkAmoebaOptimizer___New_orig__():
  """itkAmoebaOptimizer___New_orig__()"""
  return _ITKOptimizersPython.itkAmoebaOptimizer___New_orig__()

def itkAmoebaOptimizer_cast(*args):
  """itkAmoebaOptimizer_cast(itkLightObject obj) -> itkAmoebaOptimizer"""
  return _ITKOptimizersPython.itkAmoebaOptimizer_cast(*args)

class itkConjugateGradientOptimizer(itkSingleValuedNonLinearVnlOptimizer):
    """Proxy of C++ itkConjugateGradientOptimizer class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKOptimizersPython.itkConjugateGradientOptimizer___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetOptimizer(self):
        """GetOptimizer(self) -> vnl_conjugate_gradient"""
        return _ITKOptimizersPython.itkConjugateGradientOptimizer_GetOptimizer(self)

    def GetNumberOfIterations(self):
        """GetNumberOfIterations(self) -> unsigned long"""
        return _ITKOptimizersPython.itkConjugateGradientOptimizer_GetNumberOfIterations(self)

    def GetCurrentIteration(self):
        """GetCurrentIteration(self) -> unsigned long"""
        return _ITKOptimizersPython.itkConjugateGradientOptimizer_GetCurrentIteration(self)

    def GetValue(self):
        """GetValue(self) -> double"""
        return _ITKOptimizersPython.itkConjugateGradientOptimizer_GetValue(self)

    __swig_destroy__ = _ITKOptimizersPython.delete_itkConjugateGradientOptimizer
    def cast(*args):
        """cast(itkLightObject obj) -> itkConjugateGradientOptimizer"""
        return _ITKOptimizersPython.itkConjugateGradientOptimizer_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkConjugateGradientOptimizer"""
        return _ITKOptimizersPython.itkConjugateGradientOptimizer_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkConjugateGradientOptimizer
        
        Create a new object of the class itkConjugateGradientOptimizer and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkConjugateGradientOptimizer.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkConjugateGradientOptimizer.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkConjugateGradientOptimizer.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkConjugateGradientOptimizer.GetOptimizer = new_instancemethod(_ITKOptimizersPython.itkConjugateGradientOptimizer_GetOptimizer,None,itkConjugateGradientOptimizer)
itkConjugateGradientOptimizer.GetNumberOfIterations = new_instancemethod(_ITKOptimizersPython.itkConjugateGradientOptimizer_GetNumberOfIterations,None,itkConjugateGradientOptimizer)
itkConjugateGradientOptimizer.GetCurrentIteration = new_instancemethod(_ITKOptimizersPython.itkConjugateGradientOptimizer_GetCurrentIteration,None,itkConjugateGradientOptimizer)
itkConjugateGradientOptimizer.GetValue = new_instancemethod(_ITKOptimizersPython.itkConjugateGradientOptimizer_GetValue,None,itkConjugateGradientOptimizer)
itkConjugateGradientOptimizer.GetPointer = new_instancemethod(_ITKOptimizersPython.itkConjugateGradientOptimizer_GetPointer,None,itkConjugateGradientOptimizer)
itkConjugateGradientOptimizer_swigregister = _ITKOptimizersPython.itkConjugateGradientOptimizer_swigregister
itkConjugateGradientOptimizer_swigregister(itkConjugateGradientOptimizer)

def itkConjugateGradientOptimizer___New_orig__():
  """itkConjugateGradientOptimizer___New_orig__()"""
  return _ITKOptimizersPython.itkConjugateGradientOptimizer___New_orig__()

def itkConjugateGradientOptimizer_cast(*args):
  """itkConjugateGradientOptimizer_cast(itkLightObject obj) -> itkConjugateGradientOptimizer"""
  return _ITKOptimizersPython.itkConjugateGradientOptimizer_cast(*args)

class itkExhaustiveOptimizer(itkSingleValuedNonLinearOptimizer):
    """Proxy of C++ itkExhaustiveOptimizer class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKOptimizersPython.itkExhaustiveOptimizer___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def StartWalking(self):
        """StartWalking(self)"""
        return _ITKOptimizersPython.itkExhaustiveOptimizer_StartWalking(self)

    def ResumeWalking(self):
        """ResumeWalking(self)"""
        return _ITKOptimizersPython.itkExhaustiveOptimizer_ResumeWalking(self)

    def StopWalking(self):
        """StopWalking(self)"""
        return _ITKOptimizersPython.itkExhaustiveOptimizer_StopWalking(self)

    def SetStepLength(self, *args):
        """SetStepLength(self, double _arg)"""
        return _ITKOptimizersPython.itkExhaustiveOptimizer_SetStepLength(self, *args)

    def SetNumberOfSteps(self, *args):
        """SetNumberOfSteps(self, itkArrayUL _arg)"""
        return _ITKOptimizersPython.itkExhaustiveOptimizer_SetNumberOfSteps(self, *args)

    def GetStepLength(self):
        """GetStepLength(self) -> double"""
        return _ITKOptimizersPython.itkExhaustiveOptimizer_GetStepLength(self)

    def GetNumberOfSteps(self):
        """GetNumberOfSteps(self) -> itkArrayUL"""
        return _ITKOptimizersPython.itkExhaustiveOptimizer_GetNumberOfSteps(self)

    def GetCurrentValue(self):
        """GetCurrentValue(self) -> double"""
        return _ITKOptimizersPython.itkExhaustiveOptimizer_GetCurrentValue(self)

    def GetMaximumMetricValue(self):
        """GetMaximumMetricValue(self) -> double"""
        return _ITKOptimizersPython.itkExhaustiveOptimizer_GetMaximumMetricValue(self)

    def GetMinimumMetricValue(self):
        """GetMinimumMetricValue(self) -> double"""
        return _ITKOptimizersPython.itkExhaustiveOptimizer_GetMinimumMetricValue(self)

    def GetMinimumMetricValuePosition(self):
        """GetMinimumMetricValuePosition(self) -> itkArrayD"""
        return _ITKOptimizersPython.itkExhaustiveOptimizer_GetMinimumMetricValuePosition(self)

    def GetMaximumMetricValuePosition(self):
        """GetMaximumMetricValuePosition(self) -> itkArrayD"""
        return _ITKOptimizersPython.itkExhaustiveOptimizer_GetMaximumMetricValuePosition(self)

    def GetCurrentIndex(self):
        """GetCurrentIndex(self) -> itkArrayD"""
        return _ITKOptimizersPython.itkExhaustiveOptimizer_GetCurrentIndex(self)

    def GetMaximumNumberOfIterations(self):
        """GetMaximumNumberOfIterations(self) -> unsigned long"""
        return _ITKOptimizersPython.itkExhaustiveOptimizer_GetMaximumNumberOfIterations(self)

    __swig_destroy__ = _ITKOptimizersPython.delete_itkExhaustiveOptimizer
    def cast(*args):
        """cast(itkLightObject obj) -> itkExhaustiveOptimizer"""
        return _ITKOptimizersPython.itkExhaustiveOptimizer_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkExhaustiveOptimizer"""
        return _ITKOptimizersPython.itkExhaustiveOptimizer_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkExhaustiveOptimizer
        
        Create a new object of the class itkExhaustiveOptimizer and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkExhaustiveOptimizer.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkExhaustiveOptimizer.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExhaustiveOptimizer.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExhaustiveOptimizer.StartWalking = new_instancemethod(_ITKOptimizersPython.itkExhaustiveOptimizer_StartWalking,None,itkExhaustiveOptimizer)
itkExhaustiveOptimizer.ResumeWalking = new_instancemethod(_ITKOptimizersPython.itkExhaustiveOptimizer_ResumeWalking,None,itkExhaustiveOptimizer)
itkExhaustiveOptimizer.StopWalking = new_instancemethod(_ITKOptimizersPython.itkExhaustiveOptimizer_StopWalking,None,itkExhaustiveOptimizer)
itkExhaustiveOptimizer.SetStepLength = new_instancemethod(_ITKOptimizersPython.itkExhaustiveOptimizer_SetStepLength,None,itkExhaustiveOptimizer)
itkExhaustiveOptimizer.SetNumberOfSteps = new_instancemethod(_ITKOptimizersPython.itkExhaustiveOptimizer_SetNumberOfSteps,None,itkExhaustiveOptimizer)
itkExhaustiveOptimizer.GetStepLength = new_instancemethod(_ITKOptimizersPython.itkExhaustiveOptimizer_GetStepLength,None,itkExhaustiveOptimizer)
itkExhaustiveOptimizer.GetNumberOfSteps = new_instancemethod(_ITKOptimizersPython.itkExhaustiveOptimizer_GetNumberOfSteps,None,itkExhaustiveOptimizer)
itkExhaustiveOptimizer.GetCurrentValue = new_instancemethod(_ITKOptimizersPython.itkExhaustiveOptimizer_GetCurrentValue,None,itkExhaustiveOptimizer)
itkExhaustiveOptimizer.GetMaximumMetricValue = new_instancemethod(_ITKOptimizersPython.itkExhaustiveOptimizer_GetMaximumMetricValue,None,itkExhaustiveOptimizer)
itkExhaustiveOptimizer.GetMinimumMetricValue = new_instancemethod(_ITKOptimizersPython.itkExhaustiveOptimizer_GetMinimumMetricValue,None,itkExhaustiveOptimizer)
itkExhaustiveOptimizer.GetMinimumMetricValuePosition = new_instancemethod(_ITKOptimizersPython.itkExhaustiveOptimizer_GetMinimumMetricValuePosition,None,itkExhaustiveOptimizer)
itkExhaustiveOptimizer.GetMaximumMetricValuePosition = new_instancemethod(_ITKOptimizersPython.itkExhaustiveOptimizer_GetMaximumMetricValuePosition,None,itkExhaustiveOptimizer)
itkExhaustiveOptimizer.GetCurrentIndex = new_instancemethod(_ITKOptimizersPython.itkExhaustiveOptimizer_GetCurrentIndex,None,itkExhaustiveOptimizer)
itkExhaustiveOptimizer.GetMaximumNumberOfIterations = new_instancemethod(_ITKOptimizersPython.itkExhaustiveOptimizer_GetMaximumNumberOfIterations,None,itkExhaustiveOptimizer)
itkExhaustiveOptimizer.GetPointer = new_instancemethod(_ITKOptimizersPython.itkExhaustiveOptimizer_GetPointer,None,itkExhaustiveOptimizer)
itkExhaustiveOptimizer_swigregister = _ITKOptimizersPython.itkExhaustiveOptimizer_swigregister
itkExhaustiveOptimizer_swigregister(itkExhaustiveOptimizer)

def itkExhaustiveOptimizer___New_orig__():
  """itkExhaustiveOptimizer___New_orig__()"""
  return _ITKOptimizersPython.itkExhaustiveOptimizer___New_orig__()

def itkExhaustiveOptimizer_cast(*args):
  """itkExhaustiveOptimizer_cast(itkLightObject obj) -> itkExhaustiveOptimizer"""
  return _ITKOptimizersPython.itkExhaustiveOptimizer_cast(*args)

class itkGradientDescentOptimizer(itkSingleValuedNonLinearOptimizer):
    """Proxy of C++ itkGradientDescentOptimizer class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    MaximumNumberOfIterations = _ITKOptimizersPython.itkGradientDescentOptimizer_MaximumNumberOfIterations
    MetricError = _ITKOptimizersPython.itkGradientDescentOptimizer_MetricError
    def __New_orig__():
        """__New_orig__()"""
        return _ITKOptimizersPython.itkGradientDescentOptimizer___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetMaximize(self):
        """GetMaximize(self) -> bool"""
        return _ITKOptimizersPython.itkGradientDescentOptimizer_GetMaximize(self)

    def SetMaximize(self, *args):
        """SetMaximize(self, bool _arg)"""
        return _ITKOptimizersPython.itkGradientDescentOptimizer_SetMaximize(self, *args)

    def MaximizeOn(self):
        """MaximizeOn(self)"""
        return _ITKOptimizersPython.itkGradientDescentOptimizer_MaximizeOn(self)

    def MaximizeOff(self):
        """MaximizeOff(self)"""
        return _ITKOptimizersPython.itkGradientDescentOptimizer_MaximizeOff(self)

    def GetMinimize(self):
        """GetMinimize(self) -> bool"""
        return _ITKOptimizersPython.itkGradientDescentOptimizer_GetMinimize(self)

    def SetMinimize(self, *args):
        """SetMinimize(self, bool v)"""
        return _ITKOptimizersPython.itkGradientDescentOptimizer_SetMinimize(self, *args)

    def MinimizeOn(self):
        """MinimizeOn(self)"""
        return _ITKOptimizersPython.itkGradientDescentOptimizer_MinimizeOn(self)

    def MinimizeOff(self):
        """MinimizeOff(self)"""
        return _ITKOptimizersPython.itkGradientDescentOptimizer_MinimizeOff(self)

    def AdvanceOneStep(self):
        """AdvanceOneStep(self)"""
        return _ITKOptimizersPython.itkGradientDescentOptimizer_AdvanceOneStep(self)

    def ResumeOptimization(self):
        """ResumeOptimization(self)"""
        return _ITKOptimizersPython.itkGradientDescentOptimizer_ResumeOptimization(self)

    def StopOptimization(self):
        """StopOptimization(self)"""
        return _ITKOptimizersPython.itkGradientDescentOptimizer_StopOptimization(self)

    def SetLearningRate(self, *args):
        """SetLearningRate(self, double _arg)"""
        return _ITKOptimizersPython.itkGradientDescentOptimizer_SetLearningRate(self, *args)

    def GetLearningRate(self):
        """GetLearningRate(self) -> double"""
        return _ITKOptimizersPython.itkGradientDescentOptimizer_GetLearningRate(self)

    def SetNumberOfIterations(self, *args):
        """SetNumberOfIterations(self, unsigned long _arg)"""
        return _ITKOptimizersPython.itkGradientDescentOptimizer_SetNumberOfIterations(self, *args)

    def GetNumberOfIterations(self):
        """GetNumberOfIterations(self) -> unsigned long"""
        return _ITKOptimizersPython.itkGradientDescentOptimizer_GetNumberOfIterations(self)

    def GetCurrentIteration(self):
        """GetCurrentIteration(self) -> unsigned long"""
        return _ITKOptimizersPython.itkGradientDescentOptimizer_GetCurrentIteration(self)

    def GetValue(self):
        """GetValue(self) -> double"""
        return _ITKOptimizersPython.itkGradientDescentOptimizer_GetValue(self)

    def GetStopCondition(self):
        """GetStopCondition(self) -> StopConditionType"""
        return _ITKOptimizersPython.itkGradientDescentOptimizer_GetStopCondition(self)

    def GetGradient(self):
        """GetGradient(self) -> itkArrayD"""
        return _ITKOptimizersPython.itkGradientDescentOptimizer_GetGradient(self)

    __swig_destroy__ = _ITKOptimizersPython.delete_itkGradientDescentOptimizer
    def cast(*args):
        """cast(itkLightObject obj) -> itkGradientDescentOptimizer"""
        return _ITKOptimizersPython.itkGradientDescentOptimizer_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkGradientDescentOptimizer"""
        return _ITKOptimizersPython.itkGradientDescentOptimizer_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkGradientDescentOptimizer
        
        Create a new object of the class itkGradientDescentOptimizer and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkGradientDescentOptimizer.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkGradientDescentOptimizer.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGradientDescentOptimizer.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGradientDescentOptimizer.GetMaximize = new_instancemethod(_ITKOptimizersPython.itkGradientDescentOptimizer_GetMaximize,None,itkGradientDescentOptimizer)
itkGradientDescentOptimizer.SetMaximize = new_instancemethod(_ITKOptimizersPython.itkGradientDescentOptimizer_SetMaximize,None,itkGradientDescentOptimizer)
itkGradientDescentOptimizer.MaximizeOn = new_instancemethod(_ITKOptimizersPython.itkGradientDescentOptimizer_MaximizeOn,None,itkGradientDescentOptimizer)
itkGradientDescentOptimizer.MaximizeOff = new_instancemethod(_ITKOptimizersPython.itkGradientDescentOptimizer_MaximizeOff,None,itkGradientDescentOptimizer)
itkGradientDescentOptimizer.GetMinimize = new_instancemethod(_ITKOptimizersPython.itkGradientDescentOptimizer_GetMinimize,None,itkGradientDescentOptimizer)
itkGradientDescentOptimizer.SetMinimize = new_instancemethod(_ITKOptimizersPython.itkGradientDescentOptimizer_SetMinimize,None,itkGradientDescentOptimizer)
itkGradientDescentOptimizer.MinimizeOn = new_instancemethod(_ITKOptimizersPython.itkGradientDescentOptimizer_MinimizeOn,None,itkGradientDescentOptimizer)
itkGradientDescentOptimizer.MinimizeOff = new_instancemethod(_ITKOptimizersPython.itkGradientDescentOptimizer_MinimizeOff,None,itkGradientDescentOptimizer)
itkGradientDescentOptimizer.AdvanceOneStep = new_instancemethod(_ITKOptimizersPython.itkGradientDescentOptimizer_AdvanceOneStep,None,itkGradientDescentOptimizer)
itkGradientDescentOptimizer.ResumeOptimization = new_instancemethod(_ITKOptimizersPython.itkGradientDescentOptimizer_ResumeOptimization,None,itkGradientDescentOptimizer)
itkGradientDescentOptimizer.StopOptimization = new_instancemethod(_ITKOptimizersPython.itkGradientDescentOptimizer_StopOptimization,None,itkGradientDescentOptimizer)
itkGradientDescentOptimizer.SetLearningRate = new_instancemethod(_ITKOptimizersPython.itkGradientDescentOptimizer_SetLearningRate,None,itkGradientDescentOptimizer)
itkGradientDescentOptimizer.GetLearningRate = new_instancemethod(_ITKOptimizersPython.itkGradientDescentOptimizer_GetLearningRate,None,itkGradientDescentOptimizer)
itkGradientDescentOptimizer.SetNumberOfIterations = new_instancemethod(_ITKOptimizersPython.itkGradientDescentOptimizer_SetNumberOfIterations,None,itkGradientDescentOptimizer)
itkGradientDescentOptimizer.GetNumberOfIterations = new_instancemethod(_ITKOptimizersPython.itkGradientDescentOptimizer_GetNumberOfIterations,None,itkGradientDescentOptimizer)
itkGradientDescentOptimizer.GetCurrentIteration = new_instancemethod(_ITKOptimizersPython.itkGradientDescentOptimizer_GetCurrentIteration,None,itkGradientDescentOptimizer)
itkGradientDescentOptimizer.GetValue = new_instancemethod(_ITKOptimizersPython.itkGradientDescentOptimizer_GetValue,None,itkGradientDescentOptimizer)
itkGradientDescentOptimizer.GetStopCondition = new_instancemethod(_ITKOptimizersPython.itkGradientDescentOptimizer_GetStopCondition,None,itkGradientDescentOptimizer)
itkGradientDescentOptimizer.GetGradient = new_instancemethod(_ITKOptimizersPython.itkGradientDescentOptimizer_GetGradient,None,itkGradientDescentOptimizer)
itkGradientDescentOptimizer.GetPointer = new_instancemethod(_ITKOptimizersPython.itkGradientDescentOptimizer_GetPointer,None,itkGradientDescentOptimizer)
itkGradientDescentOptimizer_swigregister = _ITKOptimizersPython.itkGradientDescentOptimizer_swigregister
itkGradientDescentOptimizer_swigregister(itkGradientDescentOptimizer)

def itkGradientDescentOptimizer___New_orig__():
  """itkGradientDescentOptimizer___New_orig__()"""
  return _ITKOptimizersPython.itkGradientDescentOptimizer___New_orig__()

def itkGradientDescentOptimizer_cast(*args):
  """itkGradientDescentOptimizer_cast(itkLightObject obj) -> itkGradientDescentOptimizer"""
  return _ITKOptimizersPython.itkGradientDescentOptimizer_cast(*args)

class itkLBFGSBOptimizer(itkSingleValuedNonLinearVnlOptimizer):
    """Proxy of C++ itkLBFGSBOptimizer class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKOptimizersPython.itkLBFGSBOptimizer___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetTrace(self, *args):
        """SetTrace(self, bool flag)"""
        return _ITKOptimizersPython.itkLBFGSBOptimizer_SetTrace(self, *args)

    def GetTrace(self):
        """GetTrace(self) -> bool"""
        return _ITKOptimizersPython.itkLBFGSBOptimizer_GetTrace(self)

    def TraceOn(self):
        """TraceOn(self)"""
        return _ITKOptimizersPython.itkLBFGSBOptimizer_TraceOn(self)

    def TraceOff(self):
        """TraceOff(self)"""
        return _ITKOptimizersPython.itkLBFGSBOptimizer_TraceOff(self)

    def SetLowerBound(self, *args):
        """SetLowerBound(self, itkArrayD value)"""
        return _ITKOptimizersPython.itkLBFGSBOptimizer_SetLowerBound(self, *args)

    def GetLowerBound(self):
        """GetLowerBound(self) -> itkArrayD"""
        return _ITKOptimizersPython.itkLBFGSBOptimizer_GetLowerBound(self)

    def SetUpperBound(self, *args):
        """SetUpperBound(self, itkArrayD value)"""
        return _ITKOptimizersPython.itkLBFGSBOptimizer_SetUpperBound(self, *args)

    def GetUpperBound(self):
        """GetUpperBound(self) -> itkArrayD"""
        return _ITKOptimizersPython.itkLBFGSBOptimizer_GetUpperBound(self)

    def SetBoundSelection(self, *args):
        """SetBoundSelection(self, itkArraySL select)"""
        return _ITKOptimizersPython.itkLBFGSBOptimizer_SetBoundSelection(self, *args)

    def GetBoundSelection(self):
        """GetBoundSelection(self) -> itkArraySL"""
        return _ITKOptimizersPython.itkLBFGSBOptimizer_GetBoundSelection(self)

    def SetCostFunctionConvergenceFactor(self, *args):
        """SetCostFunctionConvergenceFactor(self, double arg0)"""
        return _ITKOptimizersPython.itkLBFGSBOptimizer_SetCostFunctionConvergenceFactor(self, *args)

    def GetCostFunctionConvergenceFactor(self):
        """GetCostFunctionConvergenceFactor(self) -> double"""
        return _ITKOptimizersPython.itkLBFGSBOptimizer_GetCostFunctionConvergenceFactor(self)

    def SetProjectedGradientTolerance(self, *args):
        """SetProjectedGradientTolerance(self, double arg0)"""
        return _ITKOptimizersPython.itkLBFGSBOptimizer_SetProjectedGradientTolerance(self, *args)

    def GetProjectedGradientTolerance(self):
        """GetProjectedGradientTolerance(self) -> double"""
        return _ITKOptimizersPython.itkLBFGSBOptimizer_GetProjectedGradientTolerance(self)

    def SetMaximumNumberOfIterations(self, *args):
        """SetMaximumNumberOfIterations(self, unsigned int arg0)"""
        return _ITKOptimizersPython.itkLBFGSBOptimizer_SetMaximumNumberOfIterations(self, *args)

    def GetMaximumNumberOfIterations(self):
        """GetMaximumNumberOfIterations(self) -> unsigned int"""
        return _ITKOptimizersPython.itkLBFGSBOptimizer_GetMaximumNumberOfIterations(self)

    def SetMaximumNumberOfEvaluations(self, *args):
        """SetMaximumNumberOfEvaluations(self, unsigned int arg0)"""
        return _ITKOptimizersPython.itkLBFGSBOptimizer_SetMaximumNumberOfEvaluations(self, *args)

    def GetMaximumNumberOfEvaluations(self):
        """GetMaximumNumberOfEvaluations(self) -> unsigned int"""
        return _ITKOptimizersPython.itkLBFGSBOptimizer_GetMaximumNumberOfEvaluations(self)

    def SetMaximumNumberOfCorrections(self, *args):
        """SetMaximumNumberOfCorrections(self, unsigned int arg0)"""
        return _ITKOptimizersPython.itkLBFGSBOptimizer_SetMaximumNumberOfCorrections(self, *args)

    def GetMaximumNumberOfCorrections(self):
        """GetMaximumNumberOfCorrections(self) -> unsigned int"""
        return _ITKOptimizersPython.itkLBFGSBOptimizer_GetMaximumNumberOfCorrections(self)

    def SetScales(self, *args):
        """SetScales(self, itkArrayD arg0)"""
        return _ITKOptimizersPython.itkLBFGSBOptimizer_SetScales(self, *args)

    def GetCurrentIteration(self):
        """GetCurrentIteration(self) -> unsigned int"""
        return _ITKOptimizersPython.itkLBFGSBOptimizer_GetCurrentIteration(self)

    def GetValue(self):
        """GetValue(self) -> double"""
        return _ITKOptimizersPython.itkLBFGSBOptimizer_GetValue(self)

    def GetInfinityNormOfProjectedGradient(self):
        """GetInfinityNormOfProjectedGradient(self) -> double"""
        return _ITKOptimizersPython.itkLBFGSBOptimizer_GetInfinityNormOfProjectedGradient(self)

    __swig_destroy__ = _ITKOptimizersPython.delete_itkLBFGSBOptimizer
    def cast(*args):
        """cast(itkLightObject obj) -> itkLBFGSBOptimizer"""
        return _ITKOptimizersPython.itkLBFGSBOptimizer_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkLBFGSBOptimizer"""
        return _ITKOptimizersPython.itkLBFGSBOptimizer_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkLBFGSBOptimizer
        
        Create a new object of the class itkLBFGSBOptimizer and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkLBFGSBOptimizer.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkLBFGSBOptimizer.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLBFGSBOptimizer.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLBFGSBOptimizer.SetTrace = new_instancemethod(_ITKOptimizersPython.itkLBFGSBOptimizer_SetTrace,None,itkLBFGSBOptimizer)
itkLBFGSBOptimizer.GetTrace = new_instancemethod(_ITKOptimizersPython.itkLBFGSBOptimizer_GetTrace,None,itkLBFGSBOptimizer)
itkLBFGSBOptimizer.TraceOn = new_instancemethod(_ITKOptimizersPython.itkLBFGSBOptimizer_TraceOn,None,itkLBFGSBOptimizer)
itkLBFGSBOptimizer.TraceOff = new_instancemethod(_ITKOptimizersPython.itkLBFGSBOptimizer_TraceOff,None,itkLBFGSBOptimizer)
itkLBFGSBOptimizer.SetLowerBound = new_instancemethod(_ITKOptimizersPython.itkLBFGSBOptimizer_SetLowerBound,None,itkLBFGSBOptimizer)
itkLBFGSBOptimizer.GetLowerBound = new_instancemethod(_ITKOptimizersPython.itkLBFGSBOptimizer_GetLowerBound,None,itkLBFGSBOptimizer)
itkLBFGSBOptimizer.SetUpperBound = new_instancemethod(_ITKOptimizersPython.itkLBFGSBOptimizer_SetUpperBound,None,itkLBFGSBOptimizer)
itkLBFGSBOptimizer.GetUpperBound = new_instancemethod(_ITKOptimizersPython.itkLBFGSBOptimizer_GetUpperBound,None,itkLBFGSBOptimizer)
itkLBFGSBOptimizer.SetBoundSelection = new_instancemethod(_ITKOptimizersPython.itkLBFGSBOptimizer_SetBoundSelection,None,itkLBFGSBOptimizer)
itkLBFGSBOptimizer.GetBoundSelection = new_instancemethod(_ITKOptimizersPython.itkLBFGSBOptimizer_GetBoundSelection,None,itkLBFGSBOptimizer)
itkLBFGSBOptimizer.SetCostFunctionConvergenceFactor = new_instancemethod(_ITKOptimizersPython.itkLBFGSBOptimizer_SetCostFunctionConvergenceFactor,None,itkLBFGSBOptimizer)
itkLBFGSBOptimizer.GetCostFunctionConvergenceFactor = new_instancemethod(_ITKOptimizersPython.itkLBFGSBOptimizer_GetCostFunctionConvergenceFactor,None,itkLBFGSBOptimizer)
itkLBFGSBOptimizer.SetProjectedGradientTolerance = new_instancemethod(_ITKOptimizersPython.itkLBFGSBOptimizer_SetProjectedGradientTolerance,None,itkLBFGSBOptimizer)
itkLBFGSBOptimizer.GetProjectedGradientTolerance = new_instancemethod(_ITKOptimizersPython.itkLBFGSBOptimizer_GetProjectedGradientTolerance,None,itkLBFGSBOptimizer)
itkLBFGSBOptimizer.SetMaximumNumberOfIterations = new_instancemethod(_ITKOptimizersPython.itkLBFGSBOptimizer_SetMaximumNumberOfIterations,None,itkLBFGSBOptimizer)
itkLBFGSBOptimizer.GetMaximumNumberOfIterations = new_instancemethod(_ITKOptimizersPython.itkLBFGSBOptimizer_GetMaximumNumberOfIterations,None,itkLBFGSBOptimizer)
itkLBFGSBOptimizer.SetMaximumNumberOfEvaluations = new_instancemethod(_ITKOptimizersPython.itkLBFGSBOptimizer_SetMaximumNumberOfEvaluations,None,itkLBFGSBOptimizer)
itkLBFGSBOptimizer.GetMaximumNumberOfEvaluations = new_instancemethod(_ITKOptimizersPython.itkLBFGSBOptimizer_GetMaximumNumberOfEvaluations,None,itkLBFGSBOptimizer)
itkLBFGSBOptimizer.SetMaximumNumberOfCorrections = new_instancemethod(_ITKOptimizersPython.itkLBFGSBOptimizer_SetMaximumNumberOfCorrections,None,itkLBFGSBOptimizer)
itkLBFGSBOptimizer.GetMaximumNumberOfCorrections = new_instancemethod(_ITKOptimizersPython.itkLBFGSBOptimizer_GetMaximumNumberOfCorrections,None,itkLBFGSBOptimizer)
itkLBFGSBOptimizer.SetScales = new_instancemethod(_ITKOptimizersPython.itkLBFGSBOptimizer_SetScales,None,itkLBFGSBOptimizer)
itkLBFGSBOptimizer.GetCurrentIteration = new_instancemethod(_ITKOptimizersPython.itkLBFGSBOptimizer_GetCurrentIteration,None,itkLBFGSBOptimizer)
itkLBFGSBOptimizer.GetValue = new_instancemethod(_ITKOptimizersPython.itkLBFGSBOptimizer_GetValue,None,itkLBFGSBOptimizer)
itkLBFGSBOptimizer.GetInfinityNormOfProjectedGradient = new_instancemethod(_ITKOptimizersPython.itkLBFGSBOptimizer_GetInfinityNormOfProjectedGradient,None,itkLBFGSBOptimizer)
itkLBFGSBOptimizer.GetPointer = new_instancemethod(_ITKOptimizersPython.itkLBFGSBOptimizer_GetPointer,None,itkLBFGSBOptimizer)
itkLBFGSBOptimizer_swigregister = _ITKOptimizersPython.itkLBFGSBOptimizer_swigregister
itkLBFGSBOptimizer_swigregister(itkLBFGSBOptimizer)

def itkLBFGSBOptimizer___New_orig__():
  """itkLBFGSBOptimizer___New_orig__()"""
  return _ITKOptimizersPython.itkLBFGSBOptimizer___New_orig__()

def itkLBFGSBOptimizer_cast(*args):
  """itkLBFGSBOptimizer_cast(itkLightObject obj) -> itkLBFGSBOptimizer"""
  return _ITKOptimizersPython.itkLBFGSBOptimizer_cast(*args)

class itkLBFGSOptimizer(itkSingleValuedNonLinearVnlOptimizer):
    """Proxy of C++ itkLBFGSOptimizer class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKOptimizersPython.itkLBFGSOptimizer___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetOptimizer(self):
        """GetOptimizer(self) -> vnl_lbfgs"""
        return _ITKOptimizersPython.itkLBFGSOptimizer_GetOptimizer(self)

    def SetTrace(self, *args):
        """SetTrace(self, bool flag)"""
        return _ITKOptimizersPython.itkLBFGSOptimizer_SetTrace(self, *args)

    def GetTrace(self):
        """GetTrace(self) -> bool"""
        return _ITKOptimizersPython.itkLBFGSOptimizer_GetTrace(self)

    def TraceOn(self):
        """TraceOn(self)"""
        return _ITKOptimizersPython.itkLBFGSOptimizer_TraceOn(self)

    def TraceOff(self):
        """TraceOff(self)"""
        return _ITKOptimizersPython.itkLBFGSOptimizer_TraceOff(self)

    def SetMaximumNumberOfFunctionEvaluations(self, *args):
        """SetMaximumNumberOfFunctionEvaluations(self, unsigned int n)"""
        return _ITKOptimizersPython.itkLBFGSOptimizer_SetMaximumNumberOfFunctionEvaluations(self, *args)

    def GetMaximumNumberOfFunctionEvaluations(self):
        """GetMaximumNumberOfFunctionEvaluations(self) -> unsigned int"""
        return _ITKOptimizersPython.itkLBFGSOptimizer_GetMaximumNumberOfFunctionEvaluations(self)

    def SetGradientConvergenceTolerance(self, *args):
        """SetGradientConvergenceTolerance(self, double gtol)"""
        return _ITKOptimizersPython.itkLBFGSOptimizer_SetGradientConvergenceTolerance(self, *args)

    def GetGradientConvergenceTolerance(self):
        """GetGradientConvergenceTolerance(self) -> double"""
        return _ITKOptimizersPython.itkLBFGSOptimizer_GetGradientConvergenceTolerance(self)

    def SetLineSearchAccuracy(self, *args):
        """SetLineSearchAccuracy(self, double tol)"""
        return _ITKOptimizersPython.itkLBFGSOptimizer_SetLineSearchAccuracy(self, *args)

    def GetLineSearchAccuracy(self):
        """GetLineSearchAccuracy(self) -> double"""
        return _ITKOptimizersPython.itkLBFGSOptimizer_GetLineSearchAccuracy(self)

    def SetDefaultStepLength(self, *args):
        """SetDefaultStepLength(self, double stp)"""
        return _ITKOptimizersPython.itkLBFGSOptimizer_SetDefaultStepLength(self, *args)

    def GetDefaultStepLength(self):
        """GetDefaultStepLength(self) -> double"""
        return _ITKOptimizersPython.itkLBFGSOptimizer_GetDefaultStepLength(self)

    def GetValue(self):
        """GetValue(self) -> double"""
        return _ITKOptimizersPython.itkLBFGSOptimizer_GetValue(self)

    __swig_destroy__ = _ITKOptimizersPython.delete_itkLBFGSOptimizer
    def cast(*args):
        """cast(itkLightObject obj) -> itkLBFGSOptimizer"""
        return _ITKOptimizersPython.itkLBFGSOptimizer_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkLBFGSOptimizer"""
        return _ITKOptimizersPython.itkLBFGSOptimizer_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkLBFGSOptimizer
        
        Create a new object of the class itkLBFGSOptimizer and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkLBFGSOptimizer.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkLBFGSOptimizer.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLBFGSOptimizer.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLBFGSOptimizer.GetOptimizer = new_instancemethod(_ITKOptimizersPython.itkLBFGSOptimizer_GetOptimizer,None,itkLBFGSOptimizer)
itkLBFGSOptimizer.SetTrace = new_instancemethod(_ITKOptimizersPython.itkLBFGSOptimizer_SetTrace,None,itkLBFGSOptimizer)
itkLBFGSOptimizer.GetTrace = new_instancemethod(_ITKOptimizersPython.itkLBFGSOptimizer_GetTrace,None,itkLBFGSOptimizer)
itkLBFGSOptimizer.TraceOn = new_instancemethod(_ITKOptimizersPython.itkLBFGSOptimizer_TraceOn,None,itkLBFGSOptimizer)
itkLBFGSOptimizer.TraceOff = new_instancemethod(_ITKOptimizersPython.itkLBFGSOptimizer_TraceOff,None,itkLBFGSOptimizer)
itkLBFGSOptimizer.SetMaximumNumberOfFunctionEvaluations = new_instancemethod(_ITKOptimizersPython.itkLBFGSOptimizer_SetMaximumNumberOfFunctionEvaluations,None,itkLBFGSOptimizer)
itkLBFGSOptimizer.GetMaximumNumberOfFunctionEvaluations = new_instancemethod(_ITKOptimizersPython.itkLBFGSOptimizer_GetMaximumNumberOfFunctionEvaluations,None,itkLBFGSOptimizer)
itkLBFGSOptimizer.SetGradientConvergenceTolerance = new_instancemethod(_ITKOptimizersPython.itkLBFGSOptimizer_SetGradientConvergenceTolerance,None,itkLBFGSOptimizer)
itkLBFGSOptimizer.GetGradientConvergenceTolerance = new_instancemethod(_ITKOptimizersPython.itkLBFGSOptimizer_GetGradientConvergenceTolerance,None,itkLBFGSOptimizer)
itkLBFGSOptimizer.SetLineSearchAccuracy = new_instancemethod(_ITKOptimizersPython.itkLBFGSOptimizer_SetLineSearchAccuracy,None,itkLBFGSOptimizer)
itkLBFGSOptimizer.GetLineSearchAccuracy = new_instancemethod(_ITKOptimizersPython.itkLBFGSOptimizer_GetLineSearchAccuracy,None,itkLBFGSOptimizer)
itkLBFGSOptimizer.SetDefaultStepLength = new_instancemethod(_ITKOptimizersPython.itkLBFGSOptimizer_SetDefaultStepLength,None,itkLBFGSOptimizer)
itkLBFGSOptimizer.GetDefaultStepLength = new_instancemethod(_ITKOptimizersPython.itkLBFGSOptimizer_GetDefaultStepLength,None,itkLBFGSOptimizer)
itkLBFGSOptimizer.GetValue = new_instancemethod(_ITKOptimizersPython.itkLBFGSOptimizer_GetValue,None,itkLBFGSOptimizer)
itkLBFGSOptimizer.GetPointer = new_instancemethod(_ITKOptimizersPython.itkLBFGSOptimizer_GetPointer,None,itkLBFGSOptimizer)
itkLBFGSOptimizer_swigregister = _ITKOptimizersPython.itkLBFGSOptimizer_swigregister
itkLBFGSOptimizer_swigregister(itkLBFGSOptimizer)

def itkLBFGSOptimizer___New_orig__():
  """itkLBFGSOptimizer___New_orig__()"""
  return _ITKOptimizersPython.itkLBFGSOptimizer___New_orig__()

def itkLBFGSOptimizer_cast(*args):
  """itkLBFGSOptimizer_cast(itkLightObject obj) -> itkLBFGSOptimizer"""
  return _ITKOptimizersPython.itkLBFGSOptimizer_cast(*args)

class itkMultipleValuedNonLinearOptimizer(itkNonLinearOptimizer):
    """Proxy of C++ itkMultipleValuedNonLinearOptimizer class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKOptimizersPython.itkMultipleValuedNonLinearOptimizer___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetCostFunction(self, *args):
        """SetCostFunction(self, itkMultipleValuedCostFunction costFunction)"""
        return _ITKOptimizersPython.itkMultipleValuedNonLinearOptimizer_SetCostFunction(self, *args)

    __swig_destroy__ = _ITKOptimizersPython.delete_itkMultipleValuedNonLinearOptimizer
    def cast(*args):
        """cast(itkLightObject obj) -> itkMultipleValuedNonLinearOptimizer"""
        return _ITKOptimizersPython.itkMultipleValuedNonLinearOptimizer_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMultipleValuedNonLinearOptimizer"""
        return _ITKOptimizersPython.itkMultipleValuedNonLinearOptimizer_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMultipleValuedNonLinearOptimizer
        
        Create a new object of the class itkMultipleValuedNonLinearOptimizer and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMultipleValuedNonLinearOptimizer.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMultipleValuedNonLinearOptimizer.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultipleValuedNonLinearOptimizer.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultipleValuedNonLinearOptimizer.SetCostFunction = new_instancemethod(_ITKOptimizersPython.itkMultipleValuedNonLinearOptimizer_SetCostFunction,None,itkMultipleValuedNonLinearOptimizer)
itkMultipleValuedNonLinearOptimizer.GetPointer = new_instancemethod(_ITKOptimizersPython.itkMultipleValuedNonLinearOptimizer_GetPointer,None,itkMultipleValuedNonLinearOptimizer)
itkMultipleValuedNonLinearOptimizer_swigregister = _ITKOptimizersPython.itkMultipleValuedNonLinearOptimizer_swigregister
itkMultipleValuedNonLinearOptimizer_swigregister(itkMultipleValuedNonLinearOptimizer)

def itkMultipleValuedNonLinearOptimizer___New_orig__():
  """itkMultipleValuedNonLinearOptimizer___New_orig__()"""
  return _ITKOptimizersPython.itkMultipleValuedNonLinearOptimizer___New_orig__()

def itkMultipleValuedNonLinearOptimizer_cast(*args):
  """itkMultipleValuedNonLinearOptimizer_cast(itkLightObject obj) -> itkMultipleValuedNonLinearOptimizer"""
  return _ITKOptimizersPython.itkMultipleValuedNonLinearOptimizer_cast(*args)

class itkMultipleValuedNonLinearVnlOptimizer(itkMultipleValuedNonLinearOptimizer):
    """Proxy of C++ itkMultipleValuedNonLinearVnlOptimizer class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def SetUseCostFunctionGradient(self, *args):
        """SetUseCostFunctionGradient(self, bool arg0)"""
        return _ITKOptimizersPython.itkMultipleValuedNonLinearVnlOptimizer_SetUseCostFunctionGradient(self, *args)

    def UseCostFunctionGradientOn(self):
        """UseCostFunctionGradientOn(self)"""
        return _ITKOptimizersPython.itkMultipleValuedNonLinearVnlOptimizer_UseCostFunctionGradientOn(self)

    def UseCostFunctionGradientOff(self):
        """UseCostFunctionGradientOff(self)"""
        return _ITKOptimizersPython.itkMultipleValuedNonLinearVnlOptimizer_UseCostFunctionGradientOff(self)

    def GetUseCostFunctionGradient(self):
        """GetUseCostFunctionGradient(self) -> bool"""
        return _ITKOptimizersPython.itkMultipleValuedNonLinearVnlOptimizer_GetUseCostFunctionGradient(self)

    def GetCachedValue(self):
        """GetCachedValue(self) -> itkArrayD"""
        return _ITKOptimizersPython.itkMultipleValuedNonLinearVnlOptimizer_GetCachedValue(self)

    def GetCachedDerivative(self):
        """GetCachedDerivative(self) -> itkArray2DD"""
        return _ITKOptimizersPython.itkMultipleValuedNonLinearVnlOptimizer_GetCachedDerivative(self)

    def GetCachedCurrentPosition(self):
        """GetCachedCurrentPosition(self) -> itkArrayD"""
        return _ITKOptimizersPython.itkMultipleValuedNonLinearVnlOptimizer_GetCachedCurrentPosition(self)

    __swig_destroy__ = _ITKOptimizersPython.delete_itkMultipleValuedNonLinearVnlOptimizer
    def cast(*args):
        """cast(itkLightObject obj) -> itkMultipleValuedNonLinearVnlOptimizer"""
        return _ITKOptimizersPython.itkMultipleValuedNonLinearVnlOptimizer_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMultipleValuedNonLinearVnlOptimizer"""
        return _ITKOptimizersPython.itkMultipleValuedNonLinearVnlOptimizer_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMultipleValuedNonLinearVnlOptimizer
        
        Create a new object of the class itkMultipleValuedNonLinearVnlOptimizer and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMultipleValuedNonLinearVnlOptimizer.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMultipleValuedNonLinearVnlOptimizer.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultipleValuedNonLinearVnlOptimizer.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultipleValuedNonLinearVnlOptimizer.SetUseCostFunctionGradient = new_instancemethod(_ITKOptimizersPython.itkMultipleValuedNonLinearVnlOptimizer_SetUseCostFunctionGradient,None,itkMultipleValuedNonLinearVnlOptimizer)
itkMultipleValuedNonLinearVnlOptimizer.UseCostFunctionGradientOn = new_instancemethod(_ITKOptimizersPython.itkMultipleValuedNonLinearVnlOptimizer_UseCostFunctionGradientOn,None,itkMultipleValuedNonLinearVnlOptimizer)
itkMultipleValuedNonLinearVnlOptimizer.UseCostFunctionGradientOff = new_instancemethod(_ITKOptimizersPython.itkMultipleValuedNonLinearVnlOptimizer_UseCostFunctionGradientOff,None,itkMultipleValuedNonLinearVnlOptimizer)
itkMultipleValuedNonLinearVnlOptimizer.GetUseCostFunctionGradient = new_instancemethod(_ITKOptimizersPython.itkMultipleValuedNonLinearVnlOptimizer_GetUseCostFunctionGradient,None,itkMultipleValuedNonLinearVnlOptimizer)
itkMultipleValuedNonLinearVnlOptimizer.GetCachedValue = new_instancemethod(_ITKOptimizersPython.itkMultipleValuedNonLinearVnlOptimizer_GetCachedValue,None,itkMultipleValuedNonLinearVnlOptimizer)
itkMultipleValuedNonLinearVnlOptimizer.GetCachedDerivative = new_instancemethod(_ITKOptimizersPython.itkMultipleValuedNonLinearVnlOptimizer_GetCachedDerivative,None,itkMultipleValuedNonLinearVnlOptimizer)
itkMultipleValuedNonLinearVnlOptimizer.GetCachedCurrentPosition = new_instancemethod(_ITKOptimizersPython.itkMultipleValuedNonLinearVnlOptimizer_GetCachedCurrentPosition,None,itkMultipleValuedNonLinearVnlOptimizer)
itkMultipleValuedNonLinearVnlOptimizer.GetPointer = new_instancemethod(_ITKOptimizersPython.itkMultipleValuedNonLinearVnlOptimizer_GetPointer,None,itkMultipleValuedNonLinearVnlOptimizer)
itkMultipleValuedNonLinearVnlOptimizer_swigregister = _ITKOptimizersPython.itkMultipleValuedNonLinearVnlOptimizer_swigregister
itkMultipleValuedNonLinearVnlOptimizer_swigregister(itkMultipleValuedNonLinearVnlOptimizer)

def itkMultipleValuedNonLinearVnlOptimizer_cast(*args):
  """itkMultipleValuedNonLinearVnlOptimizer_cast(itkLightObject obj) -> itkMultipleValuedNonLinearVnlOptimizer"""
  return _ITKOptimizersPython.itkMultipleValuedNonLinearVnlOptimizer_cast(*args)

class itkOnePlusOneEvolutionaryOptimizer(itkSingleValuedNonLinearOptimizer):
    """Proxy of C++ itkOnePlusOneEvolutionaryOptimizer class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetMaximize(self, *args):
        """SetMaximize(self, bool _arg)"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_SetMaximize(self, *args)

    def MaximizeOn(self):
        """MaximizeOn(self)"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_MaximizeOn(self)

    def MaximizeOff(self):
        """MaximizeOff(self)"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_MaximizeOff(self)

    def GetMaximize(self):
        """GetMaximize(self) -> bool"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_GetMaximize(self)

    def GetMinimize(self):
        """GetMinimize(self) -> bool"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_GetMinimize(self)

    def SetMinimize(self, *args):
        """SetMinimize(self, bool v)"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_SetMinimize(self, *args)

    def MinimizeOn(self):
        """MinimizeOn(self)"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_MinimizeOn(self)

    def MinimizeOff(self):
        """MinimizeOff(self)"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_MinimizeOff(self)

    def SetMaximumIteration(self, *args):
        """SetMaximumIteration(self, unsigned int _arg)"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_SetMaximumIteration(self, *args)

    def GetMaximumIteration(self):
        """GetMaximumIteration(self) -> unsigned int"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_GetMaximumIteration(self)

    def SetGrowthFactor(self, *args):
        """SetGrowthFactor(self, double _arg)"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_SetGrowthFactor(self, *args)

    def GetGrowthFactor(self):
        """GetGrowthFactor(self) -> double"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_GetGrowthFactor(self)

    def SetShrinkFactor(self, *args):
        """SetShrinkFactor(self, double _arg)"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_SetShrinkFactor(self, *args)

    def GetShrinkFactor(self):
        """GetShrinkFactor(self) -> double"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_GetShrinkFactor(self)

    def SetInitialRadius(self, *args):
        """SetInitialRadius(self, double _arg)"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_SetInitialRadius(self, *args)

    def GetInitialRadius(self):
        """GetInitialRadius(self) -> double"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_GetInitialRadius(self)

    def SetEpsilon(self, *args):
        """SetEpsilon(self, double _arg)"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_SetEpsilon(self, *args)

    def GetEpsilon(self):
        """GetEpsilon(self) -> double"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_GetEpsilon(self)

    def GetFrobeniusNorm(self):
        """GetFrobeniusNorm(self) -> double"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_GetFrobeniusNorm(self)

    def SetNormalVariateGenerator(self, *args):
        """SetNormalVariateGenerator(self, itkRandomVariateGeneratorBase generator)"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_SetNormalVariateGenerator(self, *args)

    def Initialize(self, *args):
        """
        Initialize(self, double initialRadius, double grow = -0x00000000000000001, 
            double shrink = -0x00000000000000001)
        Initialize(self, double initialRadius, double grow = -0x00000000000000001)
        Initialize(self, double initialRadius)
        """
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_Initialize(self, *args)

    def GetCurrentCost(self):
        """GetCurrentCost(self) -> double"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_GetCurrentCost(self)

    def GetValue(self):
        """GetValue(self) -> double"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_GetValue(self)

    def GetCurrentIteration(self):
        """GetCurrentIteration(self) -> unsigned int"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_GetCurrentIteration(self)

    def GetInitialized(self):
        """GetInitialized(self) -> bool"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_GetInitialized(self)

    def StopOptimization(self):
        """StopOptimization(self)"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_StopOptimization(self)

    def GetCatchGetValueException(self):
        """GetCatchGetValueException(self) -> bool"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_GetCatchGetValueException(self)

    def SetCatchGetValueException(self, *args):
        """SetCatchGetValueException(self, bool _arg)"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_SetCatchGetValueException(self, *args)

    def GetMetricWorstPossibleValue(self):
        """GetMetricWorstPossibleValue(self) -> double"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_GetMetricWorstPossibleValue(self)

    def SetMetricWorstPossibleValue(self, *args):
        """SetMetricWorstPossibleValue(self, double _arg)"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_SetMetricWorstPossibleValue(self, *args)

    __swig_destroy__ = _ITKOptimizersPython.delete_itkOnePlusOneEvolutionaryOptimizer
    def cast(*args):
        """cast(itkLightObject obj) -> itkOnePlusOneEvolutionaryOptimizer"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkOnePlusOneEvolutionaryOptimizer"""
        return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkOnePlusOneEvolutionaryOptimizer
        
        Create a new object of the class itkOnePlusOneEvolutionaryOptimizer and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkOnePlusOneEvolutionaryOptimizer.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkOnePlusOneEvolutionaryOptimizer.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOnePlusOneEvolutionaryOptimizer.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOnePlusOneEvolutionaryOptimizer.SetMaximize = new_instancemethod(_ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_SetMaximize,None,itkOnePlusOneEvolutionaryOptimizer)
itkOnePlusOneEvolutionaryOptimizer.MaximizeOn = new_instancemethod(_ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_MaximizeOn,None,itkOnePlusOneEvolutionaryOptimizer)
itkOnePlusOneEvolutionaryOptimizer.MaximizeOff = new_instancemethod(_ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_MaximizeOff,None,itkOnePlusOneEvolutionaryOptimizer)
itkOnePlusOneEvolutionaryOptimizer.GetMaximize = new_instancemethod(_ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_GetMaximize,None,itkOnePlusOneEvolutionaryOptimizer)
itkOnePlusOneEvolutionaryOptimizer.GetMinimize = new_instancemethod(_ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_GetMinimize,None,itkOnePlusOneEvolutionaryOptimizer)
itkOnePlusOneEvolutionaryOptimizer.SetMinimize = new_instancemethod(_ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_SetMinimize,None,itkOnePlusOneEvolutionaryOptimizer)
itkOnePlusOneEvolutionaryOptimizer.MinimizeOn = new_instancemethod(_ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_MinimizeOn,None,itkOnePlusOneEvolutionaryOptimizer)
itkOnePlusOneEvolutionaryOptimizer.MinimizeOff = new_instancemethod(_ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_MinimizeOff,None,itkOnePlusOneEvolutionaryOptimizer)
itkOnePlusOneEvolutionaryOptimizer.SetMaximumIteration = new_instancemethod(_ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_SetMaximumIteration,None,itkOnePlusOneEvolutionaryOptimizer)
itkOnePlusOneEvolutionaryOptimizer.GetMaximumIteration = new_instancemethod(_ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_GetMaximumIteration,None,itkOnePlusOneEvolutionaryOptimizer)
itkOnePlusOneEvolutionaryOptimizer.SetGrowthFactor = new_instancemethod(_ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_SetGrowthFactor,None,itkOnePlusOneEvolutionaryOptimizer)
itkOnePlusOneEvolutionaryOptimizer.GetGrowthFactor = new_instancemethod(_ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_GetGrowthFactor,None,itkOnePlusOneEvolutionaryOptimizer)
itkOnePlusOneEvolutionaryOptimizer.SetShrinkFactor = new_instancemethod(_ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_SetShrinkFactor,None,itkOnePlusOneEvolutionaryOptimizer)
itkOnePlusOneEvolutionaryOptimizer.GetShrinkFactor = new_instancemethod(_ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_GetShrinkFactor,None,itkOnePlusOneEvolutionaryOptimizer)
itkOnePlusOneEvolutionaryOptimizer.SetInitialRadius = new_instancemethod(_ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_SetInitialRadius,None,itkOnePlusOneEvolutionaryOptimizer)
itkOnePlusOneEvolutionaryOptimizer.GetInitialRadius = new_instancemethod(_ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_GetInitialRadius,None,itkOnePlusOneEvolutionaryOptimizer)
itkOnePlusOneEvolutionaryOptimizer.SetEpsilon = new_instancemethod(_ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_SetEpsilon,None,itkOnePlusOneEvolutionaryOptimizer)
itkOnePlusOneEvolutionaryOptimizer.GetEpsilon = new_instancemethod(_ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_GetEpsilon,None,itkOnePlusOneEvolutionaryOptimizer)
itkOnePlusOneEvolutionaryOptimizer.GetFrobeniusNorm = new_instancemethod(_ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_GetFrobeniusNorm,None,itkOnePlusOneEvolutionaryOptimizer)
itkOnePlusOneEvolutionaryOptimizer.SetNormalVariateGenerator = new_instancemethod(_ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_SetNormalVariateGenerator,None,itkOnePlusOneEvolutionaryOptimizer)
itkOnePlusOneEvolutionaryOptimizer.Initialize = new_instancemethod(_ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_Initialize,None,itkOnePlusOneEvolutionaryOptimizer)
itkOnePlusOneEvolutionaryOptimizer.GetCurrentCost = new_instancemethod(_ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_GetCurrentCost,None,itkOnePlusOneEvolutionaryOptimizer)
itkOnePlusOneEvolutionaryOptimizer.GetValue = new_instancemethod(_ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_GetValue,None,itkOnePlusOneEvolutionaryOptimizer)
itkOnePlusOneEvolutionaryOptimizer.GetCurrentIteration = new_instancemethod(_ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_GetCurrentIteration,None,itkOnePlusOneEvolutionaryOptimizer)
itkOnePlusOneEvolutionaryOptimizer.GetInitialized = new_instancemethod(_ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_GetInitialized,None,itkOnePlusOneEvolutionaryOptimizer)
itkOnePlusOneEvolutionaryOptimizer.StopOptimization = new_instancemethod(_ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_StopOptimization,None,itkOnePlusOneEvolutionaryOptimizer)
itkOnePlusOneEvolutionaryOptimizer.GetCatchGetValueException = new_instancemethod(_ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_GetCatchGetValueException,None,itkOnePlusOneEvolutionaryOptimizer)
itkOnePlusOneEvolutionaryOptimizer.SetCatchGetValueException = new_instancemethod(_ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_SetCatchGetValueException,None,itkOnePlusOneEvolutionaryOptimizer)
itkOnePlusOneEvolutionaryOptimizer.GetMetricWorstPossibleValue = new_instancemethod(_ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_GetMetricWorstPossibleValue,None,itkOnePlusOneEvolutionaryOptimizer)
itkOnePlusOneEvolutionaryOptimizer.SetMetricWorstPossibleValue = new_instancemethod(_ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_SetMetricWorstPossibleValue,None,itkOnePlusOneEvolutionaryOptimizer)
itkOnePlusOneEvolutionaryOptimizer.GetPointer = new_instancemethod(_ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_GetPointer,None,itkOnePlusOneEvolutionaryOptimizer)
itkOnePlusOneEvolutionaryOptimizer_swigregister = _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_swigregister
itkOnePlusOneEvolutionaryOptimizer_swigregister(itkOnePlusOneEvolutionaryOptimizer)

def itkOnePlusOneEvolutionaryOptimizer___New_orig__():
  """itkOnePlusOneEvolutionaryOptimizer___New_orig__()"""
  return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer___New_orig__()

def itkOnePlusOneEvolutionaryOptimizer_cast(*args):
  """itkOnePlusOneEvolutionaryOptimizer_cast(itkLightObject obj) -> itkOnePlusOneEvolutionaryOptimizer"""
  return _ITKOptimizersPython.itkOnePlusOneEvolutionaryOptimizer_cast(*args)

class itkPowellOptimizer(itkSingleValuedNonLinearOptimizer):
    """Proxy of C++ itkPowellOptimizer class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKOptimizersPython.itkPowellOptimizer___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetMaximize(self, *args):
        """SetMaximize(self, bool _arg)"""
        return _ITKOptimizersPython.itkPowellOptimizer_SetMaximize(self, *args)

    def MaximizeOn(self):
        """MaximizeOn(self)"""
        return _ITKOptimizersPython.itkPowellOptimizer_MaximizeOn(self)

    def MaximizeOff(self):
        """MaximizeOff(self)"""
        return _ITKOptimizersPython.itkPowellOptimizer_MaximizeOff(self)

    def GetMaximize(self):
        """GetMaximize(self) -> bool"""
        return _ITKOptimizersPython.itkPowellOptimizer_GetMaximize(self)

    def SetMaximumIteration(self, *args):
        """SetMaximumIteration(self, unsigned int _arg)"""
        return _ITKOptimizersPython.itkPowellOptimizer_SetMaximumIteration(self, *args)

    def GetMaximumIteration(self):
        """GetMaximumIteration(self) -> unsigned int"""
        return _ITKOptimizersPython.itkPowellOptimizer_GetMaximumIteration(self)

    def SetMaximumLineIteration(self, *args):
        """SetMaximumLineIteration(self, unsigned int _arg)"""
        return _ITKOptimizersPython.itkPowellOptimizer_SetMaximumLineIteration(self, *args)

    def GetMaximumLineIteration(self):
        """GetMaximumLineIteration(self) -> unsigned int"""
        return _ITKOptimizersPython.itkPowellOptimizer_GetMaximumLineIteration(self)

    def SetStepLength(self, *args):
        """SetStepLength(self, double _arg)"""
        return _ITKOptimizersPython.itkPowellOptimizer_SetStepLength(self, *args)

    def GetStepLength(self):
        """GetStepLength(self) -> double"""
        return _ITKOptimizersPython.itkPowellOptimizer_GetStepLength(self)

    def SetStepTolerance(self, *args):
        """SetStepTolerance(self, double _arg)"""
        return _ITKOptimizersPython.itkPowellOptimizer_SetStepTolerance(self, *args)

    def GetStepTolerance(self):
        """GetStepTolerance(self) -> double"""
        return _ITKOptimizersPython.itkPowellOptimizer_GetStepTolerance(self)

    def SetValueTolerance(self, *args):
        """SetValueTolerance(self, double _arg)"""
        return _ITKOptimizersPython.itkPowellOptimizer_SetValueTolerance(self, *args)

    def GetValueTolerance(self):
        """GetValueTolerance(self) -> double"""
        return _ITKOptimizersPython.itkPowellOptimizer_GetValueTolerance(self)

    def GetCurrentCost(self):
        """GetCurrentCost(self) -> double"""
        return _ITKOptimizersPython.itkPowellOptimizer_GetCurrentCost(self)

    def GetValue(self):
        """GetValue(self) -> double"""
        return _ITKOptimizersPython.itkPowellOptimizer_GetValue(self)

    def GetCurrentIteration(self):
        """GetCurrentIteration(self) -> unsigned int"""
        return _ITKOptimizersPython.itkPowellOptimizer_GetCurrentIteration(self)

    def GetCurrentLineIteration(self):
        """GetCurrentLineIteration(self) -> unsigned int"""
        return _ITKOptimizersPython.itkPowellOptimizer_GetCurrentLineIteration(self)

    def StopOptimization(self):
        """StopOptimization(self)"""
        return _ITKOptimizersPython.itkPowellOptimizer_StopOptimization(self)

    def GetCatchGetValueException(self):
        """GetCatchGetValueException(self) -> bool"""
        return _ITKOptimizersPython.itkPowellOptimizer_GetCatchGetValueException(self)

    def SetCatchGetValueException(self, *args):
        """SetCatchGetValueException(self, bool _arg)"""
        return _ITKOptimizersPython.itkPowellOptimizer_SetCatchGetValueException(self, *args)

    def GetMetricWorstPossibleValue(self):
        """GetMetricWorstPossibleValue(self) -> double"""
        return _ITKOptimizersPython.itkPowellOptimizer_GetMetricWorstPossibleValue(self)

    def SetMetricWorstPossibleValue(self, *args):
        """SetMetricWorstPossibleValue(self, double _arg)"""
        return _ITKOptimizersPython.itkPowellOptimizer_SetMetricWorstPossibleValue(self, *args)

    __swig_destroy__ = _ITKOptimizersPython.delete_itkPowellOptimizer
    def cast(*args):
        """cast(itkLightObject obj) -> itkPowellOptimizer"""
        return _ITKOptimizersPython.itkPowellOptimizer_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkPowellOptimizer"""
        return _ITKOptimizersPython.itkPowellOptimizer_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkPowellOptimizer
        
        Create a new object of the class itkPowellOptimizer and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkPowellOptimizer.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkPowellOptimizer.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPowellOptimizer.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPowellOptimizer.SetMaximize = new_instancemethod(_ITKOptimizersPython.itkPowellOptimizer_SetMaximize,None,itkPowellOptimizer)
itkPowellOptimizer.MaximizeOn = new_instancemethod(_ITKOptimizersPython.itkPowellOptimizer_MaximizeOn,None,itkPowellOptimizer)
itkPowellOptimizer.MaximizeOff = new_instancemethod(_ITKOptimizersPython.itkPowellOptimizer_MaximizeOff,None,itkPowellOptimizer)
itkPowellOptimizer.GetMaximize = new_instancemethod(_ITKOptimizersPython.itkPowellOptimizer_GetMaximize,None,itkPowellOptimizer)
itkPowellOptimizer.SetMaximumIteration = new_instancemethod(_ITKOptimizersPython.itkPowellOptimizer_SetMaximumIteration,None,itkPowellOptimizer)
itkPowellOptimizer.GetMaximumIteration = new_instancemethod(_ITKOptimizersPython.itkPowellOptimizer_GetMaximumIteration,None,itkPowellOptimizer)
itkPowellOptimizer.SetMaximumLineIteration = new_instancemethod(_ITKOptimizersPython.itkPowellOptimizer_SetMaximumLineIteration,None,itkPowellOptimizer)
itkPowellOptimizer.GetMaximumLineIteration = new_instancemethod(_ITKOptimizersPython.itkPowellOptimizer_GetMaximumLineIteration,None,itkPowellOptimizer)
itkPowellOptimizer.SetStepLength = new_instancemethod(_ITKOptimizersPython.itkPowellOptimizer_SetStepLength,None,itkPowellOptimizer)
itkPowellOptimizer.GetStepLength = new_instancemethod(_ITKOptimizersPython.itkPowellOptimizer_GetStepLength,None,itkPowellOptimizer)
itkPowellOptimizer.SetStepTolerance = new_instancemethod(_ITKOptimizersPython.itkPowellOptimizer_SetStepTolerance,None,itkPowellOptimizer)
itkPowellOptimizer.GetStepTolerance = new_instancemethod(_ITKOptimizersPython.itkPowellOptimizer_GetStepTolerance,None,itkPowellOptimizer)
itkPowellOptimizer.SetValueTolerance = new_instancemethod(_ITKOptimizersPython.itkPowellOptimizer_SetValueTolerance,None,itkPowellOptimizer)
itkPowellOptimizer.GetValueTolerance = new_instancemethod(_ITKOptimizersPython.itkPowellOptimizer_GetValueTolerance,None,itkPowellOptimizer)
itkPowellOptimizer.GetCurrentCost = new_instancemethod(_ITKOptimizersPython.itkPowellOptimizer_GetCurrentCost,None,itkPowellOptimizer)
itkPowellOptimizer.GetValue = new_instancemethod(_ITKOptimizersPython.itkPowellOptimizer_GetValue,None,itkPowellOptimizer)
itkPowellOptimizer.GetCurrentIteration = new_instancemethod(_ITKOptimizersPython.itkPowellOptimizer_GetCurrentIteration,None,itkPowellOptimizer)
itkPowellOptimizer.GetCurrentLineIteration = new_instancemethod(_ITKOptimizersPython.itkPowellOptimizer_GetCurrentLineIteration,None,itkPowellOptimizer)
itkPowellOptimizer.StopOptimization = new_instancemethod(_ITKOptimizersPython.itkPowellOptimizer_StopOptimization,None,itkPowellOptimizer)
itkPowellOptimizer.GetCatchGetValueException = new_instancemethod(_ITKOptimizersPython.itkPowellOptimizer_GetCatchGetValueException,None,itkPowellOptimizer)
itkPowellOptimizer.SetCatchGetValueException = new_instancemethod(_ITKOptimizersPython.itkPowellOptimizer_SetCatchGetValueException,None,itkPowellOptimizer)
itkPowellOptimizer.GetMetricWorstPossibleValue = new_instancemethod(_ITKOptimizersPython.itkPowellOptimizer_GetMetricWorstPossibleValue,None,itkPowellOptimizer)
itkPowellOptimizer.SetMetricWorstPossibleValue = new_instancemethod(_ITKOptimizersPython.itkPowellOptimizer_SetMetricWorstPossibleValue,None,itkPowellOptimizer)
itkPowellOptimizer.GetPointer = new_instancemethod(_ITKOptimizersPython.itkPowellOptimizer_GetPointer,None,itkPowellOptimizer)
itkPowellOptimizer_swigregister = _ITKOptimizersPython.itkPowellOptimizer_swigregister
itkPowellOptimizer_swigregister(itkPowellOptimizer)

def itkPowellOptimizer___New_orig__():
  """itkPowellOptimizer___New_orig__()"""
  return _ITKOptimizersPython.itkPowellOptimizer___New_orig__()

def itkPowellOptimizer_cast(*args):
  """itkPowellOptimizer_cast(itkLightObject obj) -> itkPowellOptimizer"""
  return _ITKOptimizersPython.itkPowellOptimizer_cast(*args)

class itkQuaternionRigidTransformGradientDescentOptimizer(itkGradientDescentOptimizer):
    """Proxy of C++ itkQuaternionRigidTransformGradientDescentOptimizer class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKOptimizersPython.itkQuaternionRigidTransformGradientDescentOptimizer___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _ITKOptimizersPython.delete_itkQuaternionRigidTransformGradientDescentOptimizer
    def cast(*args):
        """cast(itkLightObject obj) -> itkQuaternionRigidTransformGradientDescentOptimizer"""
        return _ITKOptimizersPython.itkQuaternionRigidTransformGradientDescentOptimizer_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkQuaternionRigidTransformGradientDescentOptimizer"""
        return _ITKOptimizersPython.itkQuaternionRigidTransformGradientDescentOptimizer_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkQuaternionRigidTransformGradientDescentOptimizer
        
        Create a new object of the class itkQuaternionRigidTransformGradientDescentOptimizer and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkQuaternionRigidTransformGradientDescentOptimizer.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkQuaternionRigidTransformGradientDescentOptimizer.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkQuaternionRigidTransformGradientDescentOptimizer.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkQuaternionRigidTransformGradientDescentOptimizer.GetPointer = new_instancemethod(_ITKOptimizersPython.itkQuaternionRigidTransformGradientDescentOptimizer_GetPointer,None,itkQuaternionRigidTransformGradientDescentOptimizer)
itkQuaternionRigidTransformGradientDescentOptimizer_swigregister = _ITKOptimizersPython.itkQuaternionRigidTransformGradientDescentOptimizer_swigregister
itkQuaternionRigidTransformGradientDescentOptimizer_swigregister(itkQuaternionRigidTransformGradientDescentOptimizer)

def itkQuaternionRigidTransformGradientDescentOptimizer___New_orig__():
  """itkQuaternionRigidTransformGradientDescentOptimizer___New_orig__()"""
  return _ITKOptimizersPython.itkQuaternionRigidTransformGradientDescentOptimizer___New_orig__()

def itkQuaternionRigidTransformGradientDescentOptimizer_cast(*args):
  """itkQuaternionRigidTransformGradientDescentOptimizer_cast(itkLightObject obj) -> itkQuaternionRigidTransformGradientDescentOptimizer"""
  return _ITKOptimizersPython.itkQuaternionRigidTransformGradientDescentOptimizer_cast(*args)

class itkRegularStepGradientDescentBaseOptimizer(itkSingleValuedNonLinearOptimizer):
    """Proxy of C++ itkRegularStepGradientDescentBaseOptimizer class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GradientMagnitudeTolerance = _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_GradientMagnitudeTolerance
    StepTooSmall = _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_StepTooSmall
    ImageNotAvailable = _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_ImageNotAvailable
    CostFunctionError = _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_CostFunctionError
    MaximumNumberOfIterations = _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_MaximumNumberOfIterations
    Unknown = _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_Unknown
    def __New_orig__():
        """__New_orig__()"""
        return _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetMaximize(self, *args):
        """SetMaximize(self, bool _arg)"""
        return _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_SetMaximize(self, *args)

    def GetMaximize(self):
        """GetMaximize(self) -> bool"""
        return _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_GetMaximize(self)

    def MaximizeOn(self):
        """MaximizeOn(self)"""
        return _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_MaximizeOn(self)

    def MaximizeOff(self):
        """MaximizeOff(self)"""
        return _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_MaximizeOff(self)

    def GetMinimize(self):
        """GetMinimize(self) -> bool"""
        return _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_GetMinimize(self)

    def SetMinimize(self, *args):
        """SetMinimize(self, bool v)"""
        return _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_SetMinimize(self, *args)

    def MinimizeOn(self):
        """MinimizeOn(self)"""
        return _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_MinimizeOn(self)

    def MinimizeOff(self):
        """MinimizeOff(self)"""
        return _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_MinimizeOff(self)

    def ResumeOptimization(self):
        """ResumeOptimization(self)"""
        return _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_ResumeOptimization(self)

    def StopOptimization(self):
        """StopOptimization(self)"""
        return _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_StopOptimization(self)

    def SetMaximumStepLength(self, *args):
        """SetMaximumStepLength(self, double _arg)"""
        return _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_SetMaximumStepLength(self, *args)

    def SetMinimumStepLength(self, *args):
        """SetMinimumStepLength(self, double _arg)"""
        return _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_SetMinimumStepLength(self, *args)

    def SetRelaxationFactor(self, *args):
        """SetRelaxationFactor(self, double _arg)"""
        return _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_SetRelaxationFactor(self, *args)

    def SetNumberOfIterations(self, *args):
        """SetNumberOfIterations(self, unsigned long _arg)"""
        return _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_SetNumberOfIterations(self, *args)

    def SetGradientMagnitudeTolerance(self, *args):
        """SetGradientMagnitudeTolerance(self, double _arg)"""
        return _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_SetGradientMagnitudeTolerance(self, *args)

    def GetCurrentStepLength(self):
        """GetCurrentStepLength(self) -> double"""
        return _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_GetCurrentStepLength(self)

    def GetMaximumStepLength(self):
        """GetMaximumStepLength(self) -> double"""
        return _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_GetMaximumStepLength(self)

    def GetMinimumStepLength(self):
        """GetMinimumStepLength(self) -> double"""
        return _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_GetMinimumStepLength(self)

    def GetRelaxationFactor(self):
        """GetRelaxationFactor(self) -> double"""
        return _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_GetRelaxationFactor(self)

    def GetNumberOfIterations(self):
        """GetNumberOfIterations(self) -> unsigned long"""
        return _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_GetNumberOfIterations(self)

    def GetGradientMagnitudeTolerance(self):
        """GetGradientMagnitudeTolerance(self) -> double"""
        return _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_GetGradientMagnitudeTolerance(self)

    def GetCurrentIteration(self):
        """GetCurrentIteration(self) -> unsigned int"""
        return _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_GetCurrentIteration(self)

    def GetStopCondition(self):
        """GetStopCondition(self) -> StopConditionType"""
        return _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_GetStopCondition(self)

    def GetValue(self):
        """GetValue(self) -> double"""
        return _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_GetValue(self)

    def GetGradient(self):
        """GetGradient(self) -> itkArrayD"""
        return _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_GetGradient(self)

    __swig_destroy__ = _ITKOptimizersPython.delete_itkRegularStepGradientDescentBaseOptimizer
    def cast(*args):
        """cast(itkLightObject obj) -> itkRegularStepGradientDescentBaseOptimizer"""
        return _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkRegularStepGradientDescentBaseOptimizer"""
        return _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkRegularStepGradientDescentBaseOptimizer
        
        Create a new object of the class itkRegularStepGradientDescentBaseOptimizer and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkRegularStepGradientDescentBaseOptimizer.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkRegularStepGradientDescentBaseOptimizer.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRegularStepGradientDescentBaseOptimizer.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRegularStepGradientDescentBaseOptimizer.SetMaximize = new_instancemethod(_ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_SetMaximize,None,itkRegularStepGradientDescentBaseOptimizer)
itkRegularStepGradientDescentBaseOptimizer.GetMaximize = new_instancemethod(_ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_GetMaximize,None,itkRegularStepGradientDescentBaseOptimizer)
itkRegularStepGradientDescentBaseOptimizer.MaximizeOn = new_instancemethod(_ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_MaximizeOn,None,itkRegularStepGradientDescentBaseOptimizer)
itkRegularStepGradientDescentBaseOptimizer.MaximizeOff = new_instancemethod(_ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_MaximizeOff,None,itkRegularStepGradientDescentBaseOptimizer)
itkRegularStepGradientDescentBaseOptimizer.GetMinimize = new_instancemethod(_ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_GetMinimize,None,itkRegularStepGradientDescentBaseOptimizer)
itkRegularStepGradientDescentBaseOptimizer.SetMinimize = new_instancemethod(_ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_SetMinimize,None,itkRegularStepGradientDescentBaseOptimizer)
itkRegularStepGradientDescentBaseOptimizer.MinimizeOn = new_instancemethod(_ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_MinimizeOn,None,itkRegularStepGradientDescentBaseOptimizer)
itkRegularStepGradientDescentBaseOptimizer.MinimizeOff = new_instancemethod(_ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_MinimizeOff,None,itkRegularStepGradientDescentBaseOptimizer)
itkRegularStepGradientDescentBaseOptimizer.ResumeOptimization = new_instancemethod(_ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_ResumeOptimization,None,itkRegularStepGradientDescentBaseOptimizer)
itkRegularStepGradientDescentBaseOptimizer.StopOptimization = new_instancemethod(_ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_StopOptimization,None,itkRegularStepGradientDescentBaseOptimizer)
itkRegularStepGradientDescentBaseOptimizer.SetMaximumStepLength = new_instancemethod(_ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_SetMaximumStepLength,None,itkRegularStepGradientDescentBaseOptimizer)
itkRegularStepGradientDescentBaseOptimizer.SetMinimumStepLength = new_instancemethod(_ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_SetMinimumStepLength,None,itkRegularStepGradientDescentBaseOptimizer)
itkRegularStepGradientDescentBaseOptimizer.SetRelaxationFactor = new_instancemethod(_ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_SetRelaxationFactor,None,itkRegularStepGradientDescentBaseOptimizer)
itkRegularStepGradientDescentBaseOptimizer.SetNumberOfIterations = new_instancemethod(_ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_SetNumberOfIterations,None,itkRegularStepGradientDescentBaseOptimizer)
itkRegularStepGradientDescentBaseOptimizer.SetGradientMagnitudeTolerance = new_instancemethod(_ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_SetGradientMagnitudeTolerance,None,itkRegularStepGradientDescentBaseOptimizer)
itkRegularStepGradientDescentBaseOptimizer.GetCurrentStepLength = new_instancemethod(_ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_GetCurrentStepLength,None,itkRegularStepGradientDescentBaseOptimizer)
itkRegularStepGradientDescentBaseOptimizer.GetMaximumStepLength = new_instancemethod(_ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_GetMaximumStepLength,None,itkRegularStepGradientDescentBaseOptimizer)
itkRegularStepGradientDescentBaseOptimizer.GetMinimumStepLength = new_instancemethod(_ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_GetMinimumStepLength,None,itkRegularStepGradientDescentBaseOptimizer)
itkRegularStepGradientDescentBaseOptimizer.GetRelaxationFactor = new_instancemethod(_ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_GetRelaxationFactor,None,itkRegularStepGradientDescentBaseOptimizer)
itkRegularStepGradientDescentBaseOptimizer.GetNumberOfIterations = new_instancemethod(_ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_GetNumberOfIterations,None,itkRegularStepGradientDescentBaseOptimizer)
itkRegularStepGradientDescentBaseOptimizer.GetGradientMagnitudeTolerance = new_instancemethod(_ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_GetGradientMagnitudeTolerance,None,itkRegularStepGradientDescentBaseOptimizer)
itkRegularStepGradientDescentBaseOptimizer.GetCurrentIteration = new_instancemethod(_ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_GetCurrentIteration,None,itkRegularStepGradientDescentBaseOptimizer)
itkRegularStepGradientDescentBaseOptimizer.GetStopCondition = new_instancemethod(_ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_GetStopCondition,None,itkRegularStepGradientDescentBaseOptimizer)
itkRegularStepGradientDescentBaseOptimizer.GetValue = new_instancemethod(_ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_GetValue,None,itkRegularStepGradientDescentBaseOptimizer)
itkRegularStepGradientDescentBaseOptimizer.GetGradient = new_instancemethod(_ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_GetGradient,None,itkRegularStepGradientDescentBaseOptimizer)
itkRegularStepGradientDescentBaseOptimizer.GetPointer = new_instancemethod(_ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_GetPointer,None,itkRegularStepGradientDescentBaseOptimizer)
itkRegularStepGradientDescentBaseOptimizer_swigregister = _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_swigregister
itkRegularStepGradientDescentBaseOptimizer_swigregister(itkRegularStepGradientDescentBaseOptimizer)

def itkRegularStepGradientDescentBaseOptimizer___New_orig__():
  """itkRegularStepGradientDescentBaseOptimizer___New_orig__()"""
  return _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer___New_orig__()

def itkRegularStepGradientDescentBaseOptimizer_cast(*args):
  """itkRegularStepGradientDescentBaseOptimizer_cast(itkLightObject obj) -> itkRegularStepGradientDescentBaseOptimizer"""
  return _ITKOptimizersPython.itkRegularStepGradientDescentBaseOptimizer_cast(*args)

class itkRegularStepGradientDescentOptimizer(itkRegularStepGradientDescentBaseOptimizer):
    """Proxy of C++ itkRegularStepGradientDescentOptimizer class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKOptimizersPython.itkRegularStepGradientDescentOptimizer___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _ITKOptimizersPython.delete_itkRegularStepGradientDescentOptimizer
    def cast(*args):
        """cast(itkLightObject obj) -> itkRegularStepGradientDescentOptimizer"""
        return _ITKOptimizersPython.itkRegularStepGradientDescentOptimizer_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkRegularStepGradientDescentOptimizer"""
        return _ITKOptimizersPython.itkRegularStepGradientDescentOptimizer_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkRegularStepGradientDescentOptimizer
        
        Create a new object of the class itkRegularStepGradientDescentOptimizer and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkRegularStepGradientDescentOptimizer.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkRegularStepGradientDescentOptimizer.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRegularStepGradientDescentOptimizer.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRegularStepGradientDescentOptimizer.GetPointer = new_instancemethod(_ITKOptimizersPython.itkRegularStepGradientDescentOptimizer_GetPointer,None,itkRegularStepGradientDescentOptimizer)
itkRegularStepGradientDescentOptimizer_swigregister = _ITKOptimizersPython.itkRegularStepGradientDescentOptimizer_swigregister
itkRegularStepGradientDescentOptimizer_swigregister(itkRegularStepGradientDescentOptimizer)

def itkRegularStepGradientDescentOptimizer___New_orig__():
  """itkRegularStepGradientDescentOptimizer___New_orig__()"""
  return _ITKOptimizersPython.itkRegularStepGradientDescentOptimizer___New_orig__()

def itkRegularStepGradientDescentOptimizer_cast(*args):
  """itkRegularStepGradientDescentOptimizer_cast(itkLightObject obj) -> itkRegularStepGradientDescentOptimizer"""
  return _ITKOptimizersPython.itkRegularStepGradientDescentOptimizer_cast(*args)

class itkSPSAOptimizer(itkSingleValuedNonLinearOptimizer):
    """Proxy of C++ itkSPSAOptimizer class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Unknown = _ITKOptimizersPython.itkSPSAOptimizer_Unknown
    MaximumNumberOfIterations = _ITKOptimizersPython.itkSPSAOptimizer_MaximumNumberOfIterations
    BelowTolerance = _ITKOptimizersPython.itkSPSAOptimizer_BelowTolerance
    MetricError = _ITKOptimizersPython.itkSPSAOptimizer_MetricError
    def __New_orig__():
        """__New_orig__()"""
        return _ITKOptimizersPython.itkSPSAOptimizer___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def AdvanceOneStep(self):
        """AdvanceOneStep(self)"""
        return _ITKOptimizersPython.itkSPSAOptimizer_AdvanceOneStep(self)

    def ResumeOptimization(self):
        """ResumeOptimization(self)"""
        return _ITKOptimizersPython.itkSPSAOptimizer_ResumeOptimization(self)

    def StopOptimization(self):
        """StopOptimization(self)"""
        return _ITKOptimizersPython.itkSPSAOptimizer_StopOptimization(self)

    def GetValue(self, *args):
        """
        GetValue(self) -> double
        GetValue(self, itkArrayD parameters) -> double
        """
        return _ITKOptimizersPython.itkSPSAOptimizer_GetValue(self, *args)

    def GuessParameters(self, *args):
        """GuessParameters(self, unsigned long numberOfGradientEstimates, double initialStepSize)"""
        return _ITKOptimizersPython.itkSPSAOptimizer_GuessParameters(self, *args)

    def GetCurrentIteration(self):
        """GetCurrentIteration(self) -> unsigned long"""
        return _ITKOptimizersPython.itkSPSAOptimizer_GetCurrentIteration(self)

    def GetStopCondition(self):
        """GetStopCondition(self) -> StopConditionType"""
        return _ITKOptimizersPython.itkSPSAOptimizer_GetStopCondition(self)

    def GetLearningRate(self):
        """GetLearningRate(self) -> double"""
        return _ITKOptimizersPython.itkSPSAOptimizer_GetLearningRate(self)

    def GetGradientMagnitude(self):
        """GetGradientMagnitude(self) -> double"""
        return _ITKOptimizersPython.itkSPSAOptimizer_GetGradientMagnitude(self)

    def GetGradient(self):
        """GetGradient(self) -> itkArrayD"""
        return _ITKOptimizersPython.itkSPSAOptimizer_GetGradient(self)

    def SetSa(self, *args):
        """SetSa(self, double _arg)"""
        return _ITKOptimizersPython.itkSPSAOptimizer_SetSa(self, *args)

    def GetSa(self):
        """GetSa(self) -> double"""
        return _ITKOptimizersPython.itkSPSAOptimizer_GetSa(self)

    def Seta(self, *args):
        """Seta(self, double a)"""
        return _ITKOptimizersPython.itkSPSAOptimizer_Seta(self, *args)

    def Geta(self):
        """Geta(self) -> double"""
        return _ITKOptimizersPython.itkSPSAOptimizer_Geta(self)

    def SetSc(self, *args):
        """SetSc(self, double _arg)"""
        return _ITKOptimizersPython.itkSPSAOptimizer_SetSc(self, *args)

    def GetSc(self):
        """GetSc(self) -> double"""
        return _ITKOptimizersPython.itkSPSAOptimizer_GetSc(self)

    def Setc(self, *args):
        """Setc(self, double c)"""
        return _ITKOptimizersPython.itkSPSAOptimizer_Setc(self, *args)

    def Getc(self):
        """Getc(self) -> double"""
        return _ITKOptimizersPython.itkSPSAOptimizer_Getc(self)

    def SetA(self, *args):
        """SetA(self, double _arg)"""
        return _ITKOptimizersPython.itkSPSAOptimizer_SetA(self, *args)

    def GetA(self):
        """GetA(self) -> double"""
        return _ITKOptimizersPython.itkSPSAOptimizer_GetA(self)

    def SetAlpha(self, *args):
        """SetAlpha(self, double _arg)"""
        return _ITKOptimizersPython.itkSPSAOptimizer_SetAlpha(self, *args)

    def GetAlpha(self):
        """GetAlpha(self) -> double"""
        return _ITKOptimizersPython.itkSPSAOptimizer_GetAlpha(self)

    def SetGamma(self, *args):
        """SetGamma(self, double _arg)"""
        return _ITKOptimizersPython.itkSPSAOptimizer_SetGamma(self, *args)

    def GetGamma(self):
        """GetGamma(self) -> double"""
        return _ITKOptimizersPython.itkSPSAOptimizer_GetGamma(self)

    def GetMaximize(self):
        """GetMaximize(self) -> bool"""
        return _ITKOptimizersPython.itkSPSAOptimizer_GetMaximize(self)

    def SetMaximize(self, *args):
        """SetMaximize(self, bool _arg)"""
        return _ITKOptimizersPython.itkSPSAOptimizer_SetMaximize(self, *args)

    def MaximizeOn(self):
        """MaximizeOn(self)"""
        return _ITKOptimizersPython.itkSPSAOptimizer_MaximizeOn(self)

    def MaximizeOff(self):
        """MaximizeOff(self)"""
        return _ITKOptimizersPython.itkSPSAOptimizer_MaximizeOff(self)

    def GetMinimize(self):
        """GetMinimize(self) -> bool"""
        return _ITKOptimizersPython.itkSPSAOptimizer_GetMinimize(self)

    def SetMinimize(self, *args):
        """SetMinimize(self, bool v)"""
        return _ITKOptimizersPython.itkSPSAOptimizer_SetMinimize(self, *args)

    def MinimizeOn(self):
        """MinimizeOn(self)"""
        return _ITKOptimizersPython.itkSPSAOptimizer_MinimizeOn(self)

    def MinimizeOff(self):
        """MinimizeOff(self)"""
        return _ITKOptimizersPython.itkSPSAOptimizer_MinimizeOff(self)

    def SetNumberOfPerturbations(self, *args):
        """SetNumberOfPerturbations(self, unsigned long _arg)"""
        return _ITKOptimizersPython.itkSPSAOptimizer_SetNumberOfPerturbations(self, *args)

    def GetNumberOfPerturbations(self):
        """GetNumberOfPerturbations(self) -> unsigned long"""
        return _ITKOptimizersPython.itkSPSAOptimizer_GetNumberOfPerturbations(self)

    def GetStateOfConvergence(self):
        """GetStateOfConvergence(self) -> double"""
        return _ITKOptimizersPython.itkSPSAOptimizer_GetStateOfConvergence(self)

    def SetStateOfConvergenceDecayRate(self, *args):
        """SetStateOfConvergenceDecayRate(self, double _arg)"""
        return _ITKOptimizersPython.itkSPSAOptimizer_SetStateOfConvergenceDecayRate(self, *args)

    def GetStateOfConvergenceDecayRate(self):
        """GetStateOfConvergenceDecayRate(self) -> double"""
        return _ITKOptimizersPython.itkSPSAOptimizer_GetStateOfConvergenceDecayRate(self)

    def SetMinimumNumberOfIterations(self, *args):
        """SetMinimumNumberOfIterations(self, unsigned long _arg)"""
        return _ITKOptimizersPython.itkSPSAOptimizer_SetMinimumNumberOfIterations(self, *args)

    def GetMinimumNumberOfIterations(self):
        """GetMinimumNumberOfIterations(self) -> unsigned long"""
        return _ITKOptimizersPython.itkSPSAOptimizer_GetMinimumNumberOfIterations(self)

    def SetMaximumNumberOfIterations(self, *args):
        """SetMaximumNumberOfIterations(self, unsigned long _arg)"""
        return _ITKOptimizersPython.itkSPSAOptimizer_SetMaximumNumberOfIterations(self, *args)

    def GetMaximumNumberOfIterations(self):
        """GetMaximumNumberOfIterations(self) -> unsigned long"""
        return _ITKOptimizersPython.itkSPSAOptimizer_GetMaximumNumberOfIterations(self)

    def SetTolerance(self, *args):
        """SetTolerance(self, double _arg)"""
        return _ITKOptimizersPython.itkSPSAOptimizer_SetTolerance(self, *args)

    def GetTolerance(self):
        """GetTolerance(self) -> double"""
        return _ITKOptimizersPython.itkSPSAOptimizer_GetTolerance(self)

    __swig_destroy__ = _ITKOptimizersPython.delete_itkSPSAOptimizer
    def cast(*args):
        """cast(itkLightObject obj) -> itkSPSAOptimizer"""
        return _ITKOptimizersPython.itkSPSAOptimizer_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSPSAOptimizer"""
        return _ITKOptimizersPython.itkSPSAOptimizer_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSPSAOptimizer
        
        Create a new object of the class itkSPSAOptimizer and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSPSAOptimizer.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSPSAOptimizer.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSPSAOptimizer.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSPSAOptimizer.AdvanceOneStep = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_AdvanceOneStep,None,itkSPSAOptimizer)
itkSPSAOptimizer.ResumeOptimization = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_ResumeOptimization,None,itkSPSAOptimizer)
itkSPSAOptimizer.StopOptimization = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_StopOptimization,None,itkSPSAOptimizer)
itkSPSAOptimizer.GetValue = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_GetValue,None,itkSPSAOptimizer)
itkSPSAOptimizer.GuessParameters = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_GuessParameters,None,itkSPSAOptimizer)
itkSPSAOptimizer.GetCurrentIteration = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_GetCurrentIteration,None,itkSPSAOptimizer)
itkSPSAOptimizer.GetStopCondition = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_GetStopCondition,None,itkSPSAOptimizer)
itkSPSAOptimizer.GetLearningRate = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_GetLearningRate,None,itkSPSAOptimizer)
itkSPSAOptimizer.GetGradientMagnitude = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_GetGradientMagnitude,None,itkSPSAOptimizer)
itkSPSAOptimizer.GetGradient = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_GetGradient,None,itkSPSAOptimizer)
itkSPSAOptimizer.SetSa = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_SetSa,None,itkSPSAOptimizer)
itkSPSAOptimizer.GetSa = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_GetSa,None,itkSPSAOptimizer)
itkSPSAOptimizer.Seta = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_Seta,None,itkSPSAOptimizer)
itkSPSAOptimizer.Geta = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_Geta,None,itkSPSAOptimizer)
itkSPSAOptimizer.SetSc = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_SetSc,None,itkSPSAOptimizer)
itkSPSAOptimizer.GetSc = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_GetSc,None,itkSPSAOptimizer)
itkSPSAOptimizer.Setc = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_Setc,None,itkSPSAOptimizer)
itkSPSAOptimizer.Getc = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_Getc,None,itkSPSAOptimizer)
itkSPSAOptimizer.SetA = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_SetA,None,itkSPSAOptimizer)
itkSPSAOptimizer.GetA = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_GetA,None,itkSPSAOptimizer)
itkSPSAOptimizer.SetAlpha = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_SetAlpha,None,itkSPSAOptimizer)
itkSPSAOptimizer.GetAlpha = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_GetAlpha,None,itkSPSAOptimizer)
itkSPSAOptimizer.SetGamma = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_SetGamma,None,itkSPSAOptimizer)
itkSPSAOptimizer.GetGamma = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_GetGamma,None,itkSPSAOptimizer)
itkSPSAOptimizer.GetMaximize = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_GetMaximize,None,itkSPSAOptimizer)
itkSPSAOptimizer.SetMaximize = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_SetMaximize,None,itkSPSAOptimizer)
itkSPSAOptimizer.MaximizeOn = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_MaximizeOn,None,itkSPSAOptimizer)
itkSPSAOptimizer.MaximizeOff = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_MaximizeOff,None,itkSPSAOptimizer)
itkSPSAOptimizer.GetMinimize = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_GetMinimize,None,itkSPSAOptimizer)
itkSPSAOptimizer.SetMinimize = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_SetMinimize,None,itkSPSAOptimizer)
itkSPSAOptimizer.MinimizeOn = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_MinimizeOn,None,itkSPSAOptimizer)
itkSPSAOptimizer.MinimizeOff = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_MinimizeOff,None,itkSPSAOptimizer)
itkSPSAOptimizer.SetNumberOfPerturbations = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_SetNumberOfPerturbations,None,itkSPSAOptimizer)
itkSPSAOptimizer.GetNumberOfPerturbations = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_GetNumberOfPerturbations,None,itkSPSAOptimizer)
itkSPSAOptimizer.GetStateOfConvergence = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_GetStateOfConvergence,None,itkSPSAOptimizer)
itkSPSAOptimizer.SetStateOfConvergenceDecayRate = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_SetStateOfConvergenceDecayRate,None,itkSPSAOptimizer)
itkSPSAOptimizer.GetStateOfConvergenceDecayRate = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_GetStateOfConvergenceDecayRate,None,itkSPSAOptimizer)
itkSPSAOptimizer.SetMinimumNumberOfIterations = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_SetMinimumNumberOfIterations,None,itkSPSAOptimizer)
itkSPSAOptimizer.GetMinimumNumberOfIterations = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_GetMinimumNumberOfIterations,None,itkSPSAOptimizer)
itkSPSAOptimizer.SetMaximumNumberOfIterations = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_SetMaximumNumberOfIterations,None,itkSPSAOptimizer)
itkSPSAOptimizer.GetMaximumNumberOfIterations = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_GetMaximumNumberOfIterations,None,itkSPSAOptimizer)
itkSPSAOptimizer.SetTolerance = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_SetTolerance,None,itkSPSAOptimizer)
itkSPSAOptimizer.GetTolerance = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_GetTolerance,None,itkSPSAOptimizer)
itkSPSAOptimizer.GetPointer = new_instancemethod(_ITKOptimizersPython.itkSPSAOptimizer_GetPointer,None,itkSPSAOptimizer)
itkSPSAOptimizer_swigregister = _ITKOptimizersPython.itkSPSAOptimizer_swigregister
itkSPSAOptimizer_swigregister(itkSPSAOptimizer)

def itkSPSAOptimizer___New_orig__():
  """itkSPSAOptimizer___New_orig__()"""
  return _ITKOptimizersPython.itkSPSAOptimizer___New_orig__()

def itkSPSAOptimizer_cast(*args):
  """itkSPSAOptimizer_cast(itkLightObject obj) -> itkSPSAOptimizer"""
  return _ITKOptimizersPython.itkSPSAOptimizer_cast(*args)

class itkVersorRigid3DTransformOptimizer(itkRegularStepGradientDescentBaseOptimizer):
    """Proxy of C++ itkVersorRigid3DTransformOptimizer class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SpaceDimension = _ITKOptimizersPython.itkVersorRigid3DTransformOptimizer_SpaceDimension
    def __New_orig__():
        """__New_orig__()"""
        return _ITKOptimizersPython.itkVersorRigid3DTransformOptimizer___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def StepAlongGradient(self, *args):
        """StepAlongGradient(self, double factor, itkArrayD transformedGradient)"""
        return _ITKOptimizersPython.itkVersorRigid3DTransformOptimizer_StepAlongGradient(self, *args)

    __swig_destroy__ = _ITKOptimizersPython.delete_itkVersorRigid3DTransformOptimizer
    def cast(*args):
        """cast(itkLightObject obj) -> itkVersorRigid3DTransformOptimizer"""
        return _ITKOptimizersPython.itkVersorRigid3DTransformOptimizer_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVersorRigid3DTransformOptimizer"""
        return _ITKOptimizersPython.itkVersorRigid3DTransformOptimizer_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVersorRigid3DTransformOptimizer
        
        Create a new object of the class itkVersorRigid3DTransformOptimizer and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVersorRigid3DTransformOptimizer.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVersorRigid3DTransformOptimizer.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVersorRigid3DTransformOptimizer.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVersorRigid3DTransformOptimizer.StepAlongGradient = new_instancemethod(_ITKOptimizersPython.itkVersorRigid3DTransformOptimizer_StepAlongGradient,None,itkVersorRigid3DTransformOptimizer)
itkVersorRigid3DTransformOptimizer.GetPointer = new_instancemethod(_ITKOptimizersPython.itkVersorRigid3DTransformOptimizer_GetPointer,None,itkVersorRigid3DTransformOptimizer)
itkVersorRigid3DTransformOptimizer_swigregister = _ITKOptimizersPython.itkVersorRigid3DTransformOptimizer_swigregister
itkVersorRigid3DTransformOptimizer_swigregister(itkVersorRigid3DTransformOptimizer)

def itkVersorRigid3DTransformOptimizer___New_orig__():
  """itkVersorRigid3DTransformOptimizer___New_orig__()"""
  return _ITKOptimizersPython.itkVersorRigid3DTransformOptimizer___New_orig__()

def itkVersorRigid3DTransformOptimizer_cast(*args):
  """itkVersorRigid3DTransformOptimizer_cast(itkLightObject obj) -> itkVersorRigid3DTransformOptimizer"""
  return _ITKOptimizersPython.itkVersorRigid3DTransformOptimizer_cast(*args)

class itkVersorTransformOptimizer(itkRegularStepGradientDescentBaseOptimizer):
    """Proxy of C++ itkVersorTransformOptimizer class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKOptimizersPython.itkVersorTransformOptimizer___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def StepAlongGradient(self, *args):
        """StepAlongGradient(self, double factor, itkArrayD transformedGradient)"""
        return _ITKOptimizersPython.itkVersorTransformOptimizer_StepAlongGradient(self, *args)

    __swig_destroy__ = _ITKOptimizersPython.delete_itkVersorTransformOptimizer
    def cast(*args):
        """cast(itkLightObject obj) -> itkVersorTransformOptimizer"""
        return _ITKOptimizersPython.itkVersorTransformOptimizer_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVersorTransformOptimizer"""
        return _ITKOptimizersPython.itkVersorTransformOptimizer_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVersorTransformOptimizer
        
        Create a new object of the class itkVersorTransformOptimizer and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVersorTransformOptimizer.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVersorTransformOptimizer.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVersorTransformOptimizer.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVersorTransformOptimizer.StepAlongGradient = new_instancemethod(_ITKOptimizersPython.itkVersorTransformOptimizer_StepAlongGradient,None,itkVersorTransformOptimizer)
itkVersorTransformOptimizer.GetPointer = new_instancemethod(_ITKOptimizersPython.itkVersorTransformOptimizer_GetPointer,None,itkVersorTransformOptimizer)
itkVersorTransformOptimizer_swigregister = _ITKOptimizersPython.itkVersorTransformOptimizer_swigregister
itkVersorTransformOptimizer_swigregister(itkVersorTransformOptimizer)

def itkVersorTransformOptimizer___New_orig__():
  """itkVersorTransformOptimizer___New_orig__()"""
  return _ITKOptimizersPython.itkVersorTransformOptimizer___New_orig__()

def itkVersorTransformOptimizer_cast(*args):
  """itkVersorTransformOptimizer_cast(itkLightObject obj) -> itkVersorTransformOptimizer"""
  return _ITKOptimizersPython.itkVersorTransformOptimizer_cast(*args)

class itkCumulativeGaussianOptimizer(itkMultipleValuedNonLinearOptimizer):
    """Proxy of C++ itkCumulativeGaussianOptimizer class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKOptimizersPython.itkCumulativeGaussianOptimizer___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetDifferenceTolerance(self, *args):
        """SetDifferenceTolerance(self, double _arg)"""
        return _ITKOptimizersPython.itkCumulativeGaussianOptimizer_SetDifferenceTolerance(self, *args)

    def SetVerbose(self, *args):
        """SetVerbose(self, bool _arg)"""
        return _ITKOptimizersPython.itkCumulativeGaussianOptimizer_SetVerbose(self, *args)

    def GetComputedMean(self):
        """GetComputedMean(self) -> double"""
        return _ITKOptimizersPython.itkCumulativeGaussianOptimizer_GetComputedMean(self)

    def GetComputedStandardDeviation(self):
        """GetComputedStandardDeviation(self) -> double"""
        return _ITKOptimizersPython.itkCumulativeGaussianOptimizer_GetComputedStandardDeviation(self)

    def GetUpperAsymptote(self):
        """GetUpperAsymptote(self) -> double"""
        return _ITKOptimizersPython.itkCumulativeGaussianOptimizer_GetUpperAsymptote(self)

    def GetLowerAsymptote(self):
        """GetLowerAsymptote(self) -> double"""
        return _ITKOptimizersPython.itkCumulativeGaussianOptimizer_GetLowerAsymptote(self)

    def GetFinalSampledArray(self):
        """GetFinalSampledArray(self) -> itkArrayD"""
        return _ITKOptimizersPython.itkCumulativeGaussianOptimizer_GetFinalSampledArray(self)

    def GetFitError(self):
        """GetFitError(self) -> double"""
        return _ITKOptimizersPython.itkCumulativeGaussianOptimizer_GetFitError(self)

    def SetDataArray(self, *args):
        """SetDataArray(self, itkArrayD dataArray)"""
        return _ITKOptimizersPython.itkCumulativeGaussianOptimizer_SetDataArray(self, *args)

    def PrintArray(self, *args):
        """PrintArray(self, itkArrayD array)"""
        return _ITKOptimizersPython.itkCumulativeGaussianOptimizer_PrintArray(self, *args)

    __swig_destroy__ = _ITKOptimizersPython.delete_itkCumulativeGaussianOptimizer
    def cast(*args):
        """cast(itkLightObject obj) -> itkCumulativeGaussianOptimizer"""
        return _ITKOptimizersPython.itkCumulativeGaussianOptimizer_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkCumulativeGaussianOptimizer"""
        return _ITKOptimizersPython.itkCumulativeGaussianOptimizer_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkCumulativeGaussianOptimizer
        
        Create a new object of the class itkCumulativeGaussianOptimizer and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkCumulativeGaussianOptimizer.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkCumulativeGaussianOptimizer.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkCumulativeGaussianOptimizer.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkCumulativeGaussianOptimizer.SetDifferenceTolerance = new_instancemethod(_ITKOptimizersPython.itkCumulativeGaussianOptimizer_SetDifferenceTolerance,None,itkCumulativeGaussianOptimizer)
itkCumulativeGaussianOptimizer.SetVerbose = new_instancemethod(_ITKOptimizersPython.itkCumulativeGaussianOptimizer_SetVerbose,None,itkCumulativeGaussianOptimizer)
itkCumulativeGaussianOptimizer.GetComputedMean = new_instancemethod(_ITKOptimizersPython.itkCumulativeGaussianOptimizer_GetComputedMean,None,itkCumulativeGaussianOptimizer)
itkCumulativeGaussianOptimizer.GetComputedStandardDeviation = new_instancemethod(_ITKOptimizersPython.itkCumulativeGaussianOptimizer_GetComputedStandardDeviation,None,itkCumulativeGaussianOptimizer)
itkCumulativeGaussianOptimizer.GetUpperAsymptote = new_instancemethod(_ITKOptimizersPython.itkCumulativeGaussianOptimizer_GetUpperAsymptote,None,itkCumulativeGaussianOptimizer)
itkCumulativeGaussianOptimizer.GetLowerAsymptote = new_instancemethod(_ITKOptimizersPython.itkCumulativeGaussianOptimizer_GetLowerAsymptote,None,itkCumulativeGaussianOptimizer)
itkCumulativeGaussianOptimizer.GetFinalSampledArray = new_instancemethod(_ITKOptimizersPython.itkCumulativeGaussianOptimizer_GetFinalSampledArray,None,itkCumulativeGaussianOptimizer)
itkCumulativeGaussianOptimizer.GetFitError = new_instancemethod(_ITKOptimizersPython.itkCumulativeGaussianOptimizer_GetFitError,None,itkCumulativeGaussianOptimizer)
itkCumulativeGaussianOptimizer.SetDataArray = new_instancemethod(_ITKOptimizersPython.itkCumulativeGaussianOptimizer_SetDataArray,None,itkCumulativeGaussianOptimizer)
itkCumulativeGaussianOptimizer.PrintArray = new_instancemethod(_ITKOptimizersPython.itkCumulativeGaussianOptimizer_PrintArray,None,itkCumulativeGaussianOptimizer)
itkCumulativeGaussianOptimizer.GetPointer = new_instancemethod(_ITKOptimizersPython.itkCumulativeGaussianOptimizer_GetPointer,None,itkCumulativeGaussianOptimizer)
itkCumulativeGaussianOptimizer_swigregister = _ITKOptimizersPython.itkCumulativeGaussianOptimizer_swigregister
itkCumulativeGaussianOptimizer_swigregister(itkCumulativeGaussianOptimizer)

def itkCumulativeGaussianOptimizer___New_orig__():
  """itkCumulativeGaussianOptimizer___New_orig__()"""
  return _ITKOptimizersPython.itkCumulativeGaussianOptimizer___New_orig__()

def itkCumulativeGaussianOptimizer_cast(*args):
  """itkCumulativeGaussianOptimizer_cast(itkLightObject obj) -> itkCumulativeGaussianOptimizer"""
  return _ITKOptimizersPython.itkCumulativeGaussianOptimizer_cast(*args)

class itkFRPROptimizer(itkPowellOptimizer):
    """Proxy of C++ itkFRPROptimizer class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKOptimizersPython.itkFRPROptimizer___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetUseUnitLengthGradient(self, *args):
        """SetUseUnitLengthGradient(self, bool _arg)"""
        return _ITKOptimizersPython.itkFRPROptimizer_SetUseUnitLengthGradient(self, *args)

    def GetUseUnitLengthGradient(self):
        """GetUseUnitLengthGradient(self) -> bool"""
        return _ITKOptimizersPython.itkFRPROptimizer_GetUseUnitLengthGradient(self)

    def SetToFletchReeves(self):
        """SetToFletchReeves(self)"""
        return _ITKOptimizersPython.itkFRPROptimizer_SetToFletchReeves(self)

    def SetToPolakRibiere(self):
        """SetToPolakRibiere(self)"""
        return _ITKOptimizersPython.itkFRPROptimizer_SetToPolakRibiere(self)

    __swig_destroy__ = _ITKOptimizersPython.delete_itkFRPROptimizer
    def cast(*args):
        """cast(itkLightObject obj) -> itkFRPROptimizer"""
        return _ITKOptimizersPython.itkFRPROptimizer_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkFRPROptimizer"""
        return _ITKOptimizersPython.itkFRPROptimizer_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkFRPROptimizer
        
        Create a new object of the class itkFRPROptimizer and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkFRPROptimizer.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkFRPROptimizer.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFRPROptimizer.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFRPROptimizer.SetUseUnitLengthGradient = new_instancemethod(_ITKOptimizersPython.itkFRPROptimizer_SetUseUnitLengthGradient,None,itkFRPROptimizer)
itkFRPROptimizer.GetUseUnitLengthGradient = new_instancemethod(_ITKOptimizersPython.itkFRPROptimizer_GetUseUnitLengthGradient,None,itkFRPROptimizer)
itkFRPROptimizer.SetToFletchReeves = new_instancemethod(_ITKOptimizersPython.itkFRPROptimizer_SetToFletchReeves,None,itkFRPROptimizer)
itkFRPROptimizer.SetToPolakRibiere = new_instancemethod(_ITKOptimizersPython.itkFRPROptimizer_SetToPolakRibiere,None,itkFRPROptimizer)
itkFRPROptimizer.GetPointer = new_instancemethod(_ITKOptimizersPython.itkFRPROptimizer_GetPointer,None,itkFRPROptimizer)
itkFRPROptimizer_swigregister = _ITKOptimizersPython.itkFRPROptimizer_swigregister
itkFRPROptimizer_swigregister(itkFRPROptimizer)

def itkFRPROptimizer___New_orig__():
  """itkFRPROptimizer___New_orig__()"""
  return _ITKOptimizersPython.itkFRPROptimizer___New_orig__()

def itkFRPROptimizer_cast(*args):
  """itkFRPROptimizer_cast(itkLightObject obj) -> itkFRPROptimizer"""
  return _ITKOptimizersPython.itkFRPROptimizer_cast(*args)

class itkLevenbergMarquardtOptimizer(itkMultipleValuedNonLinearVnlOptimizer):
    """Proxy of C++ itkLevenbergMarquardtOptimizer class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKOptimizersPython.itkLevenbergMarquardtOptimizer___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetOptimizer(self):
        """GetOptimizer(self) -> vnl_levenberg_marquardt"""
        return _ITKOptimizersPython.itkLevenbergMarquardtOptimizer_GetOptimizer(self)

    def SetNumberOfIterations(self, *args):
        """SetNumberOfIterations(self, unsigned int iterations)"""
        return _ITKOptimizersPython.itkLevenbergMarquardtOptimizer_SetNumberOfIterations(self, *args)

    def SetValueTolerance(self, *args):
        """SetValueTolerance(self, double tol)"""
        return _ITKOptimizersPython.itkLevenbergMarquardtOptimizer_SetValueTolerance(self, *args)

    def SetGradientTolerance(self, *args):
        """SetGradientTolerance(self, double tol)"""
        return _ITKOptimizersPython.itkLevenbergMarquardtOptimizer_SetGradientTolerance(self, *args)

    def SetEpsilonFunction(self, *args):
        """SetEpsilonFunction(self, double epsilon)"""
        return _ITKOptimizersPython.itkLevenbergMarquardtOptimizer_SetEpsilonFunction(self, *args)

    def GetValue(self):
        """GetValue(self) -> itkArrayD"""
        return _ITKOptimizersPython.itkLevenbergMarquardtOptimizer_GetValue(self)

    __swig_destroy__ = _ITKOptimizersPython.delete_itkLevenbergMarquardtOptimizer
    def cast(*args):
        """cast(itkLightObject obj) -> itkLevenbergMarquardtOptimizer"""
        return _ITKOptimizersPython.itkLevenbergMarquardtOptimizer_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkLevenbergMarquardtOptimizer"""
        return _ITKOptimizersPython.itkLevenbergMarquardtOptimizer_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkLevenbergMarquardtOptimizer
        
        Create a new object of the class itkLevenbergMarquardtOptimizer and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkLevenbergMarquardtOptimizer.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkLevenbergMarquardtOptimizer.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLevenbergMarquardtOptimizer.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLevenbergMarquardtOptimizer.GetOptimizer = new_instancemethod(_ITKOptimizersPython.itkLevenbergMarquardtOptimizer_GetOptimizer,None,itkLevenbergMarquardtOptimizer)
itkLevenbergMarquardtOptimizer.SetNumberOfIterations = new_instancemethod(_ITKOptimizersPython.itkLevenbergMarquardtOptimizer_SetNumberOfIterations,None,itkLevenbergMarquardtOptimizer)
itkLevenbergMarquardtOptimizer.SetValueTolerance = new_instancemethod(_ITKOptimizersPython.itkLevenbergMarquardtOptimizer_SetValueTolerance,None,itkLevenbergMarquardtOptimizer)
itkLevenbergMarquardtOptimizer.SetGradientTolerance = new_instancemethod(_ITKOptimizersPython.itkLevenbergMarquardtOptimizer_SetGradientTolerance,None,itkLevenbergMarquardtOptimizer)
itkLevenbergMarquardtOptimizer.SetEpsilonFunction = new_instancemethod(_ITKOptimizersPython.itkLevenbergMarquardtOptimizer_SetEpsilonFunction,None,itkLevenbergMarquardtOptimizer)
itkLevenbergMarquardtOptimizer.GetValue = new_instancemethod(_ITKOptimizersPython.itkLevenbergMarquardtOptimizer_GetValue,None,itkLevenbergMarquardtOptimizer)
itkLevenbergMarquardtOptimizer.GetPointer = new_instancemethod(_ITKOptimizersPython.itkLevenbergMarquardtOptimizer_GetPointer,None,itkLevenbergMarquardtOptimizer)
itkLevenbergMarquardtOptimizer_swigregister = _ITKOptimizersPython.itkLevenbergMarquardtOptimizer_swigregister
itkLevenbergMarquardtOptimizer_swigregister(itkLevenbergMarquardtOptimizer)

def itkLevenbergMarquardtOptimizer___New_orig__():
  """itkLevenbergMarquardtOptimizer___New_orig__()"""
  return _ITKOptimizersPython.itkLevenbergMarquardtOptimizer___New_orig__()

def itkLevenbergMarquardtOptimizer_cast(*args):
  """itkLevenbergMarquardtOptimizer_cast(itkLightObject obj) -> itkLevenbergMarquardtOptimizer"""
  return _ITKOptimizersPython.itkLevenbergMarquardtOptimizer_cast(*args)



