// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkFunctionBaseChicken
#endif
#ifdef SWIGCSHARP
%module itkFunctionBaseCsharp
#endif
#ifdef SWIGGUILE
%module itkFunctionBaseGuile
#endif
#ifdef SWIGJAVA
%module itkFunctionBaseJava
#endif
#ifdef SWIGLUA
%module itkFunctionBaseLua
#endif
#ifdef SWIGMODULA3
%module itkFunctionBaseModula3
#endif
#ifdef SWIGMZSCHEME
%module itkFunctionBaseMzscheme
#endif
#ifdef SWIGOCAML
%module itkFunctionBaseOcaml
#endif
#ifdef SWIGPERL
%module itkFunctionBasePerl
#endif
#ifdef SWIGPERL5
%module itkFunctionBasePerl5
#endif
#ifdef SWIGPHP
%module itkFunctionBasePhp
#endif
#ifdef SWIGPHP4
%module itkFunctionBasePhp4
#endif
#ifdef SWIGPHP5
%module itkFunctionBasePhp5
#endif
#ifdef SWIGPIKE
%module itkFunctionBasePike
#endif
#ifdef SWIGPYTHON
%module itkFunctionBasePython
#endif
#ifdef SWIGR
%module itkFunctionBaseR
#endif
#ifdef SWIGRUBY
%module itkFunctionBaseRuby
#endif
#ifdef SWIGSEXP
%module itkFunctionBaseSexp
#endif
#ifdef SWIGTCL
%module itkFunctionBaseTcl
#endif
#ifdef SWIGXML
%module itkFunctionBaseXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
%}


%{
%}




%import wrap_itkPoint.i
%import wrap_itkContinuousIndex.i
%import wrap_itkImage.i
%import wrap_itkVector.i
%import wrap_itkArray.i
%import wrap_ITKCommonBase.i


%include itk.i
%include wrap_itkFunctionBase_ext.i


 class itkFunctionBaseCID2AD : public itkObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual itkArrayD Evaluate(itkContinuousIndexD2 const & input) const = 0;
   private:
     itkFunctionBaseCID2AD(itkFunctionBaseCID2AD const & arg0);
     void operator=(itkFunctionBaseCID2AD const & arg0);
   protected:
     itkFunctionBaseCID2AD();
     ~itkFunctionBaseCID2AD();
 };


 class itkFunctionBaseCID2AD_Pointer {
   public:
     itkFunctionBaseCID2AD_Pointer();
     itkFunctionBaseCID2AD_Pointer(itkFunctionBaseCID2AD_Pointer const & p);
     itkFunctionBaseCID2AD_Pointer(itkFunctionBaseCID2AD * p);
     ~itkFunctionBaseCID2AD_Pointer();
     itkFunctionBaseCID2AD * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkFunctionBaseCID2AD * GetPointer() const;
     bool operator<(itkFunctionBaseCID2AD_Pointer const & r) const;
     bool operator>(itkFunctionBaseCID2AD_Pointer const & r) const;
     bool operator<=(itkFunctionBaseCID2AD_Pointer const & r) const;
     bool operator>=(itkFunctionBaseCID2AD_Pointer const & r) const;
     itkFunctionBaseCID2AD_Pointer & operator=(itkFunctionBaseCID2AD_Pointer const & r);
     itkFunctionBaseCID2AD_Pointer & operator=(itkFunctionBaseCID2AD * r);
     itkFunctionBaseCID2AD * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkFunctionBaseCID3AD : public itkObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual itkArrayD Evaluate(itkContinuousIndexD3 const & input) const = 0;
   private:
     itkFunctionBaseCID3AD(itkFunctionBaseCID3AD const & arg0);
     void operator=(itkFunctionBaseCID3AD const & arg0);
   protected:
     itkFunctionBaseCID3AD();
     ~itkFunctionBaseCID3AD();
 };


 class itkFunctionBaseCID3AD_Pointer {
   public:
     itkFunctionBaseCID3AD_Pointer();
     itkFunctionBaseCID3AD_Pointer(itkFunctionBaseCID3AD_Pointer const & p);
     itkFunctionBaseCID3AD_Pointer(itkFunctionBaseCID3AD * p);
     ~itkFunctionBaseCID3AD_Pointer();
     itkFunctionBaseCID3AD * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkFunctionBaseCID3AD * GetPointer() const;
     bool operator<(itkFunctionBaseCID3AD_Pointer const & r) const;
     bool operator>(itkFunctionBaseCID3AD_Pointer const & r) const;
     bool operator<=(itkFunctionBaseCID3AD_Pointer const & r) const;
     bool operator>=(itkFunctionBaseCID3AD_Pointer const & r) const;
     itkFunctionBaseCID3AD_Pointer & operator=(itkFunctionBaseCID3AD_Pointer const & r);
     itkFunctionBaseCID3AD_Pointer & operator=(itkFunctionBaseCID3AD * r);
     itkFunctionBaseCID3AD * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkFunctionBaseCIF2AD : public itkObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual itkArrayD Evaluate(itkContinuousIndexF2 const & input) const = 0;
   private:
     itkFunctionBaseCIF2AD(itkFunctionBaseCIF2AD const & arg0);
     void operator=(itkFunctionBaseCIF2AD const & arg0);
   protected:
     itkFunctionBaseCIF2AD();
     ~itkFunctionBaseCIF2AD();
 };


 class itkFunctionBaseCIF2AD_Pointer {
   public:
     itkFunctionBaseCIF2AD_Pointer();
     itkFunctionBaseCIF2AD_Pointer(itkFunctionBaseCIF2AD_Pointer const & p);
     itkFunctionBaseCIF2AD_Pointer(itkFunctionBaseCIF2AD * p);
     ~itkFunctionBaseCIF2AD_Pointer();
     itkFunctionBaseCIF2AD * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkFunctionBaseCIF2AD * GetPointer() const;
     bool operator<(itkFunctionBaseCIF2AD_Pointer const & r) const;
     bool operator>(itkFunctionBaseCIF2AD_Pointer const & r) const;
     bool operator<=(itkFunctionBaseCIF2AD_Pointer const & r) const;
     bool operator>=(itkFunctionBaseCIF2AD_Pointer const & r) const;
     itkFunctionBaseCIF2AD_Pointer & operator=(itkFunctionBaseCIF2AD_Pointer const & r);
     itkFunctionBaseCIF2AD_Pointer & operator=(itkFunctionBaseCIF2AD * r);
     itkFunctionBaseCIF2AD * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkFunctionBaseCIF3AD : public itkObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual itkArrayD Evaluate(itkContinuousIndexF3 const & input) const = 0;
   private:
     itkFunctionBaseCIF3AD(itkFunctionBaseCIF3AD const & arg0);
     void operator=(itkFunctionBaseCIF3AD const & arg0);
   protected:
     itkFunctionBaseCIF3AD();
     ~itkFunctionBaseCIF3AD();
 };


 class itkFunctionBaseCIF3AD_Pointer {
   public:
     itkFunctionBaseCIF3AD_Pointer();
     itkFunctionBaseCIF3AD_Pointer(itkFunctionBaseCIF3AD_Pointer const & p);
     itkFunctionBaseCIF3AD_Pointer(itkFunctionBaseCIF3AD * p);
     ~itkFunctionBaseCIF3AD_Pointer();
     itkFunctionBaseCIF3AD * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkFunctionBaseCIF3AD * GetPointer() const;
     bool operator<(itkFunctionBaseCIF3AD_Pointer const & r) const;
     bool operator>(itkFunctionBaseCIF3AD_Pointer const & r) const;
     bool operator<=(itkFunctionBaseCIF3AD_Pointer const & r) const;
     bool operator>=(itkFunctionBaseCIF3AD_Pointer const & r) const;
     itkFunctionBaseCIF3AD_Pointer & operator=(itkFunctionBaseCIF3AD_Pointer const & r);
     itkFunctionBaseCIF3AD_Pointer & operator=(itkFunctionBaseCIF3AD * r);
     itkFunctionBaseCIF3AD * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkFunctionBaseDD : public itkObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual double Evaluate(double const & input) const = 0;
   private:
     itkFunctionBaseDD(itkFunctionBaseDD const & arg0);
     void operator=(itkFunctionBaseDD const & arg0);
   protected:
     itkFunctionBaseDD();
     ~itkFunctionBaseDD();
 };


 class itkFunctionBaseDD_Pointer {
   public:
     itkFunctionBaseDD_Pointer();
     itkFunctionBaseDD_Pointer(itkFunctionBaseDD_Pointer const & p);
     itkFunctionBaseDD_Pointer(itkFunctionBaseDD * p);
     ~itkFunctionBaseDD_Pointer();
     itkFunctionBaseDD * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkFunctionBaseDD * GetPointer() const;
     bool operator<(itkFunctionBaseDD_Pointer const & r) const;
     bool operator>(itkFunctionBaseDD_Pointer const & r) const;
     bool operator<=(itkFunctionBaseDD_Pointer const & r) const;
     bool operator>=(itkFunctionBaseDD_Pointer const & r) const;
     itkFunctionBaseDD_Pointer & operator=(itkFunctionBaseDD_Pointer const & r);
     itkFunctionBaseDD_Pointer & operator=(itkFunctionBaseDD * r);
     itkFunctionBaseDD * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkFunctionBaseIF2D : public itkObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual double Evaluate(itkImageF2 const & input) const = 0;
   private:
     itkFunctionBaseIF2D(itkFunctionBaseIF2D const & arg0);
     void operator=(itkFunctionBaseIF2D const & arg0);
   protected:
     itkFunctionBaseIF2D();
     ~itkFunctionBaseIF2D();
 };


 class itkFunctionBaseIF2D_Pointer {
   public:
     itkFunctionBaseIF2D_Pointer();
     itkFunctionBaseIF2D_Pointer(itkFunctionBaseIF2D_Pointer const & p);
     itkFunctionBaseIF2D_Pointer(itkFunctionBaseIF2D * p);
     ~itkFunctionBaseIF2D_Pointer();
     itkFunctionBaseIF2D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkFunctionBaseIF2D * GetPointer() const;
     bool operator<(itkFunctionBaseIF2D_Pointer const & r) const;
     bool operator>(itkFunctionBaseIF2D_Pointer const & r) const;
     bool operator<=(itkFunctionBaseIF2D_Pointer const & r) const;
     bool operator>=(itkFunctionBaseIF2D_Pointer const & r) const;
     itkFunctionBaseIF2D_Pointer & operator=(itkFunctionBaseIF2D_Pointer const & r);
     itkFunctionBaseIF2D_Pointer & operator=(itkFunctionBaseIF2D * r);
     itkFunctionBaseIF2D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkFunctionBaseIF3D : public itkObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual double Evaluate(itkImageF3 const & input) const = 0;
   private:
     itkFunctionBaseIF3D(itkFunctionBaseIF3D const & arg0);
     void operator=(itkFunctionBaseIF3D const & arg0);
   protected:
     itkFunctionBaseIF3D();
     ~itkFunctionBaseIF3D();
 };


 class itkFunctionBaseIF3D_Pointer {
   public:
     itkFunctionBaseIF3D_Pointer();
     itkFunctionBaseIF3D_Pointer(itkFunctionBaseIF3D_Pointer const & p);
     itkFunctionBaseIF3D_Pointer(itkFunctionBaseIF3D * p);
     ~itkFunctionBaseIF3D_Pointer();
     itkFunctionBaseIF3D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkFunctionBaseIF3D * GetPointer() const;
     bool operator<(itkFunctionBaseIF3D_Pointer const & r) const;
     bool operator>(itkFunctionBaseIF3D_Pointer const & r) const;
     bool operator<=(itkFunctionBaseIF3D_Pointer const & r) const;
     bool operator>=(itkFunctionBaseIF3D_Pointer const & r) const;
     itkFunctionBaseIF3D_Pointer & operator=(itkFunctionBaseIF3D_Pointer const & r);
     itkFunctionBaseIF3D_Pointer & operator=(itkFunctionBaseIF3D * r);
     itkFunctionBaseIF3D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkFunctionBaseIUS2D : public itkObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual double Evaluate(itkImageUS2 const & input) const = 0;
   private:
     itkFunctionBaseIUS2D(itkFunctionBaseIUS2D const & arg0);
     void operator=(itkFunctionBaseIUS2D const & arg0);
   protected:
     itkFunctionBaseIUS2D();
     ~itkFunctionBaseIUS2D();
 };


 class itkFunctionBaseIUS2D_Pointer {
   public:
     itkFunctionBaseIUS2D_Pointer();
     itkFunctionBaseIUS2D_Pointer(itkFunctionBaseIUS2D_Pointer const & p);
     itkFunctionBaseIUS2D_Pointer(itkFunctionBaseIUS2D * p);
     ~itkFunctionBaseIUS2D_Pointer();
     itkFunctionBaseIUS2D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkFunctionBaseIUS2D * GetPointer() const;
     bool operator<(itkFunctionBaseIUS2D_Pointer const & r) const;
     bool operator>(itkFunctionBaseIUS2D_Pointer const & r) const;
     bool operator<=(itkFunctionBaseIUS2D_Pointer const & r) const;
     bool operator>=(itkFunctionBaseIUS2D_Pointer const & r) const;
     itkFunctionBaseIUS2D_Pointer & operator=(itkFunctionBaseIUS2D_Pointer const & r);
     itkFunctionBaseIUS2D_Pointer & operator=(itkFunctionBaseIUS2D * r);
     itkFunctionBaseIUS2D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkFunctionBaseIUS3D : public itkObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual double Evaluate(itkImageUS3 const & input) const = 0;
   private:
     itkFunctionBaseIUS3D(itkFunctionBaseIUS3D const & arg0);
     void operator=(itkFunctionBaseIUS3D const & arg0);
   protected:
     itkFunctionBaseIUS3D();
     ~itkFunctionBaseIUS3D();
 };


 class itkFunctionBaseIUS3D_Pointer {
   public:
     itkFunctionBaseIUS3D_Pointer();
     itkFunctionBaseIUS3D_Pointer(itkFunctionBaseIUS3D_Pointer const & p);
     itkFunctionBaseIUS3D_Pointer(itkFunctionBaseIUS3D * p);
     ~itkFunctionBaseIUS3D_Pointer();
     itkFunctionBaseIUS3D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkFunctionBaseIUS3D * GetPointer() const;
     bool operator<(itkFunctionBaseIUS3D_Pointer const & r) const;
     bool operator>(itkFunctionBaseIUS3D_Pointer const & r) const;
     bool operator<=(itkFunctionBaseIUS3D_Pointer const & r) const;
     bool operator>=(itkFunctionBaseIUS3D_Pointer const & r) const;
     itkFunctionBaseIUS3D_Pointer & operator=(itkFunctionBaseIUS3D_Pointer const & r);
     itkFunctionBaseIUS3D_Pointer & operator=(itkFunctionBaseIUS3D * r);
     itkFunctionBaseIUS3D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkFunctionBasePD2D : public itkObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual double Evaluate(itkPointD2 const & input) const = 0;
   private:
     itkFunctionBasePD2D(itkFunctionBasePD2D const & arg0);
     void operator=(itkFunctionBasePD2D const & arg0);
   protected:
     itkFunctionBasePD2D();
     ~itkFunctionBasePD2D();
 };


 class itkFunctionBasePD2D_Pointer {
   public:
     itkFunctionBasePD2D_Pointer();
     itkFunctionBasePD2D_Pointer(itkFunctionBasePD2D_Pointer const & p);
     itkFunctionBasePD2D_Pointer(itkFunctionBasePD2D * p);
     ~itkFunctionBasePD2D_Pointer();
     itkFunctionBasePD2D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkFunctionBasePD2D * GetPointer() const;
     bool operator<(itkFunctionBasePD2D_Pointer const & r) const;
     bool operator>(itkFunctionBasePD2D_Pointer const & r) const;
     bool operator<=(itkFunctionBasePD2D_Pointer const & r) const;
     bool operator>=(itkFunctionBasePD2D_Pointer const & r) const;
     itkFunctionBasePD2D_Pointer & operator=(itkFunctionBasePD2D_Pointer const & r);
     itkFunctionBasePD2D_Pointer & operator=(itkFunctionBasePD2D * r);
     itkFunctionBasePD2D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkFunctionBasePD2VD2 : public itkObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual itkVectorD2 Evaluate(itkPointD2 const & input) const = 0;
   private:
     itkFunctionBasePD2VD2(itkFunctionBasePD2VD2 const & arg0);
     void operator=(itkFunctionBasePD2VD2 const & arg0);
   protected:
     itkFunctionBasePD2VD2();
     ~itkFunctionBasePD2VD2();
 };


 class itkFunctionBasePD2VD2_Pointer {
   public:
     itkFunctionBasePD2VD2_Pointer();
     itkFunctionBasePD2VD2_Pointer(itkFunctionBasePD2VD2_Pointer const & p);
     itkFunctionBasePD2VD2_Pointer(itkFunctionBasePD2VD2 * p);
     ~itkFunctionBasePD2VD2_Pointer();
     itkFunctionBasePD2VD2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkFunctionBasePD2VD2 * GetPointer() const;
     bool operator<(itkFunctionBasePD2VD2_Pointer const & r) const;
     bool operator>(itkFunctionBasePD2VD2_Pointer const & r) const;
     bool operator<=(itkFunctionBasePD2VD2_Pointer const & r) const;
     bool operator>=(itkFunctionBasePD2VD2_Pointer const & r) const;
     itkFunctionBasePD2VD2_Pointer & operator=(itkFunctionBasePD2VD2_Pointer const & r);
     itkFunctionBasePD2VD2_Pointer & operator=(itkFunctionBasePD2VD2 * r);
     itkFunctionBasePD2VD2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkFunctionBasePD3D : public itkObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual double Evaluate(itkPointD3 const & input) const = 0;
   private:
     itkFunctionBasePD3D(itkFunctionBasePD3D const & arg0);
     void operator=(itkFunctionBasePD3D const & arg0);
   protected:
     itkFunctionBasePD3D();
     ~itkFunctionBasePD3D();
 };


 class itkFunctionBasePD3D_Pointer {
   public:
     itkFunctionBasePD3D_Pointer();
     itkFunctionBasePD3D_Pointer(itkFunctionBasePD3D_Pointer const & p);
     itkFunctionBasePD3D_Pointer(itkFunctionBasePD3D * p);
     ~itkFunctionBasePD3D_Pointer();
     itkFunctionBasePD3D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkFunctionBasePD3D * GetPointer() const;
     bool operator<(itkFunctionBasePD3D_Pointer const & r) const;
     bool operator>(itkFunctionBasePD3D_Pointer const & r) const;
     bool operator<=(itkFunctionBasePD3D_Pointer const & r) const;
     bool operator>=(itkFunctionBasePD3D_Pointer const & r) const;
     itkFunctionBasePD3D_Pointer & operator=(itkFunctionBasePD3D_Pointer const & r);
     itkFunctionBasePD3D_Pointer & operator=(itkFunctionBasePD3D * r);
     itkFunctionBasePD3D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkFunctionBasePD3VD3 : public itkObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual itkVectorD3 Evaluate(itkPointD3 const & input) const = 0;
   private:
     itkFunctionBasePD3VD3(itkFunctionBasePD3VD3 const & arg0);
     void operator=(itkFunctionBasePD3VD3 const & arg0);
   protected:
     itkFunctionBasePD3VD3();
     ~itkFunctionBasePD3VD3();
 };


 class itkFunctionBasePD3VD3_Pointer {
   public:
     itkFunctionBasePD3VD3_Pointer();
     itkFunctionBasePD3VD3_Pointer(itkFunctionBasePD3VD3_Pointer const & p);
     itkFunctionBasePD3VD3_Pointer(itkFunctionBasePD3VD3 * p);
     ~itkFunctionBasePD3VD3_Pointer();
     itkFunctionBasePD3VD3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkFunctionBasePD3VD3 * GetPointer() const;
     bool operator<(itkFunctionBasePD3VD3_Pointer const & r) const;
     bool operator>(itkFunctionBasePD3VD3_Pointer const & r) const;
     bool operator<=(itkFunctionBasePD3VD3_Pointer const & r) const;
     bool operator>=(itkFunctionBasePD3VD3_Pointer const & r) const;
     itkFunctionBasePD3VD3_Pointer & operator=(itkFunctionBasePD3VD3_Pointer const & r);
     itkFunctionBasePD3VD3_Pointer & operator=(itkFunctionBasePD3VD3 * r);
     itkFunctionBasePD3VD3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkFunctionBasePF2D : public itkObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual double Evaluate(itkPointF2 const & input) const = 0;
   private:
     itkFunctionBasePF2D(itkFunctionBasePF2D const & arg0);
     void operator=(itkFunctionBasePF2D const & arg0);
   protected:
     itkFunctionBasePF2D();
     ~itkFunctionBasePF2D();
 };


 class itkFunctionBasePF2D_Pointer {
   public:
     itkFunctionBasePF2D_Pointer();
     itkFunctionBasePF2D_Pointer(itkFunctionBasePF2D_Pointer const & p);
     itkFunctionBasePF2D_Pointer(itkFunctionBasePF2D * p);
     ~itkFunctionBasePF2D_Pointer();
     itkFunctionBasePF2D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkFunctionBasePF2D * GetPointer() const;
     bool operator<(itkFunctionBasePF2D_Pointer const & r) const;
     bool operator>(itkFunctionBasePF2D_Pointer const & r) const;
     bool operator<=(itkFunctionBasePF2D_Pointer const & r) const;
     bool operator>=(itkFunctionBasePF2D_Pointer const & r) const;
     itkFunctionBasePF2D_Pointer & operator=(itkFunctionBasePF2D_Pointer const & r);
     itkFunctionBasePF2D_Pointer & operator=(itkFunctionBasePF2D * r);
     itkFunctionBasePF2D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkFunctionBasePF3D : public itkObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual double Evaluate(itkPointF3 const & input) const = 0;
   private:
     itkFunctionBasePF3D(itkFunctionBasePF3D const & arg0);
     void operator=(itkFunctionBasePF3D const & arg0);
   protected:
     itkFunctionBasePF3D();
     ~itkFunctionBasePF3D();
 };


 class itkFunctionBasePF3D_Pointer {
   public:
     itkFunctionBasePF3D_Pointer();
     itkFunctionBasePF3D_Pointer(itkFunctionBasePF3D_Pointer const & p);
     itkFunctionBasePF3D_Pointer(itkFunctionBasePF3D * p);
     ~itkFunctionBasePF3D_Pointer();
     itkFunctionBasePF3D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkFunctionBasePF3D * GetPointer() const;
     bool operator<(itkFunctionBasePF3D_Pointer const & r) const;
     bool operator>(itkFunctionBasePF3D_Pointer const & r) const;
     bool operator<=(itkFunctionBasePF3D_Pointer const & r) const;
     bool operator>=(itkFunctionBasePF3D_Pointer const & r) const;
     itkFunctionBasePF3D_Pointer & operator=(itkFunctionBasePF3D_Pointer const & r);
     itkFunctionBasePF3D_Pointer & operator=(itkFunctionBasePF3D * r);
     itkFunctionBasePF3D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkFunctionBaseVF2D : public itkObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual double Evaluate(itkVectorF2 const & input) const = 0;
   private:
     itkFunctionBaseVF2D(itkFunctionBaseVF2D const & arg0);
     void operator=(itkFunctionBaseVF2D const & arg0);
   protected:
     itkFunctionBaseVF2D();
     ~itkFunctionBaseVF2D();
 };


 class itkFunctionBaseVF2D_Pointer {
   public:
     itkFunctionBaseVF2D_Pointer();
     itkFunctionBaseVF2D_Pointer(itkFunctionBaseVF2D_Pointer const & p);
     itkFunctionBaseVF2D_Pointer(itkFunctionBaseVF2D * p);
     ~itkFunctionBaseVF2D_Pointer();
     itkFunctionBaseVF2D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkFunctionBaseVF2D * GetPointer() const;
     bool operator<(itkFunctionBaseVF2D_Pointer const & r) const;
     bool operator>(itkFunctionBaseVF2D_Pointer const & r) const;
     bool operator<=(itkFunctionBaseVF2D_Pointer const & r) const;
     bool operator>=(itkFunctionBaseVF2D_Pointer const & r) const;
     itkFunctionBaseVF2D_Pointer & operator=(itkFunctionBaseVF2D_Pointer const & r);
     itkFunctionBaseVF2D_Pointer & operator=(itkFunctionBaseVF2D * r);
     itkFunctionBaseVF2D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkFunctionBaseVF3D : public itkObject {
   public:
     virtual char const * GetNameOfClass() const;
     virtual double Evaluate(itkVectorF3 const & input) const = 0;
   private:
     itkFunctionBaseVF3D(itkFunctionBaseVF3D const & arg0);
     void operator=(itkFunctionBaseVF3D const & arg0);
   protected:
     itkFunctionBaseVF3D();
     ~itkFunctionBaseVF3D();
 };


 class itkFunctionBaseVF3D_Pointer {
   public:
     itkFunctionBaseVF3D_Pointer();
     itkFunctionBaseVF3D_Pointer(itkFunctionBaseVF3D_Pointer const & p);
     itkFunctionBaseVF3D_Pointer(itkFunctionBaseVF3D * p);
     ~itkFunctionBaseVF3D_Pointer();
     itkFunctionBaseVF3D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkFunctionBaseVF3D * GetPointer() const;
     bool operator<(itkFunctionBaseVF3D_Pointer const & r) const;
     bool operator>(itkFunctionBaseVF3D_Pointer const & r) const;
     bool operator<=(itkFunctionBaseVF3D_Pointer const & r) const;
     bool operator>=(itkFunctionBaseVF3D_Pointer const & r) const;
     itkFunctionBaseVF3D_Pointer & operator=(itkFunctionBaseVF3D_Pointer const & r);
     itkFunctionBaseVF3D_Pointer & operator=(itkFunctionBaseVF3D * r);
     itkFunctionBaseVF3D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


