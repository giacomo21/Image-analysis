# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkMinimumImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkMinimumImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkMinimumImageFilterPython
            return _itkMinimumImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkMinimumImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkMinimumImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkMinimumImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterAPython
def itkMinimumImageFilterID3ID3ID3_New():
  return itkMinimumImageFilterID3ID3ID3.New()

def itkMinimumImageFilterID3ID3ID3_Superclass_New():
  return itkMinimumImageFilterID3ID3ID3_Superclass.New()

def itkMinimumImageFilterID2ID2ID2_New():
  return itkMinimumImageFilterID2ID2ID2.New()

def itkMinimumImageFilterID2ID2ID2_Superclass_New():
  return itkMinimumImageFilterID2ID2ID2_Superclass.New()

def itkMinimumImageFilterIF3IF3IF3_New():
  return itkMinimumImageFilterIF3IF3IF3.New()

def itkMinimumImageFilterIF3IF3IF3_Superclass_New():
  return itkMinimumImageFilterIF3IF3IF3_Superclass.New()

def itkMinimumImageFilterIF2IF2IF2_New():
  return itkMinimumImageFilterIF2IF2IF2.New()

def itkMinimumImageFilterIF2IF2IF2_Superclass_New():
  return itkMinimumImageFilterIF2IF2IF2_Superclass.New()

def itkMinimumImageFilterIUS3IUS3IUS3_New():
  return itkMinimumImageFilterIUS3IUS3IUS3.New()

def itkMinimumImageFilterIUS3IUS3IUS3_Superclass_New():
  return itkMinimumImageFilterIUS3IUS3IUS3_Superclass.New()

def itkMinimumImageFilterIUS2IUS2IUS2_New():
  return itkMinimumImageFilterIUS2IUS2IUS2.New()

def itkMinimumImageFilterIUS2IUS2IUS2_Superclass_New():
  return itkMinimumImageFilterIUS2IUS2IUS2_Superclass.New()

def itkMinimumImageFilterIUL3IUL3IUL3_New():
  return itkMinimumImageFilterIUL3IUL3IUL3.New()

def itkMinimumImageFilterIUL3IUL3IUL3_Superclass_New():
  return itkMinimumImageFilterIUL3IUL3IUL3_Superclass.New()

def itkMinimumImageFilterIUL2IUL2IUL2_New():
  return itkMinimumImageFilterIUL2IUL2IUL2.New()

def itkMinimumImageFilterIUL2IUL2IUL2_Superclass_New():
  return itkMinimumImageFilterIUL2IUL2IUL2_Superclass.New()

def itkMinimumImageFilterIUC3IUC3IUC3_New():
  return itkMinimumImageFilterIUC3IUC3IUC3.New()

def itkMinimumImageFilterIUC3IUC3IUC3_Superclass_New():
  return itkMinimumImageFilterIUC3IUC3IUC3_Superclass.New()

def itkMinimumImageFilterIUC2IUC2IUC2_New():
  return itkMinimumImageFilterIUC2IUC2IUC2.New()

def itkMinimumImageFilterIUC2IUC2IUC2_Superclass_New():
  return itkMinimumImageFilterIUC2IUC2IUC2_Superclass.New()

class itkMinimumImageFilterID2ID2ID2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    """Proxy of C++ itkMinimumImageFilterID2ID2ID2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImage1Dimension = _itkMinimumImageFilterPython.itkMinimumImageFilterID2ID2ID2_Superclass_InputImage1Dimension
    InputImage2Dimension = _itkMinimumImageFilterPython.itkMinimumImageFilterID2ID2ID2_Superclass_InputImage2Dimension
    OutputImageDimension = _itkMinimumImageFilterPython.itkMinimumImageFilterID2ID2ID2_Superclass_OutputImageDimension
    SameDimensionCheck1 = _itkMinimumImageFilterPython.itkMinimumImageFilterID2ID2ID2_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMinimumImageFilterPython.itkMinimumImageFilterID2ID2ID2_Superclass_SameDimensionCheck2
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterID2ID2ID2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageD2 image1)"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterID2ID2ID2_Superclass_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageD2 image2)"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterID2ID2ID2_Superclass_SetInput2(self, *args)

    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Minimum<(double,double,double)>
        GetFunctor(self) -> itk::Function::Minimum<(double,double,double)>
        """
        return _itkMinimumImageFilterPython.itkMinimumImageFilterID2ID2ID2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Minimum<(double,double,double)> functor)"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterID2ID2ID2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkMinimumImageFilterPython.delete_itkMinimumImageFilterID2ID2ID2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumImageFilterID2ID2ID2_Superclass"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterID2ID2ID2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumImageFilterID2ID2ID2_Superclass"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterID2ID2ID2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumImageFilterID2ID2ID2_Superclass
        
        Create a new object of the class itkMinimumImageFilterID2ID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumImageFilterID2ID2ID2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumImageFilterID2ID2ID2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumImageFilterID2ID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumImageFilterID2ID2ID2_Superclass.SetInput1 = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterID2ID2ID2_Superclass_SetInput1,None,itkMinimumImageFilterID2ID2ID2_Superclass)
itkMinimumImageFilterID2ID2ID2_Superclass.SetInput2 = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterID2ID2ID2_Superclass_SetInput2,None,itkMinimumImageFilterID2ID2ID2_Superclass)
itkMinimumImageFilterID2ID2ID2_Superclass.GetFunctor = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterID2ID2ID2_Superclass_GetFunctor,None,itkMinimumImageFilterID2ID2ID2_Superclass)
itkMinimumImageFilterID2ID2ID2_Superclass.SetFunctor = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterID2ID2ID2_Superclass_SetFunctor,None,itkMinimumImageFilterID2ID2ID2_Superclass)
itkMinimumImageFilterID2ID2ID2_Superclass.GetPointer = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterID2ID2ID2_Superclass_GetPointer,None,itkMinimumImageFilterID2ID2ID2_Superclass)
itkMinimumImageFilterID2ID2ID2_Superclass_swigregister = _itkMinimumImageFilterPython.itkMinimumImageFilterID2ID2ID2_Superclass_swigregister
itkMinimumImageFilterID2ID2ID2_Superclass_swigregister(itkMinimumImageFilterID2ID2ID2_Superclass)

def itkMinimumImageFilterID2ID2ID2_Superclass___New_orig__():
  """itkMinimumImageFilterID2ID2ID2_Superclass___New_orig__()"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterID2ID2ID2_Superclass___New_orig__()

def itkMinimumImageFilterID2ID2ID2_Superclass_cast(*args):
  """itkMinimumImageFilterID2ID2ID2_Superclass_cast(itkLightObject obj) -> itkMinimumImageFilterID2ID2ID2_Superclass"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterID2ID2ID2_Superclass_cast(*args)

class itkMinimumImageFilterID3ID3ID3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    """Proxy of C++ itkMinimumImageFilterID3ID3ID3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImage1Dimension = _itkMinimumImageFilterPython.itkMinimumImageFilterID3ID3ID3_Superclass_InputImage1Dimension
    InputImage2Dimension = _itkMinimumImageFilterPython.itkMinimumImageFilterID3ID3ID3_Superclass_InputImage2Dimension
    OutputImageDimension = _itkMinimumImageFilterPython.itkMinimumImageFilterID3ID3ID3_Superclass_OutputImageDimension
    SameDimensionCheck1 = _itkMinimumImageFilterPython.itkMinimumImageFilterID3ID3ID3_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMinimumImageFilterPython.itkMinimumImageFilterID3ID3ID3_Superclass_SameDimensionCheck2
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterID3ID3ID3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageD3 image1)"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterID3ID3ID3_Superclass_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageD3 image2)"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterID3ID3ID3_Superclass_SetInput2(self, *args)

    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Minimum<(double,double,double)>
        GetFunctor(self) -> itk::Function::Minimum<(double,double,double)>
        """
        return _itkMinimumImageFilterPython.itkMinimumImageFilterID3ID3ID3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Minimum<(double,double,double)> functor)"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterID3ID3ID3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkMinimumImageFilterPython.delete_itkMinimumImageFilterID3ID3ID3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumImageFilterID3ID3ID3_Superclass"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterID3ID3ID3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumImageFilterID3ID3ID3_Superclass"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterID3ID3ID3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumImageFilterID3ID3ID3_Superclass
        
        Create a new object of the class itkMinimumImageFilterID3ID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumImageFilterID3ID3ID3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumImageFilterID3ID3ID3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumImageFilterID3ID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumImageFilterID3ID3ID3_Superclass.SetInput1 = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterID3ID3ID3_Superclass_SetInput1,None,itkMinimumImageFilterID3ID3ID3_Superclass)
itkMinimumImageFilterID3ID3ID3_Superclass.SetInput2 = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterID3ID3ID3_Superclass_SetInput2,None,itkMinimumImageFilterID3ID3ID3_Superclass)
itkMinimumImageFilterID3ID3ID3_Superclass.GetFunctor = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterID3ID3ID3_Superclass_GetFunctor,None,itkMinimumImageFilterID3ID3ID3_Superclass)
itkMinimumImageFilterID3ID3ID3_Superclass.SetFunctor = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterID3ID3ID3_Superclass_SetFunctor,None,itkMinimumImageFilterID3ID3ID3_Superclass)
itkMinimumImageFilterID3ID3ID3_Superclass.GetPointer = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterID3ID3ID3_Superclass_GetPointer,None,itkMinimumImageFilterID3ID3ID3_Superclass)
itkMinimumImageFilterID3ID3ID3_Superclass_swigregister = _itkMinimumImageFilterPython.itkMinimumImageFilterID3ID3ID3_Superclass_swigregister
itkMinimumImageFilterID3ID3ID3_Superclass_swigregister(itkMinimumImageFilterID3ID3ID3_Superclass)

def itkMinimumImageFilterID3ID3ID3_Superclass___New_orig__():
  """itkMinimumImageFilterID3ID3ID3_Superclass___New_orig__()"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterID3ID3ID3_Superclass___New_orig__()

def itkMinimumImageFilterID3ID3ID3_Superclass_cast(*args):
  """itkMinimumImageFilterID3ID3ID3_Superclass_cast(itkLightObject obj) -> itkMinimumImageFilterID3ID3ID3_Superclass"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterID3ID3ID3_Superclass_cast(*args)

class itkMinimumImageFilterIF2IF2IF2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    """Proxy of C++ itkMinimumImageFilterIF2IF2IF2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImage1Dimension = _itkMinimumImageFilterPython.itkMinimumImageFilterIF2IF2IF2_Superclass_InputImage1Dimension
    InputImage2Dimension = _itkMinimumImageFilterPython.itkMinimumImageFilterIF2IF2IF2_Superclass_InputImage2Dimension
    OutputImageDimension = _itkMinimumImageFilterPython.itkMinimumImageFilterIF2IF2IF2_Superclass_OutputImageDimension
    SameDimensionCheck1 = _itkMinimumImageFilterPython.itkMinimumImageFilterIF2IF2IF2_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMinimumImageFilterPython.itkMinimumImageFilterIF2IF2IF2_Superclass_SameDimensionCheck2
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIF2IF2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageF2 image1)"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIF2IF2IF2_Superclass_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageF2 image2)"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIF2IF2IF2_Superclass_SetInput2(self, *args)

    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Minimum<(float,float,float)>
        GetFunctor(self) -> itk::Function::Minimum<(float,float,float)>
        """
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIF2IF2IF2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Minimum<(float,float,float)> functor)"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIF2IF2IF2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkMinimumImageFilterPython.delete_itkMinimumImageFilterIF2IF2IF2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumImageFilterIF2IF2IF2_Superclass"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIF2IF2IF2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumImageFilterIF2IF2IF2_Superclass"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIF2IF2IF2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumImageFilterIF2IF2IF2_Superclass
        
        Create a new object of the class itkMinimumImageFilterIF2IF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumImageFilterIF2IF2IF2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumImageFilterIF2IF2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumImageFilterIF2IF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumImageFilterIF2IF2IF2_Superclass.SetInput1 = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIF2IF2IF2_Superclass_SetInput1,None,itkMinimumImageFilterIF2IF2IF2_Superclass)
itkMinimumImageFilterIF2IF2IF2_Superclass.SetInput2 = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIF2IF2IF2_Superclass_SetInput2,None,itkMinimumImageFilterIF2IF2IF2_Superclass)
itkMinimumImageFilterIF2IF2IF2_Superclass.GetFunctor = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIF2IF2IF2_Superclass_GetFunctor,None,itkMinimumImageFilterIF2IF2IF2_Superclass)
itkMinimumImageFilterIF2IF2IF2_Superclass.SetFunctor = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIF2IF2IF2_Superclass_SetFunctor,None,itkMinimumImageFilterIF2IF2IF2_Superclass)
itkMinimumImageFilterIF2IF2IF2_Superclass.GetPointer = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIF2IF2IF2_Superclass_GetPointer,None,itkMinimumImageFilterIF2IF2IF2_Superclass)
itkMinimumImageFilterIF2IF2IF2_Superclass_swigregister = _itkMinimumImageFilterPython.itkMinimumImageFilterIF2IF2IF2_Superclass_swigregister
itkMinimumImageFilterIF2IF2IF2_Superclass_swigregister(itkMinimumImageFilterIF2IF2IF2_Superclass)

def itkMinimumImageFilterIF2IF2IF2_Superclass___New_orig__():
  """itkMinimumImageFilterIF2IF2IF2_Superclass___New_orig__()"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIF2IF2IF2_Superclass___New_orig__()

def itkMinimumImageFilterIF2IF2IF2_Superclass_cast(*args):
  """itkMinimumImageFilterIF2IF2IF2_Superclass_cast(itkLightObject obj) -> itkMinimumImageFilterIF2IF2IF2_Superclass"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIF2IF2IF2_Superclass_cast(*args)

class itkMinimumImageFilterIF3IF3IF3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    """Proxy of C++ itkMinimumImageFilterIF3IF3IF3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImage1Dimension = _itkMinimumImageFilterPython.itkMinimumImageFilterIF3IF3IF3_Superclass_InputImage1Dimension
    InputImage2Dimension = _itkMinimumImageFilterPython.itkMinimumImageFilterIF3IF3IF3_Superclass_InputImage2Dimension
    OutputImageDimension = _itkMinimumImageFilterPython.itkMinimumImageFilterIF3IF3IF3_Superclass_OutputImageDimension
    SameDimensionCheck1 = _itkMinimumImageFilterPython.itkMinimumImageFilterIF3IF3IF3_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMinimumImageFilterPython.itkMinimumImageFilterIF3IF3IF3_Superclass_SameDimensionCheck2
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIF3IF3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageF3 image1)"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIF3IF3IF3_Superclass_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageF3 image2)"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIF3IF3IF3_Superclass_SetInput2(self, *args)

    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Minimum<(float,float,float)>
        GetFunctor(self) -> itk::Function::Minimum<(float,float,float)>
        """
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIF3IF3IF3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Minimum<(float,float,float)> functor)"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIF3IF3IF3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkMinimumImageFilterPython.delete_itkMinimumImageFilterIF3IF3IF3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumImageFilterIF3IF3IF3_Superclass"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIF3IF3IF3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumImageFilterIF3IF3IF3_Superclass"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIF3IF3IF3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumImageFilterIF3IF3IF3_Superclass
        
        Create a new object of the class itkMinimumImageFilterIF3IF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumImageFilterIF3IF3IF3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumImageFilterIF3IF3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumImageFilterIF3IF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumImageFilterIF3IF3IF3_Superclass.SetInput1 = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIF3IF3IF3_Superclass_SetInput1,None,itkMinimumImageFilterIF3IF3IF3_Superclass)
itkMinimumImageFilterIF3IF3IF3_Superclass.SetInput2 = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIF3IF3IF3_Superclass_SetInput2,None,itkMinimumImageFilterIF3IF3IF3_Superclass)
itkMinimumImageFilterIF3IF3IF3_Superclass.GetFunctor = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIF3IF3IF3_Superclass_GetFunctor,None,itkMinimumImageFilterIF3IF3IF3_Superclass)
itkMinimumImageFilterIF3IF3IF3_Superclass.SetFunctor = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIF3IF3IF3_Superclass_SetFunctor,None,itkMinimumImageFilterIF3IF3IF3_Superclass)
itkMinimumImageFilterIF3IF3IF3_Superclass.GetPointer = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIF3IF3IF3_Superclass_GetPointer,None,itkMinimumImageFilterIF3IF3IF3_Superclass)
itkMinimumImageFilterIF3IF3IF3_Superclass_swigregister = _itkMinimumImageFilterPython.itkMinimumImageFilterIF3IF3IF3_Superclass_swigregister
itkMinimumImageFilterIF3IF3IF3_Superclass_swigregister(itkMinimumImageFilterIF3IF3IF3_Superclass)

def itkMinimumImageFilterIF3IF3IF3_Superclass___New_orig__():
  """itkMinimumImageFilterIF3IF3IF3_Superclass___New_orig__()"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIF3IF3IF3_Superclass___New_orig__()

def itkMinimumImageFilterIF3IF3IF3_Superclass_cast(*args):
  """itkMinimumImageFilterIF3IF3IF3_Superclass_cast(itkLightObject obj) -> itkMinimumImageFilterIF3IF3IF3_Superclass"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIF3IF3IF3_Superclass_cast(*args)

class itkMinimumImageFilterIUC2IUC2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    """Proxy of C++ itkMinimumImageFilterIUC2IUC2IUC2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImage1Dimension = _itkMinimumImageFilterPython.itkMinimumImageFilterIUC2IUC2IUC2_Superclass_InputImage1Dimension
    InputImage2Dimension = _itkMinimumImageFilterPython.itkMinimumImageFilterIUC2IUC2IUC2_Superclass_InputImage2Dimension
    OutputImageDimension = _itkMinimumImageFilterPython.itkMinimumImageFilterIUC2IUC2IUC2_Superclass_OutputImageDimension
    SameDimensionCheck1 = _itkMinimumImageFilterPython.itkMinimumImageFilterIUC2IUC2IUC2_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMinimumImageFilterPython.itkMinimumImageFilterIUC2IUC2IUC2_Superclass_SameDimensionCheck2
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUC2IUC2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageUC2 image1)"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUC2IUC2IUC2_Superclass_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageUC2 image2)"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUC2IUC2IUC2_Superclass_SetInput2(self, *args)

    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Minimum<(unsigned char,unsigned char,unsigned char)>
        GetFunctor(self) -> itk::Function::Minimum<(unsigned char,unsigned char,unsigned char)>
        """
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUC2IUC2IUC2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Minimum<(unsigned char,unsigned char,unsigned char)> functor)"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUC2IUC2IUC2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkMinimumImageFilterPython.delete_itkMinimumImageFilterIUC2IUC2IUC2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumImageFilterIUC2IUC2IUC2_Superclass"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUC2IUC2IUC2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumImageFilterIUC2IUC2IUC2_Superclass"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUC2IUC2IUC2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumImageFilterIUC2IUC2IUC2_Superclass
        
        Create a new object of the class itkMinimumImageFilterIUC2IUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumImageFilterIUC2IUC2IUC2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumImageFilterIUC2IUC2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumImageFilterIUC2IUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumImageFilterIUC2IUC2IUC2_Superclass.SetInput1 = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUC2IUC2IUC2_Superclass_SetInput1,None,itkMinimumImageFilterIUC2IUC2IUC2_Superclass)
itkMinimumImageFilterIUC2IUC2IUC2_Superclass.SetInput2 = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUC2IUC2IUC2_Superclass_SetInput2,None,itkMinimumImageFilterIUC2IUC2IUC2_Superclass)
itkMinimumImageFilterIUC2IUC2IUC2_Superclass.GetFunctor = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUC2IUC2IUC2_Superclass_GetFunctor,None,itkMinimumImageFilterIUC2IUC2IUC2_Superclass)
itkMinimumImageFilterIUC2IUC2IUC2_Superclass.SetFunctor = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUC2IUC2IUC2_Superclass_SetFunctor,None,itkMinimumImageFilterIUC2IUC2IUC2_Superclass)
itkMinimumImageFilterIUC2IUC2IUC2_Superclass.GetPointer = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUC2IUC2IUC2_Superclass_GetPointer,None,itkMinimumImageFilterIUC2IUC2IUC2_Superclass)
itkMinimumImageFilterIUC2IUC2IUC2_Superclass_swigregister = _itkMinimumImageFilterPython.itkMinimumImageFilterIUC2IUC2IUC2_Superclass_swigregister
itkMinimumImageFilterIUC2IUC2IUC2_Superclass_swigregister(itkMinimumImageFilterIUC2IUC2IUC2_Superclass)

def itkMinimumImageFilterIUC2IUC2IUC2_Superclass___New_orig__():
  """itkMinimumImageFilterIUC2IUC2IUC2_Superclass___New_orig__()"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIUC2IUC2IUC2_Superclass___New_orig__()

def itkMinimumImageFilterIUC2IUC2IUC2_Superclass_cast(*args):
  """itkMinimumImageFilterIUC2IUC2IUC2_Superclass_cast(itkLightObject obj) -> itkMinimumImageFilterIUC2IUC2IUC2_Superclass"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIUC2IUC2IUC2_Superclass_cast(*args)

class itkMinimumImageFilterIUC3IUC3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    """Proxy of C++ itkMinimumImageFilterIUC3IUC3IUC3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImage1Dimension = _itkMinimumImageFilterPython.itkMinimumImageFilterIUC3IUC3IUC3_Superclass_InputImage1Dimension
    InputImage2Dimension = _itkMinimumImageFilterPython.itkMinimumImageFilterIUC3IUC3IUC3_Superclass_InputImage2Dimension
    OutputImageDimension = _itkMinimumImageFilterPython.itkMinimumImageFilterIUC3IUC3IUC3_Superclass_OutputImageDimension
    SameDimensionCheck1 = _itkMinimumImageFilterPython.itkMinimumImageFilterIUC3IUC3IUC3_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMinimumImageFilterPython.itkMinimumImageFilterIUC3IUC3IUC3_Superclass_SameDimensionCheck2
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUC3IUC3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageUC3 image1)"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUC3IUC3IUC3_Superclass_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageUC3 image2)"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUC3IUC3IUC3_Superclass_SetInput2(self, *args)

    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Minimum<(unsigned char,unsigned char,unsigned char)>
        GetFunctor(self) -> itk::Function::Minimum<(unsigned char,unsigned char,unsigned char)>
        """
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUC3IUC3IUC3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Minimum<(unsigned char,unsigned char,unsigned char)> functor)"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUC3IUC3IUC3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkMinimumImageFilterPython.delete_itkMinimumImageFilterIUC3IUC3IUC3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumImageFilterIUC3IUC3IUC3_Superclass"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUC3IUC3IUC3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumImageFilterIUC3IUC3IUC3_Superclass"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUC3IUC3IUC3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumImageFilterIUC3IUC3IUC3_Superclass
        
        Create a new object of the class itkMinimumImageFilterIUC3IUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumImageFilterIUC3IUC3IUC3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumImageFilterIUC3IUC3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumImageFilterIUC3IUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumImageFilterIUC3IUC3IUC3_Superclass.SetInput1 = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUC3IUC3IUC3_Superclass_SetInput1,None,itkMinimumImageFilterIUC3IUC3IUC3_Superclass)
itkMinimumImageFilterIUC3IUC3IUC3_Superclass.SetInput2 = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUC3IUC3IUC3_Superclass_SetInput2,None,itkMinimumImageFilterIUC3IUC3IUC3_Superclass)
itkMinimumImageFilterIUC3IUC3IUC3_Superclass.GetFunctor = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUC3IUC3IUC3_Superclass_GetFunctor,None,itkMinimumImageFilterIUC3IUC3IUC3_Superclass)
itkMinimumImageFilterIUC3IUC3IUC3_Superclass.SetFunctor = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUC3IUC3IUC3_Superclass_SetFunctor,None,itkMinimumImageFilterIUC3IUC3IUC3_Superclass)
itkMinimumImageFilterIUC3IUC3IUC3_Superclass.GetPointer = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUC3IUC3IUC3_Superclass_GetPointer,None,itkMinimumImageFilterIUC3IUC3IUC3_Superclass)
itkMinimumImageFilterIUC3IUC3IUC3_Superclass_swigregister = _itkMinimumImageFilterPython.itkMinimumImageFilterIUC3IUC3IUC3_Superclass_swigregister
itkMinimumImageFilterIUC3IUC3IUC3_Superclass_swigregister(itkMinimumImageFilterIUC3IUC3IUC3_Superclass)

def itkMinimumImageFilterIUC3IUC3IUC3_Superclass___New_orig__():
  """itkMinimumImageFilterIUC3IUC3IUC3_Superclass___New_orig__()"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIUC3IUC3IUC3_Superclass___New_orig__()

def itkMinimumImageFilterIUC3IUC3IUC3_Superclass_cast(*args):
  """itkMinimumImageFilterIUC3IUC3IUC3_Superclass_cast(itkLightObject obj) -> itkMinimumImageFilterIUC3IUC3IUC3_Superclass"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIUC3IUC3IUC3_Superclass_cast(*args)

class itkMinimumImageFilterIUL2IUL2IUL2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUL2):
    """Proxy of C++ itkMinimumImageFilterIUL2IUL2IUL2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImage1Dimension = _itkMinimumImageFilterPython.itkMinimumImageFilterIUL2IUL2IUL2_Superclass_InputImage1Dimension
    InputImage2Dimension = _itkMinimumImageFilterPython.itkMinimumImageFilterIUL2IUL2IUL2_Superclass_InputImage2Dimension
    OutputImageDimension = _itkMinimumImageFilterPython.itkMinimumImageFilterIUL2IUL2IUL2_Superclass_OutputImageDimension
    SameDimensionCheck1 = _itkMinimumImageFilterPython.itkMinimumImageFilterIUL2IUL2IUL2_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMinimumImageFilterPython.itkMinimumImageFilterIUL2IUL2IUL2_Superclass_SameDimensionCheck2
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUL2IUL2IUL2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageUL2 image1)"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUL2IUL2IUL2_Superclass_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageUL2 image2)"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUL2IUL2IUL2_Superclass_SetInput2(self, *args)

    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Minimum<(unsigned long,unsigned long,unsigned long)>
        GetFunctor(self) -> itk::Function::Minimum<(unsigned long,unsigned long,unsigned long)>
        """
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUL2IUL2IUL2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Minimum<(unsigned long,unsigned long,unsigned long)> functor)"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUL2IUL2IUL2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkMinimumImageFilterPython.delete_itkMinimumImageFilterIUL2IUL2IUL2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumImageFilterIUL2IUL2IUL2_Superclass"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUL2IUL2IUL2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumImageFilterIUL2IUL2IUL2_Superclass"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUL2IUL2IUL2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumImageFilterIUL2IUL2IUL2_Superclass
        
        Create a new object of the class itkMinimumImageFilterIUL2IUL2IUL2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumImageFilterIUL2IUL2IUL2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumImageFilterIUL2IUL2IUL2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumImageFilterIUL2IUL2IUL2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumImageFilterIUL2IUL2IUL2_Superclass.SetInput1 = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUL2IUL2IUL2_Superclass_SetInput1,None,itkMinimumImageFilterIUL2IUL2IUL2_Superclass)
itkMinimumImageFilterIUL2IUL2IUL2_Superclass.SetInput2 = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUL2IUL2IUL2_Superclass_SetInput2,None,itkMinimumImageFilterIUL2IUL2IUL2_Superclass)
itkMinimumImageFilterIUL2IUL2IUL2_Superclass.GetFunctor = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUL2IUL2IUL2_Superclass_GetFunctor,None,itkMinimumImageFilterIUL2IUL2IUL2_Superclass)
itkMinimumImageFilterIUL2IUL2IUL2_Superclass.SetFunctor = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUL2IUL2IUL2_Superclass_SetFunctor,None,itkMinimumImageFilterIUL2IUL2IUL2_Superclass)
itkMinimumImageFilterIUL2IUL2IUL2_Superclass.GetPointer = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUL2IUL2IUL2_Superclass_GetPointer,None,itkMinimumImageFilterIUL2IUL2IUL2_Superclass)
itkMinimumImageFilterIUL2IUL2IUL2_Superclass_swigregister = _itkMinimumImageFilterPython.itkMinimumImageFilterIUL2IUL2IUL2_Superclass_swigregister
itkMinimumImageFilterIUL2IUL2IUL2_Superclass_swigregister(itkMinimumImageFilterIUL2IUL2IUL2_Superclass)

def itkMinimumImageFilterIUL2IUL2IUL2_Superclass___New_orig__():
  """itkMinimumImageFilterIUL2IUL2IUL2_Superclass___New_orig__()"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIUL2IUL2IUL2_Superclass___New_orig__()

def itkMinimumImageFilterIUL2IUL2IUL2_Superclass_cast(*args):
  """itkMinimumImageFilterIUL2IUL2IUL2_Superclass_cast(itkLightObject obj) -> itkMinimumImageFilterIUL2IUL2IUL2_Superclass"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIUL2IUL2IUL2_Superclass_cast(*args)

class itkMinimumImageFilterIUL3IUL3IUL3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUL3):
    """Proxy of C++ itkMinimumImageFilterIUL3IUL3IUL3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImage1Dimension = _itkMinimumImageFilterPython.itkMinimumImageFilterIUL3IUL3IUL3_Superclass_InputImage1Dimension
    InputImage2Dimension = _itkMinimumImageFilterPython.itkMinimumImageFilterIUL3IUL3IUL3_Superclass_InputImage2Dimension
    OutputImageDimension = _itkMinimumImageFilterPython.itkMinimumImageFilterIUL3IUL3IUL3_Superclass_OutputImageDimension
    SameDimensionCheck1 = _itkMinimumImageFilterPython.itkMinimumImageFilterIUL3IUL3IUL3_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMinimumImageFilterPython.itkMinimumImageFilterIUL3IUL3IUL3_Superclass_SameDimensionCheck2
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUL3IUL3IUL3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageUL3 image1)"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUL3IUL3IUL3_Superclass_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageUL3 image2)"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUL3IUL3IUL3_Superclass_SetInput2(self, *args)

    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Minimum<(unsigned long,unsigned long,unsigned long)>
        GetFunctor(self) -> itk::Function::Minimum<(unsigned long,unsigned long,unsigned long)>
        """
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUL3IUL3IUL3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Minimum<(unsigned long,unsigned long,unsigned long)> functor)"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUL3IUL3IUL3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkMinimumImageFilterPython.delete_itkMinimumImageFilterIUL3IUL3IUL3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumImageFilterIUL3IUL3IUL3_Superclass"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUL3IUL3IUL3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumImageFilterIUL3IUL3IUL3_Superclass"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUL3IUL3IUL3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumImageFilterIUL3IUL3IUL3_Superclass
        
        Create a new object of the class itkMinimumImageFilterIUL3IUL3IUL3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumImageFilterIUL3IUL3IUL3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumImageFilterIUL3IUL3IUL3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumImageFilterIUL3IUL3IUL3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumImageFilterIUL3IUL3IUL3_Superclass.SetInput1 = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUL3IUL3IUL3_Superclass_SetInput1,None,itkMinimumImageFilterIUL3IUL3IUL3_Superclass)
itkMinimumImageFilterIUL3IUL3IUL3_Superclass.SetInput2 = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUL3IUL3IUL3_Superclass_SetInput2,None,itkMinimumImageFilterIUL3IUL3IUL3_Superclass)
itkMinimumImageFilterIUL3IUL3IUL3_Superclass.GetFunctor = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUL3IUL3IUL3_Superclass_GetFunctor,None,itkMinimumImageFilterIUL3IUL3IUL3_Superclass)
itkMinimumImageFilterIUL3IUL3IUL3_Superclass.SetFunctor = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUL3IUL3IUL3_Superclass_SetFunctor,None,itkMinimumImageFilterIUL3IUL3IUL3_Superclass)
itkMinimumImageFilterIUL3IUL3IUL3_Superclass.GetPointer = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUL3IUL3IUL3_Superclass_GetPointer,None,itkMinimumImageFilterIUL3IUL3IUL3_Superclass)
itkMinimumImageFilterIUL3IUL3IUL3_Superclass_swigregister = _itkMinimumImageFilterPython.itkMinimumImageFilterIUL3IUL3IUL3_Superclass_swigregister
itkMinimumImageFilterIUL3IUL3IUL3_Superclass_swigregister(itkMinimumImageFilterIUL3IUL3IUL3_Superclass)

def itkMinimumImageFilterIUL3IUL3IUL3_Superclass___New_orig__():
  """itkMinimumImageFilterIUL3IUL3IUL3_Superclass___New_orig__()"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIUL3IUL3IUL3_Superclass___New_orig__()

def itkMinimumImageFilterIUL3IUL3IUL3_Superclass_cast(*args):
  """itkMinimumImageFilterIUL3IUL3IUL3_Superclass_cast(itkLightObject obj) -> itkMinimumImageFilterIUL3IUL3IUL3_Superclass"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIUL3IUL3IUL3_Superclass_cast(*args)

class itkMinimumImageFilterIUS2IUS2IUS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    """Proxy of C++ itkMinimumImageFilterIUS2IUS2IUS2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImage1Dimension = _itkMinimumImageFilterPython.itkMinimumImageFilterIUS2IUS2IUS2_Superclass_InputImage1Dimension
    InputImage2Dimension = _itkMinimumImageFilterPython.itkMinimumImageFilterIUS2IUS2IUS2_Superclass_InputImage2Dimension
    OutputImageDimension = _itkMinimumImageFilterPython.itkMinimumImageFilterIUS2IUS2IUS2_Superclass_OutputImageDimension
    SameDimensionCheck1 = _itkMinimumImageFilterPython.itkMinimumImageFilterIUS2IUS2IUS2_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMinimumImageFilterPython.itkMinimumImageFilterIUS2IUS2IUS2_Superclass_SameDimensionCheck2
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUS2IUS2IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageUS2 image1)"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUS2IUS2IUS2_Superclass_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageUS2 image2)"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUS2IUS2IUS2_Superclass_SetInput2(self, *args)

    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Minimum<(unsigned short,unsigned short,unsigned short)>
        GetFunctor(self) -> itk::Function::Minimum<(unsigned short,unsigned short,unsigned short)>
        """
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUS2IUS2IUS2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Minimum<(unsigned short,unsigned short,unsigned short)> functor)"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUS2IUS2IUS2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkMinimumImageFilterPython.delete_itkMinimumImageFilterIUS2IUS2IUS2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumImageFilterIUS2IUS2IUS2_Superclass"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUS2IUS2IUS2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumImageFilterIUS2IUS2IUS2_Superclass"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUS2IUS2IUS2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumImageFilterIUS2IUS2IUS2_Superclass
        
        Create a new object of the class itkMinimumImageFilterIUS2IUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumImageFilterIUS2IUS2IUS2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumImageFilterIUS2IUS2IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumImageFilterIUS2IUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumImageFilterIUS2IUS2IUS2_Superclass.SetInput1 = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUS2IUS2IUS2_Superclass_SetInput1,None,itkMinimumImageFilterIUS2IUS2IUS2_Superclass)
itkMinimumImageFilterIUS2IUS2IUS2_Superclass.SetInput2 = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUS2IUS2IUS2_Superclass_SetInput2,None,itkMinimumImageFilterIUS2IUS2IUS2_Superclass)
itkMinimumImageFilterIUS2IUS2IUS2_Superclass.GetFunctor = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUS2IUS2IUS2_Superclass_GetFunctor,None,itkMinimumImageFilterIUS2IUS2IUS2_Superclass)
itkMinimumImageFilterIUS2IUS2IUS2_Superclass.SetFunctor = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUS2IUS2IUS2_Superclass_SetFunctor,None,itkMinimumImageFilterIUS2IUS2IUS2_Superclass)
itkMinimumImageFilterIUS2IUS2IUS2_Superclass.GetPointer = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUS2IUS2IUS2_Superclass_GetPointer,None,itkMinimumImageFilterIUS2IUS2IUS2_Superclass)
itkMinimumImageFilterIUS2IUS2IUS2_Superclass_swigregister = _itkMinimumImageFilterPython.itkMinimumImageFilterIUS2IUS2IUS2_Superclass_swigregister
itkMinimumImageFilterIUS2IUS2IUS2_Superclass_swigregister(itkMinimumImageFilterIUS2IUS2IUS2_Superclass)

def itkMinimumImageFilterIUS2IUS2IUS2_Superclass___New_orig__():
  """itkMinimumImageFilterIUS2IUS2IUS2_Superclass___New_orig__()"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIUS2IUS2IUS2_Superclass___New_orig__()

def itkMinimumImageFilterIUS2IUS2IUS2_Superclass_cast(*args):
  """itkMinimumImageFilterIUS2IUS2IUS2_Superclass_cast(itkLightObject obj) -> itkMinimumImageFilterIUS2IUS2IUS2_Superclass"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIUS2IUS2IUS2_Superclass_cast(*args)

class itkMinimumImageFilterIUS3IUS3IUS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    """Proxy of C++ itkMinimumImageFilterIUS3IUS3IUS3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImage1Dimension = _itkMinimumImageFilterPython.itkMinimumImageFilterIUS3IUS3IUS3_Superclass_InputImage1Dimension
    InputImage2Dimension = _itkMinimumImageFilterPython.itkMinimumImageFilterIUS3IUS3IUS3_Superclass_InputImage2Dimension
    OutputImageDimension = _itkMinimumImageFilterPython.itkMinimumImageFilterIUS3IUS3IUS3_Superclass_OutputImageDimension
    SameDimensionCheck1 = _itkMinimumImageFilterPython.itkMinimumImageFilterIUS3IUS3IUS3_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMinimumImageFilterPython.itkMinimumImageFilterIUS3IUS3IUS3_Superclass_SameDimensionCheck2
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUS3IUS3IUS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageUS3 image1)"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUS3IUS3IUS3_Superclass_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageUS3 image2)"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUS3IUS3IUS3_Superclass_SetInput2(self, *args)

    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Minimum<(unsigned short,unsigned short,unsigned short)>
        GetFunctor(self) -> itk::Function::Minimum<(unsigned short,unsigned short,unsigned short)>
        """
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUS3IUS3IUS3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Minimum<(unsigned short,unsigned short,unsigned short)> functor)"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUS3IUS3IUS3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkMinimumImageFilterPython.delete_itkMinimumImageFilterIUS3IUS3IUS3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumImageFilterIUS3IUS3IUS3_Superclass"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUS3IUS3IUS3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumImageFilterIUS3IUS3IUS3_Superclass"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUS3IUS3IUS3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumImageFilterIUS3IUS3IUS3_Superclass
        
        Create a new object of the class itkMinimumImageFilterIUS3IUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumImageFilterIUS3IUS3IUS3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumImageFilterIUS3IUS3IUS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumImageFilterIUS3IUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumImageFilterIUS3IUS3IUS3_Superclass.SetInput1 = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUS3IUS3IUS3_Superclass_SetInput1,None,itkMinimumImageFilterIUS3IUS3IUS3_Superclass)
itkMinimumImageFilterIUS3IUS3IUS3_Superclass.SetInput2 = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUS3IUS3IUS3_Superclass_SetInput2,None,itkMinimumImageFilterIUS3IUS3IUS3_Superclass)
itkMinimumImageFilterIUS3IUS3IUS3_Superclass.GetFunctor = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUS3IUS3IUS3_Superclass_GetFunctor,None,itkMinimumImageFilterIUS3IUS3IUS3_Superclass)
itkMinimumImageFilterIUS3IUS3IUS3_Superclass.SetFunctor = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUS3IUS3IUS3_Superclass_SetFunctor,None,itkMinimumImageFilterIUS3IUS3IUS3_Superclass)
itkMinimumImageFilterIUS3IUS3IUS3_Superclass.GetPointer = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUS3IUS3IUS3_Superclass_GetPointer,None,itkMinimumImageFilterIUS3IUS3IUS3_Superclass)
itkMinimumImageFilterIUS3IUS3IUS3_Superclass_swigregister = _itkMinimumImageFilterPython.itkMinimumImageFilterIUS3IUS3IUS3_Superclass_swigregister
itkMinimumImageFilterIUS3IUS3IUS3_Superclass_swigregister(itkMinimumImageFilterIUS3IUS3IUS3_Superclass)

def itkMinimumImageFilterIUS3IUS3IUS3_Superclass___New_orig__():
  """itkMinimumImageFilterIUS3IUS3IUS3_Superclass___New_orig__()"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIUS3IUS3IUS3_Superclass___New_orig__()

def itkMinimumImageFilterIUS3IUS3IUS3_Superclass_cast(*args):
  """itkMinimumImageFilterIUS3IUS3IUS3_Superclass_cast(itkLightObject obj) -> itkMinimumImageFilterIUS3IUS3IUS3_Superclass"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIUS3IUS3IUS3_Superclass_cast(*args)

class itkMinimumImageFilterID2ID2ID2(itkMinimumImageFilterID2ID2ID2_Superclass):
    """Proxy of C++ itkMinimumImageFilterID2ID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Input1ConvertibleToInput2Check = _itkMinimumImageFilterPython.itkMinimumImageFilterID2ID2ID2_Input1ConvertibleToInput2Check
    Input2ConvertibleToOutputCheck = _itkMinimumImageFilterPython.itkMinimumImageFilterID2ID2ID2_Input2ConvertibleToOutputCheck
    Input1LessThanInput2Check = _itkMinimumImageFilterPython.itkMinimumImageFilterID2ID2ID2_Input1LessThanInput2Check
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterID2ID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMinimumImageFilterPython.delete_itkMinimumImageFilterID2ID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumImageFilterID2ID2ID2"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterID2ID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumImageFilterID2ID2ID2"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterID2ID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumImageFilterID2ID2ID2
        
        Create a new object of the class itkMinimumImageFilterID2ID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumImageFilterID2ID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumImageFilterID2ID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumImageFilterID2ID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumImageFilterID2ID2ID2.GetPointer = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterID2ID2ID2_GetPointer,None,itkMinimumImageFilterID2ID2ID2)
itkMinimumImageFilterID2ID2ID2_swigregister = _itkMinimumImageFilterPython.itkMinimumImageFilterID2ID2ID2_swigregister
itkMinimumImageFilterID2ID2ID2_swigregister(itkMinimumImageFilterID2ID2ID2)

def itkMinimumImageFilterID2ID2ID2___New_orig__():
  """itkMinimumImageFilterID2ID2ID2___New_orig__()"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterID2ID2ID2___New_orig__()

def itkMinimumImageFilterID2ID2ID2_cast(*args):
  """itkMinimumImageFilterID2ID2ID2_cast(itkLightObject obj) -> itkMinimumImageFilterID2ID2ID2"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterID2ID2ID2_cast(*args)

class itkMinimumImageFilterID3ID3ID3(itkMinimumImageFilterID3ID3ID3_Superclass):
    """Proxy of C++ itkMinimumImageFilterID3ID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Input1ConvertibleToInput2Check = _itkMinimumImageFilterPython.itkMinimumImageFilterID3ID3ID3_Input1ConvertibleToInput2Check
    Input2ConvertibleToOutputCheck = _itkMinimumImageFilterPython.itkMinimumImageFilterID3ID3ID3_Input2ConvertibleToOutputCheck
    Input1LessThanInput2Check = _itkMinimumImageFilterPython.itkMinimumImageFilterID3ID3ID3_Input1LessThanInput2Check
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterID3ID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMinimumImageFilterPython.delete_itkMinimumImageFilterID3ID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumImageFilterID3ID3ID3"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterID3ID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumImageFilterID3ID3ID3"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterID3ID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumImageFilterID3ID3ID3
        
        Create a new object of the class itkMinimumImageFilterID3ID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumImageFilterID3ID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumImageFilterID3ID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumImageFilterID3ID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumImageFilterID3ID3ID3.GetPointer = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterID3ID3ID3_GetPointer,None,itkMinimumImageFilterID3ID3ID3)
itkMinimumImageFilterID3ID3ID3_swigregister = _itkMinimumImageFilterPython.itkMinimumImageFilterID3ID3ID3_swigregister
itkMinimumImageFilterID3ID3ID3_swigregister(itkMinimumImageFilterID3ID3ID3)

def itkMinimumImageFilterID3ID3ID3___New_orig__():
  """itkMinimumImageFilterID3ID3ID3___New_orig__()"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterID3ID3ID3___New_orig__()

def itkMinimumImageFilterID3ID3ID3_cast(*args):
  """itkMinimumImageFilterID3ID3ID3_cast(itkLightObject obj) -> itkMinimumImageFilterID3ID3ID3"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterID3ID3ID3_cast(*args)

class itkMinimumImageFilterIF2IF2IF2(itkMinimumImageFilterIF2IF2IF2_Superclass):
    """Proxy of C++ itkMinimumImageFilterIF2IF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Input1ConvertibleToInput2Check = _itkMinimumImageFilterPython.itkMinimumImageFilterIF2IF2IF2_Input1ConvertibleToInput2Check
    Input2ConvertibleToOutputCheck = _itkMinimumImageFilterPython.itkMinimumImageFilterIF2IF2IF2_Input2ConvertibleToOutputCheck
    Input1LessThanInput2Check = _itkMinimumImageFilterPython.itkMinimumImageFilterIF2IF2IF2_Input1LessThanInput2Check
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIF2IF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMinimumImageFilterPython.delete_itkMinimumImageFilterIF2IF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumImageFilterIF2IF2IF2"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIF2IF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumImageFilterIF2IF2IF2"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIF2IF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumImageFilterIF2IF2IF2
        
        Create a new object of the class itkMinimumImageFilterIF2IF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumImageFilterIF2IF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumImageFilterIF2IF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumImageFilterIF2IF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumImageFilterIF2IF2IF2.GetPointer = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIF2IF2IF2_GetPointer,None,itkMinimumImageFilterIF2IF2IF2)
itkMinimumImageFilterIF2IF2IF2_swigregister = _itkMinimumImageFilterPython.itkMinimumImageFilterIF2IF2IF2_swigregister
itkMinimumImageFilterIF2IF2IF2_swigregister(itkMinimumImageFilterIF2IF2IF2)

def itkMinimumImageFilterIF2IF2IF2___New_orig__():
  """itkMinimumImageFilterIF2IF2IF2___New_orig__()"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIF2IF2IF2___New_orig__()

def itkMinimumImageFilterIF2IF2IF2_cast(*args):
  """itkMinimumImageFilterIF2IF2IF2_cast(itkLightObject obj) -> itkMinimumImageFilterIF2IF2IF2"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIF2IF2IF2_cast(*args)

class itkMinimumImageFilterIF3IF3IF3(itkMinimumImageFilterIF3IF3IF3_Superclass):
    """Proxy of C++ itkMinimumImageFilterIF3IF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Input1ConvertibleToInput2Check = _itkMinimumImageFilterPython.itkMinimumImageFilterIF3IF3IF3_Input1ConvertibleToInput2Check
    Input2ConvertibleToOutputCheck = _itkMinimumImageFilterPython.itkMinimumImageFilterIF3IF3IF3_Input2ConvertibleToOutputCheck
    Input1LessThanInput2Check = _itkMinimumImageFilterPython.itkMinimumImageFilterIF3IF3IF3_Input1LessThanInput2Check
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIF3IF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMinimumImageFilterPython.delete_itkMinimumImageFilterIF3IF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumImageFilterIF3IF3IF3"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIF3IF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumImageFilterIF3IF3IF3"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIF3IF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumImageFilterIF3IF3IF3
        
        Create a new object of the class itkMinimumImageFilterIF3IF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumImageFilterIF3IF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumImageFilterIF3IF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumImageFilterIF3IF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumImageFilterIF3IF3IF3.GetPointer = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIF3IF3IF3_GetPointer,None,itkMinimumImageFilterIF3IF3IF3)
itkMinimumImageFilterIF3IF3IF3_swigregister = _itkMinimumImageFilterPython.itkMinimumImageFilterIF3IF3IF3_swigregister
itkMinimumImageFilterIF3IF3IF3_swigregister(itkMinimumImageFilterIF3IF3IF3)

def itkMinimumImageFilterIF3IF3IF3___New_orig__():
  """itkMinimumImageFilterIF3IF3IF3___New_orig__()"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIF3IF3IF3___New_orig__()

def itkMinimumImageFilterIF3IF3IF3_cast(*args):
  """itkMinimumImageFilterIF3IF3IF3_cast(itkLightObject obj) -> itkMinimumImageFilterIF3IF3IF3"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIF3IF3IF3_cast(*args)

class itkMinimumImageFilterIUC2IUC2IUC2(itkMinimumImageFilterIUC2IUC2IUC2_Superclass):
    """Proxy of C++ itkMinimumImageFilterIUC2IUC2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Input1ConvertibleToInput2Check = _itkMinimumImageFilterPython.itkMinimumImageFilterIUC2IUC2IUC2_Input1ConvertibleToInput2Check
    Input2ConvertibleToOutputCheck = _itkMinimumImageFilterPython.itkMinimumImageFilterIUC2IUC2IUC2_Input2ConvertibleToOutputCheck
    Input1LessThanInput2Check = _itkMinimumImageFilterPython.itkMinimumImageFilterIUC2IUC2IUC2_Input1LessThanInput2Check
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUC2IUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMinimumImageFilterPython.delete_itkMinimumImageFilterIUC2IUC2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumImageFilterIUC2IUC2IUC2"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUC2IUC2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumImageFilterIUC2IUC2IUC2"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUC2IUC2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumImageFilterIUC2IUC2IUC2
        
        Create a new object of the class itkMinimumImageFilterIUC2IUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumImageFilterIUC2IUC2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumImageFilterIUC2IUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumImageFilterIUC2IUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumImageFilterIUC2IUC2IUC2.GetPointer = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUC2IUC2IUC2_GetPointer,None,itkMinimumImageFilterIUC2IUC2IUC2)
itkMinimumImageFilterIUC2IUC2IUC2_swigregister = _itkMinimumImageFilterPython.itkMinimumImageFilterIUC2IUC2IUC2_swigregister
itkMinimumImageFilterIUC2IUC2IUC2_swigregister(itkMinimumImageFilterIUC2IUC2IUC2)

def itkMinimumImageFilterIUC2IUC2IUC2___New_orig__():
  """itkMinimumImageFilterIUC2IUC2IUC2___New_orig__()"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIUC2IUC2IUC2___New_orig__()

def itkMinimumImageFilterIUC2IUC2IUC2_cast(*args):
  """itkMinimumImageFilterIUC2IUC2IUC2_cast(itkLightObject obj) -> itkMinimumImageFilterIUC2IUC2IUC2"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIUC2IUC2IUC2_cast(*args)

class itkMinimumImageFilterIUC3IUC3IUC3(itkMinimumImageFilterIUC3IUC3IUC3_Superclass):
    """Proxy of C++ itkMinimumImageFilterIUC3IUC3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Input1ConvertibleToInput2Check = _itkMinimumImageFilterPython.itkMinimumImageFilterIUC3IUC3IUC3_Input1ConvertibleToInput2Check
    Input2ConvertibleToOutputCheck = _itkMinimumImageFilterPython.itkMinimumImageFilterIUC3IUC3IUC3_Input2ConvertibleToOutputCheck
    Input1LessThanInput2Check = _itkMinimumImageFilterPython.itkMinimumImageFilterIUC3IUC3IUC3_Input1LessThanInput2Check
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUC3IUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMinimumImageFilterPython.delete_itkMinimumImageFilterIUC3IUC3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumImageFilterIUC3IUC3IUC3"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUC3IUC3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumImageFilterIUC3IUC3IUC3"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUC3IUC3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumImageFilterIUC3IUC3IUC3
        
        Create a new object of the class itkMinimumImageFilterIUC3IUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumImageFilterIUC3IUC3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumImageFilterIUC3IUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumImageFilterIUC3IUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumImageFilterIUC3IUC3IUC3.GetPointer = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUC3IUC3IUC3_GetPointer,None,itkMinimumImageFilterIUC3IUC3IUC3)
itkMinimumImageFilterIUC3IUC3IUC3_swigregister = _itkMinimumImageFilterPython.itkMinimumImageFilterIUC3IUC3IUC3_swigregister
itkMinimumImageFilterIUC3IUC3IUC3_swigregister(itkMinimumImageFilterIUC3IUC3IUC3)

def itkMinimumImageFilterIUC3IUC3IUC3___New_orig__():
  """itkMinimumImageFilterIUC3IUC3IUC3___New_orig__()"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIUC3IUC3IUC3___New_orig__()

def itkMinimumImageFilterIUC3IUC3IUC3_cast(*args):
  """itkMinimumImageFilterIUC3IUC3IUC3_cast(itkLightObject obj) -> itkMinimumImageFilterIUC3IUC3IUC3"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIUC3IUC3IUC3_cast(*args)

class itkMinimumImageFilterIUL2IUL2IUL2(itkMinimumImageFilterIUL2IUL2IUL2_Superclass):
    """Proxy of C++ itkMinimumImageFilterIUL2IUL2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Input1ConvertibleToInput2Check = _itkMinimumImageFilterPython.itkMinimumImageFilterIUL2IUL2IUL2_Input1ConvertibleToInput2Check
    Input2ConvertibleToOutputCheck = _itkMinimumImageFilterPython.itkMinimumImageFilterIUL2IUL2IUL2_Input2ConvertibleToOutputCheck
    Input1LessThanInput2Check = _itkMinimumImageFilterPython.itkMinimumImageFilterIUL2IUL2IUL2_Input1LessThanInput2Check
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUL2IUL2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMinimumImageFilterPython.delete_itkMinimumImageFilterIUL2IUL2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumImageFilterIUL2IUL2IUL2"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUL2IUL2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumImageFilterIUL2IUL2IUL2"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUL2IUL2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumImageFilterIUL2IUL2IUL2
        
        Create a new object of the class itkMinimumImageFilterIUL2IUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumImageFilterIUL2IUL2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumImageFilterIUL2IUL2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumImageFilterIUL2IUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumImageFilterIUL2IUL2IUL2.GetPointer = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUL2IUL2IUL2_GetPointer,None,itkMinimumImageFilterIUL2IUL2IUL2)
itkMinimumImageFilterIUL2IUL2IUL2_swigregister = _itkMinimumImageFilterPython.itkMinimumImageFilterIUL2IUL2IUL2_swigregister
itkMinimumImageFilterIUL2IUL2IUL2_swigregister(itkMinimumImageFilterIUL2IUL2IUL2)

def itkMinimumImageFilterIUL2IUL2IUL2___New_orig__():
  """itkMinimumImageFilterIUL2IUL2IUL2___New_orig__()"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIUL2IUL2IUL2___New_orig__()

def itkMinimumImageFilterIUL2IUL2IUL2_cast(*args):
  """itkMinimumImageFilterIUL2IUL2IUL2_cast(itkLightObject obj) -> itkMinimumImageFilterIUL2IUL2IUL2"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIUL2IUL2IUL2_cast(*args)

class itkMinimumImageFilterIUL3IUL3IUL3(itkMinimumImageFilterIUL3IUL3IUL3_Superclass):
    """Proxy of C++ itkMinimumImageFilterIUL3IUL3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Input1ConvertibleToInput2Check = _itkMinimumImageFilterPython.itkMinimumImageFilterIUL3IUL3IUL3_Input1ConvertibleToInput2Check
    Input2ConvertibleToOutputCheck = _itkMinimumImageFilterPython.itkMinimumImageFilterIUL3IUL3IUL3_Input2ConvertibleToOutputCheck
    Input1LessThanInput2Check = _itkMinimumImageFilterPython.itkMinimumImageFilterIUL3IUL3IUL3_Input1LessThanInput2Check
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUL3IUL3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMinimumImageFilterPython.delete_itkMinimumImageFilterIUL3IUL3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumImageFilterIUL3IUL3IUL3"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUL3IUL3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumImageFilterIUL3IUL3IUL3"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUL3IUL3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumImageFilterIUL3IUL3IUL3
        
        Create a new object of the class itkMinimumImageFilterIUL3IUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumImageFilterIUL3IUL3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumImageFilterIUL3IUL3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumImageFilterIUL3IUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumImageFilterIUL3IUL3IUL3.GetPointer = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUL3IUL3IUL3_GetPointer,None,itkMinimumImageFilterIUL3IUL3IUL3)
itkMinimumImageFilterIUL3IUL3IUL3_swigregister = _itkMinimumImageFilterPython.itkMinimumImageFilterIUL3IUL3IUL3_swigregister
itkMinimumImageFilterIUL3IUL3IUL3_swigregister(itkMinimumImageFilterIUL3IUL3IUL3)

def itkMinimumImageFilterIUL3IUL3IUL3___New_orig__():
  """itkMinimumImageFilterIUL3IUL3IUL3___New_orig__()"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIUL3IUL3IUL3___New_orig__()

def itkMinimumImageFilterIUL3IUL3IUL3_cast(*args):
  """itkMinimumImageFilterIUL3IUL3IUL3_cast(itkLightObject obj) -> itkMinimumImageFilterIUL3IUL3IUL3"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIUL3IUL3IUL3_cast(*args)

class itkMinimumImageFilterIUS2IUS2IUS2(itkMinimumImageFilterIUS2IUS2IUS2_Superclass):
    """Proxy of C++ itkMinimumImageFilterIUS2IUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Input1ConvertibleToInput2Check = _itkMinimumImageFilterPython.itkMinimumImageFilterIUS2IUS2IUS2_Input1ConvertibleToInput2Check
    Input2ConvertibleToOutputCheck = _itkMinimumImageFilterPython.itkMinimumImageFilterIUS2IUS2IUS2_Input2ConvertibleToOutputCheck
    Input1LessThanInput2Check = _itkMinimumImageFilterPython.itkMinimumImageFilterIUS2IUS2IUS2_Input1LessThanInput2Check
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUS2IUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMinimumImageFilterPython.delete_itkMinimumImageFilterIUS2IUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumImageFilterIUS2IUS2IUS2"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUS2IUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumImageFilterIUS2IUS2IUS2"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUS2IUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumImageFilterIUS2IUS2IUS2
        
        Create a new object of the class itkMinimumImageFilterIUS2IUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumImageFilterIUS2IUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumImageFilterIUS2IUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumImageFilterIUS2IUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumImageFilterIUS2IUS2IUS2.GetPointer = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUS2IUS2IUS2_GetPointer,None,itkMinimumImageFilterIUS2IUS2IUS2)
itkMinimumImageFilterIUS2IUS2IUS2_swigregister = _itkMinimumImageFilterPython.itkMinimumImageFilterIUS2IUS2IUS2_swigregister
itkMinimumImageFilterIUS2IUS2IUS2_swigregister(itkMinimumImageFilterIUS2IUS2IUS2)

def itkMinimumImageFilterIUS2IUS2IUS2___New_orig__():
  """itkMinimumImageFilterIUS2IUS2IUS2___New_orig__()"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIUS2IUS2IUS2___New_orig__()

def itkMinimumImageFilterIUS2IUS2IUS2_cast(*args):
  """itkMinimumImageFilterIUS2IUS2IUS2_cast(itkLightObject obj) -> itkMinimumImageFilterIUS2IUS2IUS2"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIUS2IUS2IUS2_cast(*args)

class itkMinimumImageFilterIUS3IUS3IUS3(itkMinimumImageFilterIUS3IUS3IUS3_Superclass):
    """Proxy of C++ itkMinimumImageFilterIUS3IUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Input1ConvertibleToInput2Check = _itkMinimumImageFilterPython.itkMinimumImageFilterIUS3IUS3IUS3_Input1ConvertibleToInput2Check
    Input2ConvertibleToOutputCheck = _itkMinimumImageFilterPython.itkMinimumImageFilterIUS3IUS3IUS3_Input2ConvertibleToOutputCheck
    Input1LessThanInput2Check = _itkMinimumImageFilterPython.itkMinimumImageFilterIUS3IUS3IUS3_Input1LessThanInput2Check
    def __New_orig__():
        """__New_orig__()"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUS3IUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMinimumImageFilterPython.delete_itkMinimumImageFilterIUS3IUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkMinimumImageFilterIUS3IUS3IUS3"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUS3IUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMinimumImageFilterIUS3IUS3IUS3"""
        return _itkMinimumImageFilterPython.itkMinimumImageFilterIUS3IUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMinimumImageFilterIUS3IUS3IUS3
        
        Create a new object of the class itkMinimumImageFilterIUS3IUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMinimumImageFilterIUS3IUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMinimumImageFilterIUS3IUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMinimumImageFilterIUS3IUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMinimumImageFilterIUS3IUS3IUS3.GetPointer = new_instancemethod(_itkMinimumImageFilterPython.itkMinimumImageFilterIUS3IUS3IUS3_GetPointer,None,itkMinimumImageFilterIUS3IUS3IUS3)
itkMinimumImageFilterIUS3IUS3IUS3_swigregister = _itkMinimumImageFilterPython.itkMinimumImageFilterIUS3IUS3IUS3_swigregister
itkMinimumImageFilterIUS3IUS3IUS3_swigregister(itkMinimumImageFilterIUS3IUS3IUS3)

def itkMinimumImageFilterIUS3IUS3IUS3___New_orig__():
  """itkMinimumImageFilterIUS3IUS3IUS3___New_orig__()"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIUS3IUS3IUS3___New_orig__()

def itkMinimumImageFilterIUS3IUS3IUS3_cast(*args):
  """itkMinimumImageFilterIUS3IUS3IUS3_cast(itkLightObject obj) -> itkMinimumImageFilterIUS3IUS3IUS3"""
  return _itkMinimumImageFilterPython.itkMinimumImageFilterIUS3IUS3IUS3_cast(*args)



