# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkVectorCurvatureAnisotropicDiffusionImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkVectorCurvatureAnisotropicDiffusionImageFilterPython
            return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkVectorCurvatureAnisotropicDiffusionImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkVectorCurvatureAnisotropicDiffusionImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkVectorCurvatureAnisotropicDiffusionImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkAnisotropicDiffusionImageFilterPython
import itkDenseFiniteDifferenceImageFilterPython
import itkFiniteDifferenceImageFilterPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterAPython
import itkFiniteDifferenceFunctionPython
def itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_New():
  return itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33.New()

def itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_New():
  return itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22.New()

def itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_New():
  return itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33.New()

def itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_New():
  return itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22.New()

class itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22(itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22):
    """Proxy of C++ itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_ImageDimension
    InputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_InputHasNumericTraitsCheck
    OutputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_OutputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.delete_itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22
        
        Create a new object of the class itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22.GetPointer = new_instancemethod(_itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_GetPointer,None,itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22)
itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_swigregister = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_swigregister
itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_swigregister(itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22)

def itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22___New_orig__():
  """itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22___New_orig__()"""
  return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22___New_orig__()

def itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_cast(*args):
  """itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_cast(itkLightObject obj) -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22"""
  return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_cast(*args)

class itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33(itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33):
    """Proxy of C++ itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_ImageDimension
    InputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_InputHasNumericTraitsCheck
    OutputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_OutputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.delete_itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33
        
        Create a new object of the class itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33.GetPointer = new_instancemethod(_itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_GetPointer,None,itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33)
itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_swigregister = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_swigregister
itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_swigregister(itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33)

def itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33___New_orig__():
  """itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33___New_orig__()"""
  return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33___New_orig__()

def itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_cast(*args):
  """itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_cast(itkLightObject obj) -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33"""
  return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_cast(*args)

class itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22(itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22):
    """Proxy of C++ itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_ImageDimension
    InputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_InputHasNumericTraitsCheck
    OutputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_OutputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.delete_itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22
        
        Create a new object of the class itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22.GetPointer = new_instancemethod(_itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_GetPointer,None,itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22)
itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_swigregister = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_swigregister
itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_swigregister(itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22)

def itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22___New_orig__():
  """itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22___New_orig__()"""
  return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22___New_orig__()

def itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_cast(*args):
  """itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_cast(itkLightObject obj) -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22"""
  return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_cast(*args)

class itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33(itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33):
    """Proxy of C++ itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_ImageDimension
    InputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_InputHasNumericTraitsCheck
    OutputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_OutputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.delete_itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33
        
        Create a new object of the class itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33.GetPointer = new_instancemethod(_itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_GetPointer,None,itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33)
itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_swigregister = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_swigregister
itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_swigregister(itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33)

def itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33___New_orig__():
  """itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33___New_orig__()"""
  return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33___New_orig__()

def itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_cast(*args):
  """itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_cast(itkLightObject obj) -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33"""
  return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_cast(*args)



