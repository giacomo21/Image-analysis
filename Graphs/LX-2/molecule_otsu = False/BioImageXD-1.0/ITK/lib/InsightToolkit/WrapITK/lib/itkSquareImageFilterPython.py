# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkSquareImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkSquareImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkSquareImageFilterPython
            return _itkSquareImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkSquareImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkSquareImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkSquareImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterAPython
def itkSquareImageFilterID3ID3_New():
  return itkSquareImageFilterID3ID3.New()

def itkSquareImageFilterID3ID3_Superclass_New():
  return itkSquareImageFilterID3ID3_Superclass.New()

def itkSquareImageFilterID2ID2_New():
  return itkSquareImageFilterID2ID2.New()

def itkSquareImageFilterID2ID2_Superclass_New():
  return itkSquareImageFilterID2ID2_Superclass.New()

def itkSquareImageFilterIF3IF3_New():
  return itkSquareImageFilterIF3IF3.New()

def itkSquareImageFilterIF3IF3_Superclass_New():
  return itkSquareImageFilterIF3IF3_Superclass.New()

def itkSquareImageFilterIF2IF2_New():
  return itkSquareImageFilterIF2IF2.New()

def itkSquareImageFilterIF2IF2_Superclass_New():
  return itkSquareImageFilterIF2IF2_Superclass.New()

def itkSquareImageFilterIUS3IUS3_New():
  return itkSquareImageFilterIUS3IUS3.New()

def itkSquareImageFilterIUS3IUS3_Superclass_New():
  return itkSquareImageFilterIUS3IUS3_Superclass.New()

def itkSquareImageFilterIUS2IUS2_New():
  return itkSquareImageFilterIUS2IUS2.New()

def itkSquareImageFilterIUS2IUS2_Superclass_New():
  return itkSquareImageFilterIUS2IUS2_Superclass.New()

def itkSquareImageFilterIUL3IUL3_New():
  return itkSquareImageFilterIUL3IUL3.New()

def itkSquareImageFilterIUL3IUL3_Superclass_New():
  return itkSquareImageFilterIUL3IUL3_Superclass.New()

def itkSquareImageFilterIUL2IUL2_New():
  return itkSquareImageFilterIUL2IUL2.New()

def itkSquareImageFilterIUL2IUL2_Superclass_New():
  return itkSquareImageFilterIUL2IUL2_Superclass.New()

def itkSquareImageFilterIUC3IUC3_New():
  return itkSquareImageFilterIUC3IUC3.New()

def itkSquareImageFilterIUC3IUC3_Superclass_New():
  return itkSquareImageFilterIUC3IUC3_Superclass.New()

def itkSquareImageFilterIUC2IUC2_New():
  return itkSquareImageFilterIUC2IUC2.New()

def itkSquareImageFilterIUC2IUC2_Superclass_New():
  return itkSquareImageFilterIUC2IUC2_Superclass.New()

class itkSquareImageFilterID2ID2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    """Proxy of C++ itkSquareImageFilterID2ID2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkSquareImageFilterPython.itkSquareImageFilterID2ID2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Square<(double,double)>
        GetFunctor(self) -> itk::Function::Square<(double,double)>
        """
        return _itkSquareImageFilterPython.itkSquareImageFilterID2ID2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Square<(double,double)> functor)"""
        return _itkSquareImageFilterPython.itkSquareImageFilterID2ID2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkSquareImageFilterPython.delete_itkSquareImageFilterID2ID2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSquareImageFilterID2ID2_Superclass"""
        return _itkSquareImageFilterPython.itkSquareImageFilterID2ID2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSquareImageFilterID2ID2_Superclass"""
        return _itkSquareImageFilterPython.itkSquareImageFilterID2ID2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSquareImageFilterID2ID2_Superclass
        
        Create a new object of the class itkSquareImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSquareImageFilterID2ID2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSquareImageFilterID2ID2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSquareImageFilterID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSquareImageFilterID2ID2_Superclass.GetFunctor = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterID2ID2_Superclass_GetFunctor,None,itkSquareImageFilterID2ID2_Superclass)
itkSquareImageFilterID2ID2_Superclass.SetFunctor = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterID2ID2_Superclass_SetFunctor,None,itkSquareImageFilterID2ID2_Superclass)
itkSquareImageFilterID2ID2_Superclass.GetPointer = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterID2ID2_Superclass_GetPointer,None,itkSquareImageFilterID2ID2_Superclass)
itkSquareImageFilterID2ID2_Superclass_swigregister = _itkSquareImageFilterPython.itkSquareImageFilterID2ID2_Superclass_swigregister
itkSquareImageFilterID2ID2_Superclass_swigregister(itkSquareImageFilterID2ID2_Superclass)

def itkSquareImageFilterID2ID2_Superclass___New_orig__():
  """itkSquareImageFilterID2ID2_Superclass___New_orig__()"""
  return _itkSquareImageFilterPython.itkSquareImageFilterID2ID2_Superclass___New_orig__()

def itkSquareImageFilterID2ID2_Superclass_cast(*args):
  """itkSquareImageFilterID2ID2_Superclass_cast(itkLightObject obj) -> itkSquareImageFilterID2ID2_Superclass"""
  return _itkSquareImageFilterPython.itkSquareImageFilterID2ID2_Superclass_cast(*args)

class itkSquareImageFilterID3ID3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    """Proxy of C++ itkSquareImageFilterID3ID3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkSquareImageFilterPython.itkSquareImageFilterID3ID3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Square<(double,double)>
        GetFunctor(self) -> itk::Function::Square<(double,double)>
        """
        return _itkSquareImageFilterPython.itkSquareImageFilterID3ID3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Square<(double,double)> functor)"""
        return _itkSquareImageFilterPython.itkSquareImageFilterID3ID3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkSquareImageFilterPython.delete_itkSquareImageFilterID3ID3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSquareImageFilterID3ID3_Superclass"""
        return _itkSquareImageFilterPython.itkSquareImageFilterID3ID3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSquareImageFilterID3ID3_Superclass"""
        return _itkSquareImageFilterPython.itkSquareImageFilterID3ID3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSquareImageFilterID3ID3_Superclass
        
        Create a new object of the class itkSquareImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSquareImageFilterID3ID3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSquareImageFilterID3ID3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSquareImageFilterID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSquareImageFilterID3ID3_Superclass.GetFunctor = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterID3ID3_Superclass_GetFunctor,None,itkSquareImageFilterID3ID3_Superclass)
itkSquareImageFilterID3ID3_Superclass.SetFunctor = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterID3ID3_Superclass_SetFunctor,None,itkSquareImageFilterID3ID3_Superclass)
itkSquareImageFilterID3ID3_Superclass.GetPointer = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterID3ID3_Superclass_GetPointer,None,itkSquareImageFilterID3ID3_Superclass)
itkSquareImageFilterID3ID3_Superclass_swigregister = _itkSquareImageFilterPython.itkSquareImageFilterID3ID3_Superclass_swigregister
itkSquareImageFilterID3ID3_Superclass_swigregister(itkSquareImageFilterID3ID3_Superclass)

def itkSquareImageFilterID3ID3_Superclass___New_orig__():
  """itkSquareImageFilterID3ID3_Superclass___New_orig__()"""
  return _itkSquareImageFilterPython.itkSquareImageFilterID3ID3_Superclass___New_orig__()

def itkSquareImageFilterID3ID3_Superclass_cast(*args):
  """itkSquareImageFilterID3ID3_Superclass_cast(itkLightObject obj) -> itkSquareImageFilterID3ID3_Superclass"""
  return _itkSquareImageFilterPython.itkSquareImageFilterID3ID3_Superclass_cast(*args)

class itkSquareImageFilterIF2IF2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    """Proxy of C++ itkSquareImageFilterIF2IF2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIF2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Square<(float,float)>
        GetFunctor(self) -> itk::Function::Square<(float,float)>
        """
        return _itkSquareImageFilterPython.itkSquareImageFilterIF2IF2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Square<(float,float)> functor)"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIF2IF2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkSquareImageFilterPython.delete_itkSquareImageFilterIF2IF2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSquareImageFilterIF2IF2_Superclass"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIF2IF2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSquareImageFilterIF2IF2_Superclass"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIF2IF2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSquareImageFilterIF2IF2_Superclass
        
        Create a new object of the class itkSquareImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSquareImageFilterIF2IF2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSquareImageFilterIF2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSquareImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSquareImageFilterIF2IF2_Superclass.GetFunctor = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIF2IF2_Superclass_GetFunctor,None,itkSquareImageFilterIF2IF2_Superclass)
itkSquareImageFilterIF2IF2_Superclass.SetFunctor = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIF2IF2_Superclass_SetFunctor,None,itkSquareImageFilterIF2IF2_Superclass)
itkSquareImageFilterIF2IF2_Superclass.GetPointer = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIF2IF2_Superclass_GetPointer,None,itkSquareImageFilterIF2IF2_Superclass)
itkSquareImageFilterIF2IF2_Superclass_swigregister = _itkSquareImageFilterPython.itkSquareImageFilterIF2IF2_Superclass_swigregister
itkSquareImageFilterIF2IF2_Superclass_swigregister(itkSquareImageFilterIF2IF2_Superclass)

def itkSquareImageFilterIF2IF2_Superclass___New_orig__():
  """itkSquareImageFilterIF2IF2_Superclass___New_orig__()"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIF2IF2_Superclass___New_orig__()

def itkSquareImageFilterIF2IF2_Superclass_cast(*args):
  """itkSquareImageFilterIF2IF2_Superclass_cast(itkLightObject obj) -> itkSquareImageFilterIF2IF2_Superclass"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIF2IF2_Superclass_cast(*args)

class itkSquareImageFilterIF3IF3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    """Proxy of C++ itkSquareImageFilterIF3IF3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIF3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Square<(float,float)>
        GetFunctor(self) -> itk::Function::Square<(float,float)>
        """
        return _itkSquareImageFilterPython.itkSquareImageFilterIF3IF3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Square<(float,float)> functor)"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIF3IF3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkSquareImageFilterPython.delete_itkSquareImageFilterIF3IF3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSquareImageFilterIF3IF3_Superclass"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIF3IF3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSquareImageFilterIF3IF3_Superclass"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIF3IF3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSquareImageFilterIF3IF3_Superclass
        
        Create a new object of the class itkSquareImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSquareImageFilterIF3IF3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSquareImageFilterIF3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSquareImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSquareImageFilterIF3IF3_Superclass.GetFunctor = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIF3IF3_Superclass_GetFunctor,None,itkSquareImageFilterIF3IF3_Superclass)
itkSquareImageFilterIF3IF3_Superclass.SetFunctor = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIF3IF3_Superclass_SetFunctor,None,itkSquareImageFilterIF3IF3_Superclass)
itkSquareImageFilterIF3IF3_Superclass.GetPointer = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIF3IF3_Superclass_GetPointer,None,itkSquareImageFilterIF3IF3_Superclass)
itkSquareImageFilterIF3IF3_Superclass_swigregister = _itkSquareImageFilterPython.itkSquareImageFilterIF3IF3_Superclass_swigregister
itkSquareImageFilterIF3IF3_Superclass_swigregister(itkSquareImageFilterIF3IF3_Superclass)

def itkSquareImageFilterIF3IF3_Superclass___New_orig__():
  """itkSquareImageFilterIF3IF3_Superclass___New_orig__()"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIF3IF3_Superclass___New_orig__()

def itkSquareImageFilterIF3IF3_Superclass_cast(*args):
  """itkSquareImageFilterIF3IF3_Superclass_cast(itkLightObject obj) -> itkSquareImageFilterIF3IF3_Superclass"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIF3IF3_Superclass_cast(*args)

class itkSquareImageFilterIUC2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    """Proxy of C++ itkSquareImageFilterIUC2IUC2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUC2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Square<(unsigned char,unsigned char)>
        GetFunctor(self) -> itk::Function::Square<(unsigned char,unsigned char)>
        """
        return _itkSquareImageFilterPython.itkSquareImageFilterIUC2IUC2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Square<(unsigned char,unsigned char)> functor)"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUC2IUC2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkSquareImageFilterPython.delete_itkSquareImageFilterIUC2IUC2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSquareImageFilterIUC2IUC2_Superclass"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUC2IUC2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSquareImageFilterIUC2IUC2_Superclass"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUC2IUC2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSquareImageFilterIUC2IUC2_Superclass
        
        Create a new object of the class itkSquareImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSquareImageFilterIUC2IUC2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSquareImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSquareImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSquareImageFilterIUC2IUC2_Superclass.GetFunctor = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIUC2IUC2_Superclass_GetFunctor,None,itkSquareImageFilterIUC2IUC2_Superclass)
itkSquareImageFilterIUC2IUC2_Superclass.SetFunctor = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIUC2IUC2_Superclass_SetFunctor,None,itkSquareImageFilterIUC2IUC2_Superclass)
itkSquareImageFilterIUC2IUC2_Superclass.GetPointer = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIUC2IUC2_Superclass_GetPointer,None,itkSquareImageFilterIUC2IUC2_Superclass)
itkSquareImageFilterIUC2IUC2_Superclass_swigregister = _itkSquareImageFilterPython.itkSquareImageFilterIUC2IUC2_Superclass_swigregister
itkSquareImageFilterIUC2IUC2_Superclass_swigregister(itkSquareImageFilterIUC2IUC2_Superclass)

def itkSquareImageFilterIUC2IUC2_Superclass___New_orig__():
  """itkSquareImageFilterIUC2IUC2_Superclass___New_orig__()"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIUC2IUC2_Superclass___New_orig__()

def itkSquareImageFilterIUC2IUC2_Superclass_cast(*args):
  """itkSquareImageFilterIUC2IUC2_Superclass_cast(itkLightObject obj) -> itkSquareImageFilterIUC2IUC2_Superclass"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIUC2IUC2_Superclass_cast(*args)

class itkSquareImageFilterIUC3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    """Proxy of C++ itkSquareImageFilterIUC3IUC3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUC3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Square<(unsigned char,unsigned char)>
        GetFunctor(self) -> itk::Function::Square<(unsigned char,unsigned char)>
        """
        return _itkSquareImageFilterPython.itkSquareImageFilterIUC3IUC3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Square<(unsigned char,unsigned char)> functor)"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUC3IUC3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkSquareImageFilterPython.delete_itkSquareImageFilterIUC3IUC3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSquareImageFilterIUC3IUC3_Superclass"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUC3IUC3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSquareImageFilterIUC3IUC3_Superclass"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUC3IUC3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSquareImageFilterIUC3IUC3_Superclass
        
        Create a new object of the class itkSquareImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSquareImageFilterIUC3IUC3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSquareImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSquareImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSquareImageFilterIUC3IUC3_Superclass.GetFunctor = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIUC3IUC3_Superclass_GetFunctor,None,itkSquareImageFilterIUC3IUC3_Superclass)
itkSquareImageFilterIUC3IUC3_Superclass.SetFunctor = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIUC3IUC3_Superclass_SetFunctor,None,itkSquareImageFilterIUC3IUC3_Superclass)
itkSquareImageFilterIUC3IUC3_Superclass.GetPointer = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIUC3IUC3_Superclass_GetPointer,None,itkSquareImageFilterIUC3IUC3_Superclass)
itkSquareImageFilterIUC3IUC3_Superclass_swigregister = _itkSquareImageFilterPython.itkSquareImageFilterIUC3IUC3_Superclass_swigregister
itkSquareImageFilterIUC3IUC3_Superclass_swigregister(itkSquareImageFilterIUC3IUC3_Superclass)

def itkSquareImageFilterIUC3IUC3_Superclass___New_orig__():
  """itkSquareImageFilterIUC3IUC3_Superclass___New_orig__()"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIUC3IUC3_Superclass___New_orig__()

def itkSquareImageFilterIUC3IUC3_Superclass_cast(*args):
  """itkSquareImageFilterIUC3IUC3_Superclass_cast(itkLightObject obj) -> itkSquareImageFilterIUC3IUC3_Superclass"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIUC3IUC3_Superclass_cast(*args)

class itkSquareImageFilterIUL2IUL2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUL2):
    """Proxy of C++ itkSquareImageFilterIUL2IUL2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUL2IUL2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Square<(unsigned long,unsigned long)>
        GetFunctor(self) -> itk::Function::Square<(unsigned long,unsigned long)>
        """
        return _itkSquareImageFilterPython.itkSquareImageFilterIUL2IUL2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Square<(unsigned long,unsigned long)> functor)"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUL2IUL2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkSquareImageFilterPython.delete_itkSquareImageFilterIUL2IUL2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSquareImageFilterIUL2IUL2_Superclass"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUL2IUL2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSquareImageFilterIUL2IUL2_Superclass"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUL2IUL2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSquareImageFilterIUL2IUL2_Superclass
        
        Create a new object of the class itkSquareImageFilterIUL2IUL2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSquareImageFilterIUL2IUL2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSquareImageFilterIUL2IUL2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSquareImageFilterIUL2IUL2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSquareImageFilterIUL2IUL2_Superclass.GetFunctor = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIUL2IUL2_Superclass_GetFunctor,None,itkSquareImageFilterIUL2IUL2_Superclass)
itkSquareImageFilterIUL2IUL2_Superclass.SetFunctor = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIUL2IUL2_Superclass_SetFunctor,None,itkSquareImageFilterIUL2IUL2_Superclass)
itkSquareImageFilterIUL2IUL2_Superclass.GetPointer = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIUL2IUL2_Superclass_GetPointer,None,itkSquareImageFilterIUL2IUL2_Superclass)
itkSquareImageFilterIUL2IUL2_Superclass_swigregister = _itkSquareImageFilterPython.itkSquareImageFilterIUL2IUL2_Superclass_swigregister
itkSquareImageFilterIUL2IUL2_Superclass_swigregister(itkSquareImageFilterIUL2IUL2_Superclass)

def itkSquareImageFilterIUL2IUL2_Superclass___New_orig__():
  """itkSquareImageFilterIUL2IUL2_Superclass___New_orig__()"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIUL2IUL2_Superclass___New_orig__()

def itkSquareImageFilterIUL2IUL2_Superclass_cast(*args):
  """itkSquareImageFilterIUL2IUL2_Superclass_cast(itkLightObject obj) -> itkSquareImageFilterIUL2IUL2_Superclass"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIUL2IUL2_Superclass_cast(*args)

class itkSquareImageFilterIUL3IUL3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUL3):
    """Proxy of C++ itkSquareImageFilterIUL3IUL3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUL3IUL3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Square<(unsigned long,unsigned long)>
        GetFunctor(self) -> itk::Function::Square<(unsigned long,unsigned long)>
        """
        return _itkSquareImageFilterPython.itkSquareImageFilterIUL3IUL3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Square<(unsigned long,unsigned long)> functor)"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUL3IUL3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkSquareImageFilterPython.delete_itkSquareImageFilterIUL3IUL3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSquareImageFilterIUL3IUL3_Superclass"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUL3IUL3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSquareImageFilterIUL3IUL3_Superclass"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUL3IUL3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSquareImageFilterIUL3IUL3_Superclass
        
        Create a new object of the class itkSquareImageFilterIUL3IUL3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSquareImageFilterIUL3IUL3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSquareImageFilterIUL3IUL3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSquareImageFilterIUL3IUL3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSquareImageFilterIUL3IUL3_Superclass.GetFunctor = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIUL3IUL3_Superclass_GetFunctor,None,itkSquareImageFilterIUL3IUL3_Superclass)
itkSquareImageFilterIUL3IUL3_Superclass.SetFunctor = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIUL3IUL3_Superclass_SetFunctor,None,itkSquareImageFilterIUL3IUL3_Superclass)
itkSquareImageFilterIUL3IUL3_Superclass.GetPointer = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIUL3IUL3_Superclass_GetPointer,None,itkSquareImageFilterIUL3IUL3_Superclass)
itkSquareImageFilterIUL3IUL3_Superclass_swigregister = _itkSquareImageFilterPython.itkSquareImageFilterIUL3IUL3_Superclass_swigregister
itkSquareImageFilterIUL3IUL3_Superclass_swigregister(itkSquareImageFilterIUL3IUL3_Superclass)

def itkSquareImageFilterIUL3IUL3_Superclass___New_orig__():
  """itkSquareImageFilterIUL3IUL3_Superclass___New_orig__()"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIUL3IUL3_Superclass___New_orig__()

def itkSquareImageFilterIUL3IUL3_Superclass_cast(*args):
  """itkSquareImageFilterIUL3IUL3_Superclass_cast(itkLightObject obj) -> itkSquareImageFilterIUL3IUL3_Superclass"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIUL3IUL3_Superclass_cast(*args)

class itkSquareImageFilterIUS2IUS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    """Proxy of C++ itkSquareImageFilterIUS2IUS2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUS2IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Square<(unsigned short,unsigned short)>
        GetFunctor(self) -> itk::Function::Square<(unsigned short,unsigned short)>
        """
        return _itkSquareImageFilterPython.itkSquareImageFilterIUS2IUS2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Square<(unsigned short,unsigned short)> functor)"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUS2IUS2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkSquareImageFilterPython.delete_itkSquareImageFilterIUS2IUS2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSquareImageFilterIUS2IUS2_Superclass"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUS2IUS2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSquareImageFilterIUS2IUS2_Superclass"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUS2IUS2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSquareImageFilterIUS2IUS2_Superclass
        
        Create a new object of the class itkSquareImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSquareImageFilterIUS2IUS2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSquareImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSquareImageFilterIUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSquareImageFilterIUS2IUS2_Superclass.GetFunctor = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIUS2IUS2_Superclass_GetFunctor,None,itkSquareImageFilterIUS2IUS2_Superclass)
itkSquareImageFilterIUS2IUS2_Superclass.SetFunctor = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIUS2IUS2_Superclass_SetFunctor,None,itkSquareImageFilterIUS2IUS2_Superclass)
itkSquareImageFilterIUS2IUS2_Superclass.GetPointer = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIUS2IUS2_Superclass_GetPointer,None,itkSquareImageFilterIUS2IUS2_Superclass)
itkSquareImageFilterIUS2IUS2_Superclass_swigregister = _itkSquareImageFilterPython.itkSquareImageFilterIUS2IUS2_Superclass_swigregister
itkSquareImageFilterIUS2IUS2_Superclass_swigregister(itkSquareImageFilterIUS2IUS2_Superclass)

def itkSquareImageFilterIUS2IUS2_Superclass___New_orig__():
  """itkSquareImageFilterIUS2IUS2_Superclass___New_orig__()"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIUS2IUS2_Superclass___New_orig__()

def itkSquareImageFilterIUS2IUS2_Superclass_cast(*args):
  """itkSquareImageFilterIUS2IUS2_Superclass_cast(itkLightObject obj) -> itkSquareImageFilterIUS2IUS2_Superclass"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIUS2IUS2_Superclass_cast(*args)

class itkSquareImageFilterIUS3IUS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    """Proxy of C++ itkSquareImageFilterIUS3IUS3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUS3IUS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Square<(unsigned short,unsigned short)>
        GetFunctor(self) -> itk::Function::Square<(unsigned short,unsigned short)>
        """
        return _itkSquareImageFilterPython.itkSquareImageFilterIUS3IUS3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Square<(unsigned short,unsigned short)> functor)"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUS3IUS3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkSquareImageFilterPython.delete_itkSquareImageFilterIUS3IUS3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSquareImageFilterIUS3IUS3_Superclass"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUS3IUS3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSquareImageFilterIUS3IUS3_Superclass"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUS3IUS3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSquareImageFilterIUS3IUS3_Superclass
        
        Create a new object of the class itkSquareImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSquareImageFilterIUS3IUS3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSquareImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSquareImageFilterIUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSquareImageFilterIUS3IUS3_Superclass.GetFunctor = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIUS3IUS3_Superclass_GetFunctor,None,itkSquareImageFilterIUS3IUS3_Superclass)
itkSquareImageFilterIUS3IUS3_Superclass.SetFunctor = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIUS3IUS3_Superclass_SetFunctor,None,itkSquareImageFilterIUS3IUS3_Superclass)
itkSquareImageFilterIUS3IUS3_Superclass.GetPointer = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIUS3IUS3_Superclass_GetPointer,None,itkSquareImageFilterIUS3IUS3_Superclass)
itkSquareImageFilterIUS3IUS3_Superclass_swigregister = _itkSquareImageFilterPython.itkSquareImageFilterIUS3IUS3_Superclass_swigregister
itkSquareImageFilterIUS3IUS3_Superclass_swigregister(itkSquareImageFilterIUS3IUS3_Superclass)

def itkSquareImageFilterIUS3IUS3_Superclass___New_orig__():
  """itkSquareImageFilterIUS3IUS3_Superclass___New_orig__()"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIUS3IUS3_Superclass___New_orig__()

def itkSquareImageFilterIUS3IUS3_Superclass_cast(*args):
  """itkSquareImageFilterIUS3IUS3_Superclass_cast(itkLightObject obj) -> itkSquareImageFilterIUS3IUS3_Superclass"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIUS3IUS3_Superclass_cast(*args)

class itkSquareImageFilterID2ID2(itkSquareImageFilterID2ID2_Superclass):
    """Proxy of C++ itkSquareImageFilterID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputHasNumericTraitsCheck = _itkSquareImageFilterPython.itkSquareImageFilterID2ID2_InputHasNumericTraitsCheck
    RealTypeMultiplyOperatorCheck = _itkSquareImageFilterPython.itkSquareImageFilterID2ID2_RealTypeMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSquareImageFilterPython.itkSquareImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSquareImageFilterPython.delete_itkSquareImageFilterID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSquareImageFilterID2ID2"""
        return _itkSquareImageFilterPython.itkSquareImageFilterID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSquareImageFilterID2ID2"""
        return _itkSquareImageFilterPython.itkSquareImageFilterID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSquareImageFilterID2ID2
        
        Create a new object of the class itkSquareImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSquareImageFilterID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSquareImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSquareImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSquareImageFilterID2ID2.GetPointer = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterID2ID2_GetPointer,None,itkSquareImageFilterID2ID2)
itkSquareImageFilterID2ID2_swigregister = _itkSquareImageFilterPython.itkSquareImageFilterID2ID2_swigregister
itkSquareImageFilterID2ID2_swigregister(itkSquareImageFilterID2ID2)

def itkSquareImageFilterID2ID2___New_orig__():
  """itkSquareImageFilterID2ID2___New_orig__()"""
  return _itkSquareImageFilterPython.itkSquareImageFilterID2ID2___New_orig__()

def itkSquareImageFilterID2ID2_cast(*args):
  """itkSquareImageFilterID2ID2_cast(itkLightObject obj) -> itkSquareImageFilterID2ID2"""
  return _itkSquareImageFilterPython.itkSquareImageFilterID2ID2_cast(*args)

class itkSquareImageFilterID3ID3(itkSquareImageFilterID3ID3_Superclass):
    """Proxy of C++ itkSquareImageFilterID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputHasNumericTraitsCheck = _itkSquareImageFilterPython.itkSquareImageFilterID3ID3_InputHasNumericTraitsCheck
    RealTypeMultiplyOperatorCheck = _itkSquareImageFilterPython.itkSquareImageFilterID3ID3_RealTypeMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSquareImageFilterPython.itkSquareImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSquareImageFilterPython.delete_itkSquareImageFilterID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkSquareImageFilterID3ID3"""
        return _itkSquareImageFilterPython.itkSquareImageFilterID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSquareImageFilterID3ID3"""
        return _itkSquareImageFilterPython.itkSquareImageFilterID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSquareImageFilterID3ID3
        
        Create a new object of the class itkSquareImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSquareImageFilterID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSquareImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSquareImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSquareImageFilterID3ID3.GetPointer = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterID3ID3_GetPointer,None,itkSquareImageFilterID3ID3)
itkSquareImageFilterID3ID3_swigregister = _itkSquareImageFilterPython.itkSquareImageFilterID3ID3_swigregister
itkSquareImageFilterID3ID3_swigregister(itkSquareImageFilterID3ID3)

def itkSquareImageFilterID3ID3___New_orig__():
  """itkSquareImageFilterID3ID3___New_orig__()"""
  return _itkSquareImageFilterPython.itkSquareImageFilterID3ID3___New_orig__()

def itkSquareImageFilterID3ID3_cast(*args):
  """itkSquareImageFilterID3ID3_cast(itkLightObject obj) -> itkSquareImageFilterID3ID3"""
  return _itkSquareImageFilterPython.itkSquareImageFilterID3ID3_cast(*args)

class itkSquareImageFilterIF2IF2(itkSquareImageFilterIF2IF2_Superclass):
    """Proxy of C++ itkSquareImageFilterIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputHasNumericTraitsCheck = _itkSquareImageFilterPython.itkSquareImageFilterIF2IF2_InputHasNumericTraitsCheck
    RealTypeMultiplyOperatorCheck = _itkSquareImageFilterPython.itkSquareImageFilterIF2IF2_RealTypeMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSquareImageFilterPython.delete_itkSquareImageFilterIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSquareImageFilterIF2IF2"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSquareImageFilterIF2IF2"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSquareImageFilterIF2IF2
        
        Create a new object of the class itkSquareImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSquareImageFilterIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSquareImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSquareImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSquareImageFilterIF2IF2.GetPointer = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIF2IF2_GetPointer,None,itkSquareImageFilterIF2IF2)
itkSquareImageFilterIF2IF2_swigregister = _itkSquareImageFilterPython.itkSquareImageFilterIF2IF2_swigregister
itkSquareImageFilterIF2IF2_swigregister(itkSquareImageFilterIF2IF2)

def itkSquareImageFilterIF2IF2___New_orig__():
  """itkSquareImageFilterIF2IF2___New_orig__()"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIF2IF2___New_orig__()

def itkSquareImageFilterIF2IF2_cast(*args):
  """itkSquareImageFilterIF2IF2_cast(itkLightObject obj) -> itkSquareImageFilterIF2IF2"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIF2IF2_cast(*args)

class itkSquareImageFilterIF3IF3(itkSquareImageFilterIF3IF3_Superclass):
    """Proxy of C++ itkSquareImageFilterIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputHasNumericTraitsCheck = _itkSquareImageFilterPython.itkSquareImageFilterIF3IF3_InputHasNumericTraitsCheck
    RealTypeMultiplyOperatorCheck = _itkSquareImageFilterPython.itkSquareImageFilterIF3IF3_RealTypeMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSquareImageFilterPython.delete_itkSquareImageFilterIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkSquareImageFilterIF3IF3"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSquareImageFilterIF3IF3"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSquareImageFilterIF3IF3
        
        Create a new object of the class itkSquareImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSquareImageFilterIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSquareImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSquareImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSquareImageFilterIF3IF3.GetPointer = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIF3IF3_GetPointer,None,itkSquareImageFilterIF3IF3)
itkSquareImageFilterIF3IF3_swigregister = _itkSquareImageFilterPython.itkSquareImageFilterIF3IF3_swigregister
itkSquareImageFilterIF3IF3_swigregister(itkSquareImageFilterIF3IF3)

def itkSquareImageFilterIF3IF3___New_orig__():
  """itkSquareImageFilterIF3IF3___New_orig__()"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIF3IF3___New_orig__()

def itkSquareImageFilterIF3IF3_cast(*args):
  """itkSquareImageFilterIF3IF3_cast(itkLightObject obj) -> itkSquareImageFilterIF3IF3"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIF3IF3_cast(*args)

class itkSquareImageFilterIUC2IUC2(itkSquareImageFilterIUC2IUC2_Superclass):
    """Proxy of C++ itkSquareImageFilterIUC2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputHasNumericTraitsCheck = _itkSquareImageFilterPython.itkSquareImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    RealTypeMultiplyOperatorCheck = _itkSquareImageFilterPython.itkSquareImageFilterIUC2IUC2_RealTypeMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSquareImageFilterPython.delete_itkSquareImageFilterIUC2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSquareImageFilterIUC2IUC2"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUC2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSquareImageFilterIUC2IUC2"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUC2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSquareImageFilterIUC2IUC2
        
        Create a new object of the class itkSquareImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSquareImageFilterIUC2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSquareImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSquareImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSquareImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIUC2IUC2_GetPointer,None,itkSquareImageFilterIUC2IUC2)
itkSquareImageFilterIUC2IUC2_swigregister = _itkSquareImageFilterPython.itkSquareImageFilterIUC2IUC2_swigregister
itkSquareImageFilterIUC2IUC2_swigregister(itkSquareImageFilterIUC2IUC2)

def itkSquareImageFilterIUC2IUC2___New_orig__():
  """itkSquareImageFilterIUC2IUC2___New_orig__()"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIUC2IUC2___New_orig__()

def itkSquareImageFilterIUC2IUC2_cast(*args):
  """itkSquareImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkSquareImageFilterIUC2IUC2"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIUC2IUC2_cast(*args)

class itkSquareImageFilterIUC3IUC3(itkSquareImageFilterIUC3IUC3_Superclass):
    """Proxy of C++ itkSquareImageFilterIUC3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputHasNumericTraitsCheck = _itkSquareImageFilterPython.itkSquareImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    RealTypeMultiplyOperatorCheck = _itkSquareImageFilterPython.itkSquareImageFilterIUC3IUC3_RealTypeMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSquareImageFilterPython.delete_itkSquareImageFilterIUC3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkSquareImageFilterIUC3IUC3"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUC3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSquareImageFilterIUC3IUC3"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUC3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSquareImageFilterIUC3IUC3
        
        Create a new object of the class itkSquareImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSquareImageFilterIUC3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSquareImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSquareImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSquareImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIUC3IUC3_GetPointer,None,itkSquareImageFilterIUC3IUC3)
itkSquareImageFilterIUC3IUC3_swigregister = _itkSquareImageFilterPython.itkSquareImageFilterIUC3IUC3_swigregister
itkSquareImageFilterIUC3IUC3_swigregister(itkSquareImageFilterIUC3IUC3)

def itkSquareImageFilterIUC3IUC3___New_orig__():
  """itkSquareImageFilterIUC3IUC3___New_orig__()"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIUC3IUC3___New_orig__()

def itkSquareImageFilterIUC3IUC3_cast(*args):
  """itkSquareImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkSquareImageFilterIUC3IUC3"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIUC3IUC3_cast(*args)

class itkSquareImageFilterIUL2IUL2(itkSquareImageFilterIUL2IUL2_Superclass):
    """Proxy of C++ itkSquareImageFilterIUL2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputHasNumericTraitsCheck = _itkSquareImageFilterPython.itkSquareImageFilterIUL2IUL2_InputHasNumericTraitsCheck
    RealTypeMultiplyOperatorCheck = _itkSquareImageFilterPython.itkSquareImageFilterIUL2IUL2_RealTypeMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUL2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSquareImageFilterPython.delete_itkSquareImageFilterIUL2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSquareImageFilterIUL2IUL2"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUL2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSquareImageFilterIUL2IUL2"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUL2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSquareImageFilterIUL2IUL2
        
        Create a new object of the class itkSquareImageFilterIUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSquareImageFilterIUL2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSquareImageFilterIUL2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSquareImageFilterIUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSquareImageFilterIUL2IUL2.GetPointer = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIUL2IUL2_GetPointer,None,itkSquareImageFilterIUL2IUL2)
itkSquareImageFilterIUL2IUL2_swigregister = _itkSquareImageFilterPython.itkSquareImageFilterIUL2IUL2_swigregister
itkSquareImageFilterIUL2IUL2_swigregister(itkSquareImageFilterIUL2IUL2)

def itkSquareImageFilterIUL2IUL2___New_orig__():
  """itkSquareImageFilterIUL2IUL2___New_orig__()"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIUL2IUL2___New_orig__()

def itkSquareImageFilterIUL2IUL2_cast(*args):
  """itkSquareImageFilterIUL2IUL2_cast(itkLightObject obj) -> itkSquareImageFilterIUL2IUL2"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIUL2IUL2_cast(*args)

class itkSquareImageFilterIUL3IUL3(itkSquareImageFilterIUL3IUL3_Superclass):
    """Proxy of C++ itkSquareImageFilterIUL3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputHasNumericTraitsCheck = _itkSquareImageFilterPython.itkSquareImageFilterIUL3IUL3_InputHasNumericTraitsCheck
    RealTypeMultiplyOperatorCheck = _itkSquareImageFilterPython.itkSquareImageFilterIUL3IUL3_RealTypeMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUL3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSquareImageFilterPython.delete_itkSquareImageFilterIUL3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkSquareImageFilterIUL3IUL3"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUL3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSquareImageFilterIUL3IUL3"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUL3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSquareImageFilterIUL3IUL3
        
        Create a new object of the class itkSquareImageFilterIUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSquareImageFilterIUL3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSquareImageFilterIUL3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSquareImageFilterIUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSquareImageFilterIUL3IUL3.GetPointer = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIUL3IUL3_GetPointer,None,itkSquareImageFilterIUL3IUL3)
itkSquareImageFilterIUL3IUL3_swigregister = _itkSquareImageFilterPython.itkSquareImageFilterIUL3IUL3_swigregister
itkSquareImageFilterIUL3IUL3_swigregister(itkSquareImageFilterIUL3IUL3)

def itkSquareImageFilterIUL3IUL3___New_orig__():
  """itkSquareImageFilterIUL3IUL3___New_orig__()"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIUL3IUL3___New_orig__()

def itkSquareImageFilterIUL3IUL3_cast(*args):
  """itkSquareImageFilterIUL3IUL3_cast(itkLightObject obj) -> itkSquareImageFilterIUL3IUL3"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIUL3IUL3_cast(*args)

class itkSquareImageFilterIUS2IUS2(itkSquareImageFilterIUS2IUS2_Superclass):
    """Proxy of C++ itkSquareImageFilterIUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputHasNumericTraitsCheck = _itkSquareImageFilterPython.itkSquareImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    RealTypeMultiplyOperatorCheck = _itkSquareImageFilterPython.itkSquareImageFilterIUS2IUS2_RealTypeMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSquareImageFilterPython.delete_itkSquareImageFilterIUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSquareImageFilterIUS2IUS2"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSquareImageFilterIUS2IUS2"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSquareImageFilterIUS2IUS2
        
        Create a new object of the class itkSquareImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSquareImageFilterIUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSquareImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSquareImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSquareImageFilterIUS2IUS2.GetPointer = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIUS2IUS2_GetPointer,None,itkSquareImageFilterIUS2IUS2)
itkSquareImageFilterIUS2IUS2_swigregister = _itkSquareImageFilterPython.itkSquareImageFilterIUS2IUS2_swigregister
itkSquareImageFilterIUS2IUS2_swigregister(itkSquareImageFilterIUS2IUS2)

def itkSquareImageFilterIUS2IUS2___New_orig__():
  """itkSquareImageFilterIUS2IUS2___New_orig__()"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIUS2IUS2___New_orig__()

def itkSquareImageFilterIUS2IUS2_cast(*args):
  """itkSquareImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkSquareImageFilterIUS2IUS2"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIUS2IUS2_cast(*args)

class itkSquareImageFilterIUS3IUS3(itkSquareImageFilterIUS3IUS3_Superclass):
    """Proxy of C++ itkSquareImageFilterIUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputHasNumericTraitsCheck = _itkSquareImageFilterPython.itkSquareImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    RealTypeMultiplyOperatorCheck = _itkSquareImageFilterPython.itkSquareImageFilterIUS3IUS3_RealTypeMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSquareImageFilterPython.delete_itkSquareImageFilterIUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkSquareImageFilterIUS3IUS3"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSquareImageFilterIUS3IUS3"""
        return _itkSquareImageFilterPython.itkSquareImageFilterIUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSquareImageFilterIUS3IUS3
        
        Create a new object of the class itkSquareImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSquareImageFilterIUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSquareImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSquareImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSquareImageFilterIUS3IUS3.GetPointer = new_instancemethod(_itkSquareImageFilterPython.itkSquareImageFilterIUS3IUS3_GetPointer,None,itkSquareImageFilterIUS3IUS3)
itkSquareImageFilterIUS3IUS3_swigregister = _itkSquareImageFilterPython.itkSquareImageFilterIUS3IUS3_swigregister
itkSquareImageFilterIUS3IUS3_swigregister(itkSquareImageFilterIUS3IUS3)

def itkSquareImageFilterIUS3IUS3___New_orig__():
  """itkSquareImageFilterIUS3IUS3___New_orig__()"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIUS3IUS3___New_orig__()

def itkSquareImageFilterIUS3IUS3_cast(*args):
  """itkSquareImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkSquareImageFilterIUS3IUS3"""
  return _itkSquareImageFilterPython.itkSquareImageFilterIUS3IUS3_cast(*args)



