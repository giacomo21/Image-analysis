// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkSigmoidImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkSigmoidImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkSigmoidImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkSigmoidImageFilterJava
#endif
#ifdef SWIGLUA
%module itkSigmoidImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkSigmoidImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkSigmoidImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkSigmoidImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkSigmoidImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkSigmoidImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkSigmoidImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkSigmoidImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkSigmoidImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkSigmoidImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkSigmoidImageFilterPython
#endif
#ifdef SWIGR
%module itkSigmoidImageFilterR
#endif
#ifdef SWIGRUBY
%module itkSigmoidImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkSigmoidImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkSigmoidImageFilterTcl
#endif
#ifdef SWIGXML
%module itkSigmoidImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Numerics.includes"
#include "IntensityFilters.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkInPlaceImageFilterA.i
%import wrap_ITKRegions.i


%include itk.i
%include wrap_itkSigmoidImageFilter_ext.i


 class itkSigmoidImageFilterID2ID2_Pointer {
   public:
     itkSigmoidImageFilterID2ID2_Pointer();
     itkSigmoidImageFilterID2ID2_Pointer(itkSigmoidImageFilterID2ID2_Pointer const & p);
     itkSigmoidImageFilterID2ID2_Pointer(itkSigmoidImageFilterID2ID2 * p);
     ~itkSigmoidImageFilterID2ID2_Pointer();
     itkSigmoidImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSigmoidImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkSigmoidImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkSigmoidImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkSigmoidImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkSigmoidImageFilterID2ID2_Pointer const & r) const;
     itkSigmoidImageFilterID2ID2_Pointer & operator=(itkSigmoidImageFilterID2ID2_Pointer const & r);
     itkSigmoidImageFilterID2ID2_Pointer & operator=(itkSigmoidImageFilterID2ID2 * r);
     itkSigmoidImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSigmoidImageFilterID2ID2_Superclass : public itkInPlaceImageFilterID2ID2 {
   public:
     static itkSigmoidImageFilterID2ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Function::Sigmoid< double, double > & GetFunctor();
     itk::Function::Sigmoid< double, double > const & GetFunctor() const;
     void SetFunctor(itk::Function::Sigmoid< double, double > const & functor);
   private:
     itkSigmoidImageFilterID2ID2_Superclass(itkSigmoidImageFilterID2ID2_Superclass const & arg0);
     void operator=(itkSigmoidImageFilterID2ID2_Superclass const & arg0);
   protected:
     itkSigmoidImageFilterID2ID2_Superclass();
     ~itkSigmoidImageFilterID2ID2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkSigmoidImageFilterID2ID2_Superclass_Pointer {
   public:
     itkSigmoidImageFilterID2ID2_Superclass_Pointer();
     itkSigmoidImageFilterID2ID2_Superclass_Pointer(itkSigmoidImageFilterID2ID2_Superclass_Pointer const & p);
     itkSigmoidImageFilterID2ID2_Superclass_Pointer(itkSigmoidImageFilterID2ID2_Superclass * p);
     ~itkSigmoidImageFilterID2ID2_Superclass_Pointer();
     itkSigmoidImageFilterID2ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSigmoidImageFilterID2ID2_Superclass * GetPointer() const;
     bool operator<(itkSigmoidImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator>(itkSigmoidImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkSigmoidImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkSigmoidImageFilterID2ID2_Superclass_Pointer const & r) const;
     itkSigmoidImageFilterID2ID2_Superclass_Pointer & operator=(itkSigmoidImageFilterID2ID2_Superclass_Pointer const & r);
     itkSigmoidImageFilterID2ID2_Superclass_Pointer & operator=(itkSigmoidImageFilterID2ID2_Superclass * r);
     itkSigmoidImageFilterID2ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSigmoidImageFilterID3ID3_Pointer {
   public:
     itkSigmoidImageFilterID3ID3_Pointer();
     itkSigmoidImageFilterID3ID3_Pointer(itkSigmoidImageFilterID3ID3_Pointer const & p);
     itkSigmoidImageFilterID3ID3_Pointer(itkSigmoidImageFilterID3ID3 * p);
     ~itkSigmoidImageFilterID3ID3_Pointer();
     itkSigmoidImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSigmoidImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkSigmoidImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkSigmoidImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkSigmoidImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkSigmoidImageFilterID3ID3_Pointer const & r) const;
     itkSigmoidImageFilterID3ID3_Pointer & operator=(itkSigmoidImageFilterID3ID3_Pointer const & r);
     itkSigmoidImageFilterID3ID3_Pointer & operator=(itkSigmoidImageFilterID3ID3 * r);
     itkSigmoidImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSigmoidImageFilterID3ID3_Superclass : public itkInPlaceImageFilterID3ID3 {
   public:
     static itkSigmoidImageFilterID3ID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Function::Sigmoid< double, double > & GetFunctor();
     itk::Function::Sigmoid< double, double > const & GetFunctor() const;
     void SetFunctor(itk::Function::Sigmoid< double, double > const & functor);
   private:
     itkSigmoidImageFilterID3ID3_Superclass(itkSigmoidImageFilterID3ID3_Superclass const & arg0);
     void operator=(itkSigmoidImageFilterID3ID3_Superclass const & arg0);
   protected:
     itkSigmoidImageFilterID3ID3_Superclass();
     ~itkSigmoidImageFilterID3ID3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkSigmoidImageFilterID3ID3_Superclass_Pointer {
   public:
     itkSigmoidImageFilterID3ID3_Superclass_Pointer();
     itkSigmoidImageFilterID3ID3_Superclass_Pointer(itkSigmoidImageFilterID3ID3_Superclass_Pointer const & p);
     itkSigmoidImageFilterID3ID3_Superclass_Pointer(itkSigmoidImageFilterID3ID3_Superclass * p);
     ~itkSigmoidImageFilterID3ID3_Superclass_Pointer();
     itkSigmoidImageFilterID3ID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSigmoidImageFilterID3ID3_Superclass * GetPointer() const;
     bool operator<(itkSigmoidImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator>(itkSigmoidImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator<=(itkSigmoidImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator>=(itkSigmoidImageFilterID3ID3_Superclass_Pointer const & r) const;
     itkSigmoidImageFilterID3ID3_Superclass_Pointer & operator=(itkSigmoidImageFilterID3ID3_Superclass_Pointer const & r);
     itkSigmoidImageFilterID3ID3_Superclass_Pointer & operator=(itkSigmoidImageFilterID3ID3_Superclass * r);
     itkSigmoidImageFilterID3ID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSigmoidImageFilterIF2IF2_Pointer {
   public:
     itkSigmoidImageFilterIF2IF2_Pointer();
     itkSigmoidImageFilterIF2IF2_Pointer(itkSigmoidImageFilterIF2IF2_Pointer const & p);
     itkSigmoidImageFilterIF2IF2_Pointer(itkSigmoidImageFilterIF2IF2 * p);
     ~itkSigmoidImageFilterIF2IF2_Pointer();
     itkSigmoidImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSigmoidImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkSigmoidImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkSigmoidImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkSigmoidImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkSigmoidImageFilterIF2IF2_Pointer const & r) const;
     itkSigmoidImageFilterIF2IF2_Pointer & operator=(itkSigmoidImageFilterIF2IF2_Pointer const & r);
     itkSigmoidImageFilterIF2IF2_Pointer & operator=(itkSigmoidImageFilterIF2IF2 * r);
     itkSigmoidImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSigmoidImageFilterIF2IF2_Superclass : public itkInPlaceImageFilterIF2IF2 {
   public:
     static itkSigmoidImageFilterIF2IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Function::Sigmoid< float, float > & GetFunctor();
     itk::Function::Sigmoid< float, float > const & GetFunctor() const;
     void SetFunctor(itk::Function::Sigmoid< float, float > const & functor);
   private:
     itkSigmoidImageFilterIF2IF2_Superclass(itkSigmoidImageFilterIF2IF2_Superclass const & arg0);
     void operator=(itkSigmoidImageFilterIF2IF2_Superclass const & arg0);
   protected:
     itkSigmoidImageFilterIF2IF2_Superclass();
     ~itkSigmoidImageFilterIF2IF2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkSigmoidImageFilterIF2IF2_Superclass_Pointer {
   public:
     itkSigmoidImageFilterIF2IF2_Superclass_Pointer();
     itkSigmoidImageFilterIF2IF2_Superclass_Pointer(itkSigmoidImageFilterIF2IF2_Superclass_Pointer const & p);
     itkSigmoidImageFilterIF2IF2_Superclass_Pointer(itkSigmoidImageFilterIF2IF2_Superclass * p);
     ~itkSigmoidImageFilterIF2IF2_Superclass_Pointer();
     itkSigmoidImageFilterIF2IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSigmoidImageFilterIF2IF2_Superclass * GetPointer() const;
     bool operator<(itkSigmoidImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator>(itkSigmoidImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkSigmoidImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkSigmoidImageFilterIF2IF2_Superclass_Pointer const & r) const;
     itkSigmoidImageFilterIF2IF2_Superclass_Pointer & operator=(itkSigmoidImageFilterIF2IF2_Superclass_Pointer const & r);
     itkSigmoidImageFilterIF2IF2_Superclass_Pointer & operator=(itkSigmoidImageFilterIF2IF2_Superclass * r);
     itkSigmoidImageFilterIF2IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSigmoidImageFilterIF3IF3_Pointer {
   public:
     itkSigmoidImageFilterIF3IF3_Pointer();
     itkSigmoidImageFilterIF3IF3_Pointer(itkSigmoidImageFilterIF3IF3_Pointer const & p);
     itkSigmoidImageFilterIF3IF3_Pointer(itkSigmoidImageFilterIF3IF3 * p);
     ~itkSigmoidImageFilterIF3IF3_Pointer();
     itkSigmoidImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSigmoidImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkSigmoidImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkSigmoidImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkSigmoidImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkSigmoidImageFilterIF3IF3_Pointer const & r) const;
     itkSigmoidImageFilterIF3IF3_Pointer & operator=(itkSigmoidImageFilterIF3IF3_Pointer const & r);
     itkSigmoidImageFilterIF3IF3_Pointer & operator=(itkSigmoidImageFilterIF3IF3 * r);
     itkSigmoidImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSigmoidImageFilterIF3IF3_Superclass : public itkInPlaceImageFilterIF3IF3 {
   public:
     static itkSigmoidImageFilterIF3IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Function::Sigmoid< float, float > & GetFunctor();
     itk::Function::Sigmoid< float, float > const & GetFunctor() const;
     void SetFunctor(itk::Function::Sigmoid< float, float > const & functor);
   private:
     itkSigmoidImageFilterIF3IF3_Superclass(itkSigmoidImageFilterIF3IF3_Superclass const & arg0);
     void operator=(itkSigmoidImageFilterIF3IF3_Superclass const & arg0);
   protected:
     itkSigmoidImageFilterIF3IF3_Superclass();
     ~itkSigmoidImageFilterIF3IF3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkSigmoidImageFilterIF3IF3_Superclass_Pointer {
   public:
     itkSigmoidImageFilterIF3IF3_Superclass_Pointer();
     itkSigmoidImageFilterIF3IF3_Superclass_Pointer(itkSigmoidImageFilterIF3IF3_Superclass_Pointer const & p);
     itkSigmoidImageFilterIF3IF3_Superclass_Pointer(itkSigmoidImageFilterIF3IF3_Superclass * p);
     ~itkSigmoidImageFilterIF3IF3_Superclass_Pointer();
     itkSigmoidImageFilterIF3IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSigmoidImageFilterIF3IF3_Superclass * GetPointer() const;
     bool operator<(itkSigmoidImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator>(itkSigmoidImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkSigmoidImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkSigmoidImageFilterIF3IF3_Superclass_Pointer const & r) const;
     itkSigmoidImageFilterIF3IF3_Superclass_Pointer & operator=(itkSigmoidImageFilterIF3IF3_Superclass_Pointer const & r);
     itkSigmoidImageFilterIF3IF3_Superclass_Pointer & operator=(itkSigmoidImageFilterIF3IF3_Superclass * r);
     itkSigmoidImageFilterIF3IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSigmoidImageFilterIUC2IUC2_Pointer {
   public:
     itkSigmoidImageFilterIUC2IUC2_Pointer();
     itkSigmoidImageFilterIUC2IUC2_Pointer(itkSigmoidImageFilterIUC2IUC2_Pointer const & p);
     itkSigmoidImageFilterIUC2IUC2_Pointer(itkSigmoidImageFilterIUC2IUC2 * p);
     ~itkSigmoidImageFilterIUC2IUC2_Pointer();
     itkSigmoidImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSigmoidImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkSigmoidImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkSigmoidImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkSigmoidImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkSigmoidImageFilterIUC2IUC2_Pointer const & r) const;
     itkSigmoidImageFilterIUC2IUC2_Pointer & operator=(itkSigmoidImageFilterIUC2IUC2_Pointer const & r);
     itkSigmoidImageFilterIUC2IUC2_Pointer & operator=(itkSigmoidImageFilterIUC2IUC2 * r);
     itkSigmoidImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSigmoidImageFilterIUC2IUC2_Superclass : public itkInPlaceImageFilterIUC2IUC2 {
   public:
     static itkSigmoidImageFilterIUC2IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Function::Sigmoid< unsigned char, unsigned char > & GetFunctor();
     itk::Function::Sigmoid< unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Function::Sigmoid< unsigned char, unsigned char > const & functor);
   private:
     itkSigmoidImageFilterIUC2IUC2_Superclass(itkSigmoidImageFilterIUC2IUC2_Superclass const & arg0);
     void operator=(itkSigmoidImageFilterIUC2IUC2_Superclass const & arg0);
   protected:
     itkSigmoidImageFilterIUC2IUC2_Superclass();
     ~itkSigmoidImageFilterIUC2IUC2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkSigmoidImageFilterIUC2IUC2_Superclass_Pointer {
   public:
     itkSigmoidImageFilterIUC2IUC2_Superclass_Pointer();
     itkSigmoidImageFilterIUC2IUC2_Superclass_Pointer(itkSigmoidImageFilterIUC2IUC2_Superclass_Pointer const & p);
     itkSigmoidImageFilterIUC2IUC2_Superclass_Pointer(itkSigmoidImageFilterIUC2IUC2_Superclass * p);
     ~itkSigmoidImageFilterIUC2IUC2_Superclass_Pointer();
     itkSigmoidImageFilterIUC2IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSigmoidImageFilterIUC2IUC2_Superclass * GetPointer() const;
     bool operator<(itkSigmoidImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkSigmoidImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkSigmoidImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkSigmoidImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     itkSigmoidImageFilterIUC2IUC2_Superclass_Pointer & operator=(itkSigmoidImageFilterIUC2IUC2_Superclass_Pointer const & r);
     itkSigmoidImageFilterIUC2IUC2_Superclass_Pointer & operator=(itkSigmoidImageFilterIUC2IUC2_Superclass * r);
     itkSigmoidImageFilterIUC2IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSigmoidImageFilterIUC3IUC3_Pointer {
   public:
     itkSigmoidImageFilterIUC3IUC3_Pointer();
     itkSigmoidImageFilterIUC3IUC3_Pointer(itkSigmoidImageFilterIUC3IUC3_Pointer const & p);
     itkSigmoidImageFilterIUC3IUC3_Pointer(itkSigmoidImageFilterIUC3IUC3 * p);
     ~itkSigmoidImageFilterIUC3IUC3_Pointer();
     itkSigmoidImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSigmoidImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkSigmoidImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkSigmoidImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkSigmoidImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkSigmoidImageFilterIUC3IUC3_Pointer const & r) const;
     itkSigmoidImageFilterIUC3IUC3_Pointer & operator=(itkSigmoidImageFilterIUC3IUC3_Pointer const & r);
     itkSigmoidImageFilterIUC3IUC3_Pointer & operator=(itkSigmoidImageFilterIUC3IUC3 * r);
     itkSigmoidImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSigmoidImageFilterIUC3IUC3_Superclass : public itkInPlaceImageFilterIUC3IUC3 {
   public:
     static itkSigmoidImageFilterIUC3IUC3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Function::Sigmoid< unsigned char, unsigned char > & GetFunctor();
     itk::Function::Sigmoid< unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Function::Sigmoid< unsigned char, unsigned char > const & functor);
   private:
     itkSigmoidImageFilterIUC3IUC3_Superclass(itkSigmoidImageFilterIUC3IUC3_Superclass const & arg0);
     void operator=(itkSigmoidImageFilterIUC3IUC3_Superclass const & arg0);
   protected:
     itkSigmoidImageFilterIUC3IUC3_Superclass();
     ~itkSigmoidImageFilterIUC3IUC3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkSigmoidImageFilterIUC3IUC3_Superclass_Pointer {
   public:
     itkSigmoidImageFilterIUC3IUC3_Superclass_Pointer();
     itkSigmoidImageFilterIUC3IUC3_Superclass_Pointer(itkSigmoidImageFilterIUC3IUC3_Superclass_Pointer const & p);
     itkSigmoidImageFilterIUC3IUC3_Superclass_Pointer(itkSigmoidImageFilterIUC3IUC3_Superclass * p);
     ~itkSigmoidImageFilterIUC3IUC3_Superclass_Pointer();
     itkSigmoidImageFilterIUC3IUC3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSigmoidImageFilterIUC3IUC3_Superclass * GetPointer() const;
     bool operator<(itkSigmoidImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>(itkSigmoidImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator<=(itkSigmoidImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>=(itkSigmoidImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     itkSigmoidImageFilterIUC3IUC3_Superclass_Pointer & operator=(itkSigmoidImageFilterIUC3IUC3_Superclass_Pointer const & r);
     itkSigmoidImageFilterIUC3IUC3_Superclass_Pointer & operator=(itkSigmoidImageFilterIUC3IUC3_Superclass * r);
     itkSigmoidImageFilterIUC3IUC3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSigmoidImageFilterIUL2IUL2_Pointer {
   public:
     itkSigmoidImageFilterIUL2IUL2_Pointer();
     itkSigmoidImageFilterIUL2IUL2_Pointer(itkSigmoidImageFilterIUL2IUL2_Pointer const & p);
     itkSigmoidImageFilterIUL2IUL2_Pointer(itkSigmoidImageFilterIUL2IUL2 * p);
     ~itkSigmoidImageFilterIUL2IUL2_Pointer();
     itkSigmoidImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSigmoidImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkSigmoidImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkSigmoidImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkSigmoidImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkSigmoidImageFilterIUL2IUL2_Pointer const & r) const;
     itkSigmoidImageFilterIUL2IUL2_Pointer & operator=(itkSigmoidImageFilterIUL2IUL2_Pointer const & r);
     itkSigmoidImageFilterIUL2IUL2_Pointer & operator=(itkSigmoidImageFilterIUL2IUL2 * r);
     itkSigmoidImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSigmoidImageFilterIUL2IUL2_Superclass : public itkInPlaceImageFilterIUL2IUL2 {
   public:
     static itkSigmoidImageFilterIUL2IUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Function::Sigmoid< unsigned long, unsigned long > & GetFunctor();
     itk::Function::Sigmoid< unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Function::Sigmoid< unsigned long, unsigned long > const & functor);
   private:
     itkSigmoidImageFilterIUL2IUL2_Superclass(itkSigmoidImageFilterIUL2IUL2_Superclass const & arg0);
     void operator=(itkSigmoidImageFilterIUL2IUL2_Superclass const & arg0);
   protected:
     itkSigmoidImageFilterIUL2IUL2_Superclass();
     ~itkSigmoidImageFilterIUL2IUL2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkSigmoidImageFilterIUL2IUL2_Superclass_Pointer {
   public:
     itkSigmoidImageFilterIUL2IUL2_Superclass_Pointer();
     itkSigmoidImageFilterIUL2IUL2_Superclass_Pointer(itkSigmoidImageFilterIUL2IUL2_Superclass_Pointer const & p);
     itkSigmoidImageFilterIUL2IUL2_Superclass_Pointer(itkSigmoidImageFilterIUL2IUL2_Superclass * p);
     ~itkSigmoidImageFilterIUL2IUL2_Superclass_Pointer();
     itkSigmoidImageFilterIUL2IUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSigmoidImageFilterIUL2IUL2_Superclass * GetPointer() const;
     bool operator<(itkSigmoidImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>(itkSigmoidImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkSigmoidImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkSigmoidImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     itkSigmoidImageFilterIUL2IUL2_Superclass_Pointer & operator=(itkSigmoidImageFilterIUL2IUL2_Superclass_Pointer const & r);
     itkSigmoidImageFilterIUL2IUL2_Superclass_Pointer & operator=(itkSigmoidImageFilterIUL2IUL2_Superclass * r);
     itkSigmoidImageFilterIUL2IUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSigmoidImageFilterIUL3IUL3_Pointer {
   public:
     itkSigmoidImageFilterIUL3IUL3_Pointer();
     itkSigmoidImageFilterIUL3IUL3_Pointer(itkSigmoidImageFilterIUL3IUL3_Pointer const & p);
     itkSigmoidImageFilterIUL3IUL3_Pointer(itkSigmoidImageFilterIUL3IUL3 * p);
     ~itkSigmoidImageFilterIUL3IUL3_Pointer();
     itkSigmoidImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSigmoidImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkSigmoidImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkSigmoidImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkSigmoidImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkSigmoidImageFilterIUL3IUL3_Pointer const & r) const;
     itkSigmoidImageFilterIUL3IUL3_Pointer & operator=(itkSigmoidImageFilterIUL3IUL3_Pointer const & r);
     itkSigmoidImageFilterIUL3IUL3_Pointer & operator=(itkSigmoidImageFilterIUL3IUL3 * r);
     itkSigmoidImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSigmoidImageFilterIUL3IUL3_Superclass : public itkInPlaceImageFilterIUL3IUL3 {
   public:
     static itkSigmoidImageFilterIUL3IUL3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Function::Sigmoid< unsigned long, unsigned long > & GetFunctor();
     itk::Function::Sigmoid< unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Function::Sigmoid< unsigned long, unsigned long > const & functor);
   private:
     itkSigmoidImageFilterIUL3IUL3_Superclass(itkSigmoidImageFilterIUL3IUL3_Superclass const & arg0);
     void operator=(itkSigmoidImageFilterIUL3IUL3_Superclass const & arg0);
   protected:
     itkSigmoidImageFilterIUL3IUL3_Superclass();
     ~itkSigmoidImageFilterIUL3IUL3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkSigmoidImageFilterIUL3IUL3_Superclass_Pointer {
   public:
     itkSigmoidImageFilterIUL3IUL3_Superclass_Pointer();
     itkSigmoidImageFilterIUL3IUL3_Superclass_Pointer(itkSigmoidImageFilterIUL3IUL3_Superclass_Pointer const & p);
     itkSigmoidImageFilterIUL3IUL3_Superclass_Pointer(itkSigmoidImageFilterIUL3IUL3_Superclass * p);
     ~itkSigmoidImageFilterIUL3IUL3_Superclass_Pointer();
     itkSigmoidImageFilterIUL3IUL3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSigmoidImageFilterIUL3IUL3_Superclass * GetPointer() const;
     bool operator<(itkSigmoidImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>(itkSigmoidImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator<=(itkSigmoidImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>=(itkSigmoidImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     itkSigmoidImageFilterIUL3IUL3_Superclass_Pointer & operator=(itkSigmoidImageFilterIUL3IUL3_Superclass_Pointer const & r);
     itkSigmoidImageFilterIUL3IUL3_Superclass_Pointer & operator=(itkSigmoidImageFilterIUL3IUL3_Superclass * r);
     itkSigmoidImageFilterIUL3IUL3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSigmoidImageFilterIUS2IUS2_Pointer {
   public:
     itkSigmoidImageFilterIUS2IUS2_Pointer();
     itkSigmoidImageFilterIUS2IUS2_Pointer(itkSigmoidImageFilterIUS2IUS2_Pointer const & p);
     itkSigmoidImageFilterIUS2IUS2_Pointer(itkSigmoidImageFilterIUS2IUS2 * p);
     ~itkSigmoidImageFilterIUS2IUS2_Pointer();
     itkSigmoidImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSigmoidImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkSigmoidImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkSigmoidImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkSigmoidImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkSigmoidImageFilterIUS2IUS2_Pointer const & r) const;
     itkSigmoidImageFilterIUS2IUS2_Pointer & operator=(itkSigmoidImageFilterIUS2IUS2_Pointer const & r);
     itkSigmoidImageFilterIUS2IUS2_Pointer & operator=(itkSigmoidImageFilterIUS2IUS2 * r);
     itkSigmoidImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSigmoidImageFilterIUS2IUS2_Superclass : public itkInPlaceImageFilterIUS2IUS2 {
   public:
     static itkSigmoidImageFilterIUS2IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Function::Sigmoid< unsigned short, unsigned short > & GetFunctor();
     itk::Function::Sigmoid< unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Function::Sigmoid< unsigned short, unsigned short > const & functor);
   private:
     itkSigmoidImageFilterIUS2IUS2_Superclass(itkSigmoidImageFilterIUS2IUS2_Superclass const & arg0);
     void operator=(itkSigmoidImageFilterIUS2IUS2_Superclass const & arg0);
   protected:
     itkSigmoidImageFilterIUS2IUS2_Superclass();
     ~itkSigmoidImageFilterIUS2IUS2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkSigmoidImageFilterIUS2IUS2_Superclass_Pointer {
   public:
     itkSigmoidImageFilterIUS2IUS2_Superclass_Pointer();
     itkSigmoidImageFilterIUS2IUS2_Superclass_Pointer(itkSigmoidImageFilterIUS2IUS2_Superclass_Pointer const & p);
     itkSigmoidImageFilterIUS2IUS2_Superclass_Pointer(itkSigmoidImageFilterIUS2IUS2_Superclass * p);
     ~itkSigmoidImageFilterIUS2IUS2_Superclass_Pointer();
     itkSigmoidImageFilterIUS2IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSigmoidImageFilterIUS2IUS2_Superclass * GetPointer() const;
     bool operator<(itkSigmoidImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkSigmoidImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkSigmoidImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkSigmoidImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     itkSigmoidImageFilterIUS2IUS2_Superclass_Pointer & operator=(itkSigmoidImageFilterIUS2IUS2_Superclass_Pointer const & r);
     itkSigmoidImageFilterIUS2IUS2_Superclass_Pointer & operator=(itkSigmoidImageFilterIUS2IUS2_Superclass * r);
     itkSigmoidImageFilterIUS2IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSigmoidImageFilterIUS3IUS3_Pointer {
   public:
     itkSigmoidImageFilterIUS3IUS3_Pointer();
     itkSigmoidImageFilterIUS3IUS3_Pointer(itkSigmoidImageFilterIUS3IUS3_Pointer const & p);
     itkSigmoidImageFilterIUS3IUS3_Pointer(itkSigmoidImageFilterIUS3IUS3 * p);
     ~itkSigmoidImageFilterIUS3IUS3_Pointer();
     itkSigmoidImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSigmoidImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkSigmoidImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkSigmoidImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkSigmoidImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkSigmoidImageFilterIUS3IUS3_Pointer const & r) const;
     itkSigmoidImageFilterIUS3IUS3_Pointer & operator=(itkSigmoidImageFilterIUS3IUS3_Pointer const & r);
     itkSigmoidImageFilterIUS3IUS3_Pointer & operator=(itkSigmoidImageFilterIUS3IUS3 * r);
     itkSigmoidImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSigmoidImageFilterIUS3IUS3_Superclass : public itkInPlaceImageFilterIUS3IUS3 {
   public:
     static itkSigmoidImageFilterIUS3IUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Function::Sigmoid< unsigned short, unsigned short > & GetFunctor();
     itk::Function::Sigmoid< unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Function::Sigmoid< unsigned short, unsigned short > const & functor);
   private:
     itkSigmoidImageFilterIUS3IUS3_Superclass(itkSigmoidImageFilterIUS3IUS3_Superclass const & arg0);
     void operator=(itkSigmoidImageFilterIUS3IUS3_Superclass const & arg0);
   protected:
     itkSigmoidImageFilterIUS3IUS3_Superclass();
     ~itkSigmoidImageFilterIUS3IUS3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkSigmoidImageFilterIUS3IUS3_Superclass_Pointer {
   public:
     itkSigmoidImageFilterIUS3IUS3_Superclass_Pointer();
     itkSigmoidImageFilterIUS3IUS3_Superclass_Pointer(itkSigmoidImageFilterIUS3IUS3_Superclass_Pointer const & p);
     itkSigmoidImageFilterIUS3IUS3_Superclass_Pointer(itkSigmoidImageFilterIUS3IUS3_Superclass * p);
     ~itkSigmoidImageFilterIUS3IUS3_Superclass_Pointer();
     itkSigmoidImageFilterIUS3IUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSigmoidImageFilterIUS3IUS3_Superclass * GetPointer() const;
     bool operator<(itkSigmoidImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>(itkSigmoidImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkSigmoidImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkSigmoidImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     itkSigmoidImageFilterIUS3IUS3_Superclass_Pointer & operator=(itkSigmoidImageFilterIUS3IUS3_Superclass_Pointer const & r);
     itkSigmoidImageFilterIUS3IUS3_Superclass_Pointer & operator=(itkSigmoidImageFilterIUS3IUS3_Superclass * r);
     itkSigmoidImageFilterIUS3IUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSigmoidImageFilterID2ID2 : public itkSigmoidImageFilterID2ID2_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  OutputAdditiveOperatorsCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  OutputTimesDoubleCheck = 1 };
     enum  {  OutputDoubleAdditiveOperatorsCheck = 1 };
     static itkSigmoidImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetAlpha(double alpha);
     void SetBeta(double beta);
     void SetOutputMinimum(double min);
     void SetOutputMaximum(double max);
   private:
     itkSigmoidImageFilterID2ID2(itkSigmoidImageFilterID2ID2 const & arg0);
     void operator=(itkSigmoidImageFilterID2ID2 const & arg0);
   protected:
     itkSigmoidImageFilterID2ID2();
     ~itkSigmoidImageFilterID2ID2();
 };


 class itkSigmoidImageFilterID3ID3 : public itkSigmoidImageFilterID3ID3_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  OutputAdditiveOperatorsCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  OutputTimesDoubleCheck = 1 };
     enum  {  OutputDoubleAdditiveOperatorsCheck = 1 };
     static itkSigmoidImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetAlpha(double alpha);
     void SetBeta(double beta);
     void SetOutputMinimum(double min);
     void SetOutputMaximum(double max);
   private:
     itkSigmoidImageFilterID3ID3(itkSigmoidImageFilterID3ID3 const & arg0);
     void operator=(itkSigmoidImageFilterID3ID3 const & arg0);
   protected:
     itkSigmoidImageFilterID3ID3();
     ~itkSigmoidImageFilterID3ID3();
 };


 class itkSigmoidImageFilterIF2IF2 : public itkSigmoidImageFilterIF2IF2_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  OutputAdditiveOperatorsCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  OutputTimesDoubleCheck = 1 };
     enum  {  OutputDoubleAdditiveOperatorsCheck = 1 };
     static itkSigmoidImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetAlpha(double alpha);
     void SetBeta(double beta);
     void SetOutputMinimum(float min);
     void SetOutputMaximum(float max);
   private:
     itkSigmoidImageFilterIF2IF2(itkSigmoidImageFilterIF2IF2 const & arg0);
     void operator=(itkSigmoidImageFilterIF2IF2 const & arg0);
   protected:
     itkSigmoidImageFilterIF2IF2();
     ~itkSigmoidImageFilterIF2IF2();
 };


 class itkSigmoidImageFilterIF3IF3 : public itkSigmoidImageFilterIF3IF3_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  OutputAdditiveOperatorsCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  OutputTimesDoubleCheck = 1 };
     enum  {  OutputDoubleAdditiveOperatorsCheck = 1 };
     static itkSigmoidImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetAlpha(double alpha);
     void SetBeta(double beta);
     void SetOutputMinimum(float min);
     void SetOutputMaximum(float max);
   private:
     itkSigmoidImageFilterIF3IF3(itkSigmoidImageFilterIF3IF3 const & arg0);
     void operator=(itkSigmoidImageFilterIF3IF3 const & arg0);
   protected:
     itkSigmoidImageFilterIF3IF3();
     ~itkSigmoidImageFilterIF3IF3();
 };


 class itkSigmoidImageFilterIUC2IUC2 : public itkSigmoidImageFilterIUC2IUC2_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  OutputAdditiveOperatorsCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  OutputTimesDoubleCheck = 1 };
     enum  {  OutputDoubleAdditiveOperatorsCheck = 1 };
     static itkSigmoidImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetAlpha(double alpha);
     void SetBeta(double beta);
     void SetOutputMinimum(unsigned char min);
     void SetOutputMaximum(unsigned char max);
   private:
     itkSigmoidImageFilterIUC2IUC2(itkSigmoidImageFilterIUC2IUC2 const & arg0);
     void operator=(itkSigmoidImageFilterIUC2IUC2 const & arg0);
   protected:
     itkSigmoidImageFilterIUC2IUC2();
     ~itkSigmoidImageFilterIUC2IUC2();
 };


 class itkSigmoidImageFilterIUC3IUC3 : public itkSigmoidImageFilterIUC3IUC3_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  OutputAdditiveOperatorsCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  OutputTimesDoubleCheck = 1 };
     enum  {  OutputDoubleAdditiveOperatorsCheck = 1 };
     static itkSigmoidImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetAlpha(double alpha);
     void SetBeta(double beta);
     void SetOutputMinimum(unsigned char min);
     void SetOutputMaximum(unsigned char max);
   private:
     itkSigmoidImageFilterIUC3IUC3(itkSigmoidImageFilterIUC3IUC3 const & arg0);
     void operator=(itkSigmoidImageFilterIUC3IUC3 const & arg0);
   protected:
     itkSigmoidImageFilterIUC3IUC3();
     ~itkSigmoidImageFilterIUC3IUC3();
 };


 class itkSigmoidImageFilterIUL2IUL2 : public itkSigmoidImageFilterIUL2IUL2_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  OutputAdditiveOperatorsCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  OutputTimesDoubleCheck = 1 };
     enum  {  OutputDoubleAdditiveOperatorsCheck = 1 };
     static itkSigmoidImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetAlpha(double alpha);
     void SetBeta(double beta);
     void SetOutputMinimum(unsigned long min);
     void SetOutputMaximum(unsigned long max);
   private:
     itkSigmoidImageFilterIUL2IUL2(itkSigmoidImageFilterIUL2IUL2 const & arg0);
     void operator=(itkSigmoidImageFilterIUL2IUL2 const & arg0);
   protected:
     itkSigmoidImageFilterIUL2IUL2();
     ~itkSigmoidImageFilterIUL2IUL2();
 };


 class itkSigmoidImageFilterIUL3IUL3 : public itkSigmoidImageFilterIUL3IUL3_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  OutputAdditiveOperatorsCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  OutputTimesDoubleCheck = 1 };
     enum  {  OutputDoubleAdditiveOperatorsCheck = 1 };
     static itkSigmoidImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetAlpha(double alpha);
     void SetBeta(double beta);
     void SetOutputMinimum(unsigned long min);
     void SetOutputMaximum(unsigned long max);
   private:
     itkSigmoidImageFilterIUL3IUL3(itkSigmoidImageFilterIUL3IUL3 const & arg0);
     void operator=(itkSigmoidImageFilterIUL3IUL3 const & arg0);
   protected:
     itkSigmoidImageFilterIUL3IUL3();
     ~itkSigmoidImageFilterIUL3IUL3();
 };


 class itkSigmoidImageFilterIUS2IUS2 : public itkSigmoidImageFilterIUS2IUS2_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  OutputAdditiveOperatorsCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  OutputTimesDoubleCheck = 1 };
     enum  {  OutputDoubleAdditiveOperatorsCheck = 1 };
     static itkSigmoidImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetAlpha(double alpha);
     void SetBeta(double beta);
     void SetOutputMinimum(unsigned short min);
     void SetOutputMaximum(unsigned short max);
   private:
     itkSigmoidImageFilterIUS2IUS2(itkSigmoidImageFilterIUS2IUS2 const & arg0);
     void operator=(itkSigmoidImageFilterIUS2IUS2 const & arg0);
   protected:
     itkSigmoidImageFilterIUS2IUS2();
     ~itkSigmoidImageFilterIUS2IUS2();
 };


 class itkSigmoidImageFilterIUS3IUS3 : public itkSigmoidImageFilterIUS3IUS3_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  OutputAdditiveOperatorsCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  OutputTimesDoubleCheck = 1 };
     enum  {  OutputDoubleAdditiveOperatorsCheck = 1 };
     static itkSigmoidImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetAlpha(double alpha);
     void SetBeta(double beta);
     void SetOutputMinimum(unsigned short min);
     void SetOutputMaximum(unsigned short max);
   private:
     itkSigmoidImageFilterIUS3IUS3(itkSigmoidImageFilterIUS3IUS3 const & arg0);
     void operator=(itkSigmoidImageFilterIUS3IUS3 const & arg0);
   protected:
     itkSigmoidImageFilterIUS3IUS3();
     ~itkSigmoidImageFilterIUS3IUS3();
 };


