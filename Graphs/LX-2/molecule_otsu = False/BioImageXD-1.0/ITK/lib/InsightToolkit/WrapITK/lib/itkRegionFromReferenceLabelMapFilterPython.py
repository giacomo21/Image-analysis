# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkRegionFromReferenceLabelMapFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkRegionFromReferenceLabelMapFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkRegionFromReferenceLabelMapFilterPython
            return _itkRegionFromReferenceLabelMapFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkRegionFromReferenceLabelMapFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkRegionFromReferenceLabelMapFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkRegionFromReferenceLabelMapFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkChangeRegionLabelMapFilterPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkStatisticsLabelObjectPython
import itkPointPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkFixedArrayPython
import itkVectorPython
import vnl_vector_refPython
import itkAffineTransformPython
import itkTransformPython
import itkCovariantVectorPython
import itkArray2DPython
import itkArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkMatrixOffsetTransformBasePython
import itkLabelObjectPython
import itkLabelObjectLinePython
import itkShapeLabelObjectPython
import itkHistogramPython
import itkSamplePython
import itkInPlaceLabelMapFilterPython
import itkLabelMapFilterPython
import itkLabelMapPython
import itkImagePython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import ITKLabelMapBasePython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
def itkRegionFromReferenceLabelMapFilterLM3_New():
  return itkRegionFromReferenceLabelMapFilterLM3.New()

def itkRegionFromReferenceLabelMapFilterLM2_New():
  return itkRegionFromReferenceLabelMapFilterLM2.New()

class itkRegionFromReferenceLabelMapFilterLM2(itkChangeRegionLabelMapFilterPython.itkChangeRegionLabelMapFilterLM2):
    """Proxy of C++ itkRegionFromReferenceLabelMapFilterLM2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM2_InputImageDimension
    OutputImageDimension = _itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM2_OutputImageDimension
    ImageDimension = _itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetReferenceImage(self, *args):
        """SetReferenceImage(self, itkImageBase2 image)"""
        return _itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM2_SetReferenceImage(self, *args)

    def GetReferenceImage(self):
        """GetReferenceImage(self) -> itkImageBase2"""
        return _itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM2_GetReferenceImage(self)

    def SetInput1(self, *args):
        """SetInput1(self, itkLabelMap2 input)"""
        return _itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM2_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageBase2 input)"""
        return _itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM2_SetInput2(self, *args)

    __swig_destroy__ = _itkRegionFromReferenceLabelMapFilterPython.delete_itkRegionFromReferenceLabelMapFilterLM2
    def cast(*args):
        """cast(itkLightObject obj) -> itkRegionFromReferenceLabelMapFilterLM2"""
        return _itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkRegionFromReferenceLabelMapFilterLM2"""
        return _itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkRegionFromReferenceLabelMapFilterLM2
        
        Create a new object of the class itkRegionFromReferenceLabelMapFilterLM2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkRegionFromReferenceLabelMapFilterLM2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkRegionFromReferenceLabelMapFilterLM2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRegionFromReferenceLabelMapFilterLM2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRegionFromReferenceLabelMapFilterLM2.SetReferenceImage = new_instancemethod(_itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM2_SetReferenceImage,None,itkRegionFromReferenceLabelMapFilterLM2)
itkRegionFromReferenceLabelMapFilterLM2.GetReferenceImage = new_instancemethod(_itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM2_GetReferenceImage,None,itkRegionFromReferenceLabelMapFilterLM2)
itkRegionFromReferenceLabelMapFilterLM2.SetInput1 = new_instancemethod(_itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM2_SetInput1,None,itkRegionFromReferenceLabelMapFilterLM2)
itkRegionFromReferenceLabelMapFilterLM2.SetInput2 = new_instancemethod(_itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM2_SetInput2,None,itkRegionFromReferenceLabelMapFilterLM2)
itkRegionFromReferenceLabelMapFilterLM2.GetPointer = new_instancemethod(_itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM2_GetPointer,None,itkRegionFromReferenceLabelMapFilterLM2)
itkRegionFromReferenceLabelMapFilterLM2_swigregister = _itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM2_swigregister
itkRegionFromReferenceLabelMapFilterLM2_swigregister(itkRegionFromReferenceLabelMapFilterLM2)

def itkRegionFromReferenceLabelMapFilterLM2___New_orig__():
  """itkRegionFromReferenceLabelMapFilterLM2___New_orig__()"""
  return _itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM2___New_orig__()

def itkRegionFromReferenceLabelMapFilterLM2_cast(*args):
  """itkRegionFromReferenceLabelMapFilterLM2_cast(itkLightObject obj) -> itkRegionFromReferenceLabelMapFilterLM2"""
  return _itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM2_cast(*args)

class itkRegionFromReferenceLabelMapFilterLM3(itkChangeRegionLabelMapFilterPython.itkChangeRegionLabelMapFilterLM3):
    """Proxy of C++ itkRegionFromReferenceLabelMapFilterLM3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM3_InputImageDimension
    OutputImageDimension = _itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM3_OutputImageDimension
    ImageDimension = _itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetReferenceImage(self, *args):
        """SetReferenceImage(self, itkImageBase3 image)"""
        return _itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM3_SetReferenceImage(self, *args)

    def GetReferenceImage(self):
        """GetReferenceImage(self) -> itkImageBase3"""
        return _itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM3_GetReferenceImage(self)

    def SetInput1(self, *args):
        """SetInput1(self, itkLabelMap3 input)"""
        return _itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM3_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageBase3 input)"""
        return _itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM3_SetInput2(self, *args)

    __swig_destroy__ = _itkRegionFromReferenceLabelMapFilterPython.delete_itkRegionFromReferenceLabelMapFilterLM3
    def cast(*args):
        """cast(itkLightObject obj) -> itkRegionFromReferenceLabelMapFilterLM3"""
        return _itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkRegionFromReferenceLabelMapFilterLM3"""
        return _itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkRegionFromReferenceLabelMapFilterLM3
        
        Create a new object of the class itkRegionFromReferenceLabelMapFilterLM3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkRegionFromReferenceLabelMapFilterLM3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkRegionFromReferenceLabelMapFilterLM3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRegionFromReferenceLabelMapFilterLM3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRegionFromReferenceLabelMapFilterLM3.SetReferenceImage = new_instancemethod(_itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM3_SetReferenceImage,None,itkRegionFromReferenceLabelMapFilterLM3)
itkRegionFromReferenceLabelMapFilterLM3.GetReferenceImage = new_instancemethod(_itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM3_GetReferenceImage,None,itkRegionFromReferenceLabelMapFilterLM3)
itkRegionFromReferenceLabelMapFilterLM3.SetInput1 = new_instancemethod(_itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM3_SetInput1,None,itkRegionFromReferenceLabelMapFilterLM3)
itkRegionFromReferenceLabelMapFilterLM3.SetInput2 = new_instancemethod(_itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM3_SetInput2,None,itkRegionFromReferenceLabelMapFilterLM3)
itkRegionFromReferenceLabelMapFilterLM3.GetPointer = new_instancemethod(_itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM3_GetPointer,None,itkRegionFromReferenceLabelMapFilterLM3)
itkRegionFromReferenceLabelMapFilterLM3_swigregister = _itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM3_swigregister
itkRegionFromReferenceLabelMapFilterLM3_swigregister(itkRegionFromReferenceLabelMapFilterLM3)

def itkRegionFromReferenceLabelMapFilterLM3___New_orig__():
  """itkRegionFromReferenceLabelMapFilterLM3___New_orig__()"""
  return _itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM3___New_orig__()

def itkRegionFromReferenceLabelMapFilterLM3_cast(*args):
  """itkRegionFromReferenceLabelMapFilterLM3_cast(itkLightObject obj) -> itkRegionFromReferenceLabelMapFilterLM3"""
  return _itkRegionFromReferenceLabelMapFilterPython.itkRegionFromReferenceLabelMapFilterLM3_cast(*args)



