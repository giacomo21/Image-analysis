// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkMultiplyByConstantImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkMultiplyByConstantImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkMultiplyByConstantImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkMultiplyByConstantImageFilterJava
#endif
#ifdef SWIGLUA
%module itkMultiplyByConstantImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkMultiplyByConstantImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkMultiplyByConstantImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkMultiplyByConstantImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkMultiplyByConstantImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkMultiplyByConstantImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkMultiplyByConstantImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkMultiplyByConstantImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkMultiplyByConstantImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkMultiplyByConstantImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkMultiplyByConstantImageFilterPython
#endif
#ifdef SWIGR
%module itkMultiplyByConstantImageFilterR
#endif
#ifdef SWIGRUBY
%module itkMultiplyByConstantImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkMultiplyByConstantImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkMultiplyByConstantImageFilterTcl
#endif
#ifdef SWIGXML
%module itkMultiplyByConstantImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Review.includes"
%}


%{
%}




%import wrap_vcl_complex.i
%import wrap_ITKRegions.i
%import wrap_itkInPlaceImageFilterB.i
%import wrap_ITKCommonBase.i
%import wrap_itkInPlaceImageFilterA.i


%include itk.i
%include wrap_itkMultiplyByConstantImageFilter_ext.i


 class itkMultiplyByConstantImageFilterICF2CFICF2_Pointer {
   public:
     itkMultiplyByConstantImageFilterICF2CFICF2_Pointer();
     itkMultiplyByConstantImageFilterICF2CFICF2_Pointer(itkMultiplyByConstantImageFilterICF2CFICF2_Pointer const & p);
     itkMultiplyByConstantImageFilterICF2CFICF2_Pointer(itkMultiplyByConstantImageFilterICF2CFICF2 * p);
     ~itkMultiplyByConstantImageFilterICF2CFICF2_Pointer();
     itkMultiplyByConstantImageFilterICF2CFICF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyByConstantImageFilterICF2CFICF2 * GetPointer() const;
     bool operator<(itkMultiplyByConstantImageFilterICF2CFICF2_Pointer const & r) const;
     bool operator>(itkMultiplyByConstantImageFilterICF2CFICF2_Pointer const & r) const;
     bool operator<=(itkMultiplyByConstantImageFilterICF2CFICF2_Pointer const & r) const;
     bool operator>=(itkMultiplyByConstantImageFilterICF2CFICF2_Pointer const & r) const;
     itkMultiplyByConstantImageFilterICF2CFICF2_Pointer & operator=(itkMultiplyByConstantImageFilterICF2CFICF2_Pointer const & r);
     itkMultiplyByConstantImageFilterICF2CFICF2_Pointer & operator=(itkMultiplyByConstantImageFilterICF2CFICF2 * r);
     itkMultiplyByConstantImageFilterICF2CFICF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyByConstantImageFilterICF2CFICF2_Superclass : public itkInPlaceImageFilterICF2ICF2 {
   public:
     static itkMultiplyByConstantImageFilterICF2CFICF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::MultiplyByConstant< std::complex< float >, std::complex< float >, std::complex< float > > & GetFunctor();
     itk::Functor::MultiplyByConstant< std::complex< float >, std::complex< float >, std::complex< float > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MultiplyByConstant< std::complex< float >, std::complex< float >, std::complex< float > > const & functor);
   private:
     itkMultiplyByConstantImageFilterICF2CFICF2_Superclass(itkMultiplyByConstantImageFilterICF2CFICF2_Superclass const & arg0);
     void operator=(itkMultiplyByConstantImageFilterICF2CFICF2_Superclass const & arg0);
   protected:
     itkMultiplyByConstantImageFilterICF2CFICF2_Superclass();
     ~itkMultiplyByConstantImageFilterICF2CFICF2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMultiplyByConstantImageFilterICF2CFICF2_Superclass_Pointer {
   public:
     itkMultiplyByConstantImageFilterICF2CFICF2_Superclass_Pointer();
     itkMultiplyByConstantImageFilterICF2CFICF2_Superclass_Pointer(itkMultiplyByConstantImageFilterICF2CFICF2_Superclass_Pointer const & p);
     itkMultiplyByConstantImageFilterICF2CFICF2_Superclass_Pointer(itkMultiplyByConstantImageFilterICF2CFICF2_Superclass * p);
     ~itkMultiplyByConstantImageFilterICF2CFICF2_Superclass_Pointer();
     itkMultiplyByConstantImageFilterICF2CFICF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyByConstantImageFilterICF2CFICF2_Superclass * GetPointer() const;
     bool operator<(itkMultiplyByConstantImageFilterICF2CFICF2_Superclass_Pointer const & r) const;
     bool operator>(itkMultiplyByConstantImageFilterICF2CFICF2_Superclass_Pointer const & r) const;
     bool operator<=(itkMultiplyByConstantImageFilterICF2CFICF2_Superclass_Pointer const & r) const;
     bool operator>=(itkMultiplyByConstantImageFilterICF2CFICF2_Superclass_Pointer const & r) const;
     itkMultiplyByConstantImageFilterICF2CFICF2_Superclass_Pointer & operator=(itkMultiplyByConstantImageFilterICF2CFICF2_Superclass_Pointer const & r);
     itkMultiplyByConstantImageFilterICF2CFICF2_Superclass_Pointer & operator=(itkMultiplyByConstantImageFilterICF2CFICF2_Superclass * r);
     itkMultiplyByConstantImageFilterICF2CFICF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyByConstantImageFilterICF3CFICF3_Pointer {
   public:
     itkMultiplyByConstantImageFilterICF3CFICF3_Pointer();
     itkMultiplyByConstantImageFilterICF3CFICF3_Pointer(itkMultiplyByConstantImageFilterICF3CFICF3_Pointer const & p);
     itkMultiplyByConstantImageFilterICF3CFICF3_Pointer(itkMultiplyByConstantImageFilterICF3CFICF3 * p);
     ~itkMultiplyByConstantImageFilterICF3CFICF3_Pointer();
     itkMultiplyByConstantImageFilterICF3CFICF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyByConstantImageFilterICF3CFICF3 * GetPointer() const;
     bool operator<(itkMultiplyByConstantImageFilterICF3CFICF3_Pointer const & r) const;
     bool operator>(itkMultiplyByConstantImageFilterICF3CFICF3_Pointer const & r) const;
     bool operator<=(itkMultiplyByConstantImageFilterICF3CFICF3_Pointer const & r) const;
     bool operator>=(itkMultiplyByConstantImageFilterICF3CFICF3_Pointer const & r) const;
     itkMultiplyByConstantImageFilterICF3CFICF3_Pointer & operator=(itkMultiplyByConstantImageFilterICF3CFICF3_Pointer const & r);
     itkMultiplyByConstantImageFilterICF3CFICF3_Pointer & operator=(itkMultiplyByConstantImageFilterICF3CFICF3 * r);
     itkMultiplyByConstantImageFilterICF3CFICF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyByConstantImageFilterICF3CFICF3_Superclass : public itkInPlaceImageFilterICF3ICF3 {
   public:
     static itkMultiplyByConstantImageFilterICF3CFICF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::MultiplyByConstant< std::complex< float >, std::complex< float >, std::complex< float > > & GetFunctor();
     itk::Functor::MultiplyByConstant< std::complex< float >, std::complex< float >, std::complex< float > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MultiplyByConstant< std::complex< float >, std::complex< float >, std::complex< float > > const & functor);
   private:
     itkMultiplyByConstantImageFilterICF3CFICF3_Superclass(itkMultiplyByConstantImageFilterICF3CFICF3_Superclass const & arg0);
     void operator=(itkMultiplyByConstantImageFilterICF3CFICF3_Superclass const & arg0);
   protected:
     itkMultiplyByConstantImageFilterICF3CFICF3_Superclass();
     ~itkMultiplyByConstantImageFilterICF3CFICF3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMultiplyByConstantImageFilterICF3CFICF3_Superclass_Pointer {
   public:
     itkMultiplyByConstantImageFilterICF3CFICF3_Superclass_Pointer();
     itkMultiplyByConstantImageFilterICF3CFICF3_Superclass_Pointer(itkMultiplyByConstantImageFilterICF3CFICF3_Superclass_Pointer const & p);
     itkMultiplyByConstantImageFilterICF3CFICF3_Superclass_Pointer(itkMultiplyByConstantImageFilterICF3CFICF3_Superclass * p);
     ~itkMultiplyByConstantImageFilterICF3CFICF3_Superclass_Pointer();
     itkMultiplyByConstantImageFilterICF3CFICF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyByConstantImageFilterICF3CFICF3_Superclass * GetPointer() const;
     bool operator<(itkMultiplyByConstantImageFilterICF3CFICF3_Superclass_Pointer const & r) const;
     bool operator>(itkMultiplyByConstantImageFilterICF3CFICF3_Superclass_Pointer const & r) const;
     bool operator<=(itkMultiplyByConstantImageFilterICF3CFICF3_Superclass_Pointer const & r) const;
     bool operator>=(itkMultiplyByConstantImageFilterICF3CFICF3_Superclass_Pointer const & r) const;
     itkMultiplyByConstantImageFilterICF3CFICF3_Superclass_Pointer & operator=(itkMultiplyByConstantImageFilterICF3CFICF3_Superclass_Pointer const & r);
     itkMultiplyByConstantImageFilterICF3CFICF3_Superclass_Pointer & operator=(itkMultiplyByConstantImageFilterICF3CFICF3_Superclass * r);
     itkMultiplyByConstantImageFilterICF3CFICF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyByConstantImageFilterID2DID2_Pointer {
   public:
     itkMultiplyByConstantImageFilterID2DID2_Pointer();
     itkMultiplyByConstantImageFilterID2DID2_Pointer(itkMultiplyByConstantImageFilterID2DID2_Pointer const & p);
     itkMultiplyByConstantImageFilterID2DID2_Pointer(itkMultiplyByConstantImageFilterID2DID2 * p);
     ~itkMultiplyByConstantImageFilterID2DID2_Pointer();
     itkMultiplyByConstantImageFilterID2DID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyByConstantImageFilterID2DID2 * GetPointer() const;
     bool operator<(itkMultiplyByConstantImageFilterID2DID2_Pointer const & r) const;
     bool operator>(itkMultiplyByConstantImageFilterID2DID2_Pointer const & r) const;
     bool operator<=(itkMultiplyByConstantImageFilterID2DID2_Pointer const & r) const;
     bool operator>=(itkMultiplyByConstantImageFilterID2DID2_Pointer const & r) const;
     itkMultiplyByConstantImageFilterID2DID2_Pointer & operator=(itkMultiplyByConstantImageFilterID2DID2_Pointer const & r);
     itkMultiplyByConstantImageFilterID2DID2_Pointer & operator=(itkMultiplyByConstantImageFilterID2DID2 * r);
     itkMultiplyByConstantImageFilterID2DID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyByConstantImageFilterID2DID2_Superclass : public itkInPlaceImageFilterID2ID2 {
   public:
     static itkMultiplyByConstantImageFilterID2DID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::MultiplyByConstant< double, double, double > & GetFunctor();
     itk::Functor::MultiplyByConstant< double, double, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MultiplyByConstant< double, double, double > const & functor);
   private:
     itkMultiplyByConstantImageFilterID2DID2_Superclass(itkMultiplyByConstantImageFilterID2DID2_Superclass const & arg0);
     void operator=(itkMultiplyByConstantImageFilterID2DID2_Superclass const & arg0);
   protected:
     itkMultiplyByConstantImageFilterID2DID2_Superclass();
     ~itkMultiplyByConstantImageFilterID2DID2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMultiplyByConstantImageFilterID2DID2_Superclass_Pointer {
   public:
     itkMultiplyByConstantImageFilterID2DID2_Superclass_Pointer();
     itkMultiplyByConstantImageFilterID2DID2_Superclass_Pointer(itkMultiplyByConstantImageFilterID2DID2_Superclass_Pointer const & p);
     itkMultiplyByConstantImageFilterID2DID2_Superclass_Pointer(itkMultiplyByConstantImageFilterID2DID2_Superclass * p);
     ~itkMultiplyByConstantImageFilterID2DID2_Superclass_Pointer();
     itkMultiplyByConstantImageFilterID2DID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyByConstantImageFilterID2DID2_Superclass * GetPointer() const;
     bool operator<(itkMultiplyByConstantImageFilterID2DID2_Superclass_Pointer const & r) const;
     bool operator>(itkMultiplyByConstantImageFilterID2DID2_Superclass_Pointer const & r) const;
     bool operator<=(itkMultiplyByConstantImageFilterID2DID2_Superclass_Pointer const & r) const;
     bool operator>=(itkMultiplyByConstantImageFilterID2DID2_Superclass_Pointer const & r) const;
     itkMultiplyByConstantImageFilterID2DID2_Superclass_Pointer & operator=(itkMultiplyByConstantImageFilterID2DID2_Superclass_Pointer const & r);
     itkMultiplyByConstantImageFilterID2DID2_Superclass_Pointer & operator=(itkMultiplyByConstantImageFilterID2DID2_Superclass * r);
     itkMultiplyByConstantImageFilterID2DID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyByConstantImageFilterID3DID3_Pointer {
   public:
     itkMultiplyByConstantImageFilterID3DID3_Pointer();
     itkMultiplyByConstantImageFilterID3DID3_Pointer(itkMultiplyByConstantImageFilterID3DID3_Pointer const & p);
     itkMultiplyByConstantImageFilterID3DID3_Pointer(itkMultiplyByConstantImageFilterID3DID3 * p);
     ~itkMultiplyByConstantImageFilterID3DID3_Pointer();
     itkMultiplyByConstantImageFilterID3DID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyByConstantImageFilterID3DID3 * GetPointer() const;
     bool operator<(itkMultiplyByConstantImageFilterID3DID3_Pointer const & r) const;
     bool operator>(itkMultiplyByConstantImageFilterID3DID3_Pointer const & r) const;
     bool operator<=(itkMultiplyByConstantImageFilterID3DID3_Pointer const & r) const;
     bool operator>=(itkMultiplyByConstantImageFilterID3DID3_Pointer const & r) const;
     itkMultiplyByConstantImageFilterID3DID3_Pointer & operator=(itkMultiplyByConstantImageFilterID3DID3_Pointer const & r);
     itkMultiplyByConstantImageFilterID3DID3_Pointer & operator=(itkMultiplyByConstantImageFilterID3DID3 * r);
     itkMultiplyByConstantImageFilterID3DID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyByConstantImageFilterID3DID3_Superclass : public itkInPlaceImageFilterID3ID3 {
   public:
     static itkMultiplyByConstantImageFilterID3DID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::MultiplyByConstant< double, double, double > & GetFunctor();
     itk::Functor::MultiplyByConstant< double, double, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MultiplyByConstant< double, double, double > const & functor);
   private:
     itkMultiplyByConstantImageFilterID3DID3_Superclass(itkMultiplyByConstantImageFilterID3DID3_Superclass const & arg0);
     void operator=(itkMultiplyByConstantImageFilterID3DID3_Superclass const & arg0);
   protected:
     itkMultiplyByConstantImageFilterID3DID3_Superclass();
     ~itkMultiplyByConstantImageFilterID3DID3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMultiplyByConstantImageFilterID3DID3_Superclass_Pointer {
   public:
     itkMultiplyByConstantImageFilterID3DID3_Superclass_Pointer();
     itkMultiplyByConstantImageFilterID3DID3_Superclass_Pointer(itkMultiplyByConstantImageFilterID3DID3_Superclass_Pointer const & p);
     itkMultiplyByConstantImageFilterID3DID3_Superclass_Pointer(itkMultiplyByConstantImageFilterID3DID3_Superclass * p);
     ~itkMultiplyByConstantImageFilterID3DID3_Superclass_Pointer();
     itkMultiplyByConstantImageFilterID3DID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyByConstantImageFilterID3DID3_Superclass * GetPointer() const;
     bool operator<(itkMultiplyByConstantImageFilterID3DID3_Superclass_Pointer const & r) const;
     bool operator>(itkMultiplyByConstantImageFilterID3DID3_Superclass_Pointer const & r) const;
     bool operator<=(itkMultiplyByConstantImageFilterID3DID3_Superclass_Pointer const & r) const;
     bool operator>=(itkMultiplyByConstantImageFilterID3DID3_Superclass_Pointer const & r) const;
     itkMultiplyByConstantImageFilterID3DID3_Superclass_Pointer & operator=(itkMultiplyByConstantImageFilterID3DID3_Superclass_Pointer const & r);
     itkMultiplyByConstantImageFilterID3DID3_Superclass_Pointer & operator=(itkMultiplyByConstantImageFilterID3DID3_Superclass * r);
     itkMultiplyByConstantImageFilterID3DID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyByConstantImageFilterIF2DIF2_Pointer {
   public:
     itkMultiplyByConstantImageFilterIF2DIF2_Pointer();
     itkMultiplyByConstantImageFilterIF2DIF2_Pointer(itkMultiplyByConstantImageFilterIF2DIF2_Pointer const & p);
     itkMultiplyByConstantImageFilterIF2DIF2_Pointer(itkMultiplyByConstantImageFilterIF2DIF2 * p);
     ~itkMultiplyByConstantImageFilterIF2DIF2_Pointer();
     itkMultiplyByConstantImageFilterIF2DIF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyByConstantImageFilterIF2DIF2 * GetPointer() const;
     bool operator<(itkMultiplyByConstantImageFilterIF2DIF2_Pointer const & r) const;
     bool operator>(itkMultiplyByConstantImageFilterIF2DIF2_Pointer const & r) const;
     bool operator<=(itkMultiplyByConstantImageFilterIF2DIF2_Pointer const & r) const;
     bool operator>=(itkMultiplyByConstantImageFilterIF2DIF2_Pointer const & r) const;
     itkMultiplyByConstantImageFilterIF2DIF2_Pointer & operator=(itkMultiplyByConstantImageFilterIF2DIF2_Pointer const & r);
     itkMultiplyByConstantImageFilterIF2DIF2_Pointer & operator=(itkMultiplyByConstantImageFilterIF2DIF2 * r);
     itkMultiplyByConstantImageFilterIF2DIF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyByConstantImageFilterIF2DIF2_Superclass : public itkInPlaceImageFilterIF2IF2 {
   public:
     static itkMultiplyByConstantImageFilterIF2DIF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::MultiplyByConstant< float, double, float > & GetFunctor();
     itk::Functor::MultiplyByConstant< float, double, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MultiplyByConstant< float, double, float > const & functor);
   private:
     itkMultiplyByConstantImageFilterIF2DIF2_Superclass(itkMultiplyByConstantImageFilterIF2DIF2_Superclass const & arg0);
     void operator=(itkMultiplyByConstantImageFilterIF2DIF2_Superclass const & arg0);
   protected:
     itkMultiplyByConstantImageFilterIF2DIF2_Superclass();
     ~itkMultiplyByConstantImageFilterIF2DIF2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMultiplyByConstantImageFilterIF2DIF2_Superclass_Pointer {
   public:
     itkMultiplyByConstantImageFilterIF2DIF2_Superclass_Pointer();
     itkMultiplyByConstantImageFilterIF2DIF2_Superclass_Pointer(itkMultiplyByConstantImageFilterIF2DIF2_Superclass_Pointer const & p);
     itkMultiplyByConstantImageFilterIF2DIF2_Superclass_Pointer(itkMultiplyByConstantImageFilterIF2DIF2_Superclass * p);
     ~itkMultiplyByConstantImageFilterIF2DIF2_Superclass_Pointer();
     itkMultiplyByConstantImageFilterIF2DIF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyByConstantImageFilterIF2DIF2_Superclass * GetPointer() const;
     bool operator<(itkMultiplyByConstantImageFilterIF2DIF2_Superclass_Pointer const & r) const;
     bool operator>(itkMultiplyByConstantImageFilterIF2DIF2_Superclass_Pointer const & r) const;
     bool operator<=(itkMultiplyByConstantImageFilterIF2DIF2_Superclass_Pointer const & r) const;
     bool operator>=(itkMultiplyByConstantImageFilterIF2DIF2_Superclass_Pointer const & r) const;
     itkMultiplyByConstantImageFilterIF2DIF2_Superclass_Pointer & operator=(itkMultiplyByConstantImageFilterIF2DIF2_Superclass_Pointer const & r);
     itkMultiplyByConstantImageFilterIF2DIF2_Superclass_Pointer & operator=(itkMultiplyByConstantImageFilterIF2DIF2_Superclass * r);
     itkMultiplyByConstantImageFilterIF2DIF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyByConstantImageFilterIF3DIF3_Pointer {
   public:
     itkMultiplyByConstantImageFilterIF3DIF3_Pointer();
     itkMultiplyByConstantImageFilterIF3DIF3_Pointer(itkMultiplyByConstantImageFilterIF3DIF3_Pointer const & p);
     itkMultiplyByConstantImageFilterIF3DIF3_Pointer(itkMultiplyByConstantImageFilterIF3DIF3 * p);
     ~itkMultiplyByConstantImageFilterIF3DIF3_Pointer();
     itkMultiplyByConstantImageFilterIF3DIF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyByConstantImageFilterIF3DIF3 * GetPointer() const;
     bool operator<(itkMultiplyByConstantImageFilterIF3DIF3_Pointer const & r) const;
     bool operator>(itkMultiplyByConstantImageFilterIF3DIF3_Pointer const & r) const;
     bool operator<=(itkMultiplyByConstantImageFilterIF3DIF3_Pointer const & r) const;
     bool operator>=(itkMultiplyByConstantImageFilterIF3DIF3_Pointer const & r) const;
     itkMultiplyByConstantImageFilterIF3DIF3_Pointer & operator=(itkMultiplyByConstantImageFilterIF3DIF3_Pointer const & r);
     itkMultiplyByConstantImageFilterIF3DIF3_Pointer & operator=(itkMultiplyByConstantImageFilterIF3DIF3 * r);
     itkMultiplyByConstantImageFilterIF3DIF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyByConstantImageFilterIF3DIF3_Superclass : public itkInPlaceImageFilterIF3IF3 {
   public:
     static itkMultiplyByConstantImageFilterIF3DIF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::MultiplyByConstant< float, double, float > & GetFunctor();
     itk::Functor::MultiplyByConstant< float, double, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MultiplyByConstant< float, double, float > const & functor);
   private:
     itkMultiplyByConstantImageFilterIF3DIF3_Superclass(itkMultiplyByConstantImageFilterIF3DIF3_Superclass const & arg0);
     void operator=(itkMultiplyByConstantImageFilterIF3DIF3_Superclass const & arg0);
   protected:
     itkMultiplyByConstantImageFilterIF3DIF3_Superclass();
     ~itkMultiplyByConstantImageFilterIF3DIF3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMultiplyByConstantImageFilterIF3DIF3_Superclass_Pointer {
   public:
     itkMultiplyByConstantImageFilterIF3DIF3_Superclass_Pointer();
     itkMultiplyByConstantImageFilterIF3DIF3_Superclass_Pointer(itkMultiplyByConstantImageFilterIF3DIF3_Superclass_Pointer const & p);
     itkMultiplyByConstantImageFilterIF3DIF3_Superclass_Pointer(itkMultiplyByConstantImageFilterIF3DIF3_Superclass * p);
     ~itkMultiplyByConstantImageFilterIF3DIF3_Superclass_Pointer();
     itkMultiplyByConstantImageFilterIF3DIF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyByConstantImageFilterIF3DIF3_Superclass * GetPointer() const;
     bool operator<(itkMultiplyByConstantImageFilterIF3DIF3_Superclass_Pointer const & r) const;
     bool operator>(itkMultiplyByConstantImageFilterIF3DIF3_Superclass_Pointer const & r) const;
     bool operator<=(itkMultiplyByConstantImageFilterIF3DIF3_Superclass_Pointer const & r) const;
     bool operator>=(itkMultiplyByConstantImageFilterIF3DIF3_Superclass_Pointer const & r) const;
     itkMultiplyByConstantImageFilterIF3DIF3_Superclass_Pointer & operator=(itkMultiplyByConstantImageFilterIF3DIF3_Superclass_Pointer const & r);
     itkMultiplyByConstantImageFilterIF3DIF3_Superclass_Pointer & operator=(itkMultiplyByConstantImageFilterIF3DIF3_Superclass * r);
     itkMultiplyByConstantImageFilterIF3DIF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyByConstantImageFilterIUC2DIUC2_Pointer {
   public:
     itkMultiplyByConstantImageFilterIUC2DIUC2_Pointer();
     itkMultiplyByConstantImageFilterIUC2DIUC2_Pointer(itkMultiplyByConstantImageFilterIUC2DIUC2_Pointer const & p);
     itkMultiplyByConstantImageFilterIUC2DIUC2_Pointer(itkMultiplyByConstantImageFilterIUC2DIUC2 * p);
     ~itkMultiplyByConstantImageFilterIUC2DIUC2_Pointer();
     itkMultiplyByConstantImageFilterIUC2DIUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyByConstantImageFilterIUC2DIUC2 * GetPointer() const;
     bool operator<(itkMultiplyByConstantImageFilterIUC2DIUC2_Pointer const & r) const;
     bool operator>(itkMultiplyByConstantImageFilterIUC2DIUC2_Pointer const & r) const;
     bool operator<=(itkMultiplyByConstantImageFilterIUC2DIUC2_Pointer const & r) const;
     bool operator>=(itkMultiplyByConstantImageFilterIUC2DIUC2_Pointer const & r) const;
     itkMultiplyByConstantImageFilterIUC2DIUC2_Pointer & operator=(itkMultiplyByConstantImageFilterIUC2DIUC2_Pointer const & r);
     itkMultiplyByConstantImageFilterIUC2DIUC2_Pointer & operator=(itkMultiplyByConstantImageFilterIUC2DIUC2 * r);
     itkMultiplyByConstantImageFilterIUC2DIUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyByConstantImageFilterIUC2DIUC2_Superclass : public itkInPlaceImageFilterIUC2IUC2 {
   public:
     static itkMultiplyByConstantImageFilterIUC2DIUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::MultiplyByConstant< unsigned char, double, unsigned char > & GetFunctor();
     itk::Functor::MultiplyByConstant< unsigned char, double, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MultiplyByConstant< unsigned char, double, unsigned char > const & functor);
   private:
     itkMultiplyByConstantImageFilterIUC2DIUC2_Superclass(itkMultiplyByConstantImageFilterIUC2DIUC2_Superclass const & arg0);
     void operator=(itkMultiplyByConstantImageFilterIUC2DIUC2_Superclass const & arg0);
   protected:
     itkMultiplyByConstantImageFilterIUC2DIUC2_Superclass();
     ~itkMultiplyByConstantImageFilterIUC2DIUC2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMultiplyByConstantImageFilterIUC2DIUC2_Superclass_Pointer {
   public:
     itkMultiplyByConstantImageFilterIUC2DIUC2_Superclass_Pointer();
     itkMultiplyByConstantImageFilterIUC2DIUC2_Superclass_Pointer(itkMultiplyByConstantImageFilterIUC2DIUC2_Superclass_Pointer const & p);
     itkMultiplyByConstantImageFilterIUC2DIUC2_Superclass_Pointer(itkMultiplyByConstantImageFilterIUC2DIUC2_Superclass * p);
     ~itkMultiplyByConstantImageFilterIUC2DIUC2_Superclass_Pointer();
     itkMultiplyByConstantImageFilterIUC2DIUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyByConstantImageFilterIUC2DIUC2_Superclass * GetPointer() const;
     bool operator<(itkMultiplyByConstantImageFilterIUC2DIUC2_Superclass_Pointer const & r) const;
     bool operator>(itkMultiplyByConstantImageFilterIUC2DIUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkMultiplyByConstantImageFilterIUC2DIUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkMultiplyByConstantImageFilterIUC2DIUC2_Superclass_Pointer const & r) const;
     itkMultiplyByConstantImageFilterIUC2DIUC2_Superclass_Pointer & operator=(itkMultiplyByConstantImageFilterIUC2DIUC2_Superclass_Pointer const & r);
     itkMultiplyByConstantImageFilterIUC2DIUC2_Superclass_Pointer & operator=(itkMultiplyByConstantImageFilterIUC2DIUC2_Superclass * r);
     itkMultiplyByConstantImageFilterIUC2DIUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyByConstantImageFilterIUC3DIUC3_Pointer {
   public:
     itkMultiplyByConstantImageFilterIUC3DIUC3_Pointer();
     itkMultiplyByConstantImageFilterIUC3DIUC3_Pointer(itkMultiplyByConstantImageFilterIUC3DIUC3_Pointer const & p);
     itkMultiplyByConstantImageFilterIUC3DIUC3_Pointer(itkMultiplyByConstantImageFilterIUC3DIUC3 * p);
     ~itkMultiplyByConstantImageFilterIUC3DIUC3_Pointer();
     itkMultiplyByConstantImageFilterIUC3DIUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyByConstantImageFilterIUC3DIUC3 * GetPointer() const;
     bool operator<(itkMultiplyByConstantImageFilterIUC3DIUC3_Pointer const & r) const;
     bool operator>(itkMultiplyByConstantImageFilterIUC3DIUC3_Pointer const & r) const;
     bool operator<=(itkMultiplyByConstantImageFilterIUC3DIUC3_Pointer const & r) const;
     bool operator>=(itkMultiplyByConstantImageFilterIUC3DIUC3_Pointer const & r) const;
     itkMultiplyByConstantImageFilterIUC3DIUC3_Pointer & operator=(itkMultiplyByConstantImageFilterIUC3DIUC3_Pointer const & r);
     itkMultiplyByConstantImageFilterIUC3DIUC3_Pointer & operator=(itkMultiplyByConstantImageFilterIUC3DIUC3 * r);
     itkMultiplyByConstantImageFilterIUC3DIUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyByConstantImageFilterIUC3DIUC3_Superclass : public itkInPlaceImageFilterIUC3IUC3 {
   public:
     static itkMultiplyByConstantImageFilterIUC3DIUC3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::MultiplyByConstant< unsigned char, double, unsigned char > & GetFunctor();
     itk::Functor::MultiplyByConstant< unsigned char, double, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MultiplyByConstant< unsigned char, double, unsigned char > const & functor);
   private:
     itkMultiplyByConstantImageFilterIUC3DIUC3_Superclass(itkMultiplyByConstantImageFilterIUC3DIUC3_Superclass const & arg0);
     void operator=(itkMultiplyByConstantImageFilterIUC3DIUC3_Superclass const & arg0);
   protected:
     itkMultiplyByConstantImageFilterIUC3DIUC3_Superclass();
     ~itkMultiplyByConstantImageFilterIUC3DIUC3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMultiplyByConstantImageFilterIUC3DIUC3_Superclass_Pointer {
   public:
     itkMultiplyByConstantImageFilterIUC3DIUC3_Superclass_Pointer();
     itkMultiplyByConstantImageFilterIUC3DIUC3_Superclass_Pointer(itkMultiplyByConstantImageFilterIUC3DIUC3_Superclass_Pointer const & p);
     itkMultiplyByConstantImageFilterIUC3DIUC3_Superclass_Pointer(itkMultiplyByConstantImageFilterIUC3DIUC3_Superclass * p);
     ~itkMultiplyByConstantImageFilterIUC3DIUC3_Superclass_Pointer();
     itkMultiplyByConstantImageFilterIUC3DIUC3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyByConstantImageFilterIUC3DIUC3_Superclass * GetPointer() const;
     bool operator<(itkMultiplyByConstantImageFilterIUC3DIUC3_Superclass_Pointer const & r) const;
     bool operator>(itkMultiplyByConstantImageFilterIUC3DIUC3_Superclass_Pointer const & r) const;
     bool operator<=(itkMultiplyByConstantImageFilterIUC3DIUC3_Superclass_Pointer const & r) const;
     bool operator>=(itkMultiplyByConstantImageFilterIUC3DIUC3_Superclass_Pointer const & r) const;
     itkMultiplyByConstantImageFilterIUC3DIUC3_Superclass_Pointer & operator=(itkMultiplyByConstantImageFilterIUC3DIUC3_Superclass_Pointer const & r);
     itkMultiplyByConstantImageFilterIUC3DIUC3_Superclass_Pointer & operator=(itkMultiplyByConstantImageFilterIUC3DIUC3_Superclass * r);
     itkMultiplyByConstantImageFilterIUC3DIUC3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyByConstantImageFilterIUL2DIUL2_Pointer {
   public:
     itkMultiplyByConstantImageFilterIUL2DIUL2_Pointer();
     itkMultiplyByConstantImageFilterIUL2DIUL2_Pointer(itkMultiplyByConstantImageFilterIUL2DIUL2_Pointer const & p);
     itkMultiplyByConstantImageFilterIUL2DIUL2_Pointer(itkMultiplyByConstantImageFilterIUL2DIUL2 * p);
     ~itkMultiplyByConstantImageFilterIUL2DIUL2_Pointer();
     itkMultiplyByConstantImageFilterIUL2DIUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyByConstantImageFilterIUL2DIUL2 * GetPointer() const;
     bool operator<(itkMultiplyByConstantImageFilterIUL2DIUL2_Pointer const & r) const;
     bool operator>(itkMultiplyByConstantImageFilterIUL2DIUL2_Pointer const & r) const;
     bool operator<=(itkMultiplyByConstantImageFilterIUL2DIUL2_Pointer const & r) const;
     bool operator>=(itkMultiplyByConstantImageFilterIUL2DIUL2_Pointer const & r) const;
     itkMultiplyByConstantImageFilterIUL2DIUL2_Pointer & operator=(itkMultiplyByConstantImageFilterIUL2DIUL2_Pointer const & r);
     itkMultiplyByConstantImageFilterIUL2DIUL2_Pointer & operator=(itkMultiplyByConstantImageFilterIUL2DIUL2 * r);
     itkMultiplyByConstantImageFilterIUL2DIUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyByConstantImageFilterIUL2DIUL2_Superclass : public itkInPlaceImageFilterIUL2IUL2 {
   public:
     static itkMultiplyByConstantImageFilterIUL2DIUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::MultiplyByConstant< unsigned long, double, unsigned long > & GetFunctor();
     itk::Functor::MultiplyByConstant< unsigned long, double, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MultiplyByConstant< unsigned long, double, unsigned long > const & functor);
   private:
     itkMultiplyByConstantImageFilterIUL2DIUL2_Superclass(itkMultiplyByConstantImageFilterIUL2DIUL2_Superclass const & arg0);
     void operator=(itkMultiplyByConstantImageFilterIUL2DIUL2_Superclass const & arg0);
   protected:
     itkMultiplyByConstantImageFilterIUL2DIUL2_Superclass();
     ~itkMultiplyByConstantImageFilterIUL2DIUL2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMultiplyByConstantImageFilterIUL2DIUL2_Superclass_Pointer {
   public:
     itkMultiplyByConstantImageFilterIUL2DIUL2_Superclass_Pointer();
     itkMultiplyByConstantImageFilterIUL2DIUL2_Superclass_Pointer(itkMultiplyByConstantImageFilterIUL2DIUL2_Superclass_Pointer const & p);
     itkMultiplyByConstantImageFilterIUL2DIUL2_Superclass_Pointer(itkMultiplyByConstantImageFilterIUL2DIUL2_Superclass * p);
     ~itkMultiplyByConstantImageFilterIUL2DIUL2_Superclass_Pointer();
     itkMultiplyByConstantImageFilterIUL2DIUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyByConstantImageFilterIUL2DIUL2_Superclass * GetPointer() const;
     bool operator<(itkMultiplyByConstantImageFilterIUL2DIUL2_Superclass_Pointer const & r) const;
     bool operator>(itkMultiplyByConstantImageFilterIUL2DIUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkMultiplyByConstantImageFilterIUL2DIUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkMultiplyByConstantImageFilterIUL2DIUL2_Superclass_Pointer const & r) const;
     itkMultiplyByConstantImageFilterIUL2DIUL2_Superclass_Pointer & operator=(itkMultiplyByConstantImageFilterIUL2DIUL2_Superclass_Pointer const & r);
     itkMultiplyByConstantImageFilterIUL2DIUL2_Superclass_Pointer & operator=(itkMultiplyByConstantImageFilterIUL2DIUL2_Superclass * r);
     itkMultiplyByConstantImageFilterIUL2DIUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyByConstantImageFilterIUL3DIUL3_Pointer {
   public:
     itkMultiplyByConstantImageFilterIUL3DIUL3_Pointer();
     itkMultiplyByConstantImageFilterIUL3DIUL3_Pointer(itkMultiplyByConstantImageFilterIUL3DIUL3_Pointer const & p);
     itkMultiplyByConstantImageFilterIUL3DIUL3_Pointer(itkMultiplyByConstantImageFilterIUL3DIUL3 * p);
     ~itkMultiplyByConstantImageFilterIUL3DIUL3_Pointer();
     itkMultiplyByConstantImageFilterIUL3DIUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyByConstantImageFilterIUL3DIUL3 * GetPointer() const;
     bool operator<(itkMultiplyByConstantImageFilterIUL3DIUL3_Pointer const & r) const;
     bool operator>(itkMultiplyByConstantImageFilterIUL3DIUL3_Pointer const & r) const;
     bool operator<=(itkMultiplyByConstantImageFilterIUL3DIUL3_Pointer const & r) const;
     bool operator>=(itkMultiplyByConstantImageFilterIUL3DIUL3_Pointer const & r) const;
     itkMultiplyByConstantImageFilterIUL3DIUL3_Pointer & operator=(itkMultiplyByConstantImageFilterIUL3DIUL3_Pointer const & r);
     itkMultiplyByConstantImageFilterIUL3DIUL3_Pointer & operator=(itkMultiplyByConstantImageFilterIUL3DIUL3 * r);
     itkMultiplyByConstantImageFilterIUL3DIUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyByConstantImageFilterIUL3DIUL3_Superclass : public itkInPlaceImageFilterIUL3IUL3 {
   public:
     static itkMultiplyByConstantImageFilterIUL3DIUL3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::MultiplyByConstant< unsigned long, double, unsigned long > & GetFunctor();
     itk::Functor::MultiplyByConstant< unsigned long, double, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MultiplyByConstant< unsigned long, double, unsigned long > const & functor);
   private:
     itkMultiplyByConstantImageFilterIUL3DIUL3_Superclass(itkMultiplyByConstantImageFilterIUL3DIUL3_Superclass const & arg0);
     void operator=(itkMultiplyByConstantImageFilterIUL3DIUL3_Superclass const & arg0);
   protected:
     itkMultiplyByConstantImageFilterIUL3DIUL3_Superclass();
     ~itkMultiplyByConstantImageFilterIUL3DIUL3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMultiplyByConstantImageFilterIUL3DIUL3_Superclass_Pointer {
   public:
     itkMultiplyByConstantImageFilterIUL3DIUL3_Superclass_Pointer();
     itkMultiplyByConstantImageFilterIUL3DIUL3_Superclass_Pointer(itkMultiplyByConstantImageFilterIUL3DIUL3_Superclass_Pointer const & p);
     itkMultiplyByConstantImageFilterIUL3DIUL3_Superclass_Pointer(itkMultiplyByConstantImageFilterIUL3DIUL3_Superclass * p);
     ~itkMultiplyByConstantImageFilterIUL3DIUL3_Superclass_Pointer();
     itkMultiplyByConstantImageFilterIUL3DIUL3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyByConstantImageFilterIUL3DIUL3_Superclass * GetPointer() const;
     bool operator<(itkMultiplyByConstantImageFilterIUL3DIUL3_Superclass_Pointer const & r) const;
     bool operator>(itkMultiplyByConstantImageFilterIUL3DIUL3_Superclass_Pointer const & r) const;
     bool operator<=(itkMultiplyByConstantImageFilterIUL3DIUL3_Superclass_Pointer const & r) const;
     bool operator>=(itkMultiplyByConstantImageFilterIUL3DIUL3_Superclass_Pointer const & r) const;
     itkMultiplyByConstantImageFilterIUL3DIUL3_Superclass_Pointer & operator=(itkMultiplyByConstantImageFilterIUL3DIUL3_Superclass_Pointer const & r);
     itkMultiplyByConstantImageFilterIUL3DIUL3_Superclass_Pointer & operator=(itkMultiplyByConstantImageFilterIUL3DIUL3_Superclass * r);
     itkMultiplyByConstantImageFilterIUL3DIUL3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyByConstantImageFilterIUS2DIUS2_Pointer {
   public:
     itkMultiplyByConstantImageFilterIUS2DIUS2_Pointer();
     itkMultiplyByConstantImageFilterIUS2DIUS2_Pointer(itkMultiplyByConstantImageFilterIUS2DIUS2_Pointer const & p);
     itkMultiplyByConstantImageFilterIUS2DIUS2_Pointer(itkMultiplyByConstantImageFilterIUS2DIUS2 * p);
     ~itkMultiplyByConstantImageFilterIUS2DIUS2_Pointer();
     itkMultiplyByConstantImageFilterIUS2DIUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyByConstantImageFilterIUS2DIUS2 * GetPointer() const;
     bool operator<(itkMultiplyByConstantImageFilterIUS2DIUS2_Pointer const & r) const;
     bool operator>(itkMultiplyByConstantImageFilterIUS2DIUS2_Pointer const & r) const;
     bool operator<=(itkMultiplyByConstantImageFilterIUS2DIUS2_Pointer const & r) const;
     bool operator>=(itkMultiplyByConstantImageFilterIUS2DIUS2_Pointer const & r) const;
     itkMultiplyByConstantImageFilterIUS2DIUS2_Pointer & operator=(itkMultiplyByConstantImageFilterIUS2DIUS2_Pointer const & r);
     itkMultiplyByConstantImageFilterIUS2DIUS2_Pointer & operator=(itkMultiplyByConstantImageFilterIUS2DIUS2 * r);
     itkMultiplyByConstantImageFilterIUS2DIUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyByConstantImageFilterIUS2DIUS2_Superclass : public itkInPlaceImageFilterIUS2IUS2 {
   public:
     static itkMultiplyByConstantImageFilterIUS2DIUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::MultiplyByConstant< unsigned short, double, unsigned short > & GetFunctor();
     itk::Functor::MultiplyByConstant< unsigned short, double, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MultiplyByConstant< unsigned short, double, unsigned short > const & functor);
   private:
     itkMultiplyByConstantImageFilterIUS2DIUS2_Superclass(itkMultiplyByConstantImageFilterIUS2DIUS2_Superclass const & arg0);
     void operator=(itkMultiplyByConstantImageFilterIUS2DIUS2_Superclass const & arg0);
   protected:
     itkMultiplyByConstantImageFilterIUS2DIUS2_Superclass();
     ~itkMultiplyByConstantImageFilterIUS2DIUS2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMultiplyByConstantImageFilterIUS2DIUS2_Superclass_Pointer {
   public:
     itkMultiplyByConstantImageFilterIUS2DIUS2_Superclass_Pointer();
     itkMultiplyByConstantImageFilterIUS2DIUS2_Superclass_Pointer(itkMultiplyByConstantImageFilterIUS2DIUS2_Superclass_Pointer const & p);
     itkMultiplyByConstantImageFilterIUS2DIUS2_Superclass_Pointer(itkMultiplyByConstantImageFilterIUS2DIUS2_Superclass * p);
     ~itkMultiplyByConstantImageFilterIUS2DIUS2_Superclass_Pointer();
     itkMultiplyByConstantImageFilterIUS2DIUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyByConstantImageFilterIUS2DIUS2_Superclass * GetPointer() const;
     bool operator<(itkMultiplyByConstantImageFilterIUS2DIUS2_Superclass_Pointer const & r) const;
     bool operator>(itkMultiplyByConstantImageFilterIUS2DIUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkMultiplyByConstantImageFilterIUS2DIUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkMultiplyByConstantImageFilterIUS2DIUS2_Superclass_Pointer const & r) const;
     itkMultiplyByConstantImageFilterIUS2DIUS2_Superclass_Pointer & operator=(itkMultiplyByConstantImageFilterIUS2DIUS2_Superclass_Pointer const & r);
     itkMultiplyByConstantImageFilterIUS2DIUS2_Superclass_Pointer & operator=(itkMultiplyByConstantImageFilterIUS2DIUS2_Superclass * r);
     itkMultiplyByConstantImageFilterIUS2DIUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyByConstantImageFilterIUS3DIUS3_Pointer {
   public:
     itkMultiplyByConstantImageFilterIUS3DIUS3_Pointer();
     itkMultiplyByConstantImageFilterIUS3DIUS3_Pointer(itkMultiplyByConstantImageFilterIUS3DIUS3_Pointer const & p);
     itkMultiplyByConstantImageFilterIUS3DIUS3_Pointer(itkMultiplyByConstantImageFilterIUS3DIUS3 * p);
     ~itkMultiplyByConstantImageFilterIUS3DIUS3_Pointer();
     itkMultiplyByConstantImageFilterIUS3DIUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyByConstantImageFilterIUS3DIUS3 * GetPointer() const;
     bool operator<(itkMultiplyByConstantImageFilterIUS3DIUS3_Pointer const & r) const;
     bool operator>(itkMultiplyByConstantImageFilterIUS3DIUS3_Pointer const & r) const;
     bool operator<=(itkMultiplyByConstantImageFilterIUS3DIUS3_Pointer const & r) const;
     bool operator>=(itkMultiplyByConstantImageFilterIUS3DIUS3_Pointer const & r) const;
     itkMultiplyByConstantImageFilterIUS3DIUS3_Pointer & operator=(itkMultiplyByConstantImageFilterIUS3DIUS3_Pointer const & r);
     itkMultiplyByConstantImageFilterIUS3DIUS3_Pointer & operator=(itkMultiplyByConstantImageFilterIUS3DIUS3 * r);
     itkMultiplyByConstantImageFilterIUS3DIUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyByConstantImageFilterIUS3DIUS3_Superclass : public itkInPlaceImageFilterIUS3IUS3 {
   public:
     static itkMultiplyByConstantImageFilterIUS3DIUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::MultiplyByConstant< unsigned short, double, unsigned short > & GetFunctor();
     itk::Functor::MultiplyByConstant< unsigned short, double, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MultiplyByConstant< unsigned short, double, unsigned short > const & functor);
   private:
     itkMultiplyByConstantImageFilterIUS3DIUS3_Superclass(itkMultiplyByConstantImageFilterIUS3DIUS3_Superclass const & arg0);
     void operator=(itkMultiplyByConstantImageFilterIUS3DIUS3_Superclass const & arg0);
   protected:
     itkMultiplyByConstantImageFilterIUS3DIUS3_Superclass();
     ~itkMultiplyByConstantImageFilterIUS3DIUS3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMultiplyByConstantImageFilterIUS3DIUS3_Superclass_Pointer {
   public:
     itkMultiplyByConstantImageFilterIUS3DIUS3_Superclass_Pointer();
     itkMultiplyByConstantImageFilterIUS3DIUS3_Superclass_Pointer(itkMultiplyByConstantImageFilterIUS3DIUS3_Superclass_Pointer const & p);
     itkMultiplyByConstantImageFilterIUS3DIUS3_Superclass_Pointer(itkMultiplyByConstantImageFilterIUS3DIUS3_Superclass * p);
     ~itkMultiplyByConstantImageFilterIUS3DIUS3_Superclass_Pointer();
     itkMultiplyByConstantImageFilterIUS3DIUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyByConstantImageFilterIUS3DIUS3_Superclass * GetPointer() const;
     bool operator<(itkMultiplyByConstantImageFilterIUS3DIUS3_Superclass_Pointer const & r) const;
     bool operator>(itkMultiplyByConstantImageFilterIUS3DIUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkMultiplyByConstantImageFilterIUS3DIUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkMultiplyByConstantImageFilterIUS3DIUS3_Superclass_Pointer const & r) const;
     itkMultiplyByConstantImageFilterIUS3DIUS3_Superclass_Pointer & operator=(itkMultiplyByConstantImageFilterIUS3DIUS3_Superclass_Pointer const & r);
     itkMultiplyByConstantImageFilterIUS3DIUS3_Superclass_Pointer & operator=(itkMultiplyByConstantImageFilterIUS3DIUS3_Superclass * r);
     itkMultiplyByConstantImageFilterIUS3DIUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyByConstantImageFilterICF2CFICF2 : public itkMultiplyByConstantImageFilterICF2CFICF2_Superclass {
   public:
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  Input1Input2OutputMultiplyOperatorCheck = 1 };
     static itkMultiplyByConstantImageFilterICF2CFICF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetConstant(vcl_complexF ct);
     vcl_complexF const & GetConstant() const;
   private:
     itkMultiplyByConstantImageFilterICF2CFICF2(itkMultiplyByConstantImageFilterICF2CFICF2 const & arg0);
     void operator=(itkMultiplyByConstantImageFilterICF2CFICF2 const & arg0);
   protected:
     itkMultiplyByConstantImageFilterICF2CFICF2();
     ~itkMultiplyByConstantImageFilterICF2CFICF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMultiplyByConstantImageFilterICF3CFICF3 : public itkMultiplyByConstantImageFilterICF3CFICF3_Superclass {
   public:
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  Input1Input2OutputMultiplyOperatorCheck = 1 };
     static itkMultiplyByConstantImageFilterICF3CFICF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetConstant(vcl_complexF ct);
     vcl_complexF const & GetConstant() const;
   private:
     itkMultiplyByConstantImageFilterICF3CFICF3(itkMultiplyByConstantImageFilterICF3CFICF3 const & arg0);
     void operator=(itkMultiplyByConstantImageFilterICF3CFICF3 const & arg0);
   protected:
     itkMultiplyByConstantImageFilterICF3CFICF3();
     ~itkMultiplyByConstantImageFilterICF3CFICF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMultiplyByConstantImageFilterID2DID2 : public itkMultiplyByConstantImageFilterID2DID2_Superclass {
   public:
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  Input1Input2OutputMultiplyOperatorCheck = 1 };
     static itkMultiplyByConstantImageFilterID2DID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetConstant(double ct);
     double const & GetConstant() const;
   private:
     itkMultiplyByConstantImageFilterID2DID2(itkMultiplyByConstantImageFilterID2DID2 const & arg0);
     void operator=(itkMultiplyByConstantImageFilterID2DID2 const & arg0);
   protected:
     itkMultiplyByConstantImageFilterID2DID2();
     ~itkMultiplyByConstantImageFilterID2DID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMultiplyByConstantImageFilterID3DID3 : public itkMultiplyByConstantImageFilterID3DID3_Superclass {
   public:
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  Input1Input2OutputMultiplyOperatorCheck = 1 };
     static itkMultiplyByConstantImageFilterID3DID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetConstant(double ct);
     double const & GetConstant() const;
   private:
     itkMultiplyByConstantImageFilterID3DID3(itkMultiplyByConstantImageFilterID3DID3 const & arg0);
     void operator=(itkMultiplyByConstantImageFilterID3DID3 const & arg0);
   protected:
     itkMultiplyByConstantImageFilterID3DID3();
     ~itkMultiplyByConstantImageFilterID3DID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMultiplyByConstantImageFilterIF2DIF2 : public itkMultiplyByConstantImageFilterIF2DIF2_Superclass {
   public:
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  Input1Input2OutputMultiplyOperatorCheck = 1 };
     static itkMultiplyByConstantImageFilterIF2DIF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetConstant(double ct);
     double const & GetConstant() const;
   private:
     itkMultiplyByConstantImageFilterIF2DIF2(itkMultiplyByConstantImageFilterIF2DIF2 const & arg0);
     void operator=(itkMultiplyByConstantImageFilterIF2DIF2 const & arg0);
   protected:
     itkMultiplyByConstantImageFilterIF2DIF2();
     ~itkMultiplyByConstantImageFilterIF2DIF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMultiplyByConstantImageFilterIF3DIF3 : public itkMultiplyByConstantImageFilterIF3DIF3_Superclass {
   public:
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  Input1Input2OutputMultiplyOperatorCheck = 1 };
     static itkMultiplyByConstantImageFilterIF3DIF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetConstant(double ct);
     double const & GetConstant() const;
   private:
     itkMultiplyByConstantImageFilterIF3DIF3(itkMultiplyByConstantImageFilterIF3DIF3 const & arg0);
     void operator=(itkMultiplyByConstantImageFilterIF3DIF3 const & arg0);
   protected:
     itkMultiplyByConstantImageFilterIF3DIF3();
     ~itkMultiplyByConstantImageFilterIF3DIF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMultiplyByConstantImageFilterIUC2DIUC2 : public itkMultiplyByConstantImageFilterIUC2DIUC2_Superclass {
   public:
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  Input1Input2OutputMultiplyOperatorCheck = 1 };
     static itkMultiplyByConstantImageFilterIUC2DIUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetConstant(double ct);
     double const & GetConstant() const;
   private:
     itkMultiplyByConstantImageFilterIUC2DIUC2(itkMultiplyByConstantImageFilterIUC2DIUC2 const & arg0);
     void operator=(itkMultiplyByConstantImageFilterIUC2DIUC2 const & arg0);
   protected:
     itkMultiplyByConstantImageFilterIUC2DIUC2();
     ~itkMultiplyByConstantImageFilterIUC2DIUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMultiplyByConstantImageFilterIUC3DIUC3 : public itkMultiplyByConstantImageFilterIUC3DIUC3_Superclass {
   public:
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  Input1Input2OutputMultiplyOperatorCheck = 1 };
     static itkMultiplyByConstantImageFilterIUC3DIUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetConstant(double ct);
     double const & GetConstant() const;
   private:
     itkMultiplyByConstantImageFilterIUC3DIUC3(itkMultiplyByConstantImageFilterIUC3DIUC3 const & arg0);
     void operator=(itkMultiplyByConstantImageFilterIUC3DIUC3 const & arg0);
   protected:
     itkMultiplyByConstantImageFilterIUC3DIUC3();
     ~itkMultiplyByConstantImageFilterIUC3DIUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMultiplyByConstantImageFilterIUL2DIUL2 : public itkMultiplyByConstantImageFilterIUL2DIUL2_Superclass {
   public:
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  Input1Input2OutputMultiplyOperatorCheck = 1 };
     static itkMultiplyByConstantImageFilterIUL2DIUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetConstant(double ct);
     double const & GetConstant() const;
   private:
     itkMultiplyByConstantImageFilterIUL2DIUL2(itkMultiplyByConstantImageFilterIUL2DIUL2 const & arg0);
     void operator=(itkMultiplyByConstantImageFilterIUL2DIUL2 const & arg0);
   protected:
     itkMultiplyByConstantImageFilterIUL2DIUL2();
     ~itkMultiplyByConstantImageFilterIUL2DIUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMultiplyByConstantImageFilterIUL3DIUL3 : public itkMultiplyByConstantImageFilterIUL3DIUL3_Superclass {
   public:
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  Input1Input2OutputMultiplyOperatorCheck = 1 };
     static itkMultiplyByConstantImageFilterIUL3DIUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetConstant(double ct);
     double const & GetConstant() const;
   private:
     itkMultiplyByConstantImageFilterIUL3DIUL3(itkMultiplyByConstantImageFilterIUL3DIUL3 const & arg0);
     void operator=(itkMultiplyByConstantImageFilterIUL3DIUL3 const & arg0);
   protected:
     itkMultiplyByConstantImageFilterIUL3DIUL3();
     ~itkMultiplyByConstantImageFilterIUL3DIUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMultiplyByConstantImageFilterIUS2DIUS2 : public itkMultiplyByConstantImageFilterIUS2DIUS2_Superclass {
   public:
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  Input1Input2OutputMultiplyOperatorCheck = 1 };
     static itkMultiplyByConstantImageFilterIUS2DIUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetConstant(double ct);
     double const & GetConstant() const;
   private:
     itkMultiplyByConstantImageFilterIUS2DIUS2(itkMultiplyByConstantImageFilterIUS2DIUS2 const & arg0);
     void operator=(itkMultiplyByConstantImageFilterIUS2DIUS2 const & arg0);
   protected:
     itkMultiplyByConstantImageFilterIUS2DIUS2();
     ~itkMultiplyByConstantImageFilterIUS2DIUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMultiplyByConstantImageFilterIUS3DIUS3 : public itkMultiplyByConstantImageFilterIUS3DIUS3_Superclass {
   public:
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  Input1Input2OutputMultiplyOperatorCheck = 1 };
     static itkMultiplyByConstantImageFilterIUS3DIUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetConstant(double ct);
     double const & GetConstant() const;
   private:
     itkMultiplyByConstantImageFilterIUS3DIUS3(itkMultiplyByConstantImageFilterIUS3DIUS3 const & arg0);
     void operator=(itkMultiplyByConstantImageFilterIUS3DIUS3 const & arg0);
   protected:
     itkMultiplyByConstantImageFilterIUS3DIUS3();
     ~itkMultiplyByConstantImageFilterIUS3DIUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


