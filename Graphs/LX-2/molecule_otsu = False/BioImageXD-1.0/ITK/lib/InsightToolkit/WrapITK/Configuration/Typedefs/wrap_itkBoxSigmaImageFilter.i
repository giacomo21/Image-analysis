// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkBoxSigmaImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkBoxSigmaImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkBoxSigmaImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkBoxSigmaImageFilterJava
#endif
#ifdef SWIGLUA
%module itkBoxSigmaImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkBoxSigmaImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkBoxSigmaImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkBoxSigmaImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkBoxSigmaImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkBoxSigmaImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkBoxSigmaImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkBoxSigmaImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkBoxSigmaImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkBoxSigmaImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkBoxSigmaImageFilterPython
#endif
#ifdef SWIGR
%module itkBoxSigmaImageFilterR
#endif
#ifdef SWIGRUBY
%module itkBoxSigmaImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkBoxSigmaImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkBoxSigmaImageFilterTcl
#endif
#ifdef SWIGXML
%module itkBoxSigmaImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Review.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkBoxImageFilter.i
%import wrap_ITKRegions.i


%include itk.i
%include wrap_itkBoxSigmaImageFilter_ext.i


 class itkBoxSigmaImageFilterID2ID2 : public itkBoxImageFilterID2ID2 {
   public:
     enum  {  OutputImageDimension = 2 };
     enum  {  InputImageDimension = 2 };
     enum  {  SameDimension = 1 };
     static itkBoxSigmaImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkBoxSigmaImageFilterID2ID2(itkBoxSigmaImageFilterID2ID2 const & arg0);
     void operator=(itkBoxSigmaImageFilterID2ID2 const & arg0);
   protected:
     itkBoxSigmaImageFilterID2ID2();
     ~itkBoxSigmaImageFilterID2ID2();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkBoxSigmaImageFilterID2ID2_Pointer {
   public:
     itkBoxSigmaImageFilterID2ID2_Pointer();
     itkBoxSigmaImageFilterID2ID2_Pointer(itkBoxSigmaImageFilterID2ID2_Pointer const & p);
     itkBoxSigmaImageFilterID2ID2_Pointer(itkBoxSigmaImageFilterID2ID2 * p);
     ~itkBoxSigmaImageFilterID2ID2_Pointer();
     itkBoxSigmaImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBoxSigmaImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkBoxSigmaImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkBoxSigmaImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkBoxSigmaImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkBoxSigmaImageFilterID2ID2_Pointer const & r) const;
     itkBoxSigmaImageFilterID2ID2_Pointer & operator=(itkBoxSigmaImageFilterID2ID2_Pointer const & r);
     itkBoxSigmaImageFilterID2ID2_Pointer & operator=(itkBoxSigmaImageFilterID2ID2 * r);
     itkBoxSigmaImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBoxSigmaImageFilterID3ID3 : public itkBoxImageFilterID3ID3 {
   public:
     enum  {  OutputImageDimension = 3 };
     enum  {  InputImageDimension = 3 };
     enum  {  SameDimension = 1 };
     static itkBoxSigmaImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkBoxSigmaImageFilterID3ID3(itkBoxSigmaImageFilterID3ID3 const & arg0);
     void operator=(itkBoxSigmaImageFilterID3ID3 const & arg0);
   protected:
     itkBoxSigmaImageFilterID3ID3();
     ~itkBoxSigmaImageFilterID3ID3();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkBoxSigmaImageFilterID3ID3_Pointer {
   public:
     itkBoxSigmaImageFilterID3ID3_Pointer();
     itkBoxSigmaImageFilterID3ID3_Pointer(itkBoxSigmaImageFilterID3ID3_Pointer const & p);
     itkBoxSigmaImageFilterID3ID3_Pointer(itkBoxSigmaImageFilterID3ID3 * p);
     ~itkBoxSigmaImageFilterID3ID3_Pointer();
     itkBoxSigmaImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBoxSigmaImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkBoxSigmaImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkBoxSigmaImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkBoxSigmaImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkBoxSigmaImageFilterID3ID3_Pointer const & r) const;
     itkBoxSigmaImageFilterID3ID3_Pointer & operator=(itkBoxSigmaImageFilterID3ID3_Pointer const & r);
     itkBoxSigmaImageFilterID3ID3_Pointer & operator=(itkBoxSigmaImageFilterID3ID3 * r);
     itkBoxSigmaImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBoxSigmaImageFilterIF2IF2 : public itkBoxImageFilterIF2IF2 {
   public:
     enum  {  OutputImageDimension = 2 };
     enum  {  InputImageDimension = 2 };
     enum  {  SameDimension = 1 };
     static itkBoxSigmaImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkBoxSigmaImageFilterIF2IF2(itkBoxSigmaImageFilterIF2IF2 const & arg0);
     void operator=(itkBoxSigmaImageFilterIF2IF2 const & arg0);
   protected:
     itkBoxSigmaImageFilterIF2IF2();
     ~itkBoxSigmaImageFilterIF2IF2();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkBoxSigmaImageFilterIF2IF2_Pointer {
   public:
     itkBoxSigmaImageFilterIF2IF2_Pointer();
     itkBoxSigmaImageFilterIF2IF2_Pointer(itkBoxSigmaImageFilterIF2IF2_Pointer const & p);
     itkBoxSigmaImageFilterIF2IF2_Pointer(itkBoxSigmaImageFilterIF2IF2 * p);
     ~itkBoxSigmaImageFilterIF2IF2_Pointer();
     itkBoxSigmaImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBoxSigmaImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkBoxSigmaImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkBoxSigmaImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkBoxSigmaImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkBoxSigmaImageFilterIF2IF2_Pointer const & r) const;
     itkBoxSigmaImageFilterIF2IF2_Pointer & operator=(itkBoxSigmaImageFilterIF2IF2_Pointer const & r);
     itkBoxSigmaImageFilterIF2IF2_Pointer & operator=(itkBoxSigmaImageFilterIF2IF2 * r);
     itkBoxSigmaImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBoxSigmaImageFilterIF3IF3 : public itkBoxImageFilterIF3IF3 {
   public:
     enum  {  OutputImageDimension = 3 };
     enum  {  InputImageDimension = 3 };
     enum  {  SameDimension = 1 };
     static itkBoxSigmaImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkBoxSigmaImageFilterIF3IF3(itkBoxSigmaImageFilterIF3IF3 const & arg0);
     void operator=(itkBoxSigmaImageFilterIF3IF3 const & arg0);
   protected:
     itkBoxSigmaImageFilterIF3IF3();
     ~itkBoxSigmaImageFilterIF3IF3();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkBoxSigmaImageFilterIF3IF3_Pointer {
   public:
     itkBoxSigmaImageFilterIF3IF3_Pointer();
     itkBoxSigmaImageFilterIF3IF3_Pointer(itkBoxSigmaImageFilterIF3IF3_Pointer const & p);
     itkBoxSigmaImageFilterIF3IF3_Pointer(itkBoxSigmaImageFilterIF3IF3 * p);
     ~itkBoxSigmaImageFilterIF3IF3_Pointer();
     itkBoxSigmaImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBoxSigmaImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkBoxSigmaImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkBoxSigmaImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkBoxSigmaImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkBoxSigmaImageFilterIF3IF3_Pointer const & r) const;
     itkBoxSigmaImageFilterIF3IF3_Pointer & operator=(itkBoxSigmaImageFilterIF3IF3_Pointer const & r);
     itkBoxSigmaImageFilterIF3IF3_Pointer & operator=(itkBoxSigmaImageFilterIF3IF3 * r);
     itkBoxSigmaImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBoxSigmaImageFilterIUC2IUC2 : public itkBoxImageFilterIUC2IUC2 {
   public:
     enum  {  OutputImageDimension = 2 };
     enum  {  InputImageDimension = 2 };
     enum  {  SameDimension = 1 };
     static itkBoxSigmaImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkBoxSigmaImageFilterIUC2IUC2(itkBoxSigmaImageFilterIUC2IUC2 const & arg0);
     void operator=(itkBoxSigmaImageFilterIUC2IUC2 const & arg0);
   protected:
     itkBoxSigmaImageFilterIUC2IUC2();
     ~itkBoxSigmaImageFilterIUC2IUC2();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkBoxSigmaImageFilterIUC2IUC2_Pointer {
   public:
     itkBoxSigmaImageFilterIUC2IUC2_Pointer();
     itkBoxSigmaImageFilterIUC2IUC2_Pointer(itkBoxSigmaImageFilterIUC2IUC2_Pointer const & p);
     itkBoxSigmaImageFilterIUC2IUC2_Pointer(itkBoxSigmaImageFilterIUC2IUC2 * p);
     ~itkBoxSigmaImageFilterIUC2IUC2_Pointer();
     itkBoxSigmaImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBoxSigmaImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkBoxSigmaImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkBoxSigmaImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkBoxSigmaImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkBoxSigmaImageFilterIUC2IUC2_Pointer const & r) const;
     itkBoxSigmaImageFilterIUC2IUC2_Pointer & operator=(itkBoxSigmaImageFilterIUC2IUC2_Pointer const & r);
     itkBoxSigmaImageFilterIUC2IUC2_Pointer & operator=(itkBoxSigmaImageFilterIUC2IUC2 * r);
     itkBoxSigmaImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBoxSigmaImageFilterIUC3IUC3 : public itkBoxImageFilterIUC3IUC3 {
   public:
     enum  {  OutputImageDimension = 3 };
     enum  {  InputImageDimension = 3 };
     enum  {  SameDimension = 1 };
     static itkBoxSigmaImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkBoxSigmaImageFilterIUC3IUC3(itkBoxSigmaImageFilterIUC3IUC3 const & arg0);
     void operator=(itkBoxSigmaImageFilterIUC3IUC3 const & arg0);
   protected:
     itkBoxSigmaImageFilterIUC3IUC3();
     ~itkBoxSigmaImageFilterIUC3IUC3();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkBoxSigmaImageFilterIUC3IUC3_Pointer {
   public:
     itkBoxSigmaImageFilterIUC3IUC3_Pointer();
     itkBoxSigmaImageFilterIUC3IUC3_Pointer(itkBoxSigmaImageFilterIUC3IUC3_Pointer const & p);
     itkBoxSigmaImageFilterIUC3IUC3_Pointer(itkBoxSigmaImageFilterIUC3IUC3 * p);
     ~itkBoxSigmaImageFilterIUC3IUC3_Pointer();
     itkBoxSigmaImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBoxSigmaImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkBoxSigmaImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkBoxSigmaImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkBoxSigmaImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkBoxSigmaImageFilterIUC3IUC3_Pointer const & r) const;
     itkBoxSigmaImageFilterIUC3IUC3_Pointer & operator=(itkBoxSigmaImageFilterIUC3IUC3_Pointer const & r);
     itkBoxSigmaImageFilterIUC3IUC3_Pointer & operator=(itkBoxSigmaImageFilterIUC3IUC3 * r);
     itkBoxSigmaImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBoxSigmaImageFilterIUL2IUL2 : public itkBoxImageFilterIUL2IUL2 {
   public:
     enum  {  OutputImageDimension = 2 };
     enum  {  InputImageDimension = 2 };
     enum  {  SameDimension = 1 };
     static itkBoxSigmaImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkBoxSigmaImageFilterIUL2IUL2(itkBoxSigmaImageFilterIUL2IUL2 const & arg0);
     void operator=(itkBoxSigmaImageFilterIUL2IUL2 const & arg0);
   protected:
     itkBoxSigmaImageFilterIUL2IUL2();
     ~itkBoxSigmaImageFilterIUL2IUL2();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkBoxSigmaImageFilterIUL2IUL2_Pointer {
   public:
     itkBoxSigmaImageFilterIUL2IUL2_Pointer();
     itkBoxSigmaImageFilterIUL2IUL2_Pointer(itkBoxSigmaImageFilterIUL2IUL2_Pointer const & p);
     itkBoxSigmaImageFilterIUL2IUL2_Pointer(itkBoxSigmaImageFilterIUL2IUL2 * p);
     ~itkBoxSigmaImageFilterIUL2IUL2_Pointer();
     itkBoxSigmaImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBoxSigmaImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkBoxSigmaImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkBoxSigmaImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkBoxSigmaImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkBoxSigmaImageFilterIUL2IUL2_Pointer const & r) const;
     itkBoxSigmaImageFilterIUL2IUL2_Pointer & operator=(itkBoxSigmaImageFilterIUL2IUL2_Pointer const & r);
     itkBoxSigmaImageFilterIUL2IUL2_Pointer & operator=(itkBoxSigmaImageFilterIUL2IUL2 * r);
     itkBoxSigmaImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBoxSigmaImageFilterIUL3IUL3 : public itkBoxImageFilterIUL3IUL3 {
   public:
     enum  {  OutputImageDimension = 3 };
     enum  {  InputImageDimension = 3 };
     enum  {  SameDimension = 1 };
     static itkBoxSigmaImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkBoxSigmaImageFilterIUL3IUL3(itkBoxSigmaImageFilterIUL3IUL3 const & arg0);
     void operator=(itkBoxSigmaImageFilterIUL3IUL3 const & arg0);
   protected:
     itkBoxSigmaImageFilterIUL3IUL3();
     ~itkBoxSigmaImageFilterIUL3IUL3();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkBoxSigmaImageFilterIUL3IUL3_Pointer {
   public:
     itkBoxSigmaImageFilterIUL3IUL3_Pointer();
     itkBoxSigmaImageFilterIUL3IUL3_Pointer(itkBoxSigmaImageFilterIUL3IUL3_Pointer const & p);
     itkBoxSigmaImageFilterIUL3IUL3_Pointer(itkBoxSigmaImageFilterIUL3IUL3 * p);
     ~itkBoxSigmaImageFilterIUL3IUL3_Pointer();
     itkBoxSigmaImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBoxSigmaImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkBoxSigmaImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkBoxSigmaImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkBoxSigmaImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkBoxSigmaImageFilterIUL3IUL3_Pointer const & r) const;
     itkBoxSigmaImageFilterIUL3IUL3_Pointer & operator=(itkBoxSigmaImageFilterIUL3IUL3_Pointer const & r);
     itkBoxSigmaImageFilterIUL3IUL3_Pointer & operator=(itkBoxSigmaImageFilterIUL3IUL3 * r);
     itkBoxSigmaImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBoxSigmaImageFilterIUS2IUS2 : public itkBoxImageFilterIUS2IUS2 {
   public:
     enum  {  OutputImageDimension = 2 };
     enum  {  InputImageDimension = 2 };
     enum  {  SameDimension = 1 };
     static itkBoxSigmaImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkBoxSigmaImageFilterIUS2IUS2(itkBoxSigmaImageFilterIUS2IUS2 const & arg0);
     void operator=(itkBoxSigmaImageFilterIUS2IUS2 const & arg0);
   protected:
     itkBoxSigmaImageFilterIUS2IUS2();
     ~itkBoxSigmaImageFilterIUS2IUS2();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkBoxSigmaImageFilterIUS2IUS2_Pointer {
   public:
     itkBoxSigmaImageFilterIUS2IUS2_Pointer();
     itkBoxSigmaImageFilterIUS2IUS2_Pointer(itkBoxSigmaImageFilterIUS2IUS2_Pointer const & p);
     itkBoxSigmaImageFilterIUS2IUS2_Pointer(itkBoxSigmaImageFilterIUS2IUS2 * p);
     ~itkBoxSigmaImageFilterIUS2IUS2_Pointer();
     itkBoxSigmaImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBoxSigmaImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkBoxSigmaImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkBoxSigmaImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkBoxSigmaImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkBoxSigmaImageFilterIUS2IUS2_Pointer const & r) const;
     itkBoxSigmaImageFilterIUS2IUS2_Pointer & operator=(itkBoxSigmaImageFilterIUS2IUS2_Pointer const & r);
     itkBoxSigmaImageFilterIUS2IUS2_Pointer & operator=(itkBoxSigmaImageFilterIUS2IUS2 * r);
     itkBoxSigmaImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBoxSigmaImageFilterIUS3IUS3 : public itkBoxImageFilterIUS3IUS3 {
   public:
     enum  {  OutputImageDimension = 3 };
     enum  {  InputImageDimension = 3 };
     enum  {  SameDimension = 1 };
     static itkBoxSigmaImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkBoxSigmaImageFilterIUS3IUS3(itkBoxSigmaImageFilterIUS3IUS3 const & arg0);
     void operator=(itkBoxSigmaImageFilterIUS3IUS3 const & arg0);
   protected:
     itkBoxSigmaImageFilterIUS3IUS3();
     ~itkBoxSigmaImageFilterIUS3IUS3();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkBoxSigmaImageFilterIUS3IUS3_Pointer {
   public:
     itkBoxSigmaImageFilterIUS3IUS3_Pointer();
     itkBoxSigmaImageFilterIUS3IUS3_Pointer(itkBoxSigmaImageFilterIUS3IUS3_Pointer const & p);
     itkBoxSigmaImageFilterIUS3IUS3_Pointer(itkBoxSigmaImageFilterIUS3IUS3 * p);
     ~itkBoxSigmaImageFilterIUS3IUS3_Pointer();
     itkBoxSigmaImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBoxSigmaImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkBoxSigmaImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkBoxSigmaImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkBoxSigmaImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkBoxSigmaImageFilterIUS3IUS3_Pointer const & r) const;
     itkBoxSigmaImageFilterIUS3IUS3_Pointer & operator=(itkBoxSigmaImageFilterIUS3IUS3_Pointer const & r);
     itkBoxSigmaImageFilterIUS3IUS3_Pointer & operator=(itkBoxSigmaImageFilterIUS3IUS3 * r);
     itkBoxSigmaImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


