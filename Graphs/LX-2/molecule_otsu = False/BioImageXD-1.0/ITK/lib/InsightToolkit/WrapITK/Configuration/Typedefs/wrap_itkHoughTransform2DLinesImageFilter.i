// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkHoughTransform2DLinesImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkHoughTransform2DLinesImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkHoughTransform2DLinesImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkHoughTransform2DLinesImageFilterJava
#endif
#ifdef SWIGLUA
%module itkHoughTransform2DLinesImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkHoughTransform2DLinesImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkHoughTransform2DLinesImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkHoughTransform2DLinesImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkHoughTransform2DLinesImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkHoughTransform2DLinesImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkHoughTransform2DLinesImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkHoughTransform2DLinesImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkHoughTransform2DLinesImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkHoughTransform2DLinesImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkHoughTransform2DLinesImageFilterPython
#endif
#ifdef SWIGR
%module itkHoughTransform2DLinesImageFilterR
#endif
#ifdef SWIGRUBY
%module itkHoughTransform2DLinesImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkHoughTransform2DLinesImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkHoughTransform2DLinesImageFilterTcl
#endif
#ifdef SWIGXML
%module itkHoughTransform2DLinesImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Numerics.includes"
#include "Transforms.includes"
#include "SpatialObject.includes"
#include "Resize.includes"
#include "Calculators.includes"
#include "Registration.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImage.i
%import wrap_itkImageToImageFilterA.i
%import wrap_itkLineSpatialObject.i


%include itk.i
%include wrap_itkHoughTransform2DLinesImageFilter_ext.i


 class itkHoughTransform2DLinesImageFilterDD : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  IntConvertibleToOutputCheck = 1 };
     enum  {  InputGreaterThanFloatCheck = 1 };
     enum  {  OutputPlusIntCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkHoughTransform2DLinesImageFilterDD_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void GenerateData();
     virtual void SetThreshold(float const _arg);
     virtual float GetThreshold() const;
     virtual void SetAngleResolution(float const _arg);
     virtual float GetAngleResolution() const;
     void Simplify();
     virtual itkImageD2 * GetSimplifyAccumulator();
     std::list< itkLineSpatialObject2_Pointer > & GetLines(unsigned int n = 0);
     virtual void SetNumberOfLines(unsigned int const _arg);
     virtual unsigned int GetNumberOfLines() const;
     virtual void SetDiscRadius(float const _arg);
     virtual float GetDiscRadius() const;
     virtual void SetVariance(float const _arg);
     virtual float GetVariance() const;
   private:
     itkHoughTransform2DLinesImageFilterDD(itkHoughTransform2DLinesImageFilterDD const & arg0);
     void operator=(itkHoughTransform2DLinesImageFilterDD const & arg0);
   protected:
     itkHoughTransform2DLinesImageFilterDD();
     ~itkHoughTransform2DLinesImageFilterDD();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateOutputInformation();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
 };


 class itkHoughTransform2DLinesImageFilterDD_Pointer {
   public:
     itkHoughTransform2DLinesImageFilterDD_Pointer();
     itkHoughTransform2DLinesImageFilterDD_Pointer(itkHoughTransform2DLinesImageFilterDD_Pointer const & p);
     itkHoughTransform2DLinesImageFilterDD_Pointer(itkHoughTransform2DLinesImageFilterDD * p);
     ~itkHoughTransform2DLinesImageFilterDD_Pointer();
     itkHoughTransform2DLinesImageFilterDD * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHoughTransform2DLinesImageFilterDD * GetPointer() const;
     bool operator<(itkHoughTransform2DLinesImageFilterDD_Pointer const & r) const;
     bool operator>(itkHoughTransform2DLinesImageFilterDD_Pointer const & r) const;
     bool operator<=(itkHoughTransform2DLinesImageFilterDD_Pointer const & r) const;
     bool operator>=(itkHoughTransform2DLinesImageFilterDD_Pointer const & r) const;
     itkHoughTransform2DLinesImageFilterDD_Pointer & operator=(itkHoughTransform2DLinesImageFilterDD_Pointer const & r);
     itkHoughTransform2DLinesImageFilterDD_Pointer & operator=(itkHoughTransform2DLinesImageFilterDD * r);
     itkHoughTransform2DLinesImageFilterDD * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHoughTransform2DLinesImageFilterFF : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  IntConvertibleToOutputCheck = 1 };
     enum  {  InputGreaterThanFloatCheck = 1 };
     enum  {  OutputPlusIntCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkHoughTransform2DLinesImageFilterFF_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void GenerateData();
     virtual void SetThreshold(float const _arg);
     virtual float GetThreshold() const;
     virtual void SetAngleResolution(float const _arg);
     virtual float GetAngleResolution() const;
     void Simplify();
     virtual itkImageF2 * GetSimplifyAccumulator();
     std::list< itkLineSpatialObject2_Pointer > & GetLines(unsigned int n = 0);
     virtual void SetNumberOfLines(unsigned int const _arg);
     virtual unsigned int GetNumberOfLines() const;
     virtual void SetDiscRadius(float const _arg);
     virtual float GetDiscRadius() const;
     virtual void SetVariance(float const _arg);
     virtual float GetVariance() const;
   private:
     itkHoughTransform2DLinesImageFilterFF(itkHoughTransform2DLinesImageFilterFF const & arg0);
     void operator=(itkHoughTransform2DLinesImageFilterFF const & arg0);
   protected:
     itkHoughTransform2DLinesImageFilterFF();
     ~itkHoughTransform2DLinesImageFilterFF();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateOutputInformation();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
 };


 class itkHoughTransform2DLinesImageFilterFF_Pointer {
   public:
     itkHoughTransform2DLinesImageFilterFF_Pointer();
     itkHoughTransform2DLinesImageFilterFF_Pointer(itkHoughTransform2DLinesImageFilterFF_Pointer const & p);
     itkHoughTransform2DLinesImageFilterFF_Pointer(itkHoughTransform2DLinesImageFilterFF * p);
     ~itkHoughTransform2DLinesImageFilterFF_Pointer();
     itkHoughTransform2DLinesImageFilterFF * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHoughTransform2DLinesImageFilterFF * GetPointer() const;
     bool operator<(itkHoughTransform2DLinesImageFilterFF_Pointer const & r) const;
     bool operator>(itkHoughTransform2DLinesImageFilterFF_Pointer const & r) const;
     bool operator<=(itkHoughTransform2DLinesImageFilterFF_Pointer const & r) const;
     bool operator>=(itkHoughTransform2DLinesImageFilterFF_Pointer const & r) const;
     itkHoughTransform2DLinesImageFilterFF_Pointer & operator=(itkHoughTransform2DLinesImageFilterFF_Pointer const & r);
     itkHoughTransform2DLinesImageFilterFF_Pointer & operator=(itkHoughTransform2DLinesImageFilterFF * r);
     itkHoughTransform2DLinesImageFilterFF * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


