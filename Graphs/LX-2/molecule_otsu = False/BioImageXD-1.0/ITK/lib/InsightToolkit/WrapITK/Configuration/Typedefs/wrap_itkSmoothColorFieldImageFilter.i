// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkSmoothColorFieldImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkSmoothColorFieldImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkSmoothColorFieldImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkSmoothColorFieldImageFilterJava
#endif
#ifdef SWIGLUA
%module itkSmoothColorFieldImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkSmoothColorFieldImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkSmoothColorFieldImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkSmoothColorFieldImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkSmoothColorFieldImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkSmoothColorFieldImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkSmoothColorFieldImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkSmoothColorFieldImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkSmoothColorFieldImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkSmoothColorFieldImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkSmoothColorFieldImageFilterPython
#endif
#ifdef SWIGR
%module itkSmoothColorFieldImageFilterR
#endif
#ifdef SWIGRUBY
%module itkSmoothColorFieldImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkSmoothColorFieldImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkSmoothColorFieldImageFilterTcl
#endif
#ifdef SWIGXML
%module itkSmoothColorFieldImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "itkBXD.includes"
%}


%{
%}




%import wrap_itkCovariantVector.i
%import wrap_itkIndex.i
%import wrap_ITKRegions.i
%import wrap_itkImage.i
%import wrap_itkVector.i
%import wrap_ITKCommonBase.i
%import wrap_itkImageToImageFilterB.i


%include itk.i
%include wrap_itkSmoothColorFieldImageFilter_ext.i


 class itkSmoothColorFieldImageFilterID2ICVF22 : public itkImageToImageFilterID2ICVF22 {
   public:
     enum  {  ImageDimension = 2 };
     static itkSmoothColorFieldImageFilterID2ICVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSmoothingLength(double const _arg);
     virtual double GetSmoothingLength();
     virtual void SetUseParticles(int const _arg);
     virtual int GetUseParticles();
     virtual void SetZSpacingMultiplier(double const _arg);
     virtual double GetZSpacingMultiplier();
     virtual void GenerateInputRequestedRegion();
     virtual void InitializeRegions();
     virtual int SetParticleImage(itkImageD2 const * arg0);
     void UseParticlesOn();
     void UseParticlesOff();
     void CreateRandomParticles(long arg0);
   private:
     itkSmoothColorFieldImageFilterID2ICVF22(itkSmoothColorFieldImageFilterID2ICVF22 const & arg0);
     void operator=(itkSmoothColorFieldImageFilterID2ICVF22 const & arg0);
   protected:
     itkSmoothColorFieldImageFilterID2ICVF22();
     ~itkSmoothColorFieldImageFilterID2ICVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & arg0, int arg1);
     itkCovariantVectorF2 CalculateSmoothColorValue(itkImageD2 const * arg0, itkIndex2 arg1, itkIndex2 arg2, double arg3) const;
     void InitializePixelSmoothingKernelSize(itkImageD2 const * arg0);
     void SetGridRegions(itkImageD2 const * arg0);
     void ClearParticleInfo();
 };


 class itkSmoothColorFieldImageFilterID2ICVF22_Pointer {
   public:
     itkSmoothColorFieldImageFilterID2ICVF22_Pointer();
     itkSmoothColorFieldImageFilterID2ICVF22_Pointer(itkSmoothColorFieldImageFilterID2ICVF22_Pointer const & p);
     itkSmoothColorFieldImageFilterID2ICVF22_Pointer(itkSmoothColorFieldImageFilterID2ICVF22 * p);
     ~itkSmoothColorFieldImageFilterID2ICVF22_Pointer();
     itkSmoothColorFieldImageFilterID2ICVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSmoothColorFieldImageFilterID2ICVF22 * GetPointer() const;
     bool operator<(itkSmoothColorFieldImageFilterID2ICVF22_Pointer const & r) const;
     bool operator>(itkSmoothColorFieldImageFilterID2ICVF22_Pointer const & r) const;
     bool operator<=(itkSmoothColorFieldImageFilterID2ICVF22_Pointer const & r) const;
     bool operator>=(itkSmoothColorFieldImageFilterID2ICVF22_Pointer const & r) const;
     itkSmoothColorFieldImageFilterID2ICVF22_Pointer & operator=(itkSmoothColorFieldImageFilterID2ICVF22_Pointer const & r);
     itkSmoothColorFieldImageFilterID2ICVF22_Pointer & operator=(itkSmoothColorFieldImageFilterID2ICVF22 * r);
     itkSmoothColorFieldImageFilterID2ICVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSmoothColorFieldImageFilterID2IVF22 : public itkImageToImageFilterID2IVF22 {
   public:
     enum  {  ImageDimension = 2 };
     static itkSmoothColorFieldImageFilterID2IVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSmoothingLength(double const _arg);
     virtual double GetSmoothingLength();
     virtual void SetUseParticles(int const _arg);
     virtual int GetUseParticles();
     virtual void SetZSpacingMultiplier(double const _arg);
     virtual double GetZSpacingMultiplier();
     virtual void GenerateInputRequestedRegion();
     virtual void InitializeRegions();
     virtual int SetParticleImage(itkImageD2 const * arg0);
     void UseParticlesOn();
     void UseParticlesOff();
     void CreateRandomParticles(long arg0);
   private:
     itkSmoothColorFieldImageFilterID2IVF22(itkSmoothColorFieldImageFilterID2IVF22 const & arg0);
     void operator=(itkSmoothColorFieldImageFilterID2IVF22 const & arg0);
   protected:
     itkSmoothColorFieldImageFilterID2IVF22();
     ~itkSmoothColorFieldImageFilterID2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & arg0, int arg1);
     itkVectorF2 CalculateSmoothColorValue(itkImageD2 const * arg0, itkIndex2 arg1, itkIndex2 arg2, double arg3) const;
     void InitializePixelSmoothingKernelSize(itkImageD2 const * arg0);
     void SetGridRegions(itkImageD2 const * arg0);
     void ClearParticleInfo();
 };


 class itkSmoothColorFieldImageFilterID2IVF22_Pointer {
   public:
     itkSmoothColorFieldImageFilterID2IVF22_Pointer();
     itkSmoothColorFieldImageFilterID2IVF22_Pointer(itkSmoothColorFieldImageFilterID2IVF22_Pointer const & p);
     itkSmoothColorFieldImageFilterID2IVF22_Pointer(itkSmoothColorFieldImageFilterID2IVF22 * p);
     ~itkSmoothColorFieldImageFilterID2IVF22_Pointer();
     itkSmoothColorFieldImageFilterID2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSmoothColorFieldImageFilterID2IVF22 * GetPointer() const;
     bool operator<(itkSmoothColorFieldImageFilterID2IVF22_Pointer const & r) const;
     bool operator>(itkSmoothColorFieldImageFilterID2IVF22_Pointer const & r) const;
     bool operator<=(itkSmoothColorFieldImageFilterID2IVF22_Pointer const & r) const;
     bool operator>=(itkSmoothColorFieldImageFilterID2IVF22_Pointer const & r) const;
     itkSmoothColorFieldImageFilterID2IVF22_Pointer & operator=(itkSmoothColorFieldImageFilterID2IVF22_Pointer const & r);
     itkSmoothColorFieldImageFilterID2IVF22_Pointer & operator=(itkSmoothColorFieldImageFilterID2IVF22 * r);
     itkSmoothColorFieldImageFilterID2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSmoothColorFieldImageFilterID3ICVF33 : public itkImageToImageFilterID3ICVF33 {
   public:
     enum  {  ImageDimension = 3 };
     static itkSmoothColorFieldImageFilterID3ICVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSmoothingLength(double const _arg);
     virtual double GetSmoothingLength();
     virtual void SetUseParticles(int const _arg);
     virtual int GetUseParticles();
     virtual void SetZSpacingMultiplier(double const _arg);
     virtual double GetZSpacingMultiplier();
     virtual void GenerateInputRequestedRegion();
     virtual void InitializeRegions();
     virtual int SetParticleImage(itkImageD3 const * arg0);
     void UseParticlesOn();
     void UseParticlesOff();
     void CreateRandomParticles(long arg0);
   private:
     itkSmoothColorFieldImageFilterID3ICVF33(itkSmoothColorFieldImageFilterID3ICVF33 const & arg0);
     void operator=(itkSmoothColorFieldImageFilterID3ICVF33 const & arg0);
   protected:
     itkSmoothColorFieldImageFilterID3ICVF33();
     ~itkSmoothColorFieldImageFilterID3ICVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & arg0, int arg1);
     itkCovariantVectorF3 CalculateSmoothColorValue(itkImageD3 const * arg0, itkIndex3 arg1, itkIndex3 arg2, double arg3) const;
     void InitializePixelSmoothingKernelSize(itkImageD3 const * arg0);
     void SetGridRegions(itkImageD3 const * arg0);
     void ClearParticleInfo();
 };


 class itkSmoothColorFieldImageFilterID3ICVF33_Pointer {
   public:
     itkSmoothColorFieldImageFilterID3ICVF33_Pointer();
     itkSmoothColorFieldImageFilterID3ICVF33_Pointer(itkSmoothColorFieldImageFilterID3ICVF33_Pointer const & p);
     itkSmoothColorFieldImageFilterID3ICVF33_Pointer(itkSmoothColorFieldImageFilterID3ICVF33 * p);
     ~itkSmoothColorFieldImageFilterID3ICVF33_Pointer();
     itkSmoothColorFieldImageFilterID3ICVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSmoothColorFieldImageFilterID3ICVF33 * GetPointer() const;
     bool operator<(itkSmoothColorFieldImageFilterID3ICVF33_Pointer const & r) const;
     bool operator>(itkSmoothColorFieldImageFilterID3ICVF33_Pointer const & r) const;
     bool operator<=(itkSmoothColorFieldImageFilterID3ICVF33_Pointer const & r) const;
     bool operator>=(itkSmoothColorFieldImageFilterID3ICVF33_Pointer const & r) const;
     itkSmoothColorFieldImageFilterID3ICVF33_Pointer & operator=(itkSmoothColorFieldImageFilterID3ICVF33_Pointer const & r);
     itkSmoothColorFieldImageFilterID3ICVF33_Pointer & operator=(itkSmoothColorFieldImageFilterID3ICVF33 * r);
     itkSmoothColorFieldImageFilterID3ICVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSmoothColorFieldImageFilterID3IVF33 : public itkImageToImageFilterID3IVF33 {
   public:
     enum  {  ImageDimension = 3 };
     static itkSmoothColorFieldImageFilterID3IVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSmoothingLength(double const _arg);
     virtual double GetSmoothingLength();
     virtual void SetUseParticles(int const _arg);
     virtual int GetUseParticles();
     virtual void SetZSpacingMultiplier(double const _arg);
     virtual double GetZSpacingMultiplier();
     virtual void GenerateInputRequestedRegion();
     virtual void InitializeRegions();
     virtual int SetParticleImage(itkImageD3 const * arg0);
     void UseParticlesOn();
     void UseParticlesOff();
     void CreateRandomParticles(long arg0);
   private:
     itkSmoothColorFieldImageFilterID3IVF33(itkSmoothColorFieldImageFilterID3IVF33 const & arg0);
     void operator=(itkSmoothColorFieldImageFilterID3IVF33 const & arg0);
   protected:
     itkSmoothColorFieldImageFilterID3IVF33();
     ~itkSmoothColorFieldImageFilterID3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & arg0, int arg1);
     itkVectorF3 CalculateSmoothColorValue(itkImageD3 const * arg0, itkIndex3 arg1, itkIndex3 arg2, double arg3) const;
     void InitializePixelSmoothingKernelSize(itkImageD3 const * arg0);
     void SetGridRegions(itkImageD3 const * arg0);
     void ClearParticleInfo();
 };


 class itkSmoothColorFieldImageFilterID3IVF33_Pointer {
   public:
     itkSmoothColorFieldImageFilterID3IVF33_Pointer();
     itkSmoothColorFieldImageFilterID3IVF33_Pointer(itkSmoothColorFieldImageFilterID3IVF33_Pointer const & p);
     itkSmoothColorFieldImageFilterID3IVF33_Pointer(itkSmoothColorFieldImageFilterID3IVF33 * p);
     ~itkSmoothColorFieldImageFilterID3IVF33_Pointer();
     itkSmoothColorFieldImageFilterID3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSmoothColorFieldImageFilterID3IVF33 * GetPointer() const;
     bool operator<(itkSmoothColorFieldImageFilterID3IVF33_Pointer const & r) const;
     bool operator>(itkSmoothColorFieldImageFilterID3IVF33_Pointer const & r) const;
     bool operator<=(itkSmoothColorFieldImageFilterID3IVF33_Pointer const & r) const;
     bool operator>=(itkSmoothColorFieldImageFilterID3IVF33_Pointer const & r) const;
     itkSmoothColorFieldImageFilterID3IVF33_Pointer & operator=(itkSmoothColorFieldImageFilterID3IVF33_Pointer const & r);
     itkSmoothColorFieldImageFilterID3IVF33_Pointer & operator=(itkSmoothColorFieldImageFilterID3IVF33 * r);
     itkSmoothColorFieldImageFilterID3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSmoothColorFieldImageFilterIF2ICVF22 : public itkImageToImageFilterIF2ICVF22 {
   public:
     enum  {  ImageDimension = 2 };
     static itkSmoothColorFieldImageFilterIF2ICVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSmoothingLength(double const _arg);
     virtual double GetSmoothingLength();
     virtual void SetUseParticles(int const _arg);
     virtual int GetUseParticles();
     virtual void SetZSpacingMultiplier(double const _arg);
     virtual double GetZSpacingMultiplier();
     virtual void GenerateInputRequestedRegion();
     virtual void InitializeRegions();
     virtual int SetParticleImage(itkImageF2 const * arg0);
     void UseParticlesOn();
     void UseParticlesOff();
     void CreateRandomParticles(long arg0);
   private:
     itkSmoothColorFieldImageFilterIF2ICVF22(itkSmoothColorFieldImageFilterIF2ICVF22 const & arg0);
     void operator=(itkSmoothColorFieldImageFilterIF2ICVF22 const & arg0);
   protected:
     itkSmoothColorFieldImageFilterIF2ICVF22();
     ~itkSmoothColorFieldImageFilterIF2ICVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & arg0, int arg1);
     itkCovariantVectorF2 CalculateSmoothColorValue(itkImageF2 const * arg0, itkIndex2 arg1, itkIndex2 arg2, float arg3) const;
     void InitializePixelSmoothingKernelSize(itkImageF2 const * arg0);
     void SetGridRegions(itkImageF2 const * arg0);
     void ClearParticleInfo();
 };


 class itkSmoothColorFieldImageFilterIF2ICVF22_Pointer {
   public:
     itkSmoothColorFieldImageFilterIF2ICVF22_Pointer();
     itkSmoothColorFieldImageFilterIF2ICVF22_Pointer(itkSmoothColorFieldImageFilterIF2ICVF22_Pointer const & p);
     itkSmoothColorFieldImageFilterIF2ICVF22_Pointer(itkSmoothColorFieldImageFilterIF2ICVF22 * p);
     ~itkSmoothColorFieldImageFilterIF2ICVF22_Pointer();
     itkSmoothColorFieldImageFilterIF2ICVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSmoothColorFieldImageFilterIF2ICVF22 * GetPointer() const;
     bool operator<(itkSmoothColorFieldImageFilterIF2ICVF22_Pointer const & r) const;
     bool operator>(itkSmoothColorFieldImageFilterIF2ICVF22_Pointer const & r) const;
     bool operator<=(itkSmoothColorFieldImageFilterIF2ICVF22_Pointer const & r) const;
     bool operator>=(itkSmoothColorFieldImageFilterIF2ICVF22_Pointer const & r) const;
     itkSmoothColorFieldImageFilterIF2ICVF22_Pointer & operator=(itkSmoothColorFieldImageFilterIF2ICVF22_Pointer const & r);
     itkSmoothColorFieldImageFilterIF2ICVF22_Pointer & operator=(itkSmoothColorFieldImageFilterIF2ICVF22 * r);
     itkSmoothColorFieldImageFilterIF2ICVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSmoothColorFieldImageFilterIF2IVF22 : public itkImageToImageFilterIF2IVF22 {
   public:
     enum  {  ImageDimension = 2 };
     static itkSmoothColorFieldImageFilterIF2IVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSmoothingLength(double const _arg);
     virtual double GetSmoothingLength();
     virtual void SetUseParticles(int const _arg);
     virtual int GetUseParticles();
     virtual void SetZSpacingMultiplier(double const _arg);
     virtual double GetZSpacingMultiplier();
     virtual void GenerateInputRequestedRegion();
     virtual void InitializeRegions();
     virtual int SetParticleImage(itkImageF2 const * arg0);
     void UseParticlesOn();
     void UseParticlesOff();
     void CreateRandomParticles(long arg0);
   private:
     itkSmoothColorFieldImageFilterIF2IVF22(itkSmoothColorFieldImageFilterIF2IVF22 const & arg0);
     void operator=(itkSmoothColorFieldImageFilterIF2IVF22 const & arg0);
   protected:
     itkSmoothColorFieldImageFilterIF2IVF22();
     ~itkSmoothColorFieldImageFilterIF2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & arg0, int arg1);
     itkVectorF2 CalculateSmoothColorValue(itkImageF2 const * arg0, itkIndex2 arg1, itkIndex2 arg2, float arg3) const;
     void InitializePixelSmoothingKernelSize(itkImageF2 const * arg0);
     void SetGridRegions(itkImageF2 const * arg0);
     void ClearParticleInfo();
 };


 class itkSmoothColorFieldImageFilterIF2IVF22_Pointer {
   public:
     itkSmoothColorFieldImageFilterIF2IVF22_Pointer();
     itkSmoothColorFieldImageFilterIF2IVF22_Pointer(itkSmoothColorFieldImageFilterIF2IVF22_Pointer const & p);
     itkSmoothColorFieldImageFilterIF2IVF22_Pointer(itkSmoothColorFieldImageFilterIF2IVF22 * p);
     ~itkSmoothColorFieldImageFilterIF2IVF22_Pointer();
     itkSmoothColorFieldImageFilterIF2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSmoothColorFieldImageFilterIF2IVF22 * GetPointer() const;
     bool operator<(itkSmoothColorFieldImageFilterIF2IVF22_Pointer const & r) const;
     bool operator>(itkSmoothColorFieldImageFilterIF2IVF22_Pointer const & r) const;
     bool operator<=(itkSmoothColorFieldImageFilterIF2IVF22_Pointer const & r) const;
     bool operator>=(itkSmoothColorFieldImageFilterIF2IVF22_Pointer const & r) const;
     itkSmoothColorFieldImageFilterIF2IVF22_Pointer & operator=(itkSmoothColorFieldImageFilterIF2IVF22_Pointer const & r);
     itkSmoothColorFieldImageFilterIF2IVF22_Pointer & operator=(itkSmoothColorFieldImageFilterIF2IVF22 * r);
     itkSmoothColorFieldImageFilterIF2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSmoothColorFieldImageFilterIF3ICVF33 : public itkImageToImageFilterIF3ICVF33 {
   public:
     enum  {  ImageDimension = 3 };
     static itkSmoothColorFieldImageFilterIF3ICVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSmoothingLength(double const _arg);
     virtual double GetSmoothingLength();
     virtual void SetUseParticles(int const _arg);
     virtual int GetUseParticles();
     virtual void SetZSpacingMultiplier(double const _arg);
     virtual double GetZSpacingMultiplier();
     virtual void GenerateInputRequestedRegion();
     virtual void InitializeRegions();
     virtual int SetParticleImage(itkImageF3 const * arg0);
     void UseParticlesOn();
     void UseParticlesOff();
     void CreateRandomParticles(long arg0);
   private:
     itkSmoothColorFieldImageFilterIF3ICVF33(itkSmoothColorFieldImageFilterIF3ICVF33 const & arg0);
     void operator=(itkSmoothColorFieldImageFilterIF3ICVF33 const & arg0);
   protected:
     itkSmoothColorFieldImageFilterIF3ICVF33();
     ~itkSmoothColorFieldImageFilterIF3ICVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & arg0, int arg1);
     itkCovariantVectorF3 CalculateSmoothColorValue(itkImageF3 const * arg0, itkIndex3 arg1, itkIndex3 arg2, float arg3) const;
     void InitializePixelSmoothingKernelSize(itkImageF3 const * arg0);
     void SetGridRegions(itkImageF3 const * arg0);
     void ClearParticleInfo();
 };


 class itkSmoothColorFieldImageFilterIF3ICVF33_Pointer {
   public:
     itkSmoothColorFieldImageFilterIF3ICVF33_Pointer();
     itkSmoothColorFieldImageFilterIF3ICVF33_Pointer(itkSmoothColorFieldImageFilterIF3ICVF33_Pointer const & p);
     itkSmoothColorFieldImageFilterIF3ICVF33_Pointer(itkSmoothColorFieldImageFilterIF3ICVF33 * p);
     ~itkSmoothColorFieldImageFilterIF3ICVF33_Pointer();
     itkSmoothColorFieldImageFilterIF3ICVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSmoothColorFieldImageFilterIF3ICVF33 * GetPointer() const;
     bool operator<(itkSmoothColorFieldImageFilterIF3ICVF33_Pointer const & r) const;
     bool operator>(itkSmoothColorFieldImageFilterIF3ICVF33_Pointer const & r) const;
     bool operator<=(itkSmoothColorFieldImageFilterIF3ICVF33_Pointer const & r) const;
     bool operator>=(itkSmoothColorFieldImageFilterIF3ICVF33_Pointer const & r) const;
     itkSmoothColorFieldImageFilterIF3ICVF33_Pointer & operator=(itkSmoothColorFieldImageFilterIF3ICVF33_Pointer const & r);
     itkSmoothColorFieldImageFilterIF3ICVF33_Pointer & operator=(itkSmoothColorFieldImageFilterIF3ICVF33 * r);
     itkSmoothColorFieldImageFilterIF3ICVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSmoothColorFieldImageFilterIF3IVF33 : public itkImageToImageFilterIF3IVF33 {
   public:
     enum  {  ImageDimension = 3 };
     static itkSmoothColorFieldImageFilterIF3IVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSmoothingLength(double const _arg);
     virtual double GetSmoothingLength();
     virtual void SetUseParticles(int const _arg);
     virtual int GetUseParticles();
     virtual void SetZSpacingMultiplier(double const _arg);
     virtual double GetZSpacingMultiplier();
     virtual void GenerateInputRequestedRegion();
     virtual void InitializeRegions();
     virtual int SetParticleImage(itkImageF3 const * arg0);
     void UseParticlesOn();
     void UseParticlesOff();
     void CreateRandomParticles(long arg0);
   private:
     itkSmoothColorFieldImageFilterIF3IVF33(itkSmoothColorFieldImageFilterIF3IVF33 const & arg0);
     void operator=(itkSmoothColorFieldImageFilterIF3IVF33 const & arg0);
   protected:
     itkSmoothColorFieldImageFilterIF3IVF33();
     ~itkSmoothColorFieldImageFilterIF3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & arg0, int arg1);
     itkVectorF3 CalculateSmoothColorValue(itkImageF3 const * arg0, itkIndex3 arg1, itkIndex3 arg2, float arg3) const;
     void InitializePixelSmoothingKernelSize(itkImageF3 const * arg0);
     void SetGridRegions(itkImageF3 const * arg0);
     void ClearParticleInfo();
 };


 class itkSmoothColorFieldImageFilterIF3IVF33_Pointer {
   public:
     itkSmoothColorFieldImageFilterIF3IVF33_Pointer();
     itkSmoothColorFieldImageFilterIF3IVF33_Pointer(itkSmoothColorFieldImageFilterIF3IVF33_Pointer const & p);
     itkSmoothColorFieldImageFilterIF3IVF33_Pointer(itkSmoothColorFieldImageFilterIF3IVF33 * p);
     ~itkSmoothColorFieldImageFilterIF3IVF33_Pointer();
     itkSmoothColorFieldImageFilterIF3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSmoothColorFieldImageFilterIF3IVF33 * GetPointer() const;
     bool operator<(itkSmoothColorFieldImageFilterIF3IVF33_Pointer const & r) const;
     bool operator>(itkSmoothColorFieldImageFilterIF3IVF33_Pointer const & r) const;
     bool operator<=(itkSmoothColorFieldImageFilterIF3IVF33_Pointer const & r) const;
     bool operator>=(itkSmoothColorFieldImageFilterIF3IVF33_Pointer const & r) const;
     itkSmoothColorFieldImageFilterIF3IVF33_Pointer & operator=(itkSmoothColorFieldImageFilterIF3IVF33_Pointer const & r);
     itkSmoothColorFieldImageFilterIF3IVF33_Pointer & operator=(itkSmoothColorFieldImageFilterIF3IVF33 * r);
     itkSmoothColorFieldImageFilterIF3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSmoothColorFieldImageFilterIUC2ICVF22 : public itkImageToImageFilterIUC2ICVF22 {
   public:
     enum  {  ImageDimension = 2 };
     static itkSmoothColorFieldImageFilterIUC2ICVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSmoothingLength(double const _arg);
     virtual double GetSmoothingLength();
     virtual void SetUseParticles(int const _arg);
     virtual int GetUseParticles();
     virtual void SetZSpacingMultiplier(double const _arg);
     virtual double GetZSpacingMultiplier();
     virtual void GenerateInputRequestedRegion();
     virtual void InitializeRegions();
     virtual int SetParticleImage(itkImageUC2 const * arg0);
     void UseParticlesOn();
     void UseParticlesOff();
     void CreateRandomParticles(long arg0);
   private:
     itkSmoothColorFieldImageFilterIUC2ICVF22(itkSmoothColorFieldImageFilterIUC2ICVF22 const & arg0);
     void operator=(itkSmoothColorFieldImageFilterIUC2ICVF22 const & arg0);
   protected:
     itkSmoothColorFieldImageFilterIUC2ICVF22();
     ~itkSmoothColorFieldImageFilterIUC2ICVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & arg0, int arg1);
     itkCovariantVectorF2 CalculateSmoothColorValue(itkImageUC2 const * arg0, itkIndex2 arg1, itkIndex2 arg2, unsigned char arg3) const;
     void InitializePixelSmoothingKernelSize(itkImageUC2 const * arg0);
     void SetGridRegions(itkImageUC2 const * arg0);
     void ClearParticleInfo();
 };


 class itkSmoothColorFieldImageFilterIUC2ICVF22_Pointer {
   public:
     itkSmoothColorFieldImageFilterIUC2ICVF22_Pointer();
     itkSmoothColorFieldImageFilterIUC2ICVF22_Pointer(itkSmoothColorFieldImageFilterIUC2ICVF22_Pointer const & p);
     itkSmoothColorFieldImageFilterIUC2ICVF22_Pointer(itkSmoothColorFieldImageFilterIUC2ICVF22 * p);
     ~itkSmoothColorFieldImageFilterIUC2ICVF22_Pointer();
     itkSmoothColorFieldImageFilterIUC2ICVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSmoothColorFieldImageFilterIUC2ICVF22 * GetPointer() const;
     bool operator<(itkSmoothColorFieldImageFilterIUC2ICVF22_Pointer const & r) const;
     bool operator>(itkSmoothColorFieldImageFilterIUC2ICVF22_Pointer const & r) const;
     bool operator<=(itkSmoothColorFieldImageFilterIUC2ICVF22_Pointer const & r) const;
     bool operator>=(itkSmoothColorFieldImageFilterIUC2ICVF22_Pointer const & r) const;
     itkSmoothColorFieldImageFilterIUC2ICVF22_Pointer & operator=(itkSmoothColorFieldImageFilterIUC2ICVF22_Pointer const & r);
     itkSmoothColorFieldImageFilterIUC2ICVF22_Pointer & operator=(itkSmoothColorFieldImageFilterIUC2ICVF22 * r);
     itkSmoothColorFieldImageFilterIUC2ICVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSmoothColorFieldImageFilterIUC2IVF22 : public itkImageToImageFilterIUC2IVF22 {
   public:
     enum  {  ImageDimension = 2 };
     static itkSmoothColorFieldImageFilterIUC2IVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSmoothingLength(double const _arg);
     virtual double GetSmoothingLength();
     virtual void SetUseParticles(int const _arg);
     virtual int GetUseParticles();
     virtual void SetZSpacingMultiplier(double const _arg);
     virtual double GetZSpacingMultiplier();
     virtual void GenerateInputRequestedRegion();
     virtual void InitializeRegions();
     virtual int SetParticleImage(itkImageUC2 const * arg0);
     void UseParticlesOn();
     void UseParticlesOff();
     void CreateRandomParticles(long arg0);
   private:
     itkSmoothColorFieldImageFilterIUC2IVF22(itkSmoothColorFieldImageFilterIUC2IVF22 const & arg0);
     void operator=(itkSmoothColorFieldImageFilterIUC2IVF22 const & arg0);
   protected:
     itkSmoothColorFieldImageFilterIUC2IVF22();
     ~itkSmoothColorFieldImageFilterIUC2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & arg0, int arg1);
     itkVectorF2 CalculateSmoothColorValue(itkImageUC2 const * arg0, itkIndex2 arg1, itkIndex2 arg2, unsigned char arg3) const;
     void InitializePixelSmoothingKernelSize(itkImageUC2 const * arg0);
     void SetGridRegions(itkImageUC2 const * arg0);
     void ClearParticleInfo();
 };


 class itkSmoothColorFieldImageFilterIUC2IVF22_Pointer {
   public:
     itkSmoothColorFieldImageFilterIUC2IVF22_Pointer();
     itkSmoothColorFieldImageFilterIUC2IVF22_Pointer(itkSmoothColorFieldImageFilterIUC2IVF22_Pointer const & p);
     itkSmoothColorFieldImageFilterIUC2IVF22_Pointer(itkSmoothColorFieldImageFilterIUC2IVF22 * p);
     ~itkSmoothColorFieldImageFilterIUC2IVF22_Pointer();
     itkSmoothColorFieldImageFilterIUC2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSmoothColorFieldImageFilterIUC2IVF22 * GetPointer() const;
     bool operator<(itkSmoothColorFieldImageFilterIUC2IVF22_Pointer const & r) const;
     bool operator>(itkSmoothColorFieldImageFilterIUC2IVF22_Pointer const & r) const;
     bool operator<=(itkSmoothColorFieldImageFilterIUC2IVF22_Pointer const & r) const;
     bool operator>=(itkSmoothColorFieldImageFilterIUC2IVF22_Pointer const & r) const;
     itkSmoothColorFieldImageFilterIUC2IVF22_Pointer & operator=(itkSmoothColorFieldImageFilterIUC2IVF22_Pointer const & r);
     itkSmoothColorFieldImageFilterIUC2IVF22_Pointer & operator=(itkSmoothColorFieldImageFilterIUC2IVF22 * r);
     itkSmoothColorFieldImageFilterIUC2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSmoothColorFieldImageFilterIUC3ICVF33 : public itkImageToImageFilterIUC3ICVF33 {
   public:
     enum  {  ImageDimension = 3 };
     static itkSmoothColorFieldImageFilterIUC3ICVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSmoothingLength(double const _arg);
     virtual double GetSmoothingLength();
     virtual void SetUseParticles(int const _arg);
     virtual int GetUseParticles();
     virtual void SetZSpacingMultiplier(double const _arg);
     virtual double GetZSpacingMultiplier();
     virtual void GenerateInputRequestedRegion();
     virtual void InitializeRegions();
     virtual int SetParticleImage(itkImageUC3 const * arg0);
     void UseParticlesOn();
     void UseParticlesOff();
     void CreateRandomParticles(long arg0);
   private:
     itkSmoothColorFieldImageFilterIUC3ICVF33(itkSmoothColorFieldImageFilterIUC3ICVF33 const & arg0);
     void operator=(itkSmoothColorFieldImageFilterIUC3ICVF33 const & arg0);
   protected:
     itkSmoothColorFieldImageFilterIUC3ICVF33();
     ~itkSmoothColorFieldImageFilterIUC3ICVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & arg0, int arg1);
     itkCovariantVectorF3 CalculateSmoothColorValue(itkImageUC3 const * arg0, itkIndex3 arg1, itkIndex3 arg2, unsigned char arg3) const;
     void InitializePixelSmoothingKernelSize(itkImageUC3 const * arg0);
     void SetGridRegions(itkImageUC3 const * arg0);
     void ClearParticleInfo();
 };


 class itkSmoothColorFieldImageFilterIUC3ICVF33_Pointer {
   public:
     itkSmoothColorFieldImageFilterIUC3ICVF33_Pointer();
     itkSmoothColorFieldImageFilterIUC3ICVF33_Pointer(itkSmoothColorFieldImageFilterIUC3ICVF33_Pointer const & p);
     itkSmoothColorFieldImageFilterIUC3ICVF33_Pointer(itkSmoothColorFieldImageFilterIUC3ICVF33 * p);
     ~itkSmoothColorFieldImageFilterIUC3ICVF33_Pointer();
     itkSmoothColorFieldImageFilterIUC3ICVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSmoothColorFieldImageFilterIUC3ICVF33 * GetPointer() const;
     bool operator<(itkSmoothColorFieldImageFilterIUC3ICVF33_Pointer const & r) const;
     bool operator>(itkSmoothColorFieldImageFilterIUC3ICVF33_Pointer const & r) const;
     bool operator<=(itkSmoothColorFieldImageFilterIUC3ICVF33_Pointer const & r) const;
     bool operator>=(itkSmoothColorFieldImageFilterIUC3ICVF33_Pointer const & r) const;
     itkSmoothColorFieldImageFilterIUC3ICVF33_Pointer & operator=(itkSmoothColorFieldImageFilterIUC3ICVF33_Pointer const & r);
     itkSmoothColorFieldImageFilterIUC3ICVF33_Pointer & operator=(itkSmoothColorFieldImageFilterIUC3ICVF33 * r);
     itkSmoothColorFieldImageFilterIUC3ICVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSmoothColorFieldImageFilterIUC3IVF33 : public itkImageToImageFilterIUC3IVF33 {
   public:
     enum  {  ImageDimension = 3 };
     static itkSmoothColorFieldImageFilterIUC3IVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSmoothingLength(double const _arg);
     virtual double GetSmoothingLength();
     virtual void SetUseParticles(int const _arg);
     virtual int GetUseParticles();
     virtual void SetZSpacingMultiplier(double const _arg);
     virtual double GetZSpacingMultiplier();
     virtual void GenerateInputRequestedRegion();
     virtual void InitializeRegions();
     virtual int SetParticleImage(itkImageUC3 const * arg0);
     void UseParticlesOn();
     void UseParticlesOff();
     void CreateRandomParticles(long arg0);
   private:
     itkSmoothColorFieldImageFilterIUC3IVF33(itkSmoothColorFieldImageFilterIUC3IVF33 const & arg0);
     void operator=(itkSmoothColorFieldImageFilterIUC3IVF33 const & arg0);
   protected:
     itkSmoothColorFieldImageFilterIUC3IVF33();
     ~itkSmoothColorFieldImageFilterIUC3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & arg0, int arg1);
     itkVectorF3 CalculateSmoothColorValue(itkImageUC3 const * arg0, itkIndex3 arg1, itkIndex3 arg2, unsigned char arg3) const;
     void InitializePixelSmoothingKernelSize(itkImageUC3 const * arg0);
     void SetGridRegions(itkImageUC3 const * arg0);
     void ClearParticleInfo();
 };


 class itkSmoothColorFieldImageFilterIUC3IVF33_Pointer {
   public:
     itkSmoothColorFieldImageFilterIUC3IVF33_Pointer();
     itkSmoothColorFieldImageFilterIUC3IVF33_Pointer(itkSmoothColorFieldImageFilterIUC3IVF33_Pointer const & p);
     itkSmoothColorFieldImageFilterIUC3IVF33_Pointer(itkSmoothColorFieldImageFilterIUC3IVF33 * p);
     ~itkSmoothColorFieldImageFilterIUC3IVF33_Pointer();
     itkSmoothColorFieldImageFilterIUC3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSmoothColorFieldImageFilterIUC3IVF33 * GetPointer() const;
     bool operator<(itkSmoothColorFieldImageFilterIUC3IVF33_Pointer const & r) const;
     bool operator>(itkSmoothColorFieldImageFilterIUC3IVF33_Pointer const & r) const;
     bool operator<=(itkSmoothColorFieldImageFilterIUC3IVF33_Pointer const & r) const;
     bool operator>=(itkSmoothColorFieldImageFilterIUC3IVF33_Pointer const & r) const;
     itkSmoothColorFieldImageFilterIUC3IVF33_Pointer & operator=(itkSmoothColorFieldImageFilterIUC3IVF33_Pointer const & r);
     itkSmoothColorFieldImageFilterIUC3IVF33_Pointer & operator=(itkSmoothColorFieldImageFilterIUC3IVF33 * r);
     itkSmoothColorFieldImageFilterIUC3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSmoothColorFieldImageFilterIUL2ICVF22 : public itkImageToImageFilterIUL2ICVF22 {
   public:
     enum  {  ImageDimension = 2 };
     static itkSmoothColorFieldImageFilterIUL2ICVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSmoothingLength(double const _arg);
     virtual double GetSmoothingLength();
     virtual void SetUseParticles(int const _arg);
     virtual int GetUseParticles();
     virtual void SetZSpacingMultiplier(double const _arg);
     virtual double GetZSpacingMultiplier();
     virtual void GenerateInputRequestedRegion();
     virtual void InitializeRegions();
     virtual int SetParticleImage(itkImageUL2 const * arg0);
     void UseParticlesOn();
     void UseParticlesOff();
     void CreateRandomParticles(long arg0);
   private:
     itkSmoothColorFieldImageFilterIUL2ICVF22(itkSmoothColorFieldImageFilterIUL2ICVF22 const & arg0);
     void operator=(itkSmoothColorFieldImageFilterIUL2ICVF22 const & arg0);
   protected:
     itkSmoothColorFieldImageFilterIUL2ICVF22();
     ~itkSmoothColorFieldImageFilterIUL2ICVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & arg0, int arg1);
     itkCovariantVectorF2 CalculateSmoothColorValue(itkImageUL2 const * arg0, itkIndex2 arg1, itkIndex2 arg2, unsigned long arg3) const;
     void InitializePixelSmoothingKernelSize(itkImageUL2 const * arg0);
     void SetGridRegions(itkImageUL2 const * arg0);
     void ClearParticleInfo();
 };


 class itkSmoothColorFieldImageFilterIUL2ICVF22_Pointer {
   public:
     itkSmoothColorFieldImageFilterIUL2ICVF22_Pointer();
     itkSmoothColorFieldImageFilterIUL2ICVF22_Pointer(itkSmoothColorFieldImageFilterIUL2ICVF22_Pointer const & p);
     itkSmoothColorFieldImageFilterIUL2ICVF22_Pointer(itkSmoothColorFieldImageFilterIUL2ICVF22 * p);
     ~itkSmoothColorFieldImageFilterIUL2ICVF22_Pointer();
     itkSmoothColorFieldImageFilterIUL2ICVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSmoothColorFieldImageFilterIUL2ICVF22 * GetPointer() const;
     bool operator<(itkSmoothColorFieldImageFilterIUL2ICVF22_Pointer const & r) const;
     bool operator>(itkSmoothColorFieldImageFilterIUL2ICVF22_Pointer const & r) const;
     bool operator<=(itkSmoothColorFieldImageFilterIUL2ICVF22_Pointer const & r) const;
     bool operator>=(itkSmoothColorFieldImageFilterIUL2ICVF22_Pointer const & r) const;
     itkSmoothColorFieldImageFilterIUL2ICVF22_Pointer & operator=(itkSmoothColorFieldImageFilterIUL2ICVF22_Pointer const & r);
     itkSmoothColorFieldImageFilterIUL2ICVF22_Pointer & operator=(itkSmoothColorFieldImageFilterIUL2ICVF22 * r);
     itkSmoothColorFieldImageFilterIUL2ICVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSmoothColorFieldImageFilterIUL2IVF22 : public itkImageToImageFilterIUL2IVF22 {
   public:
     enum  {  ImageDimension = 2 };
     static itkSmoothColorFieldImageFilterIUL2IVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSmoothingLength(double const _arg);
     virtual double GetSmoothingLength();
     virtual void SetUseParticles(int const _arg);
     virtual int GetUseParticles();
     virtual void SetZSpacingMultiplier(double const _arg);
     virtual double GetZSpacingMultiplier();
     virtual void GenerateInputRequestedRegion();
     virtual void InitializeRegions();
     virtual int SetParticleImage(itkImageUL2 const * arg0);
     void UseParticlesOn();
     void UseParticlesOff();
     void CreateRandomParticles(long arg0);
   private:
     itkSmoothColorFieldImageFilterIUL2IVF22(itkSmoothColorFieldImageFilterIUL2IVF22 const & arg0);
     void operator=(itkSmoothColorFieldImageFilterIUL2IVF22 const & arg0);
   protected:
     itkSmoothColorFieldImageFilterIUL2IVF22();
     ~itkSmoothColorFieldImageFilterIUL2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & arg0, int arg1);
     itkVectorF2 CalculateSmoothColorValue(itkImageUL2 const * arg0, itkIndex2 arg1, itkIndex2 arg2, unsigned long arg3) const;
     void InitializePixelSmoothingKernelSize(itkImageUL2 const * arg0);
     void SetGridRegions(itkImageUL2 const * arg0);
     void ClearParticleInfo();
 };


 class itkSmoothColorFieldImageFilterIUL2IVF22_Pointer {
   public:
     itkSmoothColorFieldImageFilterIUL2IVF22_Pointer();
     itkSmoothColorFieldImageFilterIUL2IVF22_Pointer(itkSmoothColorFieldImageFilterIUL2IVF22_Pointer const & p);
     itkSmoothColorFieldImageFilterIUL2IVF22_Pointer(itkSmoothColorFieldImageFilterIUL2IVF22 * p);
     ~itkSmoothColorFieldImageFilterIUL2IVF22_Pointer();
     itkSmoothColorFieldImageFilterIUL2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSmoothColorFieldImageFilterIUL2IVF22 * GetPointer() const;
     bool operator<(itkSmoothColorFieldImageFilterIUL2IVF22_Pointer const & r) const;
     bool operator>(itkSmoothColorFieldImageFilterIUL2IVF22_Pointer const & r) const;
     bool operator<=(itkSmoothColorFieldImageFilterIUL2IVF22_Pointer const & r) const;
     bool operator>=(itkSmoothColorFieldImageFilterIUL2IVF22_Pointer const & r) const;
     itkSmoothColorFieldImageFilterIUL2IVF22_Pointer & operator=(itkSmoothColorFieldImageFilterIUL2IVF22_Pointer const & r);
     itkSmoothColorFieldImageFilterIUL2IVF22_Pointer & operator=(itkSmoothColorFieldImageFilterIUL2IVF22 * r);
     itkSmoothColorFieldImageFilterIUL2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSmoothColorFieldImageFilterIUL3ICVF33 : public itkImageToImageFilterIUL3ICVF33 {
   public:
     enum  {  ImageDimension = 3 };
     static itkSmoothColorFieldImageFilterIUL3ICVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSmoothingLength(double const _arg);
     virtual double GetSmoothingLength();
     virtual void SetUseParticles(int const _arg);
     virtual int GetUseParticles();
     virtual void SetZSpacingMultiplier(double const _arg);
     virtual double GetZSpacingMultiplier();
     virtual void GenerateInputRequestedRegion();
     virtual void InitializeRegions();
     virtual int SetParticleImage(itkImageUL3 const * arg0);
     void UseParticlesOn();
     void UseParticlesOff();
     void CreateRandomParticles(long arg0);
   private:
     itkSmoothColorFieldImageFilterIUL3ICVF33(itkSmoothColorFieldImageFilterIUL3ICVF33 const & arg0);
     void operator=(itkSmoothColorFieldImageFilterIUL3ICVF33 const & arg0);
   protected:
     itkSmoothColorFieldImageFilterIUL3ICVF33();
     ~itkSmoothColorFieldImageFilterIUL3ICVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & arg0, int arg1);
     itkCovariantVectorF3 CalculateSmoothColorValue(itkImageUL3 const * arg0, itkIndex3 arg1, itkIndex3 arg2, unsigned long arg3) const;
     void InitializePixelSmoothingKernelSize(itkImageUL3 const * arg0);
     void SetGridRegions(itkImageUL3 const * arg0);
     void ClearParticleInfo();
 };


 class itkSmoothColorFieldImageFilterIUL3ICVF33_Pointer {
   public:
     itkSmoothColorFieldImageFilterIUL3ICVF33_Pointer();
     itkSmoothColorFieldImageFilterIUL3ICVF33_Pointer(itkSmoothColorFieldImageFilterIUL3ICVF33_Pointer const & p);
     itkSmoothColorFieldImageFilterIUL3ICVF33_Pointer(itkSmoothColorFieldImageFilterIUL3ICVF33 * p);
     ~itkSmoothColorFieldImageFilterIUL3ICVF33_Pointer();
     itkSmoothColorFieldImageFilterIUL3ICVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSmoothColorFieldImageFilterIUL3ICVF33 * GetPointer() const;
     bool operator<(itkSmoothColorFieldImageFilterIUL3ICVF33_Pointer const & r) const;
     bool operator>(itkSmoothColorFieldImageFilterIUL3ICVF33_Pointer const & r) const;
     bool operator<=(itkSmoothColorFieldImageFilterIUL3ICVF33_Pointer const & r) const;
     bool operator>=(itkSmoothColorFieldImageFilterIUL3ICVF33_Pointer const & r) const;
     itkSmoothColorFieldImageFilterIUL3ICVF33_Pointer & operator=(itkSmoothColorFieldImageFilterIUL3ICVF33_Pointer const & r);
     itkSmoothColorFieldImageFilterIUL3ICVF33_Pointer & operator=(itkSmoothColorFieldImageFilterIUL3ICVF33 * r);
     itkSmoothColorFieldImageFilterIUL3ICVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSmoothColorFieldImageFilterIUL3IVF33 : public itkImageToImageFilterIUL3IVF33 {
   public:
     enum  {  ImageDimension = 3 };
     static itkSmoothColorFieldImageFilterIUL3IVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSmoothingLength(double const _arg);
     virtual double GetSmoothingLength();
     virtual void SetUseParticles(int const _arg);
     virtual int GetUseParticles();
     virtual void SetZSpacingMultiplier(double const _arg);
     virtual double GetZSpacingMultiplier();
     virtual void GenerateInputRequestedRegion();
     virtual void InitializeRegions();
     virtual int SetParticleImage(itkImageUL3 const * arg0);
     void UseParticlesOn();
     void UseParticlesOff();
     void CreateRandomParticles(long arg0);
   private:
     itkSmoothColorFieldImageFilterIUL3IVF33(itkSmoothColorFieldImageFilterIUL3IVF33 const & arg0);
     void operator=(itkSmoothColorFieldImageFilterIUL3IVF33 const & arg0);
   protected:
     itkSmoothColorFieldImageFilterIUL3IVF33();
     ~itkSmoothColorFieldImageFilterIUL3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & arg0, int arg1);
     itkVectorF3 CalculateSmoothColorValue(itkImageUL3 const * arg0, itkIndex3 arg1, itkIndex3 arg2, unsigned long arg3) const;
     void InitializePixelSmoothingKernelSize(itkImageUL3 const * arg0);
     void SetGridRegions(itkImageUL3 const * arg0);
     void ClearParticleInfo();
 };


 class itkSmoothColorFieldImageFilterIUL3IVF33_Pointer {
   public:
     itkSmoothColorFieldImageFilterIUL3IVF33_Pointer();
     itkSmoothColorFieldImageFilterIUL3IVF33_Pointer(itkSmoothColorFieldImageFilterIUL3IVF33_Pointer const & p);
     itkSmoothColorFieldImageFilterIUL3IVF33_Pointer(itkSmoothColorFieldImageFilterIUL3IVF33 * p);
     ~itkSmoothColorFieldImageFilterIUL3IVF33_Pointer();
     itkSmoothColorFieldImageFilterIUL3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSmoothColorFieldImageFilterIUL3IVF33 * GetPointer() const;
     bool operator<(itkSmoothColorFieldImageFilterIUL3IVF33_Pointer const & r) const;
     bool operator>(itkSmoothColorFieldImageFilterIUL3IVF33_Pointer const & r) const;
     bool operator<=(itkSmoothColorFieldImageFilterIUL3IVF33_Pointer const & r) const;
     bool operator>=(itkSmoothColorFieldImageFilterIUL3IVF33_Pointer const & r) const;
     itkSmoothColorFieldImageFilterIUL3IVF33_Pointer & operator=(itkSmoothColorFieldImageFilterIUL3IVF33_Pointer const & r);
     itkSmoothColorFieldImageFilterIUL3IVF33_Pointer & operator=(itkSmoothColorFieldImageFilterIUL3IVF33 * r);
     itkSmoothColorFieldImageFilterIUL3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSmoothColorFieldImageFilterIUS2ICVF22 : public itkImageToImageFilterIUS2ICVF22 {
   public:
     enum  {  ImageDimension = 2 };
     static itkSmoothColorFieldImageFilterIUS2ICVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSmoothingLength(double const _arg);
     virtual double GetSmoothingLength();
     virtual void SetUseParticles(int const _arg);
     virtual int GetUseParticles();
     virtual void SetZSpacingMultiplier(double const _arg);
     virtual double GetZSpacingMultiplier();
     virtual void GenerateInputRequestedRegion();
     virtual void InitializeRegions();
     virtual int SetParticleImage(itkImageUS2 const * arg0);
     void UseParticlesOn();
     void UseParticlesOff();
     void CreateRandomParticles(long arg0);
   private:
     itkSmoothColorFieldImageFilterIUS2ICVF22(itkSmoothColorFieldImageFilterIUS2ICVF22 const & arg0);
     void operator=(itkSmoothColorFieldImageFilterIUS2ICVF22 const & arg0);
   protected:
     itkSmoothColorFieldImageFilterIUS2ICVF22();
     ~itkSmoothColorFieldImageFilterIUS2ICVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & arg0, int arg1);
     itkCovariantVectorF2 CalculateSmoothColorValue(itkImageUS2 const * arg0, itkIndex2 arg1, itkIndex2 arg2, unsigned short arg3) const;
     void InitializePixelSmoothingKernelSize(itkImageUS2 const * arg0);
     void SetGridRegions(itkImageUS2 const * arg0);
     void ClearParticleInfo();
 };


 class itkSmoothColorFieldImageFilterIUS2ICVF22_Pointer {
   public:
     itkSmoothColorFieldImageFilterIUS2ICVF22_Pointer();
     itkSmoothColorFieldImageFilterIUS2ICVF22_Pointer(itkSmoothColorFieldImageFilterIUS2ICVF22_Pointer const & p);
     itkSmoothColorFieldImageFilterIUS2ICVF22_Pointer(itkSmoothColorFieldImageFilterIUS2ICVF22 * p);
     ~itkSmoothColorFieldImageFilterIUS2ICVF22_Pointer();
     itkSmoothColorFieldImageFilterIUS2ICVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSmoothColorFieldImageFilterIUS2ICVF22 * GetPointer() const;
     bool operator<(itkSmoothColorFieldImageFilterIUS2ICVF22_Pointer const & r) const;
     bool operator>(itkSmoothColorFieldImageFilterIUS2ICVF22_Pointer const & r) const;
     bool operator<=(itkSmoothColorFieldImageFilterIUS2ICVF22_Pointer const & r) const;
     bool operator>=(itkSmoothColorFieldImageFilterIUS2ICVF22_Pointer const & r) const;
     itkSmoothColorFieldImageFilterIUS2ICVF22_Pointer & operator=(itkSmoothColorFieldImageFilterIUS2ICVF22_Pointer const & r);
     itkSmoothColorFieldImageFilterIUS2ICVF22_Pointer & operator=(itkSmoothColorFieldImageFilterIUS2ICVF22 * r);
     itkSmoothColorFieldImageFilterIUS2ICVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSmoothColorFieldImageFilterIUS2IVF22 : public itkImageToImageFilterIUS2IVF22 {
   public:
     enum  {  ImageDimension = 2 };
     static itkSmoothColorFieldImageFilterIUS2IVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSmoothingLength(double const _arg);
     virtual double GetSmoothingLength();
     virtual void SetUseParticles(int const _arg);
     virtual int GetUseParticles();
     virtual void SetZSpacingMultiplier(double const _arg);
     virtual double GetZSpacingMultiplier();
     virtual void GenerateInputRequestedRegion();
     virtual void InitializeRegions();
     virtual int SetParticleImage(itkImageUS2 const * arg0);
     void UseParticlesOn();
     void UseParticlesOff();
     void CreateRandomParticles(long arg0);
   private:
     itkSmoothColorFieldImageFilterIUS2IVF22(itkSmoothColorFieldImageFilterIUS2IVF22 const & arg0);
     void operator=(itkSmoothColorFieldImageFilterIUS2IVF22 const & arg0);
   protected:
     itkSmoothColorFieldImageFilterIUS2IVF22();
     ~itkSmoothColorFieldImageFilterIUS2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & arg0, int arg1);
     itkVectorF2 CalculateSmoothColorValue(itkImageUS2 const * arg0, itkIndex2 arg1, itkIndex2 arg2, unsigned short arg3) const;
     void InitializePixelSmoothingKernelSize(itkImageUS2 const * arg0);
     void SetGridRegions(itkImageUS2 const * arg0);
     void ClearParticleInfo();
 };


 class itkSmoothColorFieldImageFilterIUS2IVF22_Pointer {
   public:
     itkSmoothColorFieldImageFilterIUS2IVF22_Pointer();
     itkSmoothColorFieldImageFilterIUS2IVF22_Pointer(itkSmoothColorFieldImageFilterIUS2IVF22_Pointer const & p);
     itkSmoothColorFieldImageFilterIUS2IVF22_Pointer(itkSmoothColorFieldImageFilterIUS2IVF22 * p);
     ~itkSmoothColorFieldImageFilterIUS2IVF22_Pointer();
     itkSmoothColorFieldImageFilterIUS2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSmoothColorFieldImageFilterIUS2IVF22 * GetPointer() const;
     bool operator<(itkSmoothColorFieldImageFilterIUS2IVF22_Pointer const & r) const;
     bool operator>(itkSmoothColorFieldImageFilterIUS2IVF22_Pointer const & r) const;
     bool operator<=(itkSmoothColorFieldImageFilterIUS2IVF22_Pointer const & r) const;
     bool operator>=(itkSmoothColorFieldImageFilterIUS2IVF22_Pointer const & r) const;
     itkSmoothColorFieldImageFilterIUS2IVF22_Pointer & operator=(itkSmoothColorFieldImageFilterIUS2IVF22_Pointer const & r);
     itkSmoothColorFieldImageFilterIUS2IVF22_Pointer & operator=(itkSmoothColorFieldImageFilterIUS2IVF22 * r);
     itkSmoothColorFieldImageFilterIUS2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSmoothColorFieldImageFilterIUS3ICVF33 : public itkImageToImageFilterIUS3ICVF33 {
   public:
     enum  {  ImageDimension = 3 };
     static itkSmoothColorFieldImageFilterIUS3ICVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSmoothingLength(double const _arg);
     virtual double GetSmoothingLength();
     virtual void SetUseParticles(int const _arg);
     virtual int GetUseParticles();
     virtual void SetZSpacingMultiplier(double const _arg);
     virtual double GetZSpacingMultiplier();
     virtual void GenerateInputRequestedRegion();
     virtual void InitializeRegions();
     virtual int SetParticleImage(itkImageUS3 const * arg0);
     void UseParticlesOn();
     void UseParticlesOff();
     void CreateRandomParticles(long arg0);
   private:
     itkSmoothColorFieldImageFilterIUS3ICVF33(itkSmoothColorFieldImageFilterIUS3ICVF33 const & arg0);
     void operator=(itkSmoothColorFieldImageFilterIUS3ICVF33 const & arg0);
   protected:
     itkSmoothColorFieldImageFilterIUS3ICVF33();
     ~itkSmoothColorFieldImageFilterIUS3ICVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & arg0, int arg1);
     itkCovariantVectorF3 CalculateSmoothColorValue(itkImageUS3 const * arg0, itkIndex3 arg1, itkIndex3 arg2, unsigned short arg3) const;
     void InitializePixelSmoothingKernelSize(itkImageUS3 const * arg0);
     void SetGridRegions(itkImageUS3 const * arg0);
     void ClearParticleInfo();
 };


 class itkSmoothColorFieldImageFilterIUS3ICVF33_Pointer {
   public:
     itkSmoothColorFieldImageFilterIUS3ICVF33_Pointer();
     itkSmoothColorFieldImageFilterIUS3ICVF33_Pointer(itkSmoothColorFieldImageFilterIUS3ICVF33_Pointer const & p);
     itkSmoothColorFieldImageFilterIUS3ICVF33_Pointer(itkSmoothColorFieldImageFilterIUS3ICVF33 * p);
     ~itkSmoothColorFieldImageFilterIUS3ICVF33_Pointer();
     itkSmoothColorFieldImageFilterIUS3ICVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSmoothColorFieldImageFilterIUS3ICVF33 * GetPointer() const;
     bool operator<(itkSmoothColorFieldImageFilterIUS3ICVF33_Pointer const & r) const;
     bool operator>(itkSmoothColorFieldImageFilterIUS3ICVF33_Pointer const & r) const;
     bool operator<=(itkSmoothColorFieldImageFilterIUS3ICVF33_Pointer const & r) const;
     bool operator>=(itkSmoothColorFieldImageFilterIUS3ICVF33_Pointer const & r) const;
     itkSmoothColorFieldImageFilterIUS3ICVF33_Pointer & operator=(itkSmoothColorFieldImageFilterIUS3ICVF33_Pointer const & r);
     itkSmoothColorFieldImageFilterIUS3ICVF33_Pointer & operator=(itkSmoothColorFieldImageFilterIUS3ICVF33 * r);
     itkSmoothColorFieldImageFilterIUS3ICVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSmoothColorFieldImageFilterIUS3IVF33 : public itkImageToImageFilterIUS3IVF33 {
   public:
     enum  {  ImageDimension = 3 };
     static itkSmoothColorFieldImageFilterIUS3IVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetSmoothingLength(double const _arg);
     virtual double GetSmoothingLength();
     virtual void SetUseParticles(int const _arg);
     virtual int GetUseParticles();
     virtual void SetZSpacingMultiplier(double const _arg);
     virtual double GetZSpacingMultiplier();
     virtual void GenerateInputRequestedRegion();
     virtual void InitializeRegions();
     virtual int SetParticleImage(itkImageUS3 const * arg0);
     void UseParticlesOn();
     void UseParticlesOff();
     void CreateRandomParticles(long arg0);
   private:
     itkSmoothColorFieldImageFilterIUS3IVF33(itkSmoothColorFieldImageFilterIUS3IVF33 const & arg0);
     void operator=(itkSmoothColorFieldImageFilterIUS3IVF33 const & arg0);
   protected:
     itkSmoothColorFieldImageFilterIUS3IVF33();
     ~itkSmoothColorFieldImageFilterIUS3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & arg0, int arg1);
     itkVectorF3 CalculateSmoothColorValue(itkImageUS3 const * arg0, itkIndex3 arg1, itkIndex3 arg2, unsigned short arg3) const;
     void InitializePixelSmoothingKernelSize(itkImageUS3 const * arg0);
     void SetGridRegions(itkImageUS3 const * arg0);
     void ClearParticleInfo();
 };


 class itkSmoothColorFieldImageFilterIUS3IVF33_Pointer {
   public:
     itkSmoothColorFieldImageFilterIUS3IVF33_Pointer();
     itkSmoothColorFieldImageFilterIUS3IVF33_Pointer(itkSmoothColorFieldImageFilterIUS3IVF33_Pointer const & p);
     itkSmoothColorFieldImageFilterIUS3IVF33_Pointer(itkSmoothColorFieldImageFilterIUS3IVF33 * p);
     ~itkSmoothColorFieldImageFilterIUS3IVF33_Pointer();
     itkSmoothColorFieldImageFilterIUS3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSmoothColorFieldImageFilterIUS3IVF33 * GetPointer() const;
     bool operator<(itkSmoothColorFieldImageFilterIUS3IVF33_Pointer const & r) const;
     bool operator>(itkSmoothColorFieldImageFilterIUS3IVF33_Pointer const & r) const;
     bool operator<=(itkSmoothColorFieldImageFilterIUS3IVF33_Pointer const & r) const;
     bool operator>=(itkSmoothColorFieldImageFilterIUS3IVF33_Pointer const & r) const;
     itkSmoothColorFieldImageFilterIUS3IVF33_Pointer & operator=(itkSmoothColorFieldImageFilterIUS3IVF33_Pointer const & r);
     itkSmoothColorFieldImageFilterIUS3IVF33_Pointer & operator=(itkSmoothColorFieldImageFilterIUS3IVF33 * r);
     itkSmoothColorFieldImageFilterIUS3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


