# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkArray2DPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkArray2DPython', [dirname(__file__)])
        except ImportError:
            import _itkArray2DPython
            return _itkArray2DPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkArray2DPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkArray2DPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkArray2DPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import vnl_matrixPython
import vcl_complexPython
import pyBasePython
import vnl_vectorPython
class itkArray2DD(vnl_matrixPython.vnl_matrixD):
    """Proxy of C++ itkArray2DD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> itkArray2DD
        __init__(self, unsigned int rows, unsigned int cols) -> itkArray2DD
        __init__(self, itkArray2DD array) -> itkArray2DD
        __init__(self, vnl_matrixD matrix) -> itkArray2DD
        """
        _itkArray2DPython.itkArray2DD_swiginit(self,_itkArray2DPython.new_itkArray2DD(*args))
    def Fill(self, *args):
        """Fill(self, double v)"""
        return _itkArray2DPython.itkArray2DD_Fill(self, *args)

    def SetSize(self, *args):
        """SetSize(self, unsigned int m, unsigned int n)"""
        return _itkArray2DPython.itkArray2DD_SetSize(self, *args)

    __swig_destroy__ = _itkArray2DPython.delete_itkArray2DD
itkArray2DD.Fill = new_instancemethod(_itkArray2DPython.itkArray2DD_Fill,None,itkArray2DD)
itkArray2DD.SetSize = new_instancemethod(_itkArray2DPython.itkArray2DD_SetSize,None,itkArray2DD)
itkArray2DD_swigregister = _itkArray2DPython.itkArray2DD_swigregister
itkArray2DD_swigregister(itkArray2DD)

class itkArray2DUI(vnl_matrixPython.vnl_matrixUI):
    """Proxy of C++ itkArray2DUI class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> itkArray2DUI
        __init__(self, unsigned int rows, unsigned int cols) -> itkArray2DUI
        __init__(self, itkArray2DUI array) -> itkArray2DUI
        __init__(self, vnl_matrixUI matrix) -> itkArray2DUI
        """
        _itkArray2DPython.itkArray2DUI_swiginit(self,_itkArray2DPython.new_itkArray2DUI(*args))
    def Fill(self, *args):
        """Fill(self, unsigned int v)"""
        return _itkArray2DPython.itkArray2DUI_Fill(self, *args)

    def SetSize(self, *args):
        """SetSize(self, unsigned int m, unsigned int n)"""
        return _itkArray2DPython.itkArray2DUI_SetSize(self, *args)

    __swig_destroy__ = _itkArray2DPython.delete_itkArray2DUI
itkArray2DUI.Fill = new_instancemethod(_itkArray2DPython.itkArray2DUI_Fill,None,itkArray2DUI)
itkArray2DUI.SetSize = new_instancemethod(_itkArray2DPython.itkArray2DUI_SetSize,None,itkArray2DUI)
itkArray2DUI_swigregister = _itkArray2DPython.itkArray2DUI_swigregister
itkArray2DUI_swigregister(itkArray2DUI)



