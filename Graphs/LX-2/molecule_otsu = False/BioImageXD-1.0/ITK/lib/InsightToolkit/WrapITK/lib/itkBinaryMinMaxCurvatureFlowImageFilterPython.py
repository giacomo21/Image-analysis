# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkBinaryMinMaxCurvatureFlowImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkBinaryMinMaxCurvatureFlowImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkBinaryMinMaxCurvatureFlowImageFilterPython
            return _itkBinaryMinMaxCurvatureFlowImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkBinaryMinMaxCurvatureFlowImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkBinaryMinMaxCurvatureFlowImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkBinaryMinMaxCurvatureFlowImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkMinMaxCurvatureFlowImageFilterPython
import itkCurvatureFlowImageFilterPython
import itkDenseFiniteDifferenceImageFilterPython
import itkFiniteDifferenceImageFilterPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterAPython
import itkFiniteDifferenceFunctionPython
def itkBinaryMinMaxCurvatureFlowImageFilterID3ID3_New():
  return itkBinaryMinMaxCurvatureFlowImageFilterID3ID3.New()

def itkBinaryMinMaxCurvatureFlowImageFilterID2ID2_New():
  return itkBinaryMinMaxCurvatureFlowImageFilterID2ID2.New()

def itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3_New():
  return itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3.New()

def itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2_New():
  return itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2.New()

class itkBinaryMinMaxCurvatureFlowImageFilterID2ID2(itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID2ID2):
    """Proxy of C++ itkBinaryMinMaxCurvatureFlowImageFilterID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterID2ID2_ImageDimension
    InputConvertibleToOutputCheck = _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterID2ID2_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetThreshold(self, *args):
        """SetThreshold(self, double _arg)"""
        return _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterID2ID2_SetThreshold(self, *args)

    def GetThreshold(self):
        """GetThreshold(self) -> double"""
        return _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterID2ID2_GetThreshold(self)

    __swig_destroy__ = _itkBinaryMinMaxCurvatureFlowImageFilterPython.delete_itkBinaryMinMaxCurvatureFlowImageFilterID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkBinaryMinMaxCurvatureFlowImageFilterID2ID2"""
        return _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBinaryMinMaxCurvatureFlowImageFilterID2ID2"""
        return _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBinaryMinMaxCurvatureFlowImageFilterID2ID2
        
        Create a new object of the class itkBinaryMinMaxCurvatureFlowImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBinaryMinMaxCurvatureFlowImageFilterID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBinaryMinMaxCurvatureFlowImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryMinMaxCurvatureFlowImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryMinMaxCurvatureFlowImageFilterID2ID2.SetThreshold = new_instancemethod(_itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterID2ID2_SetThreshold,None,itkBinaryMinMaxCurvatureFlowImageFilterID2ID2)
itkBinaryMinMaxCurvatureFlowImageFilterID2ID2.GetThreshold = new_instancemethod(_itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterID2ID2_GetThreshold,None,itkBinaryMinMaxCurvatureFlowImageFilterID2ID2)
itkBinaryMinMaxCurvatureFlowImageFilterID2ID2.GetPointer = new_instancemethod(_itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterID2ID2_GetPointer,None,itkBinaryMinMaxCurvatureFlowImageFilterID2ID2)
itkBinaryMinMaxCurvatureFlowImageFilterID2ID2_swigregister = _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterID2ID2_swigregister
itkBinaryMinMaxCurvatureFlowImageFilterID2ID2_swigregister(itkBinaryMinMaxCurvatureFlowImageFilterID2ID2)

def itkBinaryMinMaxCurvatureFlowImageFilterID2ID2___New_orig__():
  """itkBinaryMinMaxCurvatureFlowImageFilterID2ID2___New_orig__()"""
  return _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterID2ID2___New_orig__()

def itkBinaryMinMaxCurvatureFlowImageFilterID2ID2_cast(*args):
  """itkBinaryMinMaxCurvatureFlowImageFilterID2ID2_cast(itkLightObject obj) -> itkBinaryMinMaxCurvatureFlowImageFilterID2ID2"""
  return _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterID2ID2_cast(*args)

class itkBinaryMinMaxCurvatureFlowImageFilterID3ID3(itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID3ID3):
    """Proxy of C++ itkBinaryMinMaxCurvatureFlowImageFilterID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterID3ID3_ImageDimension
    InputConvertibleToOutputCheck = _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterID3ID3_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetThreshold(self, *args):
        """SetThreshold(self, double _arg)"""
        return _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterID3ID3_SetThreshold(self, *args)

    def GetThreshold(self):
        """GetThreshold(self) -> double"""
        return _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterID3ID3_GetThreshold(self)

    __swig_destroy__ = _itkBinaryMinMaxCurvatureFlowImageFilterPython.delete_itkBinaryMinMaxCurvatureFlowImageFilterID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkBinaryMinMaxCurvatureFlowImageFilterID3ID3"""
        return _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBinaryMinMaxCurvatureFlowImageFilterID3ID3"""
        return _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBinaryMinMaxCurvatureFlowImageFilterID3ID3
        
        Create a new object of the class itkBinaryMinMaxCurvatureFlowImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBinaryMinMaxCurvatureFlowImageFilterID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBinaryMinMaxCurvatureFlowImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryMinMaxCurvatureFlowImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryMinMaxCurvatureFlowImageFilterID3ID3.SetThreshold = new_instancemethod(_itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterID3ID3_SetThreshold,None,itkBinaryMinMaxCurvatureFlowImageFilterID3ID3)
itkBinaryMinMaxCurvatureFlowImageFilterID3ID3.GetThreshold = new_instancemethod(_itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterID3ID3_GetThreshold,None,itkBinaryMinMaxCurvatureFlowImageFilterID3ID3)
itkBinaryMinMaxCurvatureFlowImageFilterID3ID3.GetPointer = new_instancemethod(_itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterID3ID3_GetPointer,None,itkBinaryMinMaxCurvatureFlowImageFilterID3ID3)
itkBinaryMinMaxCurvatureFlowImageFilterID3ID3_swigregister = _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterID3ID3_swigregister
itkBinaryMinMaxCurvatureFlowImageFilterID3ID3_swigregister(itkBinaryMinMaxCurvatureFlowImageFilterID3ID3)

def itkBinaryMinMaxCurvatureFlowImageFilterID3ID3___New_orig__():
  """itkBinaryMinMaxCurvatureFlowImageFilterID3ID3___New_orig__()"""
  return _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterID3ID3___New_orig__()

def itkBinaryMinMaxCurvatureFlowImageFilterID3ID3_cast(*args):
  """itkBinaryMinMaxCurvatureFlowImageFilterID3ID3_cast(itkLightObject obj) -> itkBinaryMinMaxCurvatureFlowImageFilterID3ID3"""
  return _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterID3ID3_cast(*args)

class itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2(itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF2IF2):
    """Proxy of C++ itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2_ImageDimension
    InputConvertibleToOutputCheck = _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetThreshold(self, *args):
        """SetThreshold(self, double _arg)"""
        return _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2_SetThreshold(self, *args)

    def GetThreshold(self):
        """GetThreshold(self) -> double"""
        return _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2_GetThreshold(self)

    __swig_destroy__ = _itkBinaryMinMaxCurvatureFlowImageFilterPython.delete_itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2"""
        return _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2"""
        return _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2
        
        Create a new object of the class itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2.SetThreshold = new_instancemethod(_itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2_SetThreshold,None,itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2)
itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2.GetThreshold = new_instancemethod(_itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2_GetThreshold,None,itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2)
itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2.GetPointer = new_instancemethod(_itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2_GetPointer,None,itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2)
itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2_swigregister = _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2_swigregister
itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2_swigregister(itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2)

def itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2___New_orig__():
  """itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2___New_orig__()"""
  return _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2___New_orig__()

def itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2_cast(*args):
  """itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2_cast(itkLightObject obj) -> itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2"""
  return _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterIF2IF2_cast(*args)

class itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3(itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF3IF3):
    """Proxy of C++ itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3_ImageDimension
    InputConvertibleToOutputCheck = _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetThreshold(self, *args):
        """SetThreshold(self, double _arg)"""
        return _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3_SetThreshold(self, *args)

    def GetThreshold(self):
        """GetThreshold(self) -> double"""
        return _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3_GetThreshold(self)

    __swig_destroy__ = _itkBinaryMinMaxCurvatureFlowImageFilterPython.delete_itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3"""
        return _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3"""
        return _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3
        
        Create a new object of the class itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3.SetThreshold = new_instancemethod(_itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3_SetThreshold,None,itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3)
itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3.GetThreshold = new_instancemethod(_itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3_GetThreshold,None,itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3)
itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3.GetPointer = new_instancemethod(_itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3_GetPointer,None,itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3)
itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3_swigregister = _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3_swigregister
itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3_swigregister(itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3)

def itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3___New_orig__():
  """itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3___New_orig__()"""
  return _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3___New_orig__()

def itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3_cast(*args):
  """itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3_cast(itkLightObject obj) -> itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3"""
  return _itkBinaryMinMaxCurvatureFlowImageFilterPython.itkBinaryMinMaxCurvatureFlowImageFilterIF3IF3_cast(*args)



