// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkConvolutionImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkConvolutionImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkConvolutionImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkConvolutionImageFilterJava
#endif
#ifdef SWIGLUA
%module itkConvolutionImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkConvolutionImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkConvolutionImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkConvolutionImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkConvolutionImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkConvolutionImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkConvolutionImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkConvolutionImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkConvolutionImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkConvolutionImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkConvolutionImageFilterPython
#endif
#ifdef SWIGR
%module itkConvolutionImageFilterR
#endif
#ifdef SWIGRUBY
%module itkConvolutionImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkConvolutionImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkConvolutionImageFilterTcl
#endif
#ifdef SWIGXML
%module itkConvolutionImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Review.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImage.i
%import wrap_ITKRegions.i
%import wrap_itkImageToImageFilterA.i


%include itk.i
%include wrap_itkConvolutionImageFilter_ext.i


 class itkConvolutionImageFilterID2ID2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkConvolutionImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetImageKernelInput(itkImageD2 const * _arg);
     virtual void SetInput1(itkImageD2 const * _arg);
     virtual itkImageD2 const * GetImageKernelInput() const;
     virtual itkImageD2 const * GetInput1() const;
     virtual void SetNormalize(bool const _arg);
     virtual bool GetNormalize() const;
     virtual void NormalizeOn();
     virtual void NormalizeOff();
     virtual void GenerateInputRequestedRegion();
   private:
     itkConvolutionImageFilterID2ID2(itkConvolutionImageFilterID2ID2 const & arg0);
     void operator=(itkConvolutionImageFilterID2ID2 const & arg0);
   protected:
     itkConvolutionImageFilterID2ID2();
     ~itkConvolutionImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkConvolutionImageFilterID2ID2_Pointer {
   public:
     itkConvolutionImageFilterID2ID2_Pointer();
     itkConvolutionImageFilterID2ID2_Pointer(itkConvolutionImageFilterID2ID2_Pointer const & p);
     itkConvolutionImageFilterID2ID2_Pointer(itkConvolutionImageFilterID2ID2 * p);
     ~itkConvolutionImageFilterID2ID2_Pointer();
     itkConvolutionImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConvolutionImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkConvolutionImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkConvolutionImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkConvolutionImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkConvolutionImageFilterID2ID2_Pointer const & r) const;
     itkConvolutionImageFilterID2ID2_Pointer & operator=(itkConvolutionImageFilterID2ID2_Pointer const & r);
     itkConvolutionImageFilterID2ID2_Pointer & operator=(itkConvolutionImageFilterID2ID2 * r);
     itkConvolutionImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConvolutionImageFilterID3ID3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkConvolutionImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetImageKernelInput(itkImageD3 const * _arg);
     virtual void SetInput1(itkImageD3 const * _arg);
     virtual itkImageD3 const * GetImageKernelInput() const;
     virtual itkImageD3 const * GetInput1() const;
     virtual void SetNormalize(bool const _arg);
     virtual bool GetNormalize() const;
     virtual void NormalizeOn();
     virtual void NormalizeOff();
     virtual void GenerateInputRequestedRegion();
   private:
     itkConvolutionImageFilterID3ID3(itkConvolutionImageFilterID3ID3 const & arg0);
     void operator=(itkConvolutionImageFilterID3ID3 const & arg0);
   protected:
     itkConvolutionImageFilterID3ID3();
     ~itkConvolutionImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkConvolutionImageFilterID3ID3_Pointer {
   public:
     itkConvolutionImageFilterID3ID3_Pointer();
     itkConvolutionImageFilterID3ID3_Pointer(itkConvolutionImageFilterID3ID3_Pointer const & p);
     itkConvolutionImageFilterID3ID3_Pointer(itkConvolutionImageFilterID3ID3 * p);
     ~itkConvolutionImageFilterID3ID3_Pointer();
     itkConvolutionImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConvolutionImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkConvolutionImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkConvolutionImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkConvolutionImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkConvolutionImageFilterID3ID3_Pointer const & r) const;
     itkConvolutionImageFilterID3ID3_Pointer & operator=(itkConvolutionImageFilterID3ID3_Pointer const & r);
     itkConvolutionImageFilterID3ID3_Pointer & operator=(itkConvolutionImageFilterID3ID3 * r);
     itkConvolutionImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConvolutionImageFilterIF2IF2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkConvolutionImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetImageKernelInput(itkImageF2 const * _arg);
     virtual void SetInput1(itkImageF2 const * _arg);
     virtual itkImageF2 const * GetImageKernelInput() const;
     virtual itkImageF2 const * GetInput1() const;
     virtual void SetNormalize(bool const _arg);
     virtual bool GetNormalize() const;
     virtual void NormalizeOn();
     virtual void NormalizeOff();
     virtual void GenerateInputRequestedRegion();
   private:
     itkConvolutionImageFilterIF2IF2(itkConvolutionImageFilterIF2IF2 const & arg0);
     void operator=(itkConvolutionImageFilterIF2IF2 const & arg0);
   protected:
     itkConvolutionImageFilterIF2IF2();
     ~itkConvolutionImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkConvolutionImageFilterIF2IF2_Pointer {
   public:
     itkConvolutionImageFilterIF2IF2_Pointer();
     itkConvolutionImageFilterIF2IF2_Pointer(itkConvolutionImageFilterIF2IF2_Pointer const & p);
     itkConvolutionImageFilterIF2IF2_Pointer(itkConvolutionImageFilterIF2IF2 * p);
     ~itkConvolutionImageFilterIF2IF2_Pointer();
     itkConvolutionImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConvolutionImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkConvolutionImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkConvolutionImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkConvolutionImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkConvolutionImageFilterIF2IF2_Pointer const & r) const;
     itkConvolutionImageFilterIF2IF2_Pointer & operator=(itkConvolutionImageFilterIF2IF2_Pointer const & r);
     itkConvolutionImageFilterIF2IF2_Pointer & operator=(itkConvolutionImageFilterIF2IF2 * r);
     itkConvolutionImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConvolutionImageFilterIF3IF3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkConvolutionImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetImageKernelInput(itkImageF3 const * _arg);
     virtual void SetInput1(itkImageF3 const * _arg);
     virtual itkImageF3 const * GetImageKernelInput() const;
     virtual itkImageF3 const * GetInput1() const;
     virtual void SetNormalize(bool const _arg);
     virtual bool GetNormalize() const;
     virtual void NormalizeOn();
     virtual void NormalizeOff();
     virtual void GenerateInputRequestedRegion();
   private:
     itkConvolutionImageFilterIF3IF3(itkConvolutionImageFilterIF3IF3 const & arg0);
     void operator=(itkConvolutionImageFilterIF3IF3 const & arg0);
   protected:
     itkConvolutionImageFilterIF3IF3();
     ~itkConvolutionImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkConvolutionImageFilterIF3IF3_Pointer {
   public:
     itkConvolutionImageFilterIF3IF3_Pointer();
     itkConvolutionImageFilterIF3IF3_Pointer(itkConvolutionImageFilterIF3IF3_Pointer const & p);
     itkConvolutionImageFilterIF3IF3_Pointer(itkConvolutionImageFilterIF3IF3 * p);
     ~itkConvolutionImageFilterIF3IF3_Pointer();
     itkConvolutionImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConvolutionImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkConvolutionImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkConvolutionImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkConvolutionImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkConvolutionImageFilterIF3IF3_Pointer const & r) const;
     itkConvolutionImageFilterIF3IF3_Pointer & operator=(itkConvolutionImageFilterIF3IF3_Pointer const & r);
     itkConvolutionImageFilterIF3IF3_Pointer & operator=(itkConvolutionImageFilterIF3IF3 * r);
     itkConvolutionImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConvolutionImageFilterIUC2IUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkConvolutionImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetImageKernelInput(itkImageUC2 const * _arg);
     virtual void SetInput1(itkImageUC2 const * _arg);
     virtual itkImageUC2 const * GetImageKernelInput() const;
     virtual itkImageUC2 const * GetInput1() const;
     virtual void SetNormalize(bool const _arg);
     virtual bool GetNormalize() const;
     virtual void NormalizeOn();
     virtual void NormalizeOff();
     virtual void GenerateInputRequestedRegion();
   private:
     itkConvolutionImageFilterIUC2IUC2(itkConvolutionImageFilterIUC2IUC2 const & arg0);
     void operator=(itkConvolutionImageFilterIUC2IUC2 const & arg0);
   protected:
     itkConvolutionImageFilterIUC2IUC2();
     ~itkConvolutionImageFilterIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkConvolutionImageFilterIUC2IUC2_Pointer {
   public:
     itkConvolutionImageFilterIUC2IUC2_Pointer();
     itkConvolutionImageFilterIUC2IUC2_Pointer(itkConvolutionImageFilterIUC2IUC2_Pointer const & p);
     itkConvolutionImageFilterIUC2IUC2_Pointer(itkConvolutionImageFilterIUC2IUC2 * p);
     ~itkConvolutionImageFilterIUC2IUC2_Pointer();
     itkConvolutionImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConvolutionImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkConvolutionImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkConvolutionImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkConvolutionImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkConvolutionImageFilterIUC2IUC2_Pointer const & r) const;
     itkConvolutionImageFilterIUC2IUC2_Pointer & operator=(itkConvolutionImageFilterIUC2IUC2_Pointer const & r);
     itkConvolutionImageFilterIUC2IUC2_Pointer & operator=(itkConvolutionImageFilterIUC2IUC2 * r);
     itkConvolutionImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConvolutionImageFilterIUC3IUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkConvolutionImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetImageKernelInput(itkImageUC3 const * _arg);
     virtual void SetInput1(itkImageUC3 const * _arg);
     virtual itkImageUC3 const * GetImageKernelInput() const;
     virtual itkImageUC3 const * GetInput1() const;
     virtual void SetNormalize(bool const _arg);
     virtual bool GetNormalize() const;
     virtual void NormalizeOn();
     virtual void NormalizeOff();
     virtual void GenerateInputRequestedRegion();
   private:
     itkConvolutionImageFilterIUC3IUC3(itkConvolutionImageFilterIUC3IUC3 const & arg0);
     void operator=(itkConvolutionImageFilterIUC3IUC3 const & arg0);
   protected:
     itkConvolutionImageFilterIUC3IUC3();
     ~itkConvolutionImageFilterIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkConvolutionImageFilterIUC3IUC3_Pointer {
   public:
     itkConvolutionImageFilterIUC3IUC3_Pointer();
     itkConvolutionImageFilterIUC3IUC3_Pointer(itkConvolutionImageFilterIUC3IUC3_Pointer const & p);
     itkConvolutionImageFilterIUC3IUC3_Pointer(itkConvolutionImageFilterIUC3IUC3 * p);
     ~itkConvolutionImageFilterIUC3IUC3_Pointer();
     itkConvolutionImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConvolutionImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkConvolutionImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkConvolutionImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkConvolutionImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkConvolutionImageFilterIUC3IUC3_Pointer const & r) const;
     itkConvolutionImageFilterIUC3IUC3_Pointer & operator=(itkConvolutionImageFilterIUC3IUC3_Pointer const & r);
     itkConvolutionImageFilterIUC3IUC3_Pointer & operator=(itkConvolutionImageFilterIUC3IUC3 * r);
     itkConvolutionImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConvolutionImageFilterIUL2IUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkConvolutionImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetImageKernelInput(itkImageUL2 const * _arg);
     virtual void SetInput1(itkImageUL2 const * _arg);
     virtual itkImageUL2 const * GetImageKernelInput() const;
     virtual itkImageUL2 const * GetInput1() const;
     virtual void SetNormalize(bool const _arg);
     virtual bool GetNormalize() const;
     virtual void NormalizeOn();
     virtual void NormalizeOff();
     virtual void GenerateInputRequestedRegion();
   private:
     itkConvolutionImageFilterIUL2IUL2(itkConvolutionImageFilterIUL2IUL2 const & arg0);
     void operator=(itkConvolutionImageFilterIUL2IUL2 const & arg0);
   protected:
     itkConvolutionImageFilterIUL2IUL2();
     ~itkConvolutionImageFilterIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkConvolutionImageFilterIUL2IUL2_Pointer {
   public:
     itkConvolutionImageFilterIUL2IUL2_Pointer();
     itkConvolutionImageFilterIUL2IUL2_Pointer(itkConvolutionImageFilterIUL2IUL2_Pointer const & p);
     itkConvolutionImageFilterIUL2IUL2_Pointer(itkConvolutionImageFilterIUL2IUL2 * p);
     ~itkConvolutionImageFilterIUL2IUL2_Pointer();
     itkConvolutionImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConvolutionImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkConvolutionImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkConvolutionImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkConvolutionImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkConvolutionImageFilterIUL2IUL2_Pointer const & r) const;
     itkConvolutionImageFilterIUL2IUL2_Pointer & operator=(itkConvolutionImageFilterIUL2IUL2_Pointer const & r);
     itkConvolutionImageFilterIUL2IUL2_Pointer & operator=(itkConvolutionImageFilterIUL2IUL2 * r);
     itkConvolutionImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConvolutionImageFilterIUL3IUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkConvolutionImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetImageKernelInput(itkImageUL3 const * _arg);
     virtual void SetInput1(itkImageUL3 const * _arg);
     virtual itkImageUL3 const * GetImageKernelInput() const;
     virtual itkImageUL3 const * GetInput1() const;
     virtual void SetNormalize(bool const _arg);
     virtual bool GetNormalize() const;
     virtual void NormalizeOn();
     virtual void NormalizeOff();
     virtual void GenerateInputRequestedRegion();
   private:
     itkConvolutionImageFilterIUL3IUL3(itkConvolutionImageFilterIUL3IUL3 const & arg0);
     void operator=(itkConvolutionImageFilterIUL3IUL3 const & arg0);
   protected:
     itkConvolutionImageFilterIUL3IUL3();
     ~itkConvolutionImageFilterIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkConvolutionImageFilterIUL3IUL3_Pointer {
   public:
     itkConvolutionImageFilterIUL3IUL3_Pointer();
     itkConvolutionImageFilterIUL3IUL3_Pointer(itkConvolutionImageFilterIUL3IUL3_Pointer const & p);
     itkConvolutionImageFilterIUL3IUL3_Pointer(itkConvolutionImageFilterIUL3IUL3 * p);
     ~itkConvolutionImageFilterIUL3IUL3_Pointer();
     itkConvolutionImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConvolutionImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkConvolutionImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkConvolutionImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkConvolutionImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkConvolutionImageFilterIUL3IUL3_Pointer const & r) const;
     itkConvolutionImageFilterIUL3IUL3_Pointer & operator=(itkConvolutionImageFilterIUL3IUL3_Pointer const & r);
     itkConvolutionImageFilterIUL3IUL3_Pointer & operator=(itkConvolutionImageFilterIUL3IUL3 * r);
     itkConvolutionImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConvolutionImageFilterIUS2IUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkConvolutionImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetImageKernelInput(itkImageUS2 const * _arg);
     virtual void SetInput1(itkImageUS2 const * _arg);
     virtual itkImageUS2 const * GetImageKernelInput() const;
     virtual itkImageUS2 const * GetInput1() const;
     virtual void SetNormalize(bool const _arg);
     virtual bool GetNormalize() const;
     virtual void NormalizeOn();
     virtual void NormalizeOff();
     virtual void GenerateInputRequestedRegion();
   private:
     itkConvolutionImageFilterIUS2IUS2(itkConvolutionImageFilterIUS2IUS2 const & arg0);
     void operator=(itkConvolutionImageFilterIUS2IUS2 const & arg0);
   protected:
     itkConvolutionImageFilterIUS2IUS2();
     ~itkConvolutionImageFilterIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkConvolutionImageFilterIUS2IUS2_Pointer {
   public:
     itkConvolutionImageFilterIUS2IUS2_Pointer();
     itkConvolutionImageFilterIUS2IUS2_Pointer(itkConvolutionImageFilterIUS2IUS2_Pointer const & p);
     itkConvolutionImageFilterIUS2IUS2_Pointer(itkConvolutionImageFilterIUS2IUS2 * p);
     ~itkConvolutionImageFilterIUS2IUS2_Pointer();
     itkConvolutionImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConvolutionImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkConvolutionImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkConvolutionImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkConvolutionImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkConvolutionImageFilterIUS2IUS2_Pointer const & r) const;
     itkConvolutionImageFilterIUS2IUS2_Pointer & operator=(itkConvolutionImageFilterIUS2IUS2_Pointer const & r);
     itkConvolutionImageFilterIUS2IUS2_Pointer & operator=(itkConvolutionImageFilterIUS2IUS2 * r);
     itkConvolutionImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConvolutionImageFilterIUS3IUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkConvolutionImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetImageKernelInput(itkImageUS3 const * _arg);
     virtual void SetInput1(itkImageUS3 const * _arg);
     virtual itkImageUS3 const * GetImageKernelInput() const;
     virtual itkImageUS3 const * GetInput1() const;
     virtual void SetNormalize(bool const _arg);
     virtual bool GetNormalize() const;
     virtual void NormalizeOn();
     virtual void NormalizeOff();
     virtual void GenerateInputRequestedRegion();
   private:
     itkConvolutionImageFilterIUS3IUS3(itkConvolutionImageFilterIUS3IUS3 const & arg0);
     void operator=(itkConvolutionImageFilterIUS3IUS3 const & arg0);
   protected:
     itkConvolutionImageFilterIUS3IUS3();
     ~itkConvolutionImageFilterIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkConvolutionImageFilterIUS3IUS3_Pointer {
   public:
     itkConvolutionImageFilterIUS3IUS3_Pointer();
     itkConvolutionImageFilterIUS3IUS3_Pointer(itkConvolutionImageFilterIUS3IUS3_Pointer const & p);
     itkConvolutionImageFilterIUS3IUS3_Pointer(itkConvolutionImageFilterIUS3IUS3 * p);
     ~itkConvolutionImageFilterIUS3IUS3_Pointer();
     itkConvolutionImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConvolutionImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkConvolutionImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkConvolutionImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkConvolutionImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkConvolutionImageFilterIUS3IUS3_Pointer const & r) const;
     itkConvolutionImageFilterIUS3IUS3_Pointer & operator=(itkConvolutionImageFilterIUS3IUS3_Pointer const & r);
     itkConvolutionImageFilterIUS3IUS3_Pointer & operator=(itkConvolutionImageFilterIUS3IUS3 * r);
     itkConvolutionImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


