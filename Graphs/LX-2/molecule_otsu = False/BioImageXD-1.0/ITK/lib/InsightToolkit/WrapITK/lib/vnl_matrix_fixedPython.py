# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _vnl_matrix_fixedPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_vnl_matrix_fixedPython', [dirname(__file__)])
        except ImportError:
            import _vnl_matrix_fixedPython
            return _vnl_matrix_fixedPython
        if fp is not None:
            try:
                _mod = imp.load_module('_vnl_matrix_fixedPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _vnl_matrix_fixedPython = swig_import_helper()
    del swig_import_helper
else:
    import _vnl_matrix_fixedPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import vnl_vectorPython
import vcl_complexPython
import pyBasePython
import vnl_matrixPython
class vnl_matrix_fixedD_2_2(object):
    """Proxy of C++ vnl_matrix_fixedD_2_2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> vnl_matrix_fixedD_2_2
        __init__(self, double value) -> vnl_matrix_fixedD_2_2
        __init__(self, double datablck) -> vnl_matrix_fixedD_2_2
        __init__(self, vnl_matrix_fixedD_2_2 rhs) -> vnl_matrix_fixedD_2_2
        __init__(self, vnl_matrixD rhs) -> vnl_matrix_fixedD_2_2
        """
        _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_swiginit(self,_vnl_matrix_fixedPython.new_vnl_matrix_fixedD_2_2(*args))
    __swig_destroy__ = _vnl_matrix_fixedPython.delete_vnl_matrix_fixedD_2_2
    def rows(self):
        """rows(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_rows(self)

    def columns(self):
        """columns(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_columns(self)

    def cols(self):
        """cols(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_cols(self)

    def size(self):
        """size(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_size(self)

    def put(self, *args):
        """put(self, unsigned int r, unsigned int c, double v)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_put(self, *args)

    def get(self, *args):
        """get(self, unsigned int r, unsigned int c) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_get(self, *args)

    def __call__(self, *args):
        """
        __call__(self, unsigned int r, unsigned int c) -> double
        __call__(self, unsigned int r, unsigned int c) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2___call__(self, *args)

    def fill(self, *args):
        """fill(self, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_fill(self, *args)

    def fill_diagonal(self, *args):
        """fill_diagonal(self, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_fill_diagonal(self, *args)

    def copy_in(self, *args):
        """copy_in(self, double p)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_copy_in(self, *args)

    def set(self, *args):
        """set(self, double d)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_set(self, *args)

    def copy_out(self, *args):
        """copy_out(self, double p)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_copy_out(self, *args)

    def inplace_transpose(self):
        """inplace_transpose(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_inplace_transpose(self)

    def __idiv__(self, *args):
        """__idiv__(self, double s) -> vnl_matrix_fixedD_2_2"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2___idiv__(self, *args)

    def __iadd__(self, *args):
        """
        __iadd__(self, double s) -> vnl_matrix_fixedD_2_2
        __iadd__(self, vnl_matrix_fixedD_2_2 m) -> vnl_matrix_fixedD_2_2
        __iadd__(self, vnl_matrixD m) -> vnl_matrix_fixedD_2_2
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2___iadd__(self, *args)

    def __isub__(self, *args):
        """
        __isub__(self, double s) -> vnl_matrix_fixedD_2_2
        __isub__(self, vnl_matrix_fixedD_2_2 m) -> vnl_matrix_fixedD_2_2
        __isub__(self, vnl_matrixD m) -> vnl_matrix_fixedD_2_2
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2___isub__(self, *args)

    def __neg__(self):
        """__neg__(self) -> vnl_matrix_fixedD_2_2"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2___neg__(self)

    def __imul__(self, *args):
        """
        __imul__(self, double s) -> vnl_matrix_fixedD_2_2
        __imul__(self, vnl_matrix_fixedD_2_2 s) -> vnl_matrix_fixedD_2_2
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2___imul__(self, *args)

    def transpose(self):
        """transpose(self) -> vnl_matrix_fixedD_2_2"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_transpose(self)

    def conjugate_transpose(self):
        """conjugate_transpose(self) -> vnl_matrix_fixedD_2_2"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_conjugate_transpose(self)

    def update(self, *args):
        """
        update(self, vnl_matrixD m, unsigned int top = 0, unsigned int left = 0) -> vnl_matrix_fixedD_2_2
        update(self, vnl_matrixD m, unsigned int top = 0) -> vnl_matrix_fixedD_2_2
        update(self, vnl_matrixD m) -> vnl_matrix_fixedD_2_2
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_update(self, *args)

    def set_column(self, *args):
        """
        set_column(self, unsigned int column_index, double v)
        set_column(self, unsigned int column_index, double v)
        set_column(self, unsigned int column_index, vnl_vectorD v)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_set_column(self, *args)

    def set_columns(self, *args):
        """set_columns(self, unsigned int starting_column, vnl_matrixD m)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_set_columns(self, *args)

    def set_row(self, *args):
        """
        set_row(self, unsigned int row_index, double v)
        set_row(self, unsigned int row_index, double v)
        set_row(self, unsigned int row_index, vnl_vectorD v)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_set_row(self, *args)

    def extract(self, *args):
        """
        extract(self, unsigned int rowz, unsigned int colz, unsigned int top = 0, 
            unsigned int left = 0) -> vnl_matrixD
        extract(self, unsigned int rowz, unsigned int colz, unsigned int top = 0) -> vnl_matrixD
        extract(self, unsigned int rowz, unsigned int colz) -> vnl_matrixD
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_extract(self, *args)

    def get_row(self, *args):
        """get_row(self, unsigned int row_index) -> vnl_vectorD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_get_row(self, *args)

    def get_column(self, *args):
        """get_column(self, unsigned int column_index) -> vnl_vectorD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_get_column(self, *args)

    def get_n_rows(self, *args):
        """get_n_rows(self, unsigned int row, unsigned int n) -> vnl_matrixD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_get_n_rows(self, *args)

    def get_n_columns(self, *args):
        """get_n_columns(self, unsigned int column, unsigned int n) -> vnl_matrixD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_get_n_columns(self, *args)

    def set_identity(self):
        """set_identity(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_set_identity(self)

    def flipud(self):
        """flipud(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_flipud(self)

    def fliplr(self):
        """fliplr(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_fliplr(self)

    def normalize_rows(self):
        """normalize_rows(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_normalize_rows(self)

    def normalize_columns(self):
        """normalize_columns(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_normalize_columns(self)

    def scale_row(self, *args):
        """scale_row(self, unsigned int row_index, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_scale_row(self, *args)

    def scale_column(self, *args):
        """scale_column(self, unsigned int column_index, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_scale_column(self, *args)

    def array_one_norm(self):
        """array_one_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_array_one_norm(self)

    def array_two_norm(self):
        """array_two_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_array_two_norm(self)

    def array_inf_norm(self):
        """array_inf_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_array_inf_norm(self)

    def absolute_value_sum(self):
        """absolute_value_sum(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_absolute_value_sum(self)

    def absolute_value_max(self):
        """absolute_value_max(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_absolute_value_max(self)

    def operator_one_norm(self):
        """operator_one_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_operator_one_norm(self)

    def operator_inf_norm(self):
        """operator_inf_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_operator_inf_norm(self)

    def frobenius_norm(self):
        """frobenius_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_frobenius_norm(self)

    def fro_norm(self):
        """fro_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_fro_norm(self)

    def rms(self):
        """rms(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_rms(self)

    def min_value(self):
        """min_value(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_min_value(self)

    def max_value(self):
        """max_value(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_max_value(self)

    def mean(self):
        """mean(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_mean(self)

    def empty(self):
        """empty(self) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_empty(self)

    def is_identity(self, *args):
        """
        is_identity(self) -> bool
        is_identity(self, double tol) -> bool
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_is_identity(self, *args)

    def is_zero(self, *args):
        """
        is_zero(self) -> bool
        is_zero(self, double tol) -> bool
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_is_zero(self, *args)

    def is_finite(self):
        """is_finite(self) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_is_finite(self)

    def has_nans(self):
        """has_nans(self) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_has_nans(self)

    def assert_size(self, *args):
        """assert_size(self, unsigned int nr_rows, unsigned int nr_cols)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_assert_size(self, *args)

    def assert_finite(self):
        """assert_finite(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_assert_finite(self)

    def read_ascii(self, *args):
        """read_ascii(self, istream s) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_read_ascii(self, *args)

    def data_block(self, *args):
        """
        data_block(self) -> double
        data_block(self) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_data_block(self, *args)

    def as_matrix(self):
        """as_matrix(self) -> vnl_matrixD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_as_matrix(self)

    def begin(self, *args):
        """
        begin(self) -> double
        begin(self) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_begin(self, *args)

    def end(self, *args):
        """
        end(self) -> double
        end(self) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_end(self, *args)

    def operator_eq(self, *args):
        """operator_eq(self, vnl_matrix_fixedD_2_2 rhs) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_operator_eq(self, *args)

    def __eq__(self, *args):
        """__eq__(self, vnl_matrixD that) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(self, vnl_matrixD that) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2___ne__(self, *args)

    def _print(self, *args):
        """_print(self, ostream os)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2__print(self, *args)

    def add(*args):
        """
        add(double a, double b, double r)
        add(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_add(*args)

    add = staticmethod(add)
    def sub(*args):
        """
        sub(double a, double b, double r)
        sub(double a, double b, double r)
        sub(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_sub(*args)

    sub = staticmethod(sub)
    def mul(*args):
        """
        mul(double a, double b, double r)
        mul(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_mul(*args)

    mul = staticmethod(mul)
    def div(*args):
        """
        div(double a, double b, double r)
        div(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_div(*args)

    div = staticmethod(div)
    def equal(*args):
        """equal(double a, double b) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_equal(*args)

    equal = staticmethod(equal)
vnl_matrix_fixedD_2_2.rows = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_rows,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_columns,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.cols = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_cols,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.size = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_size,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.put = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_put,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.get = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_get,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.__call__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2___call__,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.fill = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_fill,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.fill_diagonal = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_fill_diagonal,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.copy_in = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_copy_in,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.set = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_set,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.copy_out = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_copy_out,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.inplace_transpose = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_inplace_transpose,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.__idiv__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2___idiv__,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.__iadd__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2___iadd__,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.__isub__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2___isub__,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.__neg__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2___neg__,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.__imul__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2___imul__,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.transpose = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_transpose,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.conjugate_transpose = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_conjugate_transpose,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.update = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_update,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.set_column = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_set_column,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.set_columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_set_columns,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.set_row = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_set_row,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.extract = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_extract,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.get_row = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_get_row,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.get_column = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_get_column,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.get_n_rows = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_get_n_rows,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.get_n_columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_get_n_columns,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.set_identity = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_set_identity,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.flipud = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_flipud,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.fliplr = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_fliplr,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.normalize_rows = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_normalize_rows,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.normalize_columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_normalize_columns,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.scale_row = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_scale_row,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.scale_column = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_scale_column,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.array_one_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_array_one_norm,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.array_two_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_array_two_norm,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.array_inf_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_array_inf_norm,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.absolute_value_sum = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_absolute_value_sum,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.absolute_value_max = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_absolute_value_max,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.operator_one_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_operator_one_norm,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.operator_inf_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_operator_inf_norm,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.frobenius_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_frobenius_norm,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.fro_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_fro_norm,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.rms = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_rms,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.min_value = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_min_value,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.max_value = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_max_value,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.mean = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_mean,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.empty = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_empty,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.is_identity = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_is_identity,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.is_zero = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_is_zero,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.is_finite = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_is_finite,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.has_nans = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_has_nans,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.assert_size = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_assert_size,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.assert_finite = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_assert_finite,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.read_ascii = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_read_ascii,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.data_block = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_data_block,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.as_matrix = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_as_matrix,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.begin = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_begin,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.end = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_end,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.operator_eq = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_operator_eq,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.__eq__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2___eq__,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2.__ne__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2___ne__,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2._print = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2__print,None,vnl_matrix_fixedD_2_2)
vnl_matrix_fixedD_2_2_swigregister = _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_swigregister
vnl_matrix_fixedD_2_2_swigregister(vnl_matrix_fixedD_2_2)

def vnl_matrix_fixedD_2_2_add(*args):
  """
    add(double a, double b, double r)
    vnl_matrix_fixedD_2_2_add(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_add(*args)

def vnl_matrix_fixedD_2_2_sub(*args):
  """
    sub(double a, double b, double r)
    sub(double a, double b, double r)
    vnl_matrix_fixedD_2_2_sub(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_sub(*args)

def vnl_matrix_fixedD_2_2_mul(*args):
  """
    mul(double a, double b, double r)
    vnl_matrix_fixedD_2_2_mul(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_mul(*args)

def vnl_matrix_fixedD_2_2_div(*args):
  """
    div(double a, double b, double r)
    vnl_matrix_fixedD_2_2_div(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_div(*args)

def vnl_matrix_fixedD_2_2_equal(*args):
  """vnl_matrix_fixedD_2_2_equal(double a, double b) -> bool"""
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_2_equal(*args)

class vnl_matrix_fixedD_2_3(object):
    """Proxy of C++ vnl_matrix_fixedD_2_3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> vnl_matrix_fixedD_2_3
        __init__(self, double value) -> vnl_matrix_fixedD_2_3
        __init__(self, double datablck) -> vnl_matrix_fixedD_2_3
        __init__(self, vnl_matrix_fixedD_2_3 rhs) -> vnl_matrix_fixedD_2_3
        __init__(self, vnl_matrixD rhs) -> vnl_matrix_fixedD_2_3
        """
        _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_swiginit(self,_vnl_matrix_fixedPython.new_vnl_matrix_fixedD_2_3(*args))
    __swig_destroy__ = _vnl_matrix_fixedPython.delete_vnl_matrix_fixedD_2_3
    def rows(self):
        """rows(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_rows(self)

    def columns(self):
        """columns(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_columns(self)

    def cols(self):
        """cols(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_cols(self)

    def size(self):
        """size(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_size(self)

    def put(self, *args):
        """put(self, unsigned int r, unsigned int c, double v)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_put(self, *args)

    def get(self, *args):
        """get(self, unsigned int r, unsigned int c) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_get(self, *args)

    def __call__(self, *args):
        """
        __call__(self, unsigned int r, unsigned int c) -> double
        __call__(self, unsigned int r, unsigned int c) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3___call__(self, *args)

    def fill(self, *args):
        """fill(self, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_fill(self, *args)

    def fill_diagonal(self, *args):
        """fill_diagonal(self, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_fill_diagonal(self, *args)

    def copy_in(self, *args):
        """copy_in(self, double p)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_copy_in(self, *args)

    def set(self, *args):
        """set(self, double d)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_set(self, *args)

    def copy_out(self, *args):
        """copy_out(self, double p)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_copy_out(self, *args)

    def inplace_transpose(self):
        """inplace_transpose(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_inplace_transpose(self)

    def __idiv__(self, *args):
        """__idiv__(self, double s) -> vnl_matrix_fixedD_2_3"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3___idiv__(self, *args)

    def __iadd__(self, *args):
        """
        __iadd__(self, double s) -> vnl_matrix_fixedD_2_3
        __iadd__(self, vnl_matrix_fixedD_2_3 m) -> vnl_matrix_fixedD_2_3
        __iadd__(self, vnl_matrixD m) -> vnl_matrix_fixedD_2_3
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3___iadd__(self, *args)

    def __isub__(self, *args):
        """
        __isub__(self, double s) -> vnl_matrix_fixedD_2_3
        __isub__(self, vnl_matrix_fixedD_2_3 m) -> vnl_matrix_fixedD_2_3
        __isub__(self, vnl_matrixD m) -> vnl_matrix_fixedD_2_3
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3___isub__(self, *args)

    def __neg__(self):
        """__neg__(self) -> vnl_matrix_fixedD_2_3"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3___neg__(self)

    def __imul__(self, *args):
        """
        __imul__(self, double s) -> vnl_matrix_fixedD_2_3
        __imul__(self, vnl_matrix_fixedD_3_3 s) -> vnl_matrix_fixedD_2_3
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3___imul__(self, *args)

    def transpose(self):
        """transpose(self) -> vnl_matrix_fixed<(double,3u,2u)>"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_transpose(self)

    def conjugate_transpose(self):
        """conjugate_transpose(self) -> vnl_matrix_fixed<(double,3u,2u)>"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_conjugate_transpose(self)

    def update(self, *args):
        """
        update(self, vnl_matrixD m, unsigned int top = 0, unsigned int left = 0) -> vnl_matrix_fixedD_2_3
        update(self, vnl_matrixD m, unsigned int top = 0) -> vnl_matrix_fixedD_2_3
        update(self, vnl_matrixD m) -> vnl_matrix_fixedD_2_3
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_update(self, *args)

    def set_column(self, *args):
        """
        set_column(self, unsigned int column_index, double v)
        set_column(self, unsigned int column_index, double v)
        set_column(self, unsigned int column_index, vnl_vectorD v)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_set_column(self, *args)

    def set_columns(self, *args):
        """set_columns(self, unsigned int starting_column, vnl_matrixD m)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_set_columns(self, *args)

    def set_row(self, *args):
        """
        set_row(self, unsigned int row_index, double v)
        set_row(self, unsigned int row_index, double v)
        set_row(self, unsigned int row_index, vnl_vectorD v)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_set_row(self, *args)

    def extract(self, *args):
        """
        extract(self, unsigned int rowz, unsigned int colz, unsigned int top = 0, 
            unsigned int left = 0) -> vnl_matrixD
        extract(self, unsigned int rowz, unsigned int colz, unsigned int top = 0) -> vnl_matrixD
        extract(self, unsigned int rowz, unsigned int colz) -> vnl_matrixD
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_extract(self, *args)

    def get_row(self, *args):
        """get_row(self, unsigned int row_index) -> vnl_vectorD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_get_row(self, *args)

    def get_column(self, *args):
        """get_column(self, unsigned int column_index) -> vnl_vectorD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_get_column(self, *args)

    def get_n_rows(self, *args):
        """get_n_rows(self, unsigned int row, unsigned int n) -> vnl_matrixD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_get_n_rows(self, *args)

    def get_n_columns(self, *args):
        """get_n_columns(self, unsigned int column, unsigned int n) -> vnl_matrixD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_get_n_columns(self, *args)

    def set_identity(self):
        """set_identity(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_set_identity(self)

    def flipud(self):
        """flipud(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_flipud(self)

    def fliplr(self):
        """fliplr(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_fliplr(self)

    def normalize_rows(self):
        """normalize_rows(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_normalize_rows(self)

    def normalize_columns(self):
        """normalize_columns(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_normalize_columns(self)

    def scale_row(self, *args):
        """scale_row(self, unsigned int row_index, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_scale_row(self, *args)

    def scale_column(self, *args):
        """scale_column(self, unsigned int column_index, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_scale_column(self, *args)

    def array_one_norm(self):
        """array_one_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_array_one_norm(self)

    def array_two_norm(self):
        """array_two_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_array_two_norm(self)

    def array_inf_norm(self):
        """array_inf_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_array_inf_norm(self)

    def absolute_value_sum(self):
        """absolute_value_sum(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_absolute_value_sum(self)

    def absolute_value_max(self):
        """absolute_value_max(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_absolute_value_max(self)

    def operator_one_norm(self):
        """operator_one_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_operator_one_norm(self)

    def operator_inf_norm(self):
        """operator_inf_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_operator_inf_norm(self)

    def frobenius_norm(self):
        """frobenius_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_frobenius_norm(self)

    def fro_norm(self):
        """fro_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_fro_norm(self)

    def rms(self):
        """rms(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_rms(self)

    def min_value(self):
        """min_value(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_min_value(self)

    def max_value(self):
        """max_value(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_max_value(self)

    def mean(self):
        """mean(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_mean(self)

    def empty(self):
        """empty(self) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_empty(self)

    def is_identity(self, *args):
        """
        is_identity(self) -> bool
        is_identity(self, double tol) -> bool
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_is_identity(self, *args)

    def is_zero(self, *args):
        """
        is_zero(self) -> bool
        is_zero(self, double tol) -> bool
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_is_zero(self, *args)

    def is_finite(self):
        """is_finite(self) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_is_finite(self)

    def has_nans(self):
        """has_nans(self) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_has_nans(self)

    def assert_size(self, *args):
        """assert_size(self, unsigned int nr_rows, unsigned int nr_cols)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_assert_size(self, *args)

    def assert_finite(self):
        """assert_finite(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_assert_finite(self)

    def read_ascii(self, *args):
        """read_ascii(self, istream s) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_read_ascii(self, *args)

    def data_block(self, *args):
        """
        data_block(self) -> double
        data_block(self) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_data_block(self, *args)

    def as_matrix(self):
        """as_matrix(self) -> vnl_matrixD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_as_matrix(self)

    def begin(self, *args):
        """
        begin(self) -> double
        begin(self) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_begin(self, *args)

    def end(self, *args):
        """
        end(self) -> double
        end(self) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_end(self, *args)

    def operator_eq(self, *args):
        """operator_eq(self, vnl_matrix_fixedD_2_3 rhs) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_operator_eq(self, *args)

    def __eq__(self, *args):
        """__eq__(self, vnl_matrixD that) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(self, vnl_matrixD that) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3___ne__(self, *args)

    def _print(self, *args):
        """_print(self, ostream os)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3__print(self, *args)

    def add(*args):
        """
        add(double a, double b, double r)
        add(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_add(*args)

    add = staticmethod(add)
    def sub(*args):
        """
        sub(double a, double b, double r)
        sub(double a, double b, double r)
        sub(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_sub(*args)

    sub = staticmethod(sub)
    def mul(*args):
        """
        mul(double a, double b, double r)
        mul(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_mul(*args)

    mul = staticmethod(mul)
    def div(*args):
        """
        div(double a, double b, double r)
        div(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_div(*args)

    div = staticmethod(div)
    def equal(*args):
        """equal(double a, double b) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_equal(*args)

    equal = staticmethod(equal)
vnl_matrix_fixedD_2_3.rows = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_rows,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_columns,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.cols = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_cols,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.size = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_size,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.put = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_put,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.get = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_get,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.__call__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3___call__,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.fill = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_fill,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.fill_diagonal = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_fill_diagonal,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.copy_in = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_copy_in,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.set = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_set,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.copy_out = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_copy_out,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.inplace_transpose = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_inplace_transpose,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.__idiv__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3___idiv__,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.__iadd__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3___iadd__,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.__isub__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3___isub__,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.__neg__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3___neg__,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.__imul__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3___imul__,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.transpose = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_transpose,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.conjugate_transpose = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_conjugate_transpose,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.update = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_update,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.set_column = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_set_column,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.set_columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_set_columns,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.set_row = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_set_row,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.extract = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_extract,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.get_row = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_get_row,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.get_column = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_get_column,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.get_n_rows = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_get_n_rows,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.get_n_columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_get_n_columns,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.set_identity = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_set_identity,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.flipud = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_flipud,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.fliplr = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_fliplr,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.normalize_rows = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_normalize_rows,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.normalize_columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_normalize_columns,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.scale_row = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_scale_row,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.scale_column = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_scale_column,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.array_one_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_array_one_norm,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.array_two_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_array_two_norm,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.array_inf_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_array_inf_norm,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.absolute_value_sum = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_absolute_value_sum,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.absolute_value_max = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_absolute_value_max,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.operator_one_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_operator_one_norm,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.operator_inf_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_operator_inf_norm,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.frobenius_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_frobenius_norm,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.fro_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_fro_norm,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.rms = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_rms,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.min_value = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_min_value,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.max_value = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_max_value,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.mean = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_mean,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.empty = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_empty,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.is_identity = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_is_identity,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.is_zero = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_is_zero,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.is_finite = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_is_finite,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.has_nans = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_has_nans,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.assert_size = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_assert_size,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.assert_finite = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_assert_finite,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.read_ascii = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_read_ascii,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.data_block = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_data_block,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.as_matrix = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_as_matrix,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.begin = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_begin,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.end = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_end,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.operator_eq = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_operator_eq,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.__eq__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3___eq__,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3.__ne__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3___ne__,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3._print = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3__print,None,vnl_matrix_fixedD_2_3)
vnl_matrix_fixedD_2_3_swigregister = _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_swigregister
vnl_matrix_fixedD_2_3_swigregister(vnl_matrix_fixedD_2_3)

def vnl_matrix_fixedD_2_3_add(*args):
  """
    add(double a, double b, double r)
    vnl_matrix_fixedD_2_3_add(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_add(*args)

def vnl_matrix_fixedD_2_3_sub(*args):
  """
    sub(double a, double b, double r)
    sub(double a, double b, double r)
    vnl_matrix_fixedD_2_3_sub(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_sub(*args)

def vnl_matrix_fixedD_2_3_mul(*args):
  """
    mul(double a, double b, double r)
    vnl_matrix_fixedD_2_3_mul(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_mul(*args)

def vnl_matrix_fixedD_2_3_div(*args):
  """
    div(double a, double b, double r)
    vnl_matrix_fixedD_2_3_div(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_div(*args)

def vnl_matrix_fixedD_2_3_equal(*args):
  """vnl_matrix_fixedD_2_3_equal(double a, double b) -> bool"""
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_3_equal(*args)

class vnl_matrix_fixedD_2_6(object):
    """Proxy of C++ vnl_matrix_fixedD_2_6 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> vnl_matrix_fixedD_2_6
        __init__(self, double value) -> vnl_matrix_fixedD_2_6
        __init__(self, double datablck) -> vnl_matrix_fixedD_2_6
        __init__(self, vnl_matrix_fixedD_2_6 rhs) -> vnl_matrix_fixedD_2_6
        __init__(self, vnl_matrixD rhs) -> vnl_matrix_fixedD_2_6
        """
        _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_swiginit(self,_vnl_matrix_fixedPython.new_vnl_matrix_fixedD_2_6(*args))
    __swig_destroy__ = _vnl_matrix_fixedPython.delete_vnl_matrix_fixedD_2_6
    def rows(self):
        """rows(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_rows(self)

    def columns(self):
        """columns(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_columns(self)

    def cols(self):
        """cols(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_cols(self)

    def size(self):
        """size(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_size(self)

    def put(self, *args):
        """put(self, unsigned int r, unsigned int c, double v)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_put(self, *args)

    def get(self, *args):
        """get(self, unsigned int r, unsigned int c) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_get(self, *args)

    def __call__(self, *args):
        """
        __call__(self, unsigned int r, unsigned int c) -> double
        __call__(self, unsigned int r, unsigned int c) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6___call__(self, *args)

    def fill(self, *args):
        """fill(self, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_fill(self, *args)

    def fill_diagonal(self, *args):
        """fill_diagonal(self, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_fill_diagonal(self, *args)

    def copy_in(self, *args):
        """copy_in(self, double p)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_copy_in(self, *args)

    def set(self, *args):
        """set(self, double d)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_set(self, *args)

    def copy_out(self, *args):
        """copy_out(self, double p)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_copy_out(self, *args)

    def inplace_transpose(self):
        """inplace_transpose(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_inplace_transpose(self)

    def __idiv__(self, *args):
        """__idiv__(self, double s) -> vnl_matrix_fixedD_2_6"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6___idiv__(self, *args)

    def __iadd__(self, *args):
        """
        __iadd__(self, double s) -> vnl_matrix_fixedD_2_6
        __iadd__(self, vnl_matrix_fixedD_2_6 m) -> vnl_matrix_fixedD_2_6
        __iadd__(self, vnl_matrixD m) -> vnl_matrix_fixedD_2_6
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6___iadd__(self, *args)

    def __isub__(self, *args):
        """
        __isub__(self, double s) -> vnl_matrix_fixedD_2_6
        __isub__(self, vnl_matrix_fixedD_2_6 m) -> vnl_matrix_fixedD_2_6
        __isub__(self, vnl_matrixD m) -> vnl_matrix_fixedD_2_6
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6___isub__(self, *args)

    def __neg__(self):
        """__neg__(self) -> vnl_matrix_fixedD_2_6"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6___neg__(self)

    def __imul__(self, *args):
        """
        __imul__(self, double s) -> vnl_matrix_fixedD_2_6
        __imul__(self, vnl_matrix_fixed<(double,6u,6u)> s) -> vnl_matrix_fixedD_2_6
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6___imul__(self, *args)

    def transpose(self):
        """transpose(self) -> vnl_matrix_fixed<(double,6u,2u)>"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_transpose(self)

    def conjugate_transpose(self):
        """conjugate_transpose(self) -> vnl_matrix_fixed<(double,6u,2u)>"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_conjugate_transpose(self)

    def update(self, *args):
        """
        update(self, vnl_matrixD m, unsigned int top = 0, unsigned int left = 0) -> vnl_matrix_fixedD_2_6
        update(self, vnl_matrixD m, unsigned int top = 0) -> vnl_matrix_fixedD_2_6
        update(self, vnl_matrixD m) -> vnl_matrix_fixedD_2_6
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_update(self, *args)

    def set_column(self, *args):
        """
        set_column(self, unsigned int column_index, double v)
        set_column(self, unsigned int column_index, double v)
        set_column(self, unsigned int column_index, vnl_vectorD v)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_set_column(self, *args)

    def set_columns(self, *args):
        """set_columns(self, unsigned int starting_column, vnl_matrixD m)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_set_columns(self, *args)

    def set_row(self, *args):
        """
        set_row(self, unsigned int row_index, double v)
        set_row(self, unsigned int row_index, double v)
        set_row(self, unsigned int row_index, vnl_vectorD v)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_set_row(self, *args)

    def extract(self, *args):
        """
        extract(self, unsigned int rowz, unsigned int colz, unsigned int top = 0, 
            unsigned int left = 0) -> vnl_matrixD
        extract(self, unsigned int rowz, unsigned int colz, unsigned int top = 0) -> vnl_matrixD
        extract(self, unsigned int rowz, unsigned int colz) -> vnl_matrixD
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_extract(self, *args)

    def get_row(self, *args):
        """get_row(self, unsigned int row_index) -> vnl_vectorD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_get_row(self, *args)

    def get_column(self, *args):
        """get_column(self, unsigned int column_index) -> vnl_vectorD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_get_column(self, *args)

    def get_n_rows(self, *args):
        """get_n_rows(self, unsigned int row, unsigned int n) -> vnl_matrixD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_get_n_rows(self, *args)

    def get_n_columns(self, *args):
        """get_n_columns(self, unsigned int column, unsigned int n) -> vnl_matrixD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_get_n_columns(self, *args)

    def set_identity(self):
        """set_identity(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_set_identity(self)

    def flipud(self):
        """flipud(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_flipud(self)

    def fliplr(self):
        """fliplr(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_fliplr(self)

    def normalize_rows(self):
        """normalize_rows(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_normalize_rows(self)

    def normalize_columns(self):
        """normalize_columns(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_normalize_columns(self)

    def scale_row(self, *args):
        """scale_row(self, unsigned int row_index, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_scale_row(self, *args)

    def scale_column(self, *args):
        """scale_column(self, unsigned int column_index, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_scale_column(self, *args)

    def array_one_norm(self):
        """array_one_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_array_one_norm(self)

    def array_two_norm(self):
        """array_two_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_array_two_norm(self)

    def array_inf_norm(self):
        """array_inf_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_array_inf_norm(self)

    def absolute_value_sum(self):
        """absolute_value_sum(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_absolute_value_sum(self)

    def absolute_value_max(self):
        """absolute_value_max(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_absolute_value_max(self)

    def operator_one_norm(self):
        """operator_one_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_operator_one_norm(self)

    def operator_inf_norm(self):
        """operator_inf_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_operator_inf_norm(self)

    def frobenius_norm(self):
        """frobenius_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_frobenius_norm(self)

    def fro_norm(self):
        """fro_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_fro_norm(self)

    def rms(self):
        """rms(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_rms(self)

    def min_value(self):
        """min_value(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_min_value(self)

    def max_value(self):
        """max_value(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_max_value(self)

    def mean(self):
        """mean(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_mean(self)

    def empty(self):
        """empty(self) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_empty(self)

    def is_identity(self, *args):
        """
        is_identity(self) -> bool
        is_identity(self, double tol) -> bool
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_is_identity(self, *args)

    def is_zero(self, *args):
        """
        is_zero(self) -> bool
        is_zero(self, double tol) -> bool
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_is_zero(self, *args)

    def is_finite(self):
        """is_finite(self) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_is_finite(self)

    def has_nans(self):
        """has_nans(self) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_has_nans(self)

    def assert_size(self, *args):
        """assert_size(self, unsigned int nr_rows, unsigned int nr_cols)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_assert_size(self, *args)

    def assert_finite(self):
        """assert_finite(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_assert_finite(self)

    def read_ascii(self, *args):
        """read_ascii(self, istream s) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_read_ascii(self, *args)

    def data_block(self, *args):
        """
        data_block(self) -> double
        data_block(self) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_data_block(self, *args)

    def as_matrix(self):
        """as_matrix(self) -> vnl_matrixD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_as_matrix(self)

    def begin(self, *args):
        """
        begin(self) -> double
        begin(self) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_begin(self, *args)

    def end(self, *args):
        """
        end(self) -> double
        end(self) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_end(self, *args)

    def operator_eq(self, *args):
        """operator_eq(self, vnl_matrix_fixedD_2_6 rhs) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_operator_eq(self, *args)

    def __eq__(self, *args):
        """__eq__(self, vnl_matrixD that) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(self, vnl_matrixD that) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6___ne__(self, *args)

    def _print(self, *args):
        """_print(self, ostream os)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6__print(self, *args)

    def add(*args):
        """
        add(double a, double b, double r)
        add(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_add(*args)

    add = staticmethod(add)
    def sub(*args):
        """
        sub(double a, double b, double r)
        sub(double a, double b, double r)
        sub(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_sub(*args)

    sub = staticmethod(sub)
    def mul(*args):
        """
        mul(double a, double b, double r)
        mul(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_mul(*args)

    mul = staticmethod(mul)
    def div(*args):
        """
        div(double a, double b, double r)
        div(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_div(*args)

    div = staticmethod(div)
    def equal(*args):
        """equal(double a, double b) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_equal(*args)

    equal = staticmethod(equal)
vnl_matrix_fixedD_2_6.rows = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_rows,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_columns,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.cols = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_cols,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.size = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_size,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.put = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_put,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.get = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_get,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.__call__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6___call__,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.fill = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_fill,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.fill_diagonal = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_fill_diagonal,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.copy_in = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_copy_in,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.set = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_set,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.copy_out = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_copy_out,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.inplace_transpose = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_inplace_transpose,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.__idiv__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6___idiv__,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.__iadd__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6___iadd__,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.__isub__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6___isub__,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.__neg__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6___neg__,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.__imul__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6___imul__,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.transpose = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_transpose,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.conjugate_transpose = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_conjugate_transpose,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.update = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_update,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.set_column = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_set_column,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.set_columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_set_columns,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.set_row = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_set_row,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.extract = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_extract,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.get_row = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_get_row,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.get_column = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_get_column,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.get_n_rows = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_get_n_rows,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.get_n_columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_get_n_columns,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.set_identity = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_set_identity,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.flipud = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_flipud,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.fliplr = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_fliplr,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.normalize_rows = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_normalize_rows,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.normalize_columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_normalize_columns,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.scale_row = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_scale_row,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.scale_column = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_scale_column,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.array_one_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_array_one_norm,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.array_two_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_array_two_norm,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.array_inf_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_array_inf_norm,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.absolute_value_sum = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_absolute_value_sum,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.absolute_value_max = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_absolute_value_max,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.operator_one_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_operator_one_norm,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.operator_inf_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_operator_inf_norm,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.frobenius_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_frobenius_norm,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.fro_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_fro_norm,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.rms = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_rms,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.min_value = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_min_value,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.max_value = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_max_value,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.mean = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_mean,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.empty = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_empty,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.is_identity = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_is_identity,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.is_zero = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_is_zero,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.is_finite = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_is_finite,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.has_nans = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_has_nans,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.assert_size = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_assert_size,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.assert_finite = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_assert_finite,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.read_ascii = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_read_ascii,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.data_block = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_data_block,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.as_matrix = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_as_matrix,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.begin = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_begin,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.end = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_end,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.operator_eq = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_operator_eq,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.__eq__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6___eq__,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6.__ne__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6___ne__,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6._print = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6__print,None,vnl_matrix_fixedD_2_6)
vnl_matrix_fixedD_2_6_swigregister = _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_swigregister
vnl_matrix_fixedD_2_6_swigregister(vnl_matrix_fixedD_2_6)

def vnl_matrix_fixedD_2_6_add(*args):
  """
    add(double a, double b, double r)
    vnl_matrix_fixedD_2_6_add(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_add(*args)

def vnl_matrix_fixedD_2_6_sub(*args):
  """
    sub(double a, double b, double r)
    sub(double a, double b, double r)
    vnl_matrix_fixedD_2_6_sub(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_sub(*args)

def vnl_matrix_fixedD_2_6_mul(*args):
  """
    mul(double a, double b, double r)
    vnl_matrix_fixedD_2_6_mul(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_mul(*args)

def vnl_matrix_fixedD_2_6_div(*args):
  """
    div(double a, double b, double r)
    vnl_matrix_fixedD_2_6_div(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_div(*args)

def vnl_matrix_fixedD_2_6_equal(*args):
  """vnl_matrix_fixedD_2_6_equal(double a, double b) -> bool"""
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_2_6_equal(*args)

class vnl_matrix_fixedD_3_12(object):
    """Proxy of C++ vnl_matrix_fixedD_3_12 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> vnl_matrix_fixedD_3_12
        __init__(self, double value) -> vnl_matrix_fixedD_3_12
        __init__(self, double datablck) -> vnl_matrix_fixedD_3_12
        __init__(self, vnl_matrix_fixedD_3_12 rhs) -> vnl_matrix_fixedD_3_12
        __init__(self, vnl_matrixD rhs) -> vnl_matrix_fixedD_3_12
        """
        _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_swiginit(self,_vnl_matrix_fixedPython.new_vnl_matrix_fixedD_3_12(*args))
    __swig_destroy__ = _vnl_matrix_fixedPython.delete_vnl_matrix_fixedD_3_12
    def rows(self):
        """rows(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_rows(self)

    def columns(self):
        """columns(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_columns(self)

    def cols(self):
        """cols(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_cols(self)

    def size(self):
        """size(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_size(self)

    def put(self, *args):
        """put(self, unsigned int r, unsigned int c, double v)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_put(self, *args)

    def get(self, *args):
        """get(self, unsigned int r, unsigned int c) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_get(self, *args)

    def __call__(self, *args):
        """
        __call__(self, unsigned int r, unsigned int c) -> double
        __call__(self, unsigned int r, unsigned int c) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12___call__(self, *args)

    def fill(self, *args):
        """fill(self, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_fill(self, *args)

    def fill_diagonal(self, *args):
        """fill_diagonal(self, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_fill_diagonal(self, *args)

    def copy_in(self, *args):
        """copy_in(self, double p)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_copy_in(self, *args)

    def set(self, *args):
        """set(self, double d)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_set(self, *args)

    def copy_out(self, *args):
        """copy_out(self, double p)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_copy_out(self, *args)

    def inplace_transpose(self):
        """inplace_transpose(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_inplace_transpose(self)

    def __idiv__(self, *args):
        """__idiv__(self, double s) -> vnl_matrix_fixedD_3_12"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12___idiv__(self, *args)

    def __iadd__(self, *args):
        """
        __iadd__(self, double s) -> vnl_matrix_fixedD_3_12
        __iadd__(self, vnl_matrix_fixedD_3_12 m) -> vnl_matrix_fixedD_3_12
        __iadd__(self, vnl_matrixD m) -> vnl_matrix_fixedD_3_12
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12___iadd__(self, *args)

    def __isub__(self, *args):
        """
        __isub__(self, double s) -> vnl_matrix_fixedD_3_12
        __isub__(self, vnl_matrix_fixedD_3_12 m) -> vnl_matrix_fixedD_3_12
        __isub__(self, vnl_matrixD m) -> vnl_matrix_fixedD_3_12
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12___isub__(self, *args)

    def __neg__(self):
        """__neg__(self) -> vnl_matrix_fixedD_3_12"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12___neg__(self)

    def __imul__(self, *args):
        """
        __imul__(self, double s) -> vnl_matrix_fixedD_3_12
        __imul__(self, vnl_matrix_fixed<(double,12u,12u)> s) -> vnl_matrix_fixedD_3_12
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12___imul__(self, *args)

    def transpose(self):
        """transpose(self) -> vnl_matrix_fixed<(double,12u,3u)>"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_transpose(self)

    def conjugate_transpose(self):
        """conjugate_transpose(self) -> vnl_matrix_fixed<(double,12u,3u)>"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_conjugate_transpose(self)

    def update(self, *args):
        """
        update(self, vnl_matrixD m, unsigned int top = 0, unsigned int left = 0) -> vnl_matrix_fixedD_3_12
        update(self, vnl_matrixD m, unsigned int top = 0) -> vnl_matrix_fixedD_3_12
        update(self, vnl_matrixD m) -> vnl_matrix_fixedD_3_12
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_update(self, *args)

    def set_column(self, *args):
        """
        set_column(self, unsigned int column_index, double v)
        set_column(self, unsigned int column_index, double v)
        set_column(self, unsigned int column_index, vnl_vectorD v)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_set_column(self, *args)

    def set_columns(self, *args):
        """set_columns(self, unsigned int starting_column, vnl_matrixD m)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_set_columns(self, *args)

    def set_row(self, *args):
        """
        set_row(self, unsigned int row_index, double v)
        set_row(self, unsigned int row_index, double v)
        set_row(self, unsigned int row_index, vnl_vectorD v)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_set_row(self, *args)

    def extract(self, *args):
        """
        extract(self, unsigned int rowz, unsigned int colz, unsigned int top = 0, 
            unsigned int left = 0) -> vnl_matrixD
        extract(self, unsigned int rowz, unsigned int colz, unsigned int top = 0) -> vnl_matrixD
        extract(self, unsigned int rowz, unsigned int colz) -> vnl_matrixD
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_extract(self, *args)

    def get_row(self, *args):
        """get_row(self, unsigned int row_index) -> vnl_vectorD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_get_row(self, *args)

    def get_column(self, *args):
        """get_column(self, unsigned int column_index) -> vnl_vectorD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_get_column(self, *args)

    def get_n_rows(self, *args):
        """get_n_rows(self, unsigned int row, unsigned int n) -> vnl_matrixD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_get_n_rows(self, *args)

    def get_n_columns(self, *args):
        """get_n_columns(self, unsigned int column, unsigned int n) -> vnl_matrixD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_get_n_columns(self, *args)

    def set_identity(self):
        """set_identity(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_set_identity(self)

    def flipud(self):
        """flipud(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_flipud(self)

    def fliplr(self):
        """fliplr(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_fliplr(self)

    def normalize_rows(self):
        """normalize_rows(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_normalize_rows(self)

    def normalize_columns(self):
        """normalize_columns(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_normalize_columns(self)

    def scale_row(self, *args):
        """scale_row(self, unsigned int row_index, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_scale_row(self, *args)

    def scale_column(self, *args):
        """scale_column(self, unsigned int column_index, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_scale_column(self, *args)

    def array_one_norm(self):
        """array_one_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_array_one_norm(self)

    def array_two_norm(self):
        """array_two_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_array_two_norm(self)

    def array_inf_norm(self):
        """array_inf_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_array_inf_norm(self)

    def absolute_value_sum(self):
        """absolute_value_sum(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_absolute_value_sum(self)

    def absolute_value_max(self):
        """absolute_value_max(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_absolute_value_max(self)

    def operator_one_norm(self):
        """operator_one_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_operator_one_norm(self)

    def operator_inf_norm(self):
        """operator_inf_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_operator_inf_norm(self)

    def frobenius_norm(self):
        """frobenius_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_frobenius_norm(self)

    def fro_norm(self):
        """fro_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_fro_norm(self)

    def rms(self):
        """rms(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_rms(self)

    def min_value(self):
        """min_value(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_min_value(self)

    def max_value(self):
        """max_value(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_max_value(self)

    def mean(self):
        """mean(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_mean(self)

    def empty(self):
        """empty(self) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_empty(self)

    def is_identity(self, *args):
        """
        is_identity(self) -> bool
        is_identity(self, double tol) -> bool
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_is_identity(self, *args)

    def is_zero(self, *args):
        """
        is_zero(self) -> bool
        is_zero(self, double tol) -> bool
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_is_zero(self, *args)

    def is_finite(self):
        """is_finite(self) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_is_finite(self)

    def has_nans(self):
        """has_nans(self) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_has_nans(self)

    def assert_size(self, *args):
        """assert_size(self, unsigned int nr_rows, unsigned int nr_cols)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_assert_size(self, *args)

    def assert_finite(self):
        """assert_finite(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_assert_finite(self)

    def read_ascii(self, *args):
        """read_ascii(self, istream s) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_read_ascii(self, *args)

    def data_block(self, *args):
        """
        data_block(self) -> double
        data_block(self) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_data_block(self, *args)

    def as_matrix(self):
        """as_matrix(self) -> vnl_matrixD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_as_matrix(self)

    def begin(self, *args):
        """
        begin(self) -> double
        begin(self) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_begin(self, *args)

    def end(self, *args):
        """
        end(self) -> double
        end(self) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_end(self, *args)

    def operator_eq(self, *args):
        """operator_eq(self, vnl_matrix_fixedD_3_12 rhs) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_operator_eq(self, *args)

    def __eq__(self, *args):
        """__eq__(self, vnl_matrixD that) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(self, vnl_matrixD that) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12___ne__(self, *args)

    def _print(self, *args):
        """_print(self, ostream os)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12__print(self, *args)

    def add(*args):
        """
        add(double a, double b, double r)
        add(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_add(*args)

    add = staticmethod(add)
    def sub(*args):
        """
        sub(double a, double b, double r)
        sub(double a, double b, double r)
        sub(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_sub(*args)

    sub = staticmethod(sub)
    def mul(*args):
        """
        mul(double a, double b, double r)
        mul(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_mul(*args)

    mul = staticmethod(mul)
    def div(*args):
        """
        div(double a, double b, double r)
        div(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_div(*args)

    div = staticmethod(div)
    def equal(*args):
        """equal(double a, double b) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_equal(*args)

    equal = staticmethod(equal)
vnl_matrix_fixedD_3_12.rows = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_rows,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_columns,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.cols = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_cols,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.size = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_size,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.put = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_put,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.get = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_get,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.__call__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12___call__,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.fill = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_fill,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.fill_diagonal = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_fill_diagonal,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.copy_in = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_copy_in,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.set = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_set,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.copy_out = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_copy_out,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.inplace_transpose = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_inplace_transpose,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.__idiv__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12___idiv__,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.__iadd__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12___iadd__,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.__isub__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12___isub__,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.__neg__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12___neg__,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.__imul__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12___imul__,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.transpose = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_transpose,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.conjugate_transpose = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_conjugate_transpose,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.update = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_update,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.set_column = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_set_column,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.set_columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_set_columns,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.set_row = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_set_row,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.extract = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_extract,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.get_row = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_get_row,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.get_column = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_get_column,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.get_n_rows = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_get_n_rows,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.get_n_columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_get_n_columns,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.set_identity = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_set_identity,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.flipud = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_flipud,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.fliplr = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_fliplr,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.normalize_rows = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_normalize_rows,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.normalize_columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_normalize_columns,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.scale_row = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_scale_row,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.scale_column = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_scale_column,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.array_one_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_array_one_norm,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.array_two_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_array_two_norm,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.array_inf_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_array_inf_norm,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.absolute_value_sum = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_absolute_value_sum,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.absolute_value_max = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_absolute_value_max,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.operator_one_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_operator_one_norm,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.operator_inf_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_operator_inf_norm,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.frobenius_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_frobenius_norm,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.fro_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_fro_norm,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.rms = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_rms,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.min_value = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_min_value,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.max_value = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_max_value,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.mean = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_mean,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.empty = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_empty,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.is_identity = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_is_identity,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.is_zero = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_is_zero,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.is_finite = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_is_finite,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.has_nans = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_has_nans,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.assert_size = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_assert_size,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.assert_finite = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_assert_finite,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.read_ascii = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_read_ascii,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.data_block = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_data_block,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.as_matrix = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_as_matrix,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.begin = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_begin,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.end = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_end,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.operator_eq = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_operator_eq,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.__eq__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12___eq__,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12.__ne__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12___ne__,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12._print = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12__print,None,vnl_matrix_fixedD_3_12)
vnl_matrix_fixedD_3_12_swigregister = _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_swigregister
vnl_matrix_fixedD_3_12_swigregister(vnl_matrix_fixedD_3_12)

def vnl_matrix_fixedD_3_12_add(*args):
  """
    add(double a, double b, double r)
    vnl_matrix_fixedD_3_12_add(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_add(*args)

def vnl_matrix_fixedD_3_12_sub(*args):
  """
    sub(double a, double b, double r)
    sub(double a, double b, double r)
    vnl_matrix_fixedD_3_12_sub(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_sub(*args)

def vnl_matrix_fixedD_3_12_mul(*args):
  """
    mul(double a, double b, double r)
    vnl_matrix_fixedD_3_12_mul(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_mul(*args)

def vnl_matrix_fixedD_3_12_div(*args):
  """
    div(double a, double b, double r)
    vnl_matrix_fixedD_3_12_div(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_div(*args)

def vnl_matrix_fixedD_3_12_equal(*args):
  """vnl_matrix_fixedD_3_12_equal(double a, double b) -> bool"""
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_12_equal(*args)

class vnl_matrix_fixedD_3_3(object):
    """Proxy of C++ vnl_matrix_fixedD_3_3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> vnl_matrix_fixedD_3_3
        __init__(self, double value) -> vnl_matrix_fixedD_3_3
        __init__(self, double datablck) -> vnl_matrix_fixedD_3_3
        __init__(self, vnl_matrix_fixedD_3_3 rhs) -> vnl_matrix_fixedD_3_3
        __init__(self, vnl_matrixD rhs) -> vnl_matrix_fixedD_3_3
        """
        _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_swiginit(self,_vnl_matrix_fixedPython.new_vnl_matrix_fixedD_3_3(*args))
    __swig_destroy__ = _vnl_matrix_fixedPython.delete_vnl_matrix_fixedD_3_3
    def rows(self):
        """rows(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_rows(self)

    def columns(self):
        """columns(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_columns(self)

    def cols(self):
        """cols(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_cols(self)

    def size(self):
        """size(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_size(self)

    def put(self, *args):
        """put(self, unsigned int r, unsigned int c, double v)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_put(self, *args)

    def get(self, *args):
        """get(self, unsigned int r, unsigned int c) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_get(self, *args)

    def __call__(self, *args):
        """
        __call__(self, unsigned int r, unsigned int c) -> double
        __call__(self, unsigned int r, unsigned int c) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3___call__(self, *args)

    def fill(self, *args):
        """fill(self, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_fill(self, *args)

    def fill_diagonal(self, *args):
        """fill_diagonal(self, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_fill_diagonal(self, *args)

    def copy_in(self, *args):
        """copy_in(self, double p)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_copy_in(self, *args)

    def set(self, *args):
        """set(self, double d)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_set(self, *args)

    def copy_out(self, *args):
        """copy_out(self, double p)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_copy_out(self, *args)

    def inplace_transpose(self):
        """inplace_transpose(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_inplace_transpose(self)

    def __idiv__(self, *args):
        """__idiv__(self, double s) -> vnl_matrix_fixedD_3_3"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3___idiv__(self, *args)

    def __iadd__(self, *args):
        """
        __iadd__(self, double s) -> vnl_matrix_fixedD_3_3
        __iadd__(self, vnl_matrix_fixedD_3_3 m) -> vnl_matrix_fixedD_3_3
        __iadd__(self, vnl_matrixD m) -> vnl_matrix_fixedD_3_3
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3___iadd__(self, *args)

    def __isub__(self, *args):
        """
        __isub__(self, double s) -> vnl_matrix_fixedD_3_3
        __isub__(self, vnl_matrix_fixedD_3_3 m) -> vnl_matrix_fixedD_3_3
        __isub__(self, vnl_matrixD m) -> vnl_matrix_fixedD_3_3
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3___isub__(self, *args)

    def __neg__(self):
        """__neg__(self) -> vnl_matrix_fixedD_3_3"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3___neg__(self)

    def __imul__(self, *args):
        """
        __imul__(self, double s) -> vnl_matrix_fixedD_3_3
        __imul__(self, vnl_matrix_fixedD_3_3 s) -> vnl_matrix_fixedD_3_3
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3___imul__(self, *args)

    def transpose(self):
        """transpose(self) -> vnl_matrix_fixedD_3_3"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_transpose(self)

    def conjugate_transpose(self):
        """conjugate_transpose(self) -> vnl_matrix_fixedD_3_3"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_conjugate_transpose(self)

    def update(self, *args):
        """
        update(self, vnl_matrixD m, unsigned int top = 0, unsigned int left = 0) -> vnl_matrix_fixedD_3_3
        update(self, vnl_matrixD m, unsigned int top = 0) -> vnl_matrix_fixedD_3_3
        update(self, vnl_matrixD m) -> vnl_matrix_fixedD_3_3
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_update(self, *args)

    def set_column(self, *args):
        """
        set_column(self, unsigned int column_index, double v)
        set_column(self, unsigned int column_index, double v)
        set_column(self, unsigned int column_index, vnl_vectorD v)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_set_column(self, *args)

    def set_columns(self, *args):
        """set_columns(self, unsigned int starting_column, vnl_matrixD m)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_set_columns(self, *args)

    def set_row(self, *args):
        """
        set_row(self, unsigned int row_index, double v)
        set_row(self, unsigned int row_index, double v)
        set_row(self, unsigned int row_index, vnl_vectorD v)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_set_row(self, *args)

    def extract(self, *args):
        """
        extract(self, unsigned int rowz, unsigned int colz, unsigned int top = 0, 
            unsigned int left = 0) -> vnl_matrixD
        extract(self, unsigned int rowz, unsigned int colz, unsigned int top = 0) -> vnl_matrixD
        extract(self, unsigned int rowz, unsigned int colz) -> vnl_matrixD
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_extract(self, *args)

    def get_row(self, *args):
        """get_row(self, unsigned int row_index) -> vnl_vectorD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_get_row(self, *args)

    def get_column(self, *args):
        """get_column(self, unsigned int column_index) -> vnl_vectorD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_get_column(self, *args)

    def get_n_rows(self, *args):
        """get_n_rows(self, unsigned int row, unsigned int n) -> vnl_matrixD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_get_n_rows(self, *args)

    def get_n_columns(self, *args):
        """get_n_columns(self, unsigned int column, unsigned int n) -> vnl_matrixD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_get_n_columns(self, *args)

    def set_identity(self):
        """set_identity(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_set_identity(self)

    def flipud(self):
        """flipud(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_flipud(self)

    def fliplr(self):
        """fliplr(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_fliplr(self)

    def normalize_rows(self):
        """normalize_rows(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_normalize_rows(self)

    def normalize_columns(self):
        """normalize_columns(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_normalize_columns(self)

    def scale_row(self, *args):
        """scale_row(self, unsigned int row_index, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_scale_row(self, *args)

    def scale_column(self, *args):
        """scale_column(self, unsigned int column_index, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_scale_column(self, *args)

    def array_one_norm(self):
        """array_one_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_array_one_norm(self)

    def array_two_norm(self):
        """array_two_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_array_two_norm(self)

    def array_inf_norm(self):
        """array_inf_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_array_inf_norm(self)

    def absolute_value_sum(self):
        """absolute_value_sum(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_absolute_value_sum(self)

    def absolute_value_max(self):
        """absolute_value_max(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_absolute_value_max(self)

    def operator_one_norm(self):
        """operator_one_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_operator_one_norm(self)

    def operator_inf_norm(self):
        """operator_inf_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_operator_inf_norm(self)

    def frobenius_norm(self):
        """frobenius_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_frobenius_norm(self)

    def fro_norm(self):
        """fro_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_fro_norm(self)

    def rms(self):
        """rms(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_rms(self)

    def min_value(self):
        """min_value(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_min_value(self)

    def max_value(self):
        """max_value(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_max_value(self)

    def mean(self):
        """mean(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_mean(self)

    def empty(self):
        """empty(self) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_empty(self)

    def is_identity(self, *args):
        """
        is_identity(self) -> bool
        is_identity(self, double tol) -> bool
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_is_identity(self, *args)

    def is_zero(self, *args):
        """
        is_zero(self) -> bool
        is_zero(self, double tol) -> bool
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_is_zero(self, *args)

    def is_finite(self):
        """is_finite(self) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_is_finite(self)

    def has_nans(self):
        """has_nans(self) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_has_nans(self)

    def assert_size(self, *args):
        """assert_size(self, unsigned int nr_rows, unsigned int nr_cols)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_assert_size(self, *args)

    def assert_finite(self):
        """assert_finite(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_assert_finite(self)

    def read_ascii(self, *args):
        """read_ascii(self, istream s) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_read_ascii(self, *args)

    def data_block(self, *args):
        """
        data_block(self) -> double
        data_block(self) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_data_block(self, *args)

    def as_matrix(self):
        """as_matrix(self) -> vnl_matrixD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_as_matrix(self)

    def begin(self, *args):
        """
        begin(self) -> double
        begin(self) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_begin(self, *args)

    def end(self, *args):
        """
        end(self) -> double
        end(self) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_end(self, *args)

    def operator_eq(self, *args):
        """operator_eq(self, vnl_matrix_fixedD_3_3 rhs) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_operator_eq(self, *args)

    def __eq__(self, *args):
        """__eq__(self, vnl_matrixD that) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(self, vnl_matrixD that) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3___ne__(self, *args)

    def _print(self, *args):
        """_print(self, ostream os)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3__print(self, *args)

    def add(*args):
        """
        add(double a, double b, double r)
        add(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_add(*args)

    add = staticmethod(add)
    def sub(*args):
        """
        sub(double a, double b, double r)
        sub(double a, double b, double r)
        sub(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_sub(*args)

    sub = staticmethod(sub)
    def mul(*args):
        """
        mul(double a, double b, double r)
        mul(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_mul(*args)

    mul = staticmethod(mul)
    def div(*args):
        """
        div(double a, double b, double r)
        div(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_div(*args)

    div = staticmethod(div)
    def equal(*args):
        """equal(double a, double b) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_equal(*args)

    equal = staticmethod(equal)
vnl_matrix_fixedD_3_3.rows = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_rows,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_columns,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.cols = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_cols,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.size = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_size,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.put = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_put,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.get = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_get,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.__call__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3___call__,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.fill = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_fill,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.fill_diagonal = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_fill_diagonal,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.copy_in = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_copy_in,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.set = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_set,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.copy_out = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_copy_out,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.inplace_transpose = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_inplace_transpose,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.__idiv__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3___idiv__,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.__iadd__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3___iadd__,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.__isub__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3___isub__,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.__neg__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3___neg__,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.__imul__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3___imul__,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.transpose = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_transpose,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.conjugate_transpose = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_conjugate_transpose,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.update = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_update,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.set_column = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_set_column,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.set_columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_set_columns,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.set_row = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_set_row,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.extract = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_extract,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.get_row = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_get_row,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.get_column = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_get_column,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.get_n_rows = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_get_n_rows,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.get_n_columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_get_n_columns,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.set_identity = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_set_identity,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.flipud = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_flipud,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.fliplr = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_fliplr,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.normalize_rows = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_normalize_rows,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.normalize_columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_normalize_columns,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.scale_row = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_scale_row,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.scale_column = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_scale_column,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.array_one_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_array_one_norm,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.array_two_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_array_two_norm,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.array_inf_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_array_inf_norm,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.absolute_value_sum = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_absolute_value_sum,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.absolute_value_max = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_absolute_value_max,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.operator_one_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_operator_one_norm,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.operator_inf_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_operator_inf_norm,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.frobenius_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_frobenius_norm,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.fro_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_fro_norm,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.rms = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_rms,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.min_value = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_min_value,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.max_value = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_max_value,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.mean = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_mean,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.empty = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_empty,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.is_identity = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_is_identity,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.is_zero = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_is_zero,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.is_finite = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_is_finite,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.has_nans = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_has_nans,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.assert_size = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_assert_size,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.assert_finite = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_assert_finite,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.read_ascii = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_read_ascii,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.data_block = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_data_block,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.as_matrix = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_as_matrix,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.begin = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_begin,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.end = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_end,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.operator_eq = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_operator_eq,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.__eq__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3___eq__,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3.__ne__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3___ne__,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3._print = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3__print,None,vnl_matrix_fixedD_3_3)
vnl_matrix_fixedD_3_3_swigregister = _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_swigregister
vnl_matrix_fixedD_3_3_swigregister(vnl_matrix_fixedD_3_3)

def vnl_matrix_fixedD_3_3_add(*args):
  """
    add(double a, double b, double r)
    vnl_matrix_fixedD_3_3_add(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_add(*args)

def vnl_matrix_fixedD_3_3_sub(*args):
  """
    sub(double a, double b, double r)
    sub(double a, double b, double r)
    vnl_matrix_fixedD_3_3_sub(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_sub(*args)

def vnl_matrix_fixedD_3_3_mul(*args):
  """
    mul(double a, double b, double r)
    vnl_matrix_fixedD_3_3_mul(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_mul(*args)

def vnl_matrix_fixedD_3_3_div(*args):
  """
    div(double a, double b, double r)
    vnl_matrix_fixedD_3_3_div(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_div(*args)

def vnl_matrix_fixedD_3_3_equal(*args):
  """vnl_matrix_fixedD_3_3_equal(double a, double b) -> bool"""
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_3_equal(*args)

class vnl_matrix_fixedD_3_4(object):
    """Proxy of C++ vnl_matrix_fixedD_3_4 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> vnl_matrix_fixedD_3_4
        __init__(self, double value) -> vnl_matrix_fixedD_3_4
        __init__(self, double datablck) -> vnl_matrix_fixedD_3_4
        __init__(self, vnl_matrix_fixedD_3_4 rhs) -> vnl_matrix_fixedD_3_4
        __init__(self, vnl_matrixD rhs) -> vnl_matrix_fixedD_3_4
        """
        _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_swiginit(self,_vnl_matrix_fixedPython.new_vnl_matrix_fixedD_3_4(*args))
    __swig_destroy__ = _vnl_matrix_fixedPython.delete_vnl_matrix_fixedD_3_4
    def rows(self):
        """rows(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_rows(self)

    def columns(self):
        """columns(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_columns(self)

    def cols(self):
        """cols(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_cols(self)

    def size(self):
        """size(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_size(self)

    def put(self, *args):
        """put(self, unsigned int r, unsigned int c, double v)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_put(self, *args)

    def get(self, *args):
        """get(self, unsigned int r, unsigned int c) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_get(self, *args)

    def __call__(self, *args):
        """
        __call__(self, unsigned int r, unsigned int c) -> double
        __call__(self, unsigned int r, unsigned int c) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4___call__(self, *args)

    def fill(self, *args):
        """fill(self, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_fill(self, *args)

    def fill_diagonal(self, *args):
        """fill_diagonal(self, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_fill_diagonal(self, *args)

    def copy_in(self, *args):
        """copy_in(self, double p)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_copy_in(self, *args)

    def set(self, *args):
        """set(self, double d)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_set(self, *args)

    def copy_out(self, *args):
        """copy_out(self, double p)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_copy_out(self, *args)

    def inplace_transpose(self):
        """inplace_transpose(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_inplace_transpose(self)

    def __idiv__(self, *args):
        """__idiv__(self, double s) -> vnl_matrix_fixedD_3_4"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4___idiv__(self, *args)

    def __iadd__(self, *args):
        """
        __iadd__(self, double s) -> vnl_matrix_fixedD_3_4
        __iadd__(self, vnl_matrix_fixedD_3_4 m) -> vnl_matrix_fixedD_3_4
        __iadd__(self, vnl_matrixD m) -> vnl_matrix_fixedD_3_4
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4___iadd__(self, *args)

    def __isub__(self, *args):
        """
        __isub__(self, double s) -> vnl_matrix_fixedD_3_4
        __isub__(self, vnl_matrix_fixedD_3_4 m) -> vnl_matrix_fixedD_3_4
        __isub__(self, vnl_matrixD m) -> vnl_matrix_fixedD_3_4
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4___isub__(self, *args)

    def __neg__(self):
        """__neg__(self) -> vnl_matrix_fixedD_3_4"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4___neg__(self)

    def __imul__(self, *args):
        """
        __imul__(self, double s) -> vnl_matrix_fixedD_3_4
        __imul__(self, vnl_matrix_fixedD_4_4 s) -> vnl_matrix_fixedD_3_4
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4___imul__(self, *args)

    def transpose(self):
        """transpose(self) -> vnl_matrix_fixedD_4_3"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_transpose(self)

    def conjugate_transpose(self):
        """conjugate_transpose(self) -> vnl_matrix_fixedD_4_3"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_conjugate_transpose(self)

    def update(self, *args):
        """
        update(self, vnl_matrixD m, unsigned int top = 0, unsigned int left = 0) -> vnl_matrix_fixedD_3_4
        update(self, vnl_matrixD m, unsigned int top = 0) -> vnl_matrix_fixedD_3_4
        update(self, vnl_matrixD m) -> vnl_matrix_fixedD_3_4
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_update(self, *args)

    def set_column(self, *args):
        """
        set_column(self, unsigned int column_index, double v)
        set_column(self, unsigned int column_index, double v)
        set_column(self, unsigned int column_index, vnl_vectorD v)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_set_column(self, *args)

    def set_columns(self, *args):
        """set_columns(self, unsigned int starting_column, vnl_matrixD m)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_set_columns(self, *args)

    def set_row(self, *args):
        """
        set_row(self, unsigned int row_index, double v)
        set_row(self, unsigned int row_index, double v)
        set_row(self, unsigned int row_index, vnl_vectorD v)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_set_row(self, *args)

    def extract(self, *args):
        """
        extract(self, unsigned int rowz, unsigned int colz, unsigned int top = 0, 
            unsigned int left = 0) -> vnl_matrixD
        extract(self, unsigned int rowz, unsigned int colz, unsigned int top = 0) -> vnl_matrixD
        extract(self, unsigned int rowz, unsigned int colz) -> vnl_matrixD
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_extract(self, *args)

    def get_row(self, *args):
        """get_row(self, unsigned int row_index) -> vnl_vectorD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_get_row(self, *args)

    def get_column(self, *args):
        """get_column(self, unsigned int column_index) -> vnl_vectorD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_get_column(self, *args)

    def get_n_rows(self, *args):
        """get_n_rows(self, unsigned int row, unsigned int n) -> vnl_matrixD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_get_n_rows(self, *args)

    def get_n_columns(self, *args):
        """get_n_columns(self, unsigned int column, unsigned int n) -> vnl_matrixD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_get_n_columns(self, *args)

    def set_identity(self):
        """set_identity(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_set_identity(self)

    def flipud(self):
        """flipud(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_flipud(self)

    def fliplr(self):
        """fliplr(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_fliplr(self)

    def normalize_rows(self):
        """normalize_rows(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_normalize_rows(self)

    def normalize_columns(self):
        """normalize_columns(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_normalize_columns(self)

    def scale_row(self, *args):
        """scale_row(self, unsigned int row_index, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_scale_row(self, *args)

    def scale_column(self, *args):
        """scale_column(self, unsigned int column_index, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_scale_column(self, *args)

    def array_one_norm(self):
        """array_one_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_array_one_norm(self)

    def array_two_norm(self):
        """array_two_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_array_two_norm(self)

    def array_inf_norm(self):
        """array_inf_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_array_inf_norm(self)

    def absolute_value_sum(self):
        """absolute_value_sum(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_absolute_value_sum(self)

    def absolute_value_max(self):
        """absolute_value_max(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_absolute_value_max(self)

    def operator_one_norm(self):
        """operator_one_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_operator_one_norm(self)

    def operator_inf_norm(self):
        """operator_inf_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_operator_inf_norm(self)

    def frobenius_norm(self):
        """frobenius_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_frobenius_norm(self)

    def fro_norm(self):
        """fro_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_fro_norm(self)

    def rms(self):
        """rms(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_rms(self)

    def min_value(self):
        """min_value(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_min_value(self)

    def max_value(self):
        """max_value(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_max_value(self)

    def mean(self):
        """mean(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_mean(self)

    def empty(self):
        """empty(self) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_empty(self)

    def is_identity(self, *args):
        """
        is_identity(self) -> bool
        is_identity(self, double tol) -> bool
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_is_identity(self, *args)

    def is_zero(self, *args):
        """
        is_zero(self) -> bool
        is_zero(self, double tol) -> bool
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_is_zero(self, *args)

    def is_finite(self):
        """is_finite(self) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_is_finite(self)

    def has_nans(self):
        """has_nans(self) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_has_nans(self)

    def assert_size(self, *args):
        """assert_size(self, unsigned int nr_rows, unsigned int nr_cols)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_assert_size(self, *args)

    def assert_finite(self):
        """assert_finite(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_assert_finite(self)

    def read_ascii(self, *args):
        """read_ascii(self, istream s) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_read_ascii(self, *args)

    def data_block(self, *args):
        """
        data_block(self) -> double
        data_block(self) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_data_block(self, *args)

    def as_matrix(self):
        """as_matrix(self) -> vnl_matrixD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_as_matrix(self)

    def begin(self, *args):
        """
        begin(self) -> double
        begin(self) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_begin(self, *args)

    def end(self, *args):
        """
        end(self) -> double
        end(self) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_end(self, *args)

    def operator_eq(self, *args):
        """operator_eq(self, vnl_matrix_fixedD_3_4 rhs) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_operator_eq(self, *args)

    def __eq__(self, *args):
        """__eq__(self, vnl_matrixD that) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(self, vnl_matrixD that) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4___ne__(self, *args)

    def _print(self, *args):
        """_print(self, ostream os)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4__print(self, *args)

    def add(*args):
        """
        add(double a, double b, double r)
        add(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_add(*args)

    add = staticmethod(add)
    def sub(*args):
        """
        sub(double a, double b, double r)
        sub(double a, double b, double r)
        sub(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_sub(*args)

    sub = staticmethod(sub)
    def mul(*args):
        """
        mul(double a, double b, double r)
        mul(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_mul(*args)

    mul = staticmethod(mul)
    def div(*args):
        """
        div(double a, double b, double r)
        div(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_div(*args)

    div = staticmethod(div)
    def equal(*args):
        """equal(double a, double b) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_equal(*args)

    equal = staticmethod(equal)
vnl_matrix_fixedD_3_4.rows = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_rows,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_columns,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.cols = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_cols,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.size = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_size,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.put = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_put,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.get = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_get,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.__call__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4___call__,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.fill = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_fill,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.fill_diagonal = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_fill_diagonal,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.copy_in = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_copy_in,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.set = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_set,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.copy_out = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_copy_out,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.inplace_transpose = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_inplace_transpose,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.__idiv__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4___idiv__,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.__iadd__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4___iadd__,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.__isub__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4___isub__,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.__neg__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4___neg__,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.__imul__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4___imul__,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.transpose = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_transpose,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.conjugate_transpose = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_conjugate_transpose,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.update = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_update,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.set_column = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_set_column,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.set_columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_set_columns,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.set_row = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_set_row,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.extract = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_extract,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.get_row = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_get_row,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.get_column = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_get_column,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.get_n_rows = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_get_n_rows,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.get_n_columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_get_n_columns,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.set_identity = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_set_identity,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.flipud = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_flipud,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.fliplr = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_fliplr,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.normalize_rows = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_normalize_rows,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.normalize_columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_normalize_columns,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.scale_row = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_scale_row,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.scale_column = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_scale_column,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.array_one_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_array_one_norm,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.array_two_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_array_two_norm,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.array_inf_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_array_inf_norm,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.absolute_value_sum = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_absolute_value_sum,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.absolute_value_max = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_absolute_value_max,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.operator_one_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_operator_one_norm,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.operator_inf_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_operator_inf_norm,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.frobenius_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_frobenius_norm,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.fro_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_fro_norm,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.rms = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_rms,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.min_value = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_min_value,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.max_value = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_max_value,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.mean = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_mean,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.empty = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_empty,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.is_identity = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_is_identity,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.is_zero = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_is_zero,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.is_finite = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_is_finite,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.has_nans = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_has_nans,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.assert_size = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_assert_size,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.assert_finite = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_assert_finite,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.read_ascii = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_read_ascii,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.data_block = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_data_block,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.as_matrix = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_as_matrix,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.begin = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_begin,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.end = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_end,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.operator_eq = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_operator_eq,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.__eq__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4___eq__,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4.__ne__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4___ne__,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4._print = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4__print,None,vnl_matrix_fixedD_3_4)
vnl_matrix_fixedD_3_4_swigregister = _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_swigregister
vnl_matrix_fixedD_3_4_swigregister(vnl_matrix_fixedD_3_4)

def vnl_matrix_fixedD_3_4_add(*args):
  """
    add(double a, double b, double r)
    vnl_matrix_fixedD_3_4_add(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_add(*args)

def vnl_matrix_fixedD_3_4_sub(*args):
  """
    sub(double a, double b, double r)
    sub(double a, double b, double r)
    vnl_matrix_fixedD_3_4_sub(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_sub(*args)

def vnl_matrix_fixedD_3_4_mul(*args):
  """
    mul(double a, double b, double r)
    vnl_matrix_fixedD_3_4_mul(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_mul(*args)

def vnl_matrix_fixedD_3_4_div(*args):
  """
    div(double a, double b, double r)
    vnl_matrix_fixedD_3_4_div(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_div(*args)

def vnl_matrix_fixedD_3_4_equal(*args):
  """vnl_matrix_fixedD_3_4_equal(double a, double b) -> bool"""
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_3_4_equal(*args)

class vnl_matrix_fixedD_4_3(object):
    """Proxy of C++ vnl_matrix_fixedD_4_3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> vnl_matrix_fixedD_4_3
        __init__(self, double value) -> vnl_matrix_fixedD_4_3
        __init__(self, double datablck) -> vnl_matrix_fixedD_4_3
        __init__(self, vnl_matrix_fixedD_4_3 rhs) -> vnl_matrix_fixedD_4_3
        __init__(self, vnl_matrixD rhs) -> vnl_matrix_fixedD_4_3
        """
        _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_swiginit(self,_vnl_matrix_fixedPython.new_vnl_matrix_fixedD_4_3(*args))
    __swig_destroy__ = _vnl_matrix_fixedPython.delete_vnl_matrix_fixedD_4_3
    def rows(self):
        """rows(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_rows(self)

    def columns(self):
        """columns(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_columns(self)

    def cols(self):
        """cols(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_cols(self)

    def size(self):
        """size(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_size(self)

    def put(self, *args):
        """put(self, unsigned int r, unsigned int c, double v)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_put(self, *args)

    def get(self, *args):
        """get(self, unsigned int r, unsigned int c) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_get(self, *args)

    def __call__(self, *args):
        """
        __call__(self, unsigned int r, unsigned int c) -> double
        __call__(self, unsigned int r, unsigned int c) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3___call__(self, *args)

    def fill(self, *args):
        """fill(self, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_fill(self, *args)

    def fill_diagonal(self, *args):
        """fill_diagonal(self, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_fill_diagonal(self, *args)

    def copy_in(self, *args):
        """copy_in(self, double p)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_copy_in(self, *args)

    def set(self, *args):
        """set(self, double d)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_set(self, *args)

    def copy_out(self, *args):
        """copy_out(self, double p)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_copy_out(self, *args)

    def inplace_transpose(self):
        """inplace_transpose(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_inplace_transpose(self)

    def __idiv__(self, *args):
        """__idiv__(self, double s) -> vnl_matrix_fixedD_4_3"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3___idiv__(self, *args)

    def __iadd__(self, *args):
        """
        __iadd__(self, double s) -> vnl_matrix_fixedD_4_3
        __iadd__(self, vnl_matrix_fixedD_4_3 m) -> vnl_matrix_fixedD_4_3
        __iadd__(self, vnl_matrixD m) -> vnl_matrix_fixedD_4_3
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3___iadd__(self, *args)

    def __isub__(self, *args):
        """
        __isub__(self, double s) -> vnl_matrix_fixedD_4_3
        __isub__(self, vnl_matrix_fixedD_4_3 m) -> vnl_matrix_fixedD_4_3
        __isub__(self, vnl_matrixD m) -> vnl_matrix_fixedD_4_3
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3___isub__(self, *args)

    def __neg__(self):
        """__neg__(self) -> vnl_matrix_fixedD_4_3"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3___neg__(self)

    def __imul__(self, *args):
        """
        __imul__(self, double s) -> vnl_matrix_fixedD_4_3
        __imul__(self, vnl_matrix_fixedD_3_3 s) -> vnl_matrix_fixedD_4_3
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3___imul__(self, *args)

    def transpose(self):
        """transpose(self) -> vnl_matrix_fixedD_3_4"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_transpose(self)

    def conjugate_transpose(self):
        """conjugate_transpose(self) -> vnl_matrix_fixedD_3_4"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_conjugate_transpose(self)

    def update(self, *args):
        """
        update(self, vnl_matrixD m, unsigned int top = 0, unsigned int left = 0) -> vnl_matrix_fixedD_4_3
        update(self, vnl_matrixD m, unsigned int top = 0) -> vnl_matrix_fixedD_4_3
        update(self, vnl_matrixD m) -> vnl_matrix_fixedD_4_3
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_update(self, *args)

    def set_column(self, *args):
        """
        set_column(self, unsigned int column_index, double v)
        set_column(self, unsigned int column_index, double v)
        set_column(self, unsigned int column_index, vnl_vectorD v)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_set_column(self, *args)

    def set_columns(self, *args):
        """set_columns(self, unsigned int starting_column, vnl_matrixD m)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_set_columns(self, *args)

    def set_row(self, *args):
        """
        set_row(self, unsigned int row_index, double v)
        set_row(self, unsigned int row_index, double v)
        set_row(self, unsigned int row_index, vnl_vectorD v)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_set_row(self, *args)

    def extract(self, *args):
        """
        extract(self, unsigned int rowz, unsigned int colz, unsigned int top = 0, 
            unsigned int left = 0) -> vnl_matrixD
        extract(self, unsigned int rowz, unsigned int colz, unsigned int top = 0) -> vnl_matrixD
        extract(self, unsigned int rowz, unsigned int colz) -> vnl_matrixD
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_extract(self, *args)

    def get_row(self, *args):
        """get_row(self, unsigned int row_index) -> vnl_vectorD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_get_row(self, *args)

    def get_column(self, *args):
        """get_column(self, unsigned int column_index) -> vnl_vectorD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_get_column(self, *args)

    def get_n_rows(self, *args):
        """get_n_rows(self, unsigned int row, unsigned int n) -> vnl_matrixD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_get_n_rows(self, *args)

    def get_n_columns(self, *args):
        """get_n_columns(self, unsigned int column, unsigned int n) -> vnl_matrixD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_get_n_columns(self, *args)

    def set_identity(self):
        """set_identity(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_set_identity(self)

    def flipud(self):
        """flipud(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_flipud(self)

    def fliplr(self):
        """fliplr(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_fliplr(self)

    def normalize_rows(self):
        """normalize_rows(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_normalize_rows(self)

    def normalize_columns(self):
        """normalize_columns(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_normalize_columns(self)

    def scale_row(self, *args):
        """scale_row(self, unsigned int row_index, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_scale_row(self, *args)

    def scale_column(self, *args):
        """scale_column(self, unsigned int column_index, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_scale_column(self, *args)

    def array_one_norm(self):
        """array_one_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_array_one_norm(self)

    def array_two_norm(self):
        """array_two_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_array_two_norm(self)

    def array_inf_norm(self):
        """array_inf_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_array_inf_norm(self)

    def absolute_value_sum(self):
        """absolute_value_sum(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_absolute_value_sum(self)

    def absolute_value_max(self):
        """absolute_value_max(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_absolute_value_max(self)

    def operator_one_norm(self):
        """operator_one_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_operator_one_norm(self)

    def operator_inf_norm(self):
        """operator_inf_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_operator_inf_norm(self)

    def frobenius_norm(self):
        """frobenius_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_frobenius_norm(self)

    def fro_norm(self):
        """fro_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_fro_norm(self)

    def rms(self):
        """rms(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_rms(self)

    def min_value(self):
        """min_value(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_min_value(self)

    def max_value(self):
        """max_value(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_max_value(self)

    def mean(self):
        """mean(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_mean(self)

    def empty(self):
        """empty(self) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_empty(self)

    def is_identity(self, *args):
        """
        is_identity(self) -> bool
        is_identity(self, double tol) -> bool
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_is_identity(self, *args)

    def is_zero(self, *args):
        """
        is_zero(self) -> bool
        is_zero(self, double tol) -> bool
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_is_zero(self, *args)

    def is_finite(self):
        """is_finite(self) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_is_finite(self)

    def has_nans(self):
        """has_nans(self) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_has_nans(self)

    def assert_size(self, *args):
        """assert_size(self, unsigned int nr_rows, unsigned int nr_cols)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_assert_size(self, *args)

    def assert_finite(self):
        """assert_finite(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_assert_finite(self)

    def read_ascii(self, *args):
        """read_ascii(self, istream s) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_read_ascii(self, *args)

    def data_block(self, *args):
        """
        data_block(self) -> double
        data_block(self) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_data_block(self, *args)

    def as_matrix(self):
        """as_matrix(self) -> vnl_matrixD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_as_matrix(self)

    def begin(self, *args):
        """
        begin(self) -> double
        begin(self) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_begin(self, *args)

    def end(self, *args):
        """
        end(self) -> double
        end(self) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_end(self, *args)

    def operator_eq(self, *args):
        """operator_eq(self, vnl_matrix_fixedD_4_3 rhs) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_operator_eq(self, *args)

    def __eq__(self, *args):
        """__eq__(self, vnl_matrixD that) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(self, vnl_matrixD that) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3___ne__(self, *args)

    def _print(self, *args):
        """_print(self, ostream os)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3__print(self, *args)

    def add(*args):
        """
        add(double a, double b, double r)
        add(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_add(*args)

    add = staticmethod(add)
    def sub(*args):
        """
        sub(double a, double b, double r)
        sub(double a, double b, double r)
        sub(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_sub(*args)

    sub = staticmethod(sub)
    def mul(*args):
        """
        mul(double a, double b, double r)
        mul(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_mul(*args)

    mul = staticmethod(mul)
    def div(*args):
        """
        div(double a, double b, double r)
        div(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_div(*args)

    div = staticmethod(div)
    def equal(*args):
        """equal(double a, double b) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_equal(*args)

    equal = staticmethod(equal)
vnl_matrix_fixedD_4_3.rows = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_rows,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_columns,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.cols = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_cols,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.size = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_size,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.put = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_put,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.get = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_get,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.__call__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3___call__,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.fill = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_fill,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.fill_diagonal = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_fill_diagonal,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.copy_in = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_copy_in,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.set = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_set,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.copy_out = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_copy_out,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.inplace_transpose = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_inplace_transpose,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.__idiv__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3___idiv__,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.__iadd__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3___iadd__,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.__isub__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3___isub__,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.__neg__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3___neg__,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.__imul__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3___imul__,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.transpose = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_transpose,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.conjugate_transpose = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_conjugate_transpose,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.update = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_update,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.set_column = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_set_column,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.set_columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_set_columns,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.set_row = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_set_row,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.extract = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_extract,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.get_row = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_get_row,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.get_column = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_get_column,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.get_n_rows = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_get_n_rows,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.get_n_columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_get_n_columns,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.set_identity = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_set_identity,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.flipud = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_flipud,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.fliplr = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_fliplr,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.normalize_rows = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_normalize_rows,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.normalize_columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_normalize_columns,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.scale_row = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_scale_row,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.scale_column = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_scale_column,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.array_one_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_array_one_norm,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.array_two_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_array_two_norm,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.array_inf_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_array_inf_norm,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.absolute_value_sum = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_absolute_value_sum,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.absolute_value_max = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_absolute_value_max,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.operator_one_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_operator_one_norm,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.operator_inf_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_operator_inf_norm,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.frobenius_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_frobenius_norm,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.fro_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_fro_norm,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.rms = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_rms,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.min_value = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_min_value,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.max_value = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_max_value,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.mean = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_mean,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.empty = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_empty,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.is_identity = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_is_identity,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.is_zero = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_is_zero,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.is_finite = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_is_finite,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.has_nans = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_has_nans,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.assert_size = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_assert_size,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.assert_finite = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_assert_finite,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.read_ascii = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_read_ascii,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.data_block = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_data_block,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.as_matrix = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_as_matrix,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.begin = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_begin,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.end = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_end,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.operator_eq = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_operator_eq,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.__eq__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3___eq__,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3.__ne__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3___ne__,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3._print = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3__print,None,vnl_matrix_fixedD_4_3)
vnl_matrix_fixedD_4_3_swigregister = _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_swigregister
vnl_matrix_fixedD_4_3_swigregister(vnl_matrix_fixedD_4_3)

def vnl_matrix_fixedD_4_3_add(*args):
  """
    add(double a, double b, double r)
    vnl_matrix_fixedD_4_3_add(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_add(*args)

def vnl_matrix_fixedD_4_3_sub(*args):
  """
    sub(double a, double b, double r)
    sub(double a, double b, double r)
    vnl_matrix_fixedD_4_3_sub(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_sub(*args)

def vnl_matrix_fixedD_4_3_mul(*args):
  """
    mul(double a, double b, double r)
    vnl_matrix_fixedD_4_3_mul(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_mul(*args)

def vnl_matrix_fixedD_4_3_div(*args):
  """
    div(double a, double b, double r)
    vnl_matrix_fixedD_4_3_div(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_div(*args)

def vnl_matrix_fixedD_4_3_equal(*args):
  """vnl_matrix_fixedD_4_3_equal(double a, double b) -> bool"""
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_3_equal(*args)

class vnl_matrix_fixedD_4_4(object):
    """Proxy of C++ vnl_matrix_fixedD_4_4 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> vnl_matrix_fixedD_4_4
        __init__(self, double value) -> vnl_matrix_fixedD_4_4
        __init__(self, double datablck) -> vnl_matrix_fixedD_4_4
        __init__(self, vnl_matrix_fixedD_4_4 rhs) -> vnl_matrix_fixedD_4_4
        __init__(self, vnl_matrixD rhs) -> vnl_matrix_fixedD_4_4
        """
        _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_swiginit(self,_vnl_matrix_fixedPython.new_vnl_matrix_fixedD_4_4(*args))
    __swig_destroy__ = _vnl_matrix_fixedPython.delete_vnl_matrix_fixedD_4_4
    def rows(self):
        """rows(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_rows(self)

    def columns(self):
        """columns(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_columns(self)

    def cols(self):
        """cols(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_cols(self)

    def size(self):
        """size(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_size(self)

    def put(self, *args):
        """put(self, unsigned int r, unsigned int c, double v)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_put(self, *args)

    def get(self, *args):
        """get(self, unsigned int r, unsigned int c) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_get(self, *args)

    def __call__(self, *args):
        """
        __call__(self, unsigned int r, unsigned int c) -> double
        __call__(self, unsigned int r, unsigned int c) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4___call__(self, *args)

    def fill(self, *args):
        """fill(self, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_fill(self, *args)

    def fill_diagonal(self, *args):
        """fill_diagonal(self, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_fill_diagonal(self, *args)

    def copy_in(self, *args):
        """copy_in(self, double p)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_copy_in(self, *args)

    def set(self, *args):
        """set(self, double d)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_set(self, *args)

    def copy_out(self, *args):
        """copy_out(self, double p)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_copy_out(self, *args)

    def inplace_transpose(self):
        """inplace_transpose(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_inplace_transpose(self)

    def __idiv__(self, *args):
        """__idiv__(self, double s) -> vnl_matrix_fixedD_4_4"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4___idiv__(self, *args)

    def __iadd__(self, *args):
        """
        __iadd__(self, double s) -> vnl_matrix_fixedD_4_4
        __iadd__(self, vnl_matrix_fixedD_4_4 m) -> vnl_matrix_fixedD_4_4
        __iadd__(self, vnl_matrixD m) -> vnl_matrix_fixedD_4_4
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4___iadd__(self, *args)

    def __isub__(self, *args):
        """
        __isub__(self, double s) -> vnl_matrix_fixedD_4_4
        __isub__(self, vnl_matrix_fixedD_4_4 m) -> vnl_matrix_fixedD_4_4
        __isub__(self, vnl_matrixD m) -> vnl_matrix_fixedD_4_4
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4___isub__(self, *args)

    def __neg__(self):
        """__neg__(self) -> vnl_matrix_fixedD_4_4"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4___neg__(self)

    def __imul__(self, *args):
        """
        __imul__(self, double s) -> vnl_matrix_fixedD_4_4
        __imul__(self, vnl_matrix_fixedD_4_4 s) -> vnl_matrix_fixedD_4_4
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4___imul__(self, *args)

    def transpose(self):
        """transpose(self) -> vnl_matrix_fixedD_4_4"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_transpose(self)

    def conjugate_transpose(self):
        """conjugate_transpose(self) -> vnl_matrix_fixedD_4_4"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_conjugate_transpose(self)

    def update(self, *args):
        """
        update(self, vnl_matrixD m, unsigned int top = 0, unsigned int left = 0) -> vnl_matrix_fixedD_4_4
        update(self, vnl_matrixD m, unsigned int top = 0) -> vnl_matrix_fixedD_4_4
        update(self, vnl_matrixD m) -> vnl_matrix_fixedD_4_4
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_update(self, *args)

    def set_column(self, *args):
        """
        set_column(self, unsigned int column_index, double v)
        set_column(self, unsigned int column_index, double v)
        set_column(self, unsigned int column_index, vnl_vectorD v)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_set_column(self, *args)

    def set_columns(self, *args):
        """set_columns(self, unsigned int starting_column, vnl_matrixD m)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_set_columns(self, *args)

    def set_row(self, *args):
        """
        set_row(self, unsigned int row_index, double v)
        set_row(self, unsigned int row_index, double v)
        set_row(self, unsigned int row_index, vnl_vectorD v)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_set_row(self, *args)

    def extract(self, *args):
        """
        extract(self, unsigned int rowz, unsigned int colz, unsigned int top = 0, 
            unsigned int left = 0) -> vnl_matrixD
        extract(self, unsigned int rowz, unsigned int colz, unsigned int top = 0) -> vnl_matrixD
        extract(self, unsigned int rowz, unsigned int colz) -> vnl_matrixD
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_extract(self, *args)

    def get_row(self, *args):
        """get_row(self, unsigned int row_index) -> vnl_vectorD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_get_row(self, *args)

    def get_column(self, *args):
        """get_column(self, unsigned int column_index) -> vnl_vectorD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_get_column(self, *args)

    def get_n_rows(self, *args):
        """get_n_rows(self, unsigned int row, unsigned int n) -> vnl_matrixD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_get_n_rows(self, *args)

    def get_n_columns(self, *args):
        """get_n_columns(self, unsigned int column, unsigned int n) -> vnl_matrixD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_get_n_columns(self, *args)

    def set_identity(self):
        """set_identity(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_set_identity(self)

    def flipud(self):
        """flipud(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_flipud(self)

    def fliplr(self):
        """fliplr(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_fliplr(self)

    def normalize_rows(self):
        """normalize_rows(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_normalize_rows(self)

    def normalize_columns(self):
        """normalize_columns(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_normalize_columns(self)

    def scale_row(self, *args):
        """scale_row(self, unsigned int row_index, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_scale_row(self, *args)

    def scale_column(self, *args):
        """scale_column(self, unsigned int column_index, double value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_scale_column(self, *args)

    def array_one_norm(self):
        """array_one_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_array_one_norm(self)

    def array_two_norm(self):
        """array_two_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_array_two_norm(self)

    def array_inf_norm(self):
        """array_inf_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_array_inf_norm(self)

    def absolute_value_sum(self):
        """absolute_value_sum(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_absolute_value_sum(self)

    def absolute_value_max(self):
        """absolute_value_max(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_absolute_value_max(self)

    def operator_one_norm(self):
        """operator_one_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_operator_one_norm(self)

    def operator_inf_norm(self):
        """operator_inf_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_operator_inf_norm(self)

    def frobenius_norm(self):
        """frobenius_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_frobenius_norm(self)

    def fro_norm(self):
        """fro_norm(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_fro_norm(self)

    def rms(self):
        """rms(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_rms(self)

    def min_value(self):
        """min_value(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_min_value(self)

    def max_value(self):
        """max_value(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_max_value(self)

    def mean(self):
        """mean(self) -> double"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_mean(self)

    def empty(self):
        """empty(self) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_empty(self)

    def is_identity(self, *args):
        """
        is_identity(self) -> bool
        is_identity(self, double tol) -> bool
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_is_identity(self, *args)

    def is_zero(self, *args):
        """
        is_zero(self) -> bool
        is_zero(self, double tol) -> bool
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_is_zero(self, *args)

    def is_finite(self):
        """is_finite(self) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_is_finite(self)

    def has_nans(self):
        """has_nans(self) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_has_nans(self)

    def assert_size(self, *args):
        """assert_size(self, unsigned int nr_rows, unsigned int nr_cols)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_assert_size(self, *args)

    def assert_finite(self):
        """assert_finite(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_assert_finite(self)

    def read_ascii(self, *args):
        """read_ascii(self, istream s) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_read_ascii(self, *args)

    def data_block(self, *args):
        """
        data_block(self) -> double
        data_block(self) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_data_block(self, *args)

    def as_matrix(self):
        """as_matrix(self) -> vnl_matrixD"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_as_matrix(self)

    def begin(self, *args):
        """
        begin(self) -> double
        begin(self) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_begin(self, *args)

    def end(self, *args):
        """
        end(self) -> double
        end(self) -> double
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_end(self, *args)

    def operator_eq(self, *args):
        """operator_eq(self, vnl_matrix_fixedD_4_4 rhs) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_operator_eq(self, *args)

    def __eq__(self, *args):
        """__eq__(self, vnl_matrixD that) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(self, vnl_matrixD that) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4___ne__(self, *args)

    def _print(self, *args):
        """_print(self, ostream os)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4__print(self, *args)

    def add(*args):
        """
        add(double a, double b, double r)
        add(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_add(*args)

    add = staticmethod(add)
    def sub(*args):
        """
        sub(double a, double b, double r)
        sub(double a, double b, double r)
        sub(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_sub(*args)

    sub = staticmethod(sub)
    def mul(*args):
        """
        mul(double a, double b, double r)
        mul(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_mul(*args)

    mul = staticmethod(mul)
    def div(*args):
        """
        div(double a, double b, double r)
        div(double a, double b, double r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_div(*args)

    div = staticmethod(div)
    def equal(*args):
        """equal(double a, double b) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_equal(*args)

    equal = staticmethod(equal)
vnl_matrix_fixedD_4_4.rows = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_rows,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_columns,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.cols = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_cols,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.size = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_size,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.put = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_put,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.get = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_get,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.__call__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4___call__,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.fill = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_fill,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.fill_diagonal = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_fill_diagonal,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.copy_in = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_copy_in,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.set = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_set,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.copy_out = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_copy_out,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.inplace_transpose = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_inplace_transpose,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.__idiv__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4___idiv__,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.__iadd__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4___iadd__,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.__isub__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4___isub__,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.__neg__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4___neg__,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.__imul__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4___imul__,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.transpose = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_transpose,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.conjugate_transpose = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_conjugate_transpose,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.update = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_update,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.set_column = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_set_column,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.set_columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_set_columns,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.set_row = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_set_row,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.extract = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_extract,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.get_row = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_get_row,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.get_column = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_get_column,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.get_n_rows = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_get_n_rows,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.get_n_columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_get_n_columns,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.set_identity = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_set_identity,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.flipud = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_flipud,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.fliplr = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_fliplr,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.normalize_rows = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_normalize_rows,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.normalize_columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_normalize_columns,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.scale_row = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_scale_row,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.scale_column = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_scale_column,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.array_one_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_array_one_norm,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.array_two_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_array_two_norm,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.array_inf_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_array_inf_norm,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.absolute_value_sum = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_absolute_value_sum,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.absolute_value_max = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_absolute_value_max,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.operator_one_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_operator_one_norm,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.operator_inf_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_operator_inf_norm,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.frobenius_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_frobenius_norm,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.fro_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_fro_norm,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.rms = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_rms,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.min_value = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_min_value,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.max_value = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_max_value,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.mean = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_mean,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.empty = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_empty,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.is_identity = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_is_identity,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.is_zero = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_is_zero,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.is_finite = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_is_finite,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.has_nans = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_has_nans,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.assert_size = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_assert_size,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.assert_finite = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_assert_finite,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.read_ascii = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_read_ascii,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.data_block = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_data_block,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.as_matrix = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_as_matrix,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.begin = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_begin,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.end = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_end,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.operator_eq = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_operator_eq,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.__eq__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4___eq__,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4.__ne__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4___ne__,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4._print = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4__print,None,vnl_matrix_fixedD_4_4)
vnl_matrix_fixedD_4_4_swigregister = _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_swigregister
vnl_matrix_fixedD_4_4_swigregister(vnl_matrix_fixedD_4_4)

def vnl_matrix_fixedD_4_4_add(*args):
  """
    add(double a, double b, double r)
    vnl_matrix_fixedD_4_4_add(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_add(*args)

def vnl_matrix_fixedD_4_4_sub(*args):
  """
    sub(double a, double b, double r)
    sub(double a, double b, double r)
    vnl_matrix_fixedD_4_4_sub(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_sub(*args)

def vnl_matrix_fixedD_4_4_mul(*args):
  """
    mul(double a, double b, double r)
    vnl_matrix_fixedD_4_4_mul(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_mul(*args)

def vnl_matrix_fixedD_4_4_div(*args):
  """
    div(double a, double b, double r)
    vnl_matrix_fixedD_4_4_div(double a, double b, double r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_div(*args)

def vnl_matrix_fixedD_4_4_equal(*args):
  """vnl_matrix_fixedD_4_4_equal(double a, double b) -> bool"""
  return _vnl_matrix_fixedPython.vnl_matrix_fixedD_4_4_equal(*args)

class vnl_matrix_fixedF_3_3(object):
    """Proxy of C++ vnl_matrix_fixedF_3_3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> vnl_matrix_fixedF_3_3
        __init__(self, float value) -> vnl_matrix_fixedF_3_3
        __init__(self, float datablck) -> vnl_matrix_fixedF_3_3
        __init__(self, vnl_matrix_fixedF_3_3 rhs) -> vnl_matrix_fixedF_3_3
        __init__(self, vnl_matrixF rhs) -> vnl_matrix_fixedF_3_3
        """
        _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_swiginit(self,_vnl_matrix_fixedPython.new_vnl_matrix_fixedF_3_3(*args))
    __swig_destroy__ = _vnl_matrix_fixedPython.delete_vnl_matrix_fixedF_3_3
    def rows(self):
        """rows(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_rows(self)

    def columns(self):
        """columns(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_columns(self)

    def cols(self):
        """cols(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_cols(self)

    def size(self):
        """size(self) -> unsigned int"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_size(self)

    def put(self, *args):
        """put(self, unsigned int r, unsigned int c, float v)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_put(self, *args)

    def get(self, *args):
        """get(self, unsigned int r, unsigned int c) -> float"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_get(self, *args)

    def __call__(self, *args):
        """
        __call__(self, unsigned int r, unsigned int c) -> float
        __call__(self, unsigned int r, unsigned int c) -> float
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3___call__(self, *args)

    def fill(self, *args):
        """fill(self, float value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_fill(self, *args)

    def fill_diagonal(self, *args):
        """fill_diagonal(self, float value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_fill_diagonal(self, *args)

    def copy_in(self, *args):
        """copy_in(self, float p)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_copy_in(self, *args)

    def set(self, *args):
        """set(self, float d)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_set(self, *args)

    def copy_out(self, *args):
        """copy_out(self, float p)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_copy_out(self, *args)

    def inplace_transpose(self):
        """inplace_transpose(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_inplace_transpose(self)

    def __idiv__(self, *args):
        """__idiv__(self, float s) -> vnl_matrix_fixedF_3_3"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3___idiv__(self, *args)

    def __iadd__(self, *args):
        """
        __iadd__(self, float s) -> vnl_matrix_fixedF_3_3
        __iadd__(self, vnl_matrix_fixedF_3_3 m) -> vnl_matrix_fixedF_3_3
        __iadd__(self, vnl_matrixF m) -> vnl_matrix_fixedF_3_3
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3___iadd__(self, *args)

    def __isub__(self, *args):
        """
        __isub__(self, float s) -> vnl_matrix_fixedF_3_3
        __isub__(self, vnl_matrix_fixedF_3_3 m) -> vnl_matrix_fixedF_3_3
        __isub__(self, vnl_matrixF m) -> vnl_matrix_fixedF_3_3
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3___isub__(self, *args)

    def __neg__(self):
        """__neg__(self) -> vnl_matrix_fixedF_3_3"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3___neg__(self)

    def __imul__(self, *args):
        """
        __imul__(self, float s) -> vnl_matrix_fixedF_3_3
        __imul__(self, vnl_matrix_fixedF_3_3 s) -> vnl_matrix_fixedF_3_3
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3___imul__(self, *args)

    def transpose(self):
        """transpose(self) -> vnl_matrix_fixedF_3_3"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_transpose(self)

    def conjugate_transpose(self):
        """conjugate_transpose(self) -> vnl_matrix_fixedF_3_3"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_conjugate_transpose(self)

    def update(self, *args):
        """
        update(self, vnl_matrixF m, unsigned int top = 0, unsigned int left = 0) -> vnl_matrix_fixedF_3_3
        update(self, vnl_matrixF m, unsigned int top = 0) -> vnl_matrix_fixedF_3_3
        update(self, vnl_matrixF m) -> vnl_matrix_fixedF_3_3
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_update(self, *args)

    def set_column(self, *args):
        """
        set_column(self, unsigned int column_index, float v)
        set_column(self, unsigned int column_index, float v)
        set_column(self, unsigned int column_index, vnl_vectorF v)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_set_column(self, *args)

    def set_columns(self, *args):
        """set_columns(self, unsigned int starting_column, vnl_matrixF m)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_set_columns(self, *args)

    def set_row(self, *args):
        """
        set_row(self, unsigned int row_index, float v)
        set_row(self, unsigned int row_index, float v)
        set_row(self, unsigned int row_index, vnl_vectorF v)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_set_row(self, *args)

    def extract(self, *args):
        """
        extract(self, unsigned int rowz, unsigned int colz, unsigned int top = 0, 
            unsigned int left = 0) -> vnl_matrixF
        extract(self, unsigned int rowz, unsigned int colz, unsigned int top = 0) -> vnl_matrixF
        extract(self, unsigned int rowz, unsigned int colz) -> vnl_matrixF
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_extract(self, *args)

    def get_row(self, *args):
        """get_row(self, unsigned int row_index) -> vnl_vectorF"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_get_row(self, *args)

    def get_column(self, *args):
        """get_column(self, unsigned int column_index) -> vnl_vectorF"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_get_column(self, *args)

    def get_n_rows(self, *args):
        """get_n_rows(self, unsigned int row, unsigned int n) -> vnl_matrixF"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_get_n_rows(self, *args)

    def get_n_columns(self, *args):
        """get_n_columns(self, unsigned int column, unsigned int n) -> vnl_matrixF"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_get_n_columns(self, *args)

    def set_identity(self):
        """set_identity(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_set_identity(self)

    def flipud(self):
        """flipud(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_flipud(self)

    def fliplr(self):
        """fliplr(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_fliplr(self)

    def normalize_rows(self):
        """normalize_rows(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_normalize_rows(self)

    def normalize_columns(self):
        """normalize_columns(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_normalize_columns(self)

    def scale_row(self, *args):
        """scale_row(self, unsigned int row_index, float value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_scale_row(self, *args)

    def scale_column(self, *args):
        """scale_column(self, unsigned int column_index, float value)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_scale_column(self, *args)

    def array_one_norm(self):
        """array_one_norm(self) -> float"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_array_one_norm(self)

    def array_two_norm(self):
        """array_two_norm(self) -> float"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_array_two_norm(self)

    def array_inf_norm(self):
        """array_inf_norm(self) -> float"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_array_inf_norm(self)

    def absolute_value_sum(self):
        """absolute_value_sum(self) -> float"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_absolute_value_sum(self)

    def absolute_value_max(self):
        """absolute_value_max(self) -> float"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_absolute_value_max(self)

    def operator_one_norm(self):
        """operator_one_norm(self) -> float"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_operator_one_norm(self)

    def operator_inf_norm(self):
        """operator_inf_norm(self) -> float"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_operator_inf_norm(self)

    def frobenius_norm(self):
        """frobenius_norm(self) -> float"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_frobenius_norm(self)

    def fro_norm(self):
        """fro_norm(self) -> float"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_fro_norm(self)

    def rms(self):
        """rms(self) -> float"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_rms(self)

    def min_value(self):
        """min_value(self) -> float"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_min_value(self)

    def max_value(self):
        """max_value(self) -> float"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_max_value(self)

    def mean(self):
        """mean(self) -> float"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_mean(self)

    def empty(self):
        """empty(self) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_empty(self)

    def is_identity(self, *args):
        """
        is_identity(self) -> bool
        is_identity(self, double tol) -> bool
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_is_identity(self, *args)

    def is_zero(self, *args):
        """
        is_zero(self) -> bool
        is_zero(self, double tol) -> bool
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_is_zero(self, *args)

    def is_finite(self):
        """is_finite(self) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_is_finite(self)

    def has_nans(self):
        """has_nans(self) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_has_nans(self)

    def assert_size(self, *args):
        """assert_size(self, unsigned int nr_rows, unsigned int nr_cols)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_assert_size(self, *args)

    def assert_finite(self):
        """assert_finite(self)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_assert_finite(self)

    def read_ascii(self, *args):
        """read_ascii(self, istream s) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_read_ascii(self, *args)

    def data_block(self, *args):
        """
        data_block(self) -> float
        data_block(self) -> float
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_data_block(self, *args)

    def as_matrix(self):
        """as_matrix(self) -> vnl_matrixF"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_as_matrix(self)

    def begin(self, *args):
        """
        begin(self) -> float
        begin(self) -> float
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_begin(self, *args)

    def end(self, *args):
        """
        end(self) -> float
        end(self) -> float
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_end(self, *args)

    def operator_eq(self, *args):
        """operator_eq(self, vnl_matrix_fixedF_3_3 rhs) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_operator_eq(self, *args)

    def __eq__(self, *args):
        """__eq__(self, vnl_matrixF that) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(self, vnl_matrixF that) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3___ne__(self, *args)

    def _print(self, *args):
        """_print(self, ostream os)"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3__print(self, *args)

    def add(*args):
        """
        add(float a, float b, float r)
        add(float a, float b, float r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_add(*args)

    add = staticmethod(add)
    def sub(*args):
        """
        sub(float a, float b, float r)
        sub(float a, float b, float r)
        sub(float a, float b, float r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_sub(*args)

    sub = staticmethod(sub)
    def mul(*args):
        """
        mul(float a, float b, float r)
        mul(float a, float b, float r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_mul(*args)

    mul = staticmethod(mul)
    def div(*args):
        """
        div(float a, float b, float r)
        div(float a, float b, float r)
        """
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_div(*args)

    div = staticmethod(div)
    def equal(*args):
        """equal(float a, float b) -> bool"""
        return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_equal(*args)

    equal = staticmethod(equal)
vnl_matrix_fixedF_3_3.rows = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_rows,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_columns,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.cols = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_cols,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.size = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_size,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.put = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_put,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.get = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_get,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.__call__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3___call__,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.fill = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_fill,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.fill_diagonal = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_fill_diagonal,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.copy_in = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_copy_in,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.set = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_set,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.copy_out = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_copy_out,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.inplace_transpose = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_inplace_transpose,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.__idiv__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3___idiv__,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.__iadd__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3___iadd__,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.__isub__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3___isub__,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.__neg__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3___neg__,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.__imul__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3___imul__,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.transpose = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_transpose,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.conjugate_transpose = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_conjugate_transpose,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.update = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_update,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.set_column = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_set_column,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.set_columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_set_columns,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.set_row = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_set_row,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.extract = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_extract,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.get_row = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_get_row,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.get_column = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_get_column,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.get_n_rows = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_get_n_rows,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.get_n_columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_get_n_columns,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.set_identity = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_set_identity,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.flipud = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_flipud,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.fliplr = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_fliplr,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.normalize_rows = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_normalize_rows,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.normalize_columns = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_normalize_columns,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.scale_row = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_scale_row,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.scale_column = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_scale_column,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.array_one_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_array_one_norm,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.array_two_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_array_two_norm,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.array_inf_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_array_inf_norm,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.absolute_value_sum = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_absolute_value_sum,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.absolute_value_max = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_absolute_value_max,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.operator_one_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_operator_one_norm,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.operator_inf_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_operator_inf_norm,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.frobenius_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_frobenius_norm,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.fro_norm = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_fro_norm,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.rms = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_rms,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.min_value = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_min_value,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.max_value = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_max_value,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.mean = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_mean,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.empty = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_empty,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.is_identity = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_is_identity,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.is_zero = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_is_zero,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.is_finite = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_is_finite,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.has_nans = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_has_nans,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.assert_size = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_assert_size,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.assert_finite = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_assert_finite,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.read_ascii = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_read_ascii,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.data_block = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_data_block,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.as_matrix = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_as_matrix,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.begin = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_begin,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.end = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_end,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.operator_eq = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_operator_eq,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.__eq__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3___eq__,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3.__ne__ = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3___ne__,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3._print = new_instancemethod(_vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3__print,None,vnl_matrix_fixedF_3_3)
vnl_matrix_fixedF_3_3_swigregister = _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_swigregister
vnl_matrix_fixedF_3_3_swigregister(vnl_matrix_fixedF_3_3)

def vnl_matrix_fixedF_3_3_add(*args):
  """
    add(float a, float b, float r)
    vnl_matrix_fixedF_3_3_add(float a, float b, float r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_add(*args)

def vnl_matrix_fixedF_3_3_sub(*args):
  """
    sub(float a, float b, float r)
    sub(float a, float b, float r)
    vnl_matrix_fixedF_3_3_sub(float a, float b, float r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_sub(*args)

def vnl_matrix_fixedF_3_3_mul(*args):
  """
    mul(float a, float b, float r)
    vnl_matrix_fixedF_3_3_mul(float a, float b, float r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_mul(*args)

def vnl_matrix_fixedF_3_3_div(*args):
  """
    div(float a, float b, float r)
    vnl_matrix_fixedF_3_3_div(float a, float b, float r)
    """
  return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_div(*args)

def vnl_matrix_fixedF_3_3_equal(*args):
  """vnl_matrix_fixedF_3_3_equal(float a, float b) -> bool"""
  return _vnl_matrix_fixedPython.vnl_matrix_fixedF_3_3_equal(*args)



