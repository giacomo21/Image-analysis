// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkModulusImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkModulusImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkModulusImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkModulusImageFilterJava
#endif
#ifdef SWIGLUA
%module itkModulusImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkModulusImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkModulusImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkModulusImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkModulusImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkModulusImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkModulusImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkModulusImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkModulusImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkModulusImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkModulusImageFilterPython
#endif
#ifdef SWIGR
%module itkModulusImageFilterR
#endif
#ifdef SWIGRUBY
%module itkModulusImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkModulusImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkModulusImageFilterTcl
#endif
#ifdef SWIGXML
%module itkModulusImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "UnaryPixelMath.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkInPlaceImageFilterA.i
%import wrap_ITKRegions.i


%include itk.i
%include wrap_itkModulusImageFilter_ext.i


 class itkModulusImageFilterIUC2IUC2_Pointer {
   public:
     itkModulusImageFilterIUC2IUC2_Pointer();
     itkModulusImageFilterIUC2IUC2_Pointer(itkModulusImageFilterIUC2IUC2_Pointer const & p);
     itkModulusImageFilterIUC2IUC2_Pointer(itkModulusImageFilterIUC2IUC2 * p);
     ~itkModulusImageFilterIUC2IUC2_Pointer();
     itkModulusImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkModulusImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkModulusImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkModulusImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkModulusImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkModulusImageFilterIUC2IUC2_Pointer const & r) const;
     itkModulusImageFilterIUC2IUC2_Pointer & operator=(itkModulusImageFilterIUC2IUC2_Pointer const & r);
     itkModulusImageFilterIUC2IUC2_Pointer & operator=(itkModulusImageFilterIUC2IUC2 * r);
     itkModulusImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkModulusImageFilterIUC2IUC2_Superclass : public itkInPlaceImageFilterIUC2IUC2 {
   public:
     static itkModulusImageFilterIUC2IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::ModulusTransform< unsigned char, unsigned char > & GetFunctor();
     itk::Functor::ModulusTransform< unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ModulusTransform< unsigned char, unsigned char > const & functor);
   private:
     itkModulusImageFilterIUC2IUC2_Superclass(itkModulusImageFilterIUC2IUC2_Superclass const & arg0);
     void operator=(itkModulusImageFilterIUC2IUC2_Superclass const & arg0);
   protected:
     itkModulusImageFilterIUC2IUC2_Superclass();
     ~itkModulusImageFilterIUC2IUC2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkModulusImageFilterIUC2IUC2_Superclass_Pointer {
   public:
     itkModulusImageFilterIUC2IUC2_Superclass_Pointer();
     itkModulusImageFilterIUC2IUC2_Superclass_Pointer(itkModulusImageFilterIUC2IUC2_Superclass_Pointer const & p);
     itkModulusImageFilterIUC2IUC2_Superclass_Pointer(itkModulusImageFilterIUC2IUC2_Superclass * p);
     ~itkModulusImageFilterIUC2IUC2_Superclass_Pointer();
     itkModulusImageFilterIUC2IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkModulusImageFilterIUC2IUC2_Superclass * GetPointer() const;
     bool operator<(itkModulusImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkModulusImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkModulusImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkModulusImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     itkModulusImageFilterIUC2IUC2_Superclass_Pointer & operator=(itkModulusImageFilterIUC2IUC2_Superclass_Pointer const & r);
     itkModulusImageFilterIUC2IUC2_Superclass_Pointer & operator=(itkModulusImageFilterIUC2IUC2_Superclass * r);
     itkModulusImageFilterIUC2IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkModulusImageFilterIUC3IUC3_Pointer {
   public:
     itkModulusImageFilterIUC3IUC3_Pointer();
     itkModulusImageFilterIUC3IUC3_Pointer(itkModulusImageFilterIUC3IUC3_Pointer const & p);
     itkModulusImageFilterIUC3IUC3_Pointer(itkModulusImageFilterIUC3IUC3 * p);
     ~itkModulusImageFilterIUC3IUC3_Pointer();
     itkModulusImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkModulusImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkModulusImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkModulusImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkModulusImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkModulusImageFilterIUC3IUC3_Pointer const & r) const;
     itkModulusImageFilterIUC3IUC3_Pointer & operator=(itkModulusImageFilterIUC3IUC3_Pointer const & r);
     itkModulusImageFilterIUC3IUC3_Pointer & operator=(itkModulusImageFilterIUC3IUC3 * r);
     itkModulusImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkModulusImageFilterIUC3IUC3_Superclass : public itkInPlaceImageFilterIUC3IUC3 {
   public:
     static itkModulusImageFilterIUC3IUC3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::ModulusTransform< unsigned char, unsigned char > & GetFunctor();
     itk::Functor::ModulusTransform< unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ModulusTransform< unsigned char, unsigned char > const & functor);
   private:
     itkModulusImageFilterIUC3IUC3_Superclass(itkModulusImageFilterIUC3IUC3_Superclass const & arg0);
     void operator=(itkModulusImageFilterIUC3IUC3_Superclass const & arg0);
   protected:
     itkModulusImageFilterIUC3IUC3_Superclass();
     ~itkModulusImageFilterIUC3IUC3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkModulusImageFilterIUC3IUC3_Superclass_Pointer {
   public:
     itkModulusImageFilterIUC3IUC3_Superclass_Pointer();
     itkModulusImageFilterIUC3IUC3_Superclass_Pointer(itkModulusImageFilterIUC3IUC3_Superclass_Pointer const & p);
     itkModulusImageFilterIUC3IUC3_Superclass_Pointer(itkModulusImageFilterIUC3IUC3_Superclass * p);
     ~itkModulusImageFilterIUC3IUC3_Superclass_Pointer();
     itkModulusImageFilterIUC3IUC3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkModulusImageFilterIUC3IUC3_Superclass * GetPointer() const;
     bool operator<(itkModulusImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>(itkModulusImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator<=(itkModulusImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>=(itkModulusImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     itkModulusImageFilterIUC3IUC3_Superclass_Pointer & operator=(itkModulusImageFilterIUC3IUC3_Superclass_Pointer const & r);
     itkModulusImageFilterIUC3IUC3_Superclass_Pointer & operator=(itkModulusImageFilterIUC3IUC3_Superclass * r);
     itkModulusImageFilterIUC3IUC3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkModulusImageFilterIUL2IUL2_Pointer {
   public:
     itkModulusImageFilterIUL2IUL2_Pointer();
     itkModulusImageFilterIUL2IUL2_Pointer(itkModulusImageFilterIUL2IUL2_Pointer const & p);
     itkModulusImageFilterIUL2IUL2_Pointer(itkModulusImageFilterIUL2IUL2 * p);
     ~itkModulusImageFilterIUL2IUL2_Pointer();
     itkModulusImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkModulusImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkModulusImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkModulusImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkModulusImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkModulusImageFilterIUL2IUL2_Pointer const & r) const;
     itkModulusImageFilterIUL2IUL2_Pointer & operator=(itkModulusImageFilterIUL2IUL2_Pointer const & r);
     itkModulusImageFilterIUL2IUL2_Pointer & operator=(itkModulusImageFilterIUL2IUL2 * r);
     itkModulusImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkModulusImageFilterIUL2IUL2_Superclass : public itkInPlaceImageFilterIUL2IUL2 {
   public:
     static itkModulusImageFilterIUL2IUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::ModulusTransform< unsigned long, unsigned long > & GetFunctor();
     itk::Functor::ModulusTransform< unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ModulusTransform< unsigned long, unsigned long > const & functor);
   private:
     itkModulusImageFilterIUL2IUL2_Superclass(itkModulusImageFilterIUL2IUL2_Superclass const & arg0);
     void operator=(itkModulusImageFilterIUL2IUL2_Superclass const & arg0);
   protected:
     itkModulusImageFilterIUL2IUL2_Superclass();
     ~itkModulusImageFilterIUL2IUL2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkModulusImageFilterIUL2IUL2_Superclass_Pointer {
   public:
     itkModulusImageFilterIUL2IUL2_Superclass_Pointer();
     itkModulusImageFilterIUL2IUL2_Superclass_Pointer(itkModulusImageFilterIUL2IUL2_Superclass_Pointer const & p);
     itkModulusImageFilterIUL2IUL2_Superclass_Pointer(itkModulusImageFilterIUL2IUL2_Superclass * p);
     ~itkModulusImageFilterIUL2IUL2_Superclass_Pointer();
     itkModulusImageFilterIUL2IUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkModulusImageFilterIUL2IUL2_Superclass * GetPointer() const;
     bool operator<(itkModulusImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>(itkModulusImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkModulusImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkModulusImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     itkModulusImageFilterIUL2IUL2_Superclass_Pointer & operator=(itkModulusImageFilterIUL2IUL2_Superclass_Pointer const & r);
     itkModulusImageFilterIUL2IUL2_Superclass_Pointer & operator=(itkModulusImageFilterIUL2IUL2_Superclass * r);
     itkModulusImageFilterIUL2IUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkModulusImageFilterIUL3IUL3_Pointer {
   public:
     itkModulusImageFilterIUL3IUL3_Pointer();
     itkModulusImageFilterIUL3IUL3_Pointer(itkModulusImageFilterIUL3IUL3_Pointer const & p);
     itkModulusImageFilterIUL3IUL3_Pointer(itkModulusImageFilterIUL3IUL3 * p);
     ~itkModulusImageFilterIUL3IUL3_Pointer();
     itkModulusImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkModulusImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkModulusImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkModulusImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkModulusImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkModulusImageFilterIUL3IUL3_Pointer const & r) const;
     itkModulusImageFilterIUL3IUL3_Pointer & operator=(itkModulusImageFilterIUL3IUL3_Pointer const & r);
     itkModulusImageFilterIUL3IUL3_Pointer & operator=(itkModulusImageFilterIUL3IUL3 * r);
     itkModulusImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkModulusImageFilterIUL3IUL3_Superclass : public itkInPlaceImageFilterIUL3IUL3 {
   public:
     static itkModulusImageFilterIUL3IUL3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::ModulusTransform< unsigned long, unsigned long > & GetFunctor();
     itk::Functor::ModulusTransform< unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ModulusTransform< unsigned long, unsigned long > const & functor);
   private:
     itkModulusImageFilterIUL3IUL3_Superclass(itkModulusImageFilterIUL3IUL3_Superclass const & arg0);
     void operator=(itkModulusImageFilterIUL3IUL3_Superclass const & arg0);
   protected:
     itkModulusImageFilterIUL3IUL3_Superclass();
     ~itkModulusImageFilterIUL3IUL3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkModulusImageFilterIUL3IUL3_Superclass_Pointer {
   public:
     itkModulusImageFilterIUL3IUL3_Superclass_Pointer();
     itkModulusImageFilterIUL3IUL3_Superclass_Pointer(itkModulusImageFilterIUL3IUL3_Superclass_Pointer const & p);
     itkModulusImageFilterIUL3IUL3_Superclass_Pointer(itkModulusImageFilterIUL3IUL3_Superclass * p);
     ~itkModulusImageFilterIUL3IUL3_Superclass_Pointer();
     itkModulusImageFilterIUL3IUL3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkModulusImageFilterIUL3IUL3_Superclass * GetPointer() const;
     bool operator<(itkModulusImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>(itkModulusImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator<=(itkModulusImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>=(itkModulusImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     itkModulusImageFilterIUL3IUL3_Superclass_Pointer & operator=(itkModulusImageFilterIUL3IUL3_Superclass_Pointer const & r);
     itkModulusImageFilterIUL3IUL3_Superclass_Pointer & operator=(itkModulusImageFilterIUL3IUL3_Superclass * r);
     itkModulusImageFilterIUL3IUL3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkModulusImageFilterIUS2IUS2_Pointer {
   public:
     itkModulusImageFilterIUS2IUS2_Pointer();
     itkModulusImageFilterIUS2IUS2_Pointer(itkModulusImageFilterIUS2IUS2_Pointer const & p);
     itkModulusImageFilterIUS2IUS2_Pointer(itkModulusImageFilterIUS2IUS2 * p);
     ~itkModulusImageFilterIUS2IUS2_Pointer();
     itkModulusImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkModulusImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkModulusImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkModulusImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkModulusImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkModulusImageFilterIUS2IUS2_Pointer const & r) const;
     itkModulusImageFilterIUS2IUS2_Pointer & operator=(itkModulusImageFilterIUS2IUS2_Pointer const & r);
     itkModulusImageFilterIUS2IUS2_Pointer & operator=(itkModulusImageFilterIUS2IUS2 * r);
     itkModulusImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkModulusImageFilterIUS2IUS2_Superclass : public itkInPlaceImageFilterIUS2IUS2 {
   public:
     static itkModulusImageFilterIUS2IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::ModulusTransform< unsigned short, unsigned short > & GetFunctor();
     itk::Functor::ModulusTransform< unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ModulusTransform< unsigned short, unsigned short > const & functor);
   private:
     itkModulusImageFilterIUS2IUS2_Superclass(itkModulusImageFilterIUS2IUS2_Superclass const & arg0);
     void operator=(itkModulusImageFilterIUS2IUS2_Superclass const & arg0);
   protected:
     itkModulusImageFilterIUS2IUS2_Superclass();
     ~itkModulusImageFilterIUS2IUS2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkModulusImageFilterIUS2IUS2_Superclass_Pointer {
   public:
     itkModulusImageFilterIUS2IUS2_Superclass_Pointer();
     itkModulusImageFilterIUS2IUS2_Superclass_Pointer(itkModulusImageFilterIUS2IUS2_Superclass_Pointer const & p);
     itkModulusImageFilterIUS2IUS2_Superclass_Pointer(itkModulusImageFilterIUS2IUS2_Superclass * p);
     ~itkModulusImageFilterIUS2IUS2_Superclass_Pointer();
     itkModulusImageFilterIUS2IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkModulusImageFilterIUS2IUS2_Superclass * GetPointer() const;
     bool operator<(itkModulusImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkModulusImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkModulusImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkModulusImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     itkModulusImageFilterIUS2IUS2_Superclass_Pointer & operator=(itkModulusImageFilterIUS2IUS2_Superclass_Pointer const & r);
     itkModulusImageFilterIUS2IUS2_Superclass_Pointer & operator=(itkModulusImageFilterIUS2IUS2_Superclass * r);
     itkModulusImageFilterIUS2IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkModulusImageFilterIUS3IUS3_Pointer {
   public:
     itkModulusImageFilterIUS3IUS3_Pointer();
     itkModulusImageFilterIUS3IUS3_Pointer(itkModulusImageFilterIUS3IUS3_Pointer const & p);
     itkModulusImageFilterIUS3IUS3_Pointer(itkModulusImageFilterIUS3IUS3 * p);
     ~itkModulusImageFilterIUS3IUS3_Pointer();
     itkModulusImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkModulusImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkModulusImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkModulusImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkModulusImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkModulusImageFilterIUS3IUS3_Pointer const & r) const;
     itkModulusImageFilterIUS3IUS3_Pointer & operator=(itkModulusImageFilterIUS3IUS3_Pointer const & r);
     itkModulusImageFilterIUS3IUS3_Pointer & operator=(itkModulusImageFilterIUS3IUS3 * r);
     itkModulusImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkModulusImageFilterIUS3IUS3_Superclass : public itkInPlaceImageFilterIUS3IUS3 {
   public:
     static itkModulusImageFilterIUS3IUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::ModulusTransform< unsigned short, unsigned short > & GetFunctor();
     itk::Functor::ModulusTransform< unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ModulusTransform< unsigned short, unsigned short > const & functor);
   private:
     itkModulusImageFilterIUS3IUS3_Superclass(itkModulusImageFilterIUS3IUS3_Superclass const & arg0);
     void operator=(itkModulusImageFilterIUS3IUS3_Superclass const & arg0);
   protected:
     itkModulusImageFilterIUS3IUS3_Superclass();
     ~itkModulusImageFilterIUS3IUS3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkModulusImageFilterIUS3IUS3_Superclass_Pointer {
   public:
     itkModulusImageFilterIUS3IUS3_Superclass_Pointer();
     itkModulusImageFilterIUS3IUS3_Superclass_Pointer(itkModulusImageFilterIUS3IUS3_Superclass_Pointer const & p);
     itkModulusImageFilterIUS3IUS3_Superclass_Pointer(itkModulusImageFilterIUS3IUS3_Superclass * p);
     ~itkModulusImageFilterIUS3IUS3_Superclass_Pointer();
     itkModulusImageFilterIUS3IUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkModulusImageFilterIUS3IUS3_Superclass * GetPointer() const;
     bool operator<(itkModulusImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>(itkModulusImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkModulusImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkModulusImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     itkModulusImageFilterIUS3IUS3_Superclass_Pointer & operator=(itkModulusImageFilterIUS3IUS3_Superclass_Pointer const & r);
     itkModulusImageFilterIUS3IUS3_Superclass_Pointer & operator=(itkModulusImageFilterIUS3IUS3_Superclass * r);
     itkModulusImageFilterIUS3IUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkModulusImageFilterIUC2IUC2 : public itkModulusImageFilterIUC2IUC2_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkModulusImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetDividend(unsigned char const _arg);
     virtual unsigned char const & GetDividend() const;
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
   private:
     itkModulusImageFilterIUC2IUC2(itkModulusImageFilterIUC2IUC2 const & arg0);
     void operator=(itkModulusImageFilterIUC2IUC2 const & arg0);
   protected:
     itkModulusImageFilterIUC2IUC2();
     ~itkModulusImageFilterIUC2IUC2();
 };


 class itkModulusImageFilterIUC3IUC3 : public itkModulusImageFilterIUC3IUC3_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkModulusImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetDividend(unsigned char const _arg);
     virtual unsigned char const & GetDividend() const;
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
   private:
     itkModulusImageFilterIUC3IUC3(itkModulusImageFilterIUC3IUC3 const & arg0);
     void operator=(itkModulusImageFilterIUC3IUC3 const & arg0);
   protected:
     itkModulusImageFilterIUC3IUC3();
     ~itkModulusImageFilterIUC3IUC3();
 };


 class itkModulusImageFilterIUL2IUL2 : public itkModulusImageFilterIUL2IUL2_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkModulusImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetDividend(unsigned long const _arg);
     virtual unsigned long const & GetDividend() const;
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
   private:
     itkModulusImageFilterIUL2IUL2(itkModulusImageFilterIUL2IUL2 const & arg0);
     void operator=(itkModulusImageFilterIUL2IUL2 const & arg0);
   protected:
     itkModulusImageFilterIUL2IUL2();
     ~itkModulusImageFilterIUL2IUL2();
 };


 class itkModulusImageFilterIUL3IUL3 : public itkModulusImageFilterIUL3IUL3_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkModulusImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetDividend(unsigned long const _arg);
     virtual unsigned long const & GetDividend() const;
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
   private:
     itkModulusImageFilterIUL3IUL3(itkModulusImageFilterIUL3IUL3 const & arg0);
     void operator=(itkModulusImageFilterIUL3IUL3 const & arg0);
   protected:
     itkModulusImageFilterIUL3IUL3();
     ~itkModulusImageFilterIUL3IUL3();
 };


 class itkModulusImageFilterIUS2IUS2 : public itkModulusImageFilterIUS2IUS2_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkModulusImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetDividend(unsigned short const _arg);
     virtual unsigned short const & GetDividend() const;
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
   private:
     itkModulusImageFilterIUS2IUS2(itkModulusImageFilterIUS2IUS2 const & arg0);
     void operator=(itkModulusImageFilterIUS2IUS2 const & arg0);
   protected:
     itkModulusImageFilterIUS2IUS2();
     ~itkModulusImageFilterIUS2IUS2();
 };


 class itkModulusImageFilterIUS3IUS3 : public itkModulusImageFilterIUS3IUS3_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkModulusImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetDividend(unsigned short const _arg);
     virtual unsigned short const & GetDividend() const;
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
   private:
     itkModulusImageFilterIUS3IUS3(itkModulusImageFilterIUS3IUS3 const & arg0);
     void operator=(itkModulusImageFilterIUS3IUS3 const & arg0);
   protected:
     itkModulusImageFilterIUS3IUS3();
     ~itkModulusImageFilterIUS3IUS3();
 };


