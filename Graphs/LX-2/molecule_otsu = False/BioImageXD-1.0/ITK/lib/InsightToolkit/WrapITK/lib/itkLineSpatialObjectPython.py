# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkLineSpatialObjectPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkLineSpatialObjectPython', [dirname(__file__)])
        except ImportError:
            import _itkLineSpatialObjectPython
            return _itkLineSpatialObjectPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkLineSpatialObjectPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkLineSpatialObjectPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkLineSpatialObjectPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkPointPython
import vnl_vectorPython
import vcl_complexPython
import pyBasePython
import vnl_matrixPython
import itkFixedArrayPython
import itkVectorPython
import vnl_vector_refPython
import itkLineSpatialObjectPointPython
import ITKCommonBasePython
import itkEventObjectsPython
import itkCovariantVectorPython
import itkSpatialObjectPointPython
import itkRGBAPixelPython
import itkPointBasedSpatialObjectPython
import itkSpatialObjectBasePython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import ITKRegionsPython
import itkSpatialObjectPropertyPython
import itkScalableAffineTransformPython
import itkAffineTransformPython
import itkTransformPython
import itkArray2DPython
import itkArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkMatrixOffsetTransformBasePython
import itkAffineGeometryFramePython
import itkBoundingBoxPython
import itkMapContainerPython
import itkVectorContainerPython
import itkContinuousIndexPython
import itkLevelSetPython
def itkLineSpatialObject3_New():
  return itkLineSpatialObject3.New()

def itkLineSpatialObject2_New():
  return itkLineSpatialObject2.New()

class itkLineSpatialObject2(itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject2):
    """Proxy of C++ itkLineSpatialObject2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkLineSpatialObjectPython.itkLineSpatialObject2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetPoints(self):
        """GetPoints(self) -> vectoritkLineSpatialObjectPoint2"""
        return _itkLineSpatialObjectPython.itkLineSpatialObject2_GetPoints(self)

    def SetPoints(self, *args):
        """SetPoints(self, vectoritkLineSpatialObjectPoint2 newPoints)"""
        return _itkLineSpatialObjectPython.itkLineSpatialObject2_SetPoints(self, *args)

    def GetPoint(self, *args):
        """
        GetPoint(self, unsigned long id) -> itkSpatialObjectPoint2
        GetPoint(self, unsigned long id) -> itkSpatialObjectPoint2
        """
        return _itkLineSpatialObjectPython.itkLineSpatialObject2_GetPoint(self, *args)

    def IsEvaluableAt(self, *args):
        """
        IsEvaluableAt(self, itkPointD2 point, unsigned int depth = 0, char name = 0l) -> bool
        IsEvaluableAt(self, itkPointD2 point, unsigned int depth = 0) -> bool
        IsEvaluableAt(self, itkPointD2 point) -> bool
        """
        return _itkLineSpatialObjectPython.itkLineSpatialObject2_IsEvaluableAt(self, *args)

    def ValueAt(self, *args):
        """
        ValueAt(self, itkPointD2 point, double value, unsigned int depth = 0, 
            char name = 0l) -> bool
        ValueAt(self, itkPointD2 point, double value, unsigned int depth = 0) -> bool
        ValueAt(self, itkPointD2 point, double value) -> bool
        """
        return _itkLineSpatialObjectPython.itkLineSpatialObject2_ValueAt(self, *args)

    def IsInside(self, *args):
        """
        IsInside(self, itkPointD2 point, unsigned int depth, char name) -> bool
        IsInside(self, itkPointD2 point) -> bool
        """
        return _itkLineSpatialObjectPython.itkLineSpatialObject2_IsInside(self, *args)

    __swig_destroy__ = _itkLineSpatialObjectPython.delete_itkLineSpatialObject2
    def cast(*args):
        """cast(itkLightObject obj) -> itkLineSpatialObject2"""
        return _itkLineSpatialObjectPython.itkLineSpatialObject2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkLineSpatialObject2"""
        return _itkLineSpatialObjectPython.itkLineSpatialObject2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkLineSpatialObject2
        
        Create a new object of the class itkLineSpatialObject2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkLineSpatialObject2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkLineSpatialObject2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLineSpatialObject2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLineSpatialObject2.GetPoints = new_instancemethod(_itkLineSpatialObjectPython.itkLineSpatialObject2_GetPoints,None,itkLineSpatialObject2)
itkLineSpatialObject2.SetPoints = new_instancemethod(_itkLineSpatialObjectPython.itkLineSpatialObject2_SetPoints,None,itkLineSpatialObject2)
itkLineSpatialObject2.GetPoint = new_instancemethod(_itkLineSpatialObjectPython.itkLineSpatialObject2_GetPoint,None,itkLineSpatialObject2)
itkLineSpatialObject2.IsEvaluableAt = new_instancemethod(_itkLineSpatialObjectPython.itkLineSpatialObject2_IsEvaluableAt,None,itkLineSpatialObject2)
itkLineSpatialObject2.ValueAt = new_instancemethod(_itkLineSpatialObjectPython.itkLineSpatialObject2_ValueAt,None,itkLineSpatialObject2)
itkLineSpatialObject2.IsInside = new_instancemethod(_itkLineSpatialObjectPython.itkLineSpatialObject2_IsInside,None,itkLineSpatialObject2)
itkLineSpatialObject2.GetPointer = new_instancemethod(_itkLineSpatialObjectPython.itkLineSpatialObject2_GetPointer,None,itkLineSpatialObject2)
itkLineSpatialObject2_swigregister = _itkLineSpatialObjectPython.itkLineSpatialObject2_swigregister
itkLineSpatialObject2_swigregister(itkLineSpatialObject2)

def itkLineSpatialObject2___New_orig__():
  """itkLineSpatialObject2___New_orig__()"""
  return _itkLineSpatialObjectPython.itkLineSpatialObject2___New_orig__()

def itkLineSpatialObject2_cast(*args):
  """itkLineSpatialObject2_cast(itkLightObject obj) -> itkLineSpatialObject2"""
  return _itkLineSpatialObjectPython.itkLineSpatialObject2_cast(*args)

class itkLineSpatialObject3(itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject3):
    """Proxy of C++ itkLineSpatialObject3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkLineSpatialObjectPython.itkLineSpatialObject3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetPoints(self):
        """GetPoints(self) -> vectoritkLineSpatialObjectPoint3"""
        return _itkLineSpatialObjectPython.itkLineSpatialObject3_GetPoints(self)

    def SetPoints(self, *args):
        """SetPoints(self, vectoritkLineSpatialObjectPoint3 newPoints)"""
        return _itkLineSpatialObjectPython.itkLineSpatialObject3_SetPoints(self, *args)

    def GetPoint(self, *args):
        """
        GetPoint(self, unsigned long id) -> itkSpatialObjectPoint3
        GetPoint(self, unsigned long id) -> itkSpatialObjectPoint3
        """
        return _itkLineSpatialObjectPython.itkLineSpatialObject3_GetPoint(self, *args)

    def IsEvaluableAt(self, *args):
        """
        IsEvaluableAt(self, itkPointD3 point, unsigned int depth = 0, char name = 0l) -> bool
        IsEvaluableAt(self, itkPointD3 point, unsigned int depth = 0) -> bool
        IsEvaluableAt(self, itkPointD3 point) -> bool
        """
        return _itkLineSpatialObjectPython.itkLineSpatialObject3_IsEvaluableAt(self, *args)

    def ValueAt(self, *args):
        """
        ValueAt(self, itkPointD3 point, double value, unsigned int depth = 0, 
            char name = 0l) -> bool
        ValueAt(self, itkPointD3 point, double value, unsigned int depth = 0) -> bool
        ValueAt(self, itkPointD3 point, double value) -> bool
        """
        return _itkLineSpatialObjectPython.itkLineSpatialObject3_ValueAt(self, *args)

    def IsInside(self, *args):
        """
        IsInside(self, itkPointD3 point, unsigned int depth, char name) -> bool
        IsInside(self, itkPointD3 point) -> bool
        """
        return _itkLineSpatialObjectPython.itkLineSpatialObject3_IsInside(self, *args)

    __swig_destroy__ = _itkLineSpatialObjectPython.delete_itkLineSpatialObject3
    def cast(*args):
        """cast(itkLightObject obj) -> itkLineSpatialObject3"""
        return _itkLineSpatialObjectPython.itkLineSpatialObject3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkLineSpatialObject3"""
        return _itkLineSpatialObjectPython.itkLineSpatialObject3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkLineSpatialObject3
        
        Create a new object of the class itkLineSpatialObject3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkLineSpatialObject3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkLineSpatialObject3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLineSpatialObject3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLineSpatialObject3.GetPoints = new_instancemethod(_itkLineSpatialObjectPython.itkLineSpatialObject3_GetPoints,None,itkLineSpatialObject3)
itkLineSpatialObject3.SetPoints = new_instancemethod(_itkLineSpatialObjectPython.itkLineSpatialObject3_SetPoints,None,itkLineSpatialObject3)
itkLineSpatialObject3.GetPoint = new_instancemethod(_itkLineSpatialObjectPython.itkLineSpatialObject3_GetPoint,None,itkLineSpatialObject3)
itkLineSpatialObject3.IsEvaluableAt = new_instancemethod(_itkLineSpatialObjectPython.itkLineSpatialObject3_IsEvaluableAt,None,itkLineSpatialObject3)
itkLineSpatialObject3.ValueAt = new_instancemethod(_itkLineSpatialObjectPython.itkLineSpatialObject3_ValueAt,None,itkLineSpatialObject3)
itkLineSpatialObject3.IsInside = new_instancemethod(_itkLineSpatialObjectPython.itkLineSpatialObject3_IsInside,None,itkLineSpatialObject3)
itkLineSpatialObject3.GetPointer = new_instancemethod(_itkLineSpatialObjectPython.itkLineSpatialObject3_GetPointer,None,itkLineSpatialObject3)
itkLineSpatialObject3_swigregister = _itkLineSpatialObjectPython.itkLineSpatialObject3_swigregister
itkLineSpatialObject3_swigregister(itkLineSpatialObject3)

def itkLineSpatialObject3___New_orig__():
  """itkLineSpatialObject3___New_orig__()"""
  return _itkLineSpatialObjectPython.itkLineSpatialObject3___New_orig__()

def itkLineSpatialObject3_cast(*args):
  """itkLineSpatialObject3_cast(itkLightObject obj) -> itkLineSpatialObject3"""
  return _itkLineSpatialObjectPython.itkLineSpatialObject3_cast(*args)



