// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkInterpolateImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkInterpolateImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkInterpolateImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkInterpolateImageFilterJava
#endif
#ifdef SWIGLUA
%module itkInterpolateImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkInterpolateImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkInterpolateImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkInterpolateImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkInterpolateImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkInterpolateImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkInterpolateImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkInterpolateImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkInterpolateImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkInterpolateImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkInterpolateImageFilterPython
#endif
#ifdef SWIGR
%module itkInterpolateImageFilterR
#endif
#ifdef SWIGRUBY
%module itkInterpolateImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkInterpolateImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkInterpolateImageFilterTcl
#endif
#ifdef SWIGXML
%module itkInterpolateImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "SimpleFilters.includes"
%}


%{
%}




%import wrap_ITKRegions.i
%import wrap_itkImageToImageFilterA.i
%import wrap_itkImage.i
%import wrap_ITKCommonBase.i
%import wrap_itkInterpolateImageFunction.i


%include itk.i
%include wrap_itkInterpolateImageFilter_ext.i


 class itkInterpolateImageFilterID2ID2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  IntermediateImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkInterpolateImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageD2 const * image);
     itkImageD2 const * GetInput1();
     void SetInput2(itkImageD2 const * image);
     itkImageD2 const * GetInput2();
     virtual void SetDistance(double _arg);
     virtual double GetDistance() const;
     virtual void SetInterpolator(itkInterpolateImageFunctionID3D * _arg);
     virtual itkInterpolateImageFunctionID3D * GetInterpolator();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
   private:
     itkInterpolateImageFilterID2ID2(itkInterpolateImageFilterID2ID2 const & arg0);
     void operator=(itkInterpolateImageFilterID2ID2 const & arg0);
   protected:
     itkInterpolateImageFilterID2ID2();
     ~itkInterpolateImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkInterpolateImageFilterID2ID2_Pointer {
   public:
     itkInterpolateImageFilterID2ID2_Pointer();
     itkInterpolateImageFilterID2ID2_Pointer(itkInterpolateImageFilterID2ID2_Pointer const & p);
     itkInterpolateImageFilterID2ID2_Pointer(itkInterpolateImageFilterID2ID2 * p);
     ~itkInterpolateImageFilterID2ID2_Pointer();
     itkInterpolateImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInterpolateImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkInterpolateImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkInterpolateImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkInterpolateImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkInterpolateImageFilterID2ID2_Pointer const & r) const;
     itkInterpolateImageFilterID2ID2_Pointer & operator=(itkInterpolateImageFilterID2ID2_Pointer const & r);
     itkInterpolateImageFilterID2ID2_Pointer & operator=(itkInterpolateImageFilterID2ID2 * r);
     itkInterpolateImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInterpolateImageFilterID3ID3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  IntermediateImageDimension = 4 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkInterpolateImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageD3 const * image);
     itkImageD3 const * GetInput1();
     void SetInput2(itkImageD3 const * image);
     itkImageD3 const * GetInput2();
     virtual void SetDistance(double _arg);
     virtual double GetDistance() const;
     virtual void SetInterpolator(itk::InterpolateImageFunction< itk::Image< double, 4u >, double > * _arg);
     virtual itk::InterpolateImageFunction< itk::Image< double, 4u >, double > * GetInterpolator();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
   private:
     itkInterpolateImageFilterID3ID3(itkInterpolateImageFilterID3ID3 const & arg0);
     void operator=(itkInterpolateImageFilterID3ID3 const & arg0);
   protected:
     itkInterpolateImageFilterID3ID3();
     ~itkInterpolateImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkInterpolateImageFilterID3ID3_Pointer {
   public:
     itkInterpolateImageFilterID3ID3_Pointer();
     itkInterpolateImageFilterID3ID3_Pointer(itkInterpolateImageFilterID3ID3_Pointer const & p);
     itkInterpolateImageFilterID3ID3_Pointer(itkInterpolateImageFilterID3ID3 * p);
     ~itkInterpolateImageFilterID3ID3_Pointer();
     itkInterpolateImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInterpolateImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkInterpolateImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkInterpolateImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkInterpolateImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkInterpolateImageFilterID3ID3_Pointer const & r) const;
     itkInterpolateImageFilterID3ID3_Pointer & operator=(itkInterpolateImageFilterID3ID3_Pointer const & r);
     itkInterpolateImageFilterID3ID3_Pointer & operator=(itkInterpolateImageFilterID3ID3 * r);
     itkInterpolateImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInterpolateImageFilterIF2IF2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  IntermediateImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkInterpolateImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageF2 const * image);
     itkImageF2 const * GetInput1();
     void SetInput2(itkImageF2 const * image);
     itkImageF2 const * GetInput2();
     virtual void SetDistance(double _arg);
     virtual double GetDistance() const;
     virtual void SetInterpolator(itkInterpolateImageFunctionIF3D * _arg);
     virtual itkInterpolateImageFunctionIF3D * GetInterpolator();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
   private:
     itkInterpolateImageFilterIF2IF2(itkInterpolateImageFilterIF2IF2 const & arg0);
     void operator=(itkInterpolateImageFilterIF2IF2 const & arg0);
   protected:
     itkInterpolateImageFilterIF2IF2();
     ~itkInterpolateImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkInterpolateImageFilterIF2IF2_Pointer {
   public:
     itkInterpolateImageFilterIF2IF2_Pointer();
     itkInterpolateImageFilterIF2IF2_Pointer(itkInterpolateImageFilterIF2IF2_Pointer const & p);
     itkInterpolateImageFilterIF2IF2_Pointer(itkInterpolateImageFilterIF2IF2 * p);
     ~itkInterpolateImageFilterIF2IF2_Pointer();
     itkInterpolateImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInterpolateImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkInterpolateImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkInterpolateImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkInterpolateImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkInterpolateImageFilterIF2IF2_Pointer const & r) const;
     itkInterpolateImageFilterIF2IF2_Pointer & operator=(itkInterpolateImageFilterIF2IF2_Pointer const & r);
     itkInterpolateImageFilterIF2IF2_Pointer & operator=(itkInterpolateImageFilterIF2IF2 * r);
     itkInterpolateImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInterpolateImageFilterIF3IF3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  IntermediateImageDimension = 4 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkInterpolateImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageF3 const * image);
     itkImageF3 const * GetInput1();
     void SetInput2(itkImageF3 const * image);
     itkImageF3 const * GetInput2();
     virtual void SetDistance(double _arg);
     virtual double GetDistance() const;
     virtual void SetInterpolator(itk::InterpolateImageFunction< itk::Image< float, 4u >, double > * _arg);
     virtual itk::InterpolateImageFunction< itk::Image< float, 4u >, double > * GetInterpolator();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
   private:
     itkInterpolateImageFilterIF3IF3(itkInterpolateImageFilterIF3IF3 const & arg0);
     void operator=(itkInterpolateImageFilterIF3IF3 const & arg0);
   protected:
     itkInterpolateImageFilterIF3IF3();
     ~itkInterpolateImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkInterpolateImageFilterIF3IF3_Pointer {
   public:
     itkInterpolateImageFilterIF3IF3_Pointer();
     itkInterpolateImageFilterIF3IF3_Pointer(itkInterpolateImageFilterIF3IF3_Pointer const & p);
     itkInterpolateImageFilterIF3IF3_Pointer(itkInterpolateImageFilterIF3IF3 * p);
     ~itkInterpolateImageFilterIF3IF3_Pointer();
     itkInterpolateImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInterpolateImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkInterpolateImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkInterpolateImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkInterpolateImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkInterpolateImageFilterIF3IF3_Pointer const & r) const;
     itkInterpolateImageFilterIF3IF3_Pointer & operator=(itkInterpolateImageFilterIF3IF3_Pointer const & r);
     itkInterpolateImageFilterIF3IF3_Pointer & operator=(itkInterpolateImageFilterIF3IF3 * r);
     itkInterpolateImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInterpolateImageFilterIUC2IUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  IntermediateImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkInterpolateImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUC2 const * image);
     itkImageUC2 const * GetInput1();
     void SetInput2(itkImageUC2 const * image);
     itkImageUC2 const * GetInput2();
     virtual void SetDistance(double _arg);
     virtual double GetDistance() const;
     virtual void SetInterpolator(itkInterpolateImageFunctionIUC3D * _arg);
     virtual itkInterpolateImageFunctionIUC3D * GetInterpolator();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
   private:
     itkInterpolateImageFilterIUC2IUC2(itkInterpolateImageFilterIUC2IUC2 const & arg0);
     void operator=(itkInterpolateImageFilterIUC2IUC2 const & arg0);
   protected:
     itkInterpolateImageFilterIUC2IUC2();
     ~itkInterpolateImageFilterIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkInterpolateImageFilterIUC2IUC2_Pointer {
   public:
     itkInterpolateImageFilterIUC2IUC2_Pointer();
     itkInterpolateImageFilterIUC2IUC2_Pointer(itkInterpolateImageFilterIUC2IUC2_Pointer const & p);
     itkInterpolateImageFilterIUC2IUC2_Pointer(itkInterpolateImageFilterIUC2IUC2 * p);
     ~itkInterpolateImageFilterIUC2IUC2_Pointer();
     itkInterpolateImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInterpolateImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkInterpolateImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkInterpolateImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkInterpolateImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkInterpolateImageFilterIUC2IUC2_Pointer const & r) const;
     itkInterpolateImageFilterIUC2IUC2_Pointer & operator=(itkInterpolateImageFilterIUC2IUC2_Pointer const & r);
     itkInterpolateImageFilterIUC2IUC2_Pointer & operator=(itkInterpolateImageFilterIUC2IUC2 * r);
     itkInterpolateImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInterpolateImageFilterIUC3IUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  IntermediateImageDimension = 4 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkInterpolateImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUC3 const * image);
     itkImageUC3 const * GetInput1();
     void SetInput2(itkImageUC3 const * image);
     itkImageUC3 const * GetInput2();
     virtual void SetDistance(double _arg);
     virtual double GetDistance() const;
     virtual void SetInterpolator(itk::InterpolateImageFunction< itk::Image< unsigned char, 4u >, double > * _arg);
     virtual itk::InterpolateImageFunction< itk::Image< unsigned char, 4u >, double > * GetInterpolator();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
   private:
     itkInterpolateImageFilterIUC3IUC3(itkInterpolateImageFilterIUC3IUC3 const & arg0);
     void operator=(itkInterpolateImageFilterIUC3IUC3 const & arg0);
   protected:
     itkInterpolateImageFilterIUC3IUC3();
     ~itkInterpolateImageFilterIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkInterpolateImageFilterIUC3IUC3_Pointer {
   public:
     itkInterpolateImageFilterIUC3IUC3_Pointer();
     itkInterpolateImageFilterIUC3IUC3_Pointer(itkInterpolateImageFilterIUC3IUC3_Pointer const & p);
     itkInterpolateImageFilterIUC3IUC3_Pointer(itkInterpolateImageFilterIUC3IUC3 * p);
     ~itkInterpolateImageFilterIUC3IUC3_Pointer();
     itkInterpolateImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInterpolateImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkInterpolateImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkInterpolateImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkInterpolateImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkInterpolateImageFilterIUC3IUC3_Pointer const & r) const;
     itkInterpolateImageFilterIUC3IUC3_Pointer & operator=(itkInterpolateImageFilterIUC3IUC3_Pointer const & r);
     itkInterpolateImageFilterIUC3IUC3_Pointer & operator=(itkInterpolateImageFilterIUC3IUC3 * r);
     itkInterpolateImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInterpolateImageFilterIUL2IUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  IntermediateImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkInterpolateImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUL2 const * image);
     itkImageUL2 const * GetInput1();
     void SetInput2(itkImageUL2 const * image);
     itkImageUL2 const * GetInput2();
     virtual void SetDistance(double _arg);
     virtual double GetDistance() const;
     virtual void SetInterpolator(itkInterpolateImageFunctionIUL3D * _arg);
     virtual itkInterpolateImageFunctionIUL3D * GetInterpolator();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
   private:
     itkInterpolateImageFilterIUL2IUL2(itkInterpolateImageFilterIUL2IUL2 const & arg0);
     void operator=(itkInterpolateImageFilterIUL2IUL2 const & arg0);
   protected:
     itkInterpolateImageFilterIUL2IUL2();
     ~itkInterpolateImageFilterIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkInterpolateImageFilterIUL2IUL2_Pointer {
   public:
     itkInterpolateImageFilterIUL2IUL2_Pointer();
     itkInterpolateImageFilterIUL2IUL2_Pointer(itkInterpolateImageFilterIUL2IUL2_Pointer const & p);
     itkInterpolateImageFilterIUL2IUL2_Pointer(itkInterpolateImageFilterIUL2IUL2 * p);
     ~itkInterpolateImageFilterIUL2IUL2_Pointer();
     itkInterpolateImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInterpolateImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkInterpolateImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkInterpolateImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkInterpolateImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkInterpolateImageFilterIUL2IUL2_Pointer const & r) const;
     itkInterpolateImageFilterIUL2IUL2_Pointer & operator=(itkInterpolateImageFilterIUL2IUL2_Pointer const & r);
     itkInterpolateImageFilterIUL2IUL2_Pointer & operator=(itkInterpolateImageFilterIUL2IUL2 * r);
     itkInterpolateImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInterpolateImageFilterIUL3IUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  IntermediateImageDimension = 4 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkInterpolateImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUL3 const * image);
     itkImageUL3 const * GetInput1();
     void SetInput2(itkImageUL3 const * image);
     itkImageUL3 const * GetInput2();
     virtual void SetDistance(double _arg);
     virtual double GetDistance() const;
     virtual void SetInterpolator(itk::InterpolateImageFunction< itk::Image< unsigned long, 4u >, double > * _arg);
     virtual itk::InterpolateImageFunction< itk::Image< unsigned long, 4u >, double > * GetInterpolator();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
   private:
     itkInterpolateImageFilterIUL3IUL3(itkInterpolateImageFilterIUL3IUL3 const & arg0);
     void operator=(itkInterpolateImageFilterIUL3IUL3 const & arg0);
   protected:
     itkInterpolateImageFilterIUL3IUL3();
     ~itkInterpolateImageFilterIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkInterpolateImageFilterIUL3IUL3_Pointer {
   public:
     itkInterpolateImageFilterIUL3IUL3_Pointer();
     itkInterpolateImageFilterIUL3IUL3_Pointer(itkInterpolateImageFilterIUL3IUL3_Pointer const & p);
     itkInterpolateImageFilterIUL3IUL3_Pointer(itkInterpolateImageFilterIUL3IUL3 * p);
     ~itkInterpolateImageFilterIUL3IUL3_Pointer();
     itkInterpolateImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInterpolateImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkInterpolateImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkInterpolateImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkInterpolateImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkInterpolateImageFilterIUL3IUL3_Pointer const & r) const;
     itkInterpolateImageFilterIUL3IUL3_Pointer & operator=(itkInterpolateImageFilterIUL3IUL3_Pointer const & r);
     itkInterpolateImageFilterIUL3IUL3_Pointer & operator=(itkInterpolateImageFilterIUL3IUL3 * r);
     itkInterpolateImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInterpolateImageFilterIUS2IUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  IntermediateImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkInterpolateImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUS2 const * image);
     itkImageUS2 const * GetInput1();
     void SetInput2(itkImageUS2 const * image);
     itkImageUS2 const * GetInput2();
     virtual void SetDistance(double _arg);
     virtual double GetDistance() const;
     virtual void SetInterpolator(itkInterpolateImageFunctionIUS3D * _arg);
     virtual itkInterpolateImageFunctionIUS3D * GetInterpolator();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
   private:
     itkInterpolateImageFilterIUS2IUS2(itkInterpolateImageFilterIUS2IUS2 const & arg0);
     void operator=(itkInterpolateImageFilterIUS2IUS2 const & arg0);
   protected:
     itkInterpolateImageFilterIUS2IUS2();
     ~itkInterpolateImageFilterIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkInterpolateImageFilterIUS2IUS2_Pointer {
   public:
     itkInterpolateImageFilterIUS2IUS2_Pointer();
     itkInterpolateImageFilterIUS2IUS2_Pointer(itkInterpolateImageFilterIUS2IUS2_Pointer const & p);
     itkInterpolateImageFilterIUS2IUS2_Pointer(itkInterpolateImageFilterIUS2IUS2 * p);
     ~itkInterpolateImageFilterIUS2IUS2_Pointer();
     itkInterpolateImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInterpolateImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkInterpolateImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkInterpolateImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkInterpolateImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkInterpolateImageFilterIUS2IUS2_Pointer const & r) const;
     itkInterpolateImageFilterIUS2IUS2_Pointer & operator=(itkInterpolateImageFilterIUS2IUS2_Pointer const & r);
     itkInterpolateImageFilterIUS2IUS2_Pointer & operator=(itkInterpolateImageFilterIUS2IUS2 * r);
     itkInterpolateImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInterpolateImageFilterIUS3IUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  IntermediateImageDimension = 4 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkInterpolateImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUS3 const * image);
     itkImageUS3 const * GetInput1();
     void SetInput2(itkImageUS3 const * image);
     itkImageUS3 const * GetInput2();
     virtual void SetDistance(double _arg);
     virtual double GetDistance() const;
     virtual void SetInterpolator(itk::InterpolateImageFunction< itk::Image< unsigned short, 4u >, double > * _arg);
     virtual itk::InterpolateImageFunction< itk::Image< unsigned short, 4u >, double > * GetInterpolator();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
   private:
     itkInterpolateImageFilterIUS3IUS3(itkInterpolateImageFilterIUS3IUS3 const & arg0);
     void operator=(itkInterpolateImageFilterIUS3IUS3 const & arg0);
   protected:
     itkInterpolateImageFilterIUS3IUS3();
     ~itkInterpolateImageFilterIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkInterpolateImageFilterIUS3IUS3_Pointer {
   public:
     itkInterpolateImageFilterIUS3IUS3_Pointer();
     itkInterpolateImageFilterIUS3IUS3_Pointer(itkInterpolateImageFilterIUS3IUS3_Pointer const & p);
     itkInterpolateImageFilterIUS3IUS3_Pointer(itkInterpolateImageFilterIUS3IUS3 * p);
     ~itkInterpolateImageFilterIUS3IUS3_Pointer();
     itkInterpolateImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInterpolateImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkInterpolateImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkInterpolateImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkInterpolateImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkInterpolateImageFilterIUS3IUS3_Pointer const & r) const;
     itkInterpolateImageFilterIUS3IUS3_Pointer & operator=(itkInterpolateImageFilterIUS3IUS3_Pointer const & r);
     itkInterpolateImageFilterIUS3IUS3_Pointer & operator=(itkInterpolateImageFilterIUS3IUS3 * r);
     itkInterpolateImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


