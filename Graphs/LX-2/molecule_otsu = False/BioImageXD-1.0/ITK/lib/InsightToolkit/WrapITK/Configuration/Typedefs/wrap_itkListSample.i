// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkListSampleChicken
#endif
#ifdef SWIGCSHARP
%module itkListSampleCsharp
#endif
#ifdef SWIGGUILE
%module itkListSampleGuile
#endif
#ifdef SWIGJAVA
%module itkListSampleJava
#endif
#ifdef SWIGLUA
%module itkListSampleLua
#endif
#ifdef SWIGMODULA3
%module itkListSampleModula3
#endif
#ifdef SWIGMZSCHEME
%module itkListSampleMzscheme
#endif
#ifdef SWIGOCAML
%module itkListSampleOcaml
#endif
#ifdef SWIGPERL
%module itkListSamplePerl
#endif
#ifdef SWIGPERL5
%module itkListSamplePerl5
#endif
#ifdef SWIGPHP
%module itkListSamplePhp
#endif
#ifdef SWIGPHP4
%module itkListSamplePhp4
#endif
#ifdef SWIGPHP5
%module itkListSamplePhp5
#endif
#ifdef SWIGPIKE
%module itkListSamplePike
#endif
#ifdef SWIGPYTHON
%module itkListSamplePython
#endif
#ifdef SWIGR
%module itkListSampleR
#endif
#ifdef SWIGRUBY
%module itkListSampleRuby
#endif
#ifdef SWIGSEXP
%module itkListSampleSexp
#endif
#ifdef SWIGTCL
%module itkListSampleTcl
#endif
#ifdef SWIGXML
%module itkListSampleXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Numerics.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkSample.i
%import wrap_itkVector.i


%include itk.i
%include wrap_itkListSample_ext.i


 class itkListSampleVF2 : public itkSampleVF2 {
   public:
     virtual char const * GetNameOfClass() const;
     static itkListSampleVF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void Resize(size_t newsize);
     void Clear();
     void PushBack(itkVectorF2 const & mv);
     virtual size_t Size() const;
     virtual itkVectorF2 const & GetMeasurementVector(size_t id) const;
     void SetMeasurement(size_t id, unsigned int dim, float const & value);
     void SetMeasurementVector(size_t id, itkVectorF2 const & mv);
     virtual size_t GetFrequency(size_t id) const;
     virtual unsigned long GetTotalFrequency() const;
     virtual void Graft(itkDataObject const * thatObject);
   private:
     itkListSampleVF2(itkListSampleVF2 const & arg0);
     void operator=(itkListSampleVF2 const & arg0);
   protected:
     itkListSampleVF2();
     ~itkListSampleVF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkListSampleVF2_Pointer {
   public:
     itkListSampleVF2_Pointer();
     itkListSampleVF2_Pointer(itkListSampleVF2_Pointer const & p);
     itkListSampleVF2_Pointer(itkListSampleVF2 * p);
     ~itkListSampleVF2_Pointer();
     itkListSampleVF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkListSampleVF2 * GetPointer() const;
     bool operator<(itkListSampleVF2_Pointer const & r) const;
     bool operator>(itkListSampleVF2_Pointer const & r) const;
     bool operator<=(itkListSampleVF2_Pointer const & r) const;
     bool operator>=(itkListSampleVF2_Pointer const & r) const;
     itkListSampleVF2_Pointer & operator=(itkListSampleVF2_Pointer const & r);
     itkListSampleVF2_Pointer & operator=(itkListSampleVF2 * r);
     itkListSampleVF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkListSampleVF3 : public itkSampleVF3 {
   public:
     virtual char const * GetNameOfClass() const;
     static itkListSampleVF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void Resize(size_t newsize);
     void Clear();
     void PushBack(itkVectorF3 const & mv);
     virtual size_t Size() const;
     virtual itkVectorF3 const & GetMeasurementVector(size_t id) const;
     void SetMeasurement(size_t id, unsigned int dim, float const & value);
     void SetMeasurementVector(size_t id, itkVectorF3 const & mv);
     virtual size_t GetFrequency(size_t id) const;
     virtual unsigned long GetTotalFrequency() const;
     virtual void Graft(itkDataObject const * thatObject);
   private:
     itkListSampleVF3(itkListSampleVF3 const & arg0);
     void operator=(itkListSampleVF3 const & arg0);
   protected:
     itkListSampleVF3();
     ~itkListSampleVF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkListSampleVF3_Pointer {
   public:
     itkListSampleVF3_Pointer();
     itkListSampleVF3_Pointer(itkListSampleVF3_Pointer const & p);
     itkListSampleVF3_Pointer(itkListSampleVF3 * p);
     ~itkListSampleVF3_Pointer();
     itkListSampleVF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkListSampleVF3 * GetPointer() const;
     bool operator<(itkListSampleVF3_Pointer const & r) const;
     bool operator>(itkListSampleVF3_Pointer const & r) const;
     bool operator<=(itkListSampleVF3_Pointer const & r) const;
     bool operator>=(itkListSampleVF3_Pointer const & r) const;
     itkListSampleVF3_Pointer & operator=(itkListSampleVF3_Pointer const & r);
     itkListSampleVF3_Pointer & operator=(itkListSampleVF3 * r);
     itkListSampleVF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


