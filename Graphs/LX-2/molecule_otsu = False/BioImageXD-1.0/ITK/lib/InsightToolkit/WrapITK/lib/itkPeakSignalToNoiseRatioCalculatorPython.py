# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkPeakSignalToNoiseRatioCalculatorPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkPeakSignalToNoiseRatioCalculatorPython', [dirname(__file__)])
        except ImportError:
            import _itkPeakSignalToNoiseRatioCalculatorPython
            return _itkPeakSignalToNoiseRatioCalculatorPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkPeakSignalToNoiseRatioCalculatorPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkPeakSignalToNoiseRatioCalculatorPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkPeakSignalToNoiseRatioCalculatorPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
def itkPeakSignalToNoiseRatioCalculatorID3_New():
  return itkPeakSignalToNoiseRatioCalculatorID3.New()

def itkPeakSignalToNoiseRatioCalculatorID2_New():
  return itkPeakSignalToNoiseRatioCalculatorID2.New()

def itkPeakSignalToNoiseRatioCalculatorIF3_New():
  return itkPeakSignalToNoiseRatioCalculatorIF3.New()

def itkPeakSignalToNoiseRatioCalculatorIF2_New():
  return itkPeakSignalToNoiseRatioCalculatorIF2.New()

def itkPeakSignalToNoiseRatioCalculatorIUS3_New():
  return itkPeakSignalToNoiseRatioCalculatorIUS3.New()

def itkPeakSignalToNoiseRatioCalculatorIUS2_New():
  return itkPeakSignalToNoiseRatioCalculatorIUS2.New()

def itkPeakSignalToNoiseRatioCalculatorIUL3_New():
  return itkPeakSignalToNoiseRatioCalculatorIUL3.New()

def itkPeakSignalToNoiseRatioCalculatorIUL2_New():
  return itkPeakSignalToNoiseRatioCalculatorIUL2.New()

def itkPeakSignalToNoiseRatioCalculatorIUC3_New():
  return itkPeakSignalToNoiseRatioCalculatorIUC3.New()

def itkPeakSignalToNoiseRatioCalculatorIUC2_New():
  return itkPeakSignalToNoiseRatioCalculatorIUC2.New()

class itkPeakSignalToNoiseRatioCalculatorID2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkPeakSignalToNoiseRatioCalculatorID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetImage(self, *args):
        """SetImage(self, itkImageD2 image)"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID2_SetImage(self, *args)

    def SetNoisyImage(self, *args):
        """SetNoisyImage(self, itkImageD2 image)"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID2_SetNoisyImage(self, *args)

    def Compute(self):
        """Compute(self)"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID2_Compute(self)

    def GetOutput(self):
        """GetOutput(self) -> double"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID2_GetOutput(self)

    __swig_destroy__ = _itkPeakSignalToNoiseRatioCalculatorPython.delete_itkPeakSignalToNoiseRatioCalculatorID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkPeakSignalToNoiseRatioCalculatorID2"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkPeakSignalToNoiseRatioCalculatorID2"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkPeakSignalToNoiseRatioCalculatorID2
        
        Create a new object of the class itkPeakSignalToNoiseRatioCalculatorID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkPeakSignalToNoiseRatioCalculatorID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkPeakSignalToNoiseRatioCalculatorID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPeakSignalToNoiseRatioCalculatorID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPeakSignalToNoiseRatioCalculatorID2.SetImage = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID2_SetImage,None,itkPeakSignalToNoiseRatioCalculatorID2)
itkPeakSignalToNoiseRatioCalculatorID2.SetNoisyImage = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID2_SetNoisyImage,None,itkPeakSignalToNoiseRatioCalculatorID2)
itkPeakSignalToNoiseRatioCalculatorID2.Compute = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID2_Compute,None,itkPeakSignalToNoiseRatioCalculatorID2)
itkPeakSignalToNoiseRatioCalculatorID2.GetOutput = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID2_GetOutput,None,itkPeakSignalToNoiseRatioCalculatorID2)
itkPeakSignalToNoiseRatioCalculatorID2.GetPointer = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID2_GetPointer,None,itkPeakSignalToNoiseRatioCalculatorID2)
itkPeakSignalToNoiseRatioCalculatorID2_swigregister = _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID2_swigregister
itkPeakSignalToNoiseRatioCalculatorID2_swigregister(itkPeakSignalToNoiseRatioCalculatorID2)

def itkPeakSignalToNoiseRatioCalculatorID2___New_orig__():
  """itkPeakSignalToNoiseRatioCalculatorID2___New_orig__()"""
  return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID2___New_orig__()

def itkPeakSignalToNoiseRatioCalculatorID2_cast(*args):
  """itkPeakSignalToNoiseRatioCalculatorID2_cast(itkLightObject obj) -> itkPeakSignalToNoiseRatioCalculatorID2"""
  return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID2_cast(*args)

class itkPeakSignalToNoiseRatioCalculatorID3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkPeakSignalToNoiseRatioCalculatorID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetImage(self, *args):
        """SetImage(self, itkImageD3 image)"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID3_SetImage(self, *args)

    def SetNoisyImage(self, *args):
        """SetNoisyImage(self, itkImageD3 image)"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID3_SetNoisyImage(self, *args)

    def Compute(self):
        """Compute(self)"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID3_Compute(self)

    def GetOutput(self):
        """GetOutput(self) -> double"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID3_GetOutput(self)

    __swig_destroy__ = _itkPeakSignalToNoiseRatioCalculatorPython.delete_itkPeakSignalToNoiseRatioCalculatorID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkPeakSignalToNoiseRatioCalculatorID3"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkPeakSignalToNoiseRatioCalculatorID3"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkPeakSignalToNoiseRatioCalculatorID3
        
        Create a new object of the class itkPeakSignalToNoiseRatioCalculatorID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkPeakSignalToNoiseRatioCalculatorID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkPeakSignalToNoiseRatioCalculatorID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPeakSignalToNoiseRatioCalculatorID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPeakSignalToNoiseRatioCalculatorID3.SetImage = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID3_SetImage,None,itkPeakSignalToNoiseRatioCalculatorID3)
itkPeakSignalToNoiseRatioCalculatorID3.SetNoisyImage = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID3_SetNoisyImage,None,itkPeakSignalToNoiseRatioCalculatorID3)
itkPeakSignalToNoiseRatioCalculatorID3.Compute = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID3_Compute,None,itkPeakSignalToNoiseRatioCalculatorID3)
itkPeakSignalToNoiseRatioCalculatorID3.GetOutput = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID3_GetOutput,None,itkPeakSignalToNoiseRatioCalculatorID3)
itkPeakSignalToNoiseRatioCalculatorID3.GetPointer = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID3_GetPointer,None,itkPeakSignalToNoiseRatioCalculatorID3)
itkPeakSignalToNoiseRatioCalculatorID3_swigregister = _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID3_swigregister
itkPeakSignalToNoiseRatioCalculatorID3_swigregister(itkPeakSignalToNoiseRatioCalculatorID3)

def itkPeakSignalToNoiseRatioCalculatorID3___New_orig__():
  """itkPeakSignalToNoiseRatioCalculatorID3___New_orig__()"""
  return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID3___New_orig__()

def itkPeakSignalToNoiseRatioCalculatorID3_cast(*args):
  """itkPeakSignalToNoiseRatioCalculatorID3_cast(itkLightObject obj) -> itkPeakSignalToNoiseRatioCalculatorID3"""
  return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorID3_cast(*args)

class itkPeakSignalToNoiseRatioCalculatorIF2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkPeakSignalToNoiseRatioCalculatorIF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetImage(self, *args):
        """SetImage(self, itkImageF2 image)"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF2_SetImage(self, *args)

    def SetNoisyImage(self, *args):
        """SetNoisyImage(self, itkImageF2 image)"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF2_SetNoisyImage(self, *args)

    def Compute(self):
        """Compute(self)"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF2_Compute(self)

    def GetOutput(self):
        """GetOutput(self) -> double"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF2_GetOutput(self)

    __swig_destroy__ = _itkPeakSignalToNoiseRatioCalculatorPython.delete_itkPeakSignalToNoiseRatioCalculatorIF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkPeakSignalToNoiseRatioCalculatorIF2"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkPeakSignalToNoiseRatioCalculatorIF2"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkPeakSignalToNoiseRatioCalculatorIF2
        
        Create a new object of the class itkPeakSignalToNoiseRatioCalculatorIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkPeakSignalToNoiseRatioCalculatorIF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkPeakSignalToNoiseRatioCalculatorIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPeakSignalToNoiseRatioCalculatorIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPeakSignalToNoiseRatioCalculatorIF2.SetImage = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF2_SetImage,None,itkPeakSignalToNoiseRatioCalculatorIF2)
itkPeakSignalToNoiseRatioCalculatorIF2.SetNoisyImage = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF2_SetNoisyImage,None,itkPeakSignalToNoiseRatioCalculatorIF2)
itkPeakSignalToNoiseRatioCalculatorIF2.Compute = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF2_Compute,None,itkPeakSignalToNoiseRatioCalculatorIF2)
itkPeakSignalToNoiseRatioCalculatorIF2.GetOutput = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF2_GetOutput,None,itkPeakSignalToNoiseRatioCalculatorIF2)
itkPeakSignalToNoiseRatioCalculatorIF2.GetPointer = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF2_GetPointer,None,itkPeakSignalToNoiseRatioCalculatorIF2)
itkPeakSignalToNoiseRatioCalculatorIF2_swigregister = _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF2_swigregister
itkPeakSignalToNoiseRatioCalculatorIF2_swigregister(itkPeakSignalToNoiseRatioCalculatorIF2)

def itkPeakSignalToNoiseRatioCalculatorIF2___New_orig__():
  """itkPeakSignalToNoiseRatioCalculatorIF2___New_orig__()"""
  return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF2___New_orig__()

def itkPeakSignalToNoiseRatioCalculatorIF2_cast(*args):
  """itkPeakSignalToNoiseRatioCalculatorIF2_cast(itkLightObject obj) -> itkPeakSignalToNoiseRatioCalculatorIF2"""
  return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF2_cast(*args)

class itkPeakSignalToNoiseRatioCalculatorIF3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkPeakSignalToNoiseRatioCalculatorIF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetImage(self, *args):
        """SetImage(self, itkImageF3 image)"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF3_SetImage(self, *args)

    def SetNoisyImage(self, *args):
        """SetNoisyImage(self, itkImageF3 image)"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF3_SetNoisyImage(self, *args)

    def Compute(self):
        """Compute(self)"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF3_Compute(self)

    def GetOutput(self):
        """GetOutput(self) -> double"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF3_GetOutput(self)

    __swig_destroy__ = _itkPeakSignalToNoiseRatioCalculatorPython.delete_itkPeakSignalToNoiseRatioCalculatorIF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkPeakSignalToNoiseRatioCalculatorIF3"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkPeakSignalToNoiseRatioCalculatorIF3"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkPeakSignalToNoiseRatioCalculatorIF3
        
        Create a new object of the class itkPeakSignalToNoiseRatioCalculatorIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkPeakSignalToNoiseRatioCalculatorIF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkPeakSignalToNoiseRatioCalculatorIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPeakSignalToNoiseRatioCalculatorIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPeakSignalToNoiseRatioCalculatorIF3.SetImage = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF3_SetImage,None,itkPeakSignalToNoiseRatioCalculatorIF3)
itkPeakSignalToNoiseRatioCalculatorIF3.SetNoisyImage = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF3_SetNoisyImage,None,itkPeakSignalToNoiseRatioCalculatorIF3)
itkPeakSignalToNoiseRatioCalculatorIF3.Compute = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF3_Compute,None,itkPeakSignalToNoiseRatioCalculatorIF3)
itkPeakSignalToNoiseRatioCalculatorIF3.GetOutput = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF3_GetOutput,None,itkPeakSignalToNoiseRatioCalculatorIF3)
itkPeakSignalToNoiseRatioCalculatorIF3.GetPointer = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF3_GetPointer,None,itkPeakSignalToNoiseRatioCalculatorIF3)
itkPeakSignalToNoiseRatioCalculatorIF3_swigregister = _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF3_swigregister
itkPeakSignalToNoiseRatioCalculatorIF3_swigregister(itkPeakSignalToNoiseRatioCalculatorIF3)

def itkPeakSignalToNoiseRatioCalculatorIF3___New_orig__():
  """itkPeakSignalToNoiseRatioCalculatorIF3___New_orig__()"""
  return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF3___New_orig__()

def itkPeakSignalToNoiseRatioCalculatorIF3_cast(*args):
  """itkPeakSignalToNoiseRatioCalculatorIF3_cast(itkLightObject obj) -> itkPeakSignalToNoiseRatioCalculatorIF3"""
  return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIF3_cast(*args)

class itkPeakSignalToNoiseRatioCalculatorIUC2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkPeakSignalToNoiseRatioCalculatorIUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetImage(self, *args):
        """SetImage(self, itkImageUC2 image)"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC2_SetImage(self, *args)

    def SetNoisyImage(self, *args):
        """SetNoisyImage(self, itkImageUC2 image)"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC2_SetNoisyImage(self, *args)

    def Compute(self):
        """Compute(self)"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC2_Compute(self)

    def GetOutput(self):
        """GetOutput(self) -> double"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC2_GetOutput(self)

    __swig_destroy__ = _itkPeakSignalToNoiseRatioCalculatorPython.delete_itkPeakSignalToNoiseRatioCalculatorIUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkPeakSignalToNoiseRatioCalculatorIUC2"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkPeakSignalToNoiseRatioCalculatorIUC2"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkPeakSignalToNoiseRatioCalculatorIUC2
        
        Create a new object of the class itkPeakSignalToNoiseRatioCalculatorIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkPeakSignalToNoiseRatioCalculatorIUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkPeakSignalToNoiseRatioCalculatorIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPeakSignalToNoiseRatioCalculatorIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPeakSignalToNoiseRatioCalculatorIUC2.SetImage = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC2_SetImage,None,itkPeakSignalToNoiseRatioCalculatorIUC2)
itkPeakSignalToNoiseRatioCalculatorIUC2.SetNoisyImage = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC2_SetNoisyImage,None,itkPeakSignalToNoiseRatioCalculatorIUC2)
itkPeakSignalToNoiseRatioCalculatorIUC2.Compute = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC2_Compute,None,itkPeakSignalToNoiseRatioCalculatorIUC2)
itkPeakSignalToNoiseRatioCalculatorIUC2.GetOutput = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC2_GetOutput,None,itkPeakSignalToNoiseRatioCalculatorIUC2)
itkPeakSignalToNoiseRatioCalculatorIUC2.GetPointer = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC2_GetPointer,None,itkPeakSignalToNoiseRatioCalculatorIUC2)
itkPeakSignalToNoiseRatioCalculatorIUC2_swigregister = _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC2_swigregister
itkPeakSignalToNoiseRatioCalculatorIUC2_swigregister(itkPeakSignalToNoiseRatioCalculatorIUC2)

def itkPeakSignalToNoiseRatioCalculatorIUC2___New_orig__():
  """itkPeakSignalToNoiseRatioCalculatorIUC2___New_orig__()"""
  return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC2___New_orig__()

def itkPeakSignalToNoiseRatioCalculatorIUC2_cast(*args):
  """itkPeakSignalToNoiseRatioCalculatorIUC2_cast(itkLightObject obj) -> itkPeakSignalToNoiseRatioCalculatorIUC2"""
  return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC2_cast(*args)

class itkPeakSignalToNoiseRatioCalculatorIUC3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkPeakSignalToNoiseRatioCalculatorIUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetImage(self, *args):
        """SetImage(self, itkImageUC3 image)"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC3_SetImage(self, *args)

    def SetNoisyImage(self, *args):
        """SetNoisyImage(self, itkImageUC3 image)"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC3_SetNoisyImage(self, *args)

    def Compute(self):
        """Compute(self)"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC3_Compute(self)

    def GetOutput(self):
        """GetOutput(self) -> double"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC3_GetOutput(self)

    __swig_destroy__ = _itkPeakSignalToNoiseRatioCalculatorPython.delete_itkPeakSignalToNoiseRatioCalculatorIUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkPeakSignalToNoiseRatioCalculatorIUC3"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkPeakSignalToNoiseRatioCalculatorIUC3"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkPeakSignalToNoiseRatioCalculatorIUC3
        
        Create a new object of the class itkPeakSignalToNoiseRatioCalculatorIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkPeakSignalToNoiseRatioCalculatorIUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkPeakSignalToNoiseRatioCalculatorIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPeakSignalToNoiseRatioCalculatorIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPeakSignalToNoiseRatioCalculatorIUC3.SetImage = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC3_SetImage,None,itkPeakSignalToNoiseRatioCalculatorIUC3)
itkPeakSignalToNoiseRatioCalculatorIUC3.SetNoisyImage = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC3_SetNoisyImage,None,itkPeakSignalToNoiseRatioCalculatorIUC3)
itkPeakSignalToNoiseRatioCalculatorIUC3.Compute = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC3_Compute,None,itkPeakSignalToNoiseRatioCalculatorIUC3)
itkPeakSignalToNoiseRatioCalculatorIUC3.GetOutput = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC3_GetOutput,None,itkPeakSignalToNoiseRatioCalculatorIUC3)
itkPeakSignalToNoiseRatioCalculatorIUC3.GetPointer = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC3_GetPointer,None,itkPeakSignalToNoiseRatioCalculatorIUC3)
itkPeakSignalToNoiseRatioCalculatorIUC3_swigregister = _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC3_swigregister
itkPeakSignalToNoiseRatioCalculatorIUC3_swigregister(itkPeakSignalToNoiseRatioCalculatorIUC3)

def itkPeakSignalToNoiseRatioCalculatorIUC3___New_orig__():
  """itkPeakSignalToNoiseRatioCalculatorIUC3___New_orig__()"""
  return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC3___New_orig__()

def itkPeakSignalToNoiseRatioCalculatorIUC3_cast(*args):
  """itkPeakSignalToNoiseRatioCalculatorIUC3_cast(itkLightObject obj) -> itkPeakSignalToNoiseRatioCalculatorIUC3"""
  return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUC3_cast(*args)

class itkPeakSignalToNoiseRatioCalculatorIUL2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkPeakSignalToNoiseRatioCalculatorIUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetImage(self, *args):
        """SetImage(self, itkImageUL2 image)"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL2_SetImage(self, *args)

    def SetNoisyImage(self, *args):
        """SetNoisyImage(self, itkImageUL2 image)"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL2_SetNoisyImage(self, *args)

    def Compute(self):
        """Compute(self)"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL2_Compute(self)

    def GetOutput(self):
        """GetOutput(self) -> double"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL2_GetOutput(self)

    __swig_destroy__ = _itkPeakSignalToNoiseRatioCalculatorPython.delete_itkPeakSignalToNoiseRatioCalculatorIUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkPeakSignalToNoiseRatioCalculatorIUL2"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkPeakSignalToNoiseRatioCalculatorIUL2"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkPeakSignalToNoiseRatioCalculatorIUL2
        
        Create a new object of the class itkPeakSignalToNoiseRatioCalculatorIUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkPeakSignalToNoiseRatioCalculatorIUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkPeakSignalToNoiseRatioCalculatorIUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPeakSignalToNoiseRatioCalculatorIUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPeakSignalToNoiseRatioCalculatorIUL2.SetImage = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL2_SetImage,None,itkPeakSignalToNoiseRatioCalculatorIUL2)
itkPeakSignalToNoiseRatioCalculatorIUL2.SetNoisyImage = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL2_SetNoisyImage,None,itkPeakSignalToNoiseRatioCalculatorIUL2)
itkPeakSignalToNoiseRatioCalculatorIUL2.Compute = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL2_Compute,None,itkPeakSignalToNoiseRatioCalculatorIUL2)
itkPeakSignalToNoiseRatioCalculatorIUL2.GetOutput = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL2_GetOutput,None,itkPeakSignalToNoiseRatioCalculatorIUL2)
itkPeakSignalToNoiseRatioCalculatorIUL2.GetPointer = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL2_GetPointer,None,itkPeakSignalToNoiseRatioCalculatorIUL2)
itkPeakSignalToNoiseRatioCalculatorIUL2_swigregister = _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL2_swigregister
itkPeakSignalToNoiseRatioCalculatorIUL2_swigregister(itkPeakSignalToNoiseRatioCalculatorIUL2)

def itkPeakSignalToNoiseRatioCalculatorIUL2___New_orig__():
  """itkPeakSignalToNoiseRatioCalculatorIUL2___New_orig__()"""
  return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL2___New_orig__()

def itkPeakSignalToNoiseRatioCalculatorIUL2_cast(*args):
  """itkPeakSignalToNoiseRatioCalculatorIUL2_cast(itkLightObject obj) -> itkPeakSignalToNoiseRatioCalculatorIUL2"""
  return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL2_cast(*args)

class itkPeakSignalToNoiseRatioCalculatorIUL3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkPeakSignalToNoiseRatioCalculatorIUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetImage(self, *args):
        """SetImage(self, itkImageUL3 image)"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL3_SetImage(self, *args)

    def SetNoisyImage(self, *args):
        """SetNoisyImage(self, itkImageUL3 image)"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL3_SetNoisyImage(self, *args)

    def Compute(self):
        """Compute(self)"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL3_Compute(self)

    def GetOutput(self):
        """GetOutput(self) -> double"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL3_GetOutput(self)

    __swig_destroy__ = _itkPeakSignalToNoiseRatioCalculatorPython.delete_itkPeakSignalToNoiseRatioCalculatorIUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkPeakSignalToNoiseRatioCalculatorIUL3"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkPeakSignalToNoiseRatioCalculatorIUL3"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkPeakSignalToNoiseRatioCalculatorIUL3
        
        Create a new object of the class itkPeakSignalToNoiseRatioCalculatorIUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkPeakSignalToNoiseRatioCalculatorIUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkPeakSignalToNoiseRatioCalculatorIUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPeakSignalToNoiseRatioCalculatorIUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPeakSignalToNoiseRatioCalculatorIUL3.SetImage = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL3_SetImage,None,itkPeakSignalToNoiseRatioCalculatorIUL3)
itkPeakSignalToNoiseRatioCalculatorIUL3.SetNoisyImage = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL3_SetNoisyImage,None,itkPeakSignalToNoiseRatioCalculatorIUL3)
itkPeakSignalToNoiseRatioCalculatorIUL3.Compute = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL3_Compute,None,itkPeakSignalToNoiseRatioCalculatorIUL3)
itkPeakSignalToNoiseRatioCalculatorIUL3.GetOutput = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL3_GetOutput,None,itkPeakSignalToNoiseRatioCalculatorIUL3)
itkPeakSignalToNoiseRatioCalculatorIUL3.GetPointer = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL3_GetPointer,None,itkPeakSignalToNoiseRatioCalculatorIUL3)
itkPeakSignalToNoiseRatioCalculatorIUL3_swigregister = _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL3_swigregister
itkPeakSignalToNoiseRatioCalculatorIUL3_swigregister(itkPeakSignalToNoiseRatioCalculatorIUL3)

def itkPeakSignalToNoiseRatioCalculatorIUL3___New_orig__():
  """itkPeakSignalToNoiseRatioCalculatorIUL3___New_orig__()"""
  return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL3___New_orig__()

def itkPeakSignalToNoiseRatioCalculatorIUL3_cast(*args):
  """itkPeakSignalToNoiseRatioCalculatorIUL3_cast(itkLightObject obj) -> itkPeakSignalToNoiseRatioCalculatorIUL3"""
  return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUL3_cast(*args)

class itkPeakSignalToNoiseRatioCalculatorIUS2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkPeakSignalToNoiseRatioCalculatorIUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetImage(self, *args):
        """SetImage(self, itkImageUS2 image)"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS2_SetImage(self, *args)

    def SetNoisyImage(self, *args):
        """SetNoisyImage(self, itkImageUS2 image)"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS2_SetNoisyImage(self, *args)

    def Compute(self):
        """Compute(self)"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS2_Compute(self)

    def GetOutput(self):
        """GetOutput(self) -> double"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS2_GetOutput(self)

    __swig_destroy__ = _itkPeakSignalToNoiseRatioCalculatorPython.delete_itkPeakSignalToNoiseRatioCalculatorIUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkPeakSignalToNoiseRatioCalculatorIUS2"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkPeakSignalToNoiseRatioCalculatorIUS2"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkPeakSignalToNoiseRatioCalculatorIUS2
        
        Create a new object of the class itkPeakSignalToNoiseRatioCalculatorIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkPeakSignalToNoiseRatioCalculatorIUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkPeakSignalToNoiseRatioCalculatorIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPeakSignalToNoiseRatioCalculatorIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPeakSignalToNoiseRatioCalculatorIUS2.SetImage = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS2_SetImage,None,itkPeakSignalToNoiseRatioCalculatorIUS2)
itkPeakSignalToNoiseRatioCalculatorIUS2.SetNoisyImage = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS2_SetNoisyImage,None,itkPeakSignalToNoiseRatioCalculatorIUS2)
itkPeakSignalToNoiseRatioCalculatorIUS2.Compute = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS2_Compute,None,itkPeakSignalToNoiseRatioCalculatorIUS2)
itkPeakSignalToNoiseRatioCalculatorIUS2.GetOutput = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS2_GetOutput,None,itkPeakSignalToNoiseRatioCalculatorIUS2)
itkPeakSignalToNoiseRatioCalculatorIUS2.GetPointer = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS2_GetPointer,None,itkPeakSignalToNoiseRatioCalculatorIUS2)
itkPeakSignalToNoiseRatioCalculatorIUS2_swigregister = _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS2_swigregister
itkPeakSignalToNoiseRatioCalculatorIUS2_swigregister(itkPeakSignalToNoiseRatioCalculatorIUS2)

def itkPeakSignalToNoiseRatioCalculatorIUS2___New_orig__():
  """itkPeakSignalToNoiseRatioCalculatorIUS2___New_orig__()"""
  return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS2___New_orig__()

def itkPeakSignalToNoiseRatioCalculatorIUS2_cast(*args):
  """itkPeakSignalToNoiseRatioCalculatorIUS2_cast(itkLightObject obj) -> itkPeakSignalToNoiseRatioCalculatorIUS2"""
  return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS2_cast(*args)

class itkPeakSignalToNoiseRatioCalculatorIUS3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkPeakSignalToNoiseRatioCalculatorIUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetImage(self, *args):
        """SetImage(self, itkImageUS3 image)"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS3_SetImage(self, *args)

    def SetNoisyImage(self, *args):
        """SetNoisyImage(self, itkImageUS3 image)"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS3_SetNoisyImage(self, *args)

    def Compute(self):
        """Compute(self)"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS3_Compute(self)

    def GetOutput(self):
        """GetOutput(self) -> double"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS3_GetOutput(self)

    __swig_destroy__ = _itkPeakSignalToNoiseRatioCalculatorPython.delete_itkPeakSignalToNoiseRatioCalculatorIUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkPeakSignalToNoiseRatioCalculatorIUS3"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkPeakSignalToNoiseRatioCalculatorIUS3"""
        return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkPeakSignalToNoiseRatioCalculatorIUS3
        
        Create a new object of the class itkPeakSignalToNoiseRatioCalculatorIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkPeakSignalToNoiseRatioCalculatorIUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkPeakSignalToNoiseRatioCalculatorIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPeakSignalToNoiseRatioCalculatorIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPeakSignalToNoiseRatioCalculatorIUS3.SetImage = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS3_SetImage,None,itkPeakSignalToNoiseRatioCalculatorIUS3)
itkPeakSignalToNoiseRatioCalculatorIUS3.SetNoisyImage = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS3_SetNoisyImage,None,itkPeakSignalToNoiseRatioCalculatorIUS3)
itkPeakSignalToNoiseRatioCalculatorIUS3.Compute = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS3_Compute,None,itkPeakSignalToNoiseRatioCalculatorIUS3)
itkPeakSignalToNoiseRatioCalculatorIUS3.GetOutput = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS3_GetOutput,None,itkPeakSignalToNoiseRatioCalculatorIUS3)
itkPeakSignalToNoiseRatioCalculatorIUS3.GetPointer = new_instancemethod(_itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS3_GetPointer,None,itkPeakSignalToNoiseRatioCalculatorIUS3)
itkPeakSignalToNoiseRatioCalculatorIUS3_swigregister = _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS3_swigregister
itkPeakSignalToNoiseRatioCalculatorIUS3_swigregister(itkPeakSignalToNoiseRatioCalculatorIUS3)

def itkPeakSignalToNoiseRatioCalculatorIUS3___New_orig__():
  """itkPeakSignalToNoiseRatioCalculatorIUS3___New_orig__()"""
  return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS3___New_orig__()

def itkPeakSignalToNoiseRatioCalculatorIUS3_cast(*args):
  """itkPeakSignalToNoiseRatioCalculatorIUS3_cast(itkLightObject obj) -> itkPeakSignalToNoiseRatioCalculatorIUS3"""
  return _itkPeakSignalToNoiseRatioCalculatorPython.itkPeakSignalToNoiseRatioCalculatorIUS3_cast(*args)



