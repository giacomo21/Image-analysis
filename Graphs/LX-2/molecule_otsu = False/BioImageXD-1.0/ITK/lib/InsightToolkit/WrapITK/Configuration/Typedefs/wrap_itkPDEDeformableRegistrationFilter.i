// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkPDEDeformableRegistrationFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkPDEDeformableRegistrationFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkPDEDeformableRegistrationFilterGuile
#endif
#ifdef SWIGJAVA
%module itkPDEDeformableRegistrationFilterJava
#endif
#ifdef SWIGLUA
%module itkPDEDeformableRegistrationFilterLua
#endif
#ifdef SWIGMODULA3
%module itkPDEDeformableRegistrationFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkPDEDeformableRegistrationFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkPDEDeformableRegistrationFilterOcaml
#endif
#ifdef SWIGPERL
%module itkPDEDeformableRegistrationFilterPerl
#endif
#ifdef SWIGPERL5
%module itkPDEDeformableRegistrationFilterPerl5
#endif
#ifdef SWIGPHP
%module itkPDEDeformableRegistrationFilterPhp
#endif
#ifdef SWIGPHP4
%module itkPDEDeformableRegistrationFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkPDEDeformableRegistrationFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkPDEDeformableRegistrationFilterPike
#endif
#ifdef SWIGPYTHON
%module itkPDEDeformableRegistrationFilterPython
#endif
#ifdef SWIGR
%module itkPDEDeformableRegistrationFilterR
#endif
#ifdef SWIGRUBY
%module itkPDEDeformableRegistrationFilterRuby
#endif
#ifdef SWIGSEXP
%module itkPDEDeformableRegistrationFilterSexp
#endif
#ifdef SWIGTCL
%module itkPDEDeformableRegistrationFilterTcl
#endif
#ifdef SWIGXML
%module itkPDEDeformableRegistrationFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Numerics.includes"
#include "Transforms.includes"
#include "SpatialObject.includes"
#include "Resize.includes"
#include "Calculators.includes"
#include "Registration.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkDenseFiniteDifferenceImageFilter.i
%import wrap_itkImage.i


%include itk.i
%include wrap_itkPDEDeformableRegistrationFilter_ext.i


 class itkPDEDeformableRegistrationFilterID2ID2IVF22 : public itkDenseFiniteDifferenceImageFilterIVF22IVF22 {
   public:
     enum  {  ImageDimension = 2 };
     static itkPDEDeformableRegistrationFilterID2ID2IVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetFixedImage(itkImageD2 const * ptr);
     itkImageD2 const * GetFixedImage() const;
     void SetMovingImage(itkImageD2 const * ptr);
     itkImageD2 const * GetMovingImage() const;
     void SetInitialDeformationField(itkImageVF22 const * ptr);
     itkImageVF22 * GetDeformationField();
     virtual size_t GetNumberOfValidRequiredInputs() const;
     virtual void SetSmoothDeformationField(bool const _arg);
     virtual bool GetSmoothDeformationField() const;
     virtual void SmoothDeformationFieldOn();
     virtual void SmoothDeformationFieldOff();
     virtual void SetStandardDeviations(double * data);
     virtual void SetStandardDeviations(double value);
     double const * GetStandardDeviations();
     virtual void SetSmoothUpdateField(bool const _arg);
     virtual bool GetSmoothUpdateField() const;
     virtual void SmoothUpdateFieldOn();
     virtual void SmoothUpdateFieldOff();
     virtual void SetUpdateFieldStandardDeviations(double * data);
     virtual void SetUpdateFieldStandardDeviations(double value);
     double const * GetUpdateFieldStandardDeviations();
     virtual void StopRegistration();
     virtual void SetMaximumError(double const _arg);
     virtual double GetMaximumError() const;
     virtual void SetMaximumKernelWidth(unsigned int const _arg);
     virtual unsigned int GetMaximumKernelWidth() const;
   private:
     itkPDEDeformableRegistrationFilterID2ID2IVF22(itkPDEDeformableRegistrationFilterID2ID2IVF22 const & arg0);
     void operator=(itkPDEDeformableRegistrationFilterID2ID2IVF22 const & arg0);
   protected:
     itkPDEDeformableRegistrationFilterID2ID2IVF22();
     ~itkPDEDeformableRegistrationFilterID2ID2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual bool Halt();
     virtual void CopyInputToOutput();
     virtual void InitializeIteration();
     virtual void SmoothDeformationField();
     virtual void SmoothUpdateField();
     virtual void PostProcessOutput();
     virtual void Initialize();
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
 };


 class itkPDEDeformableRegistrationFilterID2ID2IVF22_Pointer {
   public:
     itkPDEDeformableRegistrationFilterID2ID2IVF22_Pointer();
     itkPDEDeformableRegistrationFilterID2ID2IVF22_Pointer(itkPDEDeformableRegistrationFilterID2ID2IVF22_Pointer const & p);
     itkPDEDeformableRegistrationFilterID2ID2IVF22_Pointer(itkPDEDeformableRegistrationFilterID2ID2IVF22 * p);
     ~itkPDEDeformableRegistrationFilterID2ID2IVF22_Pointer();
     itkPDEDeformableRegistrationFilterID2ID2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkPDEDeformableRegistrationFilterID2ID2IVF22 * GetPointer() const;
     bool operator<(itkPDEDeformableRegistrationFilterID2ID2IVF22_Pointer const & r) const;
     bool operator>(itkPDEDeformableRegistrationFilterID2ID2IVF22_Pointer const & r) const;
     bool operator<=(itkPDEDeformableRegistrationFilterID2ID2IVF22_Pointer const & r) const;
     bool operator>=(itkPDEDeformableRegistrationFilterID2ID2IVF22_Pointer const & r) const;
     itkPDEDeformableRegistrationFilterID2ID2IVF22_Pointer & operator=(itkPDEDeformableRegistrationFilterID2ID2IVF22_Pointer const & r);
     itkPDEDeformableRegistrationFilterID2ID2IVF22_Pointer & operator=(itkPDEDeformableRegistrationFilterID2ID2IVF22 * r);
     itkPDEDeformableRegistrationFilterID2ID2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkPDEDeformableRegistrationFilterID3ID3IVF33 : public itkDenseFiniteDifferenceImageFilterIVF33IVF33 {
   public:
     enum  {  ImageDimension = 3 };
     static itkPDEDeformableRegistrationFilterID3ID3IVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetFixedImage(itkImageD3 const * ptr);
     itkImageD3 const * GetFixedImage() const;
     void SetMovingImage(itkImageD3 const * ptr);
     itkImageD3 const * GetMovingImage() const;
     void SetInitialDeformationField(itkImageVF33 const * ptr);
     itkImageVF33 * GetDeformationField();
     virtual size_t GetNumberOfValidRequiredInputs() const;
     virtual void SetSmoothDeformationField(bool const _arg);
     virtual bool GetSmoothDeformationField() const;
     virtual void SmoothDeformationFieldOn();
     virtual void SmoothDeformationFieldOff();
     virtual void SetStandardDeviations(double * data);
     virtual void SetStandardDeviations(double value);
     double const * GetStandardDeviations();
     virtual void SetSmoothUpdateField(bool const _arg);
     virtual bool GetSmoothUpdateField() const;
     virtual void SmoothUpdateFieldOn();
     virtual void SmoothUpdateFieldOff();
     virtual void SetUpdateFieldStandardDeviations(double * data);
     virtual void SetUpdateFieldStandardDeviations(double value);
     double const * GetUpdateFieldStandardDeviations();
     virtual void StopRegistration();
     virtual void SetMaximumError(double const _arg);
     virtual double GetMaximumError() const;
     virtual void SetMaximumKernelWidth(unsigned int const _arg);
     virtual unsigned int GetMaximumKernelWidth() const;
   private:
     itkPDEDeformableRegistrationFilterID3ID3IVF33(itkPDEDeformableRegistrationFilterID3ID3IVF33 const & arg0);
     void operator=(itkPDEDeformableRegistrationFilterID3ID3IVF33 const & arg0);
   protected:
     itkPDEDeformableRegistrationFilterID3ID3IVF33();
     ~itkPDEDeformableRegistrationFilterID3ID3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual bool Halt();
     virtual void CopyInputToOutput();
     virtual void InitializeIteration();
     virtual void SmoothDeformationField();
     virtual void SmoothUpdateField();
     virtual void PostProcessOutput();
     virtual void Initialize();
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
 };


 class itkPDEDeformableRegistrationFilterID3ID3IVF33_Pointer {
   public:
     itkPDEDeformableRegistrationFilterID3ID3IVF33_Pointer();
     itkPDEDeformableRegistrationFilterID3ID3IVF33_Pointer(itkPDEDeformableRegistrationFilterID3ID3IVF33_Pointer const & p);
     itkPDEDeformableRegistrationFilterID3ID3IVF33_Pointer(itkPDEDeformableRegistrationFilterID3ID3IVF33 * p);
     ~itkPDEDeformableRegistrationFilterID3ID3IVF33_Pointer();
     itkPDEDeformableRegistrationFilterID3ID3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkPDEDeformableRegistrationFilterID3ID3IVF33 * GetPointer() const;
     bool operator<(itkPDEDeformableRegistrationFilterID3ID3IVF33_Pointer const & r) const;
     bool operator>(itkPDEDeformableRegistrationFilterID3ID3IVF33_Pointer const & r) const;
     bool operator<=(itkPDEDeformableRegistrationFilterID3ID3IVF33_Pointer const & r) const;
     bool operator>=(itkPDEDeformableRegistrationFilterID3ID3IVF33_Pointer const & r) const;
     itkPDEDeformableRegistrationFilterID3ID3IVF33_Pointer & operator=(itkPDEDeformableRegistrationFilterID3ID3IVF33_Pointer const & r);
     itkPDEDeformableRegistrationFilterID3ID3IVF33_Pointer & operator=(itkPDEDeformableRegistrationFilterID3ID3IVF33 * r);
     itkPDEDeformableRegistrationFilterID3ID3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkPDEDeformableRegistrationFilterIF2IF2IVF22 : public itkDenseFiniteDifferenceImageFilterIVF22IVF22 {
   public:
     enum  {  ImageDimension = 2 };
     static itkPDEDeformableRegistrationFilterIF2IF2IVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetFixedImage(itkImageF2 const * ptr);
     itkImageF2 const * GetFixedImage() const;
     void SetMovingImage(itkImageF2 const * ptr);
     itkImageF2 const * GetMovingImage() const;
     void SetInitialDeformationField(itkImageVF22 const * ptr);
     itkImageVF22 * GetDeformationField();
     virtual size_t GetNumberOfValidRequiredInputs() const;
     virtual void SetSmoothDeformationField(bool const _arg);
     virtual bool GetSmoothDeformationField() const;
     virtual void SmoothDeformationFieldOn();
     virtual void SmoothDeformationFieldOff();
     virtual void SetStandardDeviations(double * data);
     virtual void SetStandardDeviations(double value);
     double const * GetStandardDeviations();
     virtual void SetSmoothUpdateField(bool const _arg);
     virtual bool GetSmoothUpdateField() const;
     virtual void SmoothUpdateFieldOn();
     virtual void SmoothUpdateFieldOff();
     virtual void SetUpdateFieldStandardDeviations(double * data);
     virtual void SetUpdateFieldStandardDeviations(double value);
     double const * GetUpdateFieldStandardDeviations();
     virtual void StopRegistration();
     virtual void SetMaximumError(double const _arg);
     virtual double GetMaximumError() const;
     virtual void SetMaximumKernelWidth(unsigned int const _arg);
     virtual unsigned int GetMaximumKernelWidth() const;
   private:
     itkPDEDeformableRegistrationFilterIF2IF2IVF22(itkPDEDeformableRegistrationFilterIF2IF2IVF22 const & arg0);
     void operator=(itkPDEDeformableRegistrationFilterIF2IF2IVF22 const & arg0);
   protected:
     itkPDEDeformableRegistrationFilterIF2IF2IVF22();
     ~itkPDEDeformableRegistrationFilterIF2IF2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual bool Halt();
     virtual void CopyInputToOutput();
     virtual void InitializeIteration();
     virtual void SmoothDeformationField();
     virtual void SmoothUpdateField();
     virtual void PostProcessOutput();
     virtual void Initialize();
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
 };


 class itkPDEDeformableRegistrationFilterIF2IF2IVF22_Pointer {
   public:
     itkPDEDeformableRegistrationFilterIF2IF2IVF22_Pointer();
     itkPDEDeformableRegistrationFilterIF2IF2IVF22_Pointer(itkPDEDeformableRegistrationFilterIF2IF2IVF22_Pointer const & p);
     itkPDEDeformableRegistrationFilterIF2IF2IVF22_Pointer(itkPDEDeformableRegistrationFilterIF2IF2IVF22 * p);
     ~itkPDEDeformableRegistrationFilterIF2IF2IVF22_Pointer();
     itkPDEDeformableRegistrationFilterIF2IF2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkPDEDeformableRegistrationFilterIF2IF2IVF22 * GetPointer() const;
     bool operator<(itkPDEDeformableRegistrationFilterIF2IF2IVF22_Pointer const & r) const;
     bool operator>(itkPDEDeformableRegistrationFilterIF2IF2IVF22_Pointer const & r) const;
     bool operator<=(itkPDEDeformableRegistrationFilterIF2IF2IVF22_Pointer const & r) const;
     bool operator>=(itkPDEDeformableRegistrationFilterIF2IF2IVF22_Pointer const & r) const;
     itkPDEDeformableRegistrationFilterIF2IF2IVF22_Pointer & operator=(itkPDEDeformableRegistrationFilterIF2IF2IVF22_Pointer const & r);
     itkPDEDeformableRegistrationFilterIF2IF2IVF22_Pointer & operator=(itkPDEDeformableRegistrationFilterIF2IF2IVF22 * r);
     itkPDEDeformableRegistrationFilterIF2IF2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkPDEDeformableRegistrationFilterIF3IF3IVF33 : public itkDenseFiniteDifferenceImageFilterIVF33IVF33 {
   public:
     enum  {  ImageDimension = 3 };
     static itkPDEDeformableRegistrationFilterIF3IF3IVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetFixedImage(itkImageF3 const * ptr);
     itkImageF3 const * GetFixedImage() const;
     void SetMovingImage(itkImageF3 const * ptr);
     itkImageF3 const * GetMovingImage() const;
     void SetInitialDeformationField(itkImageVF33 const * ptr);
     itkImageVF33 * GetDeformationField();
     virtual size_t GetNumberOfValidRequiredInputs() const;
     virtual void SetSmoothDeformationField(bool const _arg);
     virtual bool GetSmoothDeformationField() const;
     virtual void SmoothDeformationFieldOn();
     virtual void SmoothDeformationFieldOff();
     virtual void SetStandardDeviations(double * data);
     virtual void SetStandardDeviations(double value);
     double const * GetStandardDeviations();
     virtual void SetSmoothUpdateField(bool const _arg);
     virtual bool GetSmoothUpdateField() const;
     virtual void SmoothUpdateFieldOn();
     virtual void SmoothUpdateFieldOff();
     virtual void SetUpdateFieldStandardDeviations(double * data);
     virtual void SetUpdateFieldStandardDeviations(double value);
     double const * GetUpdateFieldStandardDeviations();
     virtual void StopRegistration();
     virtual void SetMaximumError(double const _arg);
     virtual double GetMaximumError() const;
     virtual void SetMaximumKernelWidth(unsigned int const _arg);
     virtual unsigned int GetMaximumKernelWidth() const;
   private:
     itkPDEDeformableRegistrationFilterIF3IF3IVF33(itkPDEDeformableRegistrationFilterIF3IF3IVF33 const & arg0);
     void operator=(itkPDEDeformableRegistrationFilterIF3IF3IVF33 const & arg0);
   protected:
     itkPDEDeformableRegistrationFilterIF3IF3IVF33();
     ~itkPDEDeformableRegistrationFilterIF3IF3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual bool Halt();
     virtual void CopyInputToOutput();
     virtual void InitializeIteration();
     virtual void SmoothDeformationField();
     virtual void SmoothUpdateField();
     virtual void PostProcessOutput();
     virtual void Initialize();
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
 };


 class itkPDEDeformableRegistrationFilterIF3IF3IVF33_Pointer {
   public:
     itkPDEDeformableRegistrationFilterIF3IF3IVF33_Pointer();
     itkPDEDeformableRegistrationFilterIF3IF3IVF33_Pointer(itkPDEDeformableRegistrationFilterIF3IF3IVF33_Pointer const & p);
     itkPDEDeformableRegistrationFilterIF3IF3IVF33_Pointer(itkPDEDeformableRegistrationFilterIF3IF3IVF33 * p);
     ~itkPDEDeformableRegistrationFilterIF3IF3IVF33_Pointer();
     itkPDEDeformableRegistrationFilterIF3IF3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkPDEDeformableRegistrationFilterIF3IF3IVF33 * GetPointer() const;
     bool operator<(itkPDEDeformableRegistrationFilterIF3IF3IVF33_Pointer const & r) const;
     bool operator>(itkPDEDeformableRegistrationFilterIF3IF3IVF33_Pointer const & r) const;
     bool operator<=(itkPDEDeformableRegistrationFilterIF3IF3IVF33_Pointer const & r) const;
     bool operator>=(itkPDEDeformableRegistrationFilterIF3IF3IVF33_Pointer const & r) const;
     itkPDEDeformableRegistrationFilterIF3IF3IVF33_Pointer & operator=(itkPDEDeformableRegistrationFilterIF3IF3IVF33_Pointer const & r);
     itkPDEDeformableRegistrationFilterIF3IF3IVF33_Pointer & operator=(itkPDEDeformableRegistrationFilterIF3IF3IVF33 * r);
     itkPDEDeformableRegistrationFilterIF3IF3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkPDEDeformableRegistrationFilterIUC2IUC2IVF22 : public itkDenseFiniteDifferenceImageFilterIVF22IVF22 {
   public:
     enum  {  ImageDimension = 2 };
     static itkPDEDeformableRegistrationFilterIUC2IUC2IVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetFixedImage(itkImageUC2 const * ptr);
     itkImageUC2 const * GetFixedImage() const;
     void SetMovingImage(itkImageUC2 const * ptr);
     itkImageUC2 const * GetMovingImage() const;
     void SetInitialDeformationField(itkImageVF22 const * ptr);
     itkImageVF22 * GetDeformationField();
     virtual size_t GetNumberOfValidRequiredInputs() const;
     virtual void SetSmoothDeformationField(bool const _arg);
     virtual bool GetSmoothDeformationField() const;
     virtual void SmoothDeformationFieldOn();
     virtual void SmoothDeformationFieldOff();
     virtual void SetStandardDeviations(double * data);
     virtual void SetStandardDeviations(double value);
     double const * GetStandardDeviations();
     virtual void SetSmoothUpdateField(bool const _arg);
     virtual bool GetSmoothUpdateField() const;
     virtual void SmoothUpdateFieldOn();
     virtual void SmoothUpdateFieldOff();
     virtual void SetUpdateFieldStandardDeviations(double * data);
     virtual void SetUpdateFieldStandardDeviations(double value);
     double const * GetUpdateFieldStandardDeviations();
     virtual void StopRegistration();
     virtual void SetMaximumError(double const _arg);
     virtual double GetMaximumError() const;
     virtual void SetMaximumKernelWidth(unsigned int const _arg);
     virtual unsigned int GetMaximumKernelWidth() const;
   private:
     itkPDEDeformableRegistrationFilterIUC2IUC2IVF22(itkPDEDeformableRegistrationFilterIUC2IUC2IVF22 const & arg0);
     void operator=(itkPDEDeformableRegistrationFilterIUC2IUC2IVF22 const & arg0);
   protected:
     itkPDEDeformableRegistrationFilterIUC2IUC2IVF22();
     ~itkPDEDeformableRegistrationFilterIUC2IUC2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual bool Halt();
     virtual void CopyInputToOutput();
     virtual void InitializeIteration();
     virtual void SmoothDeformationField();
     virtual void SmoothUpdateField();
     virtual void PostProcessOutput();
     virtual void Initialize();
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
 };


 class itkPDEDeformableRegistrationFilterIUC2IUC2IVF22_Pointer {
   public:
     itkPDEDeformableRegistrationFilterIUC2IUC2IVF22_Pointer();
     itkPDEDeformableRegistrationFilterIUC2IUC2IVF22_Pointer(itkPDEDeformableRegistrationFilterIUC2IUC2IVF22_Pointer const & p);
     itkPDEDeformableRegistrationFilterIUC2IUC2IVF22_Pointer(itkPDEDeformableRegistrationFilterIUC2IUC2IVF22 * p);
     ~itkPDEDeformableRegistrationFilterIUC2IUC2IVF22_Pointer();
     itkPDEDeformableRegistrationFilterIUC2IUC2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkPDEDeformableRegistrationFilterIUC2IUC2IVF22 * GetPointer() const;
     bool operator<(itkPDEDeformableRegistrationFilterIUC2IUC2IVF22_Pointer const & r) const;
     bool operator>(itkPDEDeformableRegistrationFilterIUC2IUC2IVF22_Pointer const & r) const;
     bool operator<=(itkPDEDeformableRegistrationFilterIUC2IUC2IVF22_Pointer const & r) const;
     bool operator>=(itkPDEDeformableRegistrationFilterIUC2IUC2IVF22_Pointer const & r) const;
     itkPDEDeformableRegistrationFilterIUC2IUC2IVF22_Pointer & operator=(itkPDEDeformableRegistrationFilterIUC2IUC2IVF22_Pointer const & r);
     itkPDEDeformableRegistrationFilterIUC2IUC2IVF22_Pointer & operator=(itkPDEDeformableRegistrationFilterIUC2IUC2IVF22 * r);
     itkPDEDeformableRegistrationFilterIUC2IUC2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkPDEDeformableRegistrationFilterIUC3IUC3IVF33 : public itkDenseFiniteDifferenceImageFilterIVF33IVF33 {
   public:
     enum  {  ImageDimension = 3 };
     static itkPDEDeformableRegistrationFilterIUC3IUC3IVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetFixedImage(itkImageUC3 const * ptr);
     itkImageUC3 const * GetFixedImage() const;
     void SetMovingImage(itkImageUC3 const * ptr);
     itkImageUC3 const * GetMovingImage() const;
     void SetInitialDeformationField(itkImageVF33 const * ptr);
     itkImageVF33 * GetDeformationField();
     virtual size_t GetNumberOfValidRequiredInputs() const;
     virtual void SetSmoothDeformationField(bool const _arg);
     virtual bool GetSmoothDeformationField() const;
     virtual void SmoothDeformationFieldOn();
     virtual void SmoothDeformationFieldOff();
     virtual void SetStandardDeviations(double * data);
     virtual void SetStandardDeviations(double value);
     double const * GetStandardDeviations();
     virtual void SetSmoothUpdateField(bool const _arg);
     virtual bool GetSmoothUpdateField() const;
     virtual void SmoothUpdateFieldOn();
     virtual void SmoothUpdateFieldOff();
     virtual void SetUpdateFieldStandardDeviations(double * data);
     virtual void SetUpdateFieldStandardDeviations(double value);
     double const * GetUpdateFieldStandardDeviations();
     virtual void StopRegistration();
     virtual void SetMaximumError(double const _arg);
     virtual double GetMaximumError() const;
     virtual void SetMaximumKernelWidth(unsigned int const _arg);
     virtual unsigned int GetMaximumKernelWidth() const;
   private:
     itkPDEDeformableRegistrationFilterIUC3IUC3IVF33(itkPDEDeformableRegistrationFilterIUC3IUC3IVF33 const & arg0);
     void operator=(itkPDEDeformableRegistrationFilterIUC3IUC3IVF33 const & arg0);
   protected:
     itkPDEDeformableRegistrationFilterIUC3IUC3IVF33();
     ~itkPDEDeformableRegistrationFilterIUC3IUC3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual bool Halt();
     virtual void CopyInputToOutput();
     virtual void InitializeIteration();
     virtual void SmoothDeformationField();
     virtual void SmoothUpdateField();
     virtual void PostProcessOutput();
     virtual void Initialize();
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
 };


 class itkPDEDeformableRegistrationFilterIUC3IUC3IVF33_Pointer {
   public:
     itkPDEDeformableRegistrationFilterIUC3IUC3IVF33_Pointer();
     itkPDEDeformableRegistrationFilterIUC3IUC3IVF33_Pointer(itkPDEDeformableRegistrationFilterIUC3IUC3IVF33_Pointer const & p);
     itkPDEDeformableRegistrationFilterIUC3IUC3IVF33_Pointer(itkPDEDeformableRegistrationFilterIUC3IUC3IVF33 * p);
     ~itkPDEDeformableRegistrationFilterIUC3IUC3IVF33_Pointer();
     itkPDEDeformableRegistrationFilterIUC3IUC3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkPDEDeformableRegistrationFilterIUC3IUC3IVF33 * GetPointer() const;
     bool operator<(itkPDEDeformableRegistrationFilterIUC3IUC3IVF33_Pointer const & r) const;
     bool operator>(itkPDEDeformableRegistrationFilterIUC3IUC3IVF33_Pointer const & r) const;
     bool operator<=(itkPDEDeformableRegistrationFilterIUC3IUC3IVF33_Pointer const & r) const;
     bool operator>=(itkPDEDeformableRegistrationFilterIUC3IUC3IVF33_Pointer const & r) const;
     itkPDEDeformableRegistrationFilterIUC3IUC3IVF33_Pointer & operator=(itkPDEDeformableRegistrationFilterIUC3IUC3IVF33_Pointer const & r);
     itkPDEDeformableRegistrationFilterIUC3IUC3IVF33_Pointer & operator=(itkPDEDeformableRegistrationFilterIUC3IUC3IVF33 * r);
     itkPDEDeformableRegistrationFilterIUC3IUC3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkPDEDeformableRegistrationFilterIUL2IUL2IVF22 : public itkDenseFiniteDifferenceImageFilterIVF22IVF22 {
   public:
     enum  {  ImageDimension = 2 };
     static itkPDEDeformableRegistrationFilterIUL2IUL2IVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetFixedImage(itkImageUL2 const * ptr);
     itkImageUL2 const * GetFixedImage() const;
     void SetMovingImage(itkImageUL2 const * ptr);
     itkImageUL2 const * GetMovingImage() const;
     void SetInitialDeformationField(itkImageVF22 const * ptr);
     itkImageVF22 * GetDeformationField();
     virtual size_t GetNumberOfValidRequiredInputs() const;
     virtual void SetSmoothDeformationField(bool const _arg);
     virtual bool GetSmoothDeformationField() const;
     virtual void SmoothDeformationFieldOn();
     virtual void SmoothDeformationFieldOff();
     virtual void SetStandardDeviations(double * data);
     virtual void SetStandardDeviations(double value);
     double const * GetStandardDeviations();
     virtual void SetSmoothUpdateField(bool const _arg);
     virtual bool GetSmoothUpdateField() const;
     virtual void SmoothUpdateFieldOn();
     virtual void SmoothUpdateFieldOff();
     virtual void SetUpdateFieldStandardDeviations(double * data);
     virtual void SetUpdateFieldStandardDeviations(double value);
     double const * GetUpdateFieldStandardDeviations();
     virtual void StopRegistration();
     virtual void SetMaximumError(double const _arg);
     virtual double GetMaximumError() const;
     virtual void SetMaximumKernelWidth(unsigned int const _arg);
     virtual unsigned int GetMaximumKernelWidth() const;
   private:
     itkPDEDeformableRegistrationFilterIUL2IUL2IVF22(itkPDEDeformableRegistrationFilterIUL2IUL2IVF22 const & arg0);
     void operator=(itkPDEDeformableRegistrationFilterIUL2IUL2IVF22 const & arg0);
   protected:
     itkPDEDeformableRegistrationFilterIUL2IUL2IVF22();
     ~itkPDEDeformableRegistrationFilterIUL2IUL2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual bool Halt();
     virtual void CopyInputToOutput();
     virtual void InitializeIteration();
     virtual void SmoothDeformationField();
     virtual void SmoothUpdateField();
     virtual void PostProcessOutput();
     virtual void Initialize();
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
 };


 class itkPDEDeformableRegistrationFilterIUL2IUL2IVF22_Pointer {
   public:
     itkPDEDeformableRegistrationFilterIUL2IUL2IVF22_Pointer();
     itkPDEDeformableRegistrationFilterIUL2IUL2IVF22_Pointer(itkPDEDeformableRegistrationFilterIUL2IUL2IVF22_Pointer const & p);
     itkPDEDeformableRegistrationFilterIUL2IUL2IVF22_Pointer(itkPDEDeformableRegistrationFilterIUL2IUL2IVF22 * p);
     ~itkPDEDeformableRegistrationFilterIUL2IUL2IVF22_Pointer();
     itkPDEDeformableRegistrationFilterIUL2IUL2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkPDEDeformableRegistrationFilterIUL2IUL2IVF22 * GetPointer() const;
     bool operator<(itkPDEDeformableRegistrationFilterIUL2IUL2IVF22_Pointer const & r) const;
     bool operator>(itkPDEDeformableRegistrationFilterIUL2IUL2IVF22_Pointer const & r) const;
     bool operator<=(itkPDEDeformableRegistrationFilterIUL2IUL2IVF22_Pointer const & r) const;
     bool operator>=(itkPDEDeformableRegistrationFilterIUL2IUL2IVF22_Pointer const & r) const;
     itkPDEDeformableRegistrationFilterIUL2IUL2IVF22_Pointer & operator=(itkPDEDeformableRegistrationFilterIUL2IUL2IVF22_Pointer const & r);
     itkPDEDeformableRegistrationFilterIUL2IUL2IVF22_Pointer & operator=(itkPDEDeformableRegistrationFilterIUL2IUL2IVF22 * r);
     itkPDEDeformableRegistrationFilterIUL2IUL2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkPDEDeformableRegistrationFilterIUL3IUL3IVF33 : public itkDenseFiniteDifferenceImageFilterIVF33IVF33 {
   public:
     enum  {  ImageDimension = 3 };
     static itkPDEDeformableRegistrationFilterIUL3IUL3IVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetFixedImage(itkImageUL3 const * ptr);
     itkImageUL3 const * GetFixedImage() const;
     void SetMovingImage(itkImageUL3 const * ptr);
     itkImageUL3 const * GetMovingImage() const;
     void SetInitialDeformationField(itkImageVF33 const * ptr);
     itkImageVF33 * GetDeformationField();
     virtual size_t GetNumberOfValidRequiredInputs() const;
     virtual void SetSmoothDeformationField(bool const _arg);
     virtual bool GetSmoothDeformationField() const;
     virtual void SmoothDeformationFieldOn();
     virtual void SmoothDeformationFieldOff();
     virtual void SetStandardDeviations(double * data);
     virtual void SetStandardDeviations(double value);
     double const * GetStandardDeviations();
     virtual void SetSmoothUpdateField(bool const _arg);
     virtual bool GetSmoothUpdateField() const;
     virtual void SmoothUpdateFieldOn();
     virtual void SmoothUpdateFieldOff();
     virtual void SetUpdateFieldStandardDeviations(double * data);
     virtual void SetUpdateFieldStandardDeviations(double value);
     double const * GetUpdateFieldStandardDeviations();
     virtual void StopRegistration();
     virtual void SetMaximumError(double const _arg);
     virtual double GetMaximumError() const;
     virtual void SetMaximumKernelWidth(unsigned int const _arg);
     virtual unsigned int GetMaximumKernelWidth() const;
   private:
     itkPDEDeformableRegistrationFilterIUL3IUL3IVF33(itkPDEDeformableRegistrationFilterIUL3IUL3IVF33 const & arg0);
     void operator=(itkPDEDeformableRegistrationFilterIUL3IUL3IVF33 const & arg0);
   protected:
     itkPDEDeformableRegistrationFilterIUL3IUL3IVF33();
     ~itkPDEDeformableRegistrationFilterIUL3IUL3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual bool Halt();
     virtual void CopyInputToOutput();
     virtual void InitializeIteration();
     virtual void SmoothDeformationField();
     virtual void SmoothUpdateField();
     virtual void PostProcessOutput();
     virtual void Initialize();
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
 };


 class itkPDEDeformableRegistrationFilterIUL3IUL3IVF33_Pointer {
   public:
     itkPDEDeformableRegistrationFilterIUL3IUL3IVF33_Pointer();
     itkPDEDeformableRegistrationFilterIUL3IUL3IVF33_Pointer(itkPDEDeformableRegistrationFilterIUL3IUL3IVF33_Pointer const & p);
     itkPDEDeformableRegistrationFilterIUL3IUL3IVF33_Pointer(itkPDEDeformableRegistrationFilterIUL3IUL3IVF33 * p);
     ~itkPDEDeformableRegistrationFilterIUL3IUL3IVF33_Pointer();
     itkPDEDeformableRegistrationFilterIUL3IUL3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkPDEDeformableRegistrationFilterIUL3IUL3IVF33 * GetPointer() const;
     bool operator<(itkPDEDeformableRegistrationFilterIUL3IUL3IVF33_Pointer const & r) const;
     bool operator>(itkPDEDeformableRegistrationFilterIUL3IUL3IVF33_Pointer const & r) const;
     bool operator<=(itkPDEDeformableRegistrationFilterIUL3IUL3IVF33_Pointer const & r) const;
     bool operator>=(itkPDEDeformableRegistrationFilterIUL3IUL3IVF33_Pointer const & r) const;
     itkPDEDeformableRegistrationFilterIUL3IUL3IVF33_Pointer & operator=(itkPDEDeformableRegistrationFilterIUL3IUL3IVF33_Pointer const & r);
     itkPDEDeformableRegistrationFilterIUL3IUL3IVF33_Pointer & operator=(itkPDEDeformableRegistrationFilterIUL3IUL3IVF33 * r);
     itkPDEDeformableRegistrationFilterIUL3IUL3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkPDEDeformableRegistrationFilterIUS2IUS2IVF22 : public itkDenseFiniteDifferenceImageFilterIVF22IVF22 {
   public:
     enum  {  ImageDimension = 2 };
     static itkPDEDeformableRegistrationFilterIUS2IUS2IVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetFixedImage(itkImageUS2 const * ptr);
     itkImageUS2 const * GetFixedImage() const;
     void SetMovingImage(itkImageUS2 const * ptr);
     itkImageUS2 const * GetMovingImage() const;
     void SetInitialDeformationField(itkImageVF22 const * ptr);
     itkImageVF22 * GetDeformationField();
     virtual size_t GetNumberOfValidRequiredInputs() const;
     virtual void SetSmoothDeformationField(bool const _arg);
     virtual bool GetSmoothDeformationField() const;
     virtual void SmoothDeformationFieldOn();
     virtual void SmoothDeformationFieldOff();
     virtual void SetStandardDeviations(double * data);
     virtual void SetStandardDeviations(double value);
     double const * GetStandardDeviations();
     virtual void SetSmoothUpdateField(bool const _arg);
     virtual bool GetSmoothUpdateField() const;
     virtual void SmoothUpdateFieldOn();
     virtual void SmoothUpdateFieldOff();
     virtual void SetUpdateFieldStandardDeviations(double * data);
     virtual void SetUpdateFieldStandardDeviations(double value);
     double const * GetUpdateFieldStandardDeviations();
     virtual void StopRegistration();
     virtual void SetMaximumError(double const _arg);
     virtual double GetMaximumError() const;
     virtual void SetMaximumKernelWidth(unsigned int const _arg);
     virtual unsigned int GetMaximumKernelWidth() const;
   private:
     itkPDEDeformableRegistrationFilterIUS2IUS2IVF22(itkPDEDeformableRegistrationFilterIUS2IUS2IVF22 const & arg0);
     void operator=(itkPDEDeformableRegistrationFilterIUS2IUS2IVF22 const & arg0);
   protected:
     itkPDEDeformableRegistrationFilterIUS2IUS2IVF22();
     ~itkPDEDeformableRegistrationFilterIUS2IUS2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual bool Halt();
     virtual void CopyInputToOutput();
     virtual void InitializeIteration();
     virtual void SmoothDeformationField();
     virtual void SmoothUpdateField();
     virtual void PostProcessOutput();
     virtual void Initialize();
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
 };


 class itkPDEDeformableRegistrationFilterIUS2IUS2IVF22_Pointer {
   public:
     itkPDEDeformableRegistrationFilterIUS2IUS2IVF22_Pointer();
     itkPDEDeformableRegistrationFilterIUS2IUS2IVF22_Pointer(itkPDEDeformableRegistrationFilterIUS2IUS2IVF22_Pointer const & p);
     itkPDEDeformableRegistrationFilterIUS2IUS2IVF22_Pointer(itkPDEDeformableRegistrationFilterIUS2IUS2IVF22 * p);
     ~itkPDEDeformableRegistrationFilterIUS2IUS2IVF22_Pointer();
     itkPDEDeformableRegistrationFilterIUS2IUS2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkPDEDeformableRegistrationFilterIUS2IUS2IVF22 * GetPointer() const;
     bool operator<(itkPDEDeformableRegistrationFilterIUS2IUS2IVF22_Pointer const & r) const;
     bool operator>(itkPDEDeformableRegistrationFilterIUS2IUS2IVF22_Pointer const & r) const;
     bool operator<=(itkPDEDeformableRegistrationFilterIUS2IUS2IVF22_Pointer const & r) const;
     bool operator>=(itkPDEDeformableRegistrationFilterIUS2IUS2IVF22_Pointer const & r) const;
     itkPDEDeformableRegistrationFilterIUS2IUS2IVF22_Pointer & operator=(itkPDEDeformableRegistrationFilterIUS2IUS2IVF22_Pointer const & r);
     itkPDEDeformableRegistrationFilterIUS2IUS2IVF22_Pointer & operator=(itkPDEDeformableRegistrationFilterIUS2IUS2IVF22 * r);
     itkPDEDeformableRegistrationFilterIUS2IUS2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkPDEDeformableRegistrationFilterIUS3IUS3IVF33 : public itkDenseFiniteDifferenceImageFilterIVF33IVF33 {
   public:
     enum  {  ImageDimension = 3 };
     static itkPDEDeformableRegistrationFilterIUS3IUS3IVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetFixedImage(itkImageUS3 const * ptr);
     itkImageUS3 const * GetFixedImage() const;
     void SetMovingImage(itkImageUS3 const * ptr);
     itkImageUS3 const * GetMovingImage() const;
     void SetInitialDeformationField(itkImageVF33 const * ptr);
     itkImageVF33 * GetDeformationField();
     virtual size_t GetNumberOfValidRequiredInputs() const;
     virtual void SetSmoothDeformationField(bool const _arg);
     virtual bool GetSmoothDeformationField() const;
     virtual void SmoothDeformationFieldOn();
     virtual void SmoothDeformationFieldOff();
     virtual void SetStandardDeviations(double * data);
     virtual void SetStandardDeviations(double value);
     double const * GetStandardDeviations();
     virtual void SetSmoothUpdateField(bool const _arg);
     virtual bool GetSmoothUpdateField() const;
     virtual void SmoothUpdateFieldOn();
     virtual void SmoothUpdateFieldOff();
     virtual void SetUpdateFieldStandardDeviations(double * data);
     virtual void SetUpdateFieldStandardDeviations(double value);
     double const * GetUpdateFieldStandardDeviations();
     virtual void StopRegistration();
     virtual void SetMaximumError(double const _arg);
     virtual double GetMaximumError() const;
     virtual void SetMaximumKernelWidth(unsigned int const _arg);
     virtual unsigned int GetMaximumKernelWidth() const;
   private:
     itkPDEDeformableRegistrationFilterIUS3IUS3IVF33(itkPDEDeformableRegistrationFilterIUS3IUS3IVF33 const & arg0);
     void operator=(itkPDEDeformableRegistrationFilterIUS3IUS3IVF33 const & arg0);
   protected:
     itkPDEDeformableRegistrationFilterIUS3IUS3IVF33();
     ~itkPDEDeformableRegistrationFilterIUS3IUS3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual bool Halt();
     virtual void CopyInputToOutput();
     virtual void InitializeIteration();
     virtual void SmoothDeformationField();
     virtual void SmoothUpdateField();
     virtual void PostProcessOutput();
     virtual void Initialize();
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
 };


 class itkPDEDeformableRegistrationFilterIUS3IUS3IVF33_Pointer {
   public:
     itkPDEDeformableRegistrationFilterIUS3IUS3IVF33_Pointer();
     itkPDEDeformableRegistrationFilterIUS3IUS3IVF33_Pointer(itkPDEDeformableRegistrationFilterIUS3IUS3IVF33_Pointer const & p);
     itkPDEDeformableRegistrationFilterIUS3IUS3IVF33_Pointer(itkPDEDeformableRegistrationFilterIUS3IUS3IVF33 * p);
     ~itkPDEDeformableRegistrationFilterIUS3IUS3IVF33_Pointer();
     itkPDEDeformableRegistrationFilterIUS3IUS3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkPDEDeformableRegistrationFilterIUS3IUS3IVF33 * GetPointer() const;
     bool operator<(itkPDEDeformableRegistrationFilterIUS3IUS3IVF33_Pointer const & r) const;
     bool operator>(itkPDEDeformableRegistrationFilterIUS3IUS3IVF33_Pointer const & r) const;
     bool operator<=(itkPDEDeformableRegistrationFilterIUS3IUS3IVF33_Pointer const & r) const;
     bool operator>=(itkPDEDeformableRegistrationFilterIUS3IUS3IVF33_Pointer const & r) const;
     itkPDEDeformableRegistrationFilterIUS3IUS3IVF33_Pointer & operator=(itkPDEDeformableRegistrationFilterIUS3IUS3IVF33_Pointer const & r);
     itkPDEDeformableRegistrationFilterIUS3IUS3IVF33_Pointer & operator=(itkPDEDeformableRegistrationFilterIUS3IUS3IVF33 * r);
     itkPDEDeformableRegistrationFilterIUS3IUS3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


