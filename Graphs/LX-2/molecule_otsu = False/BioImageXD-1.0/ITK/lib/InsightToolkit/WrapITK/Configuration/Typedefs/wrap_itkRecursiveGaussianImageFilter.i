// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkRecursiveGaussianImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkRecursiveGaussianImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkRecursiveGaussianImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkRecursiveGaussianImageFilterJava
#endif
#ifdef SWIGLUA
%module itkRecursiveGaussianImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkRecursiveGaussianImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkRecursiveGaussianImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkRecursiveGaussianImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkRecursiveGaussianImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkRecursiveGaussianImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkRecursiveGaussianImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkRecursiveGaussianImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkRecursiveGaussianImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkRecursiveGaussianImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkRecursiveGaussianImageFilterPython
#endif
#ifdef SWIGR
%module itkRecursiveGaussianImageFilterR
#endif
#ifdef SWIGRUBY
%module itkRecursiveGaussianImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkRecursiveGaussianImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkRecursiveGaussianImageFilterTcl
#endif
#ifdef SWIGXML
%module itkRecursiveGaussianImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Filtering.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkRecursiveSeparableImageFilter.i


%include itk.i
%include wrap_itkRecursiveGaussianImageFilter_ext.i


 class itkRecursiveGaussianImageFilterID2ID2 : public itkRecursiveSeparableImageFilterID2ID2 {
   public:
     enum OrderEnumType {  ZeroOrder = 0,  FirstOrder = 1,  SecondOrder = 2 };
     static itkRecursiveGaussianImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual double GetSigma() const;
     virtual void SetSigma(double const _arg);
     virtual void SetNormalizeAcrossScale(bool const _arg);
     virtual bool GetNormalizeAcrossScale() const;
     virtual void SetOrder(itkRecursiveGaussianImageFilterID2ID2::OrderEnumType const _arg);
     virtual itkRecursiveGaussianImageFilterID2ID2::OrderEnumType GetOrder() const;
     void SetZeroOrder();
     void SetFirstOrder();
     void SetSecondOrder();
   private:
     itkRecursiveGaussianImageFilterID2ID2(itkRecursiveGaussianImageFilterID2ID2 const & arg0);
     void operator=(itkRecursiveGaussianImageFilterID2ID2 const & arg0);
     void ComputeNCoefficients(double sigmad, double A1, double B1, double W1, double L1, double A2, double B2, double W2, double L2, double & N0, double & N1, double & N2, double & N3, double & SN, double & DN, double & EN);
     void ComputeDCoefficients(double sigmad, double W1, double L1, double W2, double L2, double & SD, double & DD, double & ED);
     void ComputeRemainingCoefficients(bool symmetric);
   protected:
     itkRecursiveGaussianImageFilterID2ID2();
     ~itkRecursiveGaussianImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void SetUp(double spacing);
 };


 class itkRecursiveGaussianImageFilterID2ID2_Pointer {
   public:
     itkRecursiveGaussianImageFilterID2ID2_Pointer();
     itkRecursiveGaussianImageFilterID2ID2_Pointer(itkRecursiveGaussianImageFilterID2ID2_Pointer const & p);
     itkRecursiveGaussianImageFilterID2ID2_Pointer(itkRecursiveGaussianImageFilterID2ID2 * p);
     ~itkRecursiveGaussianImageFilterID2ID2_Pointer();
     itkRecursiveGaussianImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRecursiveGaussianImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkRecursiveGaussianImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkRecursiveGaussianImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkRecursiveGaussianImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkRecursiveGaussianImageFilterID2ID2_Pointer const & r) const;
     itkRecursiveGaussianImageFilterID2ID2_Pointer & operator=(itkRecursiveGaussianImageFilterID2ID2_Pointer const & r);
     itkRecursiveGaussianImageFilterID2ID2_Pointer & operator=(itkRecursiveGaussianImageFilterID2ID2 * r);
     itkRecursiveGaussianImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRecursiveGaussianImageFilterID3ID3 : public itkRecursiveSeparableImageFilterID3ID3 {
   public:
     enum OrderEnumType {  ZeroOrder = 0,  FirstOrder = 1,  SecondOrder = 2 };
     static itkRecursiveGaussianImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual double GetSigma() const;
     virtual void SetSigma(double const _arg);
     virtual void SetNormalizeAcrossScale(bool const _arg);
     virtual bool GetNormalizeAcrossScale() const;
     virtual void SetOrder(itkRecursiveGaussianImageFilterID3ID3::OrderEnumType const _arg);
     virtual itkRecursiveGaussianImageFilterID3ID3::OrderEnumType GetOrder() const;
     void SetZeroOrder();
     void SetFirstOrder();
     void SetSecondOrder();
   private:
     itkRecursiveGaussianImageFilterID3ID3(itkRecursiveGaussianImageFilterID3ID3 const & arg0);
     void operator=(itkRecursiveGaussianImageFilterID3ID3 const & arg0);
     void ComputeNCoefficients(double sigmad, double A1, double B1, double W1, double L1, double A2, double B2, double W2, double L2, double & N0, double & N1, double & N2, double & N3, double & SN, double & DN, double & EN);
     void ComputeDCoefficients(double sigmad, double W1, double L1, double W2, double L2, double & SD, double & DD, double & ED);
     void ComputeRemainingCoefficients(bool symmetric);
   protected:
     itkRecursiveGaussianImageFilterID3ID3();
     ~itkRecursiveGaussianImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void SetUp(double spacing);
 };


 class itkRecursiveGaussianImageFilterID3ID3_Pointer {
   public:
     itkRecursiveGaussianImageFilterID3ID3_Pointer();
     itkRecursiveGaussianImageFilterID3ID3_Pointer(itkRecursiveGaussianImageFilterID3ID3_Pointer const & p);
     itkRecursiveGaussianImageFilterID3ID3_Pointer(itkRecursiveGaussianImageFilterID3ID3 * p);
     ~itkRecursiveGaussianImageFilterID3ID3_Pointer();
     itkRecursiveGaussianImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRecursiveGaussianImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkRecursiveGaussianImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkRecursiveGaussianImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkRecursiveGaussianImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkRecursiveGaussianImageFilterID3ID3_Pointer const & r) const;
     itkRecursiveGaussianImageFilterID3ID3_Pointer & operator=(itkRecursiveGaussianImageFilterID3ID3_Pointer const & r);
     itkRecursiveGaussianImageFilterID3ID3_Pointer & operator=(itkRecursiveGaussianImageFilterID3ID3 * r);
     itkRecursiveGaussianImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRecursiveGaussianImageFilterIF2IF2 : public itkRecursiveSeparableImageFilterIF2IF2 {
   public:
     enum OrderEnumType {  ZeroOrder = 0,  FirstOrder = 1,  SecondOrder = 2 };
     static itkRecursiveGaussianImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual double GetSigma() const;
     virtual void SetSigma(double const _arg);
     virtual void SetNormalizeAcrossScale(bool const _arg);
     virtual bool GetNormalizeAcrossScale() const;
     virtual void SetOrder(itkRecursiveGaussianImageFilterIF2IF2::OrderEnumType const _arg);
     virtual itkRecursiveGaussianImageFilterIF2IF2::OrderEnumType GetOrder() const;
     void SetZeroOrder();
     void SetFirstOrder();
     void SetSecondOrder();
   private:
     itkRecursiveGaussianImageFilterIF2IF2(itkRecursiveGaussianImageFilterIF2IF2 const & arg0);
     void operator=(itkRecursiveGaussianImageFilterIF2IF2 const & arg0);
     void ComputeNCoefficients(double sigmad, double A1, double B1, double W1, double L1, double A2, double B2, double W2, double L2, double & N0, double & N1, double & N2, double & N3, double & SN, double & DN, double & EN);
     void ComputeDCoefficients(double sigmad, double W1, double L1, double W2, double L2, double & SD, double & DD, double & ED);
     void ComputeRemainingCoefficients(bool symmetric);
   protected:
     itkRecursiveGaussianImageFilterIF2IF2();
     ~itkRecursiveGaussianImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void SetUp(double spacing);
 };


 class itkRecursiveGaussianImageFilterIF2IF2_Pointer {
   public:
     itkRecursiveGaussianImageFilterIF2IF2_Pointer();
     itkRecursiveGaussianImageFilterIF2IF2_Pointer(itkRecursiveGaussianImageFilterIF2IF2_Pointer const & p);
     itkRecursiveGaussianImageFilterIF2IF2_Pointer(itkRecursiveGaussianImageFilterIF2IF2 * p);
     ~itkRecursiveGaussianImageFilterIF2IF2_Pointer();
     itkRecursiveGaussianImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRecursiveGaussianImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkRecursiveGaussianImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkRecursiveGaussianImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkRecursiveGaussianImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkRecursiveGaussianImageFilterIF2IF2_Pointer const & r) const;
     itkRecursiveGaussianImageFilterIF2IF2_Pointer & operator=(itkRecursiveGaussianImageFilterIF2IF2_Pointer const & r);
     itkRecursiveGaussianImageFilterIF2IF2_Pointer & operator=(itkRecursiveGaussianImageFilterIF2IF2 * r);
     itkRecursiveGaussianImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRecursiveGaussianImageFilterIF3IF3 : public itkRecursiveSeparableImageFilterIF3IF3 {
   public:
     enum OrderEnumType {  ZeroOrder = 0,  FirstOrder = 1,  SecondOrder = 2 };
     static itkRecursiveGaussianImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual double GetSigma() const;
     virtual void SetSigma(double const _arg);
     virtual void SetNormalizeAcrossScale(bool const _arg);
     virtual bool GetNormalizeAcrossScale() const;
     virtual void SetOrder(itkRecursiveGaussianImageFilterIF3IF3::OrderEnumType const _arg);
     virtual itkRecursiveGaussianImageFilterIF3IF3::OrderEnumType GetOrder() const;
     void SetZeroOrder();
     void SetFirstOrder();
     void SetSecondOrder();
   private:
     itkRecursiveGaussianImageFilterIF3IF3(itkRecursiveGaussianImageFilterIF3IF3 const & arg0);
     void operator=(itkRecursiveGaussianImageFilterIF3IF3 const & arg0);
     void ComputeNCoefficients(double sigmad, double A1, double B1, double W1, double L1, double A2, double B2, double W2, double L2, double & N0, double & N1, double & N2, double & N3, double & SN, double & DN, double & EN);
     void ComputeDCoefficients(double sigmad, double W1, double L1, double W2, double L2, double & SD, double & DD, double & ED);
     void ComputeRemainingCoefficients(bool symmetric);
   protected:
     itkRecursiveGaussianImageFilterIF3IF3();
     ~itkRecursiveGaussianImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void SetUp(double spacing);
 };


 class itkRecursiveGaussianImageFilterIF3IF3_Pointer {
   public:
     itkRecursiveGaussianImageFilterIF3IF3_Pointer();
     itkRecursiveGaussianImageFilterIF3IF3_Pointer(itkRecursiveGaussianImageFilterIF3IF3_Pointer const & p);
     itkRecursiveGaussianImageFilterIF3IF3_Pointer(itkRecursiveGaussianImageFilterIF3IF3 * p);
     ~itkRecursiveGaussianImageFilterIF3IF3_Pointer();
     itkRecursiveGaussianImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRecursiveGaussianImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkRecursiveGaussianImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkRecursiveGaussianImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkRecursiveGaussianImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkRecursiveGaussianImageFilterIF3IF3_Pointer const & r) const;
     itkRecursiveGaussianImageFilterIF3IF3_Pointer & operator=(itkRecursiveGaussianImageFilterIF3IF3_Pointer const & r);
     itkRecursiveGaussianImageFilterIF3IF3_Pointer & operator=(itkRecursiveGaussianImageFilterIF3IF3 * r);
     itkRecursiveGaussianImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRecursiveGaussianImageFilterIUC2IUC2 : public itkRecursiveSeparableImageFilterIUC2IUC2 {
   public:
     enum OrderEnumType {  ZeroOrder = 0,  FirstOrder = 1,  SecondOrder = 2 };
     static itkRecursiveGaussianImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual double GetSigma() const;
     virtual void SetSigma(double const _arg);
     virtual void SetNormalizeAcrossScale(bool const _arg);
     virtual bool GetNormalizeAcrossScale() const;
     virtual void SetOrder(itkRecursiveGaussianImageFilterIUC2IUC2::OrderEnumType const _arg);
     virtual itkRecursiveGaussianImageFilterIUC2IUC2::OrderEnumType GetOrder() const;
     void SetZeroOrder();
     void SetFirstOrder();
     void SetSecondOrder();
   private:
     itkRecursiveGaussianImageFilterIUC2IUC2(itkRecursiveGaussianImageFilterIUC2IUC2 const & arg0);
     void operator=(itkRecursiveGaussianImageFilterIUC2IUC2 const & arg0);
     void ComputeNCoefficients(double sigmad, double A1, double B1, double W1, double L1, double A2, double B2, double W2, double L2, double & N0, double & N1, double & N2, double & N3, double & SN, double & DN, double & EN);
     void ComputeDCoefficients(double sigmad, double W1, double L1, double W2, double L2, double & SD, double & DD, double & ED);
     void ComputeRemainingCoefficients(bool symmetric);
   protected:
     itkRecursiveGaussianImageFilterIUC2IUC2();
     ~itkRecursiveGaussianImageFilterIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void SetUp(double spacing);
 };


 class itkRecursiveGaussianImageFilterIUC2IUC2_Pointer {
   public:
     itkRecursiveGaussianImageFilterIUC2IUC2_Pointer();
     itkRecursiveGaussianImageFilterIUC2IUC2_Pointer(itkRecursiveGaussianImageFilterIUC2IUC2_Pointer const & p);
     itkRecursiveGaussianImageFilterIUC2IUC2_Pointer(itkRecursiveGaussianImageFilterIUC2IUC2 * p);
     ~itkRecursiveGaussianImageFilterIUC2IUC2_Pointer();
     itkRecursiveGaussianImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRecursiveGaussianImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkRecursiveGaussianImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkRecursiveGaussianImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkRecursiveGaussianImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkRecursiveGaussianImageFilterIUC2IUC2_Pointer const & r) const;
     itkRecursiveGaussianImageFilterIUC2IUC2_Pointer & operator=(itkRecursiveGaussianImageFilterIUC2IUC2_Pointer const & r);
     itkRecursiveGaussianImageFilterIUC2IUC2_Pointer & operator=(itkRecursiveGaussianImageFilterIUC2IUC2 * r);
     itkRecursiveGaussianImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRecursiveGaussianImageFilterIUC3IUC3 : public itkRecursiveSeparableImageFilterIUC3IUC3 {
   public:
     enum OrderEnumType {  ZeroOrder = 0,  FirstOrder = 1,  SecondOrder = 2 };
     static itkRecursiveGaussianImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual double GetSigma() const;
     virtual void SetSigma(double const _arg);
     virtual void SetNormalizeAcrossScale(bool const _arg);
     virtual bool GetNormalizeAcrossScale() const;
     virtual void SetOrder(itkRecursiveGaussianImageFilterIUC3IUC3::OrderEnumType const _arg);
     virtual itkRecursiveGaussianImageFilterIUC3IUC3::OrderEnumType GetOrder() const;
     void SetZeroOrder();
     void SetFirstOrder();
     void SetSecondOrder();
   private:
     itkRecursiveGaussianImageFilterIUC3IUC3(itkRecursiveGaussianImageFilterIUC3IUC3 const & arg0);
     void operator=(itkRecursiveGaussianImageFilterIUC3IUC3 const & arg0);
     void ComputeNCoefficients(double sigmad, double A1, double B1, double W1, double L1, double A2, double B2, double W2, double L2, double & N0, double & N1, double & N2, double & N3, double & SN, double & DN, double & EN);
     void ComputeDCoefficients(double sigmad, double W1, double L1, double W2, double L2, double & SD, double & DD, double & ED);
     void ComputeRemainingCoefficients(bool symmetric);
   protected:
     itkRecursiveGaussianImageFilterIUC3IUC3();
     ~itkRecursiveGaussianImageFilterIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void SetUp(double spacing);
 };


 class itkRecursiveGaussianImageFilterIUC3IUC3_Pointer {
   public:
     itkRecursiveGaussianImageFilterIUC3IUC3_Pointer();
     itkRecursiveGaussianImageFilterIUC3IUC3_Pointer(itkRecursiveGaussianImageFilterIUC3IUC3_Pointer const & p);
     itkRecursiveGaussianImageFilterIUC3IUC3_Pointer(itkRecursiveGaussianImageFilterIUC3IUC3 * p);
     ~itkRecursiveGaussianImageFilterIUC3IUC3_Pointer();
     itkRecursiveGaussianImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRecursiveGaussianImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkRecursiveGaussianImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkRecursiveGaussianImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkRecursiveGaussianImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkRecursiveGaussianImageFilterIUC3IUC3_Pointer const & r) const;
     itkRecursiveGaussianImageFilterIUC3IUC3_Pointer & operator=(itkRecursiveGaussianImageFilterIUC3IUC3_Pointer const & r);
     itkRecursiveGaussianImageFilterIUC3IUC3_Pointer & operator=(itkRecursiveGaussianImageFilterIUC3IUC3 * r);
     itkRecursiveGaussianImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRecursiveGaussianImageFilterIUL2IUL2 : public itkRecursiveSeparableImageFilterIUL2IUL2 {
   public:
     enum OrderEnumType {  ZeroOrder = 0,  FirstOrder = 1,  SecondOrder = 2 };
     static itkRecursiveGaussianImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual double GetSigma() const;
     virtual void SetSigma(double const _arg);
     virtual void SetNormalizeAcrossScale(bool const _arg);
     virtual bool GetNormalizeAcrossScale() const;
     virtual void SetOrder(itkRecursiveGaussianImageFilterIUL2IUL2::OrderEnumType const _arg);
     virtual itkRecursiveGaussianImageFilterIUL2IUL2::OrderEnumType GetOrder() const;
     void SetZeroOrder();
     void SetFirstOrder();
     void SetSecondOrder();
   private:
     itkRecursiveGaussianImageFilterIUL2IUL2(itkRecursiveGaussianImageFilterIUL2IUL2 const & arg0);
     void operator=(itkRecursiveGaussianImageFilterIUL2IUL2 const & arg0);
     void ComputeNCoefficients(double sigmad, double A1, double B1, double W1, double L1, double A2, double B2, double W2, double L2, double & N0, double & N1, double & N2, double & N3, double & SN, double & DN, double & EN);
     void ComputeDCoefficients(double sigmad, double W1, double L1, double W2, double L2, double & SD, double & DD, double & ED);
     void ComputeRemainingCoefficients(bool symmetric);
   protected:
     itkRecursiveGaussianImageFilterIUL2IUL2();
     ~itkRecursiveGaussianImageFilterIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void SetUp(double spacing);
 };


 class itkRecursiveGaussianImageFilterIUL2IUL2_Pointer {
   public:
     itkRecursiveGaussianImageFilterIUL2IUL2_Pointer();
     itkRecursiveGaussianImageFilterIUL2IUL2_Pointer(itkRecursiveGaussianImageFilterIUL2IUL2_Pointer const & p);
     itkRecursiveGaussianImageFilterIUL2IUL2_Pointer(itkRecursiveGaussianImageFilterIUL2IUL2 * p);
     ~itkRecursiveGaussianImageFilterIUL2IUL2_Pointer();
     itkRecursiveGaussianImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRecursiveGaussianImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkRecursiveGaussianImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkRecursiveGaussianImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkRecursiveGaussianImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkRecursiveGaussianImageFilterIUL2IUL2_Pointer const & r) const;
     itkRecursiveGaussianImageFilterIUL2IUL2_Pointer & operator=(itkRecursiveGaussianImageFilterIUL2IUL2_Pointer const & r);
     itkRecursiveGaussianImageFilterIUL2IUL2_Pointer & operator=(itkRecursiveGaussianImageFilterIUL2IUL2 * r);
     itkRecursiveGaussianImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRecursiveGaussianImageFilterIUL3IUL3 : public itkRecursiveSeparableImageFilterIUL3IUL3 {
   public:
     enum OrderEnumType {  ZeroOrder = 0,  FirstOrder = 1,  SecondOrder = 2 };
     static itkRecursiveGaussianImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual double GetSigma() const;
     virtual void SetSigma(double const _arg);
     virtual void SetNormalizeAcrossScale(bool const _arg);
     virtual bool GetNormalizeAcrossScale() const;
     virtual void SetOrder(itkRecursiveGaussianImageFilterIUL3IUL3::OrderEnumType const _arg);
     virtual itkRecursiveGaussianImageFilterIUL3IUL3::OrderEnumType GetOrder() const;
     void SetZeroOrder();
     void SetFirstOrder();
     void SetSecondOrder();
   private:
     itkRecursiveGaussianImageFilterIUL3IUL3(itkRecursiveGaussianImageFilterIUL3IUL3 const & arg0);
     void operator=(itkRecursiveGaussianImageFilterIUL3IUL3 const & arg0);
     void ComputeNCoefficients(double sigmad, double A1, double B1, double W1, double L1, double A2, double B2, double W2, double L2, double & N0, double & N1, double & N2, double & N3, double & SN, double & DN, double & EN);
     void ComputeDCoefficients(double sigmad, double W1, double L1, double W2, double L2, double & SD, double & DD, double & ED);
     void ComputeRemainingCoefficients(bool symmetric);
   protected:
     itkRecursiveGaussianImageFilterIUL3IUL3();
     ~itkRecursiveGaussianImageFilterIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void SetUp(double spacing);
 };


 class itkRecursiveGaussianImageFilterIUL3IUL3_Pointer {
   public:
     itkRecursiveGaussianImageFilterIUL3IUL3_Pointer();
     itkRecursiveGaussianImageFilterIUL3IUL3_Pointer(itkRecursiveGaussianImageFilterIUL3IUL3_Pointer const & p);
     itkRecursiveGaussianImageFilterIUL3IUL3_Pointer(itkRecursiveGaussianImageFilterIUL3IUL3 * p);
     ~itkRecursiveGaussianImageFilterIUL3IUL3_Pointer();
     itkRecursiveGaussianImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRecursiveGaussianImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkRecursiveGaussianImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkRecursiveGaussianImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkRecursiveGaussianImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkRecursiveGaussianImageFilterIUL3IUL3_Pointer const & r) const;
     itkRecursiveGaussianImageFilterIUL3IUL3_Pointer & operator=(itkRecursiveGaussianImageFilterIUL3IUL3_Pointer const & r);
     itkRecursiveGaussianImageFilterIUL3IUL3_Pointer & operator=(itkRecursiveGaussianImageFilterIUL3IUL3 * r);
     itkRecursiveGaussianImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRecursiveGaussianImageFilterIUS2IUS2 : public itkRecursiveSeparableImageFilterIUS2IUS2 {
   public:
     enum OrderEnumType {  ZeroOrder = 0,  FirstOrder = 1,  SecondOrder = 2 };
     static itkRecursiveGaussianImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual double GetSigma() const;
     virtual void SetSigma(double const _arg);
     virtual void SetNormalizeAcrossScale(bool const _arg);
     virtual bool GetNormalizeAcrossScale() const;
     virtual void SetOrder(itkRecursiveGaussianImageFilterIUS2IUS2::OrderEnumType const _arg);
     virtual itkRecursiveGaussianImageFilterIUS2IUS2::OrderEnumType GetOrder() const;
     void SetZeroOrder();
     void SetFirstOrder();
     void SetSecondOrder();
   private:
     itkRecursiveGaussianImageFilterIUS2IUS2(itkRecursiveGaussianImageFilterIUS2IUS2 const & arg0);
     void operator=(itkRecursiveGaussianImageFilterIUS2IUS2 const & arg0);
     void ComputeNCoefficients(double sigmad, double A1, double B1, double W1, double L1, double A2, double B2, double W2, double L2, double & N0, double & N1, double & N2, double & N3, double & SN, double & DN, double & EN);
     void ComputeDCoefficients(double sigmad, double W1, double L1, double W2, double L2, double & SD, double & DD, double & ED);
     void ComputeRemainingCoefficients(bool symmetric);
   protected:
     itkRecursiveGaussianImageFilterIUS2IUS2();
     ~itkRecursiveGaussianImageFilterIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void SetUp(double spacing);
 };


 class itkRecursiveGaussianImageFilterIUS2IUS2_Pointer {
   public:
     itkRecursiveGaussianImageFilterIUS2IUS2_Pointer();
     itkRecursiveGaussianImageFilterIUS2IUS2_Pointer(itkRecursiveGaussianImageFilterIUS2IUS2_Pointer const & p);
     itkRecursiveGaussianImageFilterIUS2IUS2_Pointer(itkRecursiveGaussianImageFilterIUS2IUS2 * p);
     ~itkRecursiveGaussianImageFilterIUS2IUS2_Pointer();
     itkRecursiveGaussianImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRecursiveGaussianImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkRecursiveGaussianImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkRecursiveGaussianImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkRecursiveGaussianImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkRecursiveGaussianImageFilterIUS2IUS2_Pointer const & r) const;
     itkRecursiveGaussianImageFilterIUS2IUS2_Pointer & operator=(itkRecursiveGaussianImageFilterIUS2IUS2_Pointer const & r);
     itkRecursiveGaussianImageFilterIUS2IUS2_Pointer & operator=(itkRecursiveGaussianImageFilterIUS2IUS2 * r);
     itkRecursiveGaussianImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRecursiveGaussianImageFilterIUS3IUS3 : public itkRecursiveSeparableImageFilterIUS3IUS3 {
   public:
     enum OrderEnumType {  ZeroOrder = 0,  FirstOrder = 1,  SecondOrder = 2 };
     static itkRecursiveGaussianImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual double GetSigma() const;
     virtual void SetSigma(double const _arg);
     virtual void SetNormalizeAcrossScale(bool const _arg);
     virtual bool GetNormalizeAcrossScale() const;
     virtual void SetOrder(itkRecursiveGaussianImageFilterIUS3IUS3::OrderEnumType const _arg);
     virtual itkRecursiveGaussianImageFilterIUS3IUS3::OrderEnumType GetOrder() const;
     void SetZeroOrder();
     void SetFirstOrder();
     void SetSecondOrder();
   private:
     itkRecursiveGaussianImageFilterIUS3IUS3(itkRecursiveGaussianImageFilterIUS3IUS3 const & arg0);
     void operator=(itkRecursiveGaussianImageFilterIUS3IUS3 const & arg0);
     void ComputeNCoefficients(double sigmad, double A1, double B1, double W1, double L1, double A2, double B2, double W2, double L2, double & N0, double & N1, double & N2, double & N3, double & SN, double & DN, double & EN);
     void ComputeDCoefficients(double sigmad, double W1, double L1, double W2, double L2, double & SD, double & DD, double & ED);
     void ComputeRemainingCoefficients(bool symmetric);
   protected:
     itkRecursiveGaussianImageFilterIUS3IUS3();
     ~itkRecursiveGaussianImageFilterIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void SetUp(double spacing);
 };


 class itkRecursiveGaussianImageFilterIUS3IUS3_Pointer {
   public:
     itkRecursiveGaussianImageFilterIUS3IUS3_Pointer();
     itkRecursiveGaussianImageFilterIUS3IUS3_Pointer(itkRecursiveGaussianImageFilterIUS3IUS3_Pointer const & p);
     itkRecursiveGaussianImageFilterIUS3IUS3_Pointer(itkRecursiveGaussianImageFilterIUS3IUS3 * p);
     ~itkRecursiveGaussianImageFilterIUS3IUS3_Pointer();
     itkRecursiveGaussianImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRecursiveGaussianImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkRecursiveGaussianImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkRecursiveGaussianImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkRecursiveGaussianImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkRecursiveGaussianImageFilterIUS3IUS3_Pointer const & r) const;
     itkRecursiveGaussianImageFilterIUS3IUS3_Pointer & operator=(itkRecursiveGaussianImageFilterIUS3IUS3_Pointer const & r);
     itkRecursiveGaussianImageFilterIUS3IUS3_Pointer & operator=(itkRecursiveGaussianImageFilterIUS3IUS3 * r);
     itkRecursiveGaussianImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


