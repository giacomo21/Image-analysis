# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkInPlaceImageFilterAPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkInPlaceImageFilterAPython', [dirname(__file__)])
        except ImportError:
            import _itkInPlaceImageFilterAPython
            return _itkInPlaceImageFilterAPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkInPlaceImageFilterAPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkInPlaceImageFilterAPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkInPlaceImageFilterAPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkImageToImageFilterBPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterAPython
def itkInPlaceImageFilterID3IRGBAUS3_New():
  return itkInPlaceImageFilterID3IRGBAUS3.New()

def itkInPlaceImageFilterID2IRGBAUS2_New():
  return itkInPlaceImageFilterID2IRGBAUS2.New()

def itkInPlaceImageFilterIF3IRGBAUS3_New():
  return itkInPlaceImageFilterIF3IRGBAUS3.New()

def itkInPlaceImageFilterIF2IRGBAUS2_New():
  return itkInPlaceImageFilterIF2IRGBAUS2.New()

def itkInPlaceImageFilterIUS3IRGBAUS3_New():
  return itkInPlaceImageFilterIUS3IRGBAUS3.New()

def itkInPlaceImageFilterIUS2IRGBAUS2_New():
  return itkInPlaceImageFilterIUS2IRGBAUS2.New()

def itkInPlaceImageFilterIUC3IRGBAUS3_New():
  return itkInPlaceImageFilterIUC3IRGBAUS3.New()

def itkInPlaceImageFilterIUC2IRGBAUS2_New():
  return itkInPlaceImageFilterIUC2IRGBAUS2.New()

def itkInPlaceImageFilterIUL3IRGBAUS3_New():
  return itkInPlaceImageFilterIUL3IRGBAUS3.New()

def itkInPlaceImageFilterIUL2IRGBAUS2_New():
  return itkInPlaceImageFilterIUL2IRGBAUS2.New()

def itkInPlaceImageFilterIRGBAUS3IUS3_New():
  return itkInPlaceImageFilterIRGBAUS3IUS3.New()

def itkInPlaceImageFilterIRGBAUS2IUS2_New():
  return itkInPlaceImageFilterIRGBAUS2IUS2.New()

def itkInPlaceImageFilterIRGBAUS3IRGBAUS3_New():
  return itkInPlaceImageFilterIRGBAUS3IRGBAUS3.New()

def itkInPlaceImageFilterIRGBAUS2IRGBAUS2_New():
  return itkInPlaceImageFilterIRGBAUS2IRGBAUS2.New()

def itkInPlaceImageFilterIRGBAUS3IRGBAUC3_New():
  return itkInPlaceImageFilterIRGBAUS3IRGBAUC3.New()

def itkInPlaceImageFilterIRGBAUS2IRGBAUC2_New():
  return itkInPlaceImageFilterIRGBAUS2IRGBAUC2.New()

def itkInPlaceImageFilterIRGBAUC3IRGBAUS3_New():
  return itkInPlaceImageFilterIRGBAUC3IRGBAUS3.New()

def itkInPlaceImageFilterIRGBAUC2IRGBAUS2_New():
  return itkInPlaceImageFilterIRGBAUC2IRGBAUS2.New()

def itkInPlaceImageFilterIRGBAUC3IRGBAUC3_New():
  return itkInPlaceImageFilterIRGBAUC3IRGBAUC3.New()

def itkInPlaceImageFilterIRGBAUC2IRGBAUC2_New():
  return itkInPlaceImageFilterIRGBAUC2IRGBAUC2.New()

def itkInPlaceImageFilterID3IRGBUS3_New():
  return itkInPlaceImageFilterID3IRGBUS3.New()

def itkInPlaceImageFilterID2IRGBUS2_New():
  return itkInPlaceImageFilterID2IRGBUS2.New()

def itkInPlaceImageFilterIF3IRGBUS3_New():
  return itkInPlaceImageFilterIF3IRGBUS3.New()

def itkInPlaceImageFilterIF2IRGBUS2_New():
  return itkInPlaceImageFilterIF2IRGBUS2.New()

def itkInPlaceImageFilterIUS3IRGBUS3_New():
  return itkInPlaceImageFilterIUS3IRGBUS3.New()

def itkInPlaceImageFilterIUS2IRGBUS2_New():
  return itkInPlaceImageFilterIUS2IRGBUS2.New()

def itkInPlaceImageFilterIUC3IRGBUS3_New():
  return itkInPlaceImageFilterIUC3IRGBUS3.New()

def itkInPlaceImageFilterIUC2IRGBUS2_New():
  return itkInPlaceImageFilterIUC2IRGBUS2.New()

def itkInPlaceImageFilterIUL3IRGBUS3_New():
  return itkInPlaceImageFilterIUL3IRGBUS3.New()

def itkInPlaceImageFilterIUL2IRGBUS2_New():
  return itkInPlaceImageFilterIUL2IRGBUS2.New()

def itkInPlaceImageFilterIRGBUS3IUS3_New():
  return itkInPlaceImageFilterIRGBUS3IUS3.New()

def itkInPlaceImageFilterIRGBUS2IUS2_New():
  return itkInPlaceImageFilterIRGBUS2IUS2.New()

def itkInPlaceImageFilterIRGBUS3IRGBUS3_New():
  return itkInPlaceImageFilterIRGBUS3IRGBUS3.New()

def itkInPlaceImageFilterIRGBUS2IRGBUS2_New():
  return itkInPlaceImageFilterIRGBUS2IRGBUS2.New()

def itkInPlaceImageFilterIRGBUS3IRGBUC3_New():
  return itkInPlaceImageFilterIRGBUS3IRGBUC3.New()

def itkInPlaceImageFilterIRGBUS2IRGBUC2_New():
  return itkInPlaceImageFilterIRGBUS2IRGBUC2.New()

def itkInPlaceImageFilterIRGBUC3IRGBUS3_New():
  return itkInPlaceImageFilterIRGBUC3IRGBUS3.New()

def itkInPlaceImageFilterIRGBUC2IRGBUS2_New():
  return itkInPlaceImageFilterIRGBUC2IRGBUS2.New()

def itkInPlaceImageFilterIRGBUC3IRGBUC3_New():
  return itkInPlaceImageFilterIRGBUC3IRGBUC3.New()

def itkInPlaceImageFilterIRGBUC2IRGBUC2_New():
  return itkInPlaceImageFilterIRGBUC2IRGBUC2.New()

def itkInPlaceImageFilterICVF33ICVF33_New():
  return itkInPlaceImageFilterICVF33ICVF33.New()

def itkInPlaceImageFilterICVF22ICVF22_New():
  return itkInPlaceImageFilterICVF22ICVF22.New()

def itkInPlaceImageFilterICVF33IVF33_New():
  return itkInPlaceImageFilterICVF33IVF33.New()

def itkInPlaceImageFilterICVF22IVF22_New():
  return itkInPlaceImageFilterICVF22IVF22.New()

def itkInPlaceImageFilterIVF33ICVF33_New():
  return itkInPlaceImageFilterIVF33ICVF33.New()

def itkInPlaceImageFilterIVF22ICVF22_New():
  return itkInPlaceImageFilterIVF22ICVF22.New()

def itkInPlaceImageFilterIVF33IVF33_New():
  return itkInPlaceImageFilterIVF33IVF33.New()

def itkInPlaceImageFilterIVF22IVF22_New():
  return itkInPlaceImageFilterIVF22IVF22.New()

def itkInPlaceImageFilterID3ID3_New():
  return itkInPlaceImageFilterID3ID3.New()

def itkInPlaceImageFilterID2ID2_New():
  return itkInPlaceImageFilterID2ID2.New()

def itkInPlaceImageFilterID3IF3_New():
  return itkInPlaceImageFilterID3IF3.New()

def itkInPlaceImageFilterID2IF2_New():
  return itkInPlaceImageFilterID2IF2.New()

def itkInPlaceImageFilterID3IUS3_New():
  return itkInPlaceImageFilterID3IUS3.New()

def itkInPlaceImageFilterID2IUS2_New():
  return itkInPlaceImageFilterID2IUS2.New()

def itkInPlaceImageFilterID3IUL3_New():
  return itkInPlaceImageFilterID3IUL3.New()

def itkInPlaceImageFilterID2IUL2_New():
  return itkInPlaceImageFilterID2IUL2.New()

def itkInPlaceImageFilterID3IUC3_New():
  return itkInPlaceImageFilterID3IUC3.New()

def itkInPlaceImageFilterID2IUC2_New():
  return itkInPlaceImageFilterID2IUC2.New()

def itkInPlaceImageFilterIF3ID3_New():
  return itkInPlaceImageFilterIF3ID3.New()

def itkInPlaceImageFilterIF2ID2_New():
  return itkInPlaceImageFilterIF2ID2.New()

def itkInPlaceImageFilterIF3IF3_New():
  return itkInPlaceImageFilterIF3IF3.New()

def itkInPlaceImageFilterIF2IF2_New():
  return itkInPlaceImageFilterIF2IF2.New()

def itkInPlaceImageFilterIF3IUS3_New():
  return itkInPlaceImageFilterIF3IUS3.New()

def itkInPlaceImageFilterIF2IUS2_New():
  return itkInPlaceImageFilterIF2IUS2.New()

def itkInPlaceImageFilterIF3IUL3_New():
  return itkInPlaceImageFilterIF3IUL3.New()

def itkInPlaceImageFilterIF2IUL2_New():
  return itkInPlaceImageFilterIF2IUL2.New()

def itkInPlaceImageFilterIF3IUC3_New():
  return itkInPlaceImageFilterIF3IUC3.New()

def itkInPlaceImageFilterIF2IUC2_New():
  return itkInPlaceImageFilterIF2IUC2.New()

def itkInPlaceImageFilterIUS3ID3_New():
  return itkInPlaceImageFilterIUS3ID3.New()

def itkInPlaceImageFilterIUS2ID2_New():
  return itkInPlaceImageFilterIUS2ID2.New()

def itkInPlaceImageFilterIUS3IF3_New():
  return itkInPlaceImageFilterIUS3IF3.New()

def itkInPlaceImageFilterIUS2IF2_New():
  return itkInPlaceImageFilterIUS2IF2.New()

def itkInPlaceImageFilterIUS3IUS3_New():
  return itkInPlaceImageFilterIUS3IUS3.New()

def itkInPlaceImageFilterIUS2IUS2_New():
  return itkInPlaceImageFilterIUS2IUS2.New()

def itkInPlaceImageFilterIUS3IUL3_New():
  return itkInPlaceImageFilterIUS3IUL3.New()

def itkInPlaceImageFilterIUS2IUL2_New():
  return itkInPlaceImageFilterIUS2IUL2.New()

def itkInPlaceImageFilterIUS3IUC3_New():
  return itkInPlaceImageFilterIUS3IUC3.New()

def itkInPlaceImageFilterIUS2IUC2_New():
  return itkInPlaceImageFilterIUS2IUC2.New()

def itkInPlaceImageFilterIUL3ID3_New():
  return itkInPlaceImageFilterIUL3ID3.New()

def itkInPlaceImageFilterIUL2ID2_New():
  return itkInPlaceImageFilterIUL2ID2.New()

def itkInPlaceImageFilterIUL3IF3_New():
  return itkInPlaceImageFilterIUL3IF3.New()

def itkInPlaceImageFilterIUL2IF2_New():
  return itkInPlaceImageFilterIUL2IF2.New()

def itkInPlaceImageFilterIUL3IUS3_New():
  return itkInPlaceImageFilterIUL3IUS3.New()

def itkInPlaceImageFilterIUL2IUS2_New():
  return itkInPlaceImageFilterIUL2IUS2.New()

def itkInPlaceImageFilterIUL3IUL3_New():
  return itkInPlaceImageFilterIUL3IUL3.New()

def itkInPlaceImageFilterIUL2IUL2_New():
  return itkInPlaceImageFilterIUL2IUL2.New()

def itkInPlaceImageFilterIUL3IUC3_New():
  return itkInPlaceImageFilterIUL3IUC3.New()

def itkInPlaceImageFilterIUL2IUC2_New():
  return itkInPlaceImageFilterIUL2IUC2.New()

def itkInPlaceImageFilterIUC3ID3_New():
  return itkInPlaceImageFilterIUC3ID3.New()

def itkInPlaceImageFilterIUC2ID2_New():
  return itkInPlaceImageFilterIUC2ID2.New()

def itkInPlaceImageFilterIUC3IF3_New():
  return itkInPlaceImageFilterIUC3IF3.New()

def itkInPlaceImageFilterIUC2IF2_New():
  return itkInPlaceImageFilterIUC2IF2.New()

def itkInPlaceImageFilterIUC3IUS3_New():
  return itkInPlaceImageFilterIUC3IUS3.New()

def itkInPlaceImageFilterIUC2IUS2_New():
  return itkInPlaceImageFilterIUC2IUS2.New()

def itkInPlaceImageFilterIUC3IUL3_New():
  return itkInPlaceImageFilterIUC3IUL3.New()

def itkInPlaceImageFilterIUC2IUL2_New():
  return itkInPlaceImageFilterIUC2IUL2.New()

def itkInPlaceImageFilterIUC3IUC3_New():
  return itkInPlaceImageFilterIUC3IUC3.New()

def itkInPlaceImageFilterIUC2IUC2_New():
  return itkInPlaceImageFilterIUC2IUC2.New()

class itkInPlaceImageFilterICVF22ICVF22(itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22):
    """Proxy of C++ itkInPlaceImageFilterICVF22ICVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22ICVF22_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22ICVF22_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22ICVF22_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22ICVF22_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22ICVF22_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22ICVF22_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22ICVF22_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterICVF22ICVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterICVF22ICVF22"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22ICVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterICVF22ICVF22"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22ICVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterICVF22ICVF22
        
        Create a new object of the class itkInPlaceImageFilterICVF22ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterICVF22ICVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterICVF22ICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterICVF22ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterICVF22ICVF22.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22ICVF22_SetInPlace,None,itkInPlaceImageFilterICVF22ICVF22)
itkInPlaceImageFilterICVF22ICVF22.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22ICVF22_GetInPlace,None,itkInPlaceImageFilterICVF22ICVF22)
itkInPlaceImageFilterICVF22ICVF22.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22ICVF22_InPlaceOn,None,itkInPlaceImageFilterICVF22ICVF22)
itkInPlaceImageFilterICVF22ICVF22.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22ICVF22_InPlaceOff,None,itkInPlaceImageFilterICVF22ICVF22)
itkInPlaceImageFilterICVF22ICVF22.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22ICVF22_CanRunInPlace,None,itkInPlaceImageFilterICVF22ICVF22)
itkInPlaceImageFilterICVF22ICVF22.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22ICVF22_GetPointer,None,itkInPlaceImageFilterICVF22ICVF22)
itkInPlaceImageFilterICVF22ICVF22_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22ICVF22_swigregister
itkInPlaceImageFilterICVF22ICVF22_swigregister(itkInPlaceImageFilterICVF22ICVF22)

def itkInPlaceImageFilterICVF22ICVF22_cast(*args):
  """itkInPlaceImageFilterICVF22ICVF22_cast(itkLightObject obj) -> itkInPlaceImageFilterICVF22ICVF22"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22ICVF22_cast(*args)

class itkInPlaceImageFilterICVF22IVF22(itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22):
    """Proxy of C++ itkInPlaceImageFilterICVF22IVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22IVF22_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22IVF22_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22IVF22_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22IVF22_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22IVF22_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22IVF22_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22IVF22_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterICVF22IVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterICVF22IVF22"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22IVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterICVF22IVF22"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22IVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterICVF22IVF22
        
        Create a new object of the class itkInPlaceImageFilterICVF22IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterICVF22IVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterICVF22IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterICVF22IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterICVF22IVF22.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22IVF22_SetInPlace,None,itkInPlaceImageFilterICVF22IVF22)
itkInPlaceImageFilterICVF22IVF22.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22IVF22_GetInPlace,None,itkInPlaceImageFilterICVF22IVF22)
itkInPlaceImageFilterICVF22IVF22.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22IVF22_InPlaceOn,None,itkInPlaceImageFilterICVF22IVF22)
itkInPlaceImageFilterICVF22IVF22.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22IVF22_InPlaceOff,None,itkInPlaceImageFilterICVF22IVF22)
itkInPlaceImageFilterICVF22IVF22.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22IVF22_CanRunInPlace,None,itkInPlaceImageFilterICVF22IVF22)
itkInPlaceImageFilterICVF22IVF22.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22IVF22_GetPointer,None,itkInPlaceImageFilterICVF22IVF22)
itkInPlaceImageFilterICVF22IVF22_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22IVF22_swigregister
itkInPlaceImageFilterICVF22IVF22_swigregister(itkInPlaceImageFilterICVF22IVF22)

def itkInPlaceImageFilterICVF22IVF22_cast(*args):
  """itkInPlaceImageFilterICVF22IVF22_cast(itkLightObject obj) -> itkInPlaceImageFilterICVF22IVF22"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22IVF22_cast(*args)

class itkInPlaceImageFilterICVF33ICVF33(itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33):
    """Proxy of C++ itkInPlaceImageFilterICVF33ICVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33ICVF33_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33ICVF33_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33ICVF33_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33ICVF33_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33ICVF33_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33ICVF33_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33ICVF33_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterICVF33ICVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterICVF33ICVF33"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33ICVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterICVF33ICVF33"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33ICVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterICVF33ICVF33
        
        Create a new object of the class itkInPlaceImageFilterICVF33ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterICVF33ICVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterICVF33ICVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterICVF33ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterICVF33ICVF33.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33ICVF33_SetInPlace,None,itkInPlaceImageFilterICVF33ICVF33)
itkInPlaceImageFilterICVF33ICVF33.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33ICVF33_GetInPlace,None,itkInPlaceImageFilterICVF33ICVF33)
itkInPlaceImageFilterICVF33ICVF33.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33ICVF33_InPlaceOn,None,itkInPlaceImageFilterICVF33ICVF33)
itkInPlaceImageFilterICVF33ICVF33.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33ICVF33_InPlaceOff,None,itkInPlaceImageFilterICVF33ICVF33)
itkInPlaceImageFilterICVF33ICVF33.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33ICVF33_CanRunInPlace,None,itkInPlaceImageFilterICVF33ICVF33)
itkInPlaceImageFilterICVF33ICVF33.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33ICVF33_GetPointer,None,itkInPlaceImageFilterICVF33ICVF33)
itkInPlaceImageFilterICVF33ICVF33_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33ICVF33_swigregister
itkInPlaceImageFilterICVF33ICVF33_swigregister(itkInPlaceImageFilterICVF33ICVF33)

def itkInPlaceImageFilterICVF33ICVF33_cast(*args):
  """itkInPlaceImageFilterICVF33ICVF33_cast(itkLightObject obj) -> itkInPlaceImageFilterICVF33ICVF33"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33ICVF33_cast(*args)

class itkInPlaceImageFilterICVF33IVF33(itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33):
    """Proxy of C++ itkInPlaceImageFilterICVF33IVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33IVF33_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33IVF33_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33IVF33_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33IVF33_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33IVF33_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33IVF33_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33IVF33_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterICVF33IVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterICVF33IVF33"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33IVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterICVF33IVF33"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33IVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterICVF33IVF33
        
        Create a new object of the class itkInPlaceImageFilterICVF33IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterICVF33IVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterICVF33IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterICVF33IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterICVF33IVF33.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33IVF33_SetInPlace,None,itkInPlaceImageFilterICVF33IVF33)
itkInPlaceImageFilterICVF33IVF33.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33IVF33_GetInPlace,None,itkInPlaceImageFilterICVF33IVF33)
itkInPlaceImageFilterICVF33IVF33.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33IVF33_InPlaceOn,None,itkInPlaceImageFilterICVF33IVF33)
itkInPlaceImageFilterICVF33IVF33.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33IVF33_InPlaceOff,None,itkInPlaceImageFilterICVF33IVF33)
itkInPlaceImageFilterICVF33IVF33.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33IVF33_CanRunInPlace,None,itkInPlaceImageFilterICVF33IVF33)
itkInPlaceImageFilterICVF33IVF33.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33IVF33_GetPointer,None,itkInPlaceImageFilterICVF33IVF33)
itkInPlaceImageFilterICVF33IVF33_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33IVF33_swigregister
itkInPlaceImageFilterICVF33IVF33_swigregister(itkInPlaceImageFilterICVF33IVF33)

def itkInPlaceImageFilterICVF33IVF33_cast(*args):
  """itkInPlaceImageFilterICVF33IVF33_cast(itkLightObject obj) -> itkInPlaceImageFilterICVF33IVF33"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33IVF33_cast(*args)

class itkInPlaceImageFilterID2ID2(itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    """Proxy of C++ itkInPlaceImageFilterID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterID2ID2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterID2ID2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterID2ID2
        
        Create a new object of the class itkInPlaceImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterID2ID2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2_SetInPlace,None,itkInPlaceImageFilterID2ID2)
itkInPlaceImageFilterID2ID2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2_GetInPlace,None,itkInPlaceImageFilterID2ID2)
itkInPlaceImageFilterID2ID2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2_InPlaceOn,None,itkInPlaceImageFilterID2ID2)
itkInPlaceImageFilterID2ID2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2_InPlaceOff,None,itkInPlaceImageFilterID2ID2)
itkInPlaceImageFilterID2ID2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2_CanRunInPlace,None,itkInPlaceImageFilterID2ID2)
itkInPlaceImageFilterID2ID2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2_GetPointer,None,itkInPlaceImageFilterID2ID2)
itkInPlaceImageFilterID2ID2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2_swigregister
itkInPlaceImageFilterID2ID2_swigregister(itkInPlaceImageFilterID2ID2)

def itkInPlaceImageFilterID2ID2_cast(*args):
  """itkInPlaceImageFilterID2ID2_cast(itkLightObject obj) -> itkInPlaceImageFilterID2ID2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2_cast(*args)

class itkInPlaceImageFilterID2IF2(itkImageToImageFilterAPython.itkImageToImageFilterID2IF2):
    """Proxy of C++ itkInPlaceImageFilterID2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IF2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IF2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IF2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IF2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IF2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IF2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IF2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterID2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterID2IF2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterID2IF2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterID2IF2
        
        Create a new object of the class itkInPlaceImageFilterID2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterID2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterID2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterID2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterID2IF2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IF2_SetInPlace,None,itkInPlaceImageFilterID2IF2)
itkInPlaceImageFilterID2IF2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IF2_GetInPlace,None,itkInPlaceImageFilterID2IF2)
itkInPlaceImageFilterID2IF2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IF2_InPlaceOn,None,itkInPlaceImageFilterID2IF2)
itkInPlaceImageFilterID2IF2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IF2_InPlaceOff,None,itkInPlaceImageFilterID2IF2)
itkInPlaceImageFilterID2IF2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IF2_CanRunInPlace,None,itkInPlaceImageFilterID2IF2)
itkInPlaceImageFilterID2IF2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IF2_GetPointer,None,itkInPlaceImageFilterID2IF2)
itkInPlaceImageFilterID2IF2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IF2_swigregister
itkInPlaceImageFilterID2IF2_swigregister(itkInPlaceImageFilterID2IF2)

def itkInPlaceImageFilterID2IF2_cast(*args):
  """itkInPlaceImageFilterID2IF2_cast(itkLightObject obj) -> itkInPlaceImageFilterID2IF2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IF2_cast(*args)

class itkInPlaceImageFilterID2IRGBAUS2(itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBAUS2):
    """Proxy of C++ itkInPlaceImageFilterID2IRGBAUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBAUS2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBAUS2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBAUS2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBAUS2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBAUS2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBAUS2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBAUS2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterID2IRGBAUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterID2IRGBAUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBAUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterID2IRGBAUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBAUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterID2IRGBAUS2
        
        Create a new object of the class itkInPlaceImageFilterID2IRGBAUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterID2IRGBAUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterID2IRGBAUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterID2IRGBAUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterID2IRGBAUS2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBAUS2_SetInPlace,None,itkInPlaceImageFilterID2IRGBAUS2)
itkInPlaceImageFilterID2IRGBAUS2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBAUS2_GetInPlace,None,itkInPlaceImageFilterID2IRGBAUS2)
itkInPlaceImageFilterID2IRGBAUS2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBAUS2_InPlaceOn,None,itkInPlaceImageFilterID2IRGBAUS2)
itkInPlaceImageFilterID2IRGBAUS2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBAUS2_InPlaceOff,None,itkInPlaceImageFilterID2IRGBAUS2)
itkInPlaceImageFilterID2IRGBAUS2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBAUS2_CanRunInPlace,None,itkInPlaceImageFilterID2IRGBAUS2)
itkInPlaceImageFilterID2IRGBAUS2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBAUS2_GetPointer,None,itkInPlaceImageFilterID2IRGBAUS2)
itkInPlaceImageFilterID2IRGBAUS2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBAUS2_swigregister
itkInPlaceImageFilterID2IRGBAUS2_swigregister(itkInPlaceImageFilterID2IRGBAUS2)

def itkInPlaceImageFilterID2IRGBAUS2_cast(*args):
  """itkInPlaceImageFilterID2IRGBAUS2_cast(itkLightObject obj) -> itkInPlaceImageFilterID2IRGBAUS2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBAUS2_cast(*args)

class itkInPlaceImageFilterID2IRGBUS2(itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBUS2):
    """Proxy of C++ itkInPlaceImageFilterID2IRGBUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBUS2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBUS2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBUS2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBUS2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBUS2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBUS2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBUS2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterID2IRGBUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterID2IRGBUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterID2IRGBUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterID2IRGBUS2
        
        Create a new object of the class itkInPlaceImageFilterID2IRGBUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterID2IRGBUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterID2IRGBUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterID2IRGBUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterID2IRGBUS2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBUS2_SetInPlace,None,itkInPlaceImageFilterID2IRGBUS2)
itkInPlaceImageFilterID2IRGBUS2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBUS2_GetInPlace,None,itkInPlaceImageFilterID2IRGBUS2)
itkInPlaceImageFilterID2IRGBUS2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBUS2_InPlaceOn,None,itkInPlaceImageFilterID2IRGBUS2)
itkInPlaceImageFilterID2IRGBUS2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBUS2_InPlaceOff,None,itkInPlaceImageFilterID2IRGBUS2)
itkInPlaceImageFilterID2IRGBUS2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBUS2_CanRunInPlace,None,itkInPlaceImageFilterID2IRGBUS2)
itkInPlaceImageFilterID2IRGBUS2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBUS2_GetPointer,None,itkInPlaceImageFilterID2IRGBUS2)
itkInPlaceImageFilterID2IRGBUS2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBUS2_swigregister
itkInPlaceImageFilterID2IRGBUS2_swigregister(itkInPlaceImageFilterID2IRGBUS2)

def itkInPlaceImageFilterID2IRGBUS2_cast(*args):
  """itkInPlaceImageFilterID2IRGBUS2_cast(itkLightObject obj) -> itkInPlaceImageFilterID2IRGBUS2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IRGBUS2_cast(*args)

class itkInPlaceImageFilterID2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2):
    """Proxy of C++ itkInPlaceImageFilterID2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUC2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUC2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUC2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUC2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUC2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUC2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUC2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterID2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterID2IUC2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterID2IUC2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterID2IUC2
        
        Create a new object of the class itkInPlaceImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterID2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterID2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterID2IUC2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUC2_SetInPlace,None,itkInPlaceImageFilterID2IUC2)
itkInPlaceImageFilterID2IUC2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUC2_GetInPlace,None,itkInPlaceImageFilterID2IUC2)
itkInPlaceImageFilterID2IUC2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUC2_InPlaceOn,None,itkInPlaceImageFilterID2IUC2)
itkInPlaceImageFilterID2IUC2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUC2_InPlaceOff,None,itkInPlaceImageFilterID2IUC2)
itkInPlaceImageFilterID2IUC2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUC2_CanRunInPlace,None,itkInPlaceImageFilterID2IUC2)
itkInPlaceImageFilterID2IUC2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUC2_GetPointer,None,itkInPlaceImageFilterID2IUC2)
itkInPlaceImageFilterID2IUC2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUC2_swigregister
itkInPlaceImageFilterID2IUC2_swigregister(itkInPlaceImageFilterID2IUC2)

def itkInPlaceImageFilterID2IUC2_cast(*args):
  """itkInPlaceImageFilterID2IUC2_cast(itkLightObject obj) -> itkInPlaceImageFilterID2IUC2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUC2_cast(*args)

class itkInPlaceImageFilterID2IUL2(itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2):
    """Proxy of C++ itkInPlaceImageFilterID2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUL2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUL2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUL2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUL2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUL2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUL2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUL2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterID2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterID2IUL2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterID2IUL2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterID2IUL2
        
        Create a new object of the class itkInPlaceImageFilterID2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterID2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterID2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterID2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterID2IUL2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUL2_SetInPlace,None,itkInPlaceImageFilterID2IUL2)
itkInPlaceImageFilterID2IUL2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUL2_GetInPlace,None,itkInPlaceImageFilterID2IUL2)
itkInPlaceImageFilterID2IUL2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUL2_InPlaceOn,None,itkInPlaceImageFilterID2IUL2)
itkInPlaceImageFilterID2IUL2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUL2_InPlaceOff,None,itkInPlaceImageFilterID2IUL2)
itkInPlaceImageFilterID2IUL2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUL2_CanRunInPlace,None,itkInPlaceImageFilterID2IUL2)
itkInPlaceImageFilterID2IUL2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUL2_GetPointer,None,itkInPlaceImageFilterID2IUL2)
itkInPlaceImageFilterID2IUL2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUL2_swigregister
itkInPlaceImageFilterID2IUL2_swigregister(itkInPlaceImageFilterID2IUL2)

def itkInPlaceImageFilterID2IUL2_cast(*args):
  """itkInPlaceImageFilterID2IUL2_cast(itkLightObject obj) -> itkInPlaceImageFilterID2IUL2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUL2_cast(*args)

class itkInPlaceImageFilterID2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2):
    """Proxy of C++ itkInPlaceImageFilterID2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUS2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUS2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUS2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUS2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUS2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUS2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUS2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterID2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterID2IUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterID2IUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterID2IUS2
        
        Create a new object of the class itkInPlaceImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterID2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterID2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterID2IUS2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUS2_SetInPlace,None,itkInPlaceImageFilterID2IUS2)
itkInPlaceImageFilterID2IUS2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUS2_GetInPlace,None,itkInPlaceImageFilterID2IUS2)
itkInPlaceImageFilterID2IUS2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUS2_InPlaceOn,None,itkInPlaceImageFilterID2IUS2)
itkInPlaceImageFilterID2IUS2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUS2_InPlaceOff,None,itkInPlaceImageFilterID2IUS2)
itkInPlaceImageFilterID2IUS2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUS2_CanRunInPlace,None,itkInPlaceImageFilterID2IUS2)
itkInPlaceImageFilterID2IUS2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUS2_GetPointer,None,itkInPlaceImageFilterID2IUS2)
itkInPlaceImageFilterID2IUS2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUS2_swigregister
itkInPlaceImageFilterID2IUS2_swigregister(itkInPlaceImageFilterID2IUS2)

def itkInPlaceImageFilterID2IUS2_cast(*args):
  """itkInPlaceImageFilterID2IUS2_cast(itkLightObject obj) -> itkInPlaceImageFilterID2IUS2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUS2_cast(*args)

class itkInPlaceImageFilterID3ID3(itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    """Proxy of C++ itkInPlaceImageFilterID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterID3ID3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterID3ID3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterID3ID3
        
        Create a new object of the class itkInPlaceImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterID3ID3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3_SetInPlace,None,itkInPlaceImageFilterID3ID3)
itkInPlaceImageFilterID3ID3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3_GetInPlace,None,itkInPlaceImageFilterID3ID3)
itkInPlaceImageFilterID3ID3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3_InPlaceOn,None,itkInPlaceImageFilterID3ID3)
itkInPlaceImageFilterID3ID3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3_InPlaceOff,None,itkInPlaceImageFilterID3ID3)
itkInPlaceImageFilterID3ID3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3_CanRunInPlace,None,itkInPlaceImageFilterID3ID3)
itkInPlaceImageFilterID3ID3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3_GetPointer,None,itkInPlaceImageFilterID3ID3)
itkInPlaceImageFilterID3ID3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3_swigregister
itkInPlaceImageFilterID3ID3_swigregister(itkInPlaceImageFilterID3ID3)

def itkInPlaceImageFilterID3ID3_cast(*args):
  """itkInPlaceImageFilterID3ID3_cast(itkLightObject obj) -> itkInPlaceImageFilterID3ID3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3_cast(*args)

class itkInPlaceImageFilterID3IF3(itkImageToImageFilterAPython.itkImageToImageFilterID3IF3):
    """Proxy of C++ itkInPlaceImageFilterID3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IF3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IF3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IF3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IF3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IF3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IF3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IF3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterID3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterID3IF3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterID3IF3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterID3IF3
        
        Create a new object of the class itkInPlaceImageFilterID3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterID3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterID3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterID3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterID3IF3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IF3_SetInPlace,None,itkInPlaceImageFilterID3IF3)
itkInPlaceImageFilterID3IF3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IF3_GetInPlace,None,itkInPlaceImageFilterID3IF3)
itkInPlaceImageFilterID3IF3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IF3_InPlaceOn,None,itkInPlaceImageFilterID3IF3)
itkInPlaceImageFilterID3IF3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IF3_InPlaceOff,None,itkInPlaceImageFilterID3IF3)
itkInPlaceImageFilterID3IF3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IF3_CanRunInPlace,None,itkInPlaceImageFilterID3IF3)
itkInPlaceImageFilterID3IF3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IF3_GetPointer,None,itkInPlaceImageFilterID3IF3)
itkInPlaceImageFilterID3IF3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IF3_swigregister
itkInPlaceImageFilterID3IF3_swigregister(itkInPlaceImageFilterID3IF3)

def itkInPlaceImageFilterID3IF3_cast(*args):
  """itkInPlaceImageFilterID3IF3_cast(itkLightObject obj) -> itkInPlaceImageFilterID3IF3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IF3_cast(*args)

class itkInPlaceImageFilterID3IRGBAUS3(itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBAUS3):
    """Proxy of C++ itkInPlaceImageFilterID3IRGBAUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBAUS3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBAUS3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBAUS3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBAUS3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBAUS3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBAUS3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBAUS3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterID3IRGBAUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterID3IRGBAUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBAUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterID3IRGBAUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBAUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterID3IRGBAUS3
        
        Create a new object of the class itkInPlaceImageFilterID3IRGBAUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterID3IRGBAUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterID3IRGBAUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterID3IRGBAUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterID3IRGBAUS3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBAUS3_SetInPlace,None,itkInPlaceImageFilterID3IRGBAUS3)
itkInPlaceImageFilterID3IRGBAUS3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBAUS3_GetInPlace,None,itkInPlaceImageFilterID3IRGBAUS3)
itkInPlaceImageFilterID3IRGBAUS3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBAUS3_InPlaceOn,None,itkInPlaceImageFilterID3IRGBAUS3)
itkInPlaceImageFilterID3IRGBAUS3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBAUS3_InPlaceOff,None,itkInPlaceImageFilterID3IRGBAUS3)
itkInPlaceImageFilterID3IRGBAUS3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBAUS3_CanRunInPlace,None,itkInPlaceImageFilterID3IRGBAUS3)
itkInPlaceImageFilterID3IRGBAUS3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBAUS3_GetPointer,None,itkInPlaceImageFilterID3IRGBAUS3)
itkInPlaceImageFilterID3IRGBAUS3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBAUS3_swigregister
itkInPlaceImageFilterID3IRGBAUS3_swigregister(itkInPlaceImageFilterID3IRGBAUS3)

def itkInPlaceImageFilterID3IRGBAUS3_cast(*args):
  """itkInPlaceImageFilterID3IRGBAUS3_cast(itkLightObject obj) -> itkInPlaceImageFilterID3IRGBAUS3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBAUS3_cast(*args)

class itkInPlaceImageFilterID3IRGBUS3(itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBUS3):
    """Proxy of C++ itkInPlaceImageFilterID3IRGBUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBUS3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBUS3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBUS3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBUS3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBUS3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBUS3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBUS3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterID3IRGBUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterID3IRGBUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterID3IRGBUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterID3IRGBUS3
        
        Create a new object of the class itkInPlaceImageFilterID3IRGBUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterID3IRGBUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterID3IRGBUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterID3IRGBUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterID3IRGBUS3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBUS3_SetInPlace,None,itkInPlaceImageFilterID3IRGBUS3)
itkInPlaceImageFilterID3IRGBUS3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBUS3_GetInPlace,None,itkInPlaceImageFilterID3IRGBUS3)
itkInPlaceImageFilterID3IRGBUS3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBUS3_InPlaceOn,None,itkInPlaceImageFilterID3IRGBUS3)
itkInPlaceImageFilterID3IRGBUS3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBUS3_InPlaceOff,None,itkInPlaceImageFilterID3IRGBUS3)
itkInPlaceImageFilterID3IRGBUS3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBUS3_CanRunInPlace,None,itkInPlaceImageFilterID3IRGBUS3)
itkInPlaceImageFilterID3IRGBUS3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBUS3_GetPointer,None,itkInPlaceImageFilterID3IRGBUS3)
itkInPlaceImageFilterID3IRGBUS3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBUS3_swigregister
itkInPlaceImageFilterID3IRGBUS3_swigregister(itkInPlaceImageFilterID3IRGBUS3)

def itkInPlaceImageFilterID3IRGBUS3_cast(*args):
  """itkInPlaceImageFilterID3IRGBUS3_cast(itkLightObject obj) -> itkInPlaceImageFilterID3IRGBUS3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IRGBUS3_cast(*args)

class itkInPlaceImageFilterID3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3):
    """Proxy of C++ itkInPlaceImageFilterID3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUC3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUC3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUC3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUC3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUC3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUC3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUC3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterID3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterID3IUC3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterID3IUC3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterID3IUC3
        
        Create a new object of the class itkInPlaceImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterID3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterID3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterID3IUC3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUC3_SetInPlace,None,itkInPlaceImageFilterID3IUC3)
itkInPlaceImageFilterID3IUC3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUC3_GetInPlace,None,itkInPlaceImageFilterID3IUC3)
itkInPlaceImageFilterID3IUC3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUC3_InPlaceOn,None,itkInPlaceImageFilterID3IUC3)
itkInPlaceImageFilterID3IUC3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUC3_InPlaceOff,None,itkInPlaceImageFilterID3IUC3)
itkInPlaceImageFilterID3IUC3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUC3_CanRunInPlace,None,itkInPlaceImageFilterID3IUC3)
itkInPlaceImageFilterID3IUC3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUC3_GetPointer,None,itkInPlaceImageFilterID3IUC3)
itkInPlaceImageFilterID3IUC3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUC3_swigregister
itkInPlaceImageFilterID3IUC3_swigregister(itkInPlaceImageFilterID3IUC3)

def itkInPlaceImageFilterID3IUC3_cast(*args):
  """itkInPlaceImageFilterID3IUC3_cast(itkLightObject obj) -> itkInPlaceImageFilterID3IUC3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUC3_cast(*args)

class itkInPlaceImageFilterID3IUL3(itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3):
    """Proxy of C++ itkInPlaceImageFilterID3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUL3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUL3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUL3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUL3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUL3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUL3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUL3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterID3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterID3IUL3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterID3IUL3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterID3IUL3
        
        Create a new object of the class itkInPlaceImageFilterID3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterID3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterID3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterID3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterID3IUL3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUL3_SetInPlace,None,itkInPlaceImageFilterID3IUL3)
itkInPlaceImageFilterID3IUL3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUL3_GetInPlace,None,itkInPlaceImageFilterID3IUL3)
itkInPlaceImageFilterID3IUL3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUL3_InPlaceOn,None,itkInPlaceImageFilterID3IUL3)
itkInPlaceImageFilterID3IUL3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUL3_InPlaceOff,None,itkInPlaceImageFilterID3IUL3)
itkInPlaceImageFilterID3IUL3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUL3_CanRunInPlace,None,itkInPlaceImageFilterID3IUL3)
itkInPlaceImageFilterID3IUL3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUL3_GetPointer,None,itkInPlaceImageFilterID3IUL3)
itkInPlaceImageFilterID3IUL3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUL3_swigregister
itkInPlaceImageFilterID3IUL3_swigregister(itkInPlaceImageFilterID3IUL3)

def itkInPlaceImageFilterID3IUL3_cast(*args):
  """itkInPlaceImageFilterID3IUL3_cast(itkLightObject obj) -> itkInPlaceImageFilterID3IUL3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUL3_cast(*args)

class itkInPlaceImageFilterID3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3):
    """Proxy of C++ itkInPlaceImageFilterID3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUS3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUS3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUS3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUS3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUS3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUS3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUS3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterID3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterID3IUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterID3IUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterID3IUS3
        
        Create a new object of the class itkInPlaceImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterID3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterID3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterID3IUS3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUS3_SetInPlace,None,itkInPlaceImageFilterID3IUS3)
itkInPlaceImageFilterID3IUS3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUS3_GetInPlace,None,itkInPlaceImageFilterID3IUS3)
itkInPlaceImageFilterID3IUS3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUS3_InPlaceOn,None,itkInPlaceImageFilterID3IUS3)
itkInPlaceImageFilterID3IUS3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUS3_InPlaceOff,None,itkInPlaceImageFilterID3IUS3)
itkInPlaceImageFilterID3IUS3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUS3_CanRunInPlace,None,itkInPlaceImageFilterID3IUS3)
itkInPlaceImageFilterID3IUS3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUS3_GetPointer,None,itkInPlaceImageFilterID3IUS3)
itkInPlaceImageFilterID3IUS3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUS3_swigregister
itkInPlaceImageFilterID3IUS3_swigregister(itkInPlaceImageFilterID3IUS3)

def itkInPlaceImageFilterID3IUS3_cast(*args):
  """itkInPlaceImageFilterID3IUS3_cast(itkLightObject obj) -> itkInPlaceImageFilterID3IUS3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUS3_cast(*args)

class itkInPlaceImageFilterIF2ID2(itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2):
    """Proxy of C++ itkInPlaceImageFilterIF2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ID2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ID2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ID2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ID2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ID2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ID2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ID2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIF2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIF2ID2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIF2ID2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIF2ID2
        
        Create a new object of the class itkInPlaceImageFilterIF2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIF2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIF2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIF2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIF2ID2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ID2_SetInPlace,None,itkInPlaceImageFilterIF2ID2)
itkInPlaceImageFilterIF2ID2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ID2_GetInPlace,None,itkInPlaceImageFilterIF2ID2)
itkInPlaceImageFilterIF2ID2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ID2_InPlaceOn,None,itkInPlaceImageFilterIF2ID2)
itkInPlaceImageFilterIF2ID2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ID2_InPlaceOff,None,itkInPlaceImageFilterIF2ID2)
itkInPlaceImageFilterIF2ID2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ID2_CanRunInPlace,None,itkInPlaceImageFilterIF2ID2)
itkInPlaceImageFilterIF2ID2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ID2_GetPointer,None,itkInPlaceImageFilterIF2ID2)
itkInPlaceImageFilterIF2ID2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ID2_swigregister
itkInPlaceImageFilterIF2ID2_swigregister(itkInPlaceImageFilterIF2ID2)

def itkInPlaceImageFilterIF2ID2_cast(*args):
  """itkInPlaceImageFilterIF2ID2_cast(itkLightObject obj) -> itkInPlaceImageFilterIF2ID2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ID2_cast(*args)

class itkInPlaceImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkInPlaceImageFilterIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIF2IF2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIF2IF2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIF2IF2
        
        Create a new object of the class itkInPlaceImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIF2IF2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2_SetInPlace,None,itkInPlaceImageFilterIF2IF2)
itkInPlaceImageFilterIF2IF2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2_GetInPlace,None,itkInPlaceImageFilterIF2IF2)
itkInPlaceImageFilterIF2IF2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2_InPlaceOn,None,itkInPlaceImageFilterIF2IF2)
itkInPlaceImageFilterIF2IF2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2_InPlaceOff,None,itkInPlaceImageFilterIF2IF2)
itkInPlaceImageFilterIF2IF2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2_CanRunInPlace,None,itkInPlaceImageFilterIF2IF2)
itkInPlaceImageFilterIF2IF2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2_GetPointer,None,itkInPlaceImageFilterIF2IF2)
itkInPlaceImageFilterIF2IF2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2_swigregister
itkInPlaceImageFilterIF2IF2_swigregister(itkInPlaceImageFilterIF2IF2)

def itkInPlaceImageFilterIF2IF2_cast(*args):
  """itkInPlaceImageFilterIF2IF2_cast(itkLightObject obj) -> itkInPlaceImageFilterIF2IF2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2_cast(*args)

class itkInPlaceImageFilterIF2IRGBAUS2(itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBAUS2):
    """Proxy of C++ itkInPlaceImageFilterIF2IRGBAUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBAUS2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBAUS2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBAUS2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBAUS2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBAUS2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBAUS2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBAUS2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIF2IRGBAUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIF2IRGBAUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBAUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIF2IRGBAUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBAUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIF2IRGBAUS2
        
        Create a new object of the class itkInPlaceImageFilterIF2IRGBAUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIF2IRGBAUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIF2IRGBAUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIF2IRGBAUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIF2IRGBAUS2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBAUS2_SetInPlace,None,itkInPlaceImageFilterIF2IRGBAUS2)
itkInPlaceImageFilterIF2IRGBAUS2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBAUS2_GetInPlace,None,itkInPlaceImageFilterIF2IRGBAUS2)
itkInPlaceImageFilterIF2IRGBAUS2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBAUS2_InPlaceOn,None,itkInPlaceImageFilterIF2IRGBAUS2)
itkInPlaceImageFilterIF2IRGBAUS2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBAUS2_InPlaceOff,None,itkInPlaceImageFilterIF2IRGBAUS2)
itkInPlaceImageFilterIF2IRGBAUS2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBAUS2_CanRunInPlace,None,itkInPlaceImageFilterIF2IRGBAUS2)
itkInPlaceImageFilterIF2IRGBAUS2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBAUS2_GetPointer,None,itkInPlaceImageFilterIF2IRGBAUS2)
itkInPlaceImageFilterIF2IRGBAUS2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBAUS2_swigregister
itkInPlaceImageFilterIF2IRGBAUS2_swigregister(itkInPlaceImageFilterIF2IRGBAUS2)

def itkInPlaceImageFilterIF2IRGBAUS2_cast(*args):
  """itkInPlaceImageFilterIF2IRGBAUS2_cast(itkLightObject obj) -> itkInPlaceImageFilterIF2IRGBAUS2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBAUS2_cast(*args)

class itkInPlaceImageFilterIF2IRGBUS2(itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBUS2):
    """Proxy of C++ itkInPlaceImageFilterIF2IRGBUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBUS2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBUS2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBUS2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBUS2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBUS2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBUS2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBUS2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIF2IRGBUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIF2IRGBUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIF2IRGBUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIF2IRGBUS2
        
        Create a new object of the class itkInPlaceImageFilterIF2IRGBUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIF2IRGBUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIF2IRGBUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIF2IRGBUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIF2IRGBUS2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBUS2_SetInPlace,None,itkInPlaceImageFilterIF2IRGBUS2)
itkInPlaceImageFilterIF2IRGBUS2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBUS2_GetInPlace,None,itkInPlaceImageFilterIF2IRGBUS2)
itkInPlaceImageFilterIF2IRGBUS2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBUS2_InPlaceOn,None,itkInPlaceImageFilterIF2IRGBUS2)
itkInPlaceImageFilterIF2IRGBUS2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBUS2_InPlaceOff,None,itkInPlaceImageFilterIF2IRGBUS2)
itkInPlaceImageFilterIF2IRGBUS2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBUS2_CanRunInPlace,None,itkInPlaceImageFilterIF2IRGBUS2)
itkInPlaceImageFilterIF2IRGBUS2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBUS2_GetPointer,None,itkInPlaceImageFilterIF2IRGBUS2)
itkInPlaceImageFilterIF2IRGBUS2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBUS2_swigregister
itkInPlaceImageFilterIF2IRGBUS2_swigregister(itkInPlaceImageFilterIF2IRGBUS2)

def itkInPlaceImageFilterIF2IRGBUS2_cast(*args):
  """itkInPlaceImageFilterIF2IRGBUS2_cast(itkLightObject obj) -> itkInPlaceImageFilterIF2IRGBUS2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IRGBUS2_cast(*args)

class itkInPlaceImageFilterIF2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2):
    """Proxy of C++ itkInPlaceImageFilterIF2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIF2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIF2IUC2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIF2IUC2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIF2IUC2
        
        Create a new object of the class itkInPlaceImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIF2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIF2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIF2IUC2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2_SetInPlace,None,itkInPlaceImageFilterIF2IUC2)
itkInPlaceImageFilterIF2IUC2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2_GetInPlace,None,itkInPlaceImageFilterIF2IUC2)
itkInPlaceImageFilterIF2IUC2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2_InPlaceOn,None,itkInPlaceImageFilterIF2IUC2)
itkInPlaceImageFilterIF2IUC2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2_InPlaceOff,None,itkInPlaceImageFilterIF2IUC2)
itkInPlaceImageFilterIF2IUC2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2_CanRunInPlace,None,itkInPlaceImageFilterIF2IUC2)
itkInPlaceImageFilterIF2IUC2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2_GetPointer,None,itkInPlaceImageFilterIF2IUC2)
itkInPlaceImageFilterIF2IUC2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2_swigregister
itkInPlaceImageFilterIF2IUC2_swigregister(itkInPlaceImageFilterIF2IUC2)

def itkInPlaceImageFilterIF2IUC2_cast(*args):
  """itkInPlaceImageFilterIF2IUC2_cast(itkLightObject obj) -> itkInPlaceImageFilterIF2IUC2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2_cast(*args)

class itkInPlaceImageFilterIF2IUL2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2):
    """Proxy of C++ itkInPlaceImageFilterIF2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUL2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUL2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUL2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUL2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUL2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUL2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUL2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIF2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIF2IUL2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIF2IUL2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIF2IUL2
        
        Create a new object of the class itkInPlaceImageFilterIF2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIF2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIF2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIF2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIF2IUL2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUL2_SetInPlace,None,itkInPlaceImageFilterIF2IUL2)
itkInPlaceImageFilterIF2IUL2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUL2_GetInPlace,None,itkInPlaceImageFilterIF2IUL2)
itkInPlaceImageFilterIF2IUL2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUL2_InPlaceOn,None,itkInPlaceImageFilterIF2IUL2)
itkInPlaceImageFilterIF2IUL2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUL2_InPlaceOff,None,itkInPlaceImageFilterIF2IUL2)
itkInPlaceImageFilterIF2IUL2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUL2_CanRunInPlace,None,itkInPlaceImageFilterIF2IUL2)
itkInPlaceImageFilterIF2IUL2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUL2_GetPointer,None,itkInPlaceImageFilterIF2IUL2)
itkInPlaceImageFilterIF2IUL2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUL2_swigregister
itkInPlaceImageFilterIF2IUL2_swigregister(itkInPlaceImageFilterIF2IUL2)

def itkInPlaceImageFilterIF2IUL2_cast(*args):
  """itkInPlaceImageFilterIF2IUL2_cast(itkLightObject obj) -> itkInPlaceImageFilterIF2IUL2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUL2_cast(*args)

class itkInPlaceImageFilterIF2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2):
    """Proxy of C++ itkInPlaceImageFilterIF2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUS2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUS2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUS2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUS2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUS2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUS2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUS2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIF2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIF2IUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIF2IUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIF2IUS2
        
        Create a new object of the class itkInPlaceImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIF2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIF2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIF2IUS2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUS2_SetInPlace,None,itkInPlaceImageFilterIF2IUS2)
itkInPlaceImageFilterIF2IUS2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUS2_GetInPlace,None,itkInPlaceImageFilterIF2IUS2)
itkInPlaceImageFilterIF2IUS2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUS2_InPlaceOn,None,itkInPlaceImageFilterIF2IUS2)
itkInPlaceImageFilterIF2IUS2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUS2_InPlaceOff,None,itkInPlaceImageFilterIF2IUS2)
itkInPlaceImageFilterIF2IUS2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUS2_CanRunInPlace,None,itkInPlaceImageFilterIF2IUS2)
itkInPlaceImageFilterIF2IUS2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUS2_GetPointer,None,itkInPlaceImageFilterIF2IUS2)
itkInPlaceImageFilterIF2IUS2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUS2_swigregister
itkInPlaceImageFilterIF2IUS2_swigregister(itkInPlaceImageFilterIF2IUS2)

def itkInPlaceImageFilterIF2IUS2_cast(*args):
  """itkInPlaceImageFilterIF2IUS2_cast(itkLightObject obj) -> itkInPlaceImageFilterIF2IUS2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUS2_cast(*args)

class itkInPlaceImageFilterIF3ID3(itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3):
    """Proxy of C++ itkInPlaceImageFilterIF3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ID3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ID3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ID3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ID3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ID3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ID3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ID3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIF3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIF3ID3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIF3ID3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIF3ID3
        
        Create a new object of the class itkInPlaceImageFilterIF3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIF3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIF3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIF3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIF3ID3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ID3_SetInPlace,None,itkInPlaceImageFilterIF3ID3)
itkInPlaceImageFilterIF3ID3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ID3_GetInPlace,None,itkInPlaceImageFilterIF3ID3)
itkInPlaceImageFilterIF3ID3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ID3_InPlaceOn,None,itkInPlaceImageFilterIF3ID3)
itkInPlaceImageFilterIF3ID3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ID3_InPlaceOff,None,itkInPlaceImageFilterIF3ID3)
itkInPlaceImageFilterIF3ID3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ID3_CanRunInPlace,None,itkInPlaceImageFilterIF3ID3)
itkInPlaceImageFilterIF3ID3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ID3_GetPointer,None,itkInPlaceImageFilterIF3ID3)
itkInPlaceImageFilterIF3ID3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ID3_swigregister
itkInPlaceImageFilterIF3ID3_swigregister(itkInPlaceImageFilterIF3ID3)

def itkInPlaceImageFilterIF3ID3_cast(*args):
  """itkInPlaceImageFilterIF3ID3_cast(itkLightObject obj) -> itkInPlaceImageFilterIF3ID3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ID3_cast(*args)

class itkInPlaceImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkInPlaceImageFilterIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIF3IF3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIF3IF3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIF3IF3
        
        Create a new object of the class itkInPlaceImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIF3IF3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3_SetInPlace,None,itkInPlaceImageFilterIF3IF3)
itkInPlaceImageFilterIF3IF3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3_GetInPlace,None,itkInPlaceImageFilterIF3IF3)
itkInPlaceImageFilterIF3IF3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3_InPlaceOn,None,itkInPlaceImageFilterIF3IF3)
itkInPlaceImageFilterIF3IF3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3_InPlaceOff,None,itkInPlaceImageFilterIF3IF3)
itkInPlaceImageFilterIF3IF3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3_CanRunInPlace,None,itkInPlaceImageFilterIF3IF3)
itkInPlaceImageFilterIF3IF3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3_GetPointer,None,itkInPlaceImageFilterIF3IF3)
itkInPlaceImageFilterIF3IF3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3_swigregister
itkInPlaceImageFilterIF3IF3_swigregister(itkInPlaceImageFilterIF3IF3)

def itkInPlaceImageFilterIF3IF3_cast(*args):
  """itkInPlaceImageFilterIF3IF3_cast(itkLightObject obj) -> itkInPlaceImageFilterIF3IF3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3_cast(*args)

class itkInPlaceImageFilterIF3IRGBAUS3(itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBAUS3):
    """Proxy of C++ itkInPlaceImageFilterIF3IRGBAUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBAUS3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBAUS3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBAUS3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBAUS3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBAUS3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBAUS3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBAUS3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIF3IRGBAUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIF3IRGBAUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBAUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIF3IRGBAUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBAUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIF3IRGBAUS3
        
        Create a new object of the class itkInPlaceImageFilterIF3IRGBAUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIF3IRGBAUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIF3IRGBAUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIF3IRGBAUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIF3IRGBAUS3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBAUS3_SetInPlace,None,itkInPlaceImageFilterIF3IRGBAUS3)
itkInPlaceImageFilterIF3IRGBAUS3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBAUS3_GetInPlace,None,itkInPlaceImageFilterIF3IRGBAUS3)
itkInPlaceImageFilterIF3IRGBAUS3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBAUS3_InPlaceOn,None,itkInPlaceImageFilterIF3IRGBAUS3)
itkInPlaceImageFilterIF3IRGBAUS3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBAUS3_InPlaceOff,None,itkInPlaceImageFilterIF3IRGBAUS3)
itkInPlaceImageFilterIF3IRGBAUS3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBAUS3_CanRunInPlace,None,itkInPlaceImageFilterIF3IRGBAUS3)
itkInPlaceImageFilterIF3IRGBAUS3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBAUS3_GetPointer,None,itkInPlaceImageFilterIF3IRGBAUS3)
itkInPlaceImageFilterIF3IRGBAUS3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBAUS3_swigregister
itkInPlaceImageFilterIF3IRGBAUS3_swigregister(itkInPlaceImageFilterIF3IRGBAUS3)

def itkInPlaceImageFilterIF3IRGBAUS3_cast(*args):
  """itkInPlaceImageFilterIF3IRGBAUS3_cast(itkLightObject obj) -> itkInPlaceImageFilterIF3IRGBAUS3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBAUS3_cast(*args)

class itkInPlaceImageFilterIF3IRGBUS3(itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBUS3):
    """Proxy of C++ itkInPlaceImageFilterIF3IRGBUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBUS3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBUS3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBUS3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBUS3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBUS3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBUS3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBUS3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIF3IRGBUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIF3IRGBUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIF3IRGBUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIF3IRGBUS3
        
        Create a new object of the class itkInPlaceImageFilterIF3IRGBUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIF3IRGBUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIF3IRGBUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIF3IRGBUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIF3IRGBUS3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBUS3_SetInPlace,None,itkInPlaceImageFilterIF3IRGBUS3)
itkInPlaceImageFilterIF3IRGBUS3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBUS3_GetInPlace,None,itkInPlaceImageFilterIF3IRGBUS3)
itkInPlaceImageFilterIF3IRGBUS3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBUS3_InPlaceOn,None,itkInPlaceImageFilterIF3IRGBUS3)
itkInPlaceImageFilterIF3IRGBUS3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBUS3_InPlaceOff,None,itkInPlaceImageFilterIF3IRGBUS3)
itkInPlaceImageFilterIF3IRGBUS3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBUS3_CanRunInPlace,None,itkInPlaceImageFilterIF3IRGBUS3)
itkInPlaceImageFilterIF3IRGBUS3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBUS3_GetPointer,None,itkInPlaceImageFilterIF3IRGBUS3)
itkInPlaceImageFilterIF3IRGBUS3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBUS3_swigregister
itkInPlaceImageFilterIF3IRGBUS3_swigregister(itkInPlaceImageFilterIF3IRGBUS3)

def itkInPlaceImageFilterIF3IRGBUS3_cast(*args):
  """itkInPlaceImageFilterIF3IRGBUS3_cast(itkLightObject obj) -> itkInPlaceImageFilterIF3IRGBUS3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IRGBUS3_cast(*args)

class itkInPlaceImageFilterIF3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3):
    """Proxy of C++ itkInPlaceImageFilterIF3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIF3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIF3IUC3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIF3IUC3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIF3IUC3
        
        Create a new object of the class itkInPlaceImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIF3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIF3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIF3IUC3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3_SetInPlace,None,itkInPlaceImageFilterIF3IUC3)
itkInPlaceImageFilterIF3IUC3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3_GetInPlace,None,itkInPlaceImageFilterIF3IUC3)
itkInPlaceImageFilterIF3IUC3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3_InPlaceOn,None,itkInPlaceImageFilterIF3IUC3)
itkInPlaceImageFilterIF3IUC3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3_InPlaceOff,None,itkInPlaceImageFilterIF3IUC3)
itkInPlaceImageFilterIF3IUC3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3_CanRunInPlace,None,itkInPlaceImageFilterIF3IUC3)
itkInPlaceImageFilterIF3IUC3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3_GetPointer,None,itkInPlaceImageFilterIF3IUC3)
itkInPlaceImageFilterIF3IUC3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3_swigregister
itkInPlaceImageFilterIF3IUC3_swigregister(itkInPlaceImageFilterIF3IUC3)

def itkInPlaceImageFilterIF3IUC3_cast(*args):
  """itkInPlaceImageFilterIF3IUC3_cast(itkLightObject obj) -> itkInPlaceImageFilterIF3IUC3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3_cast(*args)

class itkInPlaceImageFilterIF3IUL3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3):
    """Proxy of C++ itkInPlaceImageFilterIF3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUL3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUL3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUL3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUL3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUL3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUL3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUL3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIF3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIF3IUL3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIF3IUL3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIF3IUL3
        
        Create a new object of the class itkInPlaceImageFilterIF3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIF3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIF3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIF3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIF3IUL3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUL3_SetInPlace,None,itkInPlaceImageFilterIF3IUL3)
itkInPlaceImageFilterIF3IUL3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUL3_GetInPlace,None,itkInPlaceImageFilterIF3IUL3)
itkInPlaceImageFilterIF3IUL3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUL3_InPlaceOn,None,itkInPlaceImageFilterIF3IUL3)
itkInPlaceImageFilterIF3IUL3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUL3_InPlaceOff,None,itkInPlaceImageFilterIF3IUL3)
itkInPlaceImageFilterIF3IUL3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUL3_CanRunInPlace,None,itkInPlaceImageFilterIF3IUL3)
itkInPlaceImageFilterIF3IUL3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUL3_GetPointer,None,itkInPlaceImageFilterIF3IUL3)
itkInPlaceImageFilterIF3IUL3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUL3_swigregister
itkInPlaceImageFilterIF3IUL3_swigregister(itkInPlaceImageFilterIF3IUL3)

def itkInPlaceImageFilterIF3IUL3_cast(*args):
  """itkInPlaceImageFilterIF3IUL3_cast(itkLightObject obj) -> itkInPlaceImageFilterIF3IUL3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUL3_cast(*args)

class itkInPlaceImageFilterIF3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3):
    """Proxy of C++ itkInPlaceImageFilterIF3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUS3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUS3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUS3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUS3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUS3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUS3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUS3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIF3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIF3IUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIF3IUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIF3IUS3
        
        Create a new object of the class itkInPlaceImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIF3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIF3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIF3IUS3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUS3_SetInPlace,None,itkInPlaceImageFilterIF3IUS3)
itkInPlaceImageFilterIF3IUS3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUS3_GetInPlace,None,itkInPlaceImageFilterIF3IUS3)
itkInPlaceImageFilterIF3IUS3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUS3_InPlaceOn,None,itkInPlaceImageFilterIF3IUS3)
itkInPlaceImageFilterIF3IUS3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUS3_InPlaceOff,None,itkInPlaceImageFilterIF3IUS3)
itkInPlaceImageFilterIF3IUS3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUS3_CanRunInPlace,None,itkInPlaceImageFilterIF3IUS3)
itkInPlaceImageFilterIF3IUS3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUS3_GetPointer,None,itkInPlaceImageFilterIF3IUS3)
itkInPlaceImageFilterIF3IUS3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUS3_swigregister
itkInPlaceImageFilterIF3IUS3_swigregister(itkInPlaceImageFilterIF3IUS3)

def itkInPlaceImageFilterIF3IUS3_cast(*args):
  """itkInPlaceImageFilterIF3IUS3_cast(itkLightObject obj) -> itkInPlaceImageFilterIF3IUS3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUS3_cast(*args)

class itkInPlaceImageFilterIRGBAUC2IRGBAUC2(itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2):
    """Proxy of C++ itkInPlaceImageFilterIRGBAUC2IRGBAUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUC2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUC2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUC2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUC2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUC2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUC2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUC2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIRGBAUC2IRGBAUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBAUC2IRGBAUC2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIRGBAUC2IRGBAUC2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIRGBAUC2IRGBAUC2
        
        Create a new object of the class itkInPlaceImageFilterIRGBAUC2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIRGBAUC2IRGBAUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIRGBAUC2IRGBAUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIRGBAUC2IRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIRGBAUC2IRGBAUC2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUC2_SetInPlace,None,itkInPlaceImageFilterIRGBAUC2IRGBAUC2)
itkInPlaceImageFilterIRGBAUC2IRGBAUC2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUC2_GetInPlace,None,itkInPlaceImageFilterIRGBAUC2IRGBAUC2)
itkInPlaceImageFilterIRGBAUC2IRGBAUC2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUC2_InPlaceOn,None,itkInPlaceImageFilterIRGBAUC2IRGBAUC2)
itkInPlaceImageFilterIRGBAUC2IRGBAUC2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUC2_InPlaceOff,None,itkInPlaceImageFilterIRGBAUC2IRGBAUC2)
itkInPlaceImageFilterIRGBAUC2IRGBAUC2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUC2_CanRunInPlace,None,itkInPlaceImageFilterIRGBAUC2IRGBAUC2)
itkInPlaceImageFilterIRGBAUC2IRGBAUC2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUC2_GetPointer,None,itkInPlaceImageFilterIRGBAUC2IRGBAUC2)
itkInPlaceImageFilterIRGBAUC2IRGBAUC2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUC2_swigregister
itkInPlaceImageFilterIRGBAUC2IRGBAUC2_swigregister(itkInPlaceImageFilterIRGBAUC2IRGBAUC2)

def itkInPlaceImageFilterIRGBAUC2IRGBAUC2_cast(*args):
  """itkInPlaceImageFilterIRGBAUC2IRGBAUC2_cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBAUC2IRGBAUC2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUC2_cast(*args)

class itkInPlaceImageFilterIRGBAUC2IRGBAUS2(itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUS2):
    """Proxy of C++ itkInPlaceImageFilterIRGBAUC2IRGBAUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUS2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUS2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUS2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUS2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUS2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUS2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUS2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIRGBAUC2IRGBAUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBAUC2IRGBAUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIRGBAUC2IRGBAUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIRGBAUC2IRGBAUS2
        
        Create a new object of the class itkInPlaceImageFilterIRGBAUC2IRGBAUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIRGBAUC2IRGBAUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIRGBAUC2IRGBAUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIRGBAUC2IRGBAUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIRGBAUC2IRGBAUS2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUS2_SetInPlace,None,itkInPlaceImageFilterIRGBAUC2IRGBAUS2)
itkInPlaceImageFilterIRGBAUC2IRGBAUS2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUS2_GetInPlace,None,itkInPlaceImageFilterIRGBAUC2IRGBAUS2)
itkInPlaceImageFilterIRGBAUC2IRGBAUS2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUS2_InPlaceOn,None,itkInPlaceImageFilterIRGBAUC2IRGBAUS2)
itkInPlaceImageFilterIRGBAUC2IRGBAUS2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUS2_InPlaceOff,None,itkInPlaceImageFilterIRGBAUC2IRGBAUS2)
itkInPlaceImageFilterIRGBAUC2IRGBAUS2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUS2_CanRunInPlace,None,itkInPlaceImageFilterIRGBAUC2IRGBAUS2)
itkInPlaceImageFilterIRGBAUC2IRGBAUS2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUS2_GetPointer,None,itkInPlaceImageFilterIRGBAUC2IRGBAUS2)
itkInPlaceImageFilterIRGBAUC2IRGBAUS2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUS2_swigregister
itkInPlaceImageFilterIRGBAUC2IRGBAUS2_swigregister(itkInPlaceImageFilterIRGBAUC2IRGBAUS2)

def itkInPlaceImageFilterIRGBAUC2IRGBAUS2_cast(*args):
  """itkInPlaceImageFilterIRGBAUC2IRGBAUS2_cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBAUC2IRGBAUS2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUS2_cast(*args)

class itkInPlaceImageFilterIRGBAUC3IRGBAUC3(itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3):
    """Proxy of C++ itkInPlaceImageFilterIRGBAUC3IRGBAUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUC3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUC3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUC3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUC3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUC3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUC3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUC3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIRGBAUC3IRGBAUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBAUC3IRGBAUC3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIRGBAUC3IRGBAUC3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIRGBAUC3IRGBAUC3
        
        Create a new object of the class itkInPlaceImageFilterIRGBAUC3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIRGBAUC3IRGBAUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIRGBAUC3IRGBAUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIRGBAUC3IRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIRGBAUC3IRGBAUC3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUC3_SetInPlace,None,itkInPlaceImageFilterIRGBAUC3IRGBAUC3)
itkInPlaceImageFilterIRGBAUC3IRGBAUC3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUC3_GetInPlace,None,itkInPlaceImageFilterIRGBAUC3IRGBAUC3)
itkInPlaceImageFilterIRGBAUC3IRGBAUC3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUC3_InPlaceOn,None,itkInPlaceImageFilterIRGBAUC3IRGBAUC3)
itkInPlaceImageFilterIRGBAUC3IRGBAUC3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUC3_InPlaceOff,None,itkInPlaceImageFilterIRGBAUC3IRGBAUC3)
itkInPlaceImageFilterIRGBAUC3IRGBAUC3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUC3_CanRunInPlace,None,itkInPlaceImageFilterIRGBAUC3IRGBAUC3)
itkInPlaceImageFilterIRGBAUC3IRGBAUC3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUC3_GetPointer,None,itkInPlaceImageFilterIRGBAUC3IRGBAUC3)
itkInPlaceImageFilterIRGBAUC3IRGBAUC3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUC3_swigregister
itkInPlaceImageFilterIRGBAUC3IRGBAUC3_swigregister(itkInPlaceImageFilterIRGBAUC3IRGBAUC3)

def itkInPlaceImageFilterIRGBAUC3IRGBAUC3_cast(*args):
  """itkInPlaceImageFilterIRGBAUC3IRGBAUC3_cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBAUC3IRGBAUC3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUC3_cast(*args)

class itkInPlaceImageFilterIRGBAUC3IRGBAUS3(itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUS3):
    """Proxy of C++ itkInPlaceImageFilterIRGBAUC3IRGBAUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUS3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUS3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUS3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUS3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUS3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUS3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUS3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIRGBAUC3IRGBAUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBAUC3IRGBAUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIRGBAUC3IRGBAUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIRGBAUC3IRGBAUS3
        
        Create a new object of the class itkInPlaceImageFilterIRGBAUC3IRGBAUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIRGBAUC3IRGBAUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIRGBAUC3IRGBAUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIRGBAUC3IRGBAUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIRGBAUC3IRGBAUS3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUS3_SetInPlace,None,itkInPlaceImageFilterIRGBAUC3IRGBAUS3)
itkInPlaceImageFilterIRGBAUC3IRGBAUS3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUS3_GetInPlace,None,itkInPlaceImageFilterIRGBAUC3IRGBAUS3)
itkInPlaceImageFilterIRGBAUC3IRGBAUS3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUS3_InPlaceOn,None,itkInPlaceImageFilterIRGBAUC3IRGBAUS3)
itkInPlaceImageFilterIRGBAUC3IRGBAUS3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUS3_InPlaceOff,None,itkInPlaceImageFilterIRGBAUC3IRGBAUS3)
itkInPlaceImageFilterIRGBAUC3IRGBAUS3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUS3_CanRunInPlace,None,itkInPlaceImageFilterIRGBAUC3IRGBAUS3)
itkInPlaceImageFilterIRGBAUC3IRGBAUS3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUS3_GetPointer,None,itkInPlaceImageFilterIRGBAUC3IRGBAUS3)
itkInPlaceImageFilterIRGBAUC3IRGBAUS3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUS3_swigregister
itkInPlaceImageFilterIRGBAUC3IRGBAUS3_swigregister(itkInPlaceImageFilterIRGBAUC3IRGBAUS3)

def itkInPlaceImageFilterIRGBAUC3IRGBAUS3_cast(*args):
  """itkInPlaceImageFilterIRGBAUC3IRGBAUS3_cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBAUC3IRGBAUS3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUS3_cast(*args)

class itkInPlaceImageFilterIRGBAUS2IRGBAUC2(itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUC2):
    """Proxy of C++ itkInPlaceImageFilterIRGBAUS2IRGBAUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUC2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUC2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUC2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUC2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUC2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUC2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUC2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIRGBAUS2IRGBAUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBAUS2IRGBAUC2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIRGBAUS2IRGBAUC2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIRGBAUS2IRGBAUC2
        
        Create a new object of the class itkInPlaceImageFilterIRGBAUS2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIRGBAUS2IRGBAUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIRGBAUS2IRGBAUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIRGBAUS2IRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIRGBAUS2IRGBAUC2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUC2_SetInPlace,None,itkInPlaceImageFilterIRGBAUS2IRGBAUC2)
itkInPlaceImageFilterIRGBAUS2IRGBAUC2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUC2_GetInPlace,None,itkInPlaceImageFilterIRGBAUS2IRGBAUC2)
itkInPlaceImageFilterIRGBAUS2IRGBAUC2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUC2_InPlaceOn,None,itkInPlaceImageFilterIRGBAUS2IRGBAUC2)
itkInPlaceImageFilterIRGBAUS2IRGBAUC2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUC2_InPlaceOff,None,itkInPlaceImageFilterIRGBAUS2IRGBAUC2)
itkInPlaceImageFilterIRGBAUS2IRGBAUC2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUC2_CanRunInPlace,None,itkInPlaceImageFilterIRGBAUS2IRGBAUC2)
itkInPlaceImageFilterIRGBAUS2IRGBAUC2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUC2_GetPointer,None,itkInPlaceImageFilterIRGBAUS2IRGBAUC2)
itkInPlaceImageFilterIRGBAUS2IRGBAUC2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUC2_swigregister
itkInPlaceImageFilterIRGBAUS2IRGBAUC2_swigregister(itkInPlaceImageFilterIRGBAUS2IRGBAUC2)

def itkInPlaceImageFilterIRGBAUS2IRGBAUC2_cast(*args):
  """itkInPlaceImageFilterIRGBAUS2IRGBAUC2_cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBAUS2IRGBAUC2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUC2_cast(*args)

class itkInPlaceImageFilterIRGBAUS2IRGBAUS2(itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUS2):
    """Proxy of C++ itkInPlaceImageFilterIRGBAUS2IRGBAUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUS2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUS2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUS2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUS2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUS2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUS2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUS2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIRGBAUS2IRGBAUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBAUS2IRGBAUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIRGBAUS2IRGBAUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIRGBAUS2IRGBAUS2
        
        Create a new object of the class itkInPlaceImageFilterIRGBAUS2IRGBAUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIRGBAUS2IRGBAUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIRGBAUS2IRGBAUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIRGBAUS2IRGBAUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIRGBAUS2IRGBAUS2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUS2_SetInPlace,None,itkInPlaceImageFilterIRGBAUS2IRGBAUS2)
itkInPlaceImageFilterIRGBAUS2IRGBAUS2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUS2_GetInPlace,None,itkInPlaceImageFilterIRGBAUS2IRGBAUS2)
itkInPlaceImageFilterIRGBAUS2IRGBAUS2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUS2_InPlaceOn,None,itkInPlaceImageFilterIRGBAUS2IRGBAUS2)
itkInPlaceImageFilterIRGBAUS2IRGBAUS2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUS2_InPlaceOff,None,itkInPlaceImageFilterIRGBAUS2IRGBAUS2)
itkInPlaceImageFilterIRGBAUS2IRGBAUS2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUS2_CanRunInPlace,None,itkInPlaceImageFilterIRGBAUS2IRGBAUS2)
itkInPlaceImageFilterIRGBAUS2IRGBAUS2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUS2_GetPointer,None,itkInPlaceImageFilterIRGBAUS2IRGBAUS2)
itkInPlaceImageFilterIRGBAUS2IRGBAUS2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUS2_swigregister
itkInPlaceImageFilterIRGBAUS2IRGBAUS2_swigregister(itkInPlaceImageFilterIRGBAUS2IRGBAUS2)

def itkInPlaceImageFilterIRGBAUS2IRGBAUS2_cast(*args):
  """itkInPlaceImageFilterIRGBAUS2IRGBAUS2_cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBAUS2IRGBAUS2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IRGBAUS2_cast(*args)

class itkInPlaceImageFilterIRGBAUS2IUS2(itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS2IUS2):
    """Proxy of C++ itkInPlaceImageFilterIRGBAUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IUS2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IUS2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IUS2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IUS2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IUS2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IUS2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IUS2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIRGBAUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBAUS2IUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIRGBAUS2IUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIRGBAUS2IUS2
        
        Create a new object of the class itkInPlaceImageFilterIRGBAUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIRGBAUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIRGBAUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIRGBAUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIRGBAUS2IUS2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IUS2_SetInPlace,None,itkInPlaceImageFilterIRGBAUS2IUS2)
itkInPlaceImageFilterIRGBAUS2IUS2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IUS2_GetInPlace,None,itkInPlaceImageFilterIRGBAUS2IUS2)
itkInPlaceImageFilterIRGBAUS2IUS2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IUS2_InPlaceOn,None,itkInPlaceImageFilterIRGBAUS2IUS2)
itkInPlaceImageFilterIRGBAUS2IUS2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IUS2_InPlaceOff,None,itkInPlaceImageFilterIRGBAUS2IUS2)
itkInPlaceImageFilterIRGBAUS2IUS2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IUS2_CanRunInPlace,None,itkInPlaceImageFilterIRGBAUS2IUS2)
itkInPlaceImageFilterIRGBAUS2IUS2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IUS2_GetPointer,None,itkInPlaceImageFilterIRGBAUS2IUS2)
itkInPlaceImageFilterIRGBAUS2IUS2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IUS2_swigregister
itkInPlaceImageFilterIRGBAUS2IUS2_swigregister(itkInPlaceImageFilterIRGBAUS2IUS2)

def itkInPlaceImageFilterIRGBAUS2IUS2_cast(*args):
  """itkInPlaceImageFilterIRGBAUS2IUS2_cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBAUS2IUS2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS2IUS2_cast(*args)

class itkInPlaceImageFilterIRGBAUS3IRGBAUC3(itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUC3):
    """Proxy of C++ itkInPlaceImageFilterIRGBAUS3IRGBAUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUC3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUC3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUC3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUC3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUC3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUC3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUC3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIRGBAUS3IRGBAUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBAUS3IRGBAUC3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIRGBAUS3IRGBAUC3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIRGBAUS3IRGBAUC3
        
        Create a new object of the class itkInPlaceImageFilterIRGBAUS3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIRGBAUS3IRGBAUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIRGBAUS3IRGBAUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIRGBAUS3IRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIRGBAUS3IRGBAUC3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUC3_SetInPlace,None,itkInPlaceImageFilterIRGBAUS3IRGBAUC3)
itkInPlaceImageFilterIRGBAUS3IRGBAUC3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUC3_GetInPlace,None,itkInPlaceImageFilterIRGBAUS3IRGBAUC3)
itkInPlaceImageFilterIRGBAUS3IRGBAUC3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUC3_InPlaceOn,None,itkInPlaceImageFilterIRGBAUS3IRGBAUC3)
itkInPlaceImageFilterIRGBAUS3IRGBAUC3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUC3_InPlaceOff,None,itkInPlaceImageFilterIRGBAUS3IRGBAUC3)
itkInPlaceImageFilterIRGBAUS3IRGBAUC3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUC3_CanRunInPlace,None,itkInPlaceImageFilterIRGBAUS3IRGBAUC3)
itkInPlaceImageFilterIRGBAUS3IRGBAUC3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUC3_GetPointer,None,itkInPlaceImageFilterIRGBAUS3IRGBAUC3)
itkInPlaceImageFilterIRGBAUS3IRGBAUC3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUC3_swigregister
itkInPlaceImageFilterIRGBAUS3IRGBAUC3_swigregister(itkInPlaceImageFilterIRGBAUS3IRGBAUC3)

def itkInPlaceImageFilterIRGBAUS3IRGBAUC3_cast(*args):
  """itkInPlaceImageFilterIRGBAUS3IRGBAUC3_cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBAUS3IRGBAUC3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUC3_cast(*args)

class itkInPlaceImageFilterIRGBAUS3IRGBAUS3(itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUS3):
    """Proxy of C++ itkInPlaceImageFilterIRGBAUS3IRGBAUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUS3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUS3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUS3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUS3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUS3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUS3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUS3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIRGBAUS3IRGBAUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBAUS3IRGBAUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIRGBAUS3IRGBAUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIRGBAUS3IRGBAUS3
        
        Create a new object of the class itkInPlaceImageFilterIRGBAUS3IRGBAUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIRGBAUS3IRGBAUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIRGBAUS3IRGBAUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIRGBAUS3IRGBAUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIRGBAUS3IRGBAUS3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUS3_SetInPlace,None,itkInPlaceImageFilterIRGBAUS3IRGBAUS3)
itkInPlaceImageFilterIRGBAUS3IRGBAUS3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUS3_GetInPlace,None,itkInPlaceImageFilterIRGBAUS3IRGBAUS3)
itkInPlaceImageFilterIRGBAUS3IRGBAUS3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUS3_InPlaceOn,None,itkInPlaceImageFilterIRGBAUS3IRGBAUS3)
itkInPlaceImageFilterIRGBAUS3IRGBAUS3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUS3_InPlaceOff,None,itkInPlaceImageFilterIRGBAUS3IRGBAUS3)
itkInPlaceImageFilterIRGBAUS3IRGBAUS3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUS3_CanRunInPlace,None,itkInPlaceImageFilterIRGBAUS3IRGBAUS3)
itkInPlaceImageFilterIRGBAUS3IRGBAUS3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUS3_GetPointer,None,itkInPlaceImageFilterIRGBAUS3IRGBAUS3)
itkInPlaceImageFilterIRGBAUS3IRGBAUS3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUS3_swigregister
itkInPlaceImageFilterIRGBAUS3IRGBAUS3_swigregister(itkInPlaceImageFilterIRGBAUS3IRGBAUS3)

def itkInPlaceImageFilterIRGBAUS3IRGBAUS3_cast(*args):
  """itkInPlaceImageFilterIRGBAUS3IRGBAUS3_cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBAUS3IRGBAUS3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IRGBAUS3_cast(*args)

class itkInPlaceImageFilterIRGBAUS3IUS3(itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUS3IUS3):
    """Proxy of C++ itkInPlaceImageFilterIRGBAUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IUS3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IUS3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IUS3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IUS3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IUS3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IUS3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IUS3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIRGBAUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBAUS3IUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIRGBAUS3IUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIRGBAUS3IUS3
        
        Create a new object of the class itkInPlaceImageFilterIRGBAUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIRGBAUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIRGBAUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIRGBAUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIRGBAUS3IUS3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IUS3_SetInPlace,None,itkInPlaceImageFilterIRGBAUS3IUS3)
itkInPlaceImageFilterIRGBAUS3IUS3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IUS3_GetInPlace,None,itkInPlaceImageFilterIRGBAUS3IUS3)
itkInPlaceImageFilterIRGBAUS3IUS3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IUS3_InPlaceOn,None,itkInPlaceImageFilterIRGBAUS3IUS3)
itkInPlaceImageFilterIRGBAUS3IUS3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IUS3_InPlaceOff,None,itkInPlaceImageFilterIRGBAUS3IUS3)
itkInPlaceImageFilterIRGBAUS3IUS3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IUS3_CanRunInPlace,None,itkInPlaceImageFilterIRGBAUS3IUS3)
itkInPlaceImageFilterIRGBAUS3IUS3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IUS3_GetPointer,None,itkInPlaceImageFilterIRGBAUS3IUS3)
itkInPlaceImageFilterIRGBAUS3IUS3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IUS3_swigregister
itkInPlaceImageFilterIRGBAUS3IUS3_swigregister(itkInPlaceImageFilterIRGBAUS3IUS3)

def itkInPlaceImageFilterIRGBAUS3IUS3_cast(*args):
  """itkInPlaceImageFilterIRGBAUS3IUS3_cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBAUS3IUS3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUS3IUS3_cast(*args)

class itkInPlaceImageFilterIRGBUC2IRGBUC2(itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2):
    """Proxy of C++ itkInPlaceImageFilterIRGBUC2IRGBUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUC2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUC2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUC2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUC2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUC2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUC2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUC2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIRGBUC2IRGBUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBUC2IRGBUC2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIRGBUC2IRGBUC2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIRGBUC2IRGBUC2
        
        Create a new object of the class itkInPlaceImageFilterIRGBUC2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIRGBUC2IRGBUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIRGBUC2IRGBUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIRGBUC2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIRGBUC2IRGBUC2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUC2_SetInPlace,None,itkInPlaceImageFilterIRGBUC2IRGBUC2)
itkInPlaceImageFilterIRGBUC2IRGBUC2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUC2_GetInPlace,None,itkInPlaceImageFilterIRGBUC2IRGBUC2)
itkInPlaceImageFilterIRGBUC2IRGBUC2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUC2_InPlaceOn,None,itkInPlaceImageFilterIRGBUC2IRGBUC2)
itkInPlaceImageFilterIRGBUC2IRGBUC2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUC2_InPlaceOff,None,itkInPlaceImageFilterIRGBUC2IRGBUC2)
itkInPlaceImageFilterIRGBUC2IRGBUC2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUC2_CanRunInPlace,None,itkInPlaceImageFilterIRGBUC2IRGBUC2)
itkInPlaceImageFilterIRGBUC2IRGBUC2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUC2_GetPointer,None,itkInPlaceImageFilterIRGBUC2IRGBUC2)
itkInPlaceImageFilterIRGBUC2IRGBUC2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUC2_swigregister
itkInPlaceImageFilterIRGBUC2IRGBUC2_swigregister(itkInPlaceImageFilterIRGBUC2IRGBUC2)

def itkInPlaceImageFilterIRGBUC2IRGBUC2_cast(*args):
  """itkInPlaceImageFilterIRGBUC2IRGBUC2_cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBUC2IRGBUC2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUC2_cast(*args)

class itkInPlaceImageFilterIRGBUC2IRGBUS2(itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUS2):
    """Proxy of C++ itkInPlaceImageFilterIRGBUC2IRGBUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUS2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUS2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUS2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUS2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUS2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUS2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUS2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIRGBUC2IRGBUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBUC2IRGBUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIRGBUC2IRGBUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIRGBUC2IRGBUS2
        
        Create a new object of the class itkInPlaceImageFilterIRGBUC2IRGBUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIRGBUC2IRGBUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIRGBUC2IRGBUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIRGBUC2IRGBUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIRGBUC2IRGBUS2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUS2_SetInPlace,None,itkInPlaceImageFilterIRGBUC2IRGBUS2)
itkInPlaceImageFilterIRGBUC2IRGBUS2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUS2_GetInPlace,None,itkInPlaceImageFilterIRGBUC2IRGBUS2)
itkInPlaceImageFilterIRGBUC2IRGBUS2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUS2_InPlaceOn,None,itkInPlaceImageFilterIRGBUC2IRGBUS2)
itkInPlaceImageFilterIRGBUC2IRGBUS2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUS2_InPlaceOff,None,itkInPlaceImageFilterIRGBUC2IRGBUS2)
itkInPlaceImageFilterIRGBUC2IRGBUS2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUS2_CanRunInPlace,None,itkInPlaceImageFilterIRGBUC2IRGBUS2)
itkInPlaceImageFilterIRGBUC2IRGBUS2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUS2_GetPointer,None,itkInPlaceImageFilterIRGBUC2IRGBUS2)
itkInPlaceImageFilterIRGBUC2IRGBUS2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUS2_swigregister
itkInPlaceImageFilterIRGBUC2IRGBUS2_swigregister(itkInPlaceImageFilterIRGBUC2IRGBUS2)

def itkInPlaceImageFilterIRGBUC2IRGBUS2_cast(*args):
  """itkInPlaceImageFilterIRGBUC2IRGBUS2_cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBUC2IRGBUS2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUS2_cast(*args)

class itkInPlaceImageFilterIRGBUC3IRGBUC3(itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3):
    """Proxy of C++ itkInPlaceImageFilterIRGBUC3IRGBUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUC3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUC3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUC3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUC3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUC3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUC3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUC3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIRGBUC3IRGBUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBUC3IRGBUC3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIRGBUC3IRGBUC3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIRGBUC3IRGBUC3
        
        Create a new object of the class itkInPlaceImageFilterIRGBUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIRGBUC3IRGBUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIRGBUC3IRGBUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIRGBUC3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIRGBUC3IRGBUC3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUC3_SetInPlace,None,itkInPlaceImageFilterIRGBUC3IRGBUC3)
itkInPlaceImageFilterIRGBUC3IRGBUC3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUC3_GetInPlace,None,itkInPlaceImageFilterIRGBUC3IRGBUC3)
itkInPlaceImageFilterIRGBUC3IRGBUC3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUC3_InPlaceOn,None,itkInPlaceImageFilterIRGBUC3IRGBUC3)
itkInPlaceImageFilterIRGBUC3IRGBUC3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUC3_InPlaceOff,None,itkInPlaceImageFilterIRGBUC3IRGBUC3)
itkInPlaceImageFilterIRGBUC3IRGBUC3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUC3_CanRunInPlace,None,itkInPlaceImageFilterIRGBUC3IRGBUC3)
itkInPlaceImageFilterIRGBUC3IRGBUC3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUC3_GetPointer,None,itkInPlaceImageFilterIRGBUC3IRGBUC3)
itkInPlaceImageFilterIRGBUC3IRGBUC3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUC3_swigregister
itkInPlaceImageFilterIRGBUC3IRGBUC3_swigregister(itkInPlaceImageFilterIRGBUC3IRGBUC3)

def itkInPlaceImageFilterIRGBUC3IRGBUC3_cast(*args):
  """itkInPlaceImageFilterIRGBUC3IRGBUC3_cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBUC3IRGBUC3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUC3_cast(*args)

class itkInPlaceImageFilterIRGBUC3IRGBUS3(itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUS3):
    """Proxy of C++ itkInPlaceImageFilterIRGBUC3IRGBUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUS3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUS3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUS3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUS3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUS3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUS3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUS3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIRGBUC3IRGBUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBUC3IRGBUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIRGBUC3IRGBUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIRGBUC3IRGBUS3
        
        Create a new object of the class itkInPlaceImageFilterIRGBUC3IRGBUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIRGBUC3IRGBUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIRGBUC3IRGBUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIRGBUC3IRGBUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIRGBUC3IRGBUS3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUS3_SetInPlace,None,itkInPlaceImageFilterIRGBUC3IRGBUS3)
itkInPlaceImageFilterIRGBUC3IRGBUS3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUS3_GetInPlace,None,itkInPlaceImageFilterIRGBUC3IRGBUS3)
itkInPlaceImageFilterIRGBUC3IRGBUS3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUS3_InPlaceOn,None,itkInPlaceImageFilterIRGBUC3IRGBUS3)
itkInPlaceImageFilterIRGBUC3IRGBUS3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUS3_InPlaceOff,None,itkInPlaceImageFilterIRGBUC3IRGBUS3)
itkInPlaceImageFilterIRGBUC3IRGBUS3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUS3_CanRunInPlace,None,itkInPlaceImageFilterIRGBUC3IRGBUS3)
itkInPlaceImageFilterIRGBUC3IRGBUS3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUS3_GetPointer,None,itkInPlaceImageFilterIRGBUC3IRGBUS3)
itkInPlaceImageFilterIRGBUC3IRGBUS3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUS3_swigregister
itkInPlaceImageFilterIRGBUC3IRGBUS3_swigregister(itkInPlaceImageFilterIRGBUC3IRGBUS3)

def itkInPlaceImageFilterIRGBUC3IRGBUS3_cast(*args):
  """itkInPlaceImageFilterIRGBUC3IRGBUS3_cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBUC3IRGBUS3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUS3_cast(*args)

class itkInPlaceImageFilterIRGBUS2IRGBUC2(itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUC2):
    """Proxy of C++ itkInPlaceImageFilterIRGBUS2IRGBUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUC2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUC2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUC2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUC2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUC2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUC2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUC2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIRGBUS2IRGBUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBUS2IRGBUC2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIRGBUS2IRGBUC2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIRGBUS2IRGBUC2
        
        Create a new object of the class itkInPlaceImageFilterIRGBUS2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIRGBUS2IRGBUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIRGBUS2IRGBUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIRGBUS2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIRGBUS2IRGBUC2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUC2_SetInPlace,None,itkInPlaceImageFilterIRGBUS2IRGBUC2)
itkInPlaceImageFilterIRGBUS2IRGBUC2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUC2_GetInPlace,None,itkInPlaceImageFilterIRGBUS2IRGBUC2)
itkInPlaceImageFilterIRGBUS2IRGBUC2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUC2_InPlaceOn,None,itkInPlaceImageFilterIRGBUS2IRGBUC2)
itkInPlaceImageFilterIRGBUS2IRGBUC2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUC2_InPlaceOff,None,itkInPlaceImageFilterIRGBUS2IRGBUC2)
itkInPlaceImageFilterIRGBUS2IRGBUC2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUC2_CanRunInPlace,None,itkInPlaceImageFilterIRGBUS2IRGBUC2)
itkInPlaceImageFilterIRGBUS2IRGBUC2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUC2_GetPointer,None,itkInPlaceImageFilterIRGBUS2IRGBUC2)
itkInPlaceImageFilterIRGBUS2IRGBUC2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUC2_swigregister
itkInPlaceImageFilterIRGBUS2IRGBUC2_swigregister(itkInPlaceImageFilterIRGBUS2IRGBUC2)

def itkInPlaceImageFilterIRGBUS2IRGBUC2_cast(*args):
  """itkInPlaceImageFilterIRGBUS2IRGBUC2_cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBUS2IRGBUC2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUC2_cast(*args)

class itkInPlaceImageFilterIRGBUS2IRGBUS2(itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUS2):
    """Proxy of C++ itkInPlaceImageFilterIRGBUS2IRGBUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUS2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUS2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUS2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUS2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUS2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUS2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUS2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIRGBUS2IRGBUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBUS2IRGBUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIRGBUS2IRGBUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIRGBUS2IRGBUS2
        
        Create a new object of the class itkInPlaceImageFilterIRGBUS2IRGBUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIRGBUS2IRGBUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIRGBUS2IRGBUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIRGBUS2IRGBUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIRGBUS2IRGBUS2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUS2_SetInPlace,None,itkInPlaceImageFilterIRGBUS2IRGBUS2)
itkInPlaceImageFilterIRGBUS2IRGBUS2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUS2_GetInPlace,None,itkInPlaceImageFilterIRGBUS2IRGBUS2)
itkInPlaceImageFilterIRGBUS2IRGBUS2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUS2_InPlaceOn,None,itkInPlaceImageFilterIRGBUS2IRGBUS2)
itkInPlaceImageFilterIRGBUS2IRGBUS2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUS2_InPlaceOff,None,itkInPlaceImageFilterIRGBUS2IRGBUS2)
itkInPlaceImageFilterIRGBUS2IRGBUS2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUS2_CanRunInPlace,None,itkInPlaceImageFilterIRGBUS2IRGBUS2)
itkInPlaceImageFilterIRGBUS2IRGBUS2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUS2_GetPointer,None,itkInPlaceImageFilterIRGBUS2IRGBUS2)
itkInPlaceImageFilterIRGBUS2IRGBUS2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUS2_swigregister
itkInPlaceImageFilterIRGBUS2IRGBUS2_swigregister(itkInPlaceImageFilterIRGBUS2IRGBUS2)

def itkInPlaceImageFilterIRGBUS2IRGBUS2_cast(*args):
  """itkInPlaceImageFilterIRGBUS2IRGBUS2_cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBUS2IRGBUS2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IRGBUS2_cast(*args)

class itkInPlaceImageFilterIRGBUS2IUS2(itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS2IUS2):
    """Proxy of C++ itkInPlaceImageFilterIRGBUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IUS2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IUS2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IUS2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IUS2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IUS2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IUS2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IUS2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIRGBUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBUS2IUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIRGBUS2IUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIRGBUS2IUS2
        
        Create a new object of the class itkInPlaceImageFilterIRGBUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIRGBUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIRGBUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIRGBUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIRGBUS2IUS2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IUS2_SetInPlace,None,itkInPlaceImageFilterIRGBUS2IUS2)
itkInPlaceImageFilterIRGBUS2IUS2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IUS2_GetInPlace,None,itkInPlaceImageFilterIRGBUS2IUS2)
itkInPlaceImageFilterIRGBUS2IUS2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IUS2_InPlaceOn,None,itkInPlaceImageFilterIRGBUS2IUS2)
itkInPlaceImageFilterIRGBUS2IUS2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IUS2_InPlaceOff,None,itkInPlaceImageFilterIRGBUS2IUS2)
itkInPlaceImageFilterIRGBUS2IUS2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IUS2_CanRunInPlace,None,itkInPlaceImageFilterIRGBUS2IUS2)
itkInPlaceImageFilterIRGBUS2IUS2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IUS2_GetPointer,None,itkInPlaceImageFilterIRGBUS2IUS2)
itkInPlaceImageFilterIRGBUS2IUS2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IUS2_swigregister
itkInPlaceImageFilterIRGBUS2IUS2_swigregister(itkInPlaceImageFilterIRGBUS2IUS2)

def itkInPlaceImageFilterIRGBUS2IUS2_cast(*args):
  """itkInPlaceImageFilterIRGBUS2IUS2_cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBUS2IUS2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS2IUS2_cast(*args)

class itkInPlaceImageFilterIRGBUS3IRGBUC3(itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUC3):
    """Proxy of C++ itkInPlaceImageFilterIRGBUS3IRGBUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUC3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUC3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUC3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUC3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUC3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUC3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUC3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIRGBUS3IRGBUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBUS3IRGBUC3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIRGBUS3IRGBUC3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIRGBUS3IRGBUC3
        
        Create a new object of the class itkInPlaceImageFilterIRGBUS3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIRGBUS3IRGBUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIRGBUS3IRGBUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIRGBUS3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIRGBUS3IRGBUC3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUC3_SetInPlace,None,itkInPlaceImageFilterIRGBUS3IRGBUC3)
itkInPlaceImageFilterIRGBUS3IRGBUC3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUC3_GetInPlace,None,itkInPlaceImageFilterIRGBUS3IRGBUC3)
itkInPlaceImageFilterIRGBUS3IRGBUC3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUC3_InPlaceOn,None,itkInPlaceImageFilterIRGBUS3IRGBUC3)
itkInPlaceImageFilterIRGBUS3IRGBUC3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUC3_InPlaceOff,None,itkInPlaceImageFilterIRGBUS3IRGBUC3)
itkInPlaceImageFilterIRGBUS3IRGBUC3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUC3_CanRunInPlace,None,itkInPlaceImageFilterIRGBUS3IRGBUC3)
itkInPlaceImageFilterIRGBUS3IRGBUC3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUC3_GetPointer,None,itkInPlaceImageFilterIRGBUS3IRGBUC3)
itkInPlaceImageFilterIRGBUS3IRGBUC3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUC3_swigregister
itkInPlaceImageFilterIRGBUS3IRGBUC3_swigregister(itkInPlaceImageFilterIRGBUS3IRGBUC3)

def itkInPlaceImageFilterIRGBUS3IRGBUC3_cast(*args):
  """itkInPlaceImageFilterIRGBUS3IRGBUC3_cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBUS3IRGBUC3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUC3_cast(*args)

class itkInPlaceImageFilterIRGBUS3IRGBUS3(itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUS3):
    """Proxy of C++ itkInPlaceImageFilterIRGBUS3IRGBUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUS3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUS3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUS3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUS3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUS3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUS3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUS3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIRGBUS3IRGBUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBUS3IRGBUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIRGBUS3IRGBUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIRGBUS3IRGBUS3
        
        Create a new object of the class itkInPlaceImageFilterIRGBUS3IRGBUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIRGBUS3IRGBUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIRGBUS3IRGBUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIRGBUS3IRGBUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIRGBUS3IRGBUS3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUS3_SetInPlace,None,itkInPlaceImageFilterIRGBUS3IRGBUS3)
itkInPlaceImageFilterIRGBUS3IRGBUS3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUS3_GetInPlace,None,itkInPlaceImageFilterIRGBUS3IRGBUS3)
itkInPlaceImageFilterIRGBUS3IRGBUS3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUS3_InPlaceOn,None,itkInPlaceImageFilterIRGBUS3IRGBUS3)
itkInPlaceImageFilterIRGBUS3IRGBUS3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUS3_InPlaceOff,None,itkInPlaceImageFilterIRGBUS3IRGBUS3)
itkInPlaceImageFilterIRGBUS3IRGBUS3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUS3_CanRunInPlace,None,itkInPlaceImageFilterIRGBUS3IRGBUS3)
itkInPlaceImageFilterIRGBUS3IRGBUS3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUS3_GetPointer,None,itkInPlaceImageFilterIRGBUS3IRGBUS3)
itkInPlaceImageFilterIRGBUS3IRGBUS3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUS3_swigregister
itkInPlaceImageFilterIRGBUS3IRGBUS3_swigregister(itkInPlaceImageFilterIRGBUS3IRGBUS3)

def itkInPlaceImageFilterIRGBUS3IRGBUS3_cast(*args):
  """itkInPlaceImageFilterIRGBUS3IRGBUS3_cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBUS3IRGBUS3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IRGBUS3_cast(*args)

class itkInPlaceImageFilterIRGBUS3IUS3(itkImageToImageFilterBPython.itkImageToImageFilterIRGBUS3IUS3):
    """Proxy of C++ itkInPlaceImageFilterIRGBUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IUS3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IUS3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IUS3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IUS3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IUS3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IUS3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IUS3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIRGBUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBUS3IUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIRGBUS3IUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIRGBUS3IUS3
        
        Create a new object of the class itkInPlaceImageFilterIRGBUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIRGBUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIRGBUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIRGBUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIRGBUS3IUS3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IUS3_SetInPlace,None,itkInPlaceImageFilterIRGBUS3IUS3)
itkInPlaceImageFilterIRGBUS3IUS3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IUS3_GetInPlace,None,itkInPlaceImageFilterIRGBUS3IUS3)
itkInPlaceImageFilterIRGBUS3IUS3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IUS3_InPlaceOn,None,itkInPlaceImageFilterIRGBUS3IUS3)
itkInPlaceImageFilterIRGBUS3IUS3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IUS3_InPlaceOff,None,itkInPlaceImageFilterIRGBUS3IUS3)
itkInPlaceImageFilterIRGBUS3IUS3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IUS3_CanRunInPlace,None,itkInPlaceImageFilterIRGBUS3IUS3)
itkInPlaceImageFilterIRGBUS3IUS3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IUS3_GetPointer,None,itkInPlaceImageFilterIRGBUS3IUS3)
itkInPlaceImageFilterIRGBUS3IUS3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IUS3_swigregister
itkInPlaceImageFilterIRGBUS3IUS3_swigregister(itkInPlaceImageFilterIRGBUS3IUS3)

def itkInPlaceImageFilterIRGBUS3IUS3_cast(*args):
  """itkInPlaceImageFilterIRGBUS3IUS3_cast(itkLightObject obj) -> itkInPlaceImageFilterIRGBUS3IUS3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUS3IUS3_cast(*args)

class itkInPlaceImageFilterIUC2ID2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2):
    """Proxy of C++ itkInPlaceImageFilterIUC2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ID2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ID2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ID2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ID2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ID2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ID2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ID2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUC2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUC2ID2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUC2ID2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUC2ID2
        
        Create a new object of the class itkInPlaceImageFilterIUC2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUC2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUC2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUC2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUC2ID2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ID2_SetInPlace,None,itkInPlaceImageFilterIUC2ID2)
itkInPlaceImageFilterIUC2ID2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ID2_GetInPlace,None,itkInPlaceImageFilterIUC2ID2)
itkInPlaceImageFilterIUC2ID2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ID2_InPlaceOn,None,itkInPlaceImageFilterIUC2ID2)
itkInPlaceImageFilterIUC2ID2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ID2_InPlaceOff,None,itkInPlaceImageFilterIUC2ID2)
itkInPlaceImageFilterIUC2ID2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ID2_CanRunInPlace,None,itkInPlaceImageFilterIUC2ID2)
itkInPlaceImageFilterIUC2ID2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ID2_GetPointer,None,itkInPlaceImageFilterIUC2ID2)
itkInPlaceImageFilterIUC2ID2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ID2_swigregister
itkInPlaceImageFilterIUC2ID2_swigregister(itkInPlaceImageFilterIUC2ID2)

def itkInPlaceImageFilterIUC2ID2_cast(*args):
  """itkInPlaceImageFilterIUC2ID2_cast(itkLightObject obj) -> itkInPlaceImageFilterIUC2ID2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ID2_cast(*args)

class itkInPlaceImageFilterIUC2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2):
    """Proxy of C++ itkInPlaceImageFilterIUC2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IF2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IF2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IF2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IF2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IF2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IF2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IF2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUC2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUC2IF2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUC2IF2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUC2IF2
        
        Create a new object of the class itkInPlaceImageFilterIUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUC2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUC2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUC2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUC2IF2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IF2_SetInPlace,None,itkInPlaceImageFilterIUC2IF2)
itkInPlaceImageFilterIUC2IF2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IF2_GetInPlace,None,itkInPlaceImageFilterIUC2IF2)
itkInPlaceImageFilterIUC2IF2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IF2_InPlaceOn,None,itkInPlaceImageFilterIUC2IF2)
itkInPlaceImageFilterIUC2IF2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IF2_InPlaceOff,None,itkInPlaceImageFilterIUC2IF2)
itkInPlaceImageFilterIUC2IF2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IF2_CanRunInPlace,None,itkInPlaceImageFilterIUC2IF2)
itkInPlaceImageFilterIUC2IF2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IF2_GetPointer,None,itkInPlaceImageFilterIUC2IF2)
itkInPlaceImageFilterIUC2IF2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IF2_swigregister
itkInPlaceImageFilterIUC2IF2_swigregister(itkInPlaceImageFilterIUC2IF2)

def itkInPlaceImageFilterIUC2IF2_cast(*args):
  """itkInPlaceImageFilterIUC2IF2_cast(itkLightObject obj) -> itkInPlaceImageFilterIUC2IF2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IF2_cast(*args)

class itkInPlaceImageFilterIUC2IRGBAUS2(itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBAUS2):
    """Proxy of C++ itkInPlaceImageFilterIUC2IRGBAUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBAUS2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBAUS2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBAUS2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBAUS2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBAUS2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBAUS2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBAUS2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUC2IRGBAUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUC2IRGBAUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBAUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUC2IRGBAUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBAUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUC2IRGBAUS2
        
        Create a new object of the class itkInPlaceImageFilterIUC2IRGBAUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUC2IRGBAUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUC2IRGBAUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUC2IRGBAUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUC2IRGBAUS2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBAUS2_SetInPlace,None,itkInPlaceImageFilterIUC2IRGBAUS2)
itkInPlaceImageFilterIUC2IRGBAUS2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBAUS2_GetInPlace,None,itkInPlaceImageFilterIUC2IRGBAUS2)
itkInPlaceImageFilterIUC2IRGBAUS2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBAUS2_InPlaceOn,None,itkInPlaceImageFilterIUC2IRGBAUS2)
itkInPlaceImageFilterIUC2IRGBAUS2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBAUS2_InPlaceOff,None,itkInPlaceImageFilterIUC2IRGBAUS2)
itkInPlaceImageFilterIUC2IRGBAUS2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBAUS2_CanRunInPlace,None,itkInPlaceImageFilterIUC2IRGBAUS2)
itkInPlaceImageFilterIUC2IRGBAUS2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBAUS2_GetPointer,None,itkInPlaceImageFilterIUC2IRGBAUS2)
itkInPlaceImageFilterIUC2IRGBAUS2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBAUS2_swigregister
itkInPlaceImageFilterIUC2IRGBAUS2_swigregister(itkInPlaceImageFilterIUC2IRGBAUS2)

def itkInPlaceImageFilterIUC2IRGBAUS2_cast(*args):
  """itkInPlaceImageFilterIUC2IRGBAUS2_cast(itkLightObject obj) -> itkInPlaceImageFilterIUC2IRGBAUS2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBAUS2_cast(*args)

class itkInPlaceImageFilterIUC2IRGBUS2(itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBUS2):
    """Proxy of C++ itkInPlaceImageFilterIUC2IRGBUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBUS2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBUS2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBUS2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBUS2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBUS2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBUS2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBUS2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUC2IRGBUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUC2IRGBUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUC2IRGBUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUC2IRGBUS2
        
        Create a new object of the class itkInPlaceImageFilterIUC2IRGBUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUC2IRGBUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUC2IRGBUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUC2IRGBUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUC2IRGBUS2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBUS2_SetInPlace,None,itkInPlaceImageFilterIUC2IRGBUS2)
itkInPlaceImageFilterIUC2IRGBUS2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBUS2_GetInPlace,None,itkInPlaceImageFilterIUC2IRGBUS2)
itkInPlaceImageFilterIUC2IRGBUS2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBUS2_InPlaceOn,None,itkInPlaceImageFilterIUC2IRGBUS2)
itkInPlaceImageFilterIUC2IRGBUS2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBUS2_InPlaceOff,None,itkInPlaceImageFilterIUC2IRGBUS2)
itkInPlaceImageFilterIUC2IRGBUS2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBUS2_CanRunInPlace,None,itkInPlaceImageFilterIUC2IRGBUS2)
itkInPlaceImageFilterIUC2IRGBUS2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBUS2_GetPointer,None,itkInPlaceImageFilterIUC2IRGBUS2)
itkInPlaceImageFilterIUC2IRGBUS2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBUS2_swigregister
itkInPlaceImageFilterIUC2IRGBUS2_swigregister(itkInPlaceImageFilterIUC2IRGBUS2)

def itkInPlaceImageFilterIUC2IRGBUS2_cast(*args):
  """itkInPlaceImageFilterIUC2IRGBUS2_cast(itkLightObject obj) -> itkInPlaceImageFilterIUC2IRGBUS2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBUS2_cast(*args)

class itkInPlaceImageFilterIUC2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """Proxy of C++ itkInPlaceImageFilterIUC2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUC2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUC2IUC2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUC2IUC2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUC2IUC2
        
        Create a new object of the class itkInPlaceImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUC2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUC2IUC2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2_SetInPlace,None,itkInPlaceImageFilterIUC2IUC2)
itkInPlaceImageFilterIUC2IUC2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2_GetInPlace,None,itkInPlaceImageFilterIUC2IUC2)
itkInPlaceImageFilterIUC2IUC2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2_InPlaceOn,None,itkInPlaceImageFilterIUC2IUC2)
itkInPlaceImageFilterIUC2IUC2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2_InPlaceOff,None,itkInPlaceImageFilterIUC2IUC2)
itkInPlaceImageFilterIUC2IUC2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2_CanRunInPlace,None,itkInPlaceImageFilterIUC2IUC2)
itkInPlaceImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2_GetPointer,None,itkInPlaceImageFilterIUC2IUC2)
itkInPlaceImageFilterIUC2IUC2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2_swigregister
itkInPlaceImageFilterIUC2IUC2_swigregister(itkInPlaceImageFilterIUC2IUC2)

def itkInPlaceImageFilterIUC2IUC2_cast(*args):
  """itkInPlaceImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkInPlaceImageFilterIUC2IUC2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2_cast(*args)

class itkInPlaceImageFilterIUC2IUL2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2):
    """Proxy of C++ itkInPlaceImageFilterIUC2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUL2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUL2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUL2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUL2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUL2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUL2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUL2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUC2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUC2IUL2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUC2IUL2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUC2IUL2
        
        Create a new object of the class itkInPlaceImageFilterIUC2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUC2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUC2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUC2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUC2IUL2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUL2_SetInPlace,None,itkInPlaceImageFilterIUC2IUL2)
itkInPlaceImageFilterIUC2IUL2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUL2_GetInPlace,None,itkInPlaceImageFilterIUC2IUL2)
itkInPlaceImageFilterIUC2IUL2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUL2_InPlaceOn,None,itkInPlaceImageFilterIUC2IUL2)
itkInPlaceImageFilterIUC2IUL2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUL2_InPlaceOff,None,itkInPlaceImageFilterIUC2IUL2)
itkInPlaceImageFilterIUC2IUL2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUL2_CanRunInPlace,None,itkInPlaceImageFilterIUC2IUL2)
itkInPlaceImageFilterIUC2IUL2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUL2_GetPointer,None,itkInPlaceImageFilterIUC2IUL2)
itkInPlaceImageFilterIUC2IUL2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUL2_swigregister
itkInPlaceImageFilterIUC2IUL2_swigregister(itkInPlaceImageFilterIUC2IUL2)

def itkInPlaceImageFilterIUC2IUL2_cast(*args):
  """itkInPlaceImageFilterIUC2IUL2_cast(itkLightObject obj) -> itkInPlaceImageFilterIUC2IUL2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUL2_cast(*args)

class itkInPlaceImageFilterIUC2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2):
    """Proxy of C++ itkInPlaceImageFilterIUC2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUS2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUS2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUS2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUS2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUS2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUS2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUS2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUC2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUC2IUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUC2IUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUC2IUS2
        
        Create a new object of the class itkInPlaceImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUC2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUC2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUC2IUS2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUS2_SetInPlace,None,itkInPlaceImageFilterIUC2IUS2)
itkInPlaceImageFilterIUC2IUS2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUS2_GetInPlace,None,itkInPlaceImageFilterIUC2IUS2)
itkInPlaceImageFilterIUC2IUS2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUS2_InPlaceOn,None,itkInPlaceImageFilterIUC2IUS2)
itkInPlaceImageFilterIUC2IUS2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUS2_InPlaceOff,None,itkInPlaceImageFilterIUC2IUS2)
itkInPlaceImageFilterIUC2IUS2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUS2_CanRunInPlace,None,itkInPlaceImageFilterIUC2IUS2)
itkInPlaceImageFilterIUC2IUS2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUS2_GetPointer,None,itkInPlaceImageFilterIUC2IUS2)
itkInPlaceImageFilterIUC2IUS2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUS2_swigregister
itkInPlaceImageFilterIUC2IUS2_swigregister(itkInPlaceImageFilterIUC2IUS2)

def itkInPlaceImageFilterIUC2IUS2_cast(*args):
  """itkInPlaceImageFilterIUC2IUS2_cast(itkLightObject obj) -> itkInPlaceImageFilterIUC2IUS2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUS2_cast(*args)

class itkInPlaceImageFilterIUC3ID3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3):
    """Proxy of C++ itkInPlaceImageFilterIUC3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ID3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ID3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ID3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ID3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ID3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ID3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ID3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUC3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUC3ID3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUC3ID3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUC3ID3
        
        Create a new object of the class itkInPlaceImageFilterIUC3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUC3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUC3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUC3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUC3ID3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ID3_SetInPlace,None,itkInPlaceImageFilterIUC3ID3)
itkInPlaceImageFilterIUC3ID3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ID3_GetInPlace,None,itkInPlaceImageFilterIUC3ID3)
itkInPlaceImageFilterIUC3ID3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ID3_InPlaceOn,None,itkInPlaceImageFilterIUC3ID3)
itkInPlaceImageFilterIUC3ID3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ID3_InPlaceOff,None,itkInPlaceImageFilterIUC3ID3)
itkInPlaceImageFilterIUC3ID3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ID3_CanRunInPlace,None,itkInPlaceImageFilterIUC3ID3)
itkInPlaceImageFilterIUC3ID3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ID3_GetPointer,None,itkInPlaceImageFilterIUC3ID3)
itkInPlaceImageFilterIUC3ID3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ID3_swigregister
itkInPlaceImageFilterIUC3ID3_swigregister(itkInPlaceImageFilterIUC3ID3)

def itkInPlaceImageFilterIUC3ID3_cast(*args):
  """itkInPlaceImageFilterIUC3ID3_cast(itkLightObject obj) -> itkInPlaceImageFilterIUC3ID3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ID3_cast(*args)

class itkInPlaceImageFilterIUC3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3):
    """Proxy of C++ itkInPlaceImageFilterIUC3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IF3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IF3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IF3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IF3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IF3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IF3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IF3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUC3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUC3IF3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUC3IF3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUC3IF3
        
        Create a new object of the class itkInPlaceImageFilterIUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUC3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUC3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUC3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUC3IF3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IF3_SetInPlace,None,itkInPlaceImageFilterIUC3IF3)
itkInPlaceImageFilterIUC3IF3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IF3_GetInPlace,None,itkInPlaceImageFilterIUC3IF3)
itkInPlaceImageFilterIUC3IF3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IF3_InPlaceOn,None,itkInPlaceImageFilterIUC3IF3)
itkInPlaceImageFilterIUC3IF3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IF3_InPlaceOff,None,itkInPlaceImageFilterIUC3IF3)
itkInPlaceImageFilterIUC3IF3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IF3_CanRunInPlace,None,itkInPlaceImageFilterIUC3IF3)
itkInPlaceImageFilterIUC3IF3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IF3_GetPointer,None,itkInPlaceImageFilterIUC3IF3)
itkInPlaceImageFilterIUC3IF3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IF3_swigregister
itkInPlaceImageFilterIUC3IF3_swigregister(itkInPlaceImageFilterIUC3IF3)

def itkInPlaceImageFilterIUC3IF3_cast(*args):
  """itkInPlaceImageFilterIUC3IF3_cast(itkLightObject obj) -> itkInPlaceImageFilterIUC3IF3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IF3_cast(*args)

class itkInPlaceImageFilterIUC3IRGBAUS3(itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBAUS3):
    """Proxy of C++ itkInPlaceImageFilterIUC3IRGBAUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBAUS3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBAUS3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBAUS3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBAUS3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBAUS3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBAUS3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBAUS3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUC3IRGBAUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUC3IRGBAUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBAUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUC3IRGBAUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBAUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUC3IRGBAUS3
        
        Create a new object of the class itkInPlaceImageFilterIUC3IRGBAUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUC3IRGBAUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUC3IRGBAUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUC3IRGBAUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUC3IRGBAUS3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBAUS3_SetInPlace,None,itkInPlaceImageFilterIUC3IRGBAUS3)
itkInPlaceImageFilterIUC3IRGBAUS3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBAUS3_GetInPlace,None,itkInPlaceImageFilterIUC3IRGBAUS3)
itkInPlaceImageFilterIUC3IRGBAUS3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBAUS3_InPlaceOn,None,itkInPlaceImageFilterIUC3IRGBAUS3)
itkInPlaceImageFilterIUC3IRGBAUS3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBAUS3_InPlaceOff,None,itkInPlaceImageFilterIUC3IRGBAUS3)
itkInPlaceImageFilterIUC3IRGBAUS3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBAUS3_CanRunInPlace,None,itkInPlaceImageFilterIUC3IRGBAUS3)
itkInPlaceImageFilterIUC3IRGBAUS3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBAUS3_GetPointer,None,itkInPlaceImageFilterIUC3IRGBAUS3)
itkInPlaceImageFilterIUC3IRGBAUS3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBAUS3_swigregister
itkInPlaceImageFilterIUC3IRGBAUS3_swigregister(itkInPlaceImageFilterIUC3IRGBAUS3)

def itkInPlaceImageFilterIUC3IRGBAUS3_cast(*args):
  """itkInPlaceImageFilterIUC3IRGBAUS3_cast(itkLightObject obj) -> itkInPlaceImageFilterIUC3IRGBAUS3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBAUS3_cast(*args)

class itkInPlaceImageFilterIUC3IRGBUS3(itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBUS3):
    """Proxy of C++ itkInPlaceImageFilterIUC3IRGBUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBUS3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBUS3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBUS3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBUS3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBUS3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBUS3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBUS3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUC3IRGBUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUC3IRGBUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUC3IRGBUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUC3IRGBUS3
        
        Create a new object of the class itkInPlaceImageFilterIUC3IRGBUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUC3IRGBUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUC3IRGBUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUC3IRGBUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUC3IRGBUS3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBUS3_SetInPlace,None,itkInPlaceImageFilterIUC3IRGBUS3)
itkInPlaceImageFilterIUC3IRGBUS3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBUS3_GetInPlace,None,itkInPlaceImageFilterIUC3IRGBUS3)
itkInPlaceImageFilterIUC3IRGBUS3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBUS3_InPlaceOn,None,itkInPlaceImageFilterIUC3IRGBUS3)
itkInPlaceImageFilterIUC3IRGBUS3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBUS3_InPlaceOff,None,itkInPlaceImageFilterIUC3IRGBUS3)
itkInPlaceImageFilterIUC3IRGBUS3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBUS3_CanRunInPlace,None,itkInPlaceImageFilterIUC3IRGBUS3)
itkInPlaceImageFilterIUC3IRGBUS3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBUS3_GetPointer,None,itkInPlaceImageFilterIUC3IRGBUS3)
itkInPlaceImageFilterIUC3IRGBUS3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBUS3_swigregister
itkInPlaceImageFilterIUC3IRGBUS3_swigregister(itkInPlaceImageFilterIUC3IRGBUS3)

def itkInPlaceImageFilterIUC3IRGBUS3_cast(*args):
  """itkInPlaceImageFilterIUC3IRGBUS3_cast(itkLightObject obj) -> itkInPlaceImageFilterIUC3IRGBUS3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBUS3_cast(*args)

class itkInPlaceImageFilterIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """Proxy of C++ itkInPlaceImageFilterIUC3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUC3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUC3IUC3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUC3IUC3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUC3IUC3
        
        Create a new object of the class itkInPlaceImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUC3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUC3IUC3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3_SetInPlace,None,itkInPlaceImageFilterIUC3IUC3)
itkInPlaceImageFilterIUC3IUC3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3_GetInPlace,None,itkInPlaceImageFilterIUC3IUC3)
itkInPlaceImageFilterIUC3IUC3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3_InPlaceOn,None,itkInPlaceImageFilterIUC3IUC3)
itkInPlaceImageFilterIUC3IUC3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3_InPlaceOff,None,itkInPlaceImageFilterIUC3IUC3)
itkInPlaceImageFilterIUC3IUC3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3_CanRunInPlace,None,itkInPlaceImageFilterIUC3IUC3)
itkInPlaceImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3_GetPointer,None,itkInPlaceImageFilterIUC3IUC3)
itkInPlaceImageFilterIUC3IUC3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3_swigregister
itkInPlaceImageFilterIUC3IUC3_swigregister(itkInPlaceImageFilterIUC3IUC3)

def itkInPlaceImageFilterIUC3IUC3_cast(*args):
  """itkInPlaceImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkInPlaceImageFilterIUC3IUC3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3_cast(*args)

class itkInPlaceImageFilterIUC3IUL3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3):
    """Proxy of C++ itkInPlaceImageFilterIUC3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUL3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUL3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUL3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUL3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUL3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUL3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUL3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUC3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUC3IUL3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUC3IUL3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUC3IUL3
        
        Create a new object of the class itkInPlaceImageFilterIUC3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUC3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUC3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUC3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUC3IUL3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUL3_SetInPlace,None,itkInPlaceImageFilterIUC3IUL3)
itkInPlaceImageFilterIUC3IUL3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUL3_GetInPlace,None,itkInPlaceImageFilterIUC3IUL3)
itkInPlaceImageFilterIUC3IUL3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUL3_InPlaceOn,None,itkInPlaceImageFilterIUC3IUL3)
itkInPlaceImageFilterIUC3IUL3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUL3_InPlaceOff,None,itkInPlaceImageFilterIUC3IUL3)
itkInPlaceImageFilterIUC3IUL3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUL3_CanRunInPlace,None,itkInPlaceImageFilterIUC3IUL3)
itkInPlaceImageFilterIUC3IUL3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUL3_GetPointer,None,itkInPlaceImageFilterIUC3IUL3)
itkInPlaceImageFilterIUC3IUL3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUL3_swigregister
itkInPlaceImageFilterIUC3IUL3_swigregister(itkInPlaceImageFilterIUC3IUL3)

def itkInPlaceImageFilterIUC3IUL3_cast(*args):
  """itkInPlaceImageFilterIUC3IUL3_cast(itkLightObject obj) -> itkInPlaceImageFilterIUC3IUL3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUL3_cast(*args)

class itkInPlaceImageFilterIUC3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3):
    """Proxy of C++ itkInPlaceImageFilterIUC3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUS3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUS3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUS3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUS3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUS3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUS3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUS3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUC3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUC3IUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUC3IUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUC3IUS3
        
        Create a new object of the class itkInPlaceImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUC3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUC3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUC3IUS3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUS3_SetInPlace,None,itkInPlaceImageFilterIUC3IUS3)
itkInPlaceImageFilterIUC3IUS3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUS3_GetInPlace,None,itkInPlaceImageFilterIUC3IUS3)
itkInPlaceImageFilterIUC3IUS3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUS3_InPlaceOn,None,itkInPlaceImageFilterIUC3IUS3)
itkInPlaceImageFilterIUC3IUS3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUS3_InPlaceOff,None,itkInPlaceImageFilterIUC3IUS3)
itkInPlaceImageFilterIUC3IUS3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUS3_CanRunInPlace,None,itkInPlaceImageFilterIUC3IUS3)
itkInPlaceImageFilterIUC3IUS3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUS3_GetPointer,None,itkInPlaceImageFilterIUC3IUS3)
itkInPlaceImageFilterIUC3IUS3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUS3_swigregister
itkInPlaceImageFilterIUC3IUS3_swigregister(itkInPlaceImageFilterIUC3IUS3)

def itkInPlaceImageFilterIUC3IUS3_cast(*args):
  """itkInPlaceImageFilterIUC3IUS3_cast(itkLightObject obj) -> itkInPlaceImageFilterIUC3IUS3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUS3_cast(*args)

class itkInPlaceImageFilterIUL2ID2(itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2):
    """Proxy of C++ itkInPlaceImageFilterIUL2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2ID2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2ID2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2ID2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2ID2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2ID2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2ID2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2ID2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUL2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUL2ID2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUL2ID2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUL2ID2
        
        Create a new object of the class itkInPlaceImageFilterIUL2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUL2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUL2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUL2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUL2ID2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2ID2_SetInPlace,None,itkInPlaceImageFilterIUL2ID2)
itkInPlaceImageFilterIUL2ID2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2ID2_GetInPlace,None,itkInPlaceImageFilterIUL2ID2)
itkInPlaceImageFilterIUL2ID2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2ID2_InPlaceOn,None,itkInPlaceImageFilterIUL2ID2)
itkInPlaceImageFilterIUL2ID2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2ID2_InPlaceOff,None,itkInPlaceImageFilterIUL2ID2)
itkInPlaceImageFilterIUL2ID2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2ID2_CanRunInPlace,None,itkInPlaceImageFilterIUL2ID2)
itkInPlaceImageFilterIUL2ID2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2ID2_GetPointer,None,itkInPlaceImageFilterIUL2ID2)
itkInPlaceImageFilterIUL2ID2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2ID2_swigregister
itkInPlaceImageFilterIUL2ID2_swigregister(itkInPlaceImageFilterIUL2ID2)

def itkInPlaceImageFilterIUL2ID2_cast(*args):
  """itkInPlaceImageFilterIUL2ID2_cast(itkLightObject obj) -> itkInPlaceImageFilterIUL2ID2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2ID2_cast(*args)

class itkInPlaceImageFilterIUL2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2):
    """Proxy of C++ itkInPlaceImageFilterIUL2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IF2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IF2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IF2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IF2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IF2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IF2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IF2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUL2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUL2IF2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUL2IF2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUL2IF2
        
        Create a new object of the class itkInPlaceImageFilterIUL2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUL2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUL2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUL2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUL2IF2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IF2_SetInPlace,None,itkInPlaceImageFilterIUL2IF2)
itkInPlaceImageFilterIUL2IF2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IF2_GetInPlace,None,itkInPlaceImageFilterIUL2IF2)
itkInPlaceImageFilterIUL2IF2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IF2_InPlaceOn,None,itkInPlaceImageFilterIUL2IF2)
itkInPlaceImageFilterIUL2IF2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IF2_InPlaceOff,None,itkInPlaceImageFilterIUL2IF2)
itkInPlaceImageFilterIUL2IF2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IF2_CanRunInPlace,None,itkInPlaceImageFilterIUL2IF2)
itkInPlaceImageFilterIUL2IF2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IF2_GetPointer,None,itkInPlaceImageFilterIUL2IF2)
itkInPlaceImageFilterIUL2IF2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IF2_swigregister
itkInPlaceImageFilterIUL2IF2_swigregister(itkInPlaceImageFilterIUL2IF2)

def itkInPlaceImageFilterIUL2IF2_cast(*args):
  """itkInPlaceImageFilterIUL2IF2_cast(itkLightObject obj) -> itkInPlaceImageFilterIUL2IF2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IF2_cast(*args)

class itkInPlaceImageFilterIUL2IRGBAUS2(itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBAUS2):
    """Proxy of C++ itkInPlaceImageFilterIUL2IRGBAUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBAUS2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBAUS2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBAUS2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBAUS2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBAUS2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBAUS2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBAUS2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUL2IRGBAUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUL2IRGBAUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBAUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUL2IRGBAUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBAUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUL2IRGBAUS2
        
        Create a new object of the class itkInPlaceImageFilterIUL2IRGBAUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUL2IRGBAUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUL2IRGBAUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUL2IRGBAUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUL2IRGBAUS2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBAUS2_SetInPlace,None,itkInPlaceImageFilterIUL2IRGBAUS2)
itkInPlaceImageFilterIUL2IRGBAUS2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBAUS2_GetInPlace,None,itkInPlaceImageFilterIUL2IRGBAUS2)
itkInPlaceImageFilterIUL2IRGBAUS2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBAUS2_InPlaceOn,None,itkInPlaceImageFilterIUL2IRGBAUS2)
itkInPlaceImageFilterIUL2IRGBAUS2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBAUS2_InPlaceOff,None,itkInPlaceImageFilterIUL2IRGBAUS2)
itkInPlaceImageFilterIUL2IRGBAUS2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBAUS2_CanRunInPlace,None,itkInPlaceImageFilterIUL2IRGBAUS2)
itkInPlaceImageFilterIUL2IRGBAUS2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBAUS2_GetPointer,None,itkInPlaceImageFilterIUL2IRGBAUS2)
itkInPlaceImageFilterIUL2IRGBAUS2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBAUS2_swigregister
itkInPlaceImageFilterIUL2IRGBAUS2_swigregister(itkInPlaceImageFilterIUL2IRGBAUS2)

def itkInPlaceImageFilterIUL2IRGBAUS2_cast(*args):
  """itkInPlaceImageFilterIUL2IRGBAUS2_cast(itkLightObject obj) -> itkInPlaceImageFilterIUL2IRGBAUS2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBAUS2_cast(*args)

class itkInPlaceImageFilterIUL2IRGBUS2(itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBUS2):
    """Proxy of C++ itkInPlaceImageFilterIUL2IRGBUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBUS2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBUS2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBUS2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBUS2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBUS2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBUS2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBUS2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUL2IRGBUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUL2IRGBUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUL2IRGBUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUL2IRGBUS2
        
        Create a new object of the class itkInPlaceImageFilterIUL2IRGBUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUL2IRGBUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUL2IRGBUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUL2IRGBUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUL2IRGBUS2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBUS2_SetInPlace,None,itkInPlaceImageFilterIUL2IRGBUS2)
itkInPlaceImageFilterIUL2IRGBUS2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBUS2_GetInPlace,None,itkInPlaceImageFilterIUL2IRGBUS2)
itkInPlaceImageFilterIUL2IRGBUS2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBUS2_InPlaceOn,None,itkInPlaceImageFilterIUL2IRGBUS2)
itkInPlaceImageFilterIUL2IRGBUS2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBUS2_InPlaceOff,None,itkInPlaceImageFilterIUL2IRGBUS2)
itkInPlaceImageFilterIUL2IRGBUS2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBUS2_CanRunInPlace,None,itkInPlaceImageFilterIUL2IRGBUS2)
itkInPlaceImageFilterIUL2IRGBUS2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBUS2_GetPointer,None,itkInPlaceImageFilterIUL2IRGBUS2)
itkInPlaceImageFilterIUL2IRGBUS2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBUS2_swigregister
itkInPlaceImageFilterIUL2IRGBUS2_swigregister(itkInPlaceImageFilterIUL2IRGBUS2)

def itkInPlaceImageFilterIUL2IRGBUS2_cast(*args):
  """itkInPlaceImageFilterIUL2IRGBUS2_cast(itkLightObject obj) -> itkInPlaceImageFilterIUL2IRGBUS2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBUS2_cast(*args)

class itkInPlaceImageFilterIUL2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2):
    """Proxy of C++ itkInPlaceImageFilterIUL2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUC2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUC2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUC2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUC2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUC2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUC2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUC2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUL2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUL2IUC2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUL2IUC2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUL2IUC2
        
        Create a new object of the class itkInPlaceImageFilterIUL2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUL2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUL2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUL2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUL2IUC2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUC2_SetInPlace,None,itkInPlaceImageFilterIUL2IUC2)
itkInPlaceImageFilterIUL2IUC2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUC2_GetInPlace,None,itkInPlaceImageFilterIUL2IUC2)
itkInPlaceImageFilterIUL2IUC2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUC2_InPlaceOn,None,itkInPlaceImageFilterIUL2IUC2)
itkInPlaceImageFilterIUL2IUC2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUC2_InPlaceOff,None,itkInPlaceImageFilterIUL2IUC2)
itkInPlaceImageFilterIUL2IUC2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUC2_CanRunInPlace,None,itkInPlaceImageFilterIUL2IUC2)
itkInPlaceImageFilterIUL2IUC2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUC2_GetPointer,None,itkInPlaceImageFilterIUL2IUC2)
itkInPlaceImageFilterIUL2IUC2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUC2_swigregister
itkInPlaceImageFilterIUL2IUC2_swigregister(itkInPlaceImageFilterIUL2IUC2)

def itkInPlaceImageFilterIUL2IUC2_cast(*args):
  """itkInPlaceImageFilterIUL2IUC2_cast(itkLightObject obj) -> itkInPlaceImageFilterIUL2IUC2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUC2_cast(*args)

class itkInPlaceImageFilterIUL2IUL2(itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2):
    """Proxy of C++ itkInPlaceImageFilterIUL2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUL2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUL2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUL2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUL2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUL2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUL2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUL2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUL2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUL2IUL2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUL2IUL2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUL2IUL2
        
        Create a new object of the class itkInPlaceImageFilterIUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUL2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUL2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUL2IUL2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUL2_SetInPlace,None,itkInPlaceImageFilterIUL2IUL2)
itkInPlaceImageFilterIUL2IUL2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUL2_GetInPlace,None,itkInPlaceImageFilterIUL2IUL2)
itkInPlaceImageFilterIUL2IUL2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUL2_InPlaceOn,None,itkInPlaceImageFilterIUL2IUL2)
itkInPlaceImageFilterIUL2IUL2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUL2_InPlaceOff,None,itkInPlaceImageFilterIUL2IUL2)
itkInPlaceImageFilterIUL2IUL2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUL2_CanRunInPlace,None,itkInPlaceImageFilterIUL2IUL2)
itkInPlaceImageFilterIUL2IUL2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUL2_GetPointer,None,itkInPlaceImageFilterIUL2IUL2)
itkInPlaceImageFilterIUL2IUL2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUL2_swigregister
itkInPlaceImageFilterIUL2IUL2_swigregister(itkInPlaceImageFilterIUL2IUL2)

def itkInPlaceImageFilterIUL2IUL2_cast(*args):
  """itkInPlaceImageFilterIUL2IUL2_cast(itkLightObject obj) -> itkInPlaceImageFilterIUL2IUL2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUL2_cast(*args)

class itkInPlaceImageFilterIUL2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2):
    """Proxy of C++ itkInPlaceImageFilterIUL2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUS2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUS2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUS2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUS2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUS2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUS2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUS2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUL2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUL2IUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUL2IUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUL2IUS2
        
        Create a new object of the class itkInPlaceImageFilterIUL2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUL2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUL2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUL2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUL2IUS2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUS2_SetInPlace,None,itkInPlaceImageFilterIUL2IUS2)
itkInPlaceImageFilterIUL2IUS2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUS2_GetInPlace,None,itkInPlaceImageFilterIUL2IUS2)
itkInPlaceImageFilterIUL2IUS2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUS2_InPlaceOn,None,itkInPlaceImageFilterIUL2IUS2)
itkInPlaceImageFilterIUL2IUS2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUS2_InPlaceOff,None,itkInPlaceImageFilterIUL2IUS2)
itkInPlaceImageFilterIUL2IUS2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUS2_CanRunInPlace,None,itkInPlaceImageFilterIUL2IUS2)
itkInPlaceImageFilterIUL2IUS2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUS2_GetPointer,None,itkInPlaceImageFilterIUL2IUS2)
itkInPlaceImageFilterIUL2IUS2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUS2_swigregister
itkInPlaceImageFilterIUL2IUS2_swigregister(itkInPlaceImageFilterIUL2IUS2)

def itkInPlaceImageFilterIUL2IUS2_cast(*args):
  """itkInPlaceImageFilterIUL2IUS2_cast(itkLightObject obj) -> itkInPlaceImageFilterIUL2IUS2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUS2_cast(*args)

class itkInPlaceImageFilterIUL3ID3(itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3):
    """Proxy of C++ itkInPlaceImageFilterIUL3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3ID3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3ID3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3ID3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3ID3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3ID3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3ID3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3ID3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUL3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUL3ID3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUL3ID3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUL3ID3
        
        Create a new object of the class itkInPlaceImageFilterIUL3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUL3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUL3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUL3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUL3ID3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3ID3_SetInPlace,None,itkInPlaceImageFilterIUL3ID3)
itkInPlaceImageFilterIUL3ID3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3ID3_GetInPlace,None,itkInPlaceImageFilterIUL3ID3)
itkInPlaceImageFilterIUL3ID3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3ID3_InPlaceOn,None,itkInPlaceImageFilterIUL3ID3)
itkInPlaceImageFilterIUL3ID3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3ID3_InPlaceOff,None,itkInPlaceImageFilterIUL3ID3)
itkInPlaceImageFilterIUL3ID3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3ID3_CanRunInPlace,None,itkInPlaceImageFilterIUL3ID3)
itkInPlaceImageFilterIUL3ID3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3ID3_GetPointer,None,itkInPlaceImageFilterIUL3ID3)
itkInPlaceImageFilterIUL3ID3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3ID3_swigregister
itkInPlaceImageFilterIUL3ID3_swigregister(itkInPlaceImageFilterIUL3ID3)

def itkInPlaceImageFilterIUL3ID3_cast(*args):
  """itkInPlaceImageFilterIUL3ID3_cast(itkLightObject obj) -> itkInPlaceImageFilterIUL3ID3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3ID3_cast(*args)

class itkInPlaceImageFilterIUL3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3):
    """Proxy of C++ itkInPlaceImageFilterIUL3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IF3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IF3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IF3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IF3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IF3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IF3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IF3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUL3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUL3IF3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUL3IF3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUL3IF3
        
        Create a new object of the class itkInPlaceImageFilterIUL3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUL3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUL3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUL3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUL3IF3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IF3_SetInPlace,None,itkInPlaceImageFilterIUL3IF3)
itkInPlaceImageFilterIUL3IF3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IF3_GetInPlace,None,itkInPlaceImageFilterIUL3IF3)
itkInPlaceImageFilterIUL3IF3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IF3_InPlaceOn,None,itkInPlaceImageFilterIUL3IF3)
itkInPlaceImageFilterIUL3IF3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IF3_InPlaceOff,None,itkInPlaceImageFilterIUL3IF3)
itkInPlaceImageFilterIUL3IF3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IF3_CanRunInPlace,None,itkInPlaceImageFilterIUL3IF3)
itkInPlaceImageFilterIUL3IF3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IF3_GetPointer,None,itkInPlaceImageFilterIUL3IF3)
itkInPlaceImageFilterIUL3IF3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IF3_swigregister
itkInPlaceImageFilterIUL3IF3_swigregister(itkInPlaceImageFilterIUL3IF3)

def itkInPlaceImageFilterIUL3IF3_cast(*args):
  """itkInPlaceImageFilterIUL3IF3_cast(itkLightObject obj) -> itkInPlaceImageFilterIUL3IF3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IF3_cast(*args)

class itkInPlaceImageFilterIUL3IRGBAUS3(itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBAUS3):
    """Proxy of C++ itkInPlaceImageFilterIUL3IRGBAUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBAUS3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBAUS3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBAUS3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBAUS3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBAUS3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBAUS3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBAUS3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUL3IRGBAUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUL3IRGBAUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBAUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUL3IRGBAUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBAUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUL3IRGBAUS3
        
        Create a new object of the class itkInPlaceImageFilterIUL3IRGBAUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUL3IRGBAUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUL3IRGBAUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUL3IRGBAUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUL3IRGBAUS3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBAUS3_SetInPlace,None,itkInPlaceImageFilterIUL3IRGBAUS3)
itkInPlaceImageFilterIUL3IRGBAUS3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBAUS3_GetInPlace,None,itkInPlaceImageFilterIUL3IRGBAUS3)
itkInPlaceImageFilterIUL3IRGBAUS3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBAUS3_InPlaceOn,None,itkInPlaceImageFilterIUL3IRGBAUS3)
itkInPlaceImageFilterIUL3IRGBAUS3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBAUS3_InPlaceOff,None,itkInPlaceImageFilterIUL3IRGBAUS3)
itkInPlaceImageFilterIUL3IRGBAUS3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBAUS3_CanRunInPlace,None,itkInPlaceImageFilterIUL3IRGBAUS3)
itkInPlaceImageFilterIUL3IRGBAUS3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBAUS3_GetPointer,None,itkInPlaceImageFilterIUL3IRGBAUS3)
itkInPlaceImageFilterIUL3IRGBAUS3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBAUS3_swigregister
itkInPlaceImageFilterIUL3IRGBAUS3_swigregister(itkInPlaceImageFilterIUL3IRGBAUS3)

def itkInPlaceImageFilterIUL3IRGBAUS3_cast(*args):
  """itkInPlaceImageFilterIUL3IRGBAUS3_cast(itkLightObject obj) -> itkInPlaceImageFilterIUL3IRGBAUS3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBAUS3_cast(*args)

class itkInPlaceImageFilterIUL3IRGBUS3(itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBUS3):
    """Proxy of C++ itkInPlaceImageFilterIUL3IRGBUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBUS3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBUS3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBUS3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBUS3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBUS3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBUS3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBUS3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUL3IRGBUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUL3IRGBUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUL3IRGBUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUL3IRGBUS3
        
        Create a new object of the class itkInPlaceImageFilterIUL3IRGBUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUL3IRGBUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUL3IRGBUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUL3IRGBUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUL3IRGBUS3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBUS3_SetInPlace,None,itkInPlaceImageFilterIUL3IRGBUS3)
itkInPlaceImageFilterIUL3IRGBUS3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBUS3_GetInPlace,None,itkInPlaceImageFilterIUL3IRGBUS3)
itkInPlaceImageFilterIUL3IRGBUS3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBUS3_InPlaceOn,None,itkInPlaceImageFilterIUL3IRGBUS3)
itkInPlaceImageFilterIUL3IRGBUS3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBUS3_InPlaceOff,None,itkInPlaceImageFilterIUL3IRGBUS3)
itkInPlaceImageFilterIUL3IRGBUS3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBUS3_CanRunInPlace,None,itkInPlaceImageFilterIUL3IRGBUS3)
itkInPlaceImageFilterIUL3IRGBUS3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBUS3_GetPointer,None,itkInPlaceImageFilterIUL3IRGBUS3)
itkInPlaceImageFilterIUL3IRGBUS3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBUS3_swigregister
itkInPlaceImageFilterIUL3IRGBUS3_swigregister(itkInPlaceImageFilterIUL3IRGBUS3)

def itkInPlaceImageFilterIUL3IRGBUS3_cast(*args):
  """itkInPlaceImageFilterIUL3IRGBUS3_cast(itkLightObject obj) -> itkInPlaceImageFilterIUL3IRGBUS3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBUS3_cast(*args)

class itkInPlaceImageFilterIUL3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3):
    """Proxy of C++ itkInPlaceImageFilterIUL3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUC3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUC3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUC3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUC3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUC3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUC3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUC3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUL3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUL3IUC3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUL3IUC3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUL3IUC3
        
        Create a new object of the class itkInPlaceImageFilterIUL3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUL3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUL3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUL3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUL3IUC3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUC3_SetInPlace,None,itkInPlaceImageFilterIUL3IUC3)
itkInPlaceImageFilterIUL3IUC3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUC3_GetInPlace,None,itkInPlaceImageFilterIUL3IUC3)
itkInPlaceImageFilterIUL3IUC3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUC3_InPlaceOn,None,itkInPlaceImageFilterIUL3IUC3)
itkInPlaceImageFilterIUL3IUC3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUC3_InPlaceOff,None,itkInPlaceImageFilterIUL3IUC3)
itkInPlaceImageFilterIUL3IUC3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUC3_CanRunInPlace,None,itkInPlaceImageFilterIUL3IUC3)
itkInPlaceImageFilterIUL3IUC3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUC3_GetPointer,None,itkInPlaceImageFilterIUL3IUC3)
itkInPlaceImageFilterIUL3IUC3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUC3_swigregister
itkInPlaceImageFilterIUL3IUC3_swigregister(itkInPlaceImageFilterIUL3IUC3)

def itkInPlaceImageFilterIUL3IUC3_cast(*args):
  """itkInPlaceImageFilterIUL3IUC3_cast(itkLightObject obj) -> itkInPlaceImageFilterIUL3IUC3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUC3_cast(*args)

class itkInPlaceImageFilterIUL3IUL3(itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3):
    """Proxy of C++ itkInPlaceImageFilterIUL3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUL3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUL3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUL3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUL3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUL3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUL3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUL3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUL3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUL3IUL3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUL3IUL3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUL3IUL3
        
        Create a new object of the class itkInPlaceImageFilterIUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUL3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUL3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUL3IUL3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUL3_SetInPlace,None,itkInPlaceImageFilterIUL3IUL3)
itkInPlaceImageFilterIUL3IUL3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUL3_GetInPlace,None,itkInPlaceImageFilterIUL3IUL3)
itkInPlaceImageFilterIUL3IUL3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUL3_InPlaceOn,None,itkInPlaceImageFilterIUL3IUL3)
itkInPlaceImageFilterIUL3IUL3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUL3_InPlaceOff,None,itkInPlaceImageFilterIUL3IUL3)
itkInPlaceImageFilterIUL3IUL3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUL3_CanRunInPlace,None,itkInPlaceImageFilterIUL3IUL3)
itkInPlaceImageFilterIUL3IUL3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUL3_GetPointer,None,itkInPlaceImageFilterIUL3IUL3)
itkInPlaceImageFilterIUL3IUL3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUL3_swigregister
itkInPlaceImageFilterIUL3IUL3_swigregister(itkInPlaceImageFilterIUL3IUL3)

def itkInPlaceImageFilterIUL3IUL3_cast(*args):
  """itkInPlaceImageFilterIUL3IUL3_cast(itkLightObject obj) -> itkInPlaceImageFilterIUL3IUL3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUL3_cast(*args)

class itkInPlaceImageFilterIUL3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3):
    """Proxy of C++ itkInPlaceImageFilterIUL3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUS3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUS3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUS3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUS3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUS3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUS3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUS3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUL3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUL3IUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUL3IUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUL3IUS3
        
        Create a new object of the class itkInPlaceImageFilterIUL3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUL3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUL3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUL3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUL3IUS3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUS3_SetInPlace,None,itkInPlaceImageFilterIUL3IUS3)
itkInPlaceImageFilterIUL3IUS3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUS3_GetInPlace,None,itkInPlaceImageFilterIUL3IUS3)
itkInPlaceImageFilterIUL3IUS3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUS3_InPlaceOn,None,itkInPlaceImageFilterIUL3IUS3)
itkInPlaceImageFilterIUL3IUS3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUS3_InPlaceOff,None,itkInPlaceImageFilterIUL3IUS3)
itkInPlaceImageFilterIUL3IUS3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUS3_CanRunInPlace,None,itkInPlaceImageFilterIUL3IUS3)
itkInPlaceImageFilterIUL3IUS3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUS3_GetPointer,None,itkInPlaceImageFilterIUL3IUS3)
itkInPlaceImageFilterIUL3IUS3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUS3_swigregister
itkInPlaceImageFilterIUL3IUS3_swigregister(itkInPlaceImageFilterIUL3IUS3)

def itkInPlaceImageFilterIUL3IUS3_cast(*args):
  """itkInPlaceImageFilterIUL3IUS3_cast(itkLightObject obj) -> itkInPlaceImageFilterIUL3IUS3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUS3_cast(*args)

class itkInPlaceImageFilterIUS2ID2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2):
    """Proxy of C++ itkInPlaceImageFilterIUS2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ID2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ID2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ID2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ID2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ID2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ID2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ID2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUS2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUS2ID2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUS2ID2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUS2ID2
        
        Create a new object of the class itkInPlaceImageFilterIUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUS2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUS2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUS2ID2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ID2_SetInPlace,None,itkInPlaceImageFilterIUS2ID2)
itkInPlaceImageFilterIUS2ID2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ID2_GetInPlace,None,itkInPlaceImageFilterIUS2ID2)
itkInPlaceImageFilterIUS2ID2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ID2_InPlaceOn,None,itkInPlaceImageFilterIUS2ID2)
itkInPlaceImageFilterIUS2ID2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ID2_InPlaceOff,None,itkInPlaceImageFilterIUS2ID2)
itkInPlaceImageFilterIUS2ID2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ID2_CanRunInPlace,None,itkInPlaceImageFilterIUS2ID2)
itkInPlaceImageFilterIUS2ID2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ID2_GetPointer,None,itkInPlaceImageFilterIUS2ID2)
itkInPlaceImageFilterIUS2ID2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ID2_swigregister
itkInPlaceImageFilterIUS2ID2_swigregister(itkInPlaceImageFilterIUS2ID2)

def itkInPlaceImageFilterIUS2ID2_cast(*args):
  """itkInPlaceImageFilterIUS2ID2_cast(itkLightObject obj) -> itkInPlaceImageFilterIUS2ID2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ID2_cast(*args)

class itkInPlaceImageFilterIUS2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2):
    """Proxy of C++ itkInPlaceImageFilterIUS2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IF2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IF2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IF2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IF2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IF2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IF2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IF2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUS2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUS2IF2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUS2IF2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUS2IF2
        
        Create a new object of the class itkInPlaceImageFilterIUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUS2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUS2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUS2IF2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IF2_SetInPlace,None,itkInPlaceImageFilterIUS2IF2)
itkInPlaceImageFilterIUS2IF2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IF2_GetInPlace,None,itkInPlaceImageFilterIUS2IF2)
itkInPlaceImageFilterIUS2IF2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IF2_InPlaceOn,None,itkInPlaceImageFilterIUS2IF2)
itkInPlaceImageFilterIUS2IF2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IF2_InPlaceOff,None,itkInPlaceImageFilterIUS2IF2)
itkInPlaceImageFilterIUS2IF2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IF2_CanRunInPlace,None,itkInPlaceImageFilterIUS2IF2)
itkInPlaceImageFilterIUS2IF2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IF2_GetPointer,None,itkInPlaceImageFilterIUS2IF2)
itkInPlaceImageFilterIUS2IF2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IF2_swigregister
itkInPlaceImageFilterIUS2IF2_swigregister(itkInPlaceImageFilterIUS2IF2)

def itkInPlaceImageFilterIUS2IF2_cast(*args):
  """itkInPlaceImageFilterIUS2IF2_cast(itkLightObject obj) -> itkInPlaceImageFilterIUS2IF2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IF2_cast(*args)

class itkInPlaceImageFilterIUS2IRGBAUS2(itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBAUS2):
    """Proxy of C++ itkInPlaceImageFilterIUS2IRGBAUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBAUS2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBAUS2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBAUS2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBAUS2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBAUS2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBAUS2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBAUS2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUS2IRGBAUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUS2IRGBAUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBAUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUS2IRGBAUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBAUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUS2IRGBAUS2
        
        Create a new object of the class itkInPlaceImageFilterIUS2IRGBAUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUS2IRGBAUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUS2IRGBAUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUS2IRGBAUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUS2IRGBAUS2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBAUS2_SetInPlace,None,itkInPlaceImageFilterIUS2IRGBAUS2)
itkInPlaceImageFilterIUS2IRGBAUS2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBAUS2_GetInPlace,None,itkInPlaceImageFilterIUS2IRGBAUS2)
itkInPlaceImageFilterIUS2IRGBAUS2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBAUS2_InPlaceOn,None,itkInPlaceImageFilterIUS2IRGBAUS2)
itkInPlaceImageFilterIUS2IRGBAUS2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBAUS2_InPlaceOff,None,itkInPlaceImageFilterIUS2IRGBAUS2)
itkInPlaceImageFilterIUS2IRGBAUS2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBAUS2_CanRunInPlace,None,itkInPlaceImageFilterIUS2IRGBAUS2)
itkInPlaceImageFilterIUS2IRGBAUS2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBAUS2_GetPointer,None,itkInPlaceImageFilterIUS2IRGBAUS2)
itkInPlaceImageFilterIUS2IRGBAUS2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBAUS2_swigregister
itkInPlaceImageFilterIUS2IRGBAUS2_swigregister(itkInPlaceImageFilterIUS2IRGBAUS2)

def itkInPlaceImageFilterIUS2IRGBAUS2_cast(*args):
  """itkInPlaceImageFilterIUS2IRGBAUS2_cast(itkLightObject obj) -> itkInPlaceImageFilterIUS2IRGBAUS2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBAUS2_cast(*args)

class itkInPlaceImageFilterIUS2IRGBUS2(itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBUS2):
    """Proxy of C++ itkInPlaceImageFilterIUS2IRGBUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBUS2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBUS2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBUS2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBUS2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBUS2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBUS2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBUS2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUS2IRGBUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUS2IRGBUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUS2IRGBUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUS2IRGBUS2
        
        Create a new object of the class itkInPlaceImageFilterIUS2IRGBUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUS2IRGBUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUS2IRGBUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUS2IRGBUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUS2IRGBUS2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBUS2_SetInPlace,None,itkInPlaceImageFilterIUS2IRGBUS2)
itkInPlaceImageFilterIUS2IRGBUS2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBUS2_GetInPlace,None,itkInPlaceImageFilterIUS2IRGBUS2)
itkInPlaceImageFilterIUS2IRGBUS2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBUS2_InPlaceOn,None,itkInPlaceImageFilterIUS2IRGBUS2)
itkInPlaceImageFilterIUS2IRGBUS2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBUS2_InPlaceOff,None,itkInPlaceImageFilterIUS2IRGBUS2)
itkInPlaceImageFilterIUS2IRGBUS2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBUS2_CanRunInPlace,None,itkInPlaceImageFilterIUS2IRGBUS2)
itkInPlaceImageFilterIUS2IRGBUS2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBUS2_GetPointer,None,itkInPlaceImageFilterIUS2IRGBUS2)
itkInPlaceImageFilterIUS2IRGBUS2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBUS2_swigregister
itkInPlaceImageFilterIUS2IRGBUS2_swigregister(itkInPlaceImageFilterIUS2IRGBUS2)

def itkInPlaceImageFilterIUS2IRGBUS2_cast(*args):
  """itkInPlaceImageFilterIUS2IRGBUS2_cast(itkLightObject obj) -> itkInPlaceImageFilterIUS2IRGBUS2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBUS2_cast(*args)

class itkInPlaceImageFilterIUS2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2):
    """Proxy of C++ itkInPlaceImageFilterIUS2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUC2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUC2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUC2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUC2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUC2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUC2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUC2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUS2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUS2IUC2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUS2IUC2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUS2IUC2
        
        Create a new object of the class itkInPlaceImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUS2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUS2IUC2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUC2_SetInPlace,None,itkInPlaceImageFilterIUS2IUC2)
itkInPlaceImageFilterIUS2IUC2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUC2_GetInPlace,None,itkInPlaceImageFilterIUS2IUC2)
itkInPlaceImageFilterIUS2IUC2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUC2_InPlaceOn,None,itkInPlaceImageFilterIUS2IUC2)
itkInPlaceImageFilterIUS2IUC2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUC2_InPlaceOff,None,itkInPlaceImageFilterIUS2IUC2)
itkInPlaceImageFilterIUS2IUC2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUC2_CanRunInPlace,None,itkInPlaceImageFilterIUS2IUC2)
itkInPlaceImageFilterIUS2IUC2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUC2_GetPointer,None,itkInPlaceImageFilterIUS2IUC2)
itkInPlaceImageFilterIUS2IUC2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUC2_swigregister
itkInPlaceImageFilterIUS2IUC2_swigregister(itkInPlaceImageFilterIUS2IUC2)

def itkInPlaceImageFilterIUS2IUC2_cast(*args):
  """itkInPlaceImageFilterIUS2IUC2_cast(itkLightObject obj) -> itkInPlaceImageFilterIUS2IUC2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUC2_cast(*args)

class itkInPlaceImageFilterIUS2IUL2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2):
    """Proxy of C++ itkInPlaceImageFilterIUS2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUL2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUL2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUL2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUL2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUL2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUL2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUL2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUS2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUS2IUL2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUS2IUL2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUS2IUL2
        
        Create a new object of the class itkInPlaceImageFilterIUS2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUS2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUS2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUS2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUS2IUL2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUL2_SetInPlace,None,itkInPlaceImageFilterIUS2IUL2)
itkInPlaceImageFilterIUS2IUL2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUL2_GetInPlace,None,itkInPlaceImageFilterIUS2IUL2)
itkInPlaceImageFilterIUS2IUL2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUL2_InPlaceOn,None,itkInPlaceImageFilterIUS2IUL2)
itkInPlaceImageFilterIUS2IUL2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUL2_InPlaceOff,None,itkInPlaceImageFilterIUS2IUL2)
itkInPlaceImageFilterIUS2IUL2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUL2_CanRunInPlace,None,itkInPlaceImageFilterIUS2IUL2)
itkInPlaceImageFilterIUS2IUL2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUL2_GetPointer,None,itkInPlaceImageFilterIUS2IUL2)
itkInPlaceImageFilterIUS2IUL2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUL2_swigregister
itkInPlaceImageFilterIUS2IUL2_swigregister(itkInPlaceImageFilterIUS2IUL2)

def itkInPlaceImageFilterIUS2IUL2_cast(*args):
  """itkInPlaceImageFilterIUS2IUL2_cast(itkLightObject obj) -> itkInPlaceImageFilterIUS2IUL2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUL2_cast(*args)

class itkInPlaceImageFilterIUS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """Proxy of C++ itkInPlaceImageFilterIUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUS2IUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUS2IUS2"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUS2IUS2
        
        Create a new object of the class itkInPlaceImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUS2IUS2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2_SetInPlace,None,itkInPlaceImageFilterIUS2IUS2)
itkInPlaceImageFilterIUS2IUS2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2_GetInPlace,None,itkInPlaceImageFilterIUS2IUS2)
itkInPlaceImageFilterIUS2IUS2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2_InPlaceOn,None,itkInPlaceImageFilterIUS2IUS2)
itkInPlaceImageFilterIUS2IUS2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2_InPlaceOff,None,itkInPlaceImageFilterIUS2IUS2)
itkInPlaceImageFilterIUS2IUS2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2_CanRunInPlace,None,itkInPlaceImageFilterIUS2IUS2)
itkInPlaceImageFilterIUS2IUS2.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2_GetPointer,None,itkInPlaceImageFilterIUS2IUS2)
itkInPlaceImageFilterIUS2IUS2_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2_swigregister
itkInPlaceImageFilterIUS2IUS2_swigregister(itkInPlaceImageFilterIUS2IUS2)

def itkInPlaceImageFilterIUS2IUS2_cast(*args):
  """itkInPlaceImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkInPlaceImageFilterIUS2IUS2"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2_cast(*args)

class itkInPlaceImageFilterIUS3ID3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3):
    """Proxy of C++ itkInPlaceImageFilterIUS3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ID3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ID3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ID3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ID3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ID3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ID3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ID3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUS3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUS3ID3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUS3ID3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUS3ID3
        
        Create a new object of the class itkInPlaceImageFilterIUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUS3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUS3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUS3ID3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ID3_SetInPlace,None,itkInPlaceImageFilterIUS3ID3)
itkInPlaceImageFilterIUS3ID3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ID3_GetInPlace,None,itkInPlaceImageFilterIUS3ID3)
itkInPlaceImageFilterIUS3ID3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ID3_InPlaceOn,None,itkInPlaceImageFilterIUS3ID3)
itkInPlaceImageFilterIUS3ID3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ID3_InPlaceOff,None,itkInPlaceImageFilterIUS3ID3)
itkInPlaceImageFilterIUS3ID3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ID3_CanRunInPlace,None,itkInPlaceImageFilterIUS3ID3)
itkInPlaceImageFilterIUS3ID3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ID3_GetPointer,None,itkInPlaceImageFilterIUS3ID3)
itkInPlaceImageFilterIUS3ID3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ID3_swigregister
itkInPlaceImageFilterIUS3ID3_swigregister(itkInPlaceImageFilterIUS3ID3)

def itkInPlaceImageFilterIUS3ID3_cast(*args):
  """itkInPlaceImageFilterIUS3ID3_cast(itkLightObject obj) -> itkInPlaceImageFilterIUS3ID3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ID3_cast(*args)

class itkInPlaceImageFilterIUS3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3):
    """Proxy of C++ itkInPlaceImageFilterIUS3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IF3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IF3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IF3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IF3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IF3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IF3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IF3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUS3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUS3IF3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUS3IF3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUS3IF3
        
        Create a new object of the class itkInPlaceImageFilterIUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUS3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUS3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUS3IF3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IF3_SetInPlace,None,itkInPlaceImageFilterIUS3IF3)
itkInPlaceImageFilterIUS3IF3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IF3_GetInPlace,None,itkInPlaceImageFilterIUS3IF3)
itkInPlaceImageFilterIUS3IF3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IF3_InPlaceOn,None,itkInPlaceImageFilterIUS3IF3)
itkInPlaceImageFilterIUS3IF3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IF3_InPlaceOff,None,itkInPlaceImageFilterIUS3IF3)
itkInPlaceImageFilterIUS3IF3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IF3_CanRunInPlace,None,itkInPlaceImageFilterIUS3IF3)
itkInPlaceImageFilterIUS3IF3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IF3_GetPointer,None,itkInPlaceImageFilterIUS3IF3)
itkInPlaceImageFilterIUS3IF3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IF3_swigregister
itkInPlaceImageFilterIUS3IF3_swigregister(itkInPlaceImageFilterIUS3IF3)

def itkInPlaceImageFilterIUS3IF3_cast(*args):
  """itkInPlaceImageFilterIUS3IF3_cast(itkLightObject obj) -> itkInPlaceImageFilterIUS3IF3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IF3_cast(*args)

class itkInPlaceImageFilterIUS3IRGBAUS3(itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBAUS3):
    """Proxy of C++ itkInPlaceImageFilterIUS3IRGBAUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBAUS3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBAUS3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBAUS3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBAUS3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBAUS3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBAUS3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBAUS3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUS3IRGBAUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUS3IRGBAUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBAUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUS3IRGBAUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBAUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUS3IRGBAUS3
        
        Create a new object of the class itkInPlaceImageFilterIUS3IRGBAUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUS3IRGBAUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUS3IRGBAUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUS3IRGBAUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUS3IRGBAUS3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBAUS3_SetInPlace,None,itkInPlaceImageFilterIUS3IRGBAUS3)
itkInPlaceImageFilterIUS3IRGBAUS3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBAUS3_GetInPlace,None,itkInPlaceImageFilterIUS3IRGBAUS3)
itkInPlaceImageFilterIUS3IRGBAUS3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBAUS3_InPlaceOn,None,itkInPlaceImageFilterIUS3IRGBAUS3)
itkInPlaceImageFilterIUS3IRGBAUS3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBAUS3_InPlaceOff,None,itkInPlaceImageFilterIUS3IRGBAUS3)
itkInPlaceImageFilterIUS3IRGBAUS3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBAUS3_CanRunInPlace,None,itkInPlaceImageFilterIUS3IRGBAUS3)
itkInPlaceImageFilterIUS3IRGBAUS3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBAUS3_GetPointer,None,itkInPlaceImageFilterIUS3IRGBAUS3)
itkInPlaceImageFilterIUS3IRGBAUS3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBAUS3_swigregister
itkInPlaceImageFilterIUS3IRGBAUS3_swigregister(itkInPlaceImageFilterIUS3IRGBAUS3)

def itkInPlaceImageFilterIUS3IRGBAUS3_cast(*args):
  """itkInPlaceImageFilterIUS3IRGBAUS3_cast(itkLightObject obj) -> itkInPlaceImageFilterIUS3IRGBAUS3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBAUS3_cast(*args)

class itkInPlaceImageFilterIUS3IRGBUS3(itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBUS3):
    """Proxy of C++ itkInPlaceImageFilterIUS3IRGBUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBUS3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBUS3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBUS3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBUS3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBUS3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBUS3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBUS3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUS3IRGBUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUS3IRGBUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUS3IRGBUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUS3IRGBUS3
        
        Create a new object of the class itkInPlaceImageFilterIUS3IRGBUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUS3IRGBUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUS3IRGBUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUS3IRGBUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUS3IRGBUS3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBUS3_SetInPlace,None,itkInPlaceImageFilterIUS3IRGBUS3)
itkInPlaceImageFilterIUS3IRGBUS3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBUS3_GetInPlace,None,itkInPlaceImageFilterIUS3IRGBUS3)
itkInPlaceImageFilterIUS3IRGBUS3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBUS3_InPlaceOn,None,itkInPlaceImageFilterIUS3IRGBUS3)
itkInPlaceImageFilterIUS3IRGBUS3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBUS3_InPlaceOff,None,itkInPlaceImageFilterIUS3IRGBUS3)
itkInPlaceImageFilterIUS3IRGBUS3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBUS3_CanRunInPlace,None,itkInPlaceImageFilterIUS3IRGBUS3)
itkInPlaceImageFilterIUS3IRGBUS3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBUS3_GetPointer,None,itkInPlaceImageFilterIUS3IRGBUS3)
itkInPlaceImageFilterIUS3IRGBUS3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBUS3_swigregister
itkInPlaceImageFilterIUS3IRGBUS3_swigregister(itkInPlaceImageFilterIUS3IRGBUS3)

def itkInPlaceImageFilterIUS3IRGBUS3_cast(*args):
  """itkInPlaceImageFilterIUS3IRGBUS3_cast(itkLightObject obj) -> itkInPlaceImageFilterIUS3IRGBUS3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBUS3_cast(*args)

class itkInPlaceImageFilterIUS3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3):
    """Proxy of C++ itkInPlaceImageFilterIUS3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUC3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUC3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUC3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUC3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUC3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUC3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUC3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUS3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUS3IUC3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUS3IUC3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUS3IUC3
        
        Create a new object of the class itkInPlaceImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUS3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUS3IUC3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUC3_SetInPlace,None,itkInPlaceImageFilterIUS3IUC3)
itkInPlaceImageFilterIUS3IUC3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUC3_GetInPlace,None,itkInPlaceImageFilterIUS3IUC3)
itkInPlaceImageFilterIUS3IUC3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUC3_InPlaceOn,None,itkInPlaceImageFilterIUS3IUC3)
itkInPlaceImageFilterIUS3IUC3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUC3_InPlaceOff,None,itkInPlaceImageFilterIUS3IUC3)
itkInPlaceImageFilterIUS3IUC3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUC3_CanRunInPlace,None,itkInPlaceImageFilterIUS3IUC3)
itkInPlaceImageFilterIUS3IUC3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUC3_GetPointer,None,itkInPlaceImageFilterIUS3IUC3)
itkInPlaceImageFilterIUS3IUC3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUC3_swigregister
itkInPlaceImageFilterIUS3IUC3_swigregister(itkInPlaceImageFilterIUS3IUC3)

def itkInPlaceImageFilterIUS3IUC3_cast(*args):
  """itkInPlaceImageFilterIUS3IUC3_cast(itkLightObject obj) -> itkInPlaceImageFilterIUS3IUC3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUC3_cast(*args)

class itkInPlaceImageFilterIUS3IUL3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3):
    """Proxy of C++ itkInPlaceImageFilterIUS3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUL3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUL3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUL3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUL3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUL3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUL3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUL3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUS3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUS3IUL3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUS3IUL3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUS3IUL3
        
        Create a new object of the class itkInPlaceImageFilterIUS3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUS3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUS3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUS3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUS3IUL3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUL3_SetInPlace,None,itkInPlaceImageFilterIUS3IUL3)
itkInPlaceImageFilterIUS3IUL3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUL3_GetInPlace,None,itkInPlaceImageFilterIUS3IUL3)
itkInPlaceImageFilterIUS3IUL3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUL3_InPlaceOn,None,itkInPlaceImageFilterIUS3IUL3)
itkInPlaceImageFilterIUS3IUL3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUL3_InPlaceOff,None,itkInPlaceImageFilterIUS3IUL3)
itkInPlaceImageFilterIUS3IUL3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUL3_CanRunInPlace,None,itkInPlaceImageFilterIUS3IUL3)
itkInPlaceImageFilterIUS3IUL3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUL3_GetPointer,None,itkInPlaceImageFilterIUS3IUL3)
itkInPlaceImageFilterIUS3IUL3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUL3_swigregister
itkInPlaceImageFilterIUS3IUL3_swigregister(itkInPlaceImageFilterIUS3IUL3)

def itkInPlaceImageFilterIUS3IUL3_cast(*args):
  """itkInPlaceImageFilterIUS3IUL3_cast(itkLightObject obj) -> itkInPlaceImageFilterIUS3IUL3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUL3_cast(*args)

class itkInPlaceImageFilterIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """Proxy of C++ itkInPlaceImageFilterIUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUS3IUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUS3IUS3"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUS3IUS3
        
        Create a new object of the class itkInPlaceImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUS3IUS3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3_SetInPlace,None,itkInPlaceImageFilterIUS3IUS3)
itkInPlaceImageFilterIUS3IUS3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3_GetInPlace,None,itkInPlaceImageFilterIUS3IUS3)
itkInPlaceImageFilterIUS3IUS3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3_InPlaceOn,None,itkInPlaceImageFilterIUS3IUS3)
itkInPlaceImageFilterIUS3IUS3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3_InPlaceOff,None,itkInPlaceImageFilterIUS3IUS3)
itkInPlaceImageFilterIUS3IUS3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3_CanRunInPlace,None,itkInPlaceImageFilterIUS3IUS3)
itkInPlaceImageFilterIUS3IUS3.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3_GetPointer,None,itkInPlaceImageFilterIUS3IUS3)
itkInPlaceImageFilterIUS3IUS3_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3_swigregister
itkInPlaceImageFilterIUS3IUS3_swigregister(itkInPlaceImageFilterIUS3IUS3)

def itkInPlaceImageFilterIUS3IUS3_cast(*args):
  """itkInPlaceImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkInPlaceImageFilterIUS3IUS3"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3_cast(*args)

class itkInPlaceImageFilterIVF22ICVF22(itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22):
    """Proxy of C++ itkInPlaceImageFilterIVF22ICVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22ICVF22_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22ICVF22_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22ICVF22_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22ICVF22_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22ICVF22_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22ICVF22_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22ICVF22_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIVF22ICVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIVF22ICVF22"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22ICVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIVF22ICVF22"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22ICVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIVF22ICVF22
        
        Create a new object of the class itkInPlaceImageFilterIVF22ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIVF22ICVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIVF22ICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIVF22ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIVF22ICVF22.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22ICVF22_SetInPlace,None,itkInPlaceImageFilterIVF22ICVF22)
itkInPlaceImageFilterIVF22ICVF22.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22ICVF22_GetInPlace,None,itkInPlaceImageFilterIVF22ICVF22)
itkInPlaceImageFilterIVF22ICVF22.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22ICVF22_InPlaceOn,None,itkInPlaceImageFilterIVF22ICVF22)
itkInPlaceImageFilterIVF22ICVF22.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22ICVF22_InPlaceOff,None,itkInPlaceImageFilterIVF22ICVF22)
itkInPlaceImageFilterIVF22ICVF22.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22ICVF22_CanRunInPlace,None,itkInPlaceImageFilterIVF22ICVF22)
itkInPlaceImageFilterIVF22ICVF22.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22ICVF22_GetPointer,None,itkInPlaceImageFilterIVF22ICVF22)
itkInPlaceImageFilterIVF22ICVF22_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22ICVF22_swigregister
itkInPlaceImageFilterIVF22ICVF22_swigregister(itkInPlaceImageFilterIVF22ICVF22)

def itkInPlaceImageFilterIVF22ICVF22_cast(*args):
  """itkInPlaceImageFilterIVF22ICVF22_cast(itkLightObject obj) -> itkInPlaceImageFilterIVF22ICVF22"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22ICVF22_cast(*args)

class itkInPlaceImageFilterIVF22IVF22(itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22):
    """Proxy of C++ itkInPlaceImageFilterIVF22IVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22IVF22_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22IVF22_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22IVF22_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22IVF22_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22IVF22_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22IVF22_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22IVF22_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIVF22IVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIVF22IVF22"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22IVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIVF22IVF22"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22IVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIVF22IVF22
        
        Create a new object of the class itkInPlaceImageFilterIVF22IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIVF22IVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIVF22IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIVF22IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIVF22IVF22.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22IVF22_SetInPlace,None,itkInPlaceImageFilterIVF22IVF22)
itkInPlaceImageFilterIVF22IVF22.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22IVF22_GetInPlace,None,itkInPlaceImageFilterIVF22IVF22)
itkInPlaceImageFilterIVF22IVF22.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22IVF22_InPlaceOn,None,itkInPlaceImageFilterIVF22IVF22)
itkInPlaceImageFilterIVF22IVF22.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22IVF22_InPlaceOff,None,itkInPlaceImageFilterIVF22IVF22)
itkInPlaceImageFilterIVF22IVF22.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22IVF22_CanRunInPlace,None,itkInPlaceImageFilterIVF22IVF22)
itkInPlaceImageFilterIVF22IVF22.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22IVF22_GetPointer,None,itkInPlaceImageFilterIVF22IVF22)
itkInPlaceImageFilterIVF22IVF22_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22IVF22_swigregister
itkInPlaceImageFilterIVF22IVF22_swigregister(itkInPlaceImageFilterIVF22IVF22)

def itkInPlaceImageFilterIVF22IVF22_cast(*args):
  """itkInPlaceImageFilterIVF22IVF22_cast(itkLightObject obj) -> itkInPlaceImageFilterIVF22IVF22"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22IVF22_cast(*args)

class itkInPlaceImageFilterIVF33ICVF33(itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33):
    """Proxy of C++ itkInPlaceImageFilterIVF33ICVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33ICVF33_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33ICVF33_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33ICVF33_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33ICVF33_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33ICVF33_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33ICVF33_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33ICVF33_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIVF33ICVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIVF33ICVF33"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33ICVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIVF33ICVF33"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33ICVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIVF33ICVF33
        
        Create a new object of the class itkInPlaceImageFilterIVF33ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIVF33ICVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIVF33ICVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIVF33ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIVF33ICVF33.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33ICVF33_SetInPlace,None,itkInPlaceImageFilterIVF33ICVF33)
itkInPlaceImageFilterIVF33ICVF33.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33ICVF33_GetInPlace,None,itkInPlaceImageFilterIVF33ICVF33)
itkInPlaceImageFilterIVF33ICVF33.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33ICVF33_InPlaceOn,None,itkInPlaceImageFilterIVF33ICVF33)
itkInPlaceImageFilterIVF33ICVF33.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33ICVF33_InPlaceOff,None,itkInPlaceImageFilterIVF33ICVF33)
itkInPlaceImageFilterIVF33ICVF33.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33ICVF33_CanRunInPlace,None,itkInPlaceImageFilterIVF33ICVF33)
itkInPlaceImageFilterIVF33ICVF33.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33ICVF33_GetPointer,None,itkInPlaceImageFilterIVF33ICVF33)
itkInPlaceImageFilterIVF33ICVF33_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33ICVF33_swigregister
itkInPlaceImageFilterIVF33ICVF33_swigregister(itkInPlaceImageFilterIVF33ICVF33)

def itkInPlaceImageFilterIVF33ICVF33_cast(*args):
  """itkInPlaceImageFilterIVF33ICVF33_cast(itkLightObject obj) -> itkInPlaceImageFilterIVF33ICVF33"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33ICVF33_cast(*args)

class itkInPlaceImageFilterIVF33IVF33(itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33):
    """Proxy of C++ itkInPlaceImageFilterIVF33IVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33IVF33_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33IVF33_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33IVF33_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33IVF33_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33IVF33_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33IVF33_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33IVF33_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterAPython.delete_itkInPlaceImageFilterIVF33IVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIVF33IVF33"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33IVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIVF33IVF33"""
        return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33IVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIVF33IVF33
        
        Create a new object of the class itkInPlaceImageFilterIVF33IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIVF33IVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIVF33IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIVF33IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIVF33IVF33.SetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33IVF33_SetInPlace,None,itkInPlaceImageFilterIVF33IVF33)
itkInPlaceImageFilterIVF33IVF33.GetInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33IVF33_GetInPlace,None,itkInPlaceImageFilterIVF33IVF33)
itkInPlaceImageFilterIVF33IVF33.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33IVF33_InPlaceOn,None,itkInPlaceImageFilterIVF33IVF33)
itkInPlaceImageFilterIVF33IVF33.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33IVF33_InPlaceOff,None,itkInPlaceImageFilterIVF33IVF33)
itkInPlaceImageFilterIVF33IVF33.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33IVF33_CanRunInPlace,None,itkInPlaceImageFilterIVF33IVF33)
itkInPlaceImageFilterIVF33IVF33.GetPointer = new_instancemethod(_itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33IVF33_GetPointer,None,itkInPlaceImageFilterIVF33IVF33)
itkInPlaceImageFilterIVF33IVF33_swigregister = _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33IVF33_swigregister
itkInPlaceImageFilterIVF33IVF33_swigregister(itkInPlaceImageFilterIVF33IVF33)

def itkInPlaceImageFilterIVF33IVF33_cast(*args):
  """itkInPlaceImageFilterIVF33IVF33_cast(itkLightObject obj) -> itkInPlaceImageFilterIVF33IVF33"""
  return _itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33IVF33_cast(*args)



