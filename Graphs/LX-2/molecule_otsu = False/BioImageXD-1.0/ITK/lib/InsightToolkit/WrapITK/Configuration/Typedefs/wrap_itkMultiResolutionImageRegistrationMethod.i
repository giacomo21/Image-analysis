// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkMultiResolutionImageRegistrationMethodChicken
#endif
#ifdef SWIGCSHARP
%module itkMultiResolutionImageRegistrationMethodCsharp
#endif
#ifdef SWIGGUILE
%module itkMultiResolutionImageRegistrationMethodGuile
#endif
#ifdef SWIGJAVA
%module itkMultiResolutionImageRegistrationMethodJava
#endif
#ifdef SWIGLUA
%module itkMultiResolutionImageRegistrationMethodLua
#endif
#ifdef SWIGMODULA3
%module itkMultiResolutionImageRegistrationMethodModula3
#endif
#ifdef SWIGMZSCHEME
%module itkMultiResolutionImageRegistrationMethodMzscheme
#endif
#ifdef SWIGOCAML
%module itkMultiResolutionImageRegistrationMethodOcaml
#endif
#ifdef SWIGPERL
%module itkMultiResolutionImageRegistrationMethodPerl
#endif
#ifdef SWIGPERL5
%module itkMultiResolutionImageRegistrationMethodPerl5
#endif
#ifdef SWIGPHP
%module itkMultiResolutionImageRegistrationMethodPhp
#endif
#ifdef SWIGPHP4
%module itkMultiResolutionImageRegistrationMethodPhp4
#endif
#ifdef SWIGPHP5
%module itkMultiResolutionImageRegistrationMethodPhp5
#endif
#ifdef SWIGPIKE
%module itkMultiResolutionImageRegistrationMethodPike
#endif
#ifdef SWIGPYTHON
%module itkMultiResolutionImageRegistrationMethodPython
#endif
#ifdef SWIGR
%module itkMultiResolutionImageRegistrationMethodR
#endif
#ifdef SWIGRUBY
%module itkMultiResolutionImageRegistrationMethodRuby
#endif
#ifdef SWIGSEXP
%module itkMultiResolutionImageRegistrationMethodSexp
#endif
#ifdef SWIGTCL
%module itkMultiResolutionImageRegistrationMethodTcl
#endif
#ifdef SWIGXML
%module itkMultiResolutionImageRegistrationMethodXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Numerics.includes"
#include "Transforms.includes"
#include "SpatialObject.includes"
#include "Resize.includes"
#include "Calculators.includes"
#include "Registration.includes"
%}


%{
%}




%import wrap_ITKOptimizers.i
%import wrap_itkImageToImageMetric.i
%import wrap_ITKRegions.i
%import wrap_itkMultiResolutionPyramidImageFilter.i
%import wrap_itkArray2D.i
%import wrap_itkTransform.i
%import wrap_itkImage.i
%import wrap_itkArray.i
%import wrap_ITKCommonBase.i
%import wrap_itkInterpolateImageFunction.i


%include itk.i
%include wrap_itkMultiResolutionImageRegistrationMethod_ext.i


 class itkMultiResolutionImageRegistrationMethodID2ID2 : public itkProcessObject {
   public:
     static itkMultiResolutionImageRegistrationMethodID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void StartRegistration();
     void StopRegistration();
     virtual void SetFixedImage(itkImageD2 const * _arg);
     virtual itkImageD2 const * GetFixedImage() const;
     virtual void SetMovingImage(itkImageD2 const * _arg);
     virtual itkImageD2 const * GetMovingImage() const;
     virtual void SetOptimizer(itkSingleValuedNonLinearOptimizer * _arg);
     virtual itkSingleValuedNonLinearOptimizer * GetOptimizer();
     virtual void SetMetric(itkImageToImageMetricID2ID2 * _arg);
     virtual itkImageToImageMetricID2ID2 * GetMetric();
     virtual void SetFixedImageRegion(itkImageRegion2 const _arg);
     virtual itkImageRegion2 const & GetFixedImageRegion() const;
     virtual void SetTransform(itkTransformD22 * _arg);
     virtual itkTransformD22 * GetTransform();
     virtual void SetInterpolator(itkInterpolateImageFunctionID2D * _arg);
     virtual itkInterpolateImageFunctionID2D * GetInterpolator();
     virtual void SetFixedImagePyramid(itkMultiResolutionPyramidImageFilterID2ID2 * _arg);
     virtual itkMultiResolutionPyramidImageFilterID2ID2 * GetFixedImagePyramid();
     virtual void SetMovingImagePyramid(itkMultiResolutionPyramidImageFilterID2ID2 * _arg);
     virtual itkMultiResolutionPyramidImageFilterID2ID2 * GetMovingImagePyramid();
     void SetSchedules(itkArray2DUI const & fixedSchedule, itkArray2DUI const & movingSchedule);
     virtual itkArray2DUI GetFixedImagePyramidSchedule() const;
     virtual itkArray2DUI GetMovingImagePyramidSchedule() const;
     void SetNumberOfLevels(unsigned long numberOfLevels);
     virtual unsigned long GetNumberOfLevels() const;
     virtual unsigned long GetCurrentLevel() const;
     virtual void SetInitialTransformParameters(itkArrayD const _arg);
     virtual itkArrayD const & GetInitialTransformParameters() const;
     virtual void SetInitialTransformParametersOfNextLevel(itkArrayD const _arg);
     virtual itkArrayD const & GetInitialTransformParametersOfNextLevel() const;
     virtual itkArrayD const & GetLastTransformParameters() const;
     itkDataObjectDecoratorTD22 const * GetOutput() const;
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual unsigned long GetMTime() const;
   private:
     itkMultiResolutionImageRegistrationMethodID2ID2(itkMultiResolutionImageRegistrationMethodID2ID2 const & arg0);
     void operator=(itkMultiResolutionImageRegistrationMethodID2ID2 const & arg0);
   protected:
     itkMultiResolutionImageRegistrationMethodID2ID2();
     ~itkMultiResolutionImageRegistrationMethodID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     void Initialize();
     void PreparePyramids();
     virtual void SetCurrentLevel(unsigned long const _arg);
 };


 class itkMultiResolutionImageRegistrationMethodID2ID2_Pointer {
   public:
     itkMultiResolutionImageRegistrationMethodID2ID2_Pointer();
     itkMultiResolutionImageRegistrationMethodID2ID2_Pointer(itkMultiResolutionImageRegistrationMethodID2ID2_Pointer const & p);
     itkMultiResolutionImageRegistrationMethodID2ID2_Pointer(itkMultiResolutionImageRegistrationMethodID2ID2 * p);
     ~itkMultiResolutionImageRegistrationMethodID2ID2_Pointer();
     itkMultiResolutionImageRegistrationMethodID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiResolutionImageRegistrationMethodID2ID2 * GetPointer() const;
     bool operator<(itkMultiResolutionImageRegistrationMethodID2ID2_Pointer const & r) const;
     bool operator>(itkMultiResolutionImageRegistrationMethodID2ID2_Pointer const & r) const;
     bool operator<=(itkMultiResolutionImageRegistrationMethodID2ID2_Pointer const & r) const;
     bool operator>=(itkMultiResolutionImageRegistrationMethodID2ID2_Pointer const & r) const;
     itkMultiResolutionImageRegistrationMethodID2ID2_Pointer & operator=(itkMultiResolutionImageRegistrationMethodID2ID2_Pointer const & r);
     itkMultiResolutionImageRegistrationMethodID2ID2_Pointer & operator=(itkMultiResolutionImageRegistrationMethodID2ID2 * r);
     itkMultiResolutionImageRegistrationMethodID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiResolutionImageRegistrationMethodID3ID3 : public itkProcessObject {
   public:
     static itkMultiResolutionImageRegistrationMethodID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void StartRegistration();
     void StopRegistration();
     virtual void SetFixedImage(itkImageD3 const * _arg);
     virtual itkImageD3 const * GetFixedImage() const;
     virtual void SetMovingImage(itkImageD3 const * _arg);
     virtual itkImageD3 const * GetMovingImage() const;
     virtual void SetOptimizer(itkSingleValuedNonLinearOptimizer * _arg);
     virtual itkSingleValuedNonLinearOptimizer * GetOptimizer();
     virtual void SetMetric(itkImageToImageMetricID3ID3 * _arg);
     virtual itkImageToImageMetricID3ID3 * GetMetric();
     virtual void SetFixedImageRegion(itkImageRegion3 const _arg);
     virtual itkImageRegion3 const & GetFixedImageRegion() const;
     virtual void SetTransform(itkTransformD33 * _arg);
     virtual itkTransformD33 * GetTransform();
     virtual void SetInterpolator(itkInterpolateImageFunctionID3D * _arg);
     virtual itkInterpolateImageFunctionID3D * GetInterpolator();
     virtual void SetFixedImagePyramid(itkMultiResolutionPyramidImageFilterID3ID3 * _arg);
     virtual itkMultiResolutionPyramidImageFilterID3ID3 * GetFixedImagePyramid();
     virtual void SetMovingImagePyramid(itkMultiResolutionPyramidImageFilterID3ID3 * _arg);
     virtual itkMultiResolutionPyramidImageFilterID3ID3 * GetMovingImagePyramid();
     void SetSchedules(itkArray2DUI const & fixedSchedule, itkArray2DUI const & movingSchedule);
     virtual itkArray2DUI GetFixedImagePyramidSchedule() const;
     virtual itkArray2DUI GetMovingImagePyramidSchedule() const;
     void SetNumberOfLevels(unsigned long numberOfLevels);
     virtual unsigned long GetNumberOfLevels() const;
     virtual unsigned long GetCurrentLevel() const;
     virtual void SetInitialTransformParameters(itkArrayD const _arg);
     virtual itkArrayD const & GetInitialTransformParameters() const;
     virtual void SetInitialTransformParametersOfNextLevel(itkArrayD const _arg);
     virtual itkArrayD const & GetInitialTransformParametersOfNextLevel() const;
     virtual itkArrayD const & GetLastTransformParameters() const;
     itkDataObjectDecoratorTD33 const * GetOutput() const;
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual unsigned long GetMTime() const;
   private:
     itkMultiResolutionImageRegistrationMethodID3ID3(itkMultiResolutionImageRegistrationMethodID3ID3 const & arg0);
     void operator=(itkMultiResolutionImageRegistrationMethodID3ID3 const & arg0);
   protected:
     itkMultiResolutionImageRegistrationMethodID3ID3();
     ~itkMultiResolutionImageRegistrationMethodID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     void Initialize();
     void PreparePyramids();
     virtual void SetCurrentLevel(unsigned long const _arg);
 };


 class itkMultiResolutionImageRegistrationMethodID3ID3_Pointer {
   public:
     itkMultiResolutionImageRegistrationMethodID3ID3_Pointer();
     itkMultiResolutionImageRegistrationMethodID3ID3_Pointer(itkMultiResolutionImageRegistrationMethodID3ID3_Pointer const & p);
     itkMultiResolutionImageRegistrationMethodID3ID3_Pointer(itkMultiResolutionImageRegistrationMethodID3ID3 * p);
     ~itkMultiResolutionImageRegistrationMethodID3ID3_Pointer();
     itkMultiResolutionImageRegistrationMethodID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiResolutionImageRegistrationMethodID3ID3 * GetPointer() const;
     bool operator<(itkMultiResolutionImageRegistrationMethodID3ID3_Pointer const & r) const;
     bool operator>(itkMultiResolutionImageRegistrationMethodID3ID3_Pointer const & r) const;
     bool operator<=(itkMultiResolutionImageRegistrationMethodID3ID3_Pointer const & r) const;
     bool operator>=(itkMultiResolutionImageRegistrationMethodID3ID3_Pointer const & r) const;
     itkMultiResolutionImageRegistrationMethodID3ID3_Pointer & operator=(itkMultiResolutionImageRegistrationMethodID3ID3_Pointer const & r);
     itkMultiResolutionImageRegistrationMethodID3ID3_Pointer & operator=(itkMultiResolutionImageRegistrationMethodID3ID3 * r);
     itkMultiResolutionImageRegistrationMethodID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiResolutionImageRegistrationMethodIF2IF2 : public itkProcessObject {
   public:
     static itkMultiResolutionImageRegistrationMethodIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void StartRegistration();
     void StopRegistration();
     virtual void SetFixedImage(itkImageF2 const * _arg);
     virtual itkImageF2 const * GetFixedImage() const;
     virtual void SetMovingImage(itkImageF2 const * _arg);
     virtual itkImageF2 const * GetMovingImage() const;
     virtual void SetOptimizer(itkSingleValuedNonLinearOptimizer * _arg);
     virtual itkSingleValuedNonLinearOptimizer * GetOptimizer();
     virtual void SetMetric(itkImageToImageMetricIF2IF2 * _arg);
     virtual itkImageToImageMetricIF2IF2 * GetMetric();
     virtual void SetFixedImageRegion(itkImageRegion2 const _arg);
     virtual itkImageRegion2 const & GetFixedImageRegion() const;
     virtual void SetTransform(itkTransformD22 * _arg);
     virtual itkTransformD22 * GetTransform();
     virtual void SetInterpolator(itkInterpolateImageFunctionIF2D * _arg);
     virtual itkInterpolateImageFunctionIF2D * GetInterpolator();
     virtual void SetFixedImagePyramid(itkMultiResolutionPyramidImageFilterIF2IF2 * _arg);
     virtual itkMultiResolutionPyramidImageFilterIF2IF2 * GetFixedImagePyramid();
     virtual void SetMovingImagePyramid(itkMultiResolutionPyramidImageFilterIF2IF2 * _arg);
     virtual itkMultiResolutionPyramidImageFilterIF2IF2 * GetMovingImagePyramid();
     void SetSchedules(itkArray2DUI const & fixedSchedule, itkArray2DUI const & movingSchedule);
     virtual itkArray2DUI GetFixedImagePyramidSchedule() const;
     virtual itkArray2DUI GetMovingImagePyramidSchedule() const;
     void SetNumberOfLevels(unsigned long numberOfLevels);
     virtual unsigned long GetNumberOfLevels() const;
     virtual unsigned long GetCurrentLevel() const;
     virtual void SetInitialTransformParameters(itkArrayD const _arg);
     virtual itkArrayD const & GetInitialTransformParameters() const;
     virtual void SetInitialTransformParametersOfNextLevel(itkArrayD const _arg);
     virtual itkArrayD const & GetInitialTransformParametersOfNextLevel() const;
     virtual itkArrayD const & GetLastTransformParameters() const;
     itkDataObjectDecoratorTD22 const * GetOutput() const;
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual unsigned long GetMTime() const;
   private:
     itkMultiResolutionImageRegistrationMethodIF2IF2(itkMultiResolutionImageRegistrationMethodIF2IF2 const & arg0);
     void operator=(itkMultiResolutionImageRegistrationMethodIF2IF2 const & arg0);
   protected:
     itkMultiResolutionImageRegistrationMethodIF2IF2();
     ~itkMultiResolutionImageRegistrationMethodIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     void Initialize();
     void PreparePyramids();
     virtual void SetCurrentLevel(unsigned long const _arg);
 };


 class itkMultiResolutionImageRegistrationMethodIF2IF2_Pointer {
   public:
     itkMultiResolutionImageRegistrationMethodIF2IF2_Pointer();
     itkMultiResolutionImageRegistrationMethodIF2IF2_Pointer(itkMultiResolutionImageRegistrationMethodIF2IF2_Pointer const & p);
     itkMultiResolutionImageRegistrationMethodIF2IF2_Pointer(itkMultiResolutionImageRegistrationMethodIF2IF2 * p);
     ~itkMultiResolutionImageRegistrationMethodIF2IF2_Pointer();
     itkMultiResolutionImageRegistrationMethodIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiResolutionImageRegistrationMethodIF2IF2 * GetPointer() const;
     bool operator<(itkMultiResolutionImageRegistrationMethodIF2IF2_Pointer const & r) const;
     bool operator>(itkMultiResolutionImageRegistrationMethodIF2IF2_Pointer const & r) const;
     bool operator<=(itkMultiResolutionImageRegistrationMethodIF2IF2_Pointer const & r) const;
     bool operator>=(itkMultiResolutionImageRegistrationMethodIF2IF2_Pointer const & r) const;
     itkMultiResolutionImageRegistrationMethodIF2IF2_Pointer & operator=(itkMultiResolutionImageRegistrationMethodIF2IF2_Pointer const & r);
     itkMultiResolutionImageRegistrationMethodIF2IF2_Pointer & operator=(itkMultiResolutionImageRegistrationMethodIF2IF2 * r);
     itkMultiResolutionImageRegistrationMethodIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiResolutionImageRegistrationMethodIF3IF3 : public itkProcessObject {
   public:
     static itkMultiResolutionImageRegistrationMethodIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void StartRegistration();
     void StopRegistration();
     virtual void SetFixedImage(itkImageF3 const * _arg);
     virtual itkImageF3 const * GetFixedImage() const;
     virtual void SetMovingImage(itkImageF3 const * _arg);
     virtual itkImageF3 const * GetMovingImage() const;
     virtual void SetOptimizer(itkSingleValuedNonLinearOptimizer * _arg);
     virtual itkSingleValuedNonLinearOptimizer * GetOptimizer();
     virtual void SetMetric(itkImageToImageMetricIF3IF3 * _arg);
     virtual itkImageToImageMetricIF3IF3 * GetMetric();
     virtual void SetFixedImageRegion(itkImageRegion3 const _arg);
     virtual itkImageRegion3 const & GetFixedImageRegion() const;
     virtual void SetTransform(itkTransformD33 * _arg);
     virtual itkTransformD33 * GetTransform();
     virtual void SetInterpolator(itkInterpolateImageFunctionIF3D * _arg);
     virtual itkInterpolateImageFunctionIF3D * GetInterpolator();
     virtual void SetFixedImagePyramid(itkMultiResolutionPyramidImageFilterIF3IF3 * _arg);
     virtual itkMultiResolutionPyramidImageFilterIF3IF3 * GetFixedImagePyramid();
     virtual void SetMovingImagePyramid(itkMultiResolutionPyramidImageFilterIF3IF3 * _arg);
     virtual itkMultiResolutionPyramidImageFilterIF3IF3 * GetMovingImagePyramid();
     void SetSchedules(itkArray2DUI const & fixedSchedule, itkArray2DUI const & movingSchedule);
     virtual itkArray2DUI GetFixedImagePyramidSchedule() const;
     virtual itkArray2DUI GetMovingImagePyramidSchedule() const;
     void SetNumberOfLevels(unsigned long numberOfLevels);
     virtual unsigned long GetNumberOfLevels() const;
     virtual unsigned long GetCurrentLevel() const;
     virtual void SetInitialTransformParameters(itkArrayD const _arg);
     virtual itkArrayD const & GetInitialTransformParameters() const;
     virtual void SetInitialTransformParametersOfNextLevel(itkArrayD const _arg);
     virtual itkArrayD const & GetInitialTransformParametersOfNextLevel() const;
     virtual itkArrayD const & GetLastTransformParameters() const;
     itkDataObjectDecoratorTD33 const * GetOutput() const;
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual unsigned long GetMTime() const;
   private:
     itkMultiResolutionImageRegistrationMethodIF3IF3(itkMultiResolutionImageRegistrationMethodIF3IF3 const & arg0);
     void operator=(itkMultiResolutionImageRegistrationMethodIF3IF3 const & arg0);
   protected:
     itkMultiResolutionImageRegistrationMethodIF3IF3();
     ~itkMultiResolutionImageRegistrationMethodIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     void Initialize();
     void PreparePyramids();
     virtual void SetCurrentLevel(unsigned long const _arg);
 };


 class itkMultiResolutionImageRegistrationMethodIF3IF3_Pointer {
   public:
     itkMultiResolutionImageRegistrationMethodIF3IF3_Pointer();
     itkMultiResolutionImageRegistrationMethodIF3IF3_Pointer(itkMultiResolutionImageRegistrationMethodIF3IF3_Pointer const & p);
     itkMultiResolutionImageRegistrationMethodIF3IF3_Pointer(itkMultiResolutionImageRegistrationMethodIF3IF3 * p);
     ~itkMultiResolutionImageRegistrationMethodIF3IF3_Pointer();
     itkMultiResolutionImageRegistrationMethodIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiResolutionImageRegistrationMethodIF3IF3 * GetPointer() const;
     bool operator<(itkMultiResolutionImageRegistrationMethodIF3IF3_Pointer const & r) const;
     bool operator>(itkMultiResolutionImageRegistrationMethodIF3IF3_Pointer const & r) const;
     bool operator<=(itkMultiResolutionImageRegistrationMethodIF3IF3_Pointer const & r) const;
     bool operator>=(itkMultiResolutionImageRegistrationMethodIF3IF3_Pointer const & r) const;
     itkMultiResolutionImageRegistrationMethodIF3IF3_Pointer & operator=(itkMultiResolutionImageRegistrationMethodIF3IF3_Pointer const & r);
     itkMultiResolutionImageRegistrationMethodIF3IF3_Pointer & operator=(itkMultiResolutionImageRegistrationMethodIF3IF3 * r);
     itkMultiResolutionImageRegistrationMethodIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiResolutionImageRegistrationMethodIUC2IUC2 : public itkProcessObject {
   public:
     static itkMultiResolutionImageRegistrationMethodIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void StartRegistration();
     void StopRegistration();
     virtual void SetFixedImage(itkImageUC2 const * _arg);
     virtual itkImageUC2 const * GetFixedImage() const;
     virtual void SetMovingImage(itkImageUC2 const * _arg);
     virtual itkImageUC2 const * GetMovingImage() const;
     virtual void SetOptimizer(itkSingleValuedNonLinearOptimizer * _arg);
     virtual itkSingleValuedNonLinearOptimizer * GetOptimizer();
     virtual void SetMetric(itkImageToImageMetricIUC2IUC2 * _arg);
     virtual itkImageToImageMetricIUC2IUC2 * GetMetric();
     virtual void SetFixedImageRegion(itkImageRegion2 const _arg);
     virtual itkImageRegion2 const & GetFixedImageRegion() const;
     virtual void SetTransform(itkTransformD22 * _arg);
     virtual itkTransformD22 * GetTransform();
     virtual void SetInterpolator(itkInterpolateImageFunctionIUC2D * _arg);
     virtual itkInterpolateImageFunctionIUC2D * GetInterpolator();
     virtual void SetFixedImagePyramid(itkMultiResolutionPyramidImageFilterIUC2IUC2 * _arg);
     virtual itkMultiResolutionPyramidImageFilterIUC2IUC2 * GetFixedImagePyramid();
     virtual void SetMovingImagePyramid(itkMultiResolutionPyramidImageFilterIUC2IUC2 * _arg);
     virtual itkMultiResolutionPyramidImageFilterIUC2IUC2 * GetMovingImagePyramid();
     void SetSchedules(itkArray2DUI const & fixedSchedule, itkArray2DUI const & movingSchedule);
     virtual itkArray2DUI GetFixedImagePyramidSchedule() const;
     virtual itkArray2DUI GetMovingImagePyramidSchedule() const;
     void SetNumberOfLevels(unsigned long numberOfLevels);
     virtual unsigned long GetNumberOfLevels() const;
     virtual unsigned long GetCurrentLevel() const;
     virtual void SetInitialTransformParameters(itkArrayD const _arg);
     virtual itkArrayD const & GetInitialTransformParameters() const;
     virtual void SetInitialTransformParametersOfNextLevel(itkArrayD const _arg);
     virtual itkArrayD const & GetInitialTransformParametersOfNextLevel() const;
     virtual itkArrayD const & GetLastTransformParameters() const;
     itkDataObjectDecoratorTD22 const * GetOutput() const;
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual unsigned long GetMTime() const;
   private:
     itkMultiResolutionImageRegistrationMethodIUC2IUC2(itkMultiResolutionImageRegistrationMethodIUC2IUC2 const & arg0);
     void operator=(itkMultiResolutionImageRegistrationMethodIUC2IUC2 const & arg0);
   protected:
     itkMultiResolutionImageRegistrationMethodIUC2IUC2();
     ~itkMultiResolutionImageRegistrationMethodIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     void Initialize();
     void PreparePyramids();
     virtual void SetCurrentLevel(unsigned long const _arg);
 };


 class itkMultiResolutionImageRegistrationMethodIUC2IUC2_Pointer {
   public:
     itkMultiResolutionImageRegistrationMethodIUC2IUC2_Pointer();
     itkMultiResolutionImageRegistrationMethodIUC2IUC2_Pointer(itkMultiResolutionImageRegistrationMethodIUC2IUC2_Pointer const & p);
     itkMultiResolutionImageRegistrationMethodIUC2IUC2_Pointer(itkMultiResolutionImageRegistrationMethodIUC2IUC2 * p);
     ~itkMultiResolutionImageRegistrationMethodIUC2IUC2_Pointer();
     itkMultiResolutionImageRegistrationMethodIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiResolutionImageRegistrationMethodIUC2IUC2 * GetPointer() const;
     bool operator<(itkMultiResolutionImageRegistrationMethodIUC2IUC2_Pointer const & r) const;
     bool operator>(itkMultiResolutionImageRegistrationMethodIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkMultiResolutionImageRegistrationMethodIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkMultiResolutionImageRegistrationMethodIUC2IUC2_Pointer const & r) const;
     itkMultiResolutionImageRegistrationMethodIUC2IUC2_Pointer & operator=(itkMultiResolutionImageRegistrationMethodIUC2IUC2_Pointer const & r);
     itkMultiResolutionImageRegistrationMethodIUC2IUC2_Pointer & operator=(itkMultiResolutionImageRegistrationMethodIUC2IUC2 * r);
     itkMultiResolutionImageRegistrationMethodIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiResolutionImageRegistrationMethodIUC3IUC3 : public itkProcessObject {
   public:
     static itkMultiResolutionImageRegistrationMethodIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void StartRegistration();
     void StopRegistration();
     virtual void SetFixedImage(itkImageUC3 const * _arg);
     virtual itkImageUC3 const * GetFixedImage() const;
     virtual void SetMovingImage(itkImageUC3 const * _arg);
     virtual itkImageUC3 const * GetMovingImage() const;
     virtual void SetOptimizer(itkSingleValuedNonLinearOptimizer * _arg);
     virtual itkSingleValuedNonLinearOptimizer * GetOptimizer();
     virtual void SetMetric(itkImageToImageMetricIUC3IUC3 * _arg);
     virtual itkImageToImageMetricIUC3IUC3 * GetMetric();
     virtual void SetFixedImageRegion(itkImageRegion3 const _arg);
     virtual itkImageRegion3 const & GetFixedImageRegion() const;
     virtual void SetTransform(itkTransformD33 * _arg);
     virtual itkTransformD33 * GetTransform();
     virtual void SetInterpolator(itkInterpolateImageFunctionIUC3D * _arg);
     virtual itkInterpolateImageFunctionIUC3D * GetInterpolator();
     virtual void SetFixedImagePyramid(itkMultiResolutionPyramidImageFilterIUC3IUC3 * _arg);
     virtual itkMultiResolutionPyramidImageFilterIUC3IUC3 * GetFixedImagePyramid();
     virtual void SetMovingImagePyramid(itkMultiResolutionPyramidImageFilterIUC3IUC3 * _arg);
     virtual itkMultiResolutionPyramidImageFilterIUC3IUC3 * GetMovingImagePyramid();
     void SetSchedules(itkArray2DUI const & fixedSchedule, itkArray2DUI const & movingSchedule);
     virtual itkArray2DUI GetFixedImagePyramidSchedule() const;
     virtual itkArray2DUI GetMovingImagePyramidSchedule() const;
     void SetNumberOfLevels(unsigned long numberOfLevels);
     virtual unsigned long GetNumberOfLevels() const;
     virtual unsigned long GetCurrentLevel() const;
     virtual void SetInitialTransformParameters(itkArrayD const _arg);
     virtual itkArrayD const & GetInitialTransformParameters() const;
     virtual void SetInitialTransformParametersOfNextLevel(itkArrayD const _arg);
     virtual itkArrayD const & GetInitialTransformParametersOfNextLevel() const;
     virtual itkArrayD const & GetLastTransformParameters() const;
     itkDataObjectDecoratorTD33 const * GetOutput() const;
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual unsigned long GetMTime() const;
   private:
     itkMultiResolutionImageRegistrationMethodIUC3IUC3(itkMultiResolutionImageRegistrationMethodIUC3IUC3 const & arg0);
     void operator=(itkMultiResolutionImageRegistrationMethodIUC3IUC3 const & arg0);
   protected:
     itkMultiResolutionImageRegistrationMethodIUC3IUC3();
     ~itkMultiResolutionImageRegistrationMethodIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     void Initialize();
     void PreparePyramids();
     virtual void SetCurrentLevel(unsigned long const _arg);
 };


 class itkMultiResolutionImageRegistrationMethodIUC3IUC3_Pointer {
   public:
     itkMultiResolutionImageRegistrationMethodIUC3IUC3_Pointer();
     itkMultiResolutionImageRegistrationMethodIUC3IUC3_Pointer(itkMultiResolutionImageRegistrationMethodIUC3IUC3_Pointer const & p);
     itkMultiResolutionImageRegistrationMethodIUC3IUC3_Pointer(itkMultiResolutionImageRegistrationMethodIUC3IUC3 * p);
     ~itkMultiResolutionImageRegistrationMethodIUC3IUC3_Pointer();
     itkMultiResolutionImageRegistrationMethodIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiResolutionImageRegistrationMethodIUC3IUC3 * GetPointer() const;
     bool operator<(itkMultiResolutionImageRegistrationMethodIUC3IUC3_Pointer const & r) const;
     bool operator>(itkMultiResolutionImageRegistrationMethodIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkMultiResolutionImageRegistrationMethodIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkMultiResolutionImageRegistrationMethodIUC3IUC3_Pointer const & r) const;
     itkMultiResolutionImageRegistrationMethodIUC3IUC3_Pointer & operator=(itkMultiResolutionImageRegistrationMethodIUC3IUC3_Pointer const & r);
     itkMultiResolutionImageRegistrationMethodIUC3IUC3_Pointer & operator=(itkMultiResolutionImageRegistrationMethodIUC3IUC3 * r);
     itkMultiResolutionImageRegistrationMethodIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiResolutionImageRegistrationMethodIUL2IUL2 : public itkProcessObject {
   public:
     static itkMultiResolutionImageRegistrationMethodIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void StartRegistration();
     void StopRegistration();
     virtual void SetFixedImage(itkImageUL2 const * _arg);
     virtual itkImageUL2 const * GetFixedImage() const;
     virtual void SetMovingImage(itkImageUL2 const * _arg);
     virtual itkImageUL2 const * GetMovingImage() const;
     virtual void SetOptimizer(itkSingleValuedNonLinearOptimizer * _arg);
     virtual itkSingleValuedNonLinearOptimizer * GetOptimizer();
     virtual void SetMetric(itkImageToImageMetricIUL2IUL2 * _arg);
     virtual itkImageToImageMetricIUL2IUL2 * GetMetric();
     virtual void SetFixedImageRegion(itkImageRegion2 const _arg);
     virtual itkImageRegion2 const & GetFixedImageRegion() const;
     virtual void SetTransform(itkTransformD22 * _arg);
     virtual itkTransformD22 * GetTransform();
     virtual void SetInterpolator(itkInterpolateImageFunctionIUL2D * _arg);
     virtual itkInterpolateImageFunctionIUL2D * GetInterpolator();
     virtual void SetFixedImagePyramid(itkMultiResolutionPyramidImageFilterIUL2IUL2 * _arg);
     virtual itkMultiResolutionPyramidImageFilterIUL2IUL2 * GetFixedImagePyramid();
     virtual void SetMovingImagePyramid(itkMultiResolutionPyramidImageFilterIUL2IUL2 * _arg);
     virtual itkMultiResolutionPyramidImageFilterIUL2IUL2 * GetMovingImagePyramid();
     void SetSchedules(itkArray2DUI const & fixedSchedule, itkArray2DUI const & movingSchedule);
     virtual itkArray2DUI GetFixedImagePyramidSchedule() const;
     virtual itkArray2DUI GetMovingImagePyramidSchedule() const;
     void SetNumberOfLevels(unsigned long numberOfLevels);
     virtual unsigned long GetNumberOfLevels() const;
     virtual unsigned long GetCurrentLevel() const;
     virtual void SetInitialTransformParameters(itkArrayD const _arg);
     virtual itkArrayD const & GetInitialTransformParameters() const;
     virtual void SetInitialTransformParametersOfNextLevel(itkArrayD const _arg);
     virtual itkArrayD const & GetInitialTransformParametersOfNextLevel() const;
     virtual itkArrayD const & GetLastTransformParameters() const;
     itkDataObjectDecoratorTD22 const * GetOutput() const;
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual unsigned long GetMTime() const;
   private:
     itkMultiResolutionImageRegistrationMethodIUL2IUL2(itkMultiResolutionImageRegistrationMethodIUL2IUL2 const & arg0);
     void operator=(itkMultiResolutionImageRegistrationMethodIUL2IUL2 const & arg0);
   protected:
     itkMultiResolutionImageRegistrationMethodIUL2IUL2();
     ~itkMultiResolutionImageRegistrationMethodIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     void Initialize();
     void PreparePyramids();
     virtual void SetCurrentLevel(unsigned long const _arg);
 };


 class itkMultiResolutionImageRegistrationMethodIUL2IUL2_Pointer {
   public:
     itkMultiResolutionImageRegistrationMethodIUL2IUL2_Pointer();
     itkMultiResolutionImageRegistrationMethodIUL2IUL2_Pointer(itkMultiResolutionImageRegistrationMethodIUL2IUL2_Pointer const & p);
     itkMultiResolutionImageRegistrationMethodIUL2IUL2_Pointer(itkMultiResolutionImageRegistrationMethodIUL2IUL2 * p);
     ~itkMultiResolutionImageRegistrationMethodIUL2IUL2_Pointer();
     itkMultiResolutionImageRegistrationMethodIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiResolutionImageRegistrationMethodIUL2IUL2 * GetPointer() const;
     bool operator<(itkMultiResolutionImageRegistrationMethodIUL2IUL2_Pointer const & r) const;
     bool operator>(itkMultiResolutionImageRegistrationMethodIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkMultiResolutionImageRegistrationMethodIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkMultiResolutionImageRegistrationMethodIUL2IUL2_Pointer const & r) const;
     itkMultiResolutionImageRegistrationMethodIUL2IUL2_Pointer & operator=(itkMultiResolutionImageRegistrationMethodIUL2IUL2_Pointer const & r);
     itkMultiResolutionImageRegistrationMethodIUL2IUL2_Pointer & operator=(itkMultiResolutionImageRegistrationMethodIUL2IUL2 * r);
     itkMultiResolutionImageRegistrationMethodIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiResolutionImageRegistrationMethodIUL3IUL3 : public itkProcessObject {
   public:
     static itkMultiResolutionImageRegistrationMethodIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void StartRegistration();
     void StopRegistration();
     virtual void SetFixedImage(itkImageUL3 const * _arg);
     virtual itkImageUL3 const * GetFixedImage() const;
     virtual void SetMovingImage(itkImageUL3 const * _arg);
     virtual itkImageUL3 const * GetMovingImage() const;
     virtual void SetOptimizer(itkSingleValuedNonLinearOptimizer * _arg);
     virtual itkSingleValuedNonLinearOptimizer * GetOptimizer();
     virtual void SetMetric(itkImageToImageMetricIUL3IUL3 * _arg);
     virtual itkImageToImageMetricIUL3IUL3 * GetMetric();
     virtual void SetFixedImageRegion(itkImageRegion3 const _arg);
     virtual itkImageRegion3 const & GetFixedImageRegion() const;
     virtual void SetTransform(itkTransformD33 * _arg);
     virtual itkTransformD33 * GetTransform();
     virtual void SetInterpolator(itkInterpolateImageFunctionIUL3D * _arg);
     virtual itkInterpolateImageFunctionIUL3D * GetInterpolator();
     virtual void SetFixedImagePyramid(itkMultiResolutionPyramidImageFilterIUL3IUL3 * _arg);
     virtual itkMultiResolutionPyramidImageFilterIUL3IUL3 * GetFixedImagePyramid();
     virtual void SetMovingImagePyramid(itkMultiResolutionPyramidImageFilterIUL3IUL3 * _arg);
     virtual itkMultiResolutionPyramidImageFilterIUL3IUL3 * GetMovingImagePyramid();
     void SetSchedules(itkArray2DUI const & fixedSchedule, itkArray2DUI const & movingSchedule);
     virtual itkArray2DUI GetFixedImagePyramidSchedule() const;
     virtual itkArray2DUI GetMovingImagePyramidSchedule() const;
     void SetNumberOfLevels(unsigned long numberOfLevels);
     virtual unsigned long GetNumberOfLevels() const;
     virtual unsigned long GetCurrentLevel() const;
     virtual void SetInitialTransformParameters(itkArrayD const _arg);
     virtual itkArrayD const & GetInitialTransformParameters() const;
     virtual void SetInitialTransformParametersOfNextLevel(itkArrayD const _arg);
     virtual itkArrayD const & GetInitialTransformParametersOfNextLevel() const;
     virtual itkArrayD const & GetLastTransformParameters() const;
     itkDataObjectDecoratorTD33 const * GetOutput() const;
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual unsigned long GetMTime() const;
   private:
     itkMultiResolutionImageRegistrationMethodIUL3IUL3(itkMultiResolutionImageRegistrationMethodIUL3IUL3 const & arg0);
     void operator=(itkMultiResolutionImageRegistrationMethodIUL3IUL3 const & arg0);
   protected:
     itkMultiResolutionImageRegistrationMethodIUL3IUL3();
     ~itkMultiResolutionImageRegistrationMethodIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     void Initialize();
     void PreparePyramids();
     virtual void SetCurrentLevel(unsigned long const _arg);
 };


 class itkMultiResolutionImageRegistrationMethodIUL3IUL3_Pointer {
   public:
     itkMultiResolutionImageRegistrationMethodIUL3IUL3_Pointer();
     itkMultiResolutionImageRegistrationMethodIUL3IUL3_Pointer(itkMultiResolutionImageRegistrationMethodIUL3IUL3_Pointer const & p);
     itkMultiResolutionImageRegistrationMethodIUL3IUL3_Pointer(itkMultiResolutionImageRegistrationMethodIUL3IUL3 * p);
     ~itkMultiResolutionImageRegistrationMethodIUL3IUL3_Pointer();
     itkMultiResolutionImageRegistrationMethodIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiResolutionImageRegistrationMethodIUL3IUL3 * GetPointer() const;
     bool operator<(itkMultiResolutionImageRegistrationMethodIUL3IUL3_Pointer const & r) const;
     bool operator>(itkMultiResolutionImageRegistrationMethodIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkMultiResolutionImageRegistrationMethodIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkMultiResolutionImageRegistrationMethodIUL3IUL3_Pointer const & r) const;
     itkMultiResolutionImageRegistrationMethodIUL3IUL3_Pointer & operator=(itkMultiResolutionImageRegistrationMethodIUL3IUL3_Pointer const & r);
     itkMultiResolutionImageRegistrationMethodIUL3IUL3_Pointer & operator=(itkMultiResolutionImageRegistrationMethodIUL3IUL3 * r);
     itkMultiResolutionImageRegistrationMethodIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiResolutionImageRegistrationMethodIUS2IUS2 : public itkProcessObject {
   public:
     static itkMultiResolutionImageRegistrationMethodIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void StartRegistration();
     void StopRegistration();
     virtual void SetFixedImage(itkImageUS2 const * _arg);
     virtual itkImageUS2 const * GetFixedImage() const;
     virtual void SetMovingImage(itkImageUS2 const * _arg);
     virtual itkImageUS2 const * GetMovingImage() const;
     virtual void SetOptimizer(itkSingleValuedNonLinearOptimizer * _arg);
     virtual itkSingleValuedNonLinearOptimizer * GetOptimizer();
     virtual void SetMetric(itkImageToImageMetricIUS2IUS2 * _arg);
     virtual itkImageToImageMetricIUS2IUS2 * GetMetric();
     virtual void SetFixedImageRegion(itkImageRegion2 const _arg);
     virtual itkImageRegion2 const & GetFixedImageRegion() const;
     virtual void SetTransform(itkTransformD22 * _arg);
     virtual itkTransformD22 * GetTransform();
     virtual void SetInterpolator(itkInterpolateImageFunctionIUS2D * _arg);
     virtual itkInterpolateImageFunctionIUS2D * GetInterpolator();
     virtual void SetFixedImagePyramid(itkMultiResolutionPyramidImageFilterIUS2IUS2 * _arg);
     virtual itkMultiResolutionPyramidImageFilterIUS2IUS2 * GetFixedImagePyramid();
     virtual void SetMovingImagePyramid(itkMultiResolutionPyramidImageFilterIUS2IUS2 * _arg);
     virtual itkMultiResolutionPyramidImageFilterIUS2IUS2 * GetMovingImagePyramid();
     void SetSchedules(itkArray2DUI const & fixedSchedule, itkArray2DUI const & movingSchedule);
     virtual itkArray2DUI GetFixedImagePyramidSchedule() const;
     virtual itkArray2DUI GetMovingImagePyramidSchedule() const;
     void SetNumberOfLevels(unsigned long numberOfLevels);
     virtual unsigned long GetNumberOfLevels() const;
     virtual unsigned long GetCurrentLevel() const;
     virtual void SetInitialTransformParameters(itkArrayD const _arg);
     virtual itkArrayD const & GetInitialTransformParameters() const;
     virtual void SetInitialTransformParametersOfNextLevel(itkArrayD const _arg);
     virtual itkArrayD const & GetInitialTransformParametersOfNextLevel() const;
     virtual itkArrayD const & GetLastTransformParameters() const;
     itkDataObjectDecoratorTD22 const * GetOutput() const;
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual unsigned long GetMTime() const;
   private:
     itkMultiResolutionImageRegistrationMethodIUS2IUS2(itkMultiResolutionImageRegistrationMethodIUS2IUS2 const & arg0);
     void operator=(itkMultiResolutionImageRegistrationMethodIUS2IUS2 const & arg0);
   protected:
     itkMultiResolutionImageRegistrationMethodIUS2IUS2();
     ~itkMultiResolutionImageRegistrationMethodIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     void Initialize();
     void PreparePyramids();
     virtual void SetCurrentLevel(unsigned long const _arg);
 };


 class itkMultiResolutionImageRegistrationMethodIUS2IUS2_Pointer {
   public:
     itkMultiResolutionImageRegistrationMethodIUS2IUS2_Pointer();
     itkMultiResolutionImageRegistrationMethodIUS2IUS2_Pointer(itkMultiResolutionImageRegistrationMethodIUS2IUS2_Pointer const & p);
     itkMultiResolutionImageRegistrationMethodIUS2IUS2_Pointer(itkMultiResolutionImageRegistrationMethodIUS2IUS2 * p);
     ~itkMultiResolutionImageRegistrationMethodIUS2IUS2_Pointer();
     itkMultiResolutionImageRegistrationMethodIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiResolutionImageRegistrationMethodIUS2IUS2 * GetPointer() const;
     bool operator<(itkMultiResolutionImageRegistrationMethodIUS2IUS2_Pointer const & r) const;
     bool operator>(itkMultiResolutionImageRegistrationMethodIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkMultiResolutionImageRegistrationMethodIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkMultiResolutionImageRegistrationMethodIUS2IUS2_Pointer const & r) const;
     itkMultiResolutionImageRegistrationMethodIUS2IUS2_Pointer & operator=(itkMultiResolutionImageRegistrationMethodIUS2IUS2_Pointer const & r);
     itkMultiResolutionImageRegistrationMethodIUS2IUS2_Pointer & operator=(itkMultiResolutionImageRegistrationMethodIUS2IUS2 * r);
     itkMultiResolutionImageRegistrationMethodIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiResolutionImageRegistrationMethodIUS3IUS3 : public itkProcessObject {
   public:
     static itkMultiResolutionImageRegistrationMethodIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void StartRegistration();
     void StopRegistration();
     virtual void SetFixedImage(itkImageUS3 const * _arg);
     virtual itkImageUS3 const * GetFixedImage() const;
     virtual void SetMovingImage(itkImageUS3 const * _arg);
     virtual itkImageUS3 const * GetMovingImage() const;
     virtual void SetOptimizer(itkSingleValuedNonLinearOptimizer * _arg);
     virtual itkSingleValuedNonLinearOptimizer * GetOptimizer();
     virtual void SetMetric(itkImageToImageMetricIUS3IUS3 * _arg);
     virtual itkImageToImageMetricIUS3IUS3 * GetMetric();
     virtual void SetFixedImageRegion(itkImageRegion3 const _arg);
     virtual itkImageRegion3 const & GetFixedImageRegion() const;
     virtual void SetTransform(itkTransformD33 * _arg);
     virtual itkTransformD33 * GetTransform();
     virtual void SetInterpolator(itkInterpolateImageFunctionIUS3D * _arg);
     virtual itkInterpolateImageFunctionIUS3D * GetInterpolator();
     virtual void SetFixedImagePyramid(itkMultiResolutionPyramidImageFilterIUS3IUS3 * _arg);
     virtual itkMultiResolutionPyramidImageFilterIUS3IUS3 * GetFixedImagePyramid();
     virtual void SetMovingImagePyramid(itkMultiResolutionPyramidImageFilterIUS3IUS3 * _arg);
     virtual itkMultiResolutionPyramidImageFilterIUS3IUS3 * GetMovingImagePyramid();
     void SetSchedules(itkArray2DUI const & fixedSchedule, itkArray2DUI const & movingSchedule);
     virtual itkArray2DUI GetFixedImagePyramidSchedule() const;
     virtual itkArray2DUI GetMovingImagePyramidSchedule() const;
     void SetNumberOfLevels(unsigned long numberOfLevels);
     virtual unsigned long GetNumberOfLevels() const;
     virtual unsigned long GetCurrentLevel() const;
     virtual void SetInitialTransformParameters(itkArrayD const _arg);
     virtual itkArrayD const & GetInitialTransformParameters() const;
     virtual void SetInitialTransformParametersOfNextLevel(itkArrayD const _arg);
     virtual itkArrayD const & GetInitialTransformParametersOfNextLevel() const;
     virtual itkArrayD const & GetLastTransformParameters() const;
     itkDataObjectDecoratorTD33 const * GetOutput() const;
     virtual itkDataObject_Pointer MakeOutput(unsigned int idx);
     virtual unsigned long GetMTime() const;
   private:
     itkMultiResolutionImageRegistrationMethodIUS3IUS3(itkMultiResolutionImageRegistrationMethodIUS3IUS3 const & arg0);
     void operator=(itkMultiResolutionImageRegistrationMethodIUS3IUS3 const & arg0);
   protected:
     itkMultiResolutionImageRegistrationMethodIUS3IUS3();
     ~itkMultiResolutionImageRegistrationMethodIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     void Initialize();
     void PreparePyramids();
     virtual void SetCurrentLevel(unsigned long const _arg);
 };


 class itkMultiResolutionImageRegistrationMethodIUS3IUS3_Pointer {
   public:
     itkMultiResolutionImageRegistrationMethodIUS3IUS3_Pointer();
     itkMultiResolutionImageRegistrationMethodIUS3IUS3_Pointer(itkMultiResolutionImageRegistrationMethodIUS3IUS3_Pointer const & p);
     itkMultiResolutionImageRegistrationMethodIUS3IUS3_Pointer(itkMultiResolutionImageRegistrationMethodIUS3IUS3 * p);
     ~itkMultiResolutionImageRegistrationMethodIUS3IUS3_Pointer();
     itkMultiResolutionImageRegistrationMethodIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiResolutionImageRegistrationMethodIUS3IUS3 * GetPointer() const;
     bool operator<(itkMultiResolutionImageRegistrationMethodIUS3IUS3_Pointer const & r) const;
     bool operator>(itkMultiResolutionImageRegistrationMethodIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkMultiResolutionImageRegistrationMethodIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkMultiResolutionImageRegistrationMethodIUS3IUS3_Pointer const & r) const;
     itkMultiResolutionImageRegistrationMethodIUS3IUS3_Pointer & operator=(itkMultiResolutionImageRegistrationMethodIUS3IUS3_Pointer const & r);
     itkMultiResolutionImageRegistrationMethodIUS3IUS3_Pointer & operator=(itkMultiResolutionImageRegistrationMethodIUS3IUS3 * r);
     itkMultiResolutionImageRegistrationMethodIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


