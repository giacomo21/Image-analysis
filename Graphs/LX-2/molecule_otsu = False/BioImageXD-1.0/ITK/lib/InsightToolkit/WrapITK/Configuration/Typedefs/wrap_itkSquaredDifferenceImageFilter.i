// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkSquaredDifferenceImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkSquaredDifferenceImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkSquaredDifferenceImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkSquaredDifferenceImageFilterJava
#endif
#ifdef SWIGLUA
%module itkSquaredDifferenceImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkSquaredDifferenceImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkSquaredDifferenceImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkSquaredDifferenceImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkSquaredDifferenceImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkSquaredDifferenceImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkSquaredDifferenceImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkSquaredDifferenceImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkSquaredDifferenceImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkSquaredDifferenceImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkSquaredDifferenceImageFilterPython
#endif
#ifdef SWIGR
%module itkSquaredDifferenceImageFilterR
#endif
#ifdef SWIGRUBY
%module itkSquaredDifferenceImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkSquaredDifferenceImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkSquaredDifferenceImageFilterTcl
#endif
#ifdef SWIGXML
%module itkSquaredDifferenceImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "PixelMath.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImage.i
%import wrap_itkInPlaceImageFilterA.i
%import wrap_ITKRegions.i


%include itk.i
%include wrap_itkSquaredDifferenceImageFilter_ext.i


 class itkSquaredDifferenceImageFilterID2ID2ID2_Pointer {
   public:
     itkSquaredDifferenceImageFilterID2ID2ID2_Pointer();
     itkSquaredDifferenceImageFilterID2ID2ID2_Pointer(itkSquaredDifferenceImageFilterID2ID2ID2_Pointer const & p);
     itkSquaredDifferenceImageFilterID2ID2ID2_Pointer(itkSquaredDifferenceImageFilterID2ID2ID2 * p);
     ~itkSquaredDifferenceImageFilterID2ID2ID2_Pointer();
     itkSquaredDifferenceImageFilterID2ID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSquaredDifferenceImageFilterID2ID2ID2 * GetPointer() const;
     bool operator<(itkSquaredDifferenceImageFilterID2ID2ID2_Pointer const & r) const;
     bool operator>(itkSquaredDifferenceImageFilterID2ID2ID2_Pointer const & r) const;
     bool operator<=(itkSquaredDifferenceImageFilterID2ID2ID2_Pointer const & r) const;
     bool operator>=(itkSquaredDifferenceImageFilterID2ID2ID2_Pointer const & r) const;
     itkSquaredDifferenceImageFilterID2ID2ID2_Pointer & operator=(itkSquaredDifferenceImageFilterID2ID2ID2_Pointer const & r);
     itkSquaredDifferenceImageFilterID2ID2ID2_Pointer & operator=(itkSquaredDifferenceImageFilterID2ID2ID2 * r);
     itkSquaredDifferenceImageFilterID2ID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSquaredDifferenceImageFilterID2ID2ID2_Superclass : public itkInPlaceImageFilterID2ID2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkSquaredDifferenceImageFilterID2ID2ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageD2 const * image1);
     void SetInput2(itkImageD2 const * image2);
     itk::Functor::SquaredDifference2< double, double, double > & GetFunctor();
     itk::Functor::SquaredDifference2< double, double, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::SquaredDifference2< double, double, double > const & functor);
   private:
     itkSquaredDifferenceImageFilterID2ID2ID2_Superclass(itkSquaredDifferenceImageFilterID2ID2ID2_Superclass const & arg0);
     void operator=(itkSquaredDifferenceImageFilterID2ID2ID2_Superclass const & arg0);
   protected:
     itkSquaredDifferenceImageFilterID2ID2ID2_Superclass();
     ~itkSquaredDifferenceImageFilterID2ID2ID2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkSquaredDifferenceImageFilterID2ID2ID2_Superclass_Pointer {
   public:
     itkSquaredDifferenceImageFilterID2ID2ID2_Superclass_Pointer();
     itkSquaredDifferenceImageFilterID2ID2ID2_Superclass_Pointer(itkSquaredDifferenceImageFilterID2ID2ID2_Superclass_Pointer const & p);
     itkSquaredDifferenceImageFilterID2ID2ID2_Superclass_Pointer(itkSquaredDifferenceImageFilterID2ID2ID2_Superclass * p);
     ~itkSquaredDifferenceImageFilterID2ID2ID2_Superclass_Pointer();
     itkSquaredDifferenceImageFilterID2ID2ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSquaredDifferenceImageFilterID2ID2ID2_Superclass * GetPointer() const;
     bool operator<(itkSquaredDifferenceImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     bool operator>(itkSquaredDifferenceImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkSquaredDifferenceImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkSquaredDifferenceImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     itkSquaredDifferenceImageFilterID2ID2ID2_Superclass_Pointer & operator=(itkSquaredDifferenceImageFilterID2ID2ID2_Superclass_Pointer const & r);
     itkSquaredDifferenceImageFilterID2ID2ID2_Superclass_Pointer & operator=(itkSquaredDifferenceImageFilterID2ID2ID2_Superclass * r);
     itkSquaredDifferenceImageFilterID2ID2ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSquaredDifferenceImageFilterID3ID3ID3_Pointer {
   public:
     itkSquaredDifferenceImageFilterID3ID3ID3_Pointer();
     itkSquaredDifferenceImageFilterID3ID3ID3_Pointer(itkSquaredDifferenceImageFilterID3ID3ID3_Pointer const & p);
     itkSquaredDifferenceImageFilterID3ID3ID3_Pointer(itkSquaredDifferenceImageFilterID3ID3ID3 * p);
     ~itkSquaredDifferenceImageFilterID3ID3ID3_Pointer();
     itkSquaredDifferenceImageFilterID3ID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSquaredDifferenceImageFilterID3ID3ID3 * GetPointer() const;
     bool operator<(itkSquaredDifferenceImageFilterID3ID3ID3_Pointer const & r) const;
     bool operator>(itkSquaredDifferenceImageFilterID3ID3ID3_Pointer const & r) const;
     bool operator<=(itkSquaredDifferenceImageFilterID3ID3ID3_Pointer const & r) const;
     bool operator>=(itkSquaredDifferenceImageFilterID3ID3ID3_Pointer const & r) const;
     itkSquaredDifferenceImageFilterID3ID3ID3_Pointer & operator=(itkSquaredDifferenceImageFilterID3ID3ID3_Pointer const & r);
     itkSquaredDifferenceImageFilterID3ID3ID3_Pointer & operator=(itkSquaredDifferenceImageFilterID3ID3ID3 * r);
     itkSquaredDifferenceImageFilterID3ID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSquaredDifferenceImageFilterID3ID3ID3_Superclass : public itkInPlaceImageFilterID3ID3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkSquaredDifferenceImageFilterID3ID3ID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageD3 const * image1);
     void SetInput2(itkImageD3 const * image2);
     itk::Functor::SquaredDifference2< double, double, double > & GetFunctor();
     itk::Functor::SquaredDifference2< double, double, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::SquaredDifference2< double, double, double > const & functor);
   private:
     itkSquaredDifferenceImageFilterID3ID3ID3_Superclass(itkSquaredDifferenceImageFilterID3ID3ID3_Superclass const & arg0);
     void operator=(itkSquaredDifferenceImageFilterID3ID3ID3_Superclass const & arg0);
   protected:
     itkSquaredDifferenceImageFilterID3ID3ID3_Superclass();
     ~itkSquaredDifferenceImageFilterID3ID3ID3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkSquaredDifferenceImageFilterID3ID3ID3_Superclass_Pointer {
   public:
     itkSquaredDifferenceImageFilterID3ID3ID3_Superclass_Pointer();
     itkSquaredDifferenceImageFilterID3ID3ID3_Superclass_Pointer(itkSquaredDifferenceImageFilterID3ID3ID3_Superclass_Pointer const & p);
     itkSquaredDifferenceImageFilterID3ID3ID3_Superclass_Pointer(itkSquaredDifferenceImageFilterID3ID3ID3_Superclass * p);
     ~itkSquaredDifferenceImageFilterID3ID3ID3_Superclass_Pointer();
     itkSquaredDifferenceImageFilterID3ID3ID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSquaredDifferenceImageFilterID3ID3ID3_Superclass * GetPointer() const;
     bool operator<(itkSquaredDifferenceImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     bool operator>(itkSquaredDifferenceImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     bool operator<=(itkSquaredDifferenceImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     bool operator>=(itkSquaredDifferenceImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     itkSquaredDifferenceImageFilterID3ID3ID3_Superclass_Pointer & operator=(itkSquaredDifferenceImageFilterID3ID3ID3_Superclass_Pointer const & r);
     itkSquaredDifferenceImageFilterID3ID3ID3_Superclass_Pointer & operator=(itkSquaredDifferenceImageFilterID3ID3ID3_Superclass * r);
     itkSquaredDifferenceImageFilterID3ID3ID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSquaredDifferenceImageFilterIF2IF2IF2_Pointer {
   public:
     itkSquaredDifferenceImageFilterIF2IF2IF2_Pointer();
     itkSquaredDifferenceImageFilterIF2IF2IF2_Pointer(itkSquaredDifferenceImageFilterIF2IF2IF2_Pointer const & p);
     itkSquaredDifferenceImageFilterIF2IF2IF2_Pointer(itkSquaredDifferenceImageFilterIF2IF2IF2 * p);
     ~itkSquaredDifferenceImageFilterIF2IF2IF2_Pointer();
     itkSquaredDifferenceImageFilterIF2IF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSquaredDifferenceImageFilterIF2IF2IF2 * GetPointer() const;
     bool operator<(itkSquaredDifferenceImageFilterIF2IF2IF2_Pointer const & r) const;
     bool operator>(itkSquaredDifferenceImageFilterIF2IF2IF2_Pointer const & r) const;
     bool operator<=(itkSquaredDifferenceImageFilterIF2IF2IF2_Pointer const & r) const;
     bool operator>=(itkSquaredDifferenceImageFilterIF2IF2IF2_Pointer const & r) const;
     itkSquaredDifferenceImageFilterIF2IF2IF2_Pointer & operator=(itkSquaredDifferenceImageFilterIF2IF2IF2_Pointer const & r);
     itkSquaredDifferenceImageFilterIF2IF2IF2_Pointer & operator=(itkSquaredDifferenceImageFilterIF2IF2IF2 * r);
     itkSquaredDifferenceImageFilterIF2IF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSquaredDifferenceImageFilterIF2IF2IF2_Superclass : public itkInPlaceImageFilterIF2IF2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkSquaredDifferenceImageFilterIF2IF2IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageF2 const * image1);
     void SetInput2(itkImageF2 const * image2);
     itk::Functor::SquaredDifference2< float, float, float > & GetFunctor();
     itk::Functor::SquaredDifference2< float, float, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::SquaredDifference2< float, float, float > const & functor);
   private:
     itkSquaredDifferenceImageFilterIF2IF2IF2_Superclass(itkSquaredDifferenceImageFilterIF2IF2IF2_Superclass const & arg0);
     void operator=(itkSquaredDifferenceImageFilterIF2IF2IF2_Superclass const & arg0);
   protected:
     itkSquaredDifferenceImageFilterIF2IF2IF2_Superclass();
     ~itkSquaredDifferenceImageFilterIF2IF2IF2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkSquaredDifferenceImageFilterIF2IF2IF2_Superclass_Pointer {
   public:
     itkSquaredDifferenceImageFilterIF2IF2IF2_Superclass_Pointer();
     itkSquaredDifferenceImageFilterIF2IF2IF2_Superclass_Pointer(itkSquaredDifferenceImageFilterIF2IF2IF2_Superclass_Pointer const & p);
     itkSquaredDifferenceImageFilterIF2IF2IF2_Superclass_Pointer(itkSquaredDifferenceImageFilterIF2IF2IF2_Superclass * p);
     ~itkSquaredDifferenceImageFilterIF2IF2IF2_Superclass_Pointer();
     itkSquaredDifferenceImageFilterIF2IF2IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSquaredDifferenceImageFilterIF2IF2IF2_Superclass * GetPointer() const;
     bool operator<(itkSquaredDifferenceImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     bool operator>(itkSquaredDifferenceImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkSquaredDifferenceImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkSquaredDifferenceImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     itkSquaredDifferenceImageFilterIF2IF2IF2_Superclass_Pointer & operator=(itkSquaredDifferenceImageFilterIF2IF2IF2_Superclass_Pointer const & r);
     itkSquaredDifferenceImageFilterIF2IF2IF2_Superclass_Pointer & operator=(itkSquaredDifferenceImageFilterIF2IF2IF2_Superclass * r);
     itkSquaredDifferenceImageFilterIF2IF2IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSquaredDifferenceImageFilterIF3IF3IF3_Pointer {
   public:
     itkSquaredDifferenceImageFilterIF3IF3IF3_Pointer();
     itkSquaredDifferenceImageFilterIF3IF3IF3_Pointer(itkSquaredDifferenceImageFilterIF3IF3IF3_Pointer const & p);
     itkSquaredDifferenceImageFilterIF3IF3IF3_Pointer(itkSquaredDifferenceImageFilterIF3IF3IF3 * p);
     ~itkSquaredDifferenceImageFilterIF3IF3IF3_Pointer();
     itkSquaredDifferenceImageFilterIF3IF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSquaredDifferenceImageFilterIF3IF3IF3 * GetPointer() const;
     bool operator<(itkSquaredDifferenceImageFilterIF3IF3IF3_Pointer const & r) const;
     bool operator>(itkSquaredDifferenceImageFilterIF3IF3IF3_Pointer const & r) const;
     bool operator<=(itkSquaredDifferenceImageFilterIF3IF3IF3_Pointer const & r) const;
     bool operator>=(itkSquaredDifferenceImageFilterIF3IF3IF3_Pointer const & r) const;
     itkSquaredDifferenceImageFilterIF3IF3IF3_Pointer & operator=(itkSquaredDifferenceImageFilterIF3IF3IF3_Pointer const & r);
     itkSquaredDifferenceImageFilterIF3IF3IF3_Pointer & operator=(itkSquaredDifferenceImageFilterIF3IF3IF3 * r);
     itkSquaredDifferenceImageFilterIF3IF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSquaredDifferenceImageFilterIF3IF3IF3_Superclass : public itkInPlaceImageFilterIF3IF3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkSquaredDifferenceImageFilterIF3IF3IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageF3 const * image1);
     void SetInput2(itkImageF3 const * image2);
     itk::Functor::SquaredDifference2< float, float, float > & GetFunctor();
     itk::Functor::SquaredDifference2< float, float, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::SquaredDifference2< float, float, float > const & functor);
   private:
     itkSquaredDifferenceImageFilterIF3IF3IF3_Superclass(itkSquaredDifferenceImageFilterIF3IF3IF3_Superclass const & arg0);
     void operator=(itkSquaredDifferenceImageFilterIF3IF3IF3_Superclass const & arg0);
   protected:
     itkSquaredDifferenceImageFilterIF3IF3IF3_Superclass();
     ~itkSquaredDifferenceImageFilterIF3IF3IF3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkSquaredDifferenceImageFilterIF3IF3IF3_Superclass_Pointer {
   public:
     itkSquaredDifferenceImageFilterIF3IF3IF3_Superclass_Pointer();
     itkSquaredDifferenceImageFilterIF3IF3IF3_Superclass_Pointer(itkSquaredDifferenceImageFilterIF3IF3IF3_Superclass_Pointer const & p);
     itkSquaredDifferenceImageFilterIF3IF3IF3_Superclass_Pointer(itkSquaredDifferenceImageFilterIF3IF3IF3_Superclass * p);
     ~itkSquaredDifferenceImageFilterIF3IF3IF3_Superclass_Pointer();
     itkSquaredDifferenceImageFilterIF3IF3IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSquaredDifferenceImageFilterIF3IF3IF3_Superclass * GetPointer() const;
     bool operator<(itkSquaredDifferenceImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     bool operator>(itkSquaredDifferenceImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkSquaredDifferenceImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkSquaredDifferenceImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     itkSquaredDifferenceImageFilterIF3IF3IF3_Superclass_Pointer & operator=(itkSquaredDifferenceImageFilterIF3IF3IF3_Superclass_Pointer const & r);
     itkSquaredDifferenceImageFilterIF3IF3IF3_Superclass_Pointer & operator=(itkSquaredDifferenceImageFilterIF3IF3IF3_Superclass * r);
     itkSquaredDifferenceImageFilterIF3IF3IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Pointer {
   public:
     itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Pointer();
     itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Pointer(itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Pointer const & p);
     itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Pointer(itkSquaredDifferenceImageFilterIUC2IUC2IUC2 * p);
     ~itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Pointer();
     itkSquaredDifferenceImageFilterIUC2IUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSquaredDifferenceImageFilterIUC2IUC2IUC2 * GetPointer() const;
     bool operator<(itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator>(itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator<=(itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator>=(itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Pointer & operator=(itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Pointer const & r);
     itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Pointer & operator=(itkSquaredDifferenceImageFilterIUC2IUC2IUC2 * r);
     itkSquaredDifferenceImageFilterIUC2IUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Superclass : public itkInPlaceImageFilterIUC2IUC2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUC2 const * image1);
     void SetInput2(itkImageUC2 const * image2);
     itk::Functor::SquaredDifference2< unsigned char, unsigned char, unsigned char > & GetFunctor();
     itk::Functor::SquaredDifference2< unsigned char, unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::SquaredDifference2< unsigned char, unsigned char, unsigned char > const & functor);
   private:
     itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Superclass(itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Superclass const & arg0);
     void operator=(itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Superclass const & arg0);
   protected:
     itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Superclass();
     ~itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Superclass_Pointer {
   public:
     itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Superclass_Pointer();
     itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Superclass_Pointer(itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Superclass_Pointer const & p);
     itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Superclass_Pointer(itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Superclass * p);
     ~itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Superclass_Pointer();
     itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Superclass * GetPointer() const;
     bool operator<(itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Superclass_Pointer & operator=(itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r);
     itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Superclass_Pointer & operator=(itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Superclass * r);
     itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Pointer {
   public:
     itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Pointer();
     itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Pointer(itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Pointer const & p);
     itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Pointer(itkSquaredDifferenceImageFilterIUC3IUC3IUC3 * p);
     ~itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Pointer();
     itkSquaredDifferenceImageFilterIUC3IUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSquaredDifferenceImageFilterIUC3IUC3IUC3 * GetPointer() const;
     bool operator<(itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     bool operator>(itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     bool operator<=(itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     bool operator>=(itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Pointer & operator=(itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Pointer const & r);
     itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Pointer & operator=(itkSquaredDifferenceImageFilterIUC3IUC3IUC3 * r);
     itkSquaredDifferenceImageFilterIUC3IUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Superclass : public itkInPlaceImageFilterIUC3IUC3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUC3 const * image1);
     void SetInput2(itkImageUC3 const * image2);
     itk::Functor::SquaredDifference2< unsigned char, unsigned char, unsigned char > & GetFunctor();
     itk::Functor::SquaredDifference2< unsigned char, unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::SquaredDifference2< unsigned char, unsigned char, unsigned char > const & functor);
   private:
     itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Superclass(itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Superclass const & arg0);
     void operator=(itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Superclass const & arg0);
   protected:
     itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Superclass();
     ~itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Superclass_Pointer {
   public:
     itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Superclass_Pointer();
     itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Superclass_Pointer(itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Superclass_Pointer const & p);
     itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Superclass_Pointer(itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Superclass * p);
     ~itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Superclass_Pointer();
     itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Superclass * GetPointer() const;
     bool operator<(itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>(itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     bool operator<=(itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>=(itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Superclass_Pointer & operator=(itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r);
     itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Superclass_Pointer & operator=(itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Superclass * r);
     itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Pointer {
   public:
     itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Pointer();
     itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Pointer(itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Pointer const & p);
     itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Pointer(itkSquaredDifferenceImageFilterIUL2IUL2IUL2 * p);
     ~itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Pointer();
     itkSquaredDifferenceImageFilterIUL2IUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSquaredDifferenceImageFilterIUL2IUL2IUL2 * GetPointer() const;
     bool operator<(itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator>(itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator<=(itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator>=(itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Pointer & operator=(itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Pointer const & r);
     itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Pointer & operator=(itkSquaredDifferenceImageFilterIUL2IUL2IUL2 * r);
     itkSquaredDifferenceImageFilterIUL2IUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Superclass : public itkInPlaceImageFilterIUL2IUL2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUL2 const * image1);
     void SetInput2(itkImageUL2 const * image2);
     itk::Functor::SquaredDifference2< unsigned long, unsigned long, unsigned long > & GetFunctor();
     itk::Functor::SquaredDifference2< unsigned long, unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::SquaredDifference2< unsigned long, unsigned long, unsigned long > const & functor);
   private:
     itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Superclass(itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Superclass const & arg0);
     void operator=(itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Superclass const & arg0);
   protected:
     itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Superclass();
     ~itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Superclass_Pointer {
   public:
     itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Superclass_Pointer();
     itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Superclass_Pointer(itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Superclass_Pointer const & p);
     itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Superclass_Pointer(itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Superclass * p);
     ~itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Superclass_Pointer();
     itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Superclass * GetPointer() const;
     bool operator<(itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>(itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Superclass_Pointer & operator=(itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r);
     itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Superclass_Pointer & operator=(itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Superclass * r);
     itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Pointer {
   public:
     itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Pointer();
     itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Pointer(itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Pointer const & p);
     itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Pointer(itkSquaredDifferenceImageFilterIUL3IUL3IUL3 * p);
     ~itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Pointer();
     itkSquaredDifferenceImageFilterIUL3IUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSquaredDifferenceImageFilterIUL3IUL3IUL3 * GetPointer() const;
     bool operator<(itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     bool operator>(itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     bool operator<=(itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     bool operator>=(itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Pointer & operator=(itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Pointer const & r);
     itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Pointer & operator=(itkSquaredDifferenceImageFilterIUL3IUL3IUL3 * r);
     itkSquaredDifferenceImageFilterIUL3IUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Superclass : public itkInPlaceImageFilterIUL3IUL3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUL3 const * image1);
     void SetInput2(itkImageUL3 const * image2);
     itk::Functor::SquaredDifference2< unsigned long, unsigned long, unsigned long > & GetFunctor();
     itk::Functor::SquaredDifference2< unsigned long, unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::SquaredDifference2< unsigned long, unsigned long, unsigned long > const & functor);
   private:
     itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Superclass(itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Superclass const & arg0);
     void operator=(itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Superclass const & arg0);
   protected:
     itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Superclass();
     ~itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Superclass_Pointer {
   public:
     itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Superclass_Pointer();
     itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Superclass_Pointer(itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Superclass_Pointer const & p);
     itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Superclass_Pointer(itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Superclass * p);
     ~itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Superclass_Pointer();
     itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Superclass * GetPointer() const;
     bool operator<(itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>(itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     bool operator<=(itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>=(itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Superclass_Pointer & operator=(itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r);
     itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Superclass_Pointer & operator=(itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Superclass * r);
     itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Pointer {
   public:
     itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Pointer();
     itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Pointer(itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Pointer const & p);
     itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Pointer(itkSquaredDifferenceImageFilterIUS2IUS2IUS2 * p);
     ~itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Pointer();
     itkSquaredDifferenceImageFilterIUS2IUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSquaredDifferenceImageFilterIUS2IUS2IUS2 * GetPointer() const;
     bool operator<(itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator>(itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator<=(itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator>=(itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Pointer & operator=(itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Pointer const & r);
     itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Pointer & operator=(itkSquaredDifferenceImageFilterIUS2IUS2IUS2 * r);
     itkSquaredDifferenceImageFilterIUS2IUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Superclass : public itkInPlaceImageFilterIUS2IUS2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUS2 const * image1);
     void SetInput2(itkImageUS2 const * image2);
     itk::Functor::SquaredDifference2< unsigned short, unsigned short, unsigned short > & GetFunctor();
     itk::Functor::SquaredDifference2< unsigned short, unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::SquaredDifference2< unsigned short, unsigned short, unsigned short > const & functor);
   private:
     itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Superclass(itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Superclass const & arg0);
     void operator=(itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Superclass const & arg0);
   protected:
     itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Superclass();
     ~itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Superclass_Pointer {
   public:
     itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Superclass_Pointer();
     itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Superclass_Pointer(itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Superclass_Pointer const & p);
     itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Superclass_Pointer(itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Superclass * p);
     ~itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Superclass_Pointer();
     itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Superclass * GetPointer() const;
     bool operator<(itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Superclass_Pointer & operator=(itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r);
     itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Superclass_Pointer & operator=(itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Superclass * r);
     itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Pointer {
   public:
     itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Pointer();
     itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Pointer(itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Pointer const & p);
     itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Pointer(itkSquaredDifferenceImageFilterIUS3IUS3IUS3 * p);
     ~itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Pointer();
     itkSquaredDifferenceImageFilterIUS3IUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSquaredDifferenceImageFilterIUS3IUS3IUS3 * GetPointer() const;
     bool operator<(itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     bool operator>(itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     bool operator<=(itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     bool operator>=(itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Pointer & operator=(itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Pointer const & r);
     itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Pointer & operator=(itkSquaredDifferenceImageFilterIUS3IUS3IUS3 * r);
     itkSquaredDifferenceImageFilterIUS3IUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Superclass : public itkInPlaceImageFilterIUS3IUS3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUS3 const * image1);
     void SetInput2(itkImageUS3 const * image2);
     itk::Functor::SquaredDifference2< unsigned short, unsigned short, unsigned short > & GetFunctor();
     itk::Functor::SquaredDifference2< unsigned short, unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::SquaredDifference2< unsigned short, unsigned short, unsigned short > const & functor);
   private:
     itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Superclass(itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Superclass const & arg0);
     void operator=(itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Superclass const & arg0);
   protected:
     itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Superclass();
     ~itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Superclass_Pointer {
   public:
     itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Superclass_Pointer();
     itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Superclass_Pointer(itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Superclass_Pointer const & p);
     itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Superclass_Pointer(itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Superclass * p);
     ~itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Superclass_Pointer();
     itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Superclass * GetPointer() const;
     bool operator<(itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>(itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Superclass_Pointer & operator=(itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r);
     itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Superclass_Pointer & operator=(itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Superclass * r);
     itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSquaredDifferenceImageFilterID2ID2ID2 : public itkSquaredDifferenceImageFilterID2ID2ID2_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkSquaredDifferenceImageFilterID2ID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkSquaredDifferenceImageFilterID2ID2ID2(itkSquaredDifferenceImageFilterID2ID2ID2 const & arg0);
     void operator=(itkSquaredDifferenceImageFilterID2ID2ID2 const & arg0);
   protected:
     itkSquaredDifferenceImageFilterID2ID2ID2();
     ~itkSquaredDifferenceImageFilterID2ID2ID2();
 };


 class itkSquaredDifferenceImageFilterID3ID3ID3 : public itkSquaredDifferenceImageFilterID3ID3ID3_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkSquaredDifferenceImageFilterID3ID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkSquaredDifferenceImageFilterID3ID3ID3(itkSquaredDifferenceImageFilterID3ID3ID3 const & arg0);
     void operator=(itkSquaredDifferenceImageFilterID3ID3ID3 const & arg0);
   protected:
     itkSquaredDifferenceImageFilterID3ID3ID3();
     ~itkSquaredDifferenceImageFilterID3ID3ID3();
 };


 class itkSquaredDifferenceImageFilterIF2IF2IF2 : public itkSquaredDifferenceImageFilterIF2IF2IF2_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkSquaredDifferenceImageFilterIF2IF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkSquaredDifferenceImageFilterIF2IF2IF2(itkSquaredDifferenceImageFilterIF2IF2IF2 const & arg0);
     void operator=(itkSquaredDifferenceImageFilterIF2IF2IF2 const & arg0);
   protected:
     itkSquaredDifferenceImageFilterIF2IF2IF2();
     ~itkSquaredDifferenceImageFilterIF2IF2IF2();
 };


 class itkSquaredDifferenceImageFilterIF3IF3IF3 : public itkSquaredDifferenceImageFilterIF3IF3IF3_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkSquaredDifferenceImageFilterIF3IF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkSquaredDifferenceImageFilterIF3IF3IF3(itkSquaredDifferenceImageFilterIF3IF3IF3 const & arg0);
     void operator=(itkSquaredDifferenceImageFilterIF3IF3IF3 const & arg0);
   protected:
     itkSquaredDifferenceImageFilterIF3IF3IF3();
     ~itkSquaredDifferenceImageFilterIF3IF3IF3();
 };


 class itkSquaredDifferenceImageFilterIUC2IUC2IUC2 : public itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkSquaredDifferenceImageFilterIUC2IUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkSquaredDifferenceImageFilterIUC2IUC2IUC2(itkSquaredDifferenceImageFilterIUC2IUC2IUC2 const & arg0);
     void operator=(itkSquaredDifferenceImageFilterIUC2IUC2IUC2 const & arg0);
   protected:
     itkSquaredDifferenceImageFilterIUC2IUC2IUC2();
     ~itkSquaredDifferenceImageFilterIUC2IUC2IUC2();
 };


 class itkSquaredDifferenceImageFilterIUC3IUC3IUC3 : public itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkSquaredDifferenceImageFilterIUC3IUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkSquaredDifferenceImageFilterIUC3IUC3IUC3(itkSquaredDifferenceImageFilterIUC3IUC3IUC3 const & arg0);
     void operator=(itkSquaredDifferenceImageFilterIUC3IUC3IUC3 const & arg0);
   protected:
     itkSquaredDifferenceImageFilterIUC3IUC3IUC3();
     ~itkSquaredDifferenceImageFilterIUC3IUC3IUC3();
 };


 class itkSquaredDifferenceImageFilterIUL2IUL2IUL2 : public itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkSquaredDifferenceImageFilterIUL2IUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkSquaredDifferenceImageFilterIUL2IUL2IUL2(itkSquaredDifferenceImageFilterIUL2IUL2IUL2 const & arg0);
     void operator=(itkSquaredDifferenceImageFilterIUL2IUL2IUL2 const & arg0);
   protected:
     itkSquaredDifferenceImageFilterIUL2IUL2IUL2();
     ~itkSquaredDifferenceImageFilterIUL2IUL2IUL2();
 };


 class itkSquaredDifferenceImageFilterIUL3IUL3IUL3 : public itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkSquaredDifferenceImageFilterIUL3IUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkSquaredDifferenceImageFilterIUL3IUL3IUL3(itkSquaredDifferenceImageFilterIUL3IUL3IUL3 const & arg0);
     void operator=(itkSquaredDifferenceImageFilterIUL3IUL3IUL3 const & arg0);
   protected:
     itkSquaredDifferenceImageFilterIUL3IUL3IUL3();
     ~itkSquaredDifferenceImageFilterIUL3IUL3IUL3();
 };


 class itkSquaredDifferenceImageFilterIUS2IUS2IUS2 : public itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkSquaredDifferenceImageFilterIUS2IUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkSquaredDifferenceImageFilterIUS2IUS2IUS2(itkSquaredDifferenceImageFilterIUS2IUS2IUS2 const & arg0);
     void operator=(itkSquaredDifferenceImageFilterIUS2IUS2IUS2 const & arg0);
   protected:
     itkSquaredDifferenceImageFilterIUS2IUS2IUS2();
     ~itkSquaredDifferenceImageFilterIUS2IUS2IUS2();
 };


 class itkSquaredDifferenceImageFilterIUS3IUS3IUS3 : public itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkSquaredDifferenceImageFilterIUS3IUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkSquaredDifferenceImageFilterIUS3IUS3IUS3(itkSquaredDifferenceImageFilterIUS3IUS3IUS3 const & arg0);
     void operator=(itkSquaredDifferenceImageFilterIUS3IUS3IUS3 const & arg0);
   protected:
     itkSquaredDifferenceImageFilterIUS3IUS3IUS3();
     ~itkSquaredDifferenceImageFilterIUS3IUS3IUS3();
 };


