# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkNotImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkNotImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkNotImageFilterPython
            return _itkNotImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkNotImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkNotImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkNotImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterAPython
def itkNotImageFilterID3ID3_New():
  return itkNotImageFilterID3ID3.New()

def itkNotImageFilterID3ID3_Superclass_New():
  return itkNotImageFilterID3ID3_Superclass.New()

def itkNotImageFilterID2ID2_New():
  return itkNotImageFilterID2ID2.New()

def itkNotImageFilterID2ID2_Superclass_New():
  return itkNotImageFilterID2ID2_Superclass.New()

def itkNotImageFilterIF3IF3_New():
  return itkNotImageFilterIF3IF3.New()

def itkNotImageFilterIF3IF3_Superclass_New():
  return itkNotImageFilterIF3IF3_Superclass.New()

def itkNotImageFilterIF2IF2_New():
  return itkNotImageFilterIF2IF2.New()

def itkNotImageFilterIF2IF2_Superclass_New():
  return itkNotImageFilterIF2IF2_Superclass.New()

def itkNotImageFilterIUS3IUS3_New():
  return itkNotImageFilterIUS3IUS3.New()

def itkNotImageFilterIUS3IUS3_Superclass_New():
  return itkNotImageFilterIUS3IUS3_Superclass.New()

def itkNotImageFilterIUS2IUS2_New():
  return itkNotImageFilterIUS2IUS2.New()

def itkNotImageFilterIUS2IUS2_Superclass_New():
  return itkNotImageFilterIUS2IUS2_Superclass.New()

def itkNotImageFilterIUL3IUL3_New():
  return itkNotImageFilterIUL3IUL3.New()

def itkNotImageFilterIUL3IUL3_Superclass_New():
  return itkNotImageFilterIUL3IUL3_Superclass.New()

def itkNotImageFilterIUL2IUL2_New():
  return itkNotImageFilterIUL2IUL2.New()

def itkNotImageFilterIUL2IUL2_Superclass_New():
  return itkNotImageFilterIUL2IUL2_Superclass.New()

def itkNotImageFilterIUC3IUC3_New():
  return itkNotImageFilterIUC3IUC3.New()

def itkNotImageFilterIUC3IUC3_Superclass_New():
  return itkNotImageFilterIUC3IUC3_Superclass.New()

def itkNotImageFilterIUC2IUC2_New():
  return itkNotImageFilterIUC2IUC2.New()

def itkNotImageFilterIUC2IUC2_Superclass_New():
  return itkNotImageFilterIUC2IUC2_Superclass.New()

class itkNotImageFilterID2ID2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    """Proxy of C++ itkNotImageFilterID2ID2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkNotImageFilterPython.itkNotImageFilterID2ID2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Functor::NOT<(double,double)>
        GetFunctor(self) -> itk::Functor::NOT<(double,double)>
        """
        return _itkNotImageFilterPython.itkNotImageFilterID2ID2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Functor::NOT<(double,double)> functor)"""
        return _itkNotImageFilterPython.itkNotImageFilterID2ID2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterID2ID2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkNotImageFilterID2ID2_Superclass"""
        return _itkNotImageFilterPython.itkNotImageFilterID2ID2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNotImageFilterID2ID2_Superclass"""
        return _itkNotImageFilterPython.itkNotImageFilterID2ID2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterID2ID2_Superclass
        
        Create a new object of the class itkNotImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNotImageFilterID2ID2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNotImageFilterID2ID2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterID2ID2_Superclass.GetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterID2ID2_Superclass_GetFunctor,None,itkNotImageFilterID2ID2_Superclass)
itkNotImageFilterID2ID2_Superclass.SetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterID2ID2_Superclass_SetFunctor,None,itkNotImageFilterID2ID2_Superclass)
itkNotImageFilterID2ID2_Superclass.GetPointer = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterID2ID2_Superclass_GetPointer,None,itkNotImageFilterID2ID2_Superclass)
itkNotImageFilterID2ID2_Superclass_swigregister = _itkNotImageFilterPython.itkNotImageFilterID2ID2_Superclass_swigregister
itkNotImageFilterID2ID2_Superclass_swigregister(itkNotImageFilterID2ID2_Superclass)

def itkNotImageFilterID2ID2_Superclass___New_orig__():
  """itkNotImageFilterID2ID2_Superclass___New_orig__()"""
  return _itkNotImageFilterPython.itkNotImageFilterID2ID2_Superclass___New_orig__()

def itkNotImageFilterID2ID2_Superclass_cast(*args):
  """itkNotImageFilterID2ID2_Superclass_cast(itkLightObject obj) -> itkNotImageFilterID2ID2_Superclass"""
  return _itkNotImageFilterPython.itkNotImageFilterID2ID2_Superclass_cast(*args)

class itkNotImageFilterID3ID3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    """Proxy of C++ itkNotImageFilterID3ID3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkNotImageFilterPython.itkNotImageFilterID3ID3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Functor::NOT<(double,double)>
        GetFunctor(self) -> itk::Functor::NOT<(double,double)>
        """
        return _itkNotImageFilterPython.itkNotImageFilterID3ID3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Functor::NOT<(double,double)> functor)"""
        return _itkNotImageFilterPython.itkNotImageFilterID3ID3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterID3ID3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkNotImageFilterID3ID3_Superclass"""
        return _itkNotImageFilterPython.itkNotImageFilterID3ID3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNotImageFilterID3ID3_Superclass"""
        return _itkNotImageFilterPython.itkNotImageFilterID3ID3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterID3ID3_Superclass
        
        Create a new object of the class itkNotImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNotImageFilterID3ID3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNotImageFilterID3ID3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterID3ID3_Superclass.GetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterID3ID3_Superclass_GetFunctor,None,itkNotImageFilterID3ID3_Superclass)
itkNotImageFilterID3ID3_Superclass.SetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterID3ID3_Superclass_SetFunctor,None,itkNotImageFilterID3ID3_Superclass)
itkNotImageFilterID3ID3_Superclass.GetPointer = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterID3ID3_Superclass_GetPointer,None,itkNotImageFilterID3ID3_Superclass)
itkNotImageFilterID3ID3_Superclass_swigregister = _itkNotImageFilterPython.itkNotImageFilterID3ID3_Superclass_swigregister
itkNotImageFilterID3ID3_Superclass_swigregister(itkNotImageFilterID3ID3_Superclass)

def itkNotImageFilterID3ID3_Superclass___New_orig__():
  """itkNotImageFilterID3ID3_Superclass___New_orig__()"""
  return _itkNotImageFilterPython.itkNotImageFilterID3ID3_Superclass___New_orig__()

def itkNotImageFilterID3ID3_Superclass_cast(*args):
  """itkNotImageFilterID3ID3_Superclass_cast(itkLightObject obj) -> itkNotImageFilterID3ID3_Superclass"""
  return _itkNotImageFilterPython.itkNotImageFilterID3ID3_Superclass_cast(*args)

class itkNotImageFilterIF2IF2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    """Proxy of C++ itkNotImageFilterIF2IF2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkNotImageFilterPython.itkNotImageFilterIF2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Functor::NOT<(float,float)>
        GetFunctor(self) -> itk::Functor::NOT<(float,float)>
        """
        return _itkNotImageFilterPython.itkNotImageFilterIF2IF2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Functor::NOT<(float,float)> functor)"""
        return _itkNotImageFilterPython.itkNotImageFilterIF2IF2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterIF2IF2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkNotImageFilterIF2IF2_Superclass"""
        return _itkNotImageFilterPython.itkNotImageFilterIF2IF2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNotImageFilterIF2IF2_Superclass"""
        return _itkNotImageFilterPython.itkNotImageFilterIF2IF2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterIF2IF2_Superclass
        
        Create a new object of the class itkNotImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNotImageFilterIF2IF2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNotImageFilterIF2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterIF2IF2_Superclass.GetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIF2IF2_Superclass_GetFunctor,None,itkNotImageFilterIF2IF2_Superclass)
itkNotImageFilterIF2IF2_Superclass.SetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIF2IF2_Superclass_SetFunctor,None,itkNotImageFilterIF2IF2_Superclass)
itkNotImageFilterIF2IF2_Superclass.GetPointer = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIF2IF2_Superclass_GetPointer,None,itkNotImageFilterIF2IF2_Superclass)
itkNotImageFilterIF2IF2_Superclass_swigregister = _itkNotImageFilterPython.itkNotImageFilterIF2IF2_Superclass_swigregister
itkNotImageFilterIF2IF2_Superclass_swigregister(itkNotImageFilterIF2IF2_Superclass)

def itkNotImageFilterIF2IF2_Superclass___New_orig__():
  """itkNotImageFilterIF2IF2_Superclass___New_orig__()"""
  return _itkNotImageFilterPython.itkNotImageFilterIF2IF2_Superclass___New_orig__()

def itkNotImageFilterIF2IF2_Superclass_cast(*args):
  """itkNotImageFilterIF2IF2_Superclass_cast(itkLightObject obj) -> itkNotImageFilterIF2IF2_Superclass"""
  return _itkNotImageFilterPython.itkNotImageFilterIF2IF2_Superclass_cast(*args)

class itkNotImageFilterIF3IF3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    """Proxy of C++ itkNotImageFilterIF3IF3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkNotImageFilterPython.itkNotImageFilterIF3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Functor::NOT<(float,float)>
        GetFunctor(self) -> itk::Functor::NOT<(float,float)>
        """
        return _itkNotImageFilterPython.itkNotImageFilterIF3IF3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Functor::NOT<(float,float)> functor)"""
        return _itkNotImageFilterPython.itkNotImageFilterIF3IF3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterIF3IF3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkNotImageFilterIF3IF3_Superclass"""
        return _itkNotImageFilterPython.itkNotImageFilterIF3IF3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNotImageFilterIF3IF3_Superclass"""
        return _itkNotImageFilterPython.itkNotImageFilterIF3IF3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterIF3IF3_Superclass
        
        Create a new object of the class itkNotImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNotImageFilterIF3IF3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNotImageFilterIF3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterIF3IF3_Superclass.GetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIF3IF3_Superclass_GetFunctor,None,itkNotImageFilterIF3IF3_Superclass)
itkNotImageFilterIF3IF3_Superclass.SetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIF3IF3_Superclass_SetFunctor,None,itkNotImageFilterIF3IF3_Superclass)
itkNotImageFilterIF3IF3_Superclass.GetPointer = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIF3IF3_Superclass_GetPointer,None,itkNotImageFilterIF3IF3_Superclass)
itkNotImageFilterIF3IF3_Superclass_swigregister = _itkNotImageFilterPython.itkNotImageFilterIF3IF3_Superclass_swigregister
itkNotImageFilterIF3IF3_Superclass_swigregister(itkNotImageFilterIF3IF3_Superclass)

def itkNotImageFilterIF3IF3_Superclass___New_orig__():
  """itkNotImageFilterIF3IF3_Superclass___New_orig__()"""
  return _itkNotImageFilterPython.itkNotImageFilterIF3IF3_Superclass___New_orig__()

def itkNotImageFilterIF3IF3_Superclass_cast(*args):
  """itkNotImageFilterIF3IF3_Superclass_cast(itkLightObject obj) -> itkNotImageFilterIF3IF3_Superclass"""
  return _itkNotImageFilterPython.itkNotImageFilterIF3IF3_Superclass_cast(*args)

class itkNotImageFilterIUC2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    """Proxy of C++ itkNotImageFilterIUC2IUC2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Functor::NOT<(unsigned char,unsigned char)>
        GetFunctor(self) -> itk::Functor::NOT<(unsigned char,unsigned char)>
        """
        return _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Functor::NOT<(unsigned char,unsigned char)> functor)"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterIUC2IUC2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkNotImageFilterIUC2IUC2_Superclass"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNotImageFilterIUC2IUC2_Superclass"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterIUC2IUC2_Superclass
        
        Create a new object of the class itkNotImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNotImageFilterIUC2IUC2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNotImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterIUC2IUC2_Superclass.GetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_Superclass_GetFunctor,None,itkNotImageFilterIUC2IUC2_Superclass)
itkNotImageFilterIUC2IUC2_Superclass.SetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_Superclass_SetFunctor,None,itkNotImageFilterIUC2IUC2_Superclass)
itkNotImageFilterIUC2IUC2_Superclass.GetPointer = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_Superclass_GetPointer,None,itkNotImageFilterIUC2IUC2_Superclass)
itkNotImageFilterIUC2IUC2_Superclass_swigregister = _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_Superclass_swigregister
itkNotImageFilterIUC2IUC2_Superclass_swigregister(itkNotImageFilterIUC2IUC2_Superclass)

def itkNotImageFilterIUC2IUC2_Superclass___New_orig__():
  """itkNotImageFilterIUC2IUC2_Superclass___New_orig__()"""
  return _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_Superclass___New_orig__()

def itkNotImageFilterIUC2IUC2_Superclass_cast(*args):
  """itkNotImageFilterIUC2IUC2_Superclass_cast(itkLightObject obj) -> itkNotImageFilterIUC2IUC2_Superclass"""
  return _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_Superclass_cast(*args)

class itkNotImageFilterIUC3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    """Proxy of C++ itkNotImageFilterIUC3IUC3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Functor::NOT<(unsigned char,unsigned char)>
        GetFunctor(self) -> itk::Functor::NOT<(unsigned char,unsigned char)>
        """
        return _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Functor::NOT<(unsigned char,unsigned char)> functor)"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterIUC3IUC3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkNotImageFilterIUC3IUC3_Superclass"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNotImageFilterIUC3IUC3_Superclass"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterIUC3IUC3_Superclass
        
        Create a new object of the class itkNotImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNotImageFilterIUC3IUC3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNotImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterIUC3IUC3_Superclass.GetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_Superclass_GetFunctor,None,itkNotImageFilterIUC3IUC3_Superclass)
itkNotImageFilterIUC3IUC3_Superclass.SetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_Superclass_SetFunctor,None,itkNotImageFilterIUC3IUC3_Superclass)
itkNotImageFilterIUC3IUC3_Superclass.GetPointer = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_Superclass_GetPointer,None,itkNotImageFilterIUC3IUC3_Superclass)
itkNotImageFilterIUC3IUC3_Superclass_swigregister = _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_Superclass_swigregister
itkNotImageFilterIUC3IUC3_Superclass_swigregister(itkNotImageFilterIUC3IUC3_Superclass)

def itkNotImageFilterIUC3IUC3_Superclass___New_orig__():
  """itkNotImageFilterIUC3IUC3_Superclass___New_orig__()"""
  return _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_Superclass___New_orig__()

def itkNotImageFilterIUC3IUC3_Superclass_cast(*args):
  """itkNotImageFilterIUC3IUC3_Superclass_cast(itkLightObject obj) -> itkNotImageFilterIUC3IUC3_Superclass"""
  return _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_Superclass_cast(*args)

class itkNotImageFilterIUL2IUL2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUL2):
    """Proxy of C++ itkNotImageFilterIUL2IUL2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkNotImageFilterPython.itkNotImageFilterIUL2IUL2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Functor::NOT<(unsigned long,unsigned long)>
        GetFunctor(self) -> itk::Functor::NOT<(unsigned long,unsigned long)>
        """
        return _itkNotImageFilterPython.itkNotImageFilterIUL2IUL2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Functor::NOT<(unsigned long,unsigned long)> functor)"""
        return _itkNotImageFilterPython.itkNotImageFilterIUL2IUL2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterIUL2IUL2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkNotImageFilterIUL2IUL2_Superclass"""
        return _itkNotImageFilterPython.itkNotImageFilterIUL2IUL2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNotImageFilterIUL2IUL2_Superclass"""
        return _itkNotImageFilterPython.itkNotImageFilterIUL2IUL2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterIUL2IUL2_Superclass
        
        Create a new object of the class itkNotImageFilterIUL2IUL2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNotImageFilterIUL2IUL2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNotImageFilterIUL2IUL2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterIUL2IUL2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterIUL2IUL2_Superclass.GetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUL2IUL2_Superclass_GetFunctor,None,itkNotImageFilterIUL2IUL2_Superclass)
itkNotImageFilterIUL2IUL2_Superclass.SetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUL2IUL2_Superclass_SetFunctor,None,itkNotImageFilterIUL2IUL2_Superclass)
itkNotImageFilterIUL2IUL2_Superclass.GetPointer = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUL2IUL2_Superclass_GetPointer,None,itkNotImageFilterIUL2IUL2_Superclass)
itkNotImageFilterIUL2IUL2_Superclass_swigregister = _itkNotImageFilterPython.itkNotImageFilterIUL2IUL2_Superclass_swigregister
itkNotImageFilterIUL2IUL2_Superclass_swigregister(itkNotImageFilterIUL2IUL2_Superclass)

def itkNotImageFilterIUL2IUL2_Superclass___New_orig__():
  """itkNotImageFilterIUL2IUL2_Superclass___New_orig__()"""
  return _itkNotImageFilterPython.itkNotImageFilterIUL2IUL2_Superclass___New_orig__()

def itkNotImageFilterIUL2IUL2_Superclass_cast(*args):
  """itkNotImageFilterIUL2IUL2_Superclass_cast(itkLightObject obj) -> itkNotImageFilterIUL2IUL2_Superclass"""
  return _itkNotImageFilterPython.itkNotImageFilterIUL2IUL2_Superclass_cast(*args)

class itkNotImageFilterIUL3IUL3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUL3):
    """Proxy of C++ itkNotImageFilterIUL3IUL3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkNotImageFilterPython.itkNotImageFilterIUL3IUL3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Functor::NOT<(unsigned long,unsigned long)>
        GetFunctor(self) -> itk::Functor::NOT<(unsigned long,unsigned long)>
        """
        return _itkNotImageFilterPython.itkNotImageFilterIUL3IUL3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Functor::NOT<(unsigned long,unsigned long)> functor)"""
        return _itkNotImageFilterPython.itkNotImageFilterIUL3IUL3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterIUL3IUL3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkNotImageFilterIUL3IUL3_Superclass"""
        return _itkNotImageFilterPython.itkNotImageFilterIUL3IUL3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNotImageFilterIUL3IUL3_Superclass"""
        return _itkNotImageFilterPython.itkNotImageFilterIUL3IUL3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterIUL3IUL3_Superclass
        
        Create a new object of the class itkNotImageFilterIUL3IUL3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNotImageFilterIUL3IUL3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNotImageFilterIUL3IUL3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterIUL3IUL3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterIUL3IUL3_Superclass.GetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUL3IUL3_Superclass_GetFunctor,None,itkNotImageFilterIUL3IUL3_Superclass)
itkNotImageFilterIUL3IUL3_Superclass.SetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUL3IUL3_Superclass_SetFunctor,None,itkNotImageFilterIUL3IUL3_Superclass)
itkNotImageFilterIUL3IUL3_Superclass.GetPointer = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUL3IUL3_Superclass_GetPointer,None,itkNotImageFilterIUL3IUL3_Superclass)
itkNotImageFilterIUL3IUL3_Superclass_swigregister = _itkNotImageFilterPython.itkNotImageFilterIUL3IUL3_Superclass_swigregister
itkNotImageFilterIUL3IUL3_Superclass_swigregister(itkNotImageFilterIUL3IUL3_Superclass)

def itkNotImageFilterIUL3IUL3_Superclass___New_orig__():
  """itkNotImageFilterIUL3IUL3_Superclass___New_orig__()"""
  return _itkNotImageFilterPython.itkNotImageFilterIUL3IUL3_Superclass___New_orig__()

def itkNotImageFilterIUL3IUL3_Superclass_cast(*args):
  """itkNotImageFilterIUL3IUL3_Superclass_cast(itkLightObject obj) -> itkNotImageFilterIUL3IUL3_Superclass"""
  return _itkNotImageFilterPython.itkNotImageFilterIUL3IUL3_Superclass_cast(*args)

class itkNotImageFilterIUS2IUS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    """Proxy of C++ itkNotImageFilterIUS2IUS2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Functor::NOT<(unsigned short,unsigned short)>
        GetFunctor(self) -> itk::Functor::NOT<(unsigned short,unsigned short)>
        """
        return _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Functor::NOT<(unsigned short,unsigned short)> functor)"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterIUS2IUS2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkNotImageFilterIUS2IUS2_Superclass"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNotImageFilterIUS2IUS2_Superclass"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterIUS2IUS2_Superclass
        
        Create a new object of the class itkNotImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNotImageFilterIUS2IUS2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNotImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterIUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterIUS2IUS2_Superclass.GetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_Superclass_GetFunctor,None,itkNotImageFilterIUS2IUS2_Superclass)
itkNotImageFilterIUS2IUS2_Superclass.SetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_Superclass_SetFunctor,None,itkNotImageFilterIUS2IUS2_Superclass)
itkNotImageFilterIUS2IUS2_Superclass.GetPointer = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_Superclass_GetPointer,None,itkNotImageFilterIUS2IUS2_Superclass)
itkNotImageFilterIUS2IUS2_Superclass_swigregister = _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_Superclass_swigregister
itkNotImageFilterIUS2IUS2_Superclass_swigregister(itkNotImageFilterIUS2IUS2_Superclass)

def itkNotImageFilterIUS2IUS2_Superclass___New_orig__():
  """itkNotImageFilterIUS2IUS2_Superclass___New_orig__()"""
  return _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_Superclass___New_orig__()

def itkNotImageFilterIUS2IUS2_Superclass_cast(*args):
  """itkNotImageFilterIUS2IUS2_Superclass_cast(itkLightObject obj) -> itkNotImageFilterIUS2IUS2_Superclass"""
  return _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_Superclass_cast(*args)

class itkNotImageFilterIUS3IUS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    """Proxy of C++ itkNotImageFilterIUS3IUS3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Functor::NOT<(unsigned short,unsigned short)>
        GetFunctor(self) -> itk::Functor::NOT<(unsigned short,unsigned short)>
        """
        return _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Functor::NOT<(unsigned short,unsigned short)> functor)"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterIUS3IUS3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkNotImageFilterIUS3IUS3_Superclass"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNotImageFilterIUS3IUS3_Superclass"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterIUS3IUS3_Superclass
        
        Create a new object of the class itkNotImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNotImageFilterIUS3IUS3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNotImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterIUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterIUS3IUS3_Superclass.GetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_Superclass_GetFunctor,None,itkNotImageFilterIUS3IUS3_Superclass)
itkNotImageFilterIUS3IUS3_Superclass.SetFunctor = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_Superclass_SetFunctor,None,itkNotImageFilterIUS3IUS3_Superclass)
itkNotImageFilterIUS3IUS3_Superclass.GetPointer = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_Superclass_GetPointer,None,itkNotImageFilterIUS3IUS3_Superclass)
itkNotImageFilterIUS3IUS3_Superclass_swigregister = _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_Superclass_swigregister
itkNotImageFilterIUS3IUS3_Superclass_swigregister(itkNotImageFilterIUS3IUS3_Superclass)

def itkNotImageFilterIUS3IUS3_Superclass___New_orig__():
  """itkNotImageFilterIUS3IUS3_Superclass___New_orig__()"""
  return _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_Superclass___New_orig__()

def itkNotImageFilterIUS3IUS3_Superclass_cast(*args):
  """itkNotImageFilterIUS3IUS3_Superclass_cast(itkLightObject obj) -> itkNotImageFilterIUS3IUS3_Superclass"""
  return _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_Superclass_cast(*args)

class itkNotImageFilterID2ID2(itkNotImageFilterID2ID2_Superclass):
    """Proxy of C++ itkNotImageFilterID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToOutputCheck = _itkNotImageFilterPython.itkNotImageFilterID2ID2_InputConvertibleToOutputCheck
    InputNotOperatorCheck = _itkNotImageFilterPython.itkNotImageFilterID2ID2_InputNotOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkNotImageFilterPython.itkNotImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkNotImageFilterID2ID2"""
        return _itkNotImageFilterPython.itkNotImageFilterID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNotImageFilterID2ID2"""
        return _itkNotImageFilterPython.itkNotImageFilterID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterID2ID2
        
        Create a new object of the class itkNotImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNotImageFilterID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNotImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterID2ID2.GetPointer = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterID2ID2_GetPointer,None,itkNotImageFilterID2ID2)
itkNotImageFilterID2ID2_swigregister = _itkNotImageFilterPython.itkNotImageFilterID2ID2_swigregister
itkNotImageFilterID2ID2_swigregister(itkNotImageFilterID2ID2)

def itkNotImageFilterID2ID2___New_orig__():
  """itkNotImageFilterID2ID2___New_orig__()"""
  return _itkNotImageFilterPython.itkNotImageFilterID2ID2___New_orig__()

def itkNotImageFilterID2ID2_cast(*args):
  """itkNotImageFilterID2ID2_cast(itkLightObject obj) -> itkNotImageFilterID2ID2"""
  return _itkNotImageFilterPython.itkNotImageFilterID2ID2_cast(*args)

class itkNotImageFilterID3ID3(itkNotImageFilterID3ID3_Superclass):
    """Proxy of C++ itkNotImageFilterID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToOutputCheck = _itkNotImageFilterPython.itkNotImageFilterID3ID3_InputConvertibleToOutputCheck
    InputNotOperatorCheck = _itkNotImageFilterPython.itkNotImageFilterID3ID3_InputNotOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkNotImageFilterPython.itkNotImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkNotImageFilterID3ID3"""
        return _itkNotImageFilterPython.itkNotImageFilterID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNotImageFilterID3ID3"""
        return _itkNotImageFilterPython.itkNotImageFilterID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterID3ID3
        
        Create a new object of the class itkNotImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNotImageFilterID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNotImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterID3ID3.GetPointer = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterID3ID3_GetPointer,None,itkNotImageFilterID3ID3)
itkNotImageFilterID3ID3_swigregister = _itkNotImageFilterPython.itkNotImageFilterID3ID3_swigregister
itkNotImageFilterID3ID3_swigregister(itkNotImageFilterID3ID3)

def itkNotImageFilterID3ID3___New_orig__():
  """itkNotImageFilterID3ID3___New_orig__()"""
  return _itkNotImageFilterPython.itkNotImageFilterID3ID3___New_orig__()

def itkNotImageFilterID3ID3_cast(*args):
  """itkNotImageFilterID3ID3_cast(itkLightObject obj) -> itkNotImageFilterID3ID3"""
  return _itkNotImageFilterPython.itkNotImageFilterID3ID3_cast(*args)

class itkNotImageFilterIF2IF2(itkNotImageFilterIF2IF2_Superclass):
    """Proxy of C++ itkNotImageFilterIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToOutputCheck = _itkNotImageFilterPython.itkNotImageFilterIF2IF2_InputConvertibleToOutputCheck
    InputNotOperatorCheck = _itkNotImageFilterPython.itkNotImageFilterIF2IF2_InputNotOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkNotImageFilterPython.itkNotImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkNotImageFilterIF2IF2"""
        return _itkNotImageFilterPython.itkNotImageFilterIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNotImageFilterIF2IF2"""
        return _itkNotImageFilterPython.itkNotImageFilterIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterIF2IF2
        
        Create a new object of the class itkNotImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNotImageFilterIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNotImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterIF2IF2.GetPointer = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIF2IF2_GetPointer,None,itkNotImageFilterIF2IF2)
itkNotImageFilterIF2IF2_swigregister = _itkNotImageFilterPython.itkNotImageFilterIF2IF2_swigregister
itkNotImageFilterIF2IF2_swigregister(itkNotImageFilterIF2IF2)

def itkNotImageFilterIF2IF2___New_orig__():
  """itkNotImageFilterIF2IF2___New_orig__()"""
  return _itkNotImageFilterPython.itkNotImageFilterIF2IF2___New_orig__()

def itkNotImageFilterIF2IF2_cast(*args):
  """itkNotImageFilterIF2IF2_cast(itkLightObject obj) -> itkNotImageFilterIF2IF2"""
  return _itkNotImageFilterPython.itkNotImageFilterIF2IF2_cast(*args)

class itkNotImageFilterIF3IF3(itkNotImageFilterIF3IF3_Superclass):
    """Proxy of C++ itkNotImageFilterIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToOutputCheck = _itkNotImageFilterPython.itkNotImageFilterIF3IF3_InputConvertibleToOutputCheck
    InputNotOperatorCheck = _itkNotImageFilterPython.itkNotImageFilterIF3IF3_InputNotOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkNotImageFilterPython.itkNotImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkNotImageFilterIF3IF3"""
        return _itkNotImageFilterPython.itkNotImageFilterIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNotImageFilterIF3IF3"""
        return _itkNotImageFilterPython.itkNotImageFilterIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterIF3IF3
        
        Create a new object of the class itkNotImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNotImageFilterIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNotImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterIF3IF3.GetPointer = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIF3IF3_GetPointer,None,itkNotImageFilterIF3IF3)
itkNotImageFilterIF3IF3_swigregister = _itkNotImageFilterPython.itkNotImageFilterIF3IF3_swigregister
itkNotImageFilterIF3IF3_swigregister(itkNotImageFilterIF3IF3)

def itkNotImageFilterIF3IF3___New_orig__():
  """itkNotImageFilterIF3IF3___New_orig__()"""
  return _itkNotImageFilterPython.itkNotImageFilterIF3IF3___New_orig__()

def itkNotImageFilterIF3IF3_cast(*args):
  """itkNotImageFilterIF3IF3_cast(itkLightObject obj) -> itkNotImageFilterIF3IF3"""
  return _itkNotImageFilterPython.itkNotImageFilterIF3IF3_cast(*args)

class itkNotImageFilterIUC2IUC2(itkNotImageFilterIUC2IUC2_Superclass):
    """Proxy of C++ itkNotImageFilterIUC2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToOutputCheck = _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    InputNotOperatorCheck = _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_InputNotOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterIUC2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkNotImageFilterIUC2IUC2"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNotImageFilterIUC2IUC2"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterIUC2IUC2
        
        Create a new object of the class itkNotImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNotImageFilterIUC2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNotImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_GetPointer,None,itkNotImageFilterIUC2IUC2)
itkNotImageFilterIUC2IUC2_swigregister = _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_swigregister
itkNotImageFilterIUC2IUC2_swigregister(itkNotImageFilterIUC2IUC2)

def itkNotImageFilterIUC2IUC2___New_orig__():
  """itkNotImageFilterIUC2IUC2___New_orig__()"""
  return _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2___New_orig__()

def itkNotImageFilterIUC2IUC2_cast(*args):
  """itkNotImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkNotImageFilterIUC2IUC2"""
  return _itkNotImageFilterPython.itkNotImageFilterIUC2IUC2_cast(*args)

class itkNotImageFilterIUC3IUC3(itkNotImageFilterIUC3IUC3_Superclass):
    """Proxy of C++ itkNotImageFilterIUC3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToOutputCheck = _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    InputNotOperatorCheck = _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_InputNotOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterIUC3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkNotImageFilterIUC3IUC3"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNotImageFilterIUC3IUC3"""
        return _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterIUC3IUC3
        
        Create a new object of the class itkNotImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNotImageFilterIUC3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNotImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_GetPointer,None,itkNotImageFilterIUC3IUC3)
itkNotImageFilterIUC3IUC3_swigregister = _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_swigregister
itkNotImageFilterIUC3IUC3_swigregister(itkNotImageFilterIUC3IUC3)

def itkNotImageFilterIUC3IUC3___New_orig__():
  """itkNotImageFilterIUC3IUC3___New_orig__()"""
  return _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3___New_orig__()

def itkNotImageFilterIUC3IUC3_cast(*args):
  """itkNotImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkNotImageFilterIUC3IUC3"""
  return _itkNotImageFilterPython.itkNotImageFilterIUC3IUC3_cast(*args)

class itkNotImageFilterIUL2IUL2(itkNotImageFilterIUL2IUL2_Superclass):
    """Proxy of C++ itkNotImageFilterIUL2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToOutputCheck = _itkNotImageFilterPython.itkNotImageFilterIUL2IUL2_InputConvertibleToOutputCheck
    InputNotOperatorCheck = _itkNotImageFilterPython.itkNotImageFilterIUL2IUL2_InputNotOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkNotImageFilterPython.itkNotImageFilterIUL2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterIUL2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkNotImageFilterIUL2IUL2"""
        return _itkNotImageFilterPython.itkNotImageFilterIUL2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNotImageFilterIUL2IUL2"""
        return _itkNotImageFilterPython.itkNotImageFilterIUL2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterIUL2IUL2
        
        Create a new object of the class itkNotImageFilterIUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNotImageFilterIUL2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNotImageFilterIUL2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterIUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterIUL2IUL2.GetPointer = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUL2IUL2_GetPointer,None,itkNotImageFilterIUL2IUL2)
itkNotImageFilterIUL2IUL2_swigregister = _itkNotImageFilterPython.itkNotImageFilterIUL2IUL2_swigregister
itkNotImageFilterIUL2IUL2_swigregister(itkNotImageFilterIUL2IUL2)

def itkNotImageFilterIUL2IUL2___New_orig__():
  """itkNotImageFilterIUL2IUL2___New_orig__()"""
  return _itkNotImageFilterPython.itkNotImageFilterIUL2IUL2___New_orig__()

def itkNotImageFilterIUL2IUL2_cast(*args):
  """itkNotImageFilterIUL2IUL2_cast(itkLightObject obj) -> itkNotImageFilterIUL2IUL2"""
  return _itkNotImageFilterPython.itkNotImageFilterIUL2IUL2_cast(*args)

class itkNotImageFilterIUL3IUL3(itkNotImageFilterIUL3IUL3_Superclass):
    """Proxy of C++ itkNotImageFilterIUL3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToOutputCheck = _itkNotImageFilterPython.itkNotImageFilterIUL3IUL3_InputConvertibleToOutputCheck
    InputNotOperatorCheck = _itkNotImageFilterPython.itkNotImageFilterIUL3IUL3_InputNotOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkNotImageFilterPython.itkNotImageFilterIUL3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterIUL3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkNotImageFilterIUL3IUL3"""
        return _itkNotImageFilterPython.itkNotImageFilterIUL3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNotImageFilterIUL3IUL3"""
        return _itkNotImageFilterPython.itkNotImageFilterIUL3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterIUL3IUL3
        
        Create a new object of the class itkNotImageFilterIUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNotImageFilterIUL3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNotImageFilterIUL3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterIUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterIUL3IUL3.GetPointer = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUL3IUL3_GetPointer,None,itkNotImageFilterIUL3IUL3)
itkNotImageFilterIUL3IUL3_swigregister = _itkNotImageFilterPython.itkNotImageFilterIUL3IUL3_swigregister
itkNotImageFilterIUL3IUL3_swigregister(itkNotImageFilterIUL3IUL3)

def itkNotImageFilterIUL3IUL3___New_orig__():
  """itkNotImageFilterIUL3IUL3___New_orig__()"""
  return _itkNotImageFilterPython.itkNotImageFilterIUL3IUL3___New_orig__()

def itkNotImageFilterIUL3IUL3_cast(*args):
  """itkNotImageFilterIUL3IUL3_cast(itkLightObject obj) -> itkNotImageFilterIUL3IUL3"""
  return _itkNotImageFilterPython.itkNotImageFilterIUL3IUL3_cast(*args)

class itkNotImageFilterIUS2IUS2(itkNotImageFilterIUS2IUS2_Superclass):
    """Proxy of C++ itkNotImageFilterIUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToOutputCheck = _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_InputConvertibleToOutputCheck
    InputNotOperatorCheck = _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_InputNotOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterIUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkNotImageFilterIUS2IUS2"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNotImageFilterIUS2IUS2"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterIUS2IUS2
        
        Create a new object of the class itkNotImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNotImageFilterIUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNotImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterIUS2IUS2.GetPointer = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_GetPointer,None,itkNotImageFilterIUS2IUS2)
itkNotImageFilterIUS2IUS2_swigregister = _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_swigregister
itkNotImageFilterIUS2IUS2_swigregister(itkNotImageFilterIUS2IUS2)

def itkNotImageFilterIUS2IUS2___New_orig__():
  """itkNotImageFilterIUS2IUS2___New_orig__()"""
  return _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2___New_orig__()

def itkNotImageFilterIUS2IUS2_cast(*args):
  """itkNotImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkNotImageFilterIUS2IUS2"""
  return _itkNotImageFilterPython.itkNotImageFilterIUS2IUS2_cast(*args)

class itkNotImageFilterIUS3IUS3(itkNotImageFilterIUS3IUS3_Superclass):
    """Proxy of C++ itkNotImageFilterIUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToOutputCheck = _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_InputConvertibleToOutputCheck
    InputNotOperatorCheck = _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_InputNotOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkNotImageFilterPython.delete_itkNotImageFilterIUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkNotImageFilterIUS3IUS3"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNotImageFilterIUS3IUS3"""
        return _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNotImageFilterIUS3IUS3
        
        Create a new object of the class itkNotImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNotImageFilterIUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNotImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNotImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNotImageFilterIUS3IUS3.GetPointer = new_instancemethod(_itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_GetPointer,None,itkNotImageFilterIUS3IUS3)
itkNotImageFilterIUS3IUS3_swigregister = _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_swigregister
itkNotImageFilterIUS3IUS3_swigregister(itkNotImageFilterIUS3IUS3)

def itkNotImageFilterIUS3IUS3___New_orig__():
  """itkNotImageFilterIUS3IUS3___New_orig__()"""
  return _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3___New_orig__()

def itkNotImageFilterIUS3IUS3_cast(*args):
  """itkNotImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkNotImageFilterIUS3IUS3"""
  return _itkNotImageFilterPython.itkNotImageFilterIUS3IUS3_cast(*args)



