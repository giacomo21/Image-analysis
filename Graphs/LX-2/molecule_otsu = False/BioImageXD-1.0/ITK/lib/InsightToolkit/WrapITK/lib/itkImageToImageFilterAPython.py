# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkImageToImageFilterAPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkImageToImageFilterAPython', [dirname(__file__)])
        except ImportError:
            import _itkImageToImageFilterAPython
            return _itkImageToImageFilterAPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkImageToImageFilterAPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkImageToImageFilterAPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkImageToImageFilterAPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
def itkImageToImageFilterIRGBAUS3IRGBAUS3_New():
  return itkImageToImageFilterIRGBAUS3IRGBAUS3.New()

def itkImageToImageFilterIRGBAUS2IRGBAUS2_New():
  return itkImageToImageFilterIRGBAUS2IRGBAUS2.New()

def itkImageToImageFilterIRGBAUS3IRGBAUC3_New():
  return itkImageToImageFilterIRGBAUS3IRGBAUC3.New()

def itkImageToImageFilterIRGBAUS2IRGBAUC2_New():
  return itkImageToImageFilterIRGBAUS2IRGBAUC2.New()

def itkImageToImageFilterIRGBAUC3IRGBAUS3_New():
  return itkImageToImageFilterIRGBAUC3IRGBAUS3.New()

def itkImageToImageFilterIRGBAUC2IRGBAUS2_New():
  return itkImageToImageFilterIRGBAUC2IRGBAUS2.New()

def itkImageToImageFilterIRGBAUC3IRGBAUC3_New():
  return itkImageToImageFilterIRGBAUC3IRGBAUC3.New()

def itkImageToImageFilterIRGBAUC2IRGBAUC2_New():
  return itkImageToImageFilterIRGBAUC2IRGBAUC2.New()

def itkImageToImageFilterIRGBUS3IRGBUS3_New():
  return itkImageToImageFilterIRGBUS3IRGBUS3.New()

def itkImageToImageFilterIRGBUS2IRGBUS2_New():
  return itkImageToImageFilterIRGBUS2IRGBUS2.New()

def itkImageToImageFilterIRGBUS3IRGBUC3_New():
  return itkImageToImageFilterIRGBUS3IRGBUC3.New()

def itkImageToImageFilterIRGBUS2IRGBUC2_New():
  return itkImageToImageFilterIRGBUS2IRGBUC2.New()

def itkImageToImageFilterIRGBUC3IRGBUS3_New():
  return itkImageToImageFilterIRGBUC3IRGBUS3.New()

def itkImageToImageFilterIRGBUC2IRGBUS2_New():
  return itkImageToImageFilterIRGBUC2IRGBUS2.New()

def itkImageToImageFilterIRGBUC3IRGBUC3_New():
  return itkImageToImageFilterIRGBUC3IRGBUC3.New()

def itkImageToImageFilterIRGBUC2IRGBUC2_New():
  return itkImageToImageFilterIRGBUC2IRGBUC2.New()

def itkImageToImageFilterICVF33ICVF33_New():
  return itkImageToImageFilterICVF33ICVF33.New()

def itkImageToImageFilterICVF22ICVF22_New():
  return itkImageToImageFilterICVF22ICVF22.New()

def itkImageToImageFilterICVF33IVF33_New():
  return itkImageToImageFilterICVF33IVF33.New()

def itkImageToImageFilterICVF22IVF22_New():
  return itkImageToImageFilterICVF22IVF22.New()

def itkImageToImageFilterIVF33ICVF33_New():
  return itkImageToImageFilterIVF33ICVF33.New()

def itkImageToImageFilterIVF22ICVF22_New():
  return itkImageToImageFilterIVF22ICVF22.New()

def itkImageToImageFilterIVF33IVF33_New():
  return itkImageToImageFilterIVF33IVF33.New()

def itkImageToImageFilterIVF22IVF22_New():
  return itkImageToImageFilterIVF22IVF22.New()

def itkImageToImageFilterID3ID3_New():
  return itkImageToImageFilterID3ID3.New()

def itkImageToImageFilterID2ID2_New():
  return itkImageToImageFilterID2ID2.New()

def itkImageToImageFilterID3IF3_New():
  return itkImageToImageFilterID3IF3.New()

def itkImageToImageFilterID2IF2_New():
  return itkImageToImageFilterID2IF2.New()

def itkImageToImageFilterID3IUS3_New():
  return itkImageToImageFilterID3IUS3.New()

def itkImageToImageFilterID2IUS2_New():
  return itkImageToImageFilterID2IUS2.New()

def itkImageToImageFilterID3IUL3_New():
  return itkImageToImageFilterID3IUL3.New()

def itkImageToImageFilterID2IUL2_New():
  return itkImageToImageFilterID2IUL2.New()

def itkImageToImageFilterID3IUC3_New():
  return itkImageToImageFilterID3IUC3.New()

def itkImageToImageFilterID2IUC2_New():
  return itkImageToImageFilterID2IUC2.New()

def itkImageToImageFilterIF3ID3_New():
  return itkImageToImageFilterIF3ID3.New()

def itkImageToImageFilterIF2ID2_New():
  return itkImageToImageFilterIF2ID2.New()

def itkImageToImageFilterIF3IF3_New():
  return itkImageToImageFilterIF3IF3.New()

def itkImageToImageFilterIF2IF2_New():
  return itkImageToImageFilterIF2IF2.New()

def itkImageToImageFilterIF3IUS3_New():
  return itkImageToImageFilterIF3IUS3.New()

def itkImageToImageFilterIF2IUS2_New():
  return itkImageToImageFilterIF2IUS2.New()

def itkImageToImageFilterIF3IUL3_New():
  return itkImageToImageFilterIF3IUL3.New()

def itkImageToImageFilterIF2IUL2_New():
  return itkImageToImageFilterIF2IUL2.New()

def itkImageToImageFilterIF3IUC3_New():
  return itkImageToImageFilterIF3IUC3.New()

def itkImageToImageFilterIF2IUC2_New():
  return itkImageToImageFilterIF2IUC2.New()

def itkImageToImageFilterIUS3ID3_New():
  return itkImageToImageFilterIUS3ID3.New()

def itkImageToImageFilterIUS2ID2_New():
  return itkImageToImageFilterIUS2ID2.New()

def itkImageToImageFilterIUS3IF3_New():
  return itkImageToImageFilterIUS3IF3.New()

def itkImageToImageFilterIUS2IF2_New():
  return itkImageToImageFilterIUS2IF2.New()

def itkImageToImageFilterIUS3IUS3_New():
  return itkImageToImageFilterIUS3IUS3.New()

def itkImageToImageFilterIUS2IUS2_New():
  return itkImageToImageFilterIUS2IUS2.New()

def itkImageToImageFilterIUS3IUL3_New():
  return itkImageToImageFilterIUS3IUL3.New()

def itkImageToImageFilterIUS2IUL2_New():
  return itkImageToImageFilterIUS2IUL2.New()

def itkImageToImageFilterIUS3IUC3_New():
  return itkImageToImageFilterIUS3IUC3.New()

def itkImageToImageFilterIUS2IUC2_New():
  return itkImageToImageFilterIUS2IUC2.New()

def itkImageToImageFilterIUL3ID3_New():
  return itkImageToImageFilterIUL3ID3.New()

def itkImageToImageFilterIUL2ID2_New():
  return itkImageToImageFilterIUL2ID2.New()

def itkImageToImageFilterIUL3IF3_New():
  return itkImageToImageFilterIUL3IF3.New()

def itkImageToImageFilterIUL2IF2_New():
  return itkImageToImageFilterIUL2IF2.New()

def itkImageToImageFilterIUL3IUS3_New():
  return itkImageToImageFilterIUL3IUS3.New()

def itkImageToImageFilterIUL2IUS2_New():
  return itkImageToImageFilterIUL2IUS2.New()

def itkImageToImageFilterIUL3IUL3_New():
  return itkImageToImageFilterIUL3IUL3.New()

def itkImageToImageFilterIUL2IUL2_New():
  return itkImageToImageFilterIUL2IUL2.New()

def itkImageToImageFilterIUL3IUC3_New():
  return itkImageToImageFilterIUL3IUC3.New()

def itkImageToImageFilterIUL2IUC2_New():
  return itkImageToImageFilterIUL2IUC2.New()

def itkImageToImageFilterIUC3ID3_New():
  return itkImageToImageFilterIUC3ID3.New()

def itkImageToImageFilterIUC2ID2_New():
  return itkImageToImageFilterIUC2ID2.New()

def itkImageToImageFilterIUC3IF3_New():
  return itkImageToImageFilterIUC3IF3.New()

def itkImageToImageFilterIUC2IF2_New():
  return itkImageToImageFilterIUC2IF2.New()

def itkImageToImageFilterIUC3IUS3_New():
  return itkImageToImageFilterIUC3IUS3.New()

def itkImageToImageFilterIUC2IUS2_New():
  return itkImageToImageFilterIUC2IUS2.New()

def itkImageToImageFilterIUC3IUL3_New():
  return itkImageToImageFilterIUC3IUL3.New()

def itkImageToImageFilterIUC2IUL2_New():
  return itkImageToImageFilterIUC2IUL2.New()

def itkImageToImageFilterIUC3IUC3_New():
  return itkImageToImageFilterIUC3IUC3.New()

def itkImageToImageFilterIUC2IUC2_New():
  return itkImageToImageFilterIUC2IUC2.New()

class itkImageToImageFilterICVF22ICVF22(itkImageSourcePython.itkImageSourceICVF22):
    """Proxy of C++ itkImageToImageFilterICVF22ICVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageCVF22 image)
        SetInput(self, unsigned int arg0, itkImageCVF22 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageCVF22
        GetInput(self, unsigned int idx) -> itkImageCVF22
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageCVF22 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageCVF22 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterICVF22ICVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterICVF22ICVF22"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterICVF22ICVF22"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterICVF22ICVF22
        
        Create a new object of the class itkImageToImageFilterICVF22ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterICVF22ICVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterICVF22ICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterICVF22ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterICVF22ICVF22.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_SetInput,None,itkImageToImageFilterICVF22ICVF22)
itkImageToImageFilterICVF22ICVF22.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_GetInput,None,itkImageToImageFilterICVF22ICVF22)
itkImageToImageFilterICVF22ICVF22.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_PushBackInput,None,itkImageToImageFilterICVF22ICVF22)
itkImageToImageFilterICVF22ICVF22.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_PopBackInput,None,itkImageToImageFilterICVF22ICVF22)
itkImageToImageFilterICVF22ICVF22.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_PushFrontInput,None,itkImageToImageFilterICVF22ICVF22)
itkImageToImageFilterICVF22ICVF22.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_PopFrontInput,None,itkImageToImageFilterICVF22ICVF22)
itkImageToImageFilterICVF22ICVF22.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_GetPointer,None,itkImageToImageFilterICVF22ICVF22)
itkImageToImageFilterICVF22ICVF22_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_swigregister
itkImageToImageFilterICVF22ICVF22_swigregister(itkImageToImageFilterICVF22ICVF22)

def itkImageToImageFilterICVF22ICVF22_cast(*args):
  """itkImageToImageFilterICVF22ICVF22_cast(itkLightObject obj) -> itkImageToImageFilterICVF22ICVF22"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_cast(*args)

class itkImageToImageFilterICVF22IVF22(itkImageSourcePython.itkImageSourceIVF22):
    """Proxy of C++ itkImageToImageFilterICVF22IVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageCVF22 image)
        SetInput(self, unsigned int arg0, itkImageCVF22 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageCVF22
        GetInput(self, unsigned int idx) -> itkImageCVF22
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageCVF22 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageCVF22 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterICVF22IVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterICVF22IVF22"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterICVF22IVF22"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterICVF22IVF22
        
        Create a new object of the class itkImageToImageFilterICVF22IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterICVF22IVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterICVF22IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterICVF22IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterICVF22IVF22.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_SetInput,None,itkImageToImageFilterICVF22IVF22)
itkImageToImageFilterICVF22IVF22.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_GetInput,None,itkImageToImageFilterICVF22IVF22)
itkImageToImageFilterICVF22IVF22.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_PushBackInput,None,itkImageToImageFilterICVF22IVF22)
itkImageToImageFilterICVF22IVF22.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_PopBackInput,None,itkImageToImageFilterICVF22IVF22)
itkImageToImageFilterICVF22IVF22.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_PushFrontInput,None,itkImageToImageFilterICVF22IVF22)
itkImageToImageFilterICVF22IVF22.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_PopFrontInput,None,itkImageToImageFilterICVF22IVF22)
itkImageToImageFilterICVF22IVF22.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_GetPointer,None,itkImageToImageFilterICVF22IVF22)
itkImageToImageFilterICVF22IVF22_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_swigregister
itkImageToImageFilterICVF22IVF22_swigregister(itkImageToImageFilterICVF22IVF22)

def itkImageToImageFilterICVF22IVF22_cast(*args):
  """itkImageToImageFilterICVF22IVF22_cast(itkLightObject obj) -> itkImageToImageFilterICVF22IVF22"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_cast(*args)

class itkImageToImageFilterICVF33ICVF33(itkImageSourcePython.itkImageSourceICVF33):
    """Proxy of C++ itkImageToImageFilterICVF33ICVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageCVF33 image)
        SetInput(self, unsigned int arg0, itkImageCVF33 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageCVF33
        GetInput(self, unsigned int idx) -> itkImageCVF33
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageCVF33 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageCVF33 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterICVF33ICVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterICVF33ICVF33"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterICVF33ICVF33"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterICVF33ICVF33
        
        Create a new object of the class itkImageToImageFilterICVF33ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterICVF33ICVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterICVF33ICVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterICVF33ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterICVF33ICVF33.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_SetInput,None,itkImageToImageFilterICVF33ICVF33)
itkImageToImageFilterICVF33ICVF33.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_GetInput,None,itkImageToImageFilterICVF33ICVF33)
itkImageToImageFilterICVF33ICVF33.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_PushBackInput,None,itkImageToImageFilterICVF33ICVF33)
itkImageToImageFilterICVF33ICVF33.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_PopBackInput,None,itkImageToImageFilterICVF33ICVF33)
itkImageToImageFilterICVF33ICVF33.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_PushFrontInput,None,itkImageToImageFilterICVF33ICVF33)
itkImageToImageFilterICVF33ICVF33.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_PopFrontInput,None,itkImageToImageFilterICVF33ICVF33)
itkImageToImageFilterICVF33ICVF33.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_GetPointer,None,itkImageToImageFilterICVF33ICVF33)
itkImageToImageFilterICVF33ICVF33_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_swigregister
itkImageToImageFilterICVF33ICVF33_swigregister(itkImageToImageFilterICVF33ICVF33)

def itkImageToImageFilterICVF33ICVF33_cast(*args):
  """itkImageToImageFilterICVF33ICVF33_cast(itkLightObject obj) -> itkImageToImageFilterICVF33ICVF33"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_cast(*args)

class itkImageToImageFilterICVF33IVF33(itkImageSourcePython.itkImageSourceIVF33):
    """Proxy of C++ itkImageToImageFilterICVF33IVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageCVF33 image)
        SetInput(self, unsigned int arg0, itkImageCVF33 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageCVF33
        GetInput(self, unsigned int idx) -> itkImageCVF33
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageCVF33 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageCVF33 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterICVF33IVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterICVF33IVF33"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterICVF33IVF33"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterICVF33IVF33
        
        Create a new object of the class itkImageToImageFilterICVF33IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterICVF33IVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterICVF33IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterICVF33IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterICVF33IVF33.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_SetInput,None,itkImageToImageFilterICVF33IVF33)
itkImageToImageFilterICVF33IVF33.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_GetInput,None,itkImageToImageFilterICVF33IVF33)
itkImageToImageFilterICVF33IVF33.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_PushBackInput,None,itkImageToImageFilterICVF33IVF33)
itkImageToImageFilterICVF33IVF33.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_PopBackInput,None,itkImageToImageFilterICVF33IVF33)
itkImageToImageFilterICVF33IVF33.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_PushFrontInput,None,itkImageToImageFilterICVF33IVF33)
itkImageToImageFilterICVF33IVF33.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_PopFrontInput,None,itkImageToImageFilterICVF33IVF33)
itkImageToImageFilterICVF33IVF33.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_GetPointer,None,itkImageToImageFilterICVF33IVF33)
itkImageToImageFilterICVF33IVF33_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_swigregister
itkImageToImageFilterICVF33IVF33_swigregister(itkImageToImageFilterICVF33IVF33)

def itkImageToImageFilterICVF33IVF33_cast(*args):
  """itkImageToImageFilterICVF33IVF33_cast(itkLightObject obj) -> itkImageToImageFilterICVF33IVF33"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_cast(*args)

class itkImageToImageFilterID2ID2(itkImageSourcePython.itkImageSourceID2):
    """Proxy of C++ itkImageToImageFilterID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD2 image)
        SetInput(self, unsigned int arg0, itkImageD2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD2
        GetInput(self, unsigned int idx) -> itkImageD2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID2ID2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID2ID2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID2ID2
        
        Create a new object of the class itkImageToImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID2ID2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_SetInput,None,itkImageToImageFilterID2ID2)
itkImageToImageFilterID2ID2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_GetInput,None,itkImageToImageFilterID2ID2)
itkImageToImageFilterID2ID2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_PushBackInput,None,itkImageToImageFilterID2ID2)
itkImageToImageFilterID2ID2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_PopBackInput,None,itkImageToImageFilterID2ID2)
itkImageToImageFilterID2ID2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_PushFrontInput,None,itkImageToImageFilterID2ID2)
itkImageToImageFilterID2ID2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_PopFrontInput,None,itkImageToImageFilterID2ID2)
itkImageToImageFilterID2ID2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_GetPointer,None,itkImageToImageFilterID2ID2)
itkImageToImageFilterID2ID2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_swigregister
itkImageToImageFilterID2ID2_swigregister(itkImageToImageFilterID2ID2)

def itkImageToImageFilterID2ID2_cast(*args):
  """itkImageToImageFilterID2ID2_cast(itkLightObject obj) -> itkImageToImageFilterID2ID2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_cast(*args)

class itkImageToImageFilterID2IF2(itkImageSourcePython.itkImageSourceIF2):
    """Proxy of C++ itkImageToImageFilterID2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD2 image)
        SetInput(self, unsigned int arg0, itkImageD2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD2
        GetInput(self, unsigned int idx) -> itkImageD2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID2IF2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID2IF2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID2IF2
        
        Create a new object of the class itkImageToImageFilterID2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID2IF2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_SetInput,None,itkImageToImageFilterID2IF2)
itkImageToImageFilterID2IF2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_GetInput,None,itkImageToImageFilterID2IF2)
itkImageToImageFilterID2IF2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_PushBackInput,None,itkImageToImageFilterID2IF2)
itkImageToImageFilterID2IF2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_PopBackInput,None,itkImageToImageFilterID2IF2)
itkImageToImageFilterID2IF2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_PushFrontInput,None,itkImageToImageFilterID2IF2)
itkImageToImageFilterID2IF2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_PopFrontInput,None,itkImageToImageFilterID2IF2)
itkImageToImageFilterID2IF2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_GetPointer,None,itkImageToImageFilterID2IF2)
itkImageToImageFilterID2IF2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_swigregister
itkImageToImageFilterID2IF2_swigregister(itkImageToImageFilterID2IF2)

def itkImageToImageFilterID2IF2_cast(*args):
  """itkImageToImageFilterID2IF2_cast(itkLightObject obj) -> itkImageToImageFilterID2IF2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_cast(*args)

class itkImageToImageFilterID2IUC2(itkImageSourcePython.itkImageSourceIUC2):
    """Proxy of C++ itkImageToImageFilterID2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD2 image)
        SetInput(self, unsigned int arg0, itkImageD2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD2
        GetInput(self, unsigned int idx) -> itkImageD2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID2IUC2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID2IUC2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID2IUC2
        
        Create a new object of the class itkImageToImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID2IUC2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_SetInput,None,itkImageToImageFilterID2IUC2)
itkImageToImageFilterID2IUC2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_GetInput,None,itkImageToImageFilterID2IUC2)
itkImageToImageFilterID2IUC2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_PushBackInput,None,itkImageToImageFilterID2IUC2)
itkImageToImageFilterID2IUC2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_PopBackInput,None,itkImageToImageFilterID2IUC2)
itkImageToImageFilterID2IUC2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_PushFrontInput,None,itkImageToImageFilterID2IUC2)
itkImageToImageFilterID2IUC2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_PopFrontInput,None,itkImageToImageFilterID2IUC2)
itkImageToImageFilterID2IUC2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_GetPointer,None,itkImageToImageFilterID2IUC2)
itkImageToImageFilterID2IUC2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_swigregister
itkImageToImageFilterID2IUC2_swigregister(itkImageToImageFilterID2IUC2)

def itkImageToImageFilterID2IUC2_cast(*args):
  """itkImageToImageFilterID2IUC2_cast(itkLightObject obj) -> itkImageToImageFilterID2IUC2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_cast(*args)

class itkImageToImageFilterID2IUL2(itkImageSourcePython.itkImageSourceIUL2):
    """Proxy of C++ itkImageToImageFilterID2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD2 image)
        SetInput(self, unsigned int arg0, itkImageD2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD2
        GetInput(self, unsigned int idx) -> itkImageD2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID2IUL2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID2IUL2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID2IUL2
        
        Create a new object of the class itkImageToImageFilterID2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID2IUL2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_SetInput,None,itkImageToImageFilterID2IUL2)
itkImageToImageFilterID2IUL2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_GetInput,None,itkImageToImageFilterID2IUL2)
itkImageToImageFilterID2IUL2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_PushBackInput,None,itkImageToImageFilterID2IUL2)
itkImageToImageFilterID2IUL2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_PopBackInput,None,itkImageToImageFilterID2IUL2)
itkImageToImageFilterID2IUL2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_PushFrontInput,None,itkImageToImageFilterID2IUL2)
itkImageToImageFilterID2IUL2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_PopFrontInput,None,itkImageToImageFilterID2IUL2)
itkImageToImageFilterID2IUL2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_GetPointer,None,itkImageToImageFilterID2IUL2)
itkImageToImageFilterID2IUL2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_swigregister
itkImageToImageFilterID2IUL2_swigregister(itkImageToImageFilterID2IUL2)

def itkImageToImageFilterID2IUL2_cast(*args):
  """itkImageToImageFilterID2IUL2_cast(itkLightObject obj) -> itkImageToImageFilterID2IUL2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_cast(*args)

class itkImageToImageFilterID2IUS2(itkImageSourcePython.itkImageSourceIUS2):
    """Proxy of C++ itkImageToImageFilterID2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD2 image)
        SetInput(self, unsigned int arg0, itkImageD2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD2
        GetInput(self, unsigned int idx) -> itkImageD2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID2IUS2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID2IUS2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID2IUS2
        
        Create a new object of the class itkImageToImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID2IUS2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_SetInput,None,itkImageToImageFilterID2IUS2)
itkImageToImageFilterID2IUS2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_GetInput,None,itkImageToImageFilterID2IUS2)
itkImageToImageFilterID2IUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_PushBackInput,None,itkImageToImageFilterID2IUS2)
itkImageToImageFilterID2IUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_PopBackInput,None,itkImageToImageFilterID2IUS2)
itkImageToImageFilterID2IUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_PushFrontInput,None,itkImageToImageFilterID2IUS2)
itkImageToImageFilterID2IUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_PopFrontInput,None,itkImageToImageFilterID2IUS2)
itkImageToImageFilterID2IUS2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_GetPointer,None,itkImageToImageFilterID2IUS2)
itkImageToImageFilterID2IUS2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_swigregister
itkImageToImageFilterID2IUS2_swigregister(itkImageToImageFilterID2IUS2)

def itkImageToImageFilterID2IUS2_cast(*args):
  """itkImageToImageFilterID2IUS2_cast(itkLightObject obj) -> itkImageToImageFilterID2IUS2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_cast(*args)

class itkImageToImageFilterID3ID3(itkImageSourcePython.itkImageSourceID3):
    """Proxy of C++ itkImageToImageFilterID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD3 image)
        SetInput(self, unsigned int arg0, itkImageD3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD3
        GetInput(self, unsigned int idx) -> itkImageD3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID3ID3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID3ID3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID3ID3
        
        Create a new object of the class itkImageToImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID3ID3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_SetInput,None,itkImageToImageFilterID3ID3)
itkImageToImageFilterID3ID3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_GetInput,None,itkImageToImageFilterID3ID3)
itkImageToImageFilterID3ID3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_PushBackInput,None,itkImageToImageFilterID3ID3)
itkImageToImageFilterID3ID3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_PopBackInput,None,itkImageToImageFilterID3ID3)
itkImageToImageFilterID3ID3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_PushFrontInput,None,itkImageToImageFilterID3ID3)
itkImageToImageFilterID3ID3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_PopFrontInput,None,itkImageToImageFilterID3ID3)
itkImageToImageFilterID3ID3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_GetPointer,None,itkImageToImageFilterID3ID3)
itkImageToImageFilterID3ID3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_swigregister
itkImageToImageFilterID3ID3_swigregister(itkImageToImageFilterID3ID3)

def itkImageToImageFilterID3ID3_cast(*args):
  """itkImageToImageFilterID3ID3_cast(itkLightObject obj) -> itkImageToImageFilterID3ID3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_cast(*args)

class itkImageToImageFilterID3IF3(itkImageSourcePython.itkImageSourceIF3):
    """Proxy of C++ itkImageToImageFilterID3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD3 image)
        SetInput(self, unsigned int arg0, itkImageD3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD3
        GetInput(self, unsigned int idx) -> itkImageD3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID3IF3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID3IF3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID3IF3
        
        Create a new object of the class itkImageToImageFilterID3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID3IF3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_SetInput,None,itkImageToImageFilterID3IF3)
itkImageToImageFilterID3IF3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_GetInput,None,itkImageToImageFilterID3IF3)
itkImageToImageFilterID3IF3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_PushBackInput,None,itkImageToImageFilterID3IF3)
itkImageToImageFilterID3IF3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_PopBackInput,None,itkImageToImageFilterID3IF3)
itkImageToImageFilterID3IF3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_PushFrontInput,None,itkImageToImageFilterID3IF3)
itkImageToImageFilterID3IF3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_PopFrontInput,None,itkImageToImageFilterID3IF3)
itkImageToImageFilterID3IF3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_GetPointer,None,itkImageToImageFilterID3IF3)
itkImageToImageFilterID3IF3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_swigregister
itkImageToImageFilterID3IF3_swigregister(itkImageToImageFilterID3IF3)

def itkImageToImageFilterID3IF3_cast(*args):
  """itkImageToImageFilterID3IF3_cast(itkLightObject obj) -> itkImageToImageFilterID3IF3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_cast(*args)

class itkImageToImageFilterID3IUC3(itkImageSourcePython.itkImageSourceIUC3):
    """Proxy of C++ itkImageToImageFilterID3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD3 image)
        SetInput(self, unsigned int arg0, itkImageD3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD3
        GetInput(self, unsigned int idx) -> itkImageD3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID3IUC3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID3IUC3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID3IUC3
        
        Create a new object of the class itkImageToImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID3IUC3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_SetInput,None,itkImageToImageFilterID3IUC3)
itkImageToImageFilterID3IUC3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_GetInput,None,itkImageToImageFilterID3IUC3)
itkImageToImageFilterID3IUC3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_PushBackInput,None,itkImageToImageFilterID3IUC3)
itkImageToImageFilterID3IUC3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_PopBackInput,None,itkImageToImageFilterID3IUC3)
itkImageToImageFilterID3IUC3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_PushFrontInput,None,itkImageToImageFilterID3IUC3)
itkImageToImageFilterID3IUC3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_PopFrontInput,None,itkImageToImageFilterID3IUC3)
itkImageToImageFilterID3IUC3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_GetPointer,None,itkImageToImageFilterID3IUC3)
itkImageToImageFilterID3IUC3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_swigregister
itkImageToImageFilterID3IUC3_swigregister(itkImageToImageFilterID3IUC3)

def itkImageToImageFilterID3IUC3_cast(*args):
  """itkImageToImageFilterID3IUC3_cast(itkLightObject obj) -> itkImageToImageFilterID3IUC3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_cast(*args)

class itkImageToImageFilterID3IUL3(itkImageSourcePython.itkImageSourceIUL3):
    """Proxy of C++ itkImageToImageFilterID3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD3 image)
        SetInput(self, unsigned int arg0, itkImageD3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD3
        GetInput(self, unsigned int idx) -> itkImageD3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID3IUL3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID3IUL3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID3IUL3
        
        Create a new object of the class itkImageToImageFilterID3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID3IUL3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_SetInput,None,itkImageToImageFilterID3IUL3)
itkImageToImageFilterID3IUL3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_GetInput,None,itkImageToImageFilterID3IUL3)
itkImageToImageFilterID3IUL3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_PushBackInput,None,itkImageToImageFilterID3IUL3)
itkImageToImageFilterID3IUL3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_PopBackInput,None,itkImageToImageFilterID3IUL3)
itkImageToImageFilterID3IUL3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_PushFrontInput,None,itkImageToImageFilterID3IUL3)
itkImageToImageFilterID3IUL3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_PopFrontInput,None,itkImageToImageFilterID3IUL3)
itkImageToImageFilterID3IUL3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_GetPointer,None,itkImageToImageFilterID3IUL3)
itkImageToImageFilterID3IUL3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_swigregister
itkImageToImageFilterID3IUL3_swigregister(itkImageToImageFilterID3IUL3)

def itkImageToImageFilterID3IUL3_cast(*args):
  """itkImageToImageFilterID3IUL3_cast(itkLightObject obj) -> itkImageToImageFilterID3IUL3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_cast(*args)

class itkImageToImageFilterID3IUS3(itkImageSourcePython.itkImageSourceIUS3):
    """Proxy of C++ itkImageToImageFilterID3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageD3 image)
        SetInput(self, unsigned int arg0, itkImageD3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageD3
        GetInput(self, unsigned int idx) -> itkImageD3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageD3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterID3IUS3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterID3IUS3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterID3IUS3
        
        Create a new object of the class itkImageToImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterID3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterID3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterID3IUS3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_SetInput,None,itkImageToImageFilterID3IUS3)
itkImageToImageFilterID3IUS3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_GetInput,None,itkImageToImageFilterID3IUS3)
itkImageToImageFilterID3IUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_PushBackInput,None,itkImageToImageFilterID3IUS3)
itkImageToImageFilterID3IUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_PopBackInput,None,itkImageToImageFilterID3IUS3)
itkImageToImageFilterID3IUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_PushFrontInput,None,itkImageToImageFilterID3IUS3)
itkImageToImageFilterID3IUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_PopFrontInput,None,itkImageToImageFilterID3IUS3)
itkImageToImageFilterID3IUS3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_GetPointer,None,itkImageToImageFilterID3IUS3)
itkImageToImageFilterID3IUS3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_swigregister
itkImageToImageFilterID3IUS3_swigregister(itkImageToImageFilterID3IUS3)

def itkImageToImageFilterID3IUS3_cast(*args):
  """itkImageToImageFilterID3IUS3_cast(itkLightObject obj) -> itkImageToImageFilterID3IUS3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_cast(*args)

class itkImageToImageFilterIF2ID2(itkImageSourcePython.itkImageSourceID2):
    """Proxy of C++ itkImageToImageFilterIF2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF2 image)
        SetInput(self, unsigned int arg0, itkImageF2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF2
        GetInput(self, unsigned int idx) -> itkImageF2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF2ID2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF2ID2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF2ID2
        
        Create a new object of the class itkImageToImageFilterIF2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF2ID2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_SetInput,None,itkImageToImageFilterIF2ID2)
itkImageToImageFilterIF2ID2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_GetInput,None,itkImageToImageFilterIF2ID2)
itkImageToImageFilterIF2ID2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_PushBackInput,None,itkImageToImageFilterIF2ID2)
itkImageToImageFilterIF2ID2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_PopBackInput,None,itkImageToImageFilterIF2ID2)
itkImageToImageFilterIF2ID2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_PushFrontInput,None,itkImageToImageFilterIF2ID2)
itkImageToImageFilterIF2ID2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_PopFrontInput,None,itkImageToImageFilterIF2ID2)
itkImageToImageFilterIF2ID2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_GetPointer,None,itkImageToImageFilterIF2ID2)
itkImageToImageFilterIF2ID2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_swigregister
itkImageToImageFilterIF2ID2_swigregister(itkImageToImageFilterIF2ID2)

def itkImageToImageFilterIF2ID2_cast(*args):
  """itkImageToImageFilterIF2ID2_cast(itkLightObject obj) -> itkImageToImageFilterIF2ID2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_cast(*args)

class itkImageToImageFilterIF2IF2(itkImageSourcePython.itkImageSourceIF2):
    """Proxy of C++ itkImageToImageFilterIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF2 image)
        SetInput(self, unsigned int arg0, itkImageF2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF2
        GetInput(self, unsigned int idx) -> itkImageF2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF2IF2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF2IF2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF2IF2
        
        Create a new object of the class itkImageToImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF2IF2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_SetInput,None,itkImageToImageFilterIF2IF2)
itkImageToImageFilterIF2IF2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_GetInput,None,itkImageToImageFilterIF2IF2)
itkImageToImageFilterIF2IF2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_PushBackInput,None,itkImageToImageFilterIF2IF2)
itkImageToImageFilterIF2IF2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_PopBackInput,None,itkImageToImageFilterIF2IF2)
itkImageToImageFilterIF2IF2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_PushFrontInput,None,itkImageToImageFilterIF2IF2)
itkImageToImageFilterIF2IF2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_PopFrontInput,None,itkImageToImageFilterIF2IF2)
itkImageToImageFilterIF2IF2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_GetPointer,None,itkImageToImageFilterIF2IF2)
itkImageToImageFilterIF2IF2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_swigregister
itkImageToImageFilterIF2IF2_swigregister(itkImageToImageFilterIF2IF2)

def itkImageToImageFilterIF2IF2_cast(*args):
  """itkImageToImageFilterIF2IF2_cast(itkLightObject obj) -> itkImageToImageFilterIF2IF2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_cast(*args)

class itkImageToImageFilterIF2IUC2(itkImageSourcePython.itkImageSourceIUC2):
    """Proxy of C++ itkImageToImageFilterIF2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF2 image)
        SetInput(self, unsigned int arg0, itkImageF2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF2
        GetInput(self, unsigned int idx) -> itkImageF2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF2IUC2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF2IUC2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF2IUC2
        
        Create a new object of the class itkImageToImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF2IUC2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_SetInput,None,itkImageToImageFilterIF2IUC2)
itkImageToImageFilterIF2IUC2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_GetInput,None,itkImageToImageFilterIF2IUC2)
itkImageToImageFilterIF2IUC2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_PushBackInput,None,itkImageToImageFilterIF2IUC2)
itkImageToImageFilterIF2IUC2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_PopBackInput,None,itkImageToImageFilterIF2IUC2)
itkImageToImageFilterIF2IUC2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_PushFrontInput,None,itkImageToImageFilterIF2IUC2)
itkImageToImageFilterIF2IUC2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_PopFrontInput,None,itkImageToImageFilterIF2IUC2)
itkImageToImageFilterIF2IUC2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_GetPointer,None,itkImageToImageFilterIF2IUC2)
itkImageToImageFilterIF2IUC2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_swigregister
itkImageToImageFilterIF2IUC2_swigregister(itkImageToImageFilterIF2IUC2)

def itkImageToImageFilterIF2IUC2_cast(*args):
  """itkImageToImageFilterIF2IUC2_cast(itkLightObject obj) -> itkImageToImageFilterIF2IUC2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_cast(*args)

class itkImageToImageFilterIF2IUL2(itkImageSourcePython.itkImageSourceIUL2):
    """Proxy of C++ itkImageToImageFilterIF2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF2 image)
        SetInput(self, unsigned int arg0, itkImageF2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF2
        GetInput(self, unsigned int idx) -> itkImageF2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF2IUL2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF2IUL2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF2IUL2
        
        Create a new object of the class itkImageToImageFilterIF2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF2IUL2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_SetInput,None,itkImageToImageFilterIF2IUL2)
itkImageToImageFilterIF2IUL2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_GetInput,None,itkImageToImageFilterIF2IUL2)
itkImageToImageFilterIF2IUL2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_PushBackInput,None,itkImageToImageFilterIF2IUL2)
itkImageToImageFilterIF2IUL2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_PopBackInput,None,itkImageToImageFilterIF2IUL2)
itkImageToImageFilterIF2IUL2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_PushFrontInput,None,itkImageToImageFilterIF2IUL2)
itkImageToImageFilterIF2IUL2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_PopFrontInput,None,itkImageToImageFilterIF2IUL2)
itkImageToImageFilterIF2IUL2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_GetPointer,None,itkImageToImageFilterIF2IUL2)
itkImageToImageFilterIF2IUL2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_swigregister
itkImageToImageFilterIF2IUL2_swigregister(itkImageToImageFilterIF2IUL2)

def itkImageToImageFilterIF2IUL2_cast(*args):
  """itkImageToImageFilterIF2IUL2_cast(itkLightObject obj) -> itkImageToImageFilterIF2IUL2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_cast(*args)

class itkImageToImageFilterIF2IUS2(itkImageSourcePython.itkImageSourceIUS2):
    """Proxy of C++ itkImageToImageFilterIF2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF2 image)
        SetInput(self, unsigned int arg0, itkImageF2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF2
        GetInput(self, unsigned int idx) -> itkImageF2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF2IUS2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF2IUS2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF2IUS2
        
        Create a new object of the class itkImageToImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF2IUS2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_SetInput,None,itkImageToImageFilterIF2IUS2)
itkImageToImageFilterIF2IUS2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_GetInput,None,itkImageToImageFilterIF2IUS2)
itkImageToImageFilterIF2IUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_PushBackInput,None,itkImageToImageFilterIF2IUS2)
itkImageToImageFilterIF2IUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_PopBackInput,None,itkImageToImageFilterIF2IUS2)
itkImageToImageFilterIF2IUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_PushFrontInput,None,itkImageToImageFilterIF2IUS2)
itkImageToImageFilterIF2IUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_PopFrontInput,None,itkImageToImageFilterIF2IUS2)
itkImageToImageFilterIF2IUS2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_GetPointer,None,itkImageToImageFilterIF2IUS2)
itkImageToImageFilterIF2IUS2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_swigregister
itkImageToImageFilterIF2IUS2_swigregister(itkImageToImageFilterIF2IUS2)

def itkImageToImageFilterIF2IUS2_cast(*args):
  """itkImageToImageFilterIF2IUS2_cast(itkLightObject obj) -> itkImageToImageFilterIF2IUS2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_cast(*args)

class itkImageToImageFilterIF3ID3(itkImageSourcePython.itkImageSourceID3):
    """Proxy of C++ itkImageToImageFilterIF3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF3 image)
        SetInput(self, unsigned int arg0, itkImageF3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF3
        GetInput(self, unsigned int idx) -> itkImageF3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF3ID3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF3ID3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF3ID3
        
        Create a new object of the class itkImageToImageFilterIF3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF3ID3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_SetInput,None,itkImageToImageFilterIF3ID3)
itkImageToImageFilterIF3ID3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_GetInput,None,itkImageToImageFilterIF3ID3)
itkImageToImageFilterIF3ID3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_PushBackInput,None,itkImageToImageFilterIF3ID3)
itkImageToImageFilterIF3ID3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_PopBackInput,None,itkImageToImageFilterIF3ID3)
itkImageToImageFilterIF3ID3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_PushFrontInput,None,itkImageToImageFilterIF3ID3)
itkImageToImageFilterIF3ID3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_PopFrontInput,None,itkImageToImageFilterIF3ID3)
itkImageToImageFilterIF3ID3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_GetPointer,None,itkImageToImageFilterIF3ID3)
itkImageToImageFilterIF3ID3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_swigregister
itkImageToImageFilterIF3ID3_swigregister(itkImageToImageFilterIF3ID3)

def itkImageToImageFilterIF3ID3_cast(*args):
  """itkImageToImageFilterIF3ID3_cast(itkLightObject obj) -> itkImageToImageFilterIF3ID3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_cast(*args)

class itkImageToImageFilterIF3IF3(itkImageSourcePython.itkImageSourceIF3):
    """Proxy of C++ itkImageToImageFilterIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF3 image)
        SetInput(self, unsigned int arg0, itkImageF3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF3
        GetInput(self, unsigned int idx) -> itkImageF3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF3IF3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF3IF3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF3IF3
        
        Create a new object of the class itkImageToImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF3IF3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_SetInput,None,itkImageToImageFilterIF3IF3)
itkImageToImageFilterIF3IF3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_GetInput,None,itkImageToImageFilterIF3IF3)
itkImageToImageFilterIF3IF3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_PushBackInput,None,itkImageToImageFilterIF3IF3)
itkImageToImageFilterIF3IF3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_PopBackInput,None,itkImageToImageFilterIF3IF3)
itkImageToImageFilterIF3IF3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_PushFrontInput,None,itkImageToImageFilterIF3IF3)
itkImageToImageFilterIF3IF3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_PopFrontInput,None,itkImageToImageFilterIF3IF3)
itkImageToImageFilterIF3IF3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_GetPointer,None,itkImageToImageFilterIF3IF3)
itkImageToImageFilterIF3IF3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_swigregister
itkImageToImageFilterIF3IF3_swigregister(itkImageToImageFilterIF3IF3)

def itkImageToImageFilterIF3IF3_cast(*args):
  """itkImageToImageFilterIF3IF3_cast(itkLightObject obj) -> itkImageToImageFilterIF3IF3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_cast(*args)

class itkImageToImageFilterIF3IUC3(itkImageSourcePython.itkImageSourceIUC3):
    """Proxy of C++ itkImageToImageFilterIF3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF3 image)
        SetInput(self, unsigned int arg0, itkImageF3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF3
        GetInput(self, unsigned int idx) -> itkImageF3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF3IUC3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF3IUC3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF3IUC3
        
        Create a new object of the class itkImageToImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF3IUC3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_SetInput,None,itkImageToImageFilterIF3IUC3)
itkImageToImageFilterIF3IUC3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_GetInput,None,itkImageToImageFilterIF3IUC3)
itkImageToImageFilterIF3IUC3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_PushBackInput,None,itkImageToImageFilterIF3IUC3)
itkImageToImageFilterIF3IUC3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_PopBackInput,None,itkImageToImageFilterIF3IUC3)
itkImageToImageFilterIF3IUC3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_PushFrontInput,None,itkImageToImageFilterIF3IUC3)
itkImageToImageFilterIF3IUC3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_PopFrontInput,None,itkImageToImageFilterIF3IUC3)
itkImageToImageFilterIF3IUC3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_GetPointer,None,itkImageToImageFilterIF3IUC3)
itkImageToImageFilterIF3IUC3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_swigregister
itkImageToImageFilterIF3IUC3_swigregister(itkImageToImageFilterIF3IUC3)

def itkImageToImageFilterIF3IUC3_cast(*args):
  """itkImageToImageFilterIF3IUC3_cast(itkLightObject obj) -> itkImageToImageFilterIF3IUC3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_cast(*args)

class itkImageToImageFilterIF3IUL3(itkImageSourcePython.itkImageSourceIUL3):
    """Proxy of C++ itkImageToImageFilterIF3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF3 image)
        SetInput(self, unsigned int arg0, itkImageF3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF3
        GetInput(self, unsigned int idx) -> itkImageF3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF3IUL3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF3IUL3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF3IUL3
        
        Create a new object of the class itkImageToImageFilterIF3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF3IUL3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_SetInput,None,itkImageToImageFilterIF3IUL3)
itkImageToImageFilterIF3IUL3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_GetInput,None,itkImageToImageFilterIF3IUL3)
itkImageToImageFilterIF3IUL3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_PushBackInput,None,itkImageToImageFilterIF3IUL3)
itkImageToImageFilterIF3IUL3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_PopBackInput,None,itkImageToImageFilterIF3IUL3)
itkImageToImageFilterIF3IUL3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_PushFrontInput,None,itkImageToImageFilterIF3IUL3)
itkImageToImageFilterIF3IUL3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_PopFrontInput,None,itkImageToImageFilterIF3IUL3)
itkImageToImageFilterIF3IUL3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_GetPointer,None,itkImageToImageFilterIF3IUL3)
itkImageToImageFilterIF3IUL3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_swigregister
itkImageToImageFilterIF3IUL3_swigregister(itkImageToImageFilterIF3IUL3)

def itkImageToImageFilterIF3IUL3_cast(*args):
  """itkImageToImageFilterIF3IUL3_cast(itkLightObject obj) -> itkImageToImageFilterIF3IUL3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_cast(*args)

class itkImageToImageFilterIF3IUS3(itkImageSourcePython.itkImageSourceIUS3):
    """Proxy of C++ itkImageToImageFilterIF3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageF3 image)
        SetInput(self, unsigned int arg0, itkImageF3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageF3
        GetInput(self, unsigned int idx) -> itkImageF3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageF3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIF3IUS3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIF3IUS3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIF3IUS3
        
        Create a new object of the class itkImageToImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIF3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIF3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIF3IUS3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_SetInput,None,itkImageToImageFilterIF3IUS3)
itkImageToImageFilterIF3IUS3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_GetInput,None,itkImageToImageFilterIF3IUS3)
itkImageToImageFilterIF3IUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_PushBackInput,None,itkImageToImageFilterIF3IUS3)
itkImageToImageFilterIF3IUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_PopBackInput,None,itkImageToImageFilterIF3IUS3)
itkImageToImageFilterIF3IUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_PushFrontInput,None,itkImageToImageFilterIF3IUS3)
itkImageToImageFilterIF3IUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_PopFrontInput,None,itkImageToImageFilterIF3IUS3)
itkImageToImageFilterIF3IUS3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_GetPointer,None,itkImageToImageFilterIF3IUS3)
itkImageToImageFilterIF3IUS3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_swigregister
itkImageToImageFilterIF3IUS3_swigregister(itkImageToImageFilterIF3IUS3)

def itkImageToImageFilterIF3IUS3_cast(*args):
  """itkImageToImageFilterIF3IUS3_cast(itkLightObject obj) -> itkImageToImageFilterIF3IUS3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_cast(*args)

class itkImageToImageFilterIRGBAUC2IRGBAUC2(itkImageSourcePython.itkImageSourceIRGBAUC2):
    """Proxy of C++ itkImageToImageFilterIRGBAUC2IRGBAUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBAUC2 image)
        SetInput(self, unsigned int arg0, itkImageRGBAUC2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBAUC2
        GetInput(self, unsigned int idx) -> itkImageRGBAUC2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBAUC2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBAUC2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIRGBAUC2IRGBAUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUC2IRGBAUC2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBAUC2IRGBAUC2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBAUC2IRGBAUC2
        
        Create a new object of the class itkImageToImageFilterIRGBAUC2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBAUC2IRGBAUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBAUC2IRGBAUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBAUC2IRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBAUC2IRGBAUC2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_SetInput,None,itkImageToImageFilterIRGBAUC2IRGBAUC2)
itkImageToImageFilterIRGBAUC2IRGBAUC2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_GetInput,None,itkImageToImageFilterIRGBAUC2IRGBAUC2)
itkImageToImageFilterIRGBAUC2IRGBAUC2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_PushBackInput,None,itkImageToImageFilterIRGBAUC2IRGBAUC2)
itkImageToImageFilterIRGBAUC2IRGBAUC2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_PopBackInput,None,itkImageToImageFilterIRGBAUC2IRGBAUC2)
itkImageToImageFilterIRGBAUC2IRGBAUC2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_PushFrontInput,None,itkImageToImageFilterIRGBAUC2IRGBAUC2)
itkImageToImageFilterIRGBAUC2IRGBAUC2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_PopFrontInput,None,itkImageToImageFilterIRGBAUC2IRGBAUC2)
itkImageToImageFilterIRGBAUC2IRGBAUC2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_GetPointer,None,itkImageToImageFilterIRGBAUC2IRGBAUC2)
itkImageToImageFilterIRGBAUC2IRGBAUC2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_swigregister
itkImageToImageFilterIRGBAUC2IRGBAUC2_swigregister(itkImageToImageFilterIRGBAUC2IRGBAUC2)

def itkImageToImageFilterIRGBAUC2IRGBAUC2_cast(*args):
  """itkImageToImageFilterIRGBAUC2IRGBAUC2_cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUC2IRGBAUC2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_cast(*args)

class itkImageToImageFilterIRGBAUC2IRGBAUS2(itkImageSourcePython.itkImageSourceIRGBAUS2):
    """Proxy of C++ itkImageToImageFilterIRGBAUC2IRGBAUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBAUC2 image)
        SetInput(self, unsigned int arg0, itkImageRGBAUC2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBAUC2
        GetInput(self, unsigned int idx) -> itkImageRGBAUC2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBAUC2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBAUC2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIRGBAUC2IRGBAUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUC2IRGBAUS2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBAUC2IRGBAUS2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBAUC2IRGBAUS2
        
        Create a new object of the class itkImageToImageFilterIRGBAUC2IRGBAUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBAUC2IRGBAUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBAUC2IRGBAUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBAUC2IRGBAUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBAUC2IRGBAUS2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUS2_SetInput,None,itkImageToImageFilterIRGBAUC2IRGBAUS2)
itkImageToImageFilterIRGBAUC2IRGBAUS2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUS2_GetInput,None,itkImageToImageFilterIRGBAUC2IRGBAUS2)
itkImageToImageFilterIRGBAUC2IRGBAUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUS2_PushBackInput,None,itkImageToImageFilterIRGBAUC2IRGBAUS2)
itkImageToImageFilterIRGBAUC2IRGBAUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUS2_PopBackInput,None,itkImageToImageFilterIRGBAUC2IRGBAUS2)
itkImageToImageFilterIRGBAUC2IRGBAUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUS2_PushFrontInput,None,itkImageToImageFilterIRGBAUC2IRGBAUS2)
itkImageToImageFilterIRGBAUC2IRGBAUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUS2_PopFrontInput,None,itkImageToImageFilterIRGBAUC2IRGBAUS2)
itkImageToImageFilterIRGBAUC2IRGBAUS2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUS2_GetPointer,None,itkImageToImageFilterIRGBAUC2IRGBAUS2)
itkImageToImageFilterIRGBAUC2IRGBAUS2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUS2_swigregister
itkImageToImageFilterIRGBAUC2IRGBAUS2_swigregister(itkImageToImageFilterIRGBAUC2IRGBAUS2)

def itkImageToImageFilterIRGBAUC2IRGBAUS2_cast(*args):
  """itkImageToImageFilterIRGBAUC2IRGBAUS2_cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUC2IRGBAUS2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUS2_cast(*args)

class itkImageToImageFilterIRGBAUC3IRGBAUC3(itkImageSourcePython.itkImageSourceIRGBAUC3):
    """Proxy of C++ itkImageToImageFilterIRGBAUC3IRGBAUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBAUC3 image)
        SetInput(self, unsigned int arg0, itkImageRGBAUC3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBAUC3
        GetInput(self, unsigned int idx) -> itkImageRGBAUC3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBAUC3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBAUC3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIRGBAUC3IRGBAUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUC3IRGBAUC3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBAUC3IRGBAUC3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBAUC3IRGBAUC3
        
        Create a new object of the class itkImageToImageFilterIRGBAUC3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBAUC3IRGBAUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBAUC3IRGBAUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBAUC3IRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBAUC3IRGBAUC3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_SetInput,None,itkImageToImageFilterIRGBAUC3IRGBAUC3)
itkImageToImageFilterIRGBAUC3IRGBAUC3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_GetInput,None,itkImageToImageFilterIRGBAUC3IRGBAUC3)
itkImageToImageFilterIRGBAUC3IRGBAUC3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_PushBackInput,None,itkImageToImageFilterIRGBAUC3IRGBAUC3)
itkImageToImageFilterIRGBAUC3IRGBAUC3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_PopBackInput,None,itkImageToImageFilterIRGBAUC3IRGBAUC3)
itkImageToImageFilterIRGBAUC3IRGBAUC3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_PushFrontInput,None,itkImageToImageFilterIRGBAUC3IRGBAUC3)
itkImageToImageFilterIRGBAUC3IRGBAUC3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_PopFrontInput,None,itkImageToImageFilterIRGBAUC3IRGBAUC3)
itkImageToImageFilterIRGBAUC3IRGBAUC3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_GetPointer,None,itkImageToImageFilterIRGBAUC3IRGBAUC3)
itkImageToImageFilterIRGBAUC3IRGBAUC3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_swigregister
itkImageToImageFilterIRGBAUC3IRGBAUC3_swigregister(itkImageToImageFilterIRGBAUC3IRGBAUC3)

def itkImageToImageFilterIRGBAUC3IRGBAUC3_cast(*args):
  """itkImageToImageFilterIRGBAUC3IRGBAUC3_cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUC3IRGBAUC3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_cast(*args)

class itkImageToImageFilterIRGBAUC3IRGBAUS3(itkImageSourcePython.itkImageSourceIRGBAUS3):
    """Proxy of C++ itkImageToImageFilterIRGBAUC3IRGBAUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBAUC3 image)
        SetInput(self, unsigned int arg0, itkImageRGBAUC3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBAUC3
        GetInput(self, unsigned int idx) -> itkImageRGBAUC3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBAUC3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBAUC3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIRGBAUC3IRGBAUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUC3IRGBAUS3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBAUC3IRGBAUS3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBAUC3IRGBAUS3
        
        Create a new object of the class itkImageToImageFilterIRGBAUC3IRGBAUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBAUC3IRGBAUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBAUC3IRGBAUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBAUC3IRGBAUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBAUC3IRGBAUS3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUS3_SetInput,None,itkImageToImageFilterIRGBAUC3IRGBAUS3)
itkImageToImageFilterIRGBAUC3IRGBAUS3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUS3_GetInput,None,itkImageToImageFilterIRGBAUC3IRGBAUS3)
itkImageToImageFilterIRGBAUC3IRGBAUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUS3_PushBackInput,None,itkImageToImageFilterIRGBAUC3IRGBAUS3)
itkImageToImageFilterIRGBAUC3IRGBAUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUS3_PopBackInput,None,itkImageToImageFilterIRGBAUC3IRGBAUS3)
itkImageToImageFilterIRGBAUC3IRGBAUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUS3_PushFrontInput,None,itkImageToImageFilterIRGBAUC3IRGBAUS3)
itkImageToImageFilterIRGBAUC3IRGBAUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUS3_PopFrontInput,None,itkImageToImageFilterIRGBAUC3IRGBAUS3)
itkImageToImageFilterIRGBAUC3IRGBAUS3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUS3_GetPointer,None,itkImageToImageFilterIRGBAUC3IRGBAUS3)
itkImageToImageFilterIRGBAUC3IRGBAUS3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUS3_swigregister
itkImageToImageFilterIRGBAUC3IRGBAUS3_swigregister(itkImageToImageFilterIRGBAUC3IRGBAUS3)

def itkImageToImageFilterIRGBAUC3IRGBAUS3_cast(*args):
  """itkImageToImageFilterIRGBAUC3IRGBAUS3_cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUC3IRGBAUS3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUS3_cast(*args)

class itkImageToImageFilterIRGBAUS2IRGBAUC2(itkImageSourcePython.itkImageSourceIRGBAUC2):
    """Proxy of C++ itkImageToImageFilterIRGBAUS2IRGBAUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUC2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUC2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBAUS2 image)
        SetInput(self, unsigned int arg0, itkImageRGBAUS2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUC2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBAUS2
        GetInput(self, unsigned int idx) -> itkImageRGBAUS2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUC2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBAUS2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUC2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUC2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBAUS2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUC2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUC2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIRGBAUS2IRGBAUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUS2IRGBAUC2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBAUS2IRGBAUC2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBAUS2IRGBAUC2
        
        Create a new object of the class itkImageToImageFilterIRGBAUS2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBAUS2IRGBAUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBAUS2IRGBAUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBAUS2IRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBAUS2IRGBAUC2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUC2_SetInput,None,itkImageToImageFilterIRGBAUS2IRGBAUC2)
itkImageToImageFilterIRGBAUS2IRGBAUC2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUC2_GetInput,None,itkImageToImageFilterIRGBAUS2IRGBAUC2)
itkImageToImageFilterIRGBAUS2IRGBAUC2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUC2_PushBackInput,None,itkImageToImageFilterIRGBAUS2IRGBAUC2)
itkImageToImageFilterIRGBAUS2IRGBAUC2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUC2_PopBackInput,None,itkImageToImageFilterIRGBAUS2IRGBAUC2)
itkImageToImageFilterIRGBAUS2IRGBAUC2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUC2_PushFrontInput,None,itkImageToImageFilterIRGBAUS2IRGBAUC2)
itkImageToImageFilterIRGBAUS2IRGBAUC2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUC2_PopFrontInput,None,itkImageToImageFilterIRGBAUS2IRGBAUC2)
itkImageToImageFilterIRGBAUS2IRGBAUC2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUC2_GetPointer,None,itkImageToImageFilterIRGBAUS2IRGBAUC2)
itkImageToImageFilterIRGBAUS2IRGBAUC2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUC2_swigregister
itkImageToImageFilterIRGBAUS2IRGBAUC2_swigregister(itkImageToImageFilterIRGBAUS2IRGBAUC2)

def itkImageToImageFilterIRGBAUS2IRGBAUC2_cast(*args):
  """itkImageToImageFilterIRGBAUS2IRGBAUC2_cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUS2IRGBAUC2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUC2_cast(*args)

class itkImageToImageFilterIRGBAUS2IRGBAUS2(itkImageSourcePython.itkImageSourceIRGBAUS2):
    """Proxy of C++ itkImageToImageFilterIRGBAUS2IRGBAUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBAUS2 image)
        SetInput(self, unsigned int arg0, itkImageRGBAUS2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBAUS2
        GetInput(self, unsigned int idx) -> itkImageRGBAUS2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBAUS2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBAUS2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIRGBAUS2IRGBAUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUS2IRGBAUS2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBAUS2IRGBAUS2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBAUS2IRGBAUS2
        
        Create a new object of the class itkImageToImageFilterIRGBAUS2IRGBAUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBAUS2IRGBAUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBAUS2IRGBAUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBAUS2IRGBAUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBAUS2IRGBAUS2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUS2_SetInput,None,itkImageToImageFilterIRGBAUS2IRGBAUS2)
itkImageToImageFilterIRGBAUS2IRGBAUS2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUS2_GetInput,None,itkImageToImageFilterIRGBAUS2IRGBAUS2)
itkImageToImageFilterIRGBAUS2IRGBAUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUS2_PushBackInput,None,itkImageToImageFilterIRGBAUS2IRGBAUS2)
itkImageToImageFilterIRGBAUS2IRGBAUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUS2_PopBackInput,None,itkImageToImageFilterIRGBAUS2IRGBAUS2)
itkImageToImageFilterIRGBAUS2IRGBAUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUS2_PushFrontInput,None,itkImageToImageFilterIRGBAUS2IRGBAUS2)
itkImageToImageFilterIRGBAUS2IRGBAUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUS2_PopFrontInput,None,itkImageToImageFilterIRGBAUS2IRGBAUS2)
itkImageToImageFilterIRGBAUS2IRGBAUS2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUS2_GetPointer,None,itkImageToImageFilterIRGBAUS2IRGBAUS2)
itkImageToImageFilterIRGBAUS2IRGBAUS2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUS2_swigregister
itkImageToImageFilterIRGBAUS2IRGBAUS2_swigregister(itkImageToImageFilterIRGBAUS2IRGBAUS2)

def itkImageToImageFilterIRGBAUS2IRGBAUS2_cast(*args):
  """itkImageToImageFilterIRGBAUS2IRGBAUS2_cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUS2IRGBAUS2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS2IRGBAUS2_cast(*args)

class itkImageToImageFilterIRGBAUS3IRGBAUC3(itkImageSourcePython.itkImageSourceIRGBAUC3):
    """Proxy of C++ itkImageToImageFilterIRGBAUS3IRGBAUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUC3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUC3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBAUS3 image)
        SetInput(self, unsigned int arg0, itkImageRGBAUS3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUC3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBAUS3
        GetInput(self, unsigned int idx) -> itkImageRGBAUS3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUC3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBAUS3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUC3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUC3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBAUS3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUC3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUC3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIRGBAUS3IRGBAUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUS3IRGBAUC3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBAUS3IRGBAUC3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBAUS3IRGBAUC3
        
        Create a new object of the class itkImageToImageFilterIRGBAUS3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBAUS3IRGBAUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBAUS3IRGBAUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBAUS3IRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBAUS3IRGBAUC3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUC3_SetInput,None,itkImageToImageFilterIRGBAUS3IRGBAUC3)
itkImageToImageFilterIRGBAUS3IRGBAUC3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUC3_GetInput,None,itkImageToImageFilterIRGBAUS3IRGBAUC3)
itkImageToImageFilterIRGBAUS3IRGBAUC3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUC3_PushBackInput,None,itkImageToImageFilterIRGBAUS3IRGBAUC3)
itkImageToImageFilterIRGBAUS3IRGBAUC3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUC3_PopBackInput,None,itkImageToImageFilterIRGBAUS3IRGBAUC3)
itkImageToImageFilterIRGBAUS3IRGBAUC3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUC3_PushFrontInput,None,itkImageToImageFilterIRGBAUS3IRGBAUC3)
itkImageToImageFilterIRGBAUS3IRGBAUC3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUC3_PopFrontInput,None,itkImageToImageFilterIRGBAUS3IRGBAUC3)
itkImageToImageFilterIRGBAUS3IRGBAUC3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUC3_GetPointer,None,itkImageToImageFilterIRGBAUS3IRGBAUC3)
itkImageToImageFilterIRGBAUS3IRGBAUC3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUC3_swigregister
itkImageToImageFilterIRGBAUS3IRGBAUC3_swigregister(itkImageToImageFilterIRGBAUS3IRGBAUC3)

def itkImageToImageFilterIRGBAUS3IRGBAUC3_cast(*args):
  """itkImageToImageFilterIRGBAUS3IRGBAUC3_cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUS3IRGBAUC3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUC3_cast(*args)

class itkImageToImageFilterIRGBAUS3IRGBAUS3(itkImageSourcePython.itkImageSourceIRGBAUS3):
    """Proxy of C++ itkImageToImageFilterIRGBAUS3IRGBAUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBAUS3 image)
        SetInput(self, unsigned int arg0, itkImageRGBAUS3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBAUS3
        GetInput(self, unsigned int idx) -> itkImageRGBAUS3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBAUS3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBAUS3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIRGBAUS3IRGBAUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUS3IRGBAUS3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBAUS3IRGBAUS3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBAUS3IRGBAUS3
        
        Create a new object of the class itkImageToImageFilterIRGBAUS3IRGBAUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBAUS3IRGBAUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBAUS3IRGBAUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBAUS3IRGBAUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBAUS3IRGBAUS3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUS3_SetInput,None,itkImageToImageFilterIRGBAUS3IRGBAUS3)
itkImageToImageFilterIRGBAUS3IRGBAUS3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUS3_GetInput,None,itkImageToImageFilterIRGBAUS3IRGBAUS3)
itkImageToImageFilterIRGBAUS3IRGBAUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUS3_PushBackInput,None,itkImageToImageFilterIRGBAUS3IRGBAUS3)
itkImageToImageFilterIRGBAUS3IRGBAUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUS3_PopBackInput,None,itkImageToImageFilterIRGBAUS3IRGBAUS3)
itkImageToImageFilterIRGBAUS3IRGBAUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUS3_PushFrontInput,None,itkImageToImageFilterIRGBAUS3IRGBAUS3)
itkImageToImageFilterIRGBAUS3IRGBAUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUS3_PopFrontInput,None,itkImageToImageFilterIRGBAUS3IRGBAUS3)
itkImageToImageFilterIRGBAUS3IRGBAUS3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUS3_GetPointer,None,itkImageToImageFilterIRGBAUS3IRGBAUS3)
itkImageToImageFilterIRGBAUS3IRGBAUS3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUS3_swigregister
itkImageToImageFilterIRGBAUS3IRGBAUS3_swigregister(itkImageToImageFilterIRGBAUS3IRGBAUS3)

def itkImageToImageFilterIRGBAUS3IRGBAUS3_cast(*args):
  """itkImageToImageFilterIRGBAUS3IRGBAUS3_cast(itkLightObject obj) -> itkImageToImageFilterIRGBAUS3IRGBAUS3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUS3IRGBAUS3_cast(*args)

class itkImageToImageFilterIRGBUC2IRGBUC2(itkImageSourcePython.itkImageSourceIRGBUC2):
    """Proxy of C++ itkImageToImageFilterIRGBUC2IRGBUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBUC2 image)
        SetInput(self, unsigned int arg0, itkImageRGBUC2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBUC2
        GetInput(self, unsigned int idx) -> itkImageRGBUC2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBUC2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBUC2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIRGBUC2IRGBUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBUC2IRGBUC2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBUC2IRGBUC2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBUC2IRGBUC2
        
        Create a new object of the class itkImageToImageFilterIRGBUC2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBUC2IRGBUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBUC2IRGBUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBUC2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBUC2IRGBUC2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_SetInput,None,itkImageToImageFilterIRGBUC2IRGBUC2)
itkImageToImageFilterIRGBUC2IRGBUC2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_GetInput,None,itkImageToImageFilterIRGBUC2IRGBUC2)
itkImageToImageFilterIRGBUC2IRGBUC2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_PushBackInput,None,itkImageToImageFilterIRGBUC2IRGBUC2)
itkImageToImageFilterIRGBUC2IRGBUC2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_PopBackInput,None,itkImageToImageFilterIRGBUC2IRGBUC2)
itkImageToImageFilterIRGBUC2IRGBUC2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_PushFrontInput,None,itkImageToImageFilterIRGBUC2IRGBUC2)
itkImageToImageFilterIRGBUC2IRGBUC2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_PopFrontInput,None,itkImageToImageFilterIRGBUC2IRGBUC2)
itkImageToImageFilterIRGBUC2IRGBUC2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_GetPointer,None,itkImageToImageFilterIRGBUC2IRGBUC2)
itkImageToImageFilterIRGBUC2IRGBUC2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_swigregister
itkImageToImageFilterIRGBUC2IRGBUC2_swigregister(itkImageToImageFilterIRGBUC2IRGBUC2)

def itkImageToImageFilterIRGBUC2IRGBUC2_cast(*args):
  """itkImageToImageFilterIRGBUC2IRGBUC2_cast(itkLightObject obj) -> itkImageToImageFilterIRGBUC2IRGBUC2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_cast(*args)

class itkImageToImageFilterIRGBUC2IRGBUS2(itkImageSourcePython.itkImageSourceIRGBUS2):
    """Proxy of C++ itkImageToImageFilterIRGBUC2IRGBUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBUC2 image)
        SetInput(self, unsigned int arg0, itkImageRGBUC2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBUC2
        GetInput(self, unsigned int idx) -> itkImageRGBUC2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBUC2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBUC2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIRGBUC2IRGBUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBUC2IRGBUS2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBUC2IRGBUS2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBUC2IRGBUS2
        
        Create a new object of the class itkImageToImageFilterIRGBUC2IRGBUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBUC2IRGBUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBUC2IRGBUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBUC2IRGBUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBUC2IRGBUS2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUS2_SetInput,None,itkImageToImageFilterIRGBUC2IRGBUS2)
itkImageToImageFilterIRGBUC2IRGBUS2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUS2_GetInput,None,itkImageToImageFilterIRGBUC2IRGBUS2)
itkImageToImageFilterIRGBUC2IRGBUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUS2_PushBackInput,None,itkImageToImageFilterIRGBUC2IRGBUS2)
itkImageToImageFilterIRGBUC2IRGBUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUS2_PopBackInput,None,itkImageToImageFilterIRGBUC2IRGBUS2)
itkImageToImageFilterIRGBUC2IRGBUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUS2_PushFrontInput,None,itkImageToImageFilterIRGBUC2IRGBUS2)
itkImageToImageFilterIRGBUC2IRGBUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUS2_PopFrontInput,None,itkImageToImageFilterIRGBUC2IRGBUS2)
itkImageToImageFilterIRGBUC2IRGBUS2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUS2_GetPointer,None,itkImageToImageFilterIRGBUC2IRGBUS2)
itkImageToImageFilterIRGBUC2IRGBUS2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUS2_swigregister
itkImageToImageFilterIRGBUC2IRGBUS2_swigregister(itkImageToImageFilterIRGBUC2IRGBUS2)

def itkImageToImageFilterIRGBUC2IRGBUS2_cast(*args):
  """itkImageToImageFilterIRGBUC2IRGBUS2_cast(itkLightObject obj) -> itkImageToImageFilterIRGBUC2IRGBUS2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUS2_cast(*args)

class itkImageToImageFilterIRGBUC3IRGBUC3(itkImageSourcePython.itkImageSourceIRGBUC3):
    """Proxy of C++ itkImageToImageFilterIRGBUC3IRGBUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBUC3 image)
        SetInput(self, unsigned int arg0, itkImageRGBUC3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBUC3
        GetInput(self, unsigned int idx) -> itkImageRGBUC3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBUC3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBUC3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIRGBUC3IRGBUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBUC3IRGBUC3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBUC3IRGBUC3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBUC3IRGBUC3
        
        Create a new object of the class itkImageToImageFilterIRGBUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBUC3IRGBUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBUC3IRGBUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBUC3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBUC3IRGBUC3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_SetInput,None,itkImageToImageFilterIRGBUC3IRGBUC3)
itkImageToImageFilterIRGBUC3IRGBUC3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_GetInput,None,itkImageToImageFilterIRGBUC3IRGBUC3)
itkImageToImageFilterIRGBUC3IRGBUC3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_PushBackInput,None,itkImageToImageFilterIRGBUC3IRGBUC3)
itkImageToImageFilterIRGBUC3IRGBUC3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_PopBackInput,None,itkImageToImageFilterIRGBUC3IRGBUC3)
itkImageToImageFilterIRGBUC3IRGBUC3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_PushFrontInput,None,itkImageToImageFilterIRGBUC3IRGBUC3)
itkImageToImageFilterIRGBUC3IRGBUC3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_PopFrontInput,None,itkImageToImageFilterIRGBUC3IRGBUC3)
itkImageToImageFilterIRGBUC3IRGBUC3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_GetPointer,None,itkImageToImageFilterIRGBUC3IRGBUC3)
itkImageToImageFilterIRGBUC3IRGBUC3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_swigregister
itkImageToImageFilterIRGBUC3IRGBUC3_swigregister(itkImageToImageFilterIRGBUC3IRGBUC3)

def itkImageToImageFilterIRGBUC3IRGBUC3_cast(*args):
  """itkImageToImageFilterIRGBUC3IRGBUC3_cast(itkLightObject obj) -> itkImageToImageFilterIRGBUC3IRGBUC3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_cast(*args)

class itkImageToImageFilterIRGBUC3IRGBUS3(itkImageSourcePython.itkImageSourceIRGBUS3):
    """Proxy of C++ itkImageToImageFilterIRGBUC3IRGBUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBUC3 image)
        SetInput(self, unsigned int arg0, itkImageRGBUC3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBUC3
        GetInput(self, unsigned int idx) -> itkImageRGBUC3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBUC3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBUC3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIRGBUC3IRGBUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBUC3IRGBUS3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBUC3IRGBUS3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBUC3IRGBUS3
        
        Create a new object of the class itkImageToImageFilterIRGBUC3IRGBUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBUC3IRGBUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBUC3IRGBUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBUC3IRGBUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBUC3IRGBUS3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUS3_SetInput,None,itkImageToImageFilterIRGBUC3IRGBUS3)
itkImageToImageFilterIRGBUC3IRGBUS3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUS3_GetInput,None,itkImageToImageFilterIRGBUC3IRGBUS3)
itkImageToImageFilterIRGBUC3IRGBUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUS3_PushBackInput,None,itkImageToImageFilterIRGBUC3IRGBUS3)
itkImageToImageFilterIRGBUC3IRGBUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUS3_PopBackInput,None,itkImageToImageFilterIRGBUC3IRGBUS3)
itkImageToImageFilterIRGBUC3IRGBUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUS3_PushFrontInput,None,itkImageToImageFilterIRGBUC3IRGBUS3)
itkImageToImageFilterIRGBUC3IRGBUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUS3_PopFrontInput,None,itkImageToImageFilterIRGBUC3IRGBUS3)
itkImageToImageFilterIRGBUC3IRGBUS3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUS3_GetPointer,None,itkImageToImageFilterIRGBUC3IRGBUS3)
itkImageToImageFilterIRGBUC3IRGBUS3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUS3_swigregister
itkImageToImageFilterIRGBUC3IRGBUS3_swigregister(itkImageToImageFilterIRGBUC3IRGBUS3)

def itkImageToImageFilterIRGBUC3IRGBUS3_cast(*args):
  """itkImageToImageFilterIRGBUC3IRGBUS3_cast(itkLightObject obj) -> itkImageToImageFilterIRGBUC3IRGBUS3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUS3_cast(*args)

class itkImageToImageFilterIRGBUS2IRGBUC2(itkImageSourcePython.itkImageSourceIRGBUC2):
    """Proxy of C++ itkImageToImageFilterIRGBUS2IRGBUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUC2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUC2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBUS2 image)
        SetInput(self, unsigned int arg0, itkImageRGBUS2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUC2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBUS2
        GetInput(self, unsigned int idx) -> itkImageRGBUS2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUC2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBUS2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUC2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUC2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBUS2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUC2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUC2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIRGBUS2IRGBUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS2IRGBUC2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBUS2IRGBUC2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBUS2IRGBUC2
        
        Create a new object of the class itkImageToImageFilterIRGBUS2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBUS2IRGBUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBUS2IRGBUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBUS2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBUS2IRGBUC2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUC2_SetInput,None,itkImageToImageFilterIRGBUS2IRGBUC2)
itkImageToImageFilterIRGBUS2IRGBUC2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUC2_GetInput,None,itkImageToImageFilterIRGBUS2IRGBUC2)
itkImageToImageFilterIRGBUS2IRGBUC2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUC2_PushBackInput,None,itkImageToImageFilterIRGBUS2IRGBUC2)
itkImageToImageFilterIRGBUS2IRGBUC2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUC2_PopBackInput,None,itkImageToImageFilterIRGBUS2IRGBUC2)
itkImageToImageFilterIRGBUS2IRGBUC2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUC2_PushFrontInput,None,itkImageToImageFilterIRGBUS2IRGBUC2)
itkImageToImageFilterIRGBUS2IRGBUC2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUC2_PopFrontInput,None,itkImageToImageFilterIRGBUS2IRGBUC2)
itkImageToImageFilterIRGBUS2IRGBUC2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUC2_GetPointer,None,itkImageToImageFilterIRGBUS2IRGBUC2)
itkImageToImageFilterIRGBUS2IRGBUC2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUC2_swigregister
itkImageToImageFilterIRGBUS2IRGBUC2_swigregister(itkImageToImageFilterIRGBUS2IRGBUC2)

def itkImageToImageFilterIRGBUS2IRGBUC2_cast(*args):
  """itkImageToImageFilterIRGBUS2IRGBUC2_cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS2IRGBUC2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUC2_cast(*args)

class itkImageToImageFilterIRGBUS2IRGBUS2(itkImageSourcePython.itkImageSourceIRGBUS2):
    """Proxy of C++ itkImageToImageFilterIRGBUS2IRGBUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBUS2 image)
        SetInput(self, unsigned int arg0, itkImageRGBUS2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBUS2
        GetInput(self, unsigned int idx) -> itkImageRGBUS2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBUS2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBUS2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIRGBUS2IRGBUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS2IRGBUS2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBUS2IRGBUS2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBUS2IRGBUS2
        
        Create a new object of the class itkImageToImageFilterIRGBUS2IRGBUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBUS2IRGBUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBUS2IRGBUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBUS2IRGBUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBUS2IRGBUS2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUS2_SetInput,None,itkImageToImageFilterIRGBUS2IRGBUS2)
itkImageToImageFilterIRGBUS2IRGBUS2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUS2_GetInput,None,itkImageToImageFilterIRGBUS2IRGBUS2)
itkImageToImageFilterIRGBUS2IRGBUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUS2_PushBackInput,None,itkImageToImageFilterIRGBUS2IRGBUS2)
itkImageToImageFilterIRGBUS2IRGBUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUS2_PopBackInput,None,itkImageToImageFilterIRGBUS2IRGBUS2)
itkImageToImageFilterIRGBUS2IRGBUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUS2_PushFrontInput,None,itkImageToImageFilterIRGBUS2IRGBUS2)
itkImageToImageFilterIRGBUS2IRGBUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUS2_PopFrontInput,None,itkImageToImageFilterIRGBUS2IRGBUS2)
itkImageToImageFilterIRGBUS2IRGBUS2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUS2_GetPointer,None,itkImageToImageFilterIRGBUS2IRGBUS2)
itkImageToImageFilterIRGBUS2IRGBUS2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUS2_swigregister
itkImageToImageFilterIRGBUS2IRGBUS2_swigregister(itkImageToImageFilterIRGBUS2IRGBUS2)

def itkImageToImageFilterIRGBUS2IRGBUS2_cast(*args):
  """itkImageToImageFilterIRGBUS2IRGBUS2_cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS2IRGBUS2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS2IRGBUS2_cast(*args)

class itkImageToImageFilterIRGBUS3IRGBUC3(itkImageSourcePython.itkImageSourceIRGBUC3):
    """Proxy of C++ itkImageToImageFilterIRGBUS3IRGBUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUC3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUC3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBUS3 image)
        SetInput(self, unsigned int arg0, itkImageRGBUS3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUC3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBUS3
        GetInput(self, unsigned int idx) -> itkImageRGBUS3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUC3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBUS3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUC3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUC3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBUS3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUC3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUC3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIRGBUS3IRGBUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS3IRGBUC3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBUS3IRGBUC3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBUS3IRGBUC3
        
        Create a new object of the class itkImageToImageFilterIRGBUS3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBUS3IRGBUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBUS3IRGBUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBUS3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBUS3IRGBUC3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUC3_SetInput,None,itkImageToImageFilterIRGBUS3IRGBUC3)
itkImageToImageFilterIRGBUS3IRGBUC3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUC3_GetInput,None,itkImageToImageFilterIRGBUS3IRGBUC3)
itkImageToImageFilterIRGBUS3IRGBUC3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUC3_PushBackInput,None,itkImageToImageFilterIRGBUS3IRGBUC3)
itkImageToImageFilterIRGBUS3IRGBUC3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUC3_PopBackInput,None,itkImageToImageFilterIRGBUS3IRGBUC3)
itkImageToImageFilterIRGBUS3IRGBUC3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUC3_PushFrontInput,None,itkImageToImageFilterIRGBUS3IRGBUC3)
itkImageToImageFilterIRGBUS3IRGBUC3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUC3_PopFrontInput,None,itkImageToImageFilterIRGBUS3IRGBUC3)
itkImageToImageFilterIRGBUS3IRGBUC3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUC3_GetPointer,None,itkImageToImageFilterIRGBUS3IRGBUC3)
itkImageToImageFilterIRGBUS3IRGBUC3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUC3_swigregister
itkImageToImageFilterIRGBUS3IRGBUC3_swigregister(itkImageToImageFilterIRGBUS3IRGBUC3)

def itkImageToImageFilterIRGBUS3IRGBUC3_cast(*args):
  """itkImageToImageFilterIRGBUS3IRGBUC3_cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS3IRGBUC3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUC3_cast(*args)

class itkImageToImageFilterIRGBUS3IRGBUS3(itkImageSourcePython.itkImageSourceIRGBUS3):
    """Proxy of C++ itkImageToImageFilterIRGBUS3IRGBUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageRGBUS3 image)
        SetInput(self, unsigned int arg0, itkImageRGBUS3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageRGBUS3
        GetInput(self, unsigned int idx) -> itkImageRGBUS3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageRGBUS3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageRGBUS3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIRGBUS3IRGBUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS3IRGBUS3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIRGBUS3IRGBUS3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIRGBUS3IRGBUS3
        
        Create a new object of the class itkImageToImageFilterIRGBUS3IRGBUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIRGBUS3IRGBUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIRGBUS3IRGBUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIRGBUS3IRGBUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIRGBUS3IRGBUS3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUS3_SetInput,None,itkImageToImageFilterIRGBUS3IRGBUS3)
itkImageToImageFilterIRGBUS3IRGBUS3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUS3_GetInput,None,itkImageToImageFilterIRGBUS3IRGBUS3)
itkImageToImageFilterIRGBUS3IRGBUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUS3_PushBackInput,None,itkImageToImageFilterIRGBUS3IRGBUS3)
itkImageToImageFilterIRGBUS3IRGBUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUS3_PopBackInput,None,itkImageToImageFilterIRGBUS3IRGBUS3)
itkImageToImageFilterIRGBUS3IRGBUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUS3_PushFrontInput,None,itkImageToImageFilterIRGBUS3IRGBUS3)
itkImageToImageFilterIRGBUS3IRGBUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUS3_PopFrontInput,None,itkImageToImageFilterIRGBUS3IRGBUS3)
itkImageToImageFilterIRGBUS3IRGBUS3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUS3_GetPointer,None,itkImageToImageFilterIRGBUS3IRGBUS3)
itkImageToImageFilterIRGBUS3IRGBUS3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUS3_swigregister
itkImageToImageFilterIRGBUS3IRGBUS3_swigregister(itkImageToImageFilterIRGBUS3IRGBUS3)

def itkImageToImageFilterIRGBUS3IRGBUS3_cast(*args):
  """itkImageToImageFilterIRGBUS3IRGBUS3_cast(itkLightObject obj) -> itkImageToImageFilterIRGBUS3IRGBUS3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUS3IRGBUS3_cast(*args)

class itkImageToImageFilterIUC2ID2(itkImageSourcePython.itkImageSourceID2):
    """Proxy of C++ itkImageToImageFilterIUC2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC2 image)
        SetInput(self, unsigned int arg0, itkImageUC2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC2
        GetInput(self, unsigned int idx) -> itkImageUC2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC2ID2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC2ID2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC2ID2
        
        Create a new object of the class itkImageToImageFilterIUC2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC2ID2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_SetInput,None,itkImageToImageFilterIUC2ID2)
itkImageToImageFilterIUC2ID2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_GetInput,None,itkImageToImageFilterIUC2ID2)
itkImageToImageFilterIUC2ID2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_PushBackInput,None,itkImageToImageFilterIUC2ID2)
itkImageToImageFilterIUC2ID2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_PopBackInput,None,itkImageToImageFilterIUC2ID2)
itkImageToImageFilterIUC2ID2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_PushFrontInput,None,itkImageToImageFilterIUC2ID2)
itkImageToImageFilterIUC2ID2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_PopFrontInput,None,itkImageToImageFilterIUC2ID2)
itkImageToImageFilterIUC2ID2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_GetPointer,None,itkImageToImageFilterIUC2ID2)
itkImageToImageFilterIUC2ID2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_swigregister
itkImageToImageFilterIUC2ID2_swigregister(itkImageToImageFilterIUC2ID2)

def itkImageToImageFilterIUC2ID2_cast(*args):
  """itkImageToImageFilterIUC2ID2_cast(itkLightObject obj) -> itkImageToImageFilterIUC2ID2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_cast(*args)

class itkImageToImageFilterIUC2IF2(itkImageSourcePython.itkImageSourceIF2):
    """Proxy of C++ itkImageToImageFilterIUC2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC2 image)
        SetInput(self, unsigned int arg0, itkImageUC2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC2
        GetInput(self, unsigned int idx) -> itkImageUC2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC2IF2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC2IF2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC2IF2
        
        Create a new object of the class itkImageToImageFilterIUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC2IF2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_SetInput,None,itkImageToImageFilterIUC2IF2)
itkImageToImageFilterIUC2IF2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_GetInput,None,itkImageToImageFilterIUC2IF2)
itkImageToImageFilterIUC2IF2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_PushBackInput,None,itkImageToImageFilterIUC2IF2)
itkImageToImageFilterIUC2IF2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_PopBackInput,None,itkImageToImageFilterIUC2IF2)
itkImageToImageFilterIUC2IF2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_PushFrontInput,None,itkImageToImageFilterIUC2IF2)
itkImageToImageFilterIUC2IF2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_PopFrontInput,None,itkImageToImageFilterIUC2IF2)
itkImageToImageFilterIUC2IF2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_GetPointer,None,itkImageToImageFilterIUC2IF2)
itkImageToImageFilterIUC2IF2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_swigregister
itkImageToImageFilterIUC2IF2_swigregister(itkImageToImageFilterIUC2IF2)

def itkImageToImageFilterIUC2IF2_cast(*args):
  """itkImageToImageFilterIUC2IF2_cast(itkLightObject obj) -> itkImageToImageFilterIUC2IF2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_cast(*args)

class itkImageToImageFilterIUC2IUC2(itkImageSourcePython.itkImageSourceIUC2):
    """Proxy of C++ itkImageToImageFilterIUC2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC2 image)
        SetInput(self, unsigned int arg0, itkImageUC2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC2
        GetInput(self, unsigned int idx) -> itkImageUC2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC2IUC2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC2IUC2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC2IUC2
        
        Create a new object of the class itkImageToImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC2IUC2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_SetInput,None,itkImageToImageFilterIUC2IUC2)
itkImageToImageFilterIUC2IUC2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_GetInput,None,itkImageToImageFilterIUC2IUC2)
itkImageToImageFilterIUC2IUC2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_PushBackInput,None,itkImageToImageFilterIUC2IUC2)
itkImageToImageFilterIUC2IUC2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_PopBackInput,None,itkImageToImageFilterIUC2IUC2)
itkImageToImageFilterIUC2IUC2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_PushFrontInput,None,itkImageToImageFilterIUC2IUC2)
itkImageToImageFilterIUC2IUC2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_PopFrontInput,None,itkImageToImageFilterIUC2IUC2)
itkImageToImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_GetPointer,None,itkImageToImageFilterIUC2IUC2)
itkImageToImageFilterIUC2IUC2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_swigregister
itkImageToImageFilterIUC2IUC2_swigregister(itkImageToImageFilterIUC2IUC2)

def itkImageToImageFilterIUC2IUC2_cast(*args):
  """itkImageToImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkImageToImageFilterIUC2IUC2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_cast(*args)

class itkImageToImageFilterIUC2IUL2(itkImageSourcePython.itkImageSourceIUL2):
    """Proxy of C++ itkImageToImageFilterIUC2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC2 image)
        SetInput(self, unsigned int arg0, itkImageUC2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC2
        GetInput(self, unsigned int idx) -> itkImageUC2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC2IUL2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC2IUL2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC2IUL2
        
        Create a new object of the class itkImageToImageFilterIUC2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC2IUL2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_SetInput,None,itkImageToImageFilterIUC2IUL2)
itkImageToImageFilterIUC2IUL2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_GetInput,None,itkImageToImageFilterIUC2IUL2)
itkImageToImageFilterIUC2IUL2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_PushBackInput,None,itkImageToImageFilterIUC2IUL2)
itkImageToImageFilterIUC2IUL2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_PopBackInput,None,itkImageToImageFilterIUC2IUL2)
itkImageToImageFilterIUC2IUL2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_PushFrontInput,None,itkImageToImageFilterIUC2IUL2)
itkImageToImageFilterIUC2IUL2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_PopFrontInput,None,itkImageToImageFilterIUC2IUL2)
itkImageToImageFilterIUC2IUL2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_GetPointer,None,itkImageToImageFilterIUC2IUL2)
itkImageToImageFilterIUC2IUL2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_swigregister
itkImageToImageFilterIUC2IUL2_swigregister(itkImageToImageFilterIUC2IUL2)

def itkImageToImageFilterIUC2IUL2_cast(*args):
  """itkImageToImageFilterIUC2IUL2_cast(itkLightObject obj) -> itkImageToImageFilterIUC2IUL2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_cast(*args)

class itkImageToImageFilterIUC2IUS2(itkImageSourcePython.itkImageSourceIUS2):
    """Proxy of C++ itkImageToImageFilterIUC2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC2 image)
        SetInput(self, unsigned int arg0, itkImageUC2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC2
        GetInput(self, unsigned int idx) -> itkImageUC2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC2IUS2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC2IUS2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC2IUS2
        
        Create a new object of the class itkImageToImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC2IUS2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_SetInput,None,itkImageToImageFilterIUC2IUS2)
itkImageToImageFilterIUC2IUS2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_GetInput,None,itkImageToImageFilterIUC2IUS2)
itkImageToImageFilterIUC2IUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_PushBackInput,None,itkImageToImageFilterIUC2IUS2)
itkImageToImageFilterIUC2IUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_PopBackInput,None,itkImageToImageFilterIUC2IUS2)
itkImageToImageFilterIUC2IUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_PushFrontInput,None,itkImageToImageFilterIUC2IUS2)
itkImageToImageFilterIUC2IUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_PopFrontInput,None,itkImageToImageFilterIUC2IUS2)
itkImageToImageFilterIUC2IUS2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_GetPointer,None,itkImageToImageFilterIUC2IUS2)
itkImageToImageFilterIUC2IUS2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_swigregister
itkImageToImageFilterIUC2IUS2_swigregister(itkImageToImageFilterIUC2IUS2)

def itkImageToImageFilterIUC2IUS2_cast(*args):
  """itkImageToImageFilterIUC2IUS2_cast(itkLightObject obj) -> itkImageToImageFilterIUC2IUS2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_cast(*args)

class itkImageToImageFilterIUC3ID3(itkImageSourcePython.itkImageSourceID3):
    """Proxy of C++ itkImageToImageFilterIUC3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC3 image)
        SetInput(self, unsigned int arg0, itkImageUC3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC3
        GetInput(self, unsigned int idx) -> itkImageUC3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC3ID3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC3ID3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC3ID3
        
        Create a new object of the class itkImageToImageFilterIUC3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC3ID3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_SetInput,None,itkImageToImageFilterIUC3ID3)
itkImageToImageFilterIUC3ID3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_GetInput,None,itkImageToImageFilterIUC3ID3)
itkImageToImageFilterIUC3ID3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_PushBackInput,None,itkImageToImageFilterIUC3ID3)
itkImageToImageFilterIUC3ID3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_PopBackInput,None,itkImageToImageFilterIUC3ID3)
itkImageToImageFilterIUC3ID3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_PushFrontInput,None,itkImageToImageFilterIUC3ID3)
itkImageToImageFilterIUC3ID3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_PopFrontInput,None,itkImageToImageFilterIUC3ID3)
itkImageToImageFilterIUC3ID3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_GetPointer,None,itkImageToImageFilterIUC3ID3)
itkImageToImageFilterIUC3ID3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_swigregister
itkImageToImageFilterIUC3ID3_swigregister(itkImageToImageFilterIUC3ID3)

def itkImageToImageFilterIUC3ID3_cast(*args):
  """itkImageToImageFilterIUC3ID3_cast(itkLightObject obj) -> itkImageToImageFilterIUC3ID3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_cast(*args)

class itkImageToImageFilterIUC3IF3(itkImageSourcePython.itkImageSourceIF3):
    """Proxy of C++ itkImageToImageFilterIUC3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC3 image)
        SetInput(self, unsigned int arg0, itkImageUC3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC3
        GetInput(self, unsigned int idx) -> itkImageUC3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC3IF3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC3IF3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC3IF3
        
        Create a new object of the class itkImageToImageFilterIUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC3IF3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_SetInput,None,itkImageToImageFilterIUC3IF3)
itkImageToImageFilterIUC3IF3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_GetInput,None,itkImageToImageFilterIUC3IF3)
itkImageToImageFilterIUC3IF3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_PushBackInput,None,itkImageToImageFilterIUC3IF3)
itkImageToImageFilterIUC3IF3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_PopBackInput,None,itkImageToImageFilterIUC3IF3)
itkImageToImageFilterIUC3IF3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_PushFrontInput,None,itkImageToImageFilterIUC3IF3)
itkImageToImageFilterIUC3IF3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_PopFrontInput,None,itkImageToImageFilterIUC3IF3)
itkImageToImageFilterIUC3IF3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_GetPointer,None,itkImageToImageFilterIUC3IF3)
itkImageToImageFilterIUC3IF3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_swigregister
itkImageToImageFilterIUC3IF3_swigregister(itkImageToImageFilterIUC3IF3)

def itkImageToImageFilterIUC3IF3_cast(*args):
  """itkImageToImageFilterIUC3IF3_cast(itkLightObject obj) -> itkImageToImageFilterIUC3IF3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_cast(*args)

class itkImageToImageFilterIUC3IUC3(itkImageSourcePython.itkImageSourceIUC3):
    """Proxy of C++ itkImageToImageFilterIUC3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC3 image)
        SetInput(self, unsigned int arg0, itkImageUC3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC3
        GetInput(self, unsigned int idx) -> itkImageUC3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC3IUC3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC3IUC3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC3IUC3
        
        Create a new object of the class itkImageToImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC3IUC3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_SetInput,None,itkImageToImageFilterIUC3IUC3)
itkImageToImageFilterIUC3IUC3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_GetInput,None,itkImageToImageFilterIUC3IUC3)
itkImageToImageFilterIUC3IUC3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_PushBackInput,None,itkImageToImageFilterIUC3IUC3)
itkImageToImageFilterIUC3IUC3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_PopBackInput,None,itkImageToImageFilterIUC3IUC3)
itkImageToImageFilterIUC3IUC3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_PushFrontInput,None,itkImageToImageFilterIUC3IUC3)
itkImageToImageFilterIUC3IUC3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_PopFrontInput,None,itkImageToImageFilterIUC3IUC3)
itkImageToImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_GetPointer,None,itkImageToImageFilterIUC3IUC3)
itkImageToImageFilterIUC3IUC3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_swigregister
itkImageToImageFilterIUC3IUC3_swigregister(itkImageToImageFilterIUC3IUC3)

def itkImageToImageFilterIUC3IUC3_cast(*args):
  """itkImageToImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkImageToImageFilterIUC3IUC3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_cast(*args)

class itkImageToImageFilterIUC3IUL3(itkImageSourcePython.itkImageSourceIUL3):
    """Proxy of C++ itkImageToImageFilterIUC3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC3 image)
        SetInput(self, unsigned int arg0, itkImageUC3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC3
        GetInput(self, unsigned int idx) -> itkImageUC3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC3IUL3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC3IUL3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC3IUL3
        
        Create a new object of the class itkImageToImageFilterIUC3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC3IUL3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_SetInput,None,itkImageToImageFilterIUC3IUL3)
itkImageToImageFilterIUC3IUL3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_GetInput,None,itkImageToImageFilterIUC3IUL3)
itkImageToImageFilterIUC3IUL3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_PushBackInput,None,itkImageToImageFilterIUC3IUL3)
itkImageToImageFilterIUC3IUL3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_PopBackInput,None,itkImageToImageFilterIUC3IUL3)
itkImageToImageFilterIUC3IUL3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_PushFrontInput,None,itkImageToImageFilterIUC3IUL3)
itkImageToImageFilterIUC3IUL3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_PopFrontInput,None,itkImageToImageFilterIUC3IUL3)
itkImageToImageFilterIUC3IUL3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_GetPointer,None,itkImageToImageFilterIUC3IUL3)
itkImageToImageFilterIUC3IUL3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_swigregister
itkImageToImageFilterIUC3IUL3_swigregister(itkImageToImageFilterIUC3IUL3)

def itkImageToImageFilterIUC3IUL3_cast(*args):
  """itkImageToImageFilterIUC3IUL3_cast(itkLightObject obj) -> itkImageToImageFilterIUC3IUL3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_cast(*args)

class itkImageToImageFilterIUC3IUS3(itkImageSourcePython.itkImageSourceIUS3):
    """Proxy of C++ itkImageToImageFilterIUC3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUC3 image)
        SetInput(self, unsigned int arg0, itkImageUC3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUC3
        GetInput(self, unsigned int idx) -> itkImageUC3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUC3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUC3IUS3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUC3IUS3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUC3IUS3
        
        Create a new object of the class itkImageToImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUC3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUC3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUC3IUS3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_SetInput,None,itkImageToImageFilterIUC3IUS3)
itkImageToImageFilterIUC3IUS3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_GetInput,None,itkImageToImageFilterIUC3IUS3)
itkImageToImageFilterIUC3IUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_PushBackInput,None,itkImageToImageFilterIUC3IUS3)
itkImageToImageFilterIUC3IUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_PopBackInput,None,itkImageToImageFilterIUC3IUS3)
itkImageToImageFilterIUC3IUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_PushFrontInput,None,itkImageToImageFilterIUC3IUS3)
itkImageToImageFilterIUC3IUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_PopFrontInput,None,itkImageToImageFilterIUC3IUS3)
itkImageToImageFilterIUC3IUS3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_GetPointer,None,itkImageToImageFilterIUC3IUS3)
itkImageToImageFilterIUC3IUS3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_swigregister
itkImageToImageFilterIUC3IUS3_swigregister(itkImageToImageFilterIUC3IUS3)

def itkImageToImageFilterIUC3IUS3_cast(*args):
  """itkImageToImageFilterIUC3IUS3_cast(itkLightObject obj) -> itkImageToImageFilterIUC3IUS3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_cast(*args)

class itkImageToImageFilterIUL2ID2(itkImageSourcePython.itkImageSourceID2):
    """Proxy of C++ itkImageToImageFilterIUL2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL2 image)
        SetInput(self, unsigned int arg0, itkImageUL2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL2
        GetInput(self, unsigned int idx) -> itkImageUL2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL2ID2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL2ID2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL2ID2
        
        Create a new object of the class itkImageToImageFilterIUL2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL2ID2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_SetInput,None,itkImageToImageFilterIUL2ID2)
itkImageToImageFilterIUL2ID2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_GetInput,None,itkImageToImageFilterIUL2ID2)
itkImageToImageFilterIUL2ID2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_PushBackInput,None,itkImageToImageFilterIUL2ID2)
itkImageToImageFilterIUL2ID2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_PopBackInput,None,itkImageToImageFilterIUL2ID2)
itkImageToImageFilterIUL2ID2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_PushFrontInput,None,itkImageToImageFilterIUL2ID2)
itkImageToImageFilterIUL2ID2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_PopFrontInput,None,itkImageToImageFilterIUL2ID2)
itkImageToImageFilterIUL2ID2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_GetPointer,None,itkImageToImageFilterIUL2ID2)
itkImageToImageFilterIUL2ID2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_swigregister
itkImageToImageFilterIUL2ID2_swigregister(itkImageToImageFilterIUL2ID2)

def itkImageToImageFilterIUL2ID2_cast(*args):
  """itkImageToImageFilterIUL2ID2_cast(itkLightObject obj) -> itkImageToImageFilterIUL2ID2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_cast(*args)

class itkImageToImageFilterIUL2IF2(itkImageSourcePython.itkImageSourceIF2):
    """Proxy of C++ itkImageToImageFilterIUL2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL2 image)
        SetInput(self, unsigned int arg0, itkImageUL2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL2
        GetInput(self, unsigned int idx) -> itkImageUL2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL2IF2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL2IF2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL2IF2
        
        Create a new object of the class itkImageToImageFilterIUL2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL2IF2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_SetInput,None,itkImageToImageFilterIUL2IF2)
itkImageToImageFilterIUL2IF2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_GetInput,None,itkImageToImageFilterIUL2IF2)
itkImageToImageFilterIUL2IF2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_PushBackInput,None,itkImageToImageFilterIUL2IF2)
itkImageToImageFilterIUL2IF2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_PopBackInput,None,itkImageToImageFilterIUL2IF2)
itkImageToImageFilterIUL2IF2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_PushFrontInput,None,itkImageToImageFilterIUL2IF2)
itkImageToImageFilterIUL2IF2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_PopFrontInput,None,itkImageToImageFilterIUL2IF2)
itkImageToImageFilterIUL2IF2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_GetPointer,None,itkImageToImageFilterIUL2IF2)
itkImageToImageFilterIUL2IF2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_swigregister
itkImageToImageFilterIUL2IF2_swigregister(itkImageToImageFilterIUL2IF2)

def itkImageToImageFilterIUL2IF2_cast(*args):
  """itkImageToImageFilterIUL2IF2_cast(itkLightObject obj) -> itkImageToImageFilterIUL2IF2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_cast(*args)

class itkImageToImageFilterIUL2IUC2(itkImageSourcePython.itkImageSourceIUC2):
    """Proxy of C++ itkImageToImageFilterIUL2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL2 image)
        SetInput(self, unsigned int arg0, itkImageUL2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL2
        GetInput(self, unsigned int idx) -> itkImageUL2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL2IUC2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL2IUC2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL2IUC2
        
        Create a new object of the class itkImageToImageFilterIUL2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL2IUC2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_SetInput,None,itkImageToImageFilterIUL2IUC2)
itkImageToImageFilterIUL2IUC2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_GetInput,None,itkImageToImageFilterIUL2IUC2)
itkImageToImageFilterIUL2IUC2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_PushBackInput,None,itkImageToImageFilterIUL2IUC2)
itkImageToImageFilterIUL2IUC2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_PopBackInput,None,itkImageToImageFilterIUL2IUC2)
itkImageToImageFilterIUL2IUC2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_PushFrontInput,None,itkImageToImageFilterIUL2IUC2)
itkImageToImageFilterIUL2IUC2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_PopFrontInput,None,itkImageToImageFilterIUL2IUC2)
itkImageToImageFilterIUL2IUC2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_GetPointer,None,itkImageToImageFilterIUL2IUC2)
itkImageToImageFilterIUL2IUC2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_swigregister
itkImageToImageFilterIUL2IUC2_swigregister(itkImageToImageFilterIUL2IUC2)

def itkImageToImageFilterIUL2IUC2_cast(*args):
  """itkImageToImageFilterIUL2IUC2_cast(itkLightObject obj) -> itkImageToImageFilterIUL2IUC2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_cast(*args)

class itkImageToImageFilterIUL2IUL2(itkImageSourcePython.itkImageSourceIUL2):
    """Proxy of C++ itkImageToImageFilterIUL2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL2 image)
        SetInput(self, unsigned int arg0, itkImageUL2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL2
        GetInput(self, unsigned int idx) -> itkImageUL2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL2IUL2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL2IUL2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL2IUL2
        
        Create a new object of the class itkImageToImageFilterIUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL2IUL2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_SetInput,None,itkImageToImageFilterIUL2IUL2)
itkImageToImageFilterIUL2IUL2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_GetInput,None,itkImageToImageFilterIUL2IUL2)
itkImageToImageFilterIUL2IUL2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_PushBackInput,None,itkImageToImageFilterIUL2IUL2)
itkImageToImageFilterIUL2IUL2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_PopBackInput,None,itkImageToImageFilterIUL2IUL2)
itkImageToImageFilterIUL2IUL2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_PushFrontInput,None,itkImageToImageFilterIUL2IUL2)
itkImageToImageFilterIUL2IUL2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_PopFrontInput,None,itkImageToImageFilterIUL2IUL2)
itkImageToImageFilterIUL2IUL2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_GetPointer,None,itkImageToImageFilterIUL2IUL2)
itkImageToImageFilterIUL2IUL2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_swigregister
itkImageToImageFilterIUL2IUL2_swigregister(itkImageToImageFilterIUL2IUL2)

def itkImageToImageFilterIUL2IUL2_cast(*args):
  """itkImageToImageFilterIUL2IUL2_cast(itkLightObject obj) -> itkImageToImageFilterIUL2IUL2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_cast(*args)

class itkImageToImageFilterIUL2IUS2(itkImageSourcePython.itkImageSourceIUS2):
    """Proxy of C++ itkImageToImageFilterIUL2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL2 image)
        SetInput(self, unsigned int arg0, itkImageUL2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL2
        GetInput(self, unsigned int idx) -> itkImageUL2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL2IUS2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL2IUS2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL2IUS2
        
        Create a new object of the class itkImageToImageFilterIUL2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL2IUS2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_SetInput,None,itkImageToImageFilterIUL2IUS2)
itkImageToImageFilterIUL2IUS2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_GetInput,None,itkImageToImageFilterIUL2IUS2)
itkImageToImageFilterIUL2IUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_PushBackInput,None,itkImageToImageFilterIUL2IUS2)
itkImageToImageFilterIUL2IUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_PopBackInput,None,itkImageToImageFilterIUL2IUS2)
itkImageToImageFilterIUL2IUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_PushFrontInput,None,itkImageToImageFilterIUL2IUS2)
itkImageToImageFilterIUL2IUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_PopFrontInput,None,itkImageToImageFilterIUL2IUS2)
itkImageToImageFilterIUL2IUS2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_GetPointer,None,itkImageToImageFilterIUL2IUS2)
itkImageToImageFilterIUL2IUS2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_swigregister
itkImageToImageFilterIUL2IUS2_swigregister(itkImageToImageFilterIUL2IUS2)

def itkImageToImageFilterIUL2IUS2_cast(*args):
  """itkImageToImageFilterIUL2IUS2_cast(itkLightObject obj) -> itkImageToImageFilterIUL2IUS2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_cast(*args)

class itkImageToImageFilterIUL3ID3(itkImageSourcePython.itkImageSourceID3):
    """Proxy of C++ itkImageToImageFilterIUL3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL3 image)
        SetInput(self, unsigned int arg0, itkImageUL3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL3
        GetInput(self, unsigned int idx) -> itkImageUL3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL3ID3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL3ID3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL3ID3
        
        Create a new object of the class itkImageToImageFilterIUL3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL3ID3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_SetInput,None,itkImageToImageFilterIUL3ID3)
itkImageToImageFilterIUL3ID3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_GetInput,None,itkImageToImageFilterIUL3ID3)
itkImageToImageFilterIUL3ID3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_PushBackInput,None,itkImageToImageFilterIUL3ID3)
itkImageToImageFilterIUL3ID3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_PopBackInput,None,itkImageToImageFilterIUL3ID3)
itkImageToImageFilterIUL3ID3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_PushFrontInput,None,itkImageToImageFilterIUL3ID3)
itkImageToImageFilterIUL3ID3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_PopFrontInput,None,itkImageToImageFilterIUL3ID3)
itkImageToImageFilterIUL3ID3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_GetPointer,None,itkImageToImageFilterIUL3ID3)
itkImageToImageFilterIUL3ID3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_swigregister
itkImageToImageFilterIUL3ID3_swigregister(itkImageToImageFilterIUL3ID3)

def itkImageToImageFilterIUL3ID3_cast(*args):
  """itkImageToImageFilterIUL3ID3_cast(itkLightObject obj) -> itkImageToImageFilterIUL3ID3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_cast(*args)

class itkImageToImageFilterIUL3IF3(itkImageSourcePython.itkImageSourceIF3):
    """Proxy of C++ itkImageToImageFilterIUL3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL3 image)
        SetInput(self, unsigned int arg0, itkImageUL3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL3
        GetInput(self, unsigned int idx) -> itkImageUL3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL3IF3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL3IF3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL3IF3
        
        Create a new object of the class itkImageToImageFilterIUL3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL3IF3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_SetInput,None,itkImageToImageFilterIUL3IF3)
itkImageToImageFilterIUL3IF3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_GetInput,None,itkImageToImageFilterIUL3IF3)
itkImageToImageFilterIUL3IF3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_PushBackInput,None,itkImageToImageFilterIUL3IF3)
itkImageToImageFilterIUL3IF3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_PopBackInput,None,itkImageToImageFilterIUL3IF3)
itkImageToImageFilterIUL3IF3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_PushFrontInput,None,itkImageToImageFilterIUL3IF3)
itkImageToImageFilterIUL3IF3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_PopFrontInput,None,itkImageToImageFilterIUL3IF3)
itkImageToImageFilterIUL3IF3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_GetPointer,None,itkImageToImageFilterIUL3IF3)
itkImageToImageFilterIUL3IF3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_swigregister
itkImageToImageFilterIUL3IF3_swigregister(itkImageToImageFilterIUL3IF3)

def itkImageToImageFilterIUL3IF3_cast(*args):
  """itkImageToImageFilterIUL3IF3_cast(itkLightObject obj) -> itkImageToImageFilterIUL3IF3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_cast(*args)

class itkImageToImageFilterIUL3IUC3(itkImageSourcePython.itkImageSourceIUC3):
    """Proxy of C++ itkImageToImageFilterIUL3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL3 image)
        SetInput(self, unsigned int arg0, itkImageUL3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL3
        GetInput(self, unsigned int idx) -> itkImageUL3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL3IUC3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL3IUC3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL3IUC3
        
        Create a new object of the class itkImageToImageFilterIUL3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL3IUC3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_SetInput,None,itkImageToImageFilterIUL3IUC3)
itkImageToImageFilterIUL3IUC3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_GetInput,None,itkImageToImageFilterIUL3IUC3)
itkImageToImageFilterIUL3IUC3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_PushBackInput,None,itkImageToImageFilterIUL3IUC3)
itkImageToImageFilterIUL3IUC3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_PopBackInput,None,itkImageToImageFilterIUL3IUC3)
itkImageToImageFilterIUL3IUC3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_PushFrontInput,None,itkImageToImageFilterIUL3IUC3)
itkImageToImageFilterIUL3IUC3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_PopFrontInput,None,itkImageToImageFilterIUL3IUC3)
itkImageToImageFilterIUL3IUC3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_GetPointer,None,itkImageToImageFilterIUL3IUC3)
itkImageToImageFilterIUL3IUC3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_swigregister
itkImageToImageFilterIUL3IUC3_swigregister(itkImageToImageFilterIUL3IUC3)

def itkImageToImageFilterIUL3IUC3_cast(*args):
  """itkImageToImageFilterIUL3IUC3_cast(itkLightObject obj) -> itkImageToImageFilterIUL3IUC3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_cast(*args)

class itkImageToImageFilterIUL3IUL3(itkImageSourcePython.itkImageSourceIUL3):
    """Proxy of C++ itkImageToImageFilterIUL3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL3 image)
        SetInput(self, unsigned int arg0, itkImageUL3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL3
        GetInput(self, unsigned int idx) -> itkImageUL3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL3IUL3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL3IUL3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL3IUL3
        
        Create a new object of the class itkImageToImageFilterIUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL3IUL3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_SetInput,None,itkImageToImageFilterIUL3IUL3)
itkImageToImageFilterIUL3IUL3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_GetInput,None,itkImageToImageFilterIUL3IUL3)
itkImageToImageFilterIUL3IUL3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_PushBackInput,None,itkImageToImageFilterIUL3IUL3)
itkImageToImageFilterIUL3IUL3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_PopBackInput,None,itkImageToImageFilterIUL3IUL3)
itkImageToImageFilterIUL3IUL3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_PushFrontInput,None,itkImageToImageFilterIUL3IUL3)
itkImageToImageFilterIUL3IUL3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_PopFrontInput,None,itkImageToImageFilterIUL3IUL3)
itkImageToImageFilterIUL3IUL3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_GetPointer,None,itkImageToImageFilterIUL3IUL3)
itkImageToImageFilterIUL3IUL3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_swigregister
itkImageToImageFilterIUL3IUL3_swigregister(itkImageToImageFilterIUL3IUL3)

def itkImageToImageFilterIUL3IUL3_cast(*args):
  """itkImageToImageFilterIUL3IUL3_cast(itkLightObject obj) -> itkImageToImageFilterIUL3IUL3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_cast(*args)

class itkImageToImageFilterIUL3IUS3(itkImageSourcePython.itkImageSourceIUS3):
    """Proxy of C++ itkImageToImageFilterIUL3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUL3 image)
        SetInput(self, unsigned int arg0, itkImageUL3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUL3
        GetInput(self, unsigned int idx) -> itkImageUL3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUL3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUL3IUS3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUL3IUS3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUL3IUS3
        
        Create a new object of the class itkImageToImageFilterIUL3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUL3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUL3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUL3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUL3IUS3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_SetInput,None,itkImageToImageFilterIUL3IUS3)
itkImageToImageFilterIUL3IUS3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_GetInput,None,itkImageToImageFilterIUL3IUS3)
itkImageToImageFilterIUL3IUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_PushBackInput,None,itkImageToImageFilterIUL3IUS3)
itkImageToImageFilterIUL3IUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_PopBackInput,None,itkImageToImageFilterIUL3IUS3)
itkImageToImageFilterIUL3IUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_PushFrontInput,None,itkImageToImageFilterIUL3IUS3)
itkImageToImageFilterIUL3IUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_PopFrontInput,None,itkImageToImageFilterIUL3IUS3)
itkImageToImageFilterIUL3IUS3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_GetPointer,None,itkImageToImageFilterIUL3IUS3)
itkImageToImageFilterIUL3IUS3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_swigregister
itkImageToImageFilterIUL3IUS3_swigregister(itkImageToImageFilterIUL3IUS3)

def itkImageToImageFilterIUL3IUS3_cast(*args):
  """itkImageToImageFilterIUL3IUS3_cast(itkLightObject obj) -> itkImageToImageFilterIUL3IUS3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_cast(*args)

class itkImageToImageFilterIUS2ID2(itkImageSourcePython.itkImageSourceID2):
    """Proxy of C++ itkImageToImageFilterIUS2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS2 image)
        SetInput(self, unsigned int arg0, itkImageUS2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS2
        GetInput(self, unsigned int idx) -> itkImageUS2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS2ID2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS2ID2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS2ID2
        
        Create a new object of the class itkImageToImageFilterIUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS2ID2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_SetInput,None,itkImageToImageFilterIUS2ID2)
itkImageToImageFilterIUS2ID2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_GetInput,None,itkImageToImageFilterIUS2ID2)
itkImageToImageFilterIUS2ID2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_PushBackInput,None,itkImageToImageFilterIUS2ID2)
itkImageToImageFilterIUS2ID2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_PopBackInput,None,itkImageToImageFilterIUS2ID2)
itkImageToImageFilterIUS2ID2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_PushFrontInput,None,itkImageToImageFilterIUS2ID2)
itkImageToImageFilterIUS2ID2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_PopFrontInput,None,itkImageToImageFilterIUS2ID2)
itkImageToImageFilterIUS2ID2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_GetPointer,None,itkImageToImageFilterIUS2ID2)
itkImageToImageFilterIUS2ID2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_swigregister
itkImageToImageFilterIUS2ID2_swigregister(itkImageToImageFilterIUS2ID2)

def itkImageToImageFilterIUS2ID2_cast(*args):
  """itkImageToImageFilterIUS2ID2_cast(itkLightObject obj) -> itkImageToImageFilterIUS2ID2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_cast(*args)

class itkImageToImageFilterIUS2IF2(itkImageSourcePython.itkImageSourceIF2):
    """Proxy of C++ itkImageToImageFilterIUS2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS2 image)
        SetInput(self, unsigned int arg0, itkImageUS2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS2
        GetInput(self, unsigned int idx) -> itkImageUS2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS2IF2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS2IF2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS2IF2
        
        Create a new object of the class itkImageToImageFilterIUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS2IF2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_SetInput,None,itkImageToImageFilterIUS2IF2)
itkImageToImageFilterIUS2IF2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_GetInput,None,itkImageToImageFilterIUS2IF2)
itkImageToImageFilterIUS2IF2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_PushBackInput,None,itkImageToImageFilterIUS2IF2)
itkImageToImageFilterIUS2IF2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_PopBackInput,None,itkImageToImageFilterIUS2IF2)
itkImageToImageFilterIUS2IF2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_PushFrontInput,None,itkImageToImageFilterIUS2IF2)
itkImageToImageFilterIUS2IF2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_PopFrontInput,None,itkImageToImageFilterIUS2IF2)
itkImageToImageFilterIUS2IF2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_GetPointer,None,itkImageToImageFilterIUS2IF2)
itkImageToImageFilterIUS2IF2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_swigregister
itkImageToImageFilterIUS2IF2_swigregister(itkImageToImageFilterIUS2IF2)

def itkImageToImageFilterIUS2IF2_cast(*args):
  """itkImageToImageFilterIUS2IF2_cast(itkLightObject obj) -> itkImageToImageFilterIUS2IF2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_cast(*args)

class itkImageToImageFilterIUS2IUC2(itkImageSourcePython.itkImageSourceIUC2):
    """Proxy of C++ itkImageToImageFilterIUS2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS2 image)
        SetInput(self, unsigned int arg0, itkImageUS2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS2
        GetInput(self, unsigned int idx) -> itkImageUS2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS2IUC2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS2IUC2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS2IUC2
        
        Create a new object of the class itkImageToImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS2IUC2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_SetInput,None,itkImageToImageFilterIUS2IUC2)
itkImageToImageFilterIUS2IUC2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_GetInput,None,itkImageToImageFilterIUS2IUC2)
itkImageToImageFilterIUS2IUC2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_PushBackInput,None,itkImageToImageFilterIUS2IUC2)
itkImageToImageFilterIUS2IUC2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_PopBackInput,None,itkImageToImageFilterIUS2IUC2)
itkImageToImageFilterIUS2IUC2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_PushFrontInput,None,itkImageToImageFilterIUS2IUC2)
itkImageToImageFilterIUS2IUC2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_PopFrontInput,None,itkImageToImageFilterIUS2IUC2)
itkImageToImageFilterIUS2IUC2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_GetPointer,None,itkImageToImageFilterIUS2IUC2)
itkImageToImageFilterIUS2IUC2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_swigregister
itkImageToImageFilterIUS2IUC2_swigregister(itkImageToImageFilterIUS2IUC2)

def itkImageToImageFilterIUS2IUC2_cast(*args):
  """itkImageToImageFilterIUS2IUC2_cast(itkLightObject obj) -> itkImageToImageFilterIUS2IUC2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_cast(*args)

class itkImageToImageFilterIUS2IUL2(itkImageSourcePython.itkImageSourceIUL2):
    """Proxy of C++ itkImageToImageFilterIUS2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS2 image)
        SetInput(self, unsigned int arg0, itkImageUS2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS2
        GetInput(self, unsigned int idx) -> itkImageUS2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS2IUL2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS2IUL2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS2IUL2
        
        Create a new object of the class itkImageToImageFilterIUS2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS2IUL2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_SetInput,None,itkImageToImageFilterIUS2IUL2)
itkImageToImageFilterIUS2IUL2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_GetInput,None,itkImageToImageFilterIUS2IUL2)
itkImageToImageFilterIUS2IUL2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_PushBackInput,None,itkImageToImageFilterIUS2IUL2)
itkImageToImageFilterIUS2IUL2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_PopBackInput,None,itkImageToImageFilterIUS2IUL2)
itkImageToImageFilterIUS2IUL2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_PushFrontInput,None,itkImageToImageFilterIUS2IUL2)
itkImageToImageFilterIUS2IUL2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_PopFrontInput,None,itkImageToImageFilterIUS2IUL2)
itkImageToImageFilterIUS2IUL2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_GetPointer,None,itkImageToImageFilterIUS2IUL2)
itkImageToImageFilterIUS2IUL2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_swigregister
itkImageToImageFilterIUS2IUL2_swigregister(itkImageToImageFilterIUS2IUL2)

def itkImageToImageFilterIUS2IUL2_cast(*args):
  """itkImageToImageFilterIUS2IUL2_cast(itkLightObject obj) -> itkImageToImageFilterIUS2IUL2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_cast(*args)

class itkImageToImageFilterIUS2IUS2(itkImageSourcePython.itkImageSourceIUS2):
    """Proxy of C++ itkImageToImageFilterIUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS2 image)
        SetInput(self, unsigned int arg0, itkImageUS2 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS2
        GetInput(self, unsigned int idx) -> itkImageUS2
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS2 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS2IUS2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS2IUS2"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS2IUS2
        
        Create a new object of the class itkImageToImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS2IUS2.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_SetInput,None,itkImageToImageFilterIUS2IUS2)
itkImageToImageFilterIUS2IUS2.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_GetInput,None,itkImageToImageFilterIUS2IUS2)
itkImageToImageFilterIUS2IUS2.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_PushBackInput,None,itkImageToImageFilterIUS2IUS2)
itkImageToImageFilterIUS2IUS2.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_PopBackInput,None,itkImageToImageFilterIUS2IUS2)
itkImageToImageFilterIUS2IUS2.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_PushFrontInput,None,itkImageToImageFilterIUS2IUS2)
itkImageToImageFilterIUS2IUS2.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_PopFrontInput,None,itkImageToImageFilterIUS2IUS2)
itkImageToImageFilterIUS2IUS2.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_GetPointer,None,itkImageToImageFilterIUS2IUS2)
itkImageToImageFilterIUS2IUS2_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_swigregister
itkImageToImageFilterIUS2IUS2_swigregister(itkImageToImageFilterIUS2IUS2)

def itkImageToImageFilterIUS2IUS2_cast(*args):
  """itkImageToImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkImageToImageFilterIUS2IUS2"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_cast(*args)

class itkImageToImageFilterIUS3ID3(itkImageSourcePython.itkImageSourceID3):
    """Proxy of C++ itkImageToImageFilterIUS3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS3 image)
        SetInput(self, unsigned int arg0, itkImageUS3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS3
        GetInput(self, unsigned int idx) -> itkImageUS3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS3ID3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS3ID3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS3ID3
        
        Create a new object of the class itkImageToImageFilterIUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS3ID3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_SetInput,None,itkImageToImageFilterIUS3ID3)
itkImageToImageFilterIUS3ID3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_GetInput,None,itkImageToImageFilterIUS3ID3)
itkImageToImageFilterIUS3ID3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_PushBackInput,None,itkImageToImageFilterIUS3ID3)
itkImageToImageFilterIUS3ID3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_PopBackInput,None,itkImageToImageFilterIUS3ID3)
itkImageToImageFilterIUS3ID3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_PushFrontInput,None,itkImageToImageFilterIUS3ID3)
itkImageToImageFilterIUS3ID3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_PopFrontInput,None,itkImageToImageFilterIUS3ID3)
itkImageToImageFilterIUS3ID3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_GetPointer,None,itkImageToImageFilterIUS3ID3)
itkImageToImageFilterIUS3ID3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_swigregister
itkImageToImageFilterIUS3ID3_swigregister(itkImageToImageFilterIUS3ID3)

def itkImageToImageFilterIUS3ID3_cast(*args):
  """itkImageToImageFilterIUS3ID3_cast(itkLightObject obj) -> itkImageToImageFilterIUS3ID3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_cast(*args)

class itkImageToImageFilterIUS3IF3(itkImageSourcePython.itkImageSourceIF3):
    """Proxy of C++ itkImageToImageFilterIUS3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS3 image)
        SetInput(self, unsigned int arg0, itkImageUS3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS3
        GetInput(self, unsigned int idx) -> itkImageUS3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS3IF3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS3IF3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS3IF3
        
        Create a new object of the class itkImageToImageFilterIUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS3IF3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_SetInput,None,itkImageToImageFilterIUS3IF3)
itkImageToImageFilterIUS3IF3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_GetInput,None,itkImageToImageFilterIUS3IF3)
itkImageToImageFilterIUS3IF3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_PushBackInput,None,itkImageToImageFilterIUS3IF3)
itkImageToImageFilterIUS3IF3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_PopBackInput,None,itkImageToImageFilterIUS3IF3)
itkImageToImageFilterIUS3IF3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_PushFrontInput,None,itkImageToImageFilterIUS3IF3)
itkImageToImageFilterIUS3IF3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_PopFrontInput,None,itkImageToImageFilterIUS3IF3)
itkImageToImageFilterIUS3IF3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_GetPointer,None,itkImageToImageFilterIUS3IF3)
itkImageToImageFilterIUS3IF3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_swigregister
itkImageToImageFilterIUS3IF3_swigregister(itkImageToImageFilterIUS3IF3)

def itkImageToImageFilterIUS3IF3_cast(*args):
  """itkImageToImageFilterIUS3IF3_cast(itkLightObject obj) -> itkImageToImageFilterIUS3IF3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_cast(*args)

class itkImageToImageFilterIUS3IUC3(itkImageSourcePython.itkImageSourceIUC3):
    """Proxy of C++ itkImageToImageFilterIUS3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS3 image)
        SetInput(self, unsigned int arg0, itkImageUS3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS3
        GetInput(self, unsigned int idx) -> itkImageUS3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS3IUC3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS3IUC3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS3IUC3
        
        Create a new object of the class itkImageToImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS3IUC3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_SetInput,None,itkImageToImageFilterIUS3IUC3)
itkImageToImageFilterIUS3IUC3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_GetInput,None,itkImageToImageFilterIUS3IUC3)
itkImageToImageFilterIUS3IUC3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_PushBackInput,None,itkImageToImageFilterIUS3IUC3)
itkImageToImageFilterIUS3IUC3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_PopBackInput,None,itkImageToImageFilterIUS3IUC3)
itkImageToImageFilterIUS3IUC3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_PushFrontInput,None,itkImageToImageFilterIUS3IUC3)
itkImageToImageFilterIUS3IUC3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_PopFrontInput,None,itkImageToImageFilterIUS3IUC3)
itkImageToImageFilterIUS3IUC3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_GetPointer,None,itkImageToImageFilterIUS3IUC3)
itkImageToImageFilterIUS3IUC3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_swigregister
itkImageToImageFilterIUS3IUC3_swigregister(itkImageToImageFilterIUS3IUC3)

def itkImageToImageFilterIUS3IUC3_cast(*args):
  """itkImageToImageFilterIUS3IUC3_cast(itkLightObject obj) -> itkImageToImageFilterIUS3IUC3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_cast(*args)

class itkImageToImageFilterIUS3IUL3(itkImageSourcePython.itkImageSourceIUL3):
    """Proxy of C++ itkImageToImageFilterIUS3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS3 image)
        SetInput(self, unsigned int arg0, itkImageUS3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS3
        GetInput(self, unsigned int idx) -> itkImageUS3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS3IUL3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS3IUL3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS3IUL3
        
        Create a new object of the class itkImageToImageFilterIUS3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS3IUL3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_SetInput,None,itkImageToImageFilterIUS3IUL3)
itkImageToImageFilterIUS3IUL3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_GetInput,None,itkImageToImageFilterIUS3IUL3)
itkImageToImageFilterIUS3IUL3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_PushBackInput,None,itkImageToImageFilterIUS3IUL3)
itkImageToImageFilterIUS3IUL3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_PopBackInput,None,itkImageToImageFilterIUS3IUL3)
itkImageToImageFilterIUS3IUL3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_PushFrontInput,None,itkImageToImageFilterIUS3IUL3)
itkImageToImageFilterIUS3IUL3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_PopFrontInput,None,itkImageToImageFilterIUS3IUL3)
itkImageToImageFilterIUS3IUL3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_GetPointer,None,itkImageToImageFilterIUS3IUL3)
itkImageToImageFilterIUS3IUL3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_swigregister
itkImageToImageFilterIUS3IUL3_swigregister(itkImageToImageFilterIUS3IUL3)

def itkImageToImageFilterIUS3IUL3_cast(*args):
  """itkImageToImageFilterIUS3IUL3_cast(itkLightObject obj) -> itkImageToImageFilterIUS3IUL3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_cast(*args)

class itkImageToImageFilterIUS3IUS3(itkImageSourcePython.itkImageSourceIUS3):
    """Proxy of C++ itkImageToImageFilterIUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageUS3 image)
        SetInput(self, unsigned int arg0, itkImageUS3 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageUS3
        GetInput(self, unsigned int idx) -> itkImageUS3
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageUS3 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIUS3IUS3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIUS3IUS3"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIUS3IUS3
        
        Create a new object of the class itkImageToImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIUS3IUS3.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_SetInput,None,itkImageToImageFilterIUS3IUS3)
itkImageToImageFilterIUS3IUS3.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_GetInput,None,itkImageToImageFilterIUS3IUS3)
itkImageToImageFilterIUS3IUS3.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_PushBackInput,None,itkImageToImageFilterIUS3IUS3)
itkImageToImageFilterIUS3IUS3.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_PopBackInput,None,itkImageToImageFilterIUS3IUS3)
itkImageToImageFilterIUS3IUS3.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_PushFrontInput,None,itkImageToImageFilterIUS3IUS3)
itkImageToImageFilterIUS3IUS3.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_PopFrontInput,None,itkImageToImageFilterIUS3IUS3)
itkImageToImageFilterIUS3IUS3.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_GetPointer,None,itkImageToImageFilterIUS3IUS3)
itkImageToImageFilterIUS3IUS3_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_swigregister
itkImageToImageFilterIUS3IUS3_swigregister(itkImageToImageFilterIUS3IUS3)

def itkImageToImageFilterIUS3IUS3_cast(*args):
  """itkImageToImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkImageToImageFilterIUS3IUS3"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_cast(*args)

class itkImageToImageFilterIVF22ICVF22(itkImageSourcePython.itkImageSourceICVF22):
    """Proxy of C++ itkImageToImageFilterIVF22ICVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageVF22 image)
        SetInput(self, unsigned int arg0, itkImageVF22 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageVF22
        GetInput(self, unsigned int idx) -> itkImageVF22
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageVF22 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageVF22 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF22ICVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIVF22ICVF22"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIVF22ICVF22"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIVF22ICVF22
        
        Create a new object of the class itkImageToImageFilterIVF22ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIVF22ICVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIVF22ICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIVF22ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIVF22ICVF22.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_SetInput,None,itkImageToImageFilterIVF22ICVF22)
itkImageToImageFilterIVF22ICVF22.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_GetInput,None,itkImageToImageFilterIVF22ICVF22)
itkImageToImageFilterIVF22ICVF22.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_PushBackInput,None,itkImageToImageFilterIVF22ICVF22)
itkImageToImageFilterIVF22ICVF22.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_PopBackInput,None,itkImageToImageFilterIVF22ICVF22)
itkImageToImageFilterIVF22ICVF22.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_PushFrontInput,None,itkImageToImageFilterIVF22ICVF22)
itkImageToImageFilterIVF22ICVF22.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_PopFrontInput,None,itkImageToImageFilterIVF22ICVF22)
itkImageToImageFilterIVF22ICVF22.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_GetPointer,None,itkImageToImageFilterIVF22ICVF22)
itkImageToImageFilterIVF22ICVF22_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_swigregister
itkImageToImageFilterIVF22ICVF22_swigregister(itkImageToImageFilterIVF22ICVF22)

def itkImageToImageFilterIVF22ICVF22_cast(*args):
  """itkImageToImageFilterIVF22ICVF22_cast(itkLightObject obj) -> itkImageToImageFilterIVF22ICVF22"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_cast(*args)

class itkImageToImageFilterIVF22IVF22(itkImageSourcePython.itkImageSourceIVF22):
    """Proxy of C++ itkImageToImageFilterIVF22IVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageVF22 image)
        SetInput(self, unsigned int arg0, itkImageVF22 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageVF22
        GetInput(self, unsigned int idx) -> itkImageVF22
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageVF22 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageVF22 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF22IVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIVF22IVF22"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIVF22IVF22"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIVF22IVF22
        
        Create a new object of the class itkImageToImageFilterIVF22IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIVF22IVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIVF22IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIVF22IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIVF22IVF22.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_SetInput,None,itkImageToImageFilterIVF22IVF22)
itkImageToImageFilterIVF22IVF22.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_GetInput,None,itkImageToImageFilterIVF22IVF22)
itkImageToImageFilterIVF22IVF22.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_PushBackInput,None,itkImageToImageFilterIVF22IVF22)
itkImageToImageFilterIVF22IVF22.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_PopBackInput,None,itkImageToImageFilterIVF22IVF22)
itkImageToImageFilterIVF22IVF22.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_PushFrontInput,None,itkImageToImageFilterIVF22IVF22)
itkImageToImageFilterIVF22IVF22.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_PopFrontInput,None,itkImageToImageFilterIVF22IVF22)
itkImageToImageFilterIVF22IVF22.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_GetPointer,None,itkImageToImageFilterIVF22IVF22)
itkImageToImageFilterIVF22IVF22_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_swigregister
itkImageToImageFilterIVF22IVF22_swigregister(itkImageToImageFilterIVF22IVF22)

def itkImageToImageFilterIVF22IVF22_cast(*args):
  """itkImageToImageFilterIVF22IVF22_cast(itkLightObject obj) -> itkImageToImageFilterIVF22IVF22"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_cast(*args)

class itkImageToImageFilterIVF33ICVF33(itkImageSourcePython.itkImageSourceICVF33):
    """Proxy of C++ itkImageToImageFilterIVF33ICVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageVF33 image)
        SetInput(self, unsigned int arg0, itkImageVF33 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageVF33
        GetInput(self, unsigned int idx) -> itkImageVF33
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageVF33 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageVF33 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF33ICVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIVF33ICVF33"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIVF33ICVF33"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIVF33ICVF33
        
        Create a new object of the class itkImageToImageFilterIVF33ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIVF33ICVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIVF33ICVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIVF33ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIVF33ICVF33.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_SetInput,None,itkImageToImageFilterIVF33ICVF33)
itkImageToImageFilterIVF33ICVF33.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_GetInput,None,itkImageToImageFilterIVF33ICVF33)
itkImageToImageFilterIVF33ICVF33.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_PushBackInput,None,itkImageToImageFilterIVF33ICVF33)
itkImageToImageFilterIVF33ICVF33.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_PopBackInput,None,itkImageToImageFilterIVF33ICVF33)
itkImageToImageFilterIVF33ICVF33.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_PushFrontInput,None,itkImageToImageFilterIVF33ICVF33)
itkImageToImageFilterIVF33ICVF33.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_PopFrontInput,None,itkImageToImageFilterIVF33ICVF33)
itkImageToImageFilterIVF33ICVF33.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_GetPointer,None,itkImageToImageFilterIVF33ICVF33)
itkImageToImageFilterIVF33ICVF33_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_swigregister
itkImageToImageFilterIVF33ICVF33_swigregister(itkImageToImageFilterIVF33ICVF33)

def itkImageToImageFilterIVF33ICVF33_cast(*args):
  """itkImageToImageFilterIVF33ICVF33_cast(itkLightObject obj) -> itkImageToImageFilterIVF33ICVF33"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_cast(*args)

class itkImageToImageFilterIVF33IVF33(itkImageSourcePython.itkImageSourceIVF33):
    """Proxy of C++ itkImageToImageFilterIVF33IVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_InputImageDimension
    OutputImageDimension = _itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_OutputImageDimension
    def SetInput(self, *args):
        """
        SetInput(self, itkImageVF33 image)
        SetInput(self, unsigned int arg0, itkImageVF33 image)
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_SetInput(self, *args)

    def GetInput(self, *args):
        """
        GetInput(self) -> itkImageVF33
        GetInput(self, unsigned int idx) -> itkImageVF33
        """
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_GetInput(self, *args)

    def PushBackInput(self, *args):
        """PushBackInput(self, itkImageVF33 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_PushBackInput(self, *args)

    def PopBackInput(self):
        """PopBackInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_PopBackInput(self)

    def PushFrontInput(self, *args):
        """PushFrontInput(self, itkImageVF33 image)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_PushFrontInput(self, *args)

    def PopFrontInput(self):
        """PopFrontInput(self)"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_PopFrontInput(self)

    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF33IVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageToImageFilterIVF33IVF33"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageToImageFilterIVF33IVF33"""
        return _itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIVF33IVF33
        
        Create a new object of the class itkImageToImageFilterIVF33IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageToImageFilterIVF33IVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageToImageFilterIVF33IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIVF33IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIVF33IVF33.SetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_SetInput,None,itkImageToImageFilterIVF33IVF33)
itkImageToImageFilterIVF33IVF33.GetInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_GetInput,None,itkImageToImageFilterIVF33IVF33)
itkImageToImageFilterIVF33IVF33.PushBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_PushBackInput,None,itkImageToImageFilterIVF33IVF33)
itkImageToImageFilterIVF33IVF33.PopBackInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_PopBackInput,None,itkImageToImageFilterIVF33IVF33)
itkImageToImageFilterIVF33IVF33.PushFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_PushFrontInput,None,itkImageToImageFilterIVF33IVF33)
itkImageToImageFilterIVF33IVF33.PopFrontInput = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_PopFrontInput,None,itkImageToImageFilterIVF33IVF33)
itkImageToImageFilterIVF33IVF33.GetPointer = new_instancemethod(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_GetPointer,None,itkImageToImageFilterIVF33IVF33)
itkImageToImageFilterIVF33IVF33_swigregister = _itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_swigregister
itkImageToImageFilterIVF33IVF33_swigregister(itkImageToImageFilterIVF33IVF33)

def itkImageToImageFilterIVF33IVF33_cast(*args):
  """itkImageToImageFilterIVF33IVF33_cast(itkLightObject obj) -> itkImageToImageFilterIVF33IVF33"""
  return _itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_cast(*args)



