// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkImageKernelOperatorChicken
#endif
#ifdef SWIGCSHARP
%module itkImageKernelOperatorCsharp
#endif
#ifdef SWIGGUILE
%module itkImageKernelOperatorGuile
#endif
#ifdef SWIGJAVA
%module itkImageKernelOperatorJava
#endif
#ifdef SWIGLUA
%module itkImageKernelOperatorLua
#endif
#ifdef SWIGMODULA3
%module itkImageKernelOperatorModula3
#endif
#ifdef SWIGMZSCHEME
%module itkImageKernelOperatorMzscheme
#endif
#ifdef SWIGOCAML
%module itkImageKernelOperatorOcaml
#endif
#ifdef SWIGPERL
%module itkImageKernelOperatorPerl
#endif
#ifdef SWIGPERL5
%module itkImageKernelOperatorPerl5
#endif
#ifdef SWIGPHP
%module itkImageKernelOperatorPhp
#endif
#ifdef SWIGPHP4
%module itkImageKernelOperatorPhp4
#endif
#ifdef SWIGPHP5
%module itkImageKernelOperatorPhp5
#endif
#ifdef SWIGPIKE
%module itkImageKernelOperatorPike
#endif
#ifdef SWIGPYTHON
%module itkImageKernelOperatorPython
#endif
#ifdef SWIGR
%module itkImageKernelOperatorR
#endif
#ifdef SWIGRUBY
%module itkImageKernelOperatorRuby
#endif
#ifdef SWIGSEXP
%module itkImageKernelOperatorSexp
#endif
#ifdef SWIGTCL
%module itkImageKernelOperatorTcl
#endif
#ifdef SWIGXML
%module itkImageKernelOperatorXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImage.i
%import wrap_itkNeighborhoodOperator.i


%include itk.i
%include wrap_itkImageKernelOperator_ext.i


 class itkImageKernelOperatorB2 : public itkNeighborhoodOperatorB2 {
   public:
     itkImageKernelOperatorB2();
     itkImageKernelOperatorB2(itkImageKernelOperatorB2 const & orig);
     itkImageKernelOperatorB2 & operator=(itkImageKernelOperatorB2 const & orig);
     void SetImageKernel(itk::Image< bool, 2u > * kernel);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent i) const;
     ~itkImageKernelOperatorB2();
   private:
     char const * GetNameOfClass();
   protected:
     virtual std::vector< double > GenerateCoefficients();
     virtual void Fill(std::vector< double > const & coeff);
 };


 class itkImageKernelOperatorB3 : public itkNeighborhoodOperatorB3 {
   public:
     itkImageKernelOperatorB3();
     itkImageKernelOperatorB3(itkImageKernelOperatorB3 const & orig);
     itkImageKernelOperatorB3 & operator=(itkImageKernelOperatorB3 const & orig);
     void SetImageKernel(itk::Image< bool, 3u > * kernel);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent i) const;
     ~itkImageKernelOperatorB3();
   private:
     char const * GetNameOfClass();
   protected:
     virtual std::vector< double > GenerateCoefficients();
     virtual void Fill(std::vector< double > const & coeff);
 };


 class itkImageKernelOperatorD2 : public itkNeighborhoodOperatorD2 {
   public:
     itkImageKernelOperatorD2();
     itkImageKernelOperatorD2(itkImageKernelOperatorD2 const & orig);
     itkImageKernelOperatorD2 & operator=(itkImageKernelOperatorD2 const & orig);
     void SetImageKernel(itkImageD2 * kernel);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent i) const;
     ~itkImageKernelOperatorD2();
   private:
     char const * GetNameOfClass();
   protected:
     virtual std::vector< double > GenerateCoefficients();
     virtual void Fill(std::vector< double > const & coeff);
 };


 class itkImageKernelOperatorD3 : public itkNeighborhoodOperatorD3 {
   public:
     itkImageKernelOperatorD3();
     itkImageKernelOperatorD3(itkImageKernelOperatorD3 const & orig);
     itkImageKernelOperatorD3 & operator=(itkImageKernelOperatorD3 const & orig);
     void SetImageKernel(itkImageD3 * kernel);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent i) const;
     ~itkImageKernelOperatorD3();
   private:
     char const * GetNameOfClass();
   protected:
     virtual std::vector< double > GenerateCoefficients();
     virtual void Fill(std::vector< double > const & coeff);
 };


 class itkImageKernelOperatorF2 : public itkNeighborhoodOperatorF2 {
   public:
     itkImageKernelOperatorF2();
     itkImageKernelOperatorF2(itkImageKernelOperatorF2 const & orig);
     itkImageKernelOperatorF2 & operator=(itkImageKernelOperatorF2 const & orig);
     void SetImageKernel(itkImageF2 * kernel);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent i) const;
     ~itkImageKernelOperatorF2();
   private:
     char const * GetNameOfClass();
   protected:
     virtual std::vector< double > GenerateCoefficients();
     virtual void Fill(std::vector< double > const & coeff);
 };


 class itkImageKernelOperatorF3 : public itkNeighborhoodOperatorF3 {
   public:
     itkImageKernelOperatorF3();
     itkImageKernelOperatorF3(itkImageKernelOperatorF3 const & orig);
     itkImageKernelOperatorF3 & operator=(itkImageKernelOperatorF3 const & orig);
     void SetImageKernel(itkImageF3 * kernel);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent i) const;
     ~itkImageKernelOperatorF3();
   private:
     char const * GetNameOfClass();
   protected:
     virtual std::vector< double > GenerateCoefficients();
     virtual void Fill(std::vector< double > const & coeff);
 };


 class itkImageKernelOperatorUC2 : public itkNeighborhoodOperatorUC2 {
   public:
     itkImageKernelOperatorUC2();
     itkImageKernelOperatorUC2(itkImageKernelOperatorUC2 const & orig);
     itkImageKernelOperatorUC2 & operator=(itkImageKernelOperatorUC2 const & orig);
     void SetImageKernel(itkImageUC2 * kernel);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent i) const;
     ~itkImageKernelOperatorUC2();
   private:
     char const * GetNameOfClass();
   protected:
     virtual std::vector< double > GenerateCoefficients();
     virtual void Fill(std::vector< double > const & coeff);
 };


 class itkImageKernelOperatorUC3 : public itkNeighborhoodOperatorUC3 {
   public:
     itkImageKernelOperatorUC3();
     itkImageKernelOperatorUC3(itkImageKernelOperatorUC3 const & orig);
     itkImageKernelOperatorUC3 & operator=(itkImageKernelOperatorUC3 const & orig);
     void SetImageKernel(itkImageUC3 * kernel);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent i) const;
     ~itkImageKernelOperatorUC3();
   private:
     char const * GetNameOfClass();
   protected:
     virtual std::vector< double > GenerateCoefficients();
     virtual void Fill(std::vector< double > const & coeff);
 };


 class itkImageKernelOperatorUL2 : public itkNeighborhoodOperatorUL2 {
   public:
     itkImageKernelOperatorUL2();
     itkImageKernelOperatorUL2(itkImageKernelOperatorUL2 const & orig);
     itkImageKernelOperatorUL2 & operator=(itkImageKernelOperatorUL2 const & orig);
     void SetImageKernel(itkImageUL2 * kernel);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent i) const;
     ~itkImageKernelOperatorUL2();
   private:
     char const * GetNameOfClass();
   protected:
     virtual std::vector< double > GenerateCoefficients();
     virtual void Fill(std::vector< double > const & coeff);
 };


 class itkImageKernelOperatorUL3 : public itkNeighborhoodOperatorUL3 {
   public:
     itkImageKernelOperatorUL3();
     itkImageKernelOperatorUL3(itkImageKernelOperatorUL3 const & orig);
     itkImageKernelOperatorUL3 & operator=(itkImageKernelOperatorUL3 const & orig);
     void SetImageKernel(itkImageUL3 * kernel);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent i) const;
     ~itkImageKernelOperatorUL3();
   private:
     char const * GetNameOfClass();
   protected:
     virtual std::vector< double > GenerateCoefficients();
     virtual void Fill(std::vector< double > const & coeff);
 };


 class itkImageKernelOperatorUS2 : public itkNeighborhoodOperatorUS2 {
   public:
     itkImageKernelOperatorUS2();
     itkImageKernelOperatorUS2(itkImageKernelOperatorUS2 const & orig);
     itkImageKernelOperatorUS2 & operator=(itkImageKernelOperatorUS2 const & orig);
     void SetImageKernel(itkImageUS2 * kernel);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent i) const;
     ~itkImageKernelOperatorUS2();
   private:
     char const * GetNameOfClass();
   protected:
     virtual std::vector< double > GenerateCoefficients();
     virtual void Fill(std::vector< double > const & coeff);
 };


 class itkImageKernelOperatorUS3 : public itkNeighborhoodOperatorUS3 {
   public:
     itkImageKernelOperatorUS3();
     itkImageKernelOperatorUS3(itkImageKernelOperatorUS3 const & orig);
     itkImageKernelOperatorUS3 & operator=(itkImageKernelOperatorUS3 const & orig);
     void SetImageKernel(itkImageUS3 * kernel);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent i) const;
     ~itkImageKernelOperatorUS3();
   private:
     char const * GetNameOfClass();
   protected:
     virtual std::vector< double > GenerateCoefficients();
     virtual void Fill(std::vector< double > const & coeff);
 };


