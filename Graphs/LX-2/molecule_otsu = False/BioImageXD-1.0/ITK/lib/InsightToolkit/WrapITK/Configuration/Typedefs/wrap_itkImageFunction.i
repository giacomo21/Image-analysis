// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkImageFunctionChicken
#endif
#ifdef SWIGCSHARP
%module itkImageFunctionCsharp
#endif
#ifdef SWIGGUILE
%module itkImageFunctionGuile
#endif
#ifdef SWIGJAVA
%module itkImageFunctionJava
#endif
#ifdef SWIGLUA
%module itkImageFunctionLua
#endif
#ifdef SWIGMODULA3
%module itkImageFunctionModula3
#endif
#ifdef SWIGMZSCHEME
%module itkImageFunctionMzscheme
#endif
#ifdef SWIGOCAML
%module itkImageFunctionOcaml
#endif
#ifdef SWIGPERL
%module itkImageFunctionPerl
#endif
#ifdef SWIGPERL5
%module itkImageFunctionPerl5
#endif
#ifdef SWIGPHP
%module itkImageFunctionPhp
#endif
#ifdef SWIGPHP4
%module itkImageFunctionPhp4
#endif
#ifdef SWIGPHP5
%module itkImageFunctionPhp5
#endif
#ifdef SWIGPIKE
%module itkImageFunctionPike
#endif
#ifdef SWIGPYTHON
%module itkImageFunctionPython
#endif
#ifdef SWIGR
%module itkImageFunctionR
#endif
#ifdef SWIGRUBY
%module itkImageFunctionRuby
#endif
#ifdef SWIGSEXP
%module itkImageFunctionSexp
#endif
#ifdef SWIGTCL
%module itkImageFunctionTcl
#endif
#ifdef SWIGXML
%module itkImageFunctionXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
%}


%{
%}




%import wrap_itkPoint.i
%import wrap_itkContinuousIndex.i
%import wrap_itkIndex.i
%import wrap_itkImage.i
%import wrap_itkVector.i
%import wrap_ITKCommonBase.i
%import wrap_itkFunctionBase.i


%include itk.i
%include wrap_itkImageFunction_ext.i


 class itkImageFunctionICVF22VD2D : public itkFunctionBasePD2VD2 {
   public:
     enum  {  ImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageCVF22 const * ptr);
     itkImageCVF22 const * GetInputImage() const;
     virtual itkVectorD2 Evaluate(itkPointD2 const & point) const = 0;
     virtual itkVectorD2 EvaluateAtIndex(itkIndex2 const & index) const = 0;
     virtual itkVectorD2 EvaluateAtContinuousIndex(itkContinuousIndexD2 const & index) const = 0;
     virtual bool IsInsideBuffer(itkIndex2 const & index) const;
     virtual bool IsInsideBuffer(itkContinuousIndexD2 const & index) const;
     virtual bool IsInsideBuffer(itkPointD2 const & point) const;
     void ConvertPointToNearestIndex(itkPointD2 const & point, itkIndex2 & index) const;
     void ConvertPointToContinousIndex(itkPointD2 const & point, itkContinuousIndexD2 & cindex) const;
     void ConvertPointToContinuousIndex(itkPointD2 const & point, itkContinuousIndexD2 & cindex) const;
     void ConvertContinuousIndexToNearestIndex(itkContinuousIndexD2 const & cindex, itkIndex2 & index) const;
     virtual itkIndex2 const & GetStartIndex() const;
     virtual itkIndex2 const & GetEndIndex() const;
     virtual itkContinuousIndexD2 const & GetStartContinuousIndex() const;
     virtual itkContinuousIndexD2 const & GetEndContinuousIndex() const;
   private:
     itkImageFunctionICVF22VD2D(itkImageFunctionICVF22VD2D const & arg0);
     void operator=(itkImageFunctionICVF22VD2D const & arg0);
   protected:
     itkImageFunctionICVF22VD2D();
     ~itkImageFunctionICVF22VD2D();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageFunctionICVF22VD2D_Pointer {
   public:
     itkImageFunctionICVF22VD2D_Pointer();
     itkImageFunctionICVF22VD2D_Pointer(itkImageFunctionICVF22VD2D_Pointer const & p);
     itkImageFunctionICVF22VD2D_Pointer(itkImageFunctionICVF22VD2D * p);
     ~itkImageFunctionICVF22VD2D_Pointer();
     itkImageFunctionICVF22VD2D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageFunctionICVF22VD2D * GetPointer() const;
     bool operator<(itkImageFunctionICVF22VD2D_Pointer const & r) const;
     bool operator>(itkImageFunctionICVF22VD2D_Pointer const & r) const;
     bool operator<=(itkImageFunctionICVF22VD2D_Pointer const & r) const;
     bool operator>=(itkImageFunctionICVF22VD2D_Pointer const & r) const;
     itkImageFunctionICVF22VD2D_Pointer & operator=(itkImageFunctionICVF22VD2D_Pointer const & r);
     itkImageFunctionICVF22VD2D_Pointer & operator=(itkImageFunctionICVF22VD2D * r);
     itkImageFunctionICVF22VD2D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageFunctionICVF33VD3D : public itkFunctionBasePD3VD3 {
   public:
     enum  {  ImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageCVF33 const * ptr);
     itkImageCVF33 const * GetInputImage() const;
     virtual itkVectorD3 Evaluate(itkPointD3 const & point) const = 0;
     virtual itkVectorD3 EvaluateAtIndex(itkIndex3 const & index) const = 0;
     virtual itkVectorD3 EvaluateAtContinuousIndex(itkContinuousIndexD3 const & index) const = 0;
     virtual bool IsInsideBuffer(itkIndex3 const & index) const;
     virtual bool IsInsideBuffer(itkContinuousIndexD3 const & index) const;
     virtual bool IsInsideBuffer(itkPointD3 const & point) const;
     void ConvertPointToNearestIndex(itkPointD3 const & point, itkIndex3 & index) const;
     void ConvertPointToContinousIndex(itkPointD3 const & point, itkContinuousIndexD3 & cindex) const;
     void ConvertPointToContinuousIndex(itkPointD3 const & point, itkContinuousIndexD3 & cindex) const;
     void ConvertContinuousIndexToNearestIndex(itkContinuousIndexD3 const & cindex, itkIndex3 & index) const;
     virtual itkIndex3 const & GetStartIndex() const;
     virtual itkIndex3 const & GetEndIndex() const;
     virtual itkContinuousIndexD3 const & GetStartContinuousIndex() const;
     virtual itkContinuousIndexD3 const & GetEndContinuousIndex() const;
   private:
     itkImageFunctionICVF33VD3D(itkImageFunctionICVF33VD3D const & arg0);
     void operator=(itkImageFunctionICVF33VD3D const & arg0);
   protected:
     itkImageFunctionICVF33VD3D();
     ~itkImageFunctionICVF33VD3D();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageFunctionICVF33VD3D_Pointer {
   public:
     itkImageFunctionICVF33VD3D_Pointer();
     itkImageFunctionICVF33VD3D_Pointer(itkImageFunctionICVF33VD3D_Pointer const & p);
     itkImageFunctionICVF33VD3D_Pointer(itkImageFunctionICVF33VD3D * p);
     ~itkImageFunctionICVF33VD3D_Pointer();
     itkImageFunctionICVF33VD3D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageFunctionICVF33VD3D * GetPointer() const;
     bool operator<(itkImageFunctionICVF33VD3D_Pointer const & r) const;
     bool operator>(itkImageFunctionICVF33VD3D_Pointer const & r) const;
     bool operator<=(itkImageFunctionICVF33VD3D_Pointer const & r) const;
     bool operator>=(itkImageFunctionICVF33VD3D_Pointer const & r) const;
     itkImageFunctionICVF33VD3D_Pointer & operator=(itkImageFunctionICVF33VD3D_Pointer const & r);
     itkImageFunctionICVF33VD3D_Pointer & operator=(itkImageFunctionICVF33VD3D * r);
     itkImageFunctionICVF33VD3D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageFunctionID2DD : public itkFunctionBasePD2D {
   public:
     enum  {  ImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageD2 const * ptr);
     itkImageD2 const * GetInputImage() const;
     virtual double Evaluate(itkPointD2 const & point) const = 0;
     virtual double EvaluateAtIndex(itkIndex2 const & index) const = 0;
     virtual double EvaluateAtContinuousIndex(itkContinuousIndexD2 const & index) const = 0;
     virtual bool IsInsideBuffer(itkIndex2 const & index) const;
     virtual bool IsInsideBuffer(itkContinuousIndexD2 const & index) const;
     virtual bool IsInsideBuffer(itkPointD2 const & point) const;
     void ConvertPointToNearestIndex(itkPointD2 const & point, itkIndex2 & index) const;
     void ConvertPointToContinousIndex(itkPointD2 const & point, itkContinuousIndexD2 & cindex) const;
     void ConvertPointToContinuousIndex(itkPointD2 const & point, itkContinuousIndexD2 & cindex) const;
     void ConvertContinuousIndexToNearestIndex(itkContinuousIndexD2 const & cindex, itkIndex2 & index) const;
     virtual itkIndex2 const & GetStartIndex() const;
     virtual itkIndex2 const & GetEndIndex() const;
     virtual itkContinuousIndexD2 const & GetStartContinuousIndex() const;
     virtual itkContinuousIndexD2 const & GetEndContinuousIndex() const;
   private:
     itkImageFunctionID2DD(itkImageFunctionID2DD const & arg0);
     void operator=(itkImageFunctionID2DD const & arg0);
   protected:
     itkImageFunctionID2DD();
     ~itkImageFunctionID2DD();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageFunctionID2DD_Pointer {
   public:
     itkImageFunctionID2DD_Pointer();
     itkImageFunctionID2DD_Pointer(itkImageFunctionID2DD_Pointer const & p);
     itkImageFunctionID2DD_Pointer(itkImageFunctionID2DD * p);
     ~itkImageFunctionID2DD_Pointer();
     itkImageFunctionID2DD * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageFunctionID2DD * GetPointer() const;
     bool operator<(itkImageFunctionID2DD_Pointer const & r) const;
     bool operator>(itkImageFunctionID2DD_Pointer const & r) const;
     bool operator<=(itkImageFunctionID2DD_Pointer const & r) const;
     bool operator>=(itkImageFunctionID2DD_Pointer const & r) const;
     itkImageFunctionID2DD_Pointer & operator=(itkImageFunctionID2DD_Pointer const & r);
     itkImageFunctionID2DD_Pointer & operator=(itkImageFunctionID2DD * r);
     itkImageFunctionID2DD * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageFunctionID2DF : public itkFunctionBasePF2D {
   public:
     enum  {  ImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageD2 const * ptr);
     itkImageD2 const * GetInputImage() const;
     virtual double Evaluate(itkPointF2 const & point) const = 0;
     virtual double EvaluateAtIndex(itkIndex2 const & index) const = 0;
     virtual double EvaluateAtContinuousIndex(itkContinuousIndexF2 const & index) const = 0;
     virtual bool IsInsideBuffer(itkIndex2 const & index) const;
     virtual bool IsInsideBuffer(itkContinuousIndexF2 const & index) const;
     virtual bool IsInsideBuffer(itkPointF2 const & point) const;
     void ConvertPointToNearestIndex(itkPointF2 const & point, itkIndex2 & index) const;
     void ConvertPointToContinousIndex(itkPointF2 const & point, itkContinuousIndexF2 & cindex) const;
     void ConvertPointToContinuousIndex(itkPointF2 const & point, itkContinuousIndexF2 & cindex) const;
     void ConvertContinuousIndexToNearestIndex(itkContinuousIndexF2 const & cindex, itkIndex2 & index) const;
     virtual itkIndex2 const & GetStartIndex() const;
     virtual itkIndex2 const & GetEndIndex() const;
     virtual itkContinuousIndexF2 const & GetStartContinuousIndex() const;
     virtual itkContinuousIndexF2 const & GetEndContinuousIndex() const;
   private:
     itkImageFunctionID2DF(itkImageFunctionID2DF const & arg0);
     void operator=(itkImageFunctionID2DF const & arg0);
   protected:
     itkImageFunctionID2DF();
     ~itkImageFunctionID2DF();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageFunctionID2DF_Pointer {
   public:
     itkImageFunctionID2DF_Pointer();
     itkImageFunctionID2DF_Pointer(itkImageFunctionID2DF_Pointer const & p);
     itkImageFunctionID2DF_Pointer(itkImageFunctionID2DF * p);
     ~itkImageFunctionID2DF_Pointer();
     itkImageFunctionID2DF * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageFunctionID2DF * GetPointer() const;
     bool operator<(itkImageFunctionID2DF_Pointer const & r) const;
     bool operator>(itkImageFunctionID2DF_Pointer const & r) const;
     bool operator<=(itkImageFunctionID2DF_Pointer const & r) const;
     bool operator>=(itkImageFunctionID2DF_Pointer const & r) const;
     itkImageFunctionID2DF_Pointer & operator=(itkImageFunctionID2DF_Pointer const & r);
     itkImageFunctionID2DF_Pointer & operator=(itkImageFunctionID2DF * r);
     itkImageFunctionID2DF * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageFunctionID3DD : public itkFunctionBasePD3D {
   public:
     enum  {  ImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageD3 const * ptr);
     itkImageD3 const * GetInputImage() const;
     virtual double Evaluate(itkPointD3 const & point) const = 0;
     virtual double EvaluateAtIndex(itkIndex3 const & index) const = 0;
     virtual double EvaluateAtContinuousIndex(itkContinuousIndexD3 const & index) const = 0;
     virtual bool IsInsideBuffer(itkIndex3 const & index) const;
     virtual bool IsInsideBuffer(itkContinuousIndexD3 const & index) const;
     virtual bool IsInsideBuffer(itkPointD3 const & point) const;
     void ConvertPointToNearestIndex(itkPointD3 const & point, itkIndex3 & index) const;
     void ConvertPointToContinousIndex(itkPointD3 const & point, itkContinuousIndexD3 & cindex) const;
     void ConvertPointToContinuousIndex(itkPointD3 const & point, itkContinuousIndexD3 & cindex) const;
     void ConvertContinuousIndexToNearestIndex(itkContinuousIndexD3 const & cindex, itkIndex3 & index) const;
     virtual itkIndex3 const & GetStartIndex() const;
     virtual itkIndex3 const & GetEndIndex() const;
     virtual itkContinuousIndexD3 const & GetStartContinuousIndex() const;
     virtual itkContinuousIndexD3 const & GetEndContinuousIndex() const;
   private:
     itkImageFunctionID3DD(itkImageFunctionID3DD const & arg0);
     void operator=(itkImageFunctionID3DD const & arg0);
   protected:
     itkImageFunctionID3DD();
     ~itkImageFunctionID3DD();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageFunctionID3DD_Pointer {
   public:
     itkImageFunctionID3DD_Pointer();
     itkImageFunctionID3DD_Pointer(itkImageFunctionID3DD_Pointer const & p);
     itkImageFunctionID3DD_Pointer(itkImageFunctionID3DD * p);
     ~itkImageFunctionID3DD_Pointer();
     itkImageFunctionID3DD * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageFunctionID3DD * GetPointer() const;
     bool operator<(itkImageFunctionID3DD_Pointer const & r) const;
     bool operator>(itkImageFunctionID3DD_Pointer const & r) const;
     bool operator<=(itkImageFunctionID3DD_Pointer const & r) const;
     bool operator>=(itkImageFunctionID3DD_Pointer const & r) const;
     itkImageFunctionID3DD_Pointer & operator=(itkImageFunctionID3DD_Pointer const & r);
     itkImageFunctionID3DD_Pointer & operator=(itkImageFunctionID3DD * r);
     itkImageFunctionID3DD * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageFunctionID3DF : public itkFunctionBasePF3D {
   public:
     enum  {  ImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageD3 const * ptr);
     itkImageD3 const * GetInputImage() const;
     virtual double Evaluate(itkPointF3 const & point) const = 0;
     virtual double EvaluateAtIndex(itkIndex3 const & index) const = 0;
     virtual double EvaluateAtContinuousIndex(itkContinuousIndexF3 const & index) const = 0;
     virtual bool IsInsideBuffer(itkIndex3 const & index) const;
     virtual bool IsInsideBuffer(itkContinuousIndexF3 const & index) const;
     virtual bool IsInsideBuffer(itkPointF3 const & point) const;
     void ConvertPointToNearestIndex(itkPointF3 const & point, itkIndex3 & index) const;
     void ConvertPointToContinousIndex(itkPointF3 const & point, itkContinuousIndexF3 & cindex) const;
     void ConvertPointToContinuousIndex(itkPointF3 const & point, itkContinuousIndexF3 & cindex) const;
     void ConvertContinuousIndexToNearestIndex(itkContinuousIndexF3 const & cindex, itkIndex3 & index) const;
     virtual itkIndex3 const & GetStartIndex() const;
     virtual itkIndex3 const & GetEndIndex() const;
     virtual itkContinuousIndexF3 const & GetStartContinuousIndex() const;
     virtual itkContinuousIndexF3 const & GetEndContinuousIndex() const;
   private:
     itkImageFunctionID3DF(itkImageFunctionID3DF const & arg0);
     void operator=(itkImageFunctionID3DF const & arg0);
   protected:
     itkImageFunctionID3DF();
     ~itkImageFunctionID3DF();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageFunctionID3DF_Pointer {
   public:
     itkImageFunctionID3DF_Pointer();
     itkImageFunctionID3DF_Pointer(itkImageFunctionID3DF_Pointer const & p);
     itkImageFunctionID3DF_Pointer(itkImageFunctionID3DF * p);
     ~itkImageFunctionID3DF_Pointer();
     itkImageFunctionID3DF * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageFunctionID3DF * GetPointer() const;
     bool operator<(itkImageFunctionID3DF_Pointer const & r) const;
     bool operator>(itkImageFunctionID3DF_Pointer const & r) const;
     bool operator<=(itkImageFunctionID3DF_Pointer const & r) const;
     bool operator>=(itkImageFunctionID3DF_Pointer const & r) const;
     itkImageFunctionID3DF_Pointer & operator=(itkImageFunctionID3DF_Pointer const & r);
     itkImageFunctionID3DF_Pointer & operator=(itkImageFunctionID3DF * r);
     itkImageFunctionID3DF * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageFunctionIF2DD : public itkFunctionBasePD2D {
   public:
     enum  {  ImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageF2 const * ptr);
     itkImageF2 const * GetInputImage() const;
     virtual double Evaluate(itkPointD2 const & point) const = 0;
     virtual double EvaluateAtIndex(itkIndex2 const & index) const = 0;
     virtual double EvaluateAtContinuousIndex(itkContinuousIndexD2 const & index) const = 0;
     virtual bool IsInsideBuffer(itkIndex2 const & index) const;
     virtual bool IsInsideBuffer(itkContinuousIndexD2 const & index) const;
     virtual bool IsInsideBuffer(itkPointD2 const & point) const;
     void ConvertPointToNearestIndex(itkPointD2 const & point, itkIndex2 & index) const;
     void ConvertPointToContinousIndex(itkPointD2 const & point, itkContinuousIndexD2 & cindex) const;
     void ConvertPointToContinuousIndex(itkPointD2 const & point, itkContinuousIndexD2 & cindex) const;
     void ConvertContinuousIndexToNearestIndex(itkContinuousIndexD2 const & cindex, itkIndex2 & index) const;
     virtual itkIndex2 const & GetStartIndex() const;
     virtual itkIndex2 const & GetEndIndex() const;
     virtual itkContinuousIndexD2 const & GetStartContinuousIndex() const;
     virtual itkContinuousIndexD2 const & GetEndContinuousIndex() const;
   private:
     itkImageFunctionIF2DD(itkImageFunctionIF2DD const & arg0);
     void operator=(itkImageFunctionIF2DD const & arg0);
   protected:
     itkImageFunctionIF2DD();
     ~itkImageFunctionIF2DD();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageFunctionIF2DD_Pointer {
   public:
     itkImageFunctionIF2DD_Pointer();
     itkImageFunctionIF2DD_Pointer(itkImageFunctionIF2DD_Pointer const & p);
     itkImageFunctionIF2DD_Pointer(itkImageFunctionIF2DD * p);
     ~itkImageFunctionIF2DD_Pointer();
     itkImageFunctionIF2DD * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageFunctionIF2DD * GetPointer() const;
     bool operator<(itkImageFunctionIF2DD_Pointer const & r) const;
     bool operator>(itkImageFunctionIF2DD_Pointer const & r) const;
     bool operator<=(itkImageFunctionIF2DD_Pointer const & r) const;
     bool operator>=(itkImageFunctionIF2DD_Pointer const & r) const;
     itkImageFunctionIF2DD_Pointer & operator=(itkImageFunctionIF2DD_Pointer const & r);
     itkImageFunctionIF2DD_Pointer & operator=(itkImageFunctionIF2DD * r);
     itkImageFunctionIF2DD * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageFunctionIF2DF : public itkFunctionBasePF2D {
   public:
     enum  {  ImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageF2 const * ptr);
     itkImageF2 const * GetInputImage() const;
     virtual double Evaluate(itkPointF2 const & point) const = 0;
     virtual double EvaluateAtIndex(itkIndex2 const & index) const = 0;
     virtual double EvaluateAtContinuousIndex(itkContinuousIndexF2 const & index) const = 0;
     virtual bool IsInsideBuffer(itkIndex2 const & index) const;
     virtual bool IsInsideBuffer(itkContinuousIndexF2 const & index) const;
     virtual bool IsInsideBuffer(itkPointF2 const & point) const;
     void ConvertPointToNearestIndex(itkPointF2 const & point, itkIndex2 & index) const;
     void ConvertPointToContinousIndex(itkPointF2 const & point, itkContinuousIndexF2 & cindex) const;
     void ConvertPointToContinuousIndex(itkPointF2 const & point, itkContinuousIndexF2 & cindex) const;
     void ConvertContinuousIndexToNearestIndex(itkContinuousIndexF2 const & cindex, itkIndex2 & index) const;
     virtual itkIndex2 const & GetStartIndex() const;
     virtual itkIndex2 const & GetEndIndex() const;
     virtual itkContinuousIndexF2 const & GetStartContinuousIndex() const;
     virtual itkContinuousIndexF2 const & GetEndContinuousIndex() const;
   private:
     itkImageFunctionIF2DF(itkImageFunctionIF2DF const & arg0);
     void operator=(itkImageFunctionIF2DF const & arg0);
   protected:
     itkImageFunctionIF2DF();
     ~itkImageFunctionIF2DF();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageFunctionIF2DF_Pointer {
   public:
     itkImageFunctionIF2DF_Pointer();
     itkImageFunctionIF2DF_Pointer(itkImageFunctionIF2DF_Pointer const & p);
     itkImageFunctionIF2DF_Pointer(itkImageFunctionIF2DF * p);
     ~itkImageFunctionIF2DF_Pointer();
     itkImageFunctionIF2DF * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageFunctionIF2DF * GetPointer() const;
     bool operator<(itkImageFunctionIF2DF_Pointer const & r) const;
     bool operator>(itkImageFunctionIF2DF_Pointer const & r) const;
     bool operator<=(itkImageFunctionIF2DF_Pointer const & r) const;
     bool operator>=(itkImageFunctionIF2DF_Pointer const & r) const;
     itkImageFunctionIF2DF_Pointer & operator=(itkImageFunctionIF2DF_Pointer const & r);
     itkImageFunctionIF2DF_Pointer & operator=(itkImageFunctionIF2DF * r);
     itkImageFunctionIF2DF * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageFunctionIF3DD : public itkFunctionBasePD3D {
   public:
     enum  {  ImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageF3 const * ptr);
     itkImageF3 const * GetInputImage() const;
     virtual double Evaluate(itkPointD3 const & point) const = 0;
     virtual double EvaluateAtIndex(itkIndex3 const & index) const = 0;
     virtual double EvaluateAtContinuousIndex(itkContinuousIndexD3 const & index) const = 0;
     virtual bool IsInsideBuffer(itkIndex3 const & index) const;
     virtual bool IsInsideBuffer(itkContinuousIndexD3 const & index) const;
     virtual bool IsInsideBuffer(itkPointD3 const & point) const;
     void ConvertPointToNearestIndex(itkPointD3 const & point, itkIndex3 & index) const;
     void ConvertPointToContinousIndex(itkPointD3 const & point, itkContinuousIndexD3 & cindex) const;
     void ConvertPointToContinuousIndex(itkPointD3 const & point, itkContinuousIndexD3 & cindex) const;
     void ConvertContinuousIndexToNearestIndex(itkContinuousIndexD3 const & cindex, itkIndex3 & index) const;
     virtual itkIndex3 const & GetStartIndex() const;
     virtual itkIndex3 const & GetEndIndex() const;
     virtual itkContinuousIndexD3 const & GetStartContinuousIndex() const;
     virtual itkContinuousIndexD3 const & GetEndContinuousIndex() const;
   private:
     itkImageFunctionIF3DD(itkImageFunctionIF3DD const & arg0);
     void operator=(itkImageFunctionIF3DD const & arg0);
   protected:
     itkImageFunctionIF3DD();
     ~itkImageFunctionIF3DD();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageFunctionIF3DD_Pointer {
   public:
     itkImageFunctionIF3DD_Pointer();
     itkImageFunctionIF3DD_Pointer(itkImageFunctionIF3DD_Pointer const & p);
     itkImageFunctionIF3DD_Pointer(itkImageFunctionIF3DD * p);
     ~itkImageFunctionIF3DD_Pointer();
     itkImageFunctionIF3DD * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageFunctionIF3DD * GetPointer() const;
     bool operator<(itkImageFunctionIF3DD_Pointer const & r) const;
     bool operator>(itkImageFunctionIF3DD_Pointer const & r) const;
     bool operator<=(itkImageFunctionIF3DD_Pointer const & r) const;
     bool operator>=(itkImageFunctionIF3DD_Pointer const & r) const;
     itkImageFunctionIF3DD_Pointer & operator=(itkImageFunctionIF3DD_Pointer const & r);
     itkImageFunctionIF3DD_Pointer & operator=(itkImageFunctionIF3DD * r);
     itkImageFunctionIF3DD * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageFunctionIF3DF : public itkFunctionBasePF3D {
   public:
     enum  {  ImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageF3 const * ptr);
     itkImageF3 const * GetInputImage() const;
     virtual double Evaluate(itkPointF3 const & point) const = 0;
     virtual double EvaluateAtIndex(itkIndex3 const & index) const = 0;
     virtual double EvaluateAtContinuousIndex(itkContinuousIndexF3 const & index) const = 0;
     virtual bool IsInsideBuffer(itkIndex3 const & index) const;
     virtual bool IsInsideBuffer(itkContinuousIndexF3 const & index) const;
     virtual bool IsInsideBuffer(itkPointF3 const & point) const;
     void ConvertPointToNearestIndex(itkPointF3 const & point, itkIndex3 & index) const;
     void ConvertPointToContinousIndex(itkPointF3 const & point, itkContinuousIndexF3 & cindex) const;
     void ConvertPointToContinuousIndex(itkPointF3 const & point, itkContinuousIndexF3 & cindex) const;
     void ConvertContinuousIndexToNearestIndex(itkContinuousIndexF3 const & cindex, itkIndex3 & index) const;
     virtual itkIndex3 const & GetStartIndex() const;
     virtual itkIndex3 const & GetEndIndex() const;
     virtual itkContinuousIndexF3 const & GetStartContinuousIndex() const;
     virtual itkContinuousIndexF3 const & GetEndContinuousIndex() const;
   private:
     itkImageFunctionIF3DF(itkImageFunctionIF3DF const & arg0);
     void operator=(itkImageFunctionIF3DF const & arg0);
   protected:
     itkImageFunctionIF3DF();
     ~itkImageFunctionIF3DF();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageFunctionIF3DF_Pointer {
   public:
     itkImageFunctionIF3DF_Pointer();
     itkImageFunctionIF3DF_Pointer(itkImageFunctionIF3DF_Pointer const & p);
     itkImageFunctionIF3DF_Pointer(itkImageFunctionIF3DF * p);
     ~itkImageFunctionIF3DF_Pointer();
     itkImageFunctionIF3DF * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageFunctionIF3DF * GetPointer() const;
     bool operator<(itkImageFunctionIF3DF_Pointer const & r) const;
     bool operator>(itkImageFunctionIF3DF_Pointer const & r) const;
     bool operator<=(itkImageFunctionIF3DF_Pointer const & r) const;
     bool operator>=(itkImageFunctionIF3DF_Pointer const & r) const;
     itkImageFunctionIF3DF_Pointer & operator=(itkImageFunctionIF3DF_Pointer const & r);
     itkImageFunctionIF3DF_Pointer & operator=(itkImageFunctionIF3DF * r);
     itkImageFunctionIF3DF * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageFunctionIUC2DD : public itkFunctionBasePD2D {
   public:
     enum  {  ImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageUC2 const * ptr);
     itkImageUC2 const * GetInputImage() const;
     virtual double Evaluate(itkPointD2 const & point) const = 0;
     virtual double EvaluateAtIndex(itkIndex2 const & index) const = 0;
     virtual double EvaluateAtContinuousIndex(itkContinuousIndexD2 const & index) const = 0;
     virtual bool IsInsideBuffer(itkIndex2 const & index) const;
     virtual bool IsInsideBuffer(itkContinuousIndexD2 const & index) const;
     virtual bool IsInsideBuffer(itkPointD2 const & point) const;
     void ConvertPointToNearestIndex(itkPointD2 const & point, itkIndex2 & index) const;
     void ConvertPointToContinousIndex(itkPointD2 const & point, itkContinuousIndexD2 & cindex) const;
     void ConvertPointToContinuousIndex(itkPointD2 const & point, itkContinuousIndexD2 & cindex) const;
     void ConvertContinuousIndexToNearestIndex(itkContinuousIndexD2 const & cindex, itkIndex2 & index) const;
     virtual itkIndex2 const & GetStartIndex() const;
     virtual itkIndex2 const & GetEndIndex() const;
     virtual itkContinuousIndexD2 const & GetStartContinuousIndex() const;
     virtual itkContinuousIndexD2 const & GetEndContinuousIndex() const;
   private:
     itkImageFunctionIUC2DD(itkImageFunctionIUC2DD const & arg0);
     void operator=(itkImageFunctionIUC2DD const & arg0);
   protected:
     itkImageFunctionIUC2DD();
     ~itkImageFunctionIUC2DD();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageFunctionIUC2DD_Pointer {
   public:
     itkImageFunctionIUC2DD_Pointer();
     itkImageFunctionIUC2DD_Pointer(itkImageFunctionIUC2DD_Pointer const & p);
     itkImageFunctionIUC2DD_Pointer(itkImageFunctionIUC2DD * p);
     ~itkImageFunctionIUC2DD_Pointer();
     itkImageFunctionIUC2DD * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageFunctionIUC2DD * GetPointer() const;
     bool operator<(itkImageFunctionIUC2DD_Pointer const & r) const;
     bool operator>(itkImageFunctionIUC2DD_Pointer const & r) const;
     bool operator<=(itkImageFunctionIUC2DD_Pointer const & r) const;
     bool operator>=(itkImageFunctionIUC2DD_Pointer const & r) const;
     itkImageFunctionIUC2DD_Pointer & operator=(itkImageFunctionIUC2DD_Pointer const & r);
     itkImageFunctionIUC2DD_Pointer & operator=(itkImageFunctionIUC2DD * r);
     itkImageFunctionIUC2DD * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageFunctionIUC2DF : public itkFunctionBasePF2D {
   public:
     enum  {  ImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageUC2 const * ptr);
     itkImageUC2 const * GetInputImage() const;
     virtual double Evaluate(itkPointF2 const & point) const = 0;
     virtual double EvaluateAtIndex(itkIndex2 const & index) const = 0;
     virtual double EvaluateAtContinuousIndex(itkContinuousIndexF2 const & index) const = 0;
     virtual bool IsInsideBuffer(itkIndex2 const & index) const;
     virtual bool IsInsideBuffer(itkContinuousIndexF2 const & index) const;
     virtual bool IsInsideBuffer(itkPointF2 const & point) const;
     void ConvertPointToNearestIndex(itkPointF2 const & point, itkIndex2 & index) const;
     void ConvertPointToContinousIndex(itkPointF2 const & point, itkContinuousIndexF2 & cindex) const;
     void ConvertPointToContinuousIndex(itkPointF2 const & point, itkContinuousIndexF2 & cindex) const;
     void ConvertContinuousIndexToNearestIndex(itkContinuousIndexF2 const & cindex, itkIndex2 & index) const;
     virtual itkIndex2 const & GetStartIndex() const;
     virtual itkIndex2 const & GetEndIndex() const;
     virtual itkContinuousIndexF2 const & GetStartContinuousIndex() const;
     virtual itkContinuousIndexF2 const & GetEndContinuousIndex() const;
   private:
     itkImageFunctionIUC2DF(itkImageFunctionIUC2DF const & arg0);
     void operator=(itkImageFunctionIUC2DF const & arg0);
   protected:
     itkImageFunctionIUC2DF();
     ~itkImageFunctionIUC2DF();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageFunctionIUC2DF_Pointer {
   public:
     itkImageFunctionIUC2DF_Pointer();
     itkImageFunctionIUC2DF_Pointer(itkImageFunctionIUC2DF_Pointer const & p);
     itkImageFunctionIUC2DF_Pointer(itkImageFunctionIUC2DF * p);
     ~itkImageFunctionIUC2DF_Pointer();
     itkImageFunctionIUC2DF * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageFunctionIUC2DF * GetPointer() const;
     bool operator<(itkImageFunctionIUC2DF_Pointer const & r) const;
     bool operator>(itkImageFunctionIUC2DF_Pointer const & r) const;
     bool operator<=(itkImageFunctionIUC2DF_Pointer const & r) const;
     bool operator>=(itkImageFunctionIUC2DF_Pointer const & r) const;
     itkImageFunctionIUC2DF_Pointer & operator=(itkImageFunctionIUC2DF_Pointer const & r);
     itkImageFunctionIUC2DF_Pointer & operator=(itkImageFunctionIUC2DF * r);
     itkImageFunctionIUC2DF * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageFunctionIUC3DD : public itkFunctionBasePD3D {
   public:
     enum  {  ImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageUC3 const * ptr);
     itkImageUC3 const * GetInputImage() const;
     virtual double Evaluate(itkPointD3 const & point) const = 0;
     virtual double EvaluateAtIndex(itkIndex3 const & index) const = 0;
     virtual double EvaluateAtContinuousIndex(itkContinuousIndexD3 const & index) const = 0;
     virtual bool IsInsideBuffer(itkIndex3 const & index) const;
     virtual bool IsInsideBuffer(itkContinuousIndexD3 const & index) const;
     virtual bool IsInsideBuffer(itkPointD3 const & point) const;
     void ConvertPointToNearestIndex(itkPointD3 const & point, itkIndex3 & index) const;
     void ConvertPointToContinousIndex(itkPointD3 const & point, itkContinuousIndexD3 & cindex) const;
     void ConvertPointToContinuousIndex(itkPointD3 const & point, itkContinuousIndexD3 & cindex) const;
     void ConvertContinuousIndexToNearestIndex(itkContinuousIndexD3 const & cindex, itkIndex3 & index) const;
     virtual itkIndex3 const & GetStartIndex() const;
     virtual itkIndex3 const & GetEndIndex() const;
     virtual itkContinuousIndexD3 const & GetStartContinuousIndex() const;
     virtual itkContinuousIndexD3 const & GetEndContinuousIndex() const;
   private:
     itkImageFunctionIUC3DD(itkImageFunctionIUC3DD const & arg0);
     void operator=(itkImageFunctionIUC3DD const & arg0);
   protected:
     itkImageFunctionIUC3DD();
     ~itkImageFunctionIUC3DD();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageFunctionIUC3DD_Pointer {
   public:
     itkImageFunctionIUC3DD_Pointer();
     itkImageFunctionIUC3DD_Pointer(itkImageFunctionIUC3DD_Pointer const & p);
     itkImageFunctionIUC3DD_Pointer(itkImageFunctionIUC3DD * p);
     ~itkImageFunctionIUC3DD_Pointer();
     itkImageFunctionIUC3DD * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageFunctionIUC3DD * GetPointer() const;
     bool operator<(itkImageFunctionIUC3DD_Pointer const & r) const;
     bool operator>(itkImageFunctionIUC3DD_Pointer const & r) const;
     bool operator<=(itkImageFunctionIUC3DD_Pointer const & r) const;
     bool operator>=(itkImageFunctionIUC3DD_Pointer const & r) const;
     itkImageFunctionIUC3DD_Pointer & operator=(itkImageFunctionIUC3DD_Pointer const & r);
     itkImageFunctionIUC3DD_Pointer & operator=(itkImageFunctionIUC3DD * r);
     itkImageFunctionIUC3DD * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageFunctionIUC3DF : public itkFunctionBasePF3D {
   public:
     enum  {  ImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageUC3 const * ptr);
     itkImageUC3 const * GetInputImage() const;
     virtual double Evaluate(itkPointF3 const & point) const = 0;
     virtual double EvaluateAtIndex(itkIndex3 const & index) const = 0;
     virtual double EvaluateAtContinuousIndex(itkContinuousIndexF3 const & index) const = 0;
     virtual bool IsInsideBuffer(itkIndex3 const & index) const;
     virtual bool IsInsideBuffer(itkContinuousIndexF3 const & index) const;
     virtual bool IsInsideBuffer(itkPointF3 const & point) const;
     void ConvertPointToNearestIndex(itkPointF3 const & point, itkIndex3 & index) const;
     void ConvertPointToContinousIndex(itkPointF3 const & point, itkContinuousIndexF3 & cindex) const;
     void ConvertPointToContinuousIndex(itkPointF3 const & point, itkContinuousIndexF3 & cindex) const;
     void ConvertContinuousIndexToNearestIndex(itkContinuousIndexF3 const & cindex, itkIndex3 & index) const;
     virtual itkIndex3 const & GetStartIndex() const;
     virtual itkIndex3 const & GetEndIndex() const;
     virtual itkContinuousIndexF3 const & GetStartContinuousIndex() const;
     virtual itkContinuousIndexF3 const & GetEndContinuousIndex() const;
   private:
     itkImageFunctionIUC3DF(itkImageFunctionIUC3DF const & arg0);
     void operator=(itkImageFunctionIUC3DF const & arg0);
   protected:
     itkImageFunctionIUC3DF();
     ~itkImageFunctionIUC3DF();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageFunctionIUC3DF_Pointer {
   public:
     itkImageFunctionIUC3DF_Pointer();
     itkImageFunctionIUC3DF_Pointer(itkImageFunctionIUC3DF_Pointer const & p);
     itkImageFunctionIUC3DF_Pointer(itkImageFunctionIUC3DF * p);
     ~itkImageFunctionIUC3DF_Pointer();
     itkImageFunctionIUC3DF * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageFunctionIUC3DF * GetPointer() const;
     bool operator<(itkImageFunctionIUC3DF_Pointer const & r) const;
     bool operator>(itkImageFunctionIUC3DF_Pointer const & r) const;
     bool operator<=(itkImageFunctionIUC3DF_Pointer const & r) const;
     bool operator>=(itkImageFunctionIUC3DF_Pointer const & r) const;
     itkImageFunctionIUC3DF_Pointer & operator=(itkImageFunctionIUC3DF_Pointer const & r);
     itkImageFunctionIUC3DF_Pointer & operator=(itkImageFunctionIUC3DF * r);
     itkImageFunctionIUC3DF * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageFunctionIUL2DD : public itkFunctionBasePD2D {
   public:
     enum  {  ImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageUL2 const * ptr);
     itkImageUL2 const * GetInputImage() const;
     virtual double Evaluate(itkPointD2 const & point) const = 0;
     virtual double EvaluateAtIndex(itkIndex2 const & index) const = 0;
     virtual double EvaluateAtContinuousIndex(itkContinuousIndexD2 const & index) const = 0;
     virtual bool IsInsideBuffer(itkIndex2 const & index) const;
     virtual bool IsInsideBuffer(itkContinuousIndexD2 const & index) const;
     virtual bool IsInsideBuffer(itkPointD2 const & point) const;
     void ConvertPointToNearestIndex(itkPointD2 const & point, itkIndex2 & index) const;
     void ConvertPointToContinousIndex(itkPointD2 const & point, itkContinuousIndexD2 & cindex) const;
     void ConvertPointToContinuousIndex(itkPointD2 const & point, itkContinuousIndexD2 & cindex) const;
     void ConvertContinuousIndexToNearestIndex(itkContinuousIndexD2 const & cindex, itkIndex2 & index) const;
     virtual itkIndex2 const & GetStartIndex() const;
     virtual itkIndex2 const & GetEndIndex() const;
     virtual itkContinuousIndexD2 const & GetStartContinuousIndex() const;
     virtual itkContinuousIndexD2 const & GetEndContinuousIndex() const;
   private:
     itkImageFunctionIUL2DD(itkImageFunctionIUL2DD const & arg0);
     void operator=(itkImageFunctionIUL2DD const & arg0);
   protected:
     itkImageFunctionIUL2DD();
     ~itkImageFunctionIUL2DD();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageFunctionIUL2DD_Pointer {
   public:
     itkImageFunctionIUL2DD_Pointer();
     itkImageFunctionIUL2DD_Pointer(itkImageFunctionIUL2DD_Pointer const & p);
     itkImageFunctionIUL2DD_Pointer(itkImageFunctionIUL2DD * p);
     ~itkImageFunctionIUL2DD_Pointer();
     itkImageFunctionIUL2DD * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageFunctionIUL2DD * GetPointer() const;
     bool operator<(itkImageFunctionIUL2DD_Pointer const & r) const;
     bool operator>(itkImageFunctionIUL2DD_Pointer const & r) const;
     bool operator<=(itkImageFunctionIUL2DD_Pointer const & r) const;
     bool operator>=(itkImageFunctionIUL2DD_Pointer const & r) const;
     itkImageFunctionIUL2DD_Pointer & operator=(itkImageFunctionIUL2DD_Pointer const & r);
     itkImageFunctionIUL2DD_Pointer & operator=(itkImageFunctionIUL2DD * r);
     itkImageFunctionIUL2DD * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageFunctionIUL2DF : public itkFunctionBasePF2D {
   public:
     enum  {  ImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageUL2 const * ptr);
     itkImageUL2 const * GetInputImage() const;
     virtual double Evaluate(itkPointF2 const & point) const = 0;
     virtual double EvaluateAtIndex(itkIndex2 const & index) const = 0;
     virtual double EvaluateAtContinuousIndex(itkContinuousIndexF2 const & index) const = 0;
     virtual bool IsInsideBuffer(itkIndex2 const & index) const;
     virtual bool IsInsideBuffer(itkContinuousIndexF2 const & index) const;
     virtual bool IsInsideBuffer(itkPointF2 const & point) const;
     void ConvertPointToNearestIndex(itkPointF2 const & point, itkIndex2 & index) const;
     void ConvertPointToContinousIndex(itkPointF2 const & point, itkContinuousIndexF2 & cindex) const;
     void ConvertPointToContinuousIndex(itkPointF2 const & point, itkContinuousIndexF2 & cindex) const;
     void ConvertContinuousIndexToNearestIndex(itkContinuousIndexF2 const & cindex, itkIndex2 & index) const;
     virtual itkIndex2 const & GetStartIndex() const;
     virtual itkIndex2 const & GetEndIndex() const;
     virtual itkContinuousIndexF2 const & GetStartContinuousIndex() const;
     virtual itkContinuousIndexF2 const & GetEndContinuousIndex() const;
   private:
     itkImageFunctionIUL2DF(itkImageFunctionIUL2DF const & arg0);
     void operator=(itkImageFunctionIUL2DF const & arg0);
   protected:
     itkImageFunctionIUL2DF();
     ~itkImageFunctionIUL2DF();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageFunctionIUL2DF_Pointer {
   public:
     itkImageFunctionIUL2DF_Pointer();
     itkImageFunctionIUL2DF_Pointer(itkImageFunctionIUL2DF_Pointer const & p);
     itkImageFunctionIUL2DF_Pointer(itkImageFunctionIUL2DF * p);
     ~itkImageFunctionIUL2DF_Pointer();
     itkImageFunctionIUL2DF * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageFunctionIUL2DF * GetPointer() const;
     bool operator<(itkImageFunctionIUL2DF_Pointer const & r) const;
     bool operator>(itkImageFunctionIUL2DF_Pointer const & r) const;
     bool operator<=(itkImageFunctionIUL2DF_Pointer const & r) const;
     bool operator>=(itkImageFunctionIUL2DF_Pointer const & r) const;
     itkImageFunctionIUL2DF_Pointer & operator=(itkImageFunctionIUL2DF_Pointer const & r);
     itkImageFunctionIUL2DF_Pointer & operator=(itkImageFunctionIUL2DF * r);
     itkImageFunctionIUL2DF * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageFunctionIUL3DD : public itkFunctionBasePD3D {
   public:
     enum  {  ImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageUL3 const * ptr);
     itkImageUL3 const * GetInputImage() const;
     virtual double Evaluate(itkPointD3 const & point) const = 0;
     virtual double EvaluateAtIndex(itkIndex3 const & index) const = 0;
     virtual double EvaluateAtContinuousIndex(itkContinuousIndexD3 const & index) const = 0;
     virtual bool IsInsideBuffer(itkIndex3 const & index) const;
     virtual bool IsInsideBuffer(itkContinuousIndexD3 const & index) const;
     virtual bool IsInsideBuffer(itkPointD3 const & point) const;
     void ConvertPointToNearestIndex(itkPointD3 const & point, itkIndex3 & index) const;
     void ConvertPointToContinousIndex(itkPointD3 const & point, itkContinuousIndexD3 & cindex) const;
     void ConvertPointToContinuousIndex(itkPointD3 const & point, itkContinuousIndexD3 & cindex) const;
     void ConvertContinuousIndexToNearestIndex(itkContinuousIndexD3 const & cindex, itkIndex3 & index) const;
     virtual itkIndex3 const & GetStartIndex() const;
     virtual itkIndex3 const & GetEndIndex() const;
     virtual itkContinuousIndexD3 const & GetStartContinuousIndex() const;
     virtual itkContinuousIndexD3 const & GetEndContinuousIndex() const;
   private:
     itkImageFunctionIUL3DD(itkImageFunctionIUL3DD const & arg0);
     void operator=(itkImageFunctionIUL3DD const & arg0);
   protected:
     itkImageFunctionIUL3DD();
     ~itkImageFunctionIUL3DD();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageFunctionIUL3DD_Pointer {
   public:
     itkImageFunctionIUL3DD_Pointer();
     itkImageFunctionIUL3DD_Pointer(itkImageFunctionIUL3DD_Pointer const & p);
     itkImageFunctionIUL3DD_Pointer(itkImageFunctionIUL3DD * p);
     ~itkImageFunctionIUL3DD_Pointer();
     itkImageFunctionIUL3DD * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageFunctionIUL3DD * GetPointer() const;
     bool operator<(itkImageFunctionIUL3DD_Pointer const & r) const;
     bool operator>(itkImageFunctionIUL3DD_Pointer const & r) const;
     bool operator<=(itkImageFunctionIUL3DD_Pointer const & r) const;
     bool operator>=(itkImageFunctionIUL3DD_Pointer const & r) const;
     itkImageFunctionIUL3DD_Pointer & operator=(itkImageFunctionIUL3DD_Pointer const & r);
     itkImageFunctionIUL3DD_Pointer & operator=(itkImageFunctionIUL3DD * r);
     itkImageFunctionIUL3DD * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageFunctionIUL3DF : public itkFunctionBasePF3D {
   public:
     enum  {  ImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageUL3 const * ptr);
     itkImageUL3 const * GetInputImage() const;
     virtual double Evaluate(itkPointF3 const & point) const = 0;
     virtual double EvaluateAtIndex(itkIndex3 const & index) const = 0;
     virtual double EvaluateAtContinuousIndex(itkContinuousIndexF3 const & index) const = 0;
     virtual bool IsInsideBuffer(itkIndex3 const & index) const;
     virtual bool IsInsideBuffer(itkContinuousIndexF3 const & index) const;
     virtual bool IsInsideBuffer(itkPointF3 const & point) const;
     void ConvertPointToNearestIndex(itkPointF3 const & point, itkIndex3 & index) const;
     void ConvertPointToContinousIndex(itkPointF3 const & point, itkContinuousIndexF3 & cindex) const;
     void ConvertPointToContinuousIndex(itkPointF3 const & point, itkContinuousIndexF3 & cindex) const;
     void ConvertContinuousIndexToNearestIndex(itkContinuousIndexF3 const & cindex, itkIndex3 & index) const;
     virtual itkIndex3 const & GetStartIndex() const;
     virtual itkIndex3 const & GetEndIndex() const;
     virtual itkContinuousIndexF3 const & GetStartContinuousIndex() const;
     virtual itkContinuousIndexF3 const & GetEndContinuousIndex() const;
   private:
     itkImageFunctionIUL3DF(itkImageFunctionIUL3DF const & arg0);
     void operator=(itkImageFunctionIUL3DF const & arg0);
   protected:
     itkImageFunctionIUL3DF();
     ~itkImageFunctionIUL3DF();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageFunctionIUL3DF_Pointer {
   public:
     itkImageFunctionIUL3DF_Pointer();
     itkImageFunctionIUL3DF_Pointer(itkImageFunctionIUL3DF_Pointer const & p);
     itkImageFunctionIUL3DF_Pointer(itkImageFunctionIUL3DF * p);
     ~itkImageFunctionIUL3DF_Pointer();
     itkImageFunctionIUL3DF * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageFunctionIUL3DF * GetPointer() const;
     bool operator<(itkImageFunctionIUL3DF_Pointer const & r) const;
     bool operator>(itkImageFunctionIUL3DF_Pointer const & r) const;
     bool operator<=(itkImageFunctionIUL3DF_Pointer const & r) const;
     bool operator>=(itkImageFunctionIUL3DF_Pointer const & r) const;
     itkImageFunctionIUL3DF_Pointer & operator=(itkImageFunctionIUL3DF_Pointer const & r);
     itkImageFunctionIUL3DF_Pointer & operator=(itkImageFunctionIUL3DF * r);
     itkImageFunctionIUL3DF * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageFunctionIUS2DD : public itkFunctionBasePD2D {
   public:
     enum  {  ImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageUS2 const * ptr);
     itkImageUS2 const * GetInputImage() const;
     virtual double Evaluate(itkPointD2 const & point) const = 0;
     virtual double EvaluateAtIndex(itkIndex2 const & index) const = 0;
     virtual double EvaluateAtContinuousIndex(itkContinuousIndexD2 const & index) const = 0;
     virtual bool IsInsideBuffer(itkIndex2 const & index) const;
     virtual bool IsInsideBuffer(itkContinuousIndexD2 const & index) const;
     virtual bool IsInsideBuffer(itkPointD2 const & point) const;
     void ConvertPointToNearestIndex(itkPointD2 const & point, itkIndex2 & index) const;
     void ConvertPointToContinousIndex(itkPointD2 const & point, itkContinuousIndexD2 & cindex) const;
     void ConvertPointToContinuousIndex(itkPointD2 const & point, itkContinuousIndexD2 & cindex) const;
     void ConvertContinuousIndexToNearestIndex(itkContinuousIndexD2 const & cindex, itkIndex2 & index) const;
     virtual itkIndex2 const & GetStartIndex() const;
     virtual itkIndex2 const & GetEndIndex() const;
     virtual itkContinuousIndexD2 const & GetStartContinuousIndex() const;
     virtual itkContinuousIndexD2 const & GetEndContinuousIndex() const;
   private:
     itkImageFunctionIUS2DD(itkImageFunctionIUS2DD const & arg0);
     void operator=(itkImageFunctionIUS2DD const & arg0);
   protected:
     itkImageFunctionIUS2DD();
     ~itkImageFunctionIUS2DD();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageFunctionIUS2DD_Pointer {
   public:
     itkImageFunctionIUS2DD_Pointer();
     itkImageFunctionIUS2DD_Pointer(itkImageFunctionIUS2DD_Pointer const & p);
     itkImageFunctionIUS2DD_Pointer(itkImageFunctionIUS2DD * p);
     ~itkImageFunctionIUS2DD_Pointer();
     itkImageFunctionIUS2DD * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageFunctionIUS2DD * GetPointer() const;
     bool operator<(itkImageFunctionIUS2DD_Pointer const & r) const;
     bool operator>(itkImageFunctionIUS2DD_Pointer const & r) const;
     bool operator<=(itkImageFunctionIUS2DD_Pointer const & r) const;
     bool operator>=(itkImageFunctionIUS2DD_Pointer const & r) const;
     itkImageFunctionIUS2DD_Pointer & operator=(itkImageFunctionIUS2DD_Pointer const & r);
     itkImageFunctionIUS2DD_Pointer & operator=(itkImageFunctionIUS2DD * r);
     itkImageFunctionIUS2DD * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageFunctionIUS2DF : public itkFunctionBasePF2D {
   public:
     enum  {  ImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageUS2 const * ptr);
     itkImageUS2 const * GetInputImage() const;
     virtual double Evaluate(itkPointF2 const & point) const = 0;
     virtual double EvaluateAtIndex(itkIndex2 const & index) const = 0;
     virtual double EvaluateAtContinuousIndex(itkContinuousIndexF2 const & index) const = 0;
     virtual bool IsInsideBuffer(itkIndex2 const & index) const;
     virtual bool IsInsideBuffer(itkContinuousIndexF2 const & index) const;
     virtual bool IsInsideBuffer(itkPointF2 const & point) const;
     void ConvertPointToNearestIndex(itkPointF2 const & point, itkIndex2 & index) const;
     void ConvertPointToContinousIndex(itkPointF2 const & point, itkContinuousIndexF2 & cindex) const;
     void ConvertPointToContinuousIndex(itkPointF2 const & point, itkContinuousIndexF2 & cindex) const;
     void ConvertContinuousIndexToNearestIndex(itkContinuousIndexF2 const & cindex, itkIndex2 & index) const;
     virtual itkIndex2 const & GetStartIndex() const;
     virtual itkIndex2 const & GetEndIndex() const;
     virtual itkContinuousIndexF2 const & GetStartContinuousIndex() const;
     virtual itkContinuousIndexF2 const & GetEndContinuousIndex() const;
   private:
     itkImageFunctionIUS2DF(itkImageFunctionIUS2DF const & arg0);
     void operator=(itkImageFunctionIUS2DF const & arg0);
   protected:
     itkImageFunctionIUS2DF();
     ~itkImageFunctionIUS2DF();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageFunctionIUS2DF_Pointer {
   public:
     itkImageFunctionIUS2DF_Pointer();
     itkImageFunctionIUS2DF_Pointer(itkImageFunctionIUS2DF_Pointer const & p);
     itkImageFunctionIUS2DF_Pointer(itkImageFunctionIUS2DF * p);
     ~itkImageFunctionIUS2DF_Pointer();
     itkImageFunctionIUS2DF * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageFunctionIUS2DF * GetPointer() const;
     bool operator<(itkImageFunctionIUS2DF_Pointer const & r) const;
     bool operator>(itkImageFunctionIUS2DF_Pointer const & r) const;
     bool operator<=(itkImageFunctionIUS2DF_Pointer const & r) const;
     bool operator>=(itkImageFunctionIUS2DF_Pointer const & r) const;
     itkImageFunctionIUS2DF_Pointer & operator=(itkImageFunctionIUS2DF_Pointer const & r);
     itkImageFunctionIUS2DF_Pointer & operator=(itkImageFunctionIUS2DF * r);
     itkImageFunctionIUS2DF * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageFunctionIUS3DD : public itkFunctionBasePD3D {
   public:
     enum  {  ImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageUS3 const * ptr);
     itkImageUS3 const * GetInputImage() const;
     virtual double Evaluate(itkPointD3 const & point) const = 0;
     virtual double EvaluateAtIndex(itkIndex3 const & index) const = 0;
     virtual double EvaluateAtContinuousIndex(itkContinuousIndexD3 const & index) const = 0;
     virtual bool IsInsideBuffer(itkIndex3 const & index) const;
     virtual bool IsInsideBuffer(itkContinuousIndexD3 const & index) const;
     virtual bool IsInsideBuffer(itkPointD3 const & point) const;
     void ConvertPointToNearestIndex(itkPointD3 const & point, itkIndex3 & index) const;
     void ConvertPointToContinousIndex(itkPointD3 const & point, itkContinuousIndexD3 & cindex) const;
     void ConvertPointToContinuousIndex(itkPointD3 const & point, itkContinuousIndexD3 & cindex) const;
     void ConvertContinuousIndexToNearestIndex(itkContinuousIndexD3 const & cindex, itkIndex3 & index) const;
     virtual itkIndex3 const & GetStartIndex() const;
     virtual itkIndex3 const & GetEndIndex() const;
     virtual itkContinuousIndexD3 const & GetStartContinuousIndex() const;
     virtual itkContinuousIndexD3 const & GetEndContinuousIndex() const;
   private:
     itkImageFunctionIUS3DD(itkImageFunctionIUS3DD const & arg0);
     void operator=(itkImageFunctionIUS3DD const & arg0);
   protected:
     itkImageFunctionIUS3DD();
     ~itkImageFunctionIUS3DD();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageFunctionIUS3DD_Pointer {
   public:
     itkImageFunctionIUS3DD_Pointer();
     itkImageFunctionIUS3DD_Pointer(itkImageFunctionIUS3DD_Pointer const & p);
     itkImageFunctionIUS3DD_Pointer(itkImageFunctionIUS3DD * p);
     ~itkImageFunctionIUS3DD_Pointer();
     itkImageFunctionIUS3DD * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageFunctionIUS3DD * GetPointer() const;
     bool operator<(itkImageFunctionIUS3DD_Pointer const & r) const;
     bool operator>(itkImageFunctionIUS3DD_Pointer const & r) const;
     bool operator<=(itkImageFunctionIUS3DD_Pointer const & r) const;
     bool operator>=(itkImageFunctionIUS3DD_Pointer const & r) const;
     itkImageFunctionIUS3DD_Pointer & operator=(itkImageFunctionIUS3DD_Pointer const & r);
     itkImageFunctionIUS3DD_Pointer & operator=(itkImageFunctionIUS3DD * r);
     itkImageFunctionIUS3DD * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageFunctionIUS3DF : public itkFunctionBasePF3D {
   public:
     enum  {  ImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageUS3 const * ptr);
     itkImageUS3 const * GetInputImage() const;
     virtual double Evaluate(itkPointF3 const & point) const = 0;
     virtual double EvaluateAtIndex(itkIndex3 const & index) const = 0;
     virtual double EvaluateAtContinuousIndex(itkContinuousIndexF3 const & index) const = 0;
     virtual bool IsInsideBuffer(itkIndex3 const & index) const;
     virtual bool IsInsideBuffer(itkContinuousIndexF3 const & index) const;
     virtual bool IsInsideBuffer(itkPointF3 const & point) const;
     void ConvertPointToNearestIndex(itkPointF3 const & point, itkIndex3 & index) const;
     void ConvertPointToContinousIndex(itkPointF3 const & point, itkContinuousIndexF3 & cindex) const;
     void ConvertPointToContinuousIndex(itkPointF3 const & point, itkContinuousIndexF3 & cindex) const;
     void ConvertContinuousIndexToNearestIndex(itkContinuousIndexF3 const & cindex, itkIndex3 & index) const;
     virtual itkIndex3 const & GetStartIndex() const;
     virtual itkIndex3 const & GetEndIndex() const;
     virtual itkContinuousIndexF3 const & GetStartContinuousIndex() const;
     virtual itkContinuousIndexF3 const & GetEndContinuousIndex() const;
   private:
     itkImageFunctionIUS3DF(itkImageFunctionIUS3DF const & arg0);
     void operator=(itkImageFunctionIUS3DF const & arg0);
   protected:
     itkImageFunctionIUS3DF();
     ~itkImageFunctionIUS3DF();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageFunctionIUS3DF_Pointer {
   public:
     itkImageFunctionIUS3DF_Pointer();
     itkImageFunctionIUS3DF_Pointer(itkImageFunctionIUS3DF_Pointer const & p);
     itkImageFunctionIUS3DF_Pointer(itkImageFunctionIUS3DF * p);
     ~itkImageFunctionIUS3DF_Pointer();
     itkImageFunctionIUS3DF * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageFunctionIUS3DF * GetPointer() const;
     bool operator<(itkImageFunctionIUS3DF_Pointer const & r) const;
     bool operator>(itkImageFunctionIUS3DF_Pointer const & r) const;
     bool operator<=(itkImageFunctionIUS3DF_Pointer const & r) const;
     bool operator>=(itkImageFunctionIUS3DF_Pointer const & r) const;
     itkImageFunctionIUS3DF_Pointer & operator=(itkImageFunctionIUS3DF_Pointer const & r);
     itkImageFunctionIUS3DF_Pointer & operator=(itkImageFunctionIUS3DF * r);
     itkImageFunctionIUS3DF * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageFunctionIVF22VD2D : public itkFunctionBasePD2VD2 {
   public:
     enum  {  ImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageVF22 const * ptr);
     itkImageVF22 const * GetInputImage() const;
     virtual itkVectorD2 Evaluate(itkPointD2 const & point) const = 0;
     virtual itkVectorD2 EvaluateAtIndex(itkIndex2 const & index) const = 0;
     virtual itkVectorD2 EvaluateAtContinuousIndex(itkContinuousIndexD2 const & index) const = 0;
     virtual bool IsInsideBuffer(itkIndex2 const & index) const;
     virtual bool IsInsideBuffer(itkContinuousIndexD2 const & index) const;
     virtual bool IsInsideBuffer(itkPointD2 const & point) const;
     void ConvertPointToNearestIndex(itkPointD2 const & point, itkIndex2 & index) const;
     void ConvertPointToContinousIndex(itkPointD2 const & point, itkContinuousIndexD2 & cindex) const;
     void ConvertPointToContinuousIndex(itkPointD2 const & point, itkContinuousIndexD2 & cindex) const;
     void ConvertContinuousIndexToNearestIndex(itkContinuousIndexD2 const & cindex, itkIndex2 & index) const;
     virtual itkIndex2 const & GetStartIndex() const;
     virtual itkIndex2 const & GetEndIndex() const;
     virtual itkContinuousIndexD2 const & GetStartContinuousIndex() const;
     virtual itkContinuousIndexD2 const & GetEndContinuousIndex() const;
   private:
     itkImageFunctionIVF22VD2D(itkImageFunctionIVF22VD2D const & arg0);
     void operator=(itkImageFunctionIVF22VD2D const & arg0);
   protected:
     itkImageFunctionIVF22VD2D();
     ~itkImageFunctionIVF22VD2D();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageFunctionIVF22VD2D_Pointer {
   public:
     itkImageFunctionIVF22VD2D_Pointer();
     itkImageFunctionIVF22VD2D_Pointer(itkImageFunctionIVF22VD2D_Pointer const & p);
     itkImageFunctionIVF22VD2D_Pointer(itkImageFunctionIVF22VD2D * p);
     ~itkImageFunctionIVF22VD2D_Pointer();
     itkImageFunctionIVF22VD2D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageFunctionIVF22VD2D * GetPointer() const;
     bool operator<(itkImageFunctionIVF22VD2D_Pointer const & r) const;
     bool operator>(itkImageFunctionIVF22VD2D_Pointer const & r) const;
     bool operator<=(itkImageFunctionIVF22VD2D_Pointer const & r) const;
     bool operator>=(itkImageFunctionIVF22VD2D_Pointer const & r) const;
     itkImageFunctionIVF22VD2D_Pointer & operator=(itkImageFunctionIVF22VD2D_Pointer const & r);
     itkImageFunctionIVF22VD2D_Pointer & operator=(itkImageFunctionIVF22VD2D * r);
     itkImageFunctionIVF22VD2D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageFunctionIVF33VD3D : public itkFunctionBasePD3VD3 {
   public:
     enum  {  ImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInputImage(itkImageVF33 const * ptr);
     itkImageVF33 const * GetInputImage() const;
     virtual itkVectorD3 Evaluate(itkPointD3 const & point) const = 0;
     virtual itkVectorD3 EvaluateAtIndex(itkIndex3 const & index) const = 0;
     virtual itkVectorD3 EvaluateAtContinuousIndex(itkContinuousIndexD3 const & index) const = 0;
     virtual bool IsInsideBuffer(itkIndex3 const & index) const;
     virtual bool IsInsideBuffer(itkContinuousIndexD3 const & index) const;
     virtual bool IsInsideBuffer(itkPointD3 const & point) const;
     void ConvertPointToNearestIndex(itkPointD3 const & point, itkIndex3 & index) const;
     void ConvertPointToContinousIndex(itkPointD3 const & point, itkContinuousIndexD3 & cindex) const;
     void ConvertPointToContinuousIndex(itkPointD3 const & point, itkContinuousIndexD3 & cindex) const;
     void ConvertContinuousIndexToNearestIndex(itkContinuousIndexD3 const & cindex, itkIndex3 & index) const;
     virtual itkIndex3 const & GetStartIndex() const;
     virtual itkIndex3 const & GetEndIndex() const;
     virtual itkContinuousIndexD3 const & GetStartContinuousIndex() const;
     virtual itkContinuousIndexD3 const & GetEndContinuousIndex() const;
   private:
     itkImageFunctionIVF33VD3D(itkImageFunctionIVF33VD3D const & arg0);
     void operator=(itkImageFunctionIVF33VD3D const & arg0);
   protected:
     itkImageFunctionIVF33VD3D();
     ~itkImageFunctionIVF33VD3D();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageFunctionIVF33VD3D_Pointer {
   public:
     itkImageFunctionIVF33VD3D_Pointer();
     itkImageFunctionIVF33VD3D_Pointer(itkImageFunctionIVF33VD3D_Pointer const & p);
     itkImageFunctionIVF33VD3D_Pointer(itkImageFunctionIVF33VD3D * p);
     ~itkImageFunctionIVF33VD3D_Pointer();
     itkImageFunctionIVF33VD3D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageFunctionIVF33VD3D * GetPointer() const;
     bool operator<(itkImageFunctionIVF33VD3D_Pointer const & r) const;
     bool operator>(itkImageFunctionIVF33VD3D_Pointer const & r) const;
     bool operator<=(itkImageFunctionIVF33VD3D_Pointer const & r) const;
     bool operator>=(itkImageFunctionIVF33VD3D_Pointer const & r) const;
     itkImageFunctionIVF33VD3D_Pointer & operator=(itkImageFunctionIVF33VD3D_Pointer const & r);
     itkImageFunctionIVF33VD3D_Pointer & operator=(itkImageFunctionIVF33VD3D * r);
     itkImageFunctionIVF33VD3D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


