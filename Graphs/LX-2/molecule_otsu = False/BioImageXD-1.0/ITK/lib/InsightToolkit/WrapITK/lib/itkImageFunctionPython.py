# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkImageFunctionPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkImageFunctionPython', [dirname(__file__)])
        except ImportError:
            import _itkImageFunctionPython
            return _itkImageFunctionPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkImageFunctionPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkImageFunctionPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkImageFunctionPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkPointPython
import vnl_vectorPython
import vcl_complexPython
import pyBasePython
import vnl_matrixPython
import itkFixedArrayPython
import itkVectorPython
import vnl_vector_refPython
import itkContinuousIndexPython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import itkImagePython
import itkCovariantVectorPython
import ITKRegionsPython
import ITKCommonBasePython
import itkEventObjectsPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkFunctionBasePython
import itkArrayPython
def itkImageFunctionICVF33VD3D_New():
  return itkImageFunctionICVF33VD3D.New()

def itkImageFunctionIVF33VD3D_New():
  return itkImageFunctionIVF33VD3D.New()

def itkImageFunctionID3DD_New():
  return itkImageFunctionID3DD.New()

def itkImageFunctionID3DF_New():
  return itkImageFunctionID3DF.New()

def itkImageFunctionIF3DD_New():
  return itkImageFunctionIF3DD.New()

def itkImageFunctionIF3DF_New():
  return itkImageFunctionIF3DF.New()

def itkImageFunctionIUS3DD_New():
  return itkImageFunctionIUS3DD.New()

def itkImageFunctionIUS3DF_New():
  return itkImageFunctionIUS3DF.New()

def itkImageFunctionIUL3DD_New():
  return itkImageFunctionIUL3DD.New()

def itkImageFunctionIUL3DF_New():
  return itkImageFunctionIUL3DF.New()

def itkImageFunctionIUC3DD_New():
  return itkImageFunctionIUC3DD.New()

def itkImageFunctionIUC3DF_New():
  return itkImageFunctionIUC3DF.New()

def itkImageFunctionICVF22VD2D_New():
  return itkImageFunctionICVF22VD2D.New()

def itkImageFunctionIVF22VD2D_New():
  return itkImageFunctionIVF22VD2D.New()

def itkImageFunctionID2DD_New():
  return itkImageFunctionID2DD.New()

def itkImageFunctionID2DF_New():
  return itkImageFunctionID2DF.New()

def itkImageFunctionIF2DD_New():
  return itkImageFunctionIF2DD.New()

def itkImageFunctionIF2DF_New():
  return itkImageFunctionIF2DF.New()

def itkImageFunctionIUS2DD_New():
  return itkImageFunctionIUS2DD.New()

def itkImageFunctionIUS2DF_New():
  return itkImageFunctionIUS2DF.New()

def itkImageFunctionIUL2DD_New():
  return itkImageFunctionIUL2DD.New()

def itkImageFunctionIUL2DF_New():
  return itkImageFunctionIUL2DF.New()

def itkImageFunctionIUC2DD_New():
  return itkImageFunctionIUC2DD.New()

def itkImageFunctionIUC2DF_New():
  return itkImageFunctionIUC2DF.New()

class itkImageFunctionICVF22VD2D(itkFunctionBasePython.itkFunctionBasePD2VD2):
    """Proxy of C++ itkImageFunctionICVF22VD2D class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkImageFunctionPython.itkImageFunctionICVF22VD2D_ImageDimension
    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageCVF22 ptr)"""
        return _itkImageFunctionPython.itkImageFunctionICVF22VD2D_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageCVF22"""
        return _itkImageFunctionPython.itkImageFunctionICVF22VD2D_GetInputImage(self)

    def EvaluateAtIndex(self, *args):
        """EvaluateAtIndex(self, itkIndex2 index) -> itkVectorD2"""
        return _itkImageFunctionPython.itkImageFunctionICVF22VD2D_EvaluateAtIndex(self, *args)

    def EvaluateAtContinuousIndex(self, *args):
        """EvaluateAtContinuousIndex(self, itkContinuousIndexD2 index) -> itkVectorD2"""
        return _itkImageFunctionPython.itkImageFunctionICVF22VD2D_EvaluateAtContinuousIndex(self, *args)

    def IsInsideBuffer(self, *args):
        """
        IsInsideBuffer(self, itkIndex2 index) -> bool
        IsInsideBuffer(self, itkContinuousIndexD2 index) -> bool
        IsInsideBuffer(self, itkPointD2 point) -> bool
        """
        return _itkImageFunctionPython.itkImageFunctionICVF22VD2D_IsInsideBuffer(self, *args)

    def ConvertPointToNearestIndex(self, *args):
        """ConvertPointToNearestIndex(self, itkPointD2 point, itkIndex2 index)"""
        return _itkImageFunctionPython.itkImageFunctionICVF22VD2D_ConvertPointToNearestIndex(self, *args)

    def ConvertPointToContinousIndex(self, *args):
        """ConvertPointToContinousIndex(self, itkPointD2 point, itkContinuousIndexD2 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionICVF22VD2D_ConvertPointToContinousIndex(self, *args)

    def ConvertPointToContinuousIndex(self, *args):
        """ConvertPointToContinuousIndex(self, itkPointD2 point, itkContinuousIndexD2 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionICVF22VD2D_ConvertPointToContinuousIndex(self, *args)

    def ConvertContinuousIndexToNearestIndex(self, *args):
        """ConvertContinuousIndexToNearestIndex(self, itkContinuousIndexD2 cindex, itkIndex2 index)"""
        return _itkImageFunctionPython.itkImageFunctionICVF22VD2D_ConvertContinuousIndexToNearestIndex(self, *args)

    def GetStartIndex(self):
        """GetStartIndex(self) -> itkIndex2"""
        return _itkImageFunctionPython.itkImageFunctionICVF22VD2D_GetStartIndex(self)

    def GetEndIndex(self):
        """GetEndIndex(self) -> itkIndex2"""
        return _itkImageFunctionPython.itkImageFunctionICVF22VD2D_GetEndIndex(self)

    def GetStartContinuousIndex(self):
        """GetStartContinuousIndex(self) -> itkContinuousIndexD2"""
        return _itkImageFunctionPython.itkImageFunctionICVF22VD2D_GetStartContinuousIndex(self)

    def GetEndContinuousIndex(self):
        """GetEndContinuousIndex(self) -> itkContinuousIndexD2"""
        return _itkImageFunctionPython.itkImageFunctionICVF22VD2D_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionPython.delete_itkImageFunctionICVF22VD2D
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageFunctionICVF22VD2D"""
        return _itkImageFunctionPython.itkImageFunctionICVF22VD2D_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageFunctionICVF22VD2D"""
        return _itkImageFunctionPython.itkImageFunctionICVF22VD2D_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageFunctionICVF22VD2D
        
        Create a new object of the class itkImageFunctionICVF22VD2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageFunctionICVF22VD2D.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageFunctionICVF22VD2D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionICVF22VD2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionICVF22VD2D.SetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionICVF22VD2D_SetInputImage,None,itkImageFunctionICVF22VD2D)
itkImageFunctionICVF22VD2D.GetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionICVF22VD2D_GetInputImage,None,itkImageFunctionICVF22VD2D)
itkImageFunctionICVF22VD2D.EvaluateAtIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionICVF22VD2D_EvaluateAtIndex,None,itkImageFunctionICVF22VD2D)
itkImageFunctionICVF22VD2D.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionICVF22VD2D_EvaluateAtContinuousIndex,None,itkImageFunctionICVF22VD2D)
itkImageFunctionICVF22VD2D.IsInsideBuffer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionICVF22VD2D_IsInsideBuffer,None,itkImageFunctionICVF22VD2D)
itkImageFunctionICVF22VD2D.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionICVF22VD2D_ConvertPointToNearestIndex,None,itkImageFunctionICVF22VD2D)
itkImageFunctionICVF22VD2D.ConvertPointToContinousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionICVF22VD2D_ConvertPointToContinousIndex,None,itkImageFunctionICVF22VD2D)
itkImageFunctionICVF22VD2D.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionICVF22VD2D_ConvertPointToContinuousIndex,None,itkImageFunctionICVF22VD2D)
itkImageFunctionICVF22VD2D.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionICVF22VD2D_ConvertContinuousIndexToNearestIndex,None,itkImageFunctionICVF22VD2D)
itkImageFunctionICVF22VD2D.GetStartIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionICVF22VD2D_GetStartIndex,None,itkImageFunctionICVF22VD2D)
itkImageFunctionICVF22VD2D.GetEndIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionICVF22VD2D_GetEndIndex,None,itkImageFunctionICVF22VD2D)
itkImageFunctionICVF22VD2D.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionICVF22VD2D_GetStartContinuousIndex,None,itkImageFunctionICVF22VD2D)
itkImageFunctionICVF22VD2D.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionICVF22VD2D_GetEndContinuousIndex,None,itkImageFunctionICVF22VD2D)
itkImageFunctionICVF22VD2D.GetPointer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionICVF22VD2D_GetPointer,None,itkImageFunctionICVF22VD2D)
itkImageFunctionICVF22VD2D_swigregister = _itkImageFunctionPython.itkImageFunctionICVF22VD2D_swigregister
itkImageFunctionICVF22VD2D_swigregister(itkImageFunctionICVF22VD2D)

def itkImageFunctionICVF22VD2D_cast(*args):
  """itkImageFunctionICVF22VD2D_cast(itkLightObject obj) -> itkImageFunctionICVF22VD2D"""
  return _itkImageFunctionPython.itkImageFunctionICVF22VD2D_cast(*args)

class itkImageFunctionICVF33VD3D(itkFunctionBasePython.itkFunctionBasePD3VD3):
    """Proxy of C++ itkImageFunctionICVF33VD3D class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkImageFunctionPython.itkImageFunctionICVF33VD3D_ImageDimension
    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageCVF33 ptr)"""
        return _itkImageFunctionPython.itkImageFunctionICVF33VD3D_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageCVF33"""
        return _itkImageFunctionPython.itkImageFunctionICVF33VD3D_GetInputImage(self)

    def EvaluateAtIndex(self, *args):
        """EvaluateAtIndex(self, itkIndex3 index) -> itkVectorD3"""
        return _itkImageFunctionPython.itkImageFunctionICVF33VD3D_EvaluateAtIndex(self, *args)

    def EvaluateAtContinuousIndex(self, *args):
        """EvaluateAtContinuousIndex(self, itkContinuousIndexD3 index) -> itkVectorD3"""
        return _itkImageFunctionPython.itkImageFunctionICVF33VD3D_EvaluateAtContinuousIndex(self, *args)

    def IsInsideBuffer(self, *args):
        """
        IsInsideBuffer(self, itkIndex3 index) -> bool
        IsInsideBuffer(self, itkContinuousIndexD3 index) -> bool
        IsInsideBuffer(self, itkPointD3 point) -> bool
        """
        return _itkImageFunctionPython.itkImageFunctionICVF33VD3D_IsInsideBuffer(self, *args)

    def ConvertPointToNearestIndex(self, *args):
        """ConvertPointToNearestIndex(self, itkPointD3 point, itkIndex3 index)"""
        return _itkImageFunctionPython.itkImageFunctionICVF33VD3D_ConvertPointToNearestIndex(self, *args)

    def ConvertPointToContinousIndex(self, *args):
        """ConvertPointToContinousIndex(self, itkPointD3 point, itkContinuousIndexD3 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionICVF33VD3D_ConvertPointToContinousIndex(self, *args)

    def ConvertPointToContinuousIndex(self, *args):
        """ConvertPointToContinuousIndex(self, itkPointD3 point, itkContinuousIndexD3 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionICVF33VD3D_ConvertPointToContinuousIndex(self, *args)

    def ConvertContinuousIndexToNearestIndex(self, *args):
        """ConvertContinuousIndexToNearestIndex(self, itkContinuousIndexD3 cindex, itkIndex3 index)"""
        return _itkImageFunctionPython.itkImageFunctionICVF33VD3D_ConvertContinuousIndexToNearestIndex(self, *args)

    def GetStartIndex(self):
        """GetStartIndex(self) -> itkIndex3"""
        return _itkImageFunctionPython.itkImageFunctionICVF33VD3D_GetStartIndex(self)

    def GetEndIndex(self):
        """GetEndIndex(self) -> itkIndex3"""
        return _itkImageFunctionPython.itkImageFunctionICVF33VD3D_GetEndIndex(self)

    def GetStartContinuousIndex(self):
        """GetStartContinuousIndex(self) -> itkContinuousIndexD3"""
        return _itkImageFunctionPython.itkImageFunctionICVF33VD3D_GetStartContinuousIndex(self)

    def GetEndContinuousIndex(self):
        """GetEndContinuousIndex(self) -> itkContinuousIndexD3"""
        return _itkImageFunctionPython.itkImageFunctionICVF33VD3D_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionPython.delete_itkImageFunctionICVF33VD3D
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageFunctionICVF33VD3D"""
        return _itkImageFunctionPython.itkImageFunctionICVF33VD3D_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageFunctionICVF33VD3D"""
        return _itkImageFunctionPython.itkImageFunctionICVF33VD3D_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageFunctionICVF33VD3D
        
        Create a new object of the class itkImageFunctionICVF33VD3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageFunctionICVF33VD3D.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageFunctionICVF33VD3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionICVF33VD3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionICVF33VD3D.SetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionICVF33VD3D_SetInputImage,None,itkImageFunctionICVF33VD3D)
itkImageFunctionICVF33VD3D.GetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionICVF33VD3D_GetInputImage,None,itkImageFunctionICVF33VD3D)
itkImageFunctionICVF33VD3D.EvaluateAtIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionICVF33VD3D_EvaluateAtIndex,None,itkImageFunctionICVF33VD3D)
itkImageFunctionICVF33VD3D.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionICVF33VD3D_EvaluateAtContinuousIndex,None,itkImageFunctionICVF33VD3D)
itkImageFunctionICVF33VD3D.IsInsideBuffer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionICVF33VD3D_IsInsideBuffer,None,itkImageFunctionICVF33VD3D)
itkImageFunctionICVF33VD3D.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionICVF33VD3D_ConvertPointToNearestIndex,None,itkImageFunctionICVF33VD3D)
itkImageFunctionICVF33VD3D.ConvertPointToContinousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionICVF33VD3D_ConvertPointToContinousIndex,None,itkImageFunctionICVF33VD3D)
itkImageFunctionICVF33VD3D.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionICVF33VD3D_ConvertPointToContinuousIndex,None,itkImageFunctionICVF33VD3D)
itkImageFunctionICVF33VD3D.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionICVF33VD3D_ConvertContinuousIndexToNearestIndex,None,itkImageFunctionICVF33VD3D)
itkImageFunctionICVF33VD3D.GetStartIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionICVF33VD3D_GetStartIndex,None,itkImageFunctionICVF33VD3D)
itkImageFunctionICVF33VD3D.GetEndIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionICVF33VD3D_GetEndIndex,None,itkImageFunctionICVF33VD3D)
itkImageFunctionICVF33VD3D.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionICVF33VD3D_GetStartContinuousIndex,None,itkImageFunctionICVF33VD3D)
itkImageFunctionICVF33VD3D.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionICVF33VD3D_GetEndContinuousIndex,None,itkImageFunctionICVF33VD3D)
itkImageFunctionICVF33VD3D.GetPointer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionICVF33VD3D_GetPointer,None,itkImageFunctionICVF33VD3D)
itkImageFunctionICVF33VD3D_swigregister = _itkImageFunctionPython.itkImageFunctionICVF33VD3D_swigregister
itkImageFunctionICVF33VD3D_swigregister(itkImageFunctionICVF33VD3D)

def itkImageFunctionICVF33VD3D_cast(*args):
  """itkImageFunctionICVF33VD3D_cast(itkLightObject obj) -> itkImageFunctionICVF33VD3D"""
  return _itkImageFunctionPython.itkImageFunctionICVF33VD3D_cast(*args)

class itkImageFunctionID2DD(itkFunctionBasePython.itkFunctionBasePD2D):
    """Proxy of C++ itkImageFunctionID2DD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkImageFunctionPython.itkImageFunctionID2DD_ImageDimension
    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageD2 ptr)"""
        return _itkImageFunctionPython.itkImageFunctionID2DD_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageD2"""
        return _itkImageFunctionPython.itkImageFunctionID2DD_GetInputImage(self)

    def EvaluateAtIndex(self, *args):
        """EvaluateAtIndex(self, itkIndex2 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionID2DD_EvaluateAtIndex(self, *args)

    def EvaluateAtContinuousIndex(self, *args):
        """EvaluateAtContinuousIndex(self, itkContinuousIndexD2 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionID2DD_EvaluateAtContinuousIndex(self, *args)

    def IsInsideBuffer(self, *args):
        """
        IsInsideBuffer(self, itkIndex2 index) -> bool
        IsInsideBuffer(self, itkContinuousIndexD2 index) -> bool
        IsInsideBuffer(self, itkPointD2 point) -> bool
        """
        return _itkImageFunctionPython.itkImageFunctionID2DD_IsInsideBuffer(self, *args)

    def ConvertPointToNearestIndex(self, *args):
        """ConvertPointToNearestIndex(self, itkPointD2 point, itkIndex2 index)"""
        return _itkImageFunctionPython.itkImageFunctionID2DD_ConvertPointToNearestIndex(self, *args)

    def ConvertPointToContinousIndex(self, *args):
        """ConvertPointToContinousIndex(self, itkPointD2 point, itkContinuousIndexD2 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionID2DD_ConvertPointToContinousIndex(self, *args)

    def ConvertPointToContinuousIndex(self, *args):
        """ConvertPointToContinuousIndex(self, itkPointD2 point, itkContinuousIndexD2 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionID2DD_ConvertPointToContinuousIndex(self, *args)

    def ConvertContinuousIndexToNearestIndex(self, *args):
        """ConvertContinuousIndexToNearestIndex(self, itkContinuousIndexD2 cindex, itkIndex2 index)"""
        return _itkImageFunctionPython.itkImageFunctionID2DD_ConvertContinuousIndexToNearestIndex(self, *args)

    def GetStartIndex(self):
        """GetStartIndex(self) -> itkIndex2"""
        return _itkImageFunctionPython.itkImageFunctionID2DD_GetStartIndex(self)

    def GetEndIndex(self):
        """GetEndIndex(self) -> itkIndex2"""
        return _itkImageFunctionPython.itkImageFunctionID2DD_GetEndIndex(self)

    def GetStartContinuousIndex(self):
        """GetStartContinuousIndex(self) -> itkContinuousIndexD2"""
        return _itkImageFunctionPython.itkImageFunctionID2DD_GetStartContinuousIndex(self)

    def GetEndContinuousIndex(self):
        """GetEndContinuousIndex(self) -> itkContinuousIndexD2"""
        return _itkImageFunctionPython.itkImageFunctionID2DD_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionPython.delete_itkImageFunctionID2DD
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageFunctionID2DD"""
        return _itkImageFunctionPython.itkImageFunctionID2DD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageFunctionID2DD"""
        return _itkImageFunctionPython.itkImageFunctionID2DD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageFunctionID2DD
        
        Create a new object of the class itkImageFunctionID2DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageFunctionID2DD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageFunctionID2DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionID2DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionID2DD.SetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID2DD_SetInputImage,None,itkImageFunctionID2DD)
itkImageFunctionID2DD.GetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID2DD_GetInputImage,None,itkImageFunctionID2DD)
itkImageFunctionID2DD.EvaluateAtIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID2DD_EvaluateAtIndex,None,itkImageFunctionID2DD)
itkImageFunctionID2DD.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID2DD_EvaluateAtContinuousIndex,None,itkImageFunctionID2DD)
itkImageFunctionID2DD.IsInsideBuffer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID2DD_IsInsideBuffer,None,itkImageFunctionID2DD)
itkImageFunctionID2DD.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID2DD_ConvertPointToNearestIndex,None,itkImageFunctionID2DD)
itkImageFunctionID2DD.ConvertPointToContinousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID2DD_ConvertPointToContinousIndex,None,itkImageFunctionID2DD)
itkImageFunctionID2DD.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID2DD_ConvertPointToContinuousIndex,None,itkImageFunctionID2DD)
itkImageFunctionID2DD.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID2DD_ConvertContinuousIndexToNearestIndex,None,itkImageFunctionID2DD)
itkImageFunctionID2DD.GetStartIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID2DD_GetStartIndex,None,itkImageFunctionID2DD)
itkImageFunctionID2DD.GetEndIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID2DD_GetEndIndex,None,itkImageFunctionID2DD)
itkImageFunctionID2DD.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID2DD_GetStartContinuousIndex,None,itkImageFunctionID2DD)
itkImageFunctionID2DD.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID2DD_GetEndContinuousIndex,None,itkImageFunctionID2DD)
itkImageFunctionID2DD.GetPointer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID2DD_GetPointer,None,itkImageFunctionID2DD)
itkImageFunctionID2DD_swigregister = _itkImageFunctionPython.itkImageFunctionID2DD_swigregister
itkImageFunctionID2DD_swigregister(itkImageFunctionID2DD)

def itkImageFunctionID2DD_cast(*args):
  """itkImageFunctionID2DD_cast(itkLightObject obj) -> itkImageFunctionID2DD"""
  return _itkImageFunctionPython.itkImageFunctionID2DD_cast(*args)

class itkImageFunctionID2DF(itkFunctionBasePython.itkFunctionBasePF2D):
    """Proxy of C++ itkImageFunctionID2DF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkImageFunctionPython.itkImageFunctionID2DF_ImageDimension
    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageD2 ptr)"""
        return _itkImageFunctionPython.itkImageFunctionID2DF_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageD2"""
        return _itkImageFunctionPython.itkImageFunctionID2DF_GetInputImage(self)

    def EvaluateAtIndex(self, *args):
        """EvaluateAtIndex(self, itkIndex2 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionID2DF_EvaluateAtIndex(self, *args)

    def EvaluateAtContinuousIndex(self, *args):
        """EvaluateAtContinuousIndex(self, itkContinuousIndexF2 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionID2DF_EvaluateAtContinuousIndex(self, *args)

    def IsInsideBuffer(self, *args):
        """
        IsInsideBuffer(self, itkIndex2 index) -> bool
        IsInsideBuffer(self, itkContinuousIndexF2 index) -> bool
        IsInsideBuffer(self, itkPointF2 point) -> bool
        """
        return _itkImageFunctionPython.itkImageFunctionID2DF_IsInsideBuffer(self, *args)

    def ConvertPointToNearestIndex(self, *args):
        """ConvertPointToNearestIndex(self, itkPointF2 point, itkIndex2 index)"""
        return _itkImageFunctionPython.itkImageFunctionID2DF_ConvertPointToNearestIndex(self, *args)

    def ConvertPointToContinousIndex(self, *args):
        """ConvertPointToContinousIndex(self, itkPointF2 point, itkContinuousIndexF2 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionID2DF_ConvertPointToContinousIndex(self, *args)

    def ConvertPointToContinuousIndex(self, *args):
        """ConvertPointToContinuousIndex(self, itkPointF2 point, itkContinuousIndexF2 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionID2DF_ConvertPointToContinuousIndex(self, *args)

    def ConvertContinuousIndexToNearestIndex(self, *args):
        """ConvertContinuousIndexToNearestIndex(self, itkContinuousIndexF2 cindex, itkIndex2 index)"""
        return _itkImageFunctionPython.itkImageFunctionID2DF_ConvertContinuousIndexToNearestIndex(self, *args)

    def GetStartIndex(self):
        """GetStartIndex(self) -> itkIndex2"""
        return _itkImageFunctionPython.itkImageFunctionID2DF_GetStartIndex(self)

    def GetEndIndex(self):
        """GetEndIndex(self) -> itkIndex2"""
        return _itkImageFunctionPython.itkImageFunctionID2DF_GetEndIndex(self)

    def GetStartContinuousIndex(self):
        """GetStartContinuousIndex(self) -> itkContinuousIndexF2"""
        return _itkImageFunctionPython.itkImageFunctionID2DF_GetStartContinuousIndex(self)

    def GetEndContinuousIndex(self):
        """GetEndContinuousIndex(self) -> itkContinuousIndexF2"""
        return _itkImageFunctionPython.itkImageFunctionID2DF_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionPython.delete_itkImageFunctionID2DF
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageFunctionID2DF"""
        return _itkImageFunctionPython.itkImageFunctionID2DF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageFunctionID2DF"""
        return _itkImageFunctionPython.itkImageFunctionID2DF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageFunctionID2DF
        
        Create a new object of the class itkImageFunctionID2DF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageFunctionID2DF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageFunctionID2DF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionID2DF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionID2DF.SetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID2DF_SetInputImage,None,itkImageFunctionID2DF)
itkImageFunctionID2DF.GetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID2DF_GetInputImage,None,itkImageFunctionID2DF)
itkImageFunctionID2DF.EvaluateAtIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID2DF_EvaluateAtIndex,None,itkImageFunctionID2DF)
itkImageFunctionID2DF.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID2DF_EvaluateAtContinuousIndex,None,itkImageFunctionID2DF)
itkImageFunctionID2DF.IsInsideBuffer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID2DF_IsInsideBuffer,None,itkImageFunctionID2DF)
itkImageFunctionID2DF.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID2DF_ConvertPointToNearestIndex,None,itkImageFunctionID2DF)
itkImageFunctionID2DF.ConvertPointToContinousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID2DF_ConvertPointToContinousIndex,None,itkImageFunctionID2DF)
itkImageFunctionID2DF.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID2DF_ConvertPointToContinuousIndex,None,itkImageFunctionID2DF)
itkImageFunctionID2DF.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID2DF_ConvertContinuousIndexToNearestIndex,None,itkImageFunctionID2DF)
itkImageFunctionID2DF.GetStartIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID2DF_GetStartIndex,None,itkImageFunctionID2DF)
itkImageFunctionID2DF.GetEndIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID2DF_GetEndIndex,None,itkImageFunctionID2DF)
itkImageFunctionID2DF.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID2DF_GetStartContinuousIndex,None,itkImageFunctionID2DF)
itkImageFunctionID2DF.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID2DF_GetEndContinuousIndex,None,itkImageFunctionID2DF)
itkImageFunctionID2DF.GetPointer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID2DF_GetPointer,None,itkImageFunctionID2DF)
itkImageFunctionID2DF_swigregister = _itkImageFunctionPython.itkImageFunctionID2DF_swigregister
itkImageFunctionID2DF_swigregister(itkImageFunctionID2DF)

def itkImageFunctionID2DF_cast(*args):
  """itkImageFunctionID2DF_cast(itkLightObject obj) -> itkImageFunctionID2DF"""
  return _itkImageFunctionPython.itkImageFunctionID2DF_cast(*args)

class itkImageFunctionID3DD(itkFunctionBasePython.itkFunctionBasePD3D):
    """Proxy of C++ itkImageFunctionID3DD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkImageFunctionPython.itkImageFunctionID3DD_ImageDimension
    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageD3 ptr)"""
        return _itkImageFunctionPython.itkImageFunctionID3DD_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageD3"""
        return _itkImageFunctionPython.itkImageFunctionID3DD_GetInputImage(self)

    def EvaluateAtIndex(self, *args):
        """EvaluateAtIndex(self, itkIndex3 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionID3DD_EvaluateAtIndex(self, *args)

    def EvaluateAtContinuousIndex(self, *args):
        """EvaluateAtContinuousIndex(self, itkContinuousIndexD3 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionID3DD_EvaluateAtContinuousIndex(self, *args)

    def IsInsideBuffer(self, *args):
        """
        IsInsideBuffer(self, itkIndex3 index) -> bool
        IsInsideBuffer(self, itkContinuousIndexD3 index) -> bool
        IsInsideBuffer(self, itkPointD3 point) -> bool
        """
        return _itkImageFunctionPython.itkImageFunctionID3DD_IsInsideBuffer(self, *args)

    def ConvertPointToNearestIndex(self, *args):
        """ConvertPointToNearestIndex(self, itkPointD3 point, itkIndex3 index)"""
        return _itkImageFunctionPython.itkImageFunctionID3DD_ConvertPointToNearestIndex(self, *args)

    def ConvertPointToContinousIndex(self, *args):
        """ConvertPointToContinousIndex(self, itkPointD3 point, itkContinuousIndexD3 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionID3DD_ConvertPointToContinousIndex(self, *args)

    def ConvertPointToContinuousIndex(self, *args):
        """ConvertPointToContinuousIndex(self, itkPointD3 point, itkContinuousIndexD3 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionID3DD_ConvertPointToContinuousIndex(self, *args)

    def ConvertContinuousIndexToNearestIndex(self, *args):
        """ConvertContinuousIndexToNearestIndex(self, itkContinuousIndexD3 cindex, itkIndex3 index)"""
        return _itkImageFunctionPython.itkImageFunctionID3DD_ConvertContinuousIndexToNearestIndex(self, *args)

    def GetStartIndex(self):
        """GetStartIndex(self) -> itkIndex3"""
        return _itkImageFunctionPython.itkImageFunctionID3DD_GetStartIndex(self)

    def GetEndIndex(self):
        """GetEndIndex(self) -> itkIndex3"""
        return _itkImageFunctionPython.itkImageFunctionID3DD_GetEndIndex(self)

    def GetStartContinuousIndex(self):
        """GetStartContinuousIndex(self) -> itkContinuousIndexD3"""
        return _itkImageFunctionPython.itkImageFunctionID3DD_GetStartContinuousIndex(self)

    def GetEndContinuousIndex(self):
        """GetEndContinuousIndex(self) -> itkContinuousIndexD3"""
        return _itkImageFunctionPython.itkImageFunctionID3DD_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionPython.delete_itkImageFunctionID3DD
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageFunctionID3DD"""
        return _itkImageFunctionPython.itkImageFunctionID3DD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageFunctionID3DD"""
        return _itkImageFunctionPython.itkImageFunctionID3DD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageFunctionID3DD
        
        Create a new object of the class itkImageFunctionID3DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageFunctionID3DD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageFunctionID3DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionID3DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionID3DD.SetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID3DD_SetInputImage,None,itkImageFunctionID3DD)
itkImageFunctionID3DD.GetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID3DD_GetInputImage,None,itkImageFunctionID3DD)
itkImageFunctionID3DD.EvaluateAtIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID3DD_EvaluateAtIndex,None,itkImageFunctionID3DD)
itkImageFunctionID3DD.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID3DD_EvaluateAtContinuousIndex,None,itkImageFunctionID3DD)
itkImageFunctionID3DD.IsInsideBuffer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID3DD_IsInsideBuffer,None,itkImageFunctionID3DD)
itkImageFunctionID3DD.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID3DD_ConvertPointToNearestIndex,None,itkImageFunctionID3DD)
itkImageFunctionID3DD.ConvertPointToContinousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID3DD_ConvertPointToContinousIndex,None,itkImageFunctionID3DD)
itkImageFunctionID3DD.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID3DD_ConvertPointToContinuousIndex,None,itkImageFunctionID3DD)
itkImageFunctionID3DD.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID3DD_ConvertContinuousIndexToNearestIndex,None,itkImageFunctionID3DD)
itkImageFunctionID3DD.GetStartIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID3DD_GetStartIndex,None,itkImageFunctionID3DD)
itkImageFunctionID3DD.GetEndIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID3DD_GetEndIndex,None,itkImageFunctionID3DD)
itkImageFunctionID3DD.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID3DD_GetStartContinuousIndex,None,itkImageFunctionID3DD)
itkImageFunctionID3DD.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID3DD_GetEndContinuousIndex,None,itkImageFunctionID3DD)
itkImageFunctionID3DD.GetPointer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID3DD_GetPointer,None,itkImageFunctionID3DD)
itkImageFunctionID3DD_swigregister = _itkImageFunctionPython.itkImageFunctionID3DD_swigregister
itkImageFunctionID3DD_swigregister(itkImageFunctionID3DD)

def itkImageFunctionID3DD_cast(*args):
  """itkImageFunctionID3DD_cast(itkLightObject obj) -> itkImageFunctionID3DD"""
  return _itkImageFunctionPython.itkImageFunctionID3DD_cast(*args)

class itkImageFunctionID3DF(itkFunctionBasePython.itkFunctionBasePF3D):
    """Proxy of C++ itkImageFunctionID3DF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkImageFunctionPython.itkImageFunctionID3DF_ImageDimension
    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageD3 ptr)"""
        return _itkImageFunctionPython.itkImageFunctionID3DF_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageD3"""
        return _itkImageFunctionPython.itkImageFunctionID3DF_GetInputImage(self)

    def EvaluateAtIndex(self, *args):
        """EvaluateAtIndex(self, itkIndex3 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionID3DF_EvaluateAtIndex(self, *args)

    def EvaluateAtContinuousIndex(self, *args):
        """EvaluateAtContinuousIndex(self, itkContinuousIndexF3 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionID3DF_EvaluateAtContinuousIndex(self, *args)

    def IsInsideBuffer(self, *args):
        """
        IsInsideBuffer(self, itkIndex3 index) -> bool
        IsInsideBuffer(self, itkContinuousIndexF3 index) -> bool
        IsInsideBuffer(self, itkPointF3 point) -> bool
        """
        return _itkImageFunctionPython.itkImageFunctionID3DF_IsInsideBuffer(self, *args)

    def ConvertPointToNearestIndex(self, *args):
        """ConvertPointToNearestIndex(self, itkPointF3 point, itkIndex3 index)"""
        return _itkImageFunctionPython.itkImageFunctionID3DF_ConvertPointToNearestIndex(self, *args)

    def ConvertPointToContinousIndex(self, *args):
        """ConvertPointToContinousIndex(self, itkPointF3 point, itkContinuousIndexF3 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionID3DF_ConvertPointToContinousIndex(self, *args)

    def ConvertPointToContinuousIndex(self, *args):
        """ConvertPointToContinuousIndex(self, itkPointF3 point, itkContinuousIndexF3 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionID3DF_ConvertPointToContinuousIndex(self, *args)

    def ConvertContinuousIndexToNearestIndex(self, *args):
        """ConvertContinuousIndexToNearestIndex(self, itkContinuousIndexF3 cindex, itkIndex3 index)"""
        return _itkImageFunctionPython.itkImageFunctionID3DF_ConvertContinuousIndexToNearestIndex(self, *args)

    def GetStartIndex(self):
        """GetStartIndex(self) -> itkIndex3"""
        return _itkImageFunctionPython.itkImageFunctionID3DF_GetStartIndex(self)

    def GetEndIndex(self):
        """GetEndIndex(self) -> itkIndex3"""
        return _itkImageFunctionPython.itkImageFunctionID3DF_GetEndIndex(self)

    def GetStartContinuousIndex(self):
        """GetStartContinuousIndex(self) -> itkContinuousIndexF3"""
        return _itkImageFunctionPython.itkImageFunctionID3DF_GetStartContinuousIndex(self)

    def GetEndContinuousIndex(self):
        """GetEndContinuousIndex(self) -> itkContinuousIndexF3"""
        return _itkImageFunctionPython.itkImageFunctionID3DF_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionPython.delete_itkImageFunctionID3DF
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageFunctionID3DF"""
        return _itkImageFunctionPython.itkImageFunctionID3DF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageFunctionID3DF"""
        return _itkImageFunctionPython.itkImageFunctionID3DF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageFunctionID3DF
        
        Create a new object of the class itkImageFunctionID3DF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageFunctionID3DF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageFunctionID3DF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionID3DF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionID3DF.SetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID3DF_SetInputImage,None,itkImageFunctionID3DF)
itkImageFunctionID3DF.GetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID3DF_GetInputImage,None,itkImageFunctionID3DF)
itkImageFunctionID3DF.EvaluateAtIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID3DF_EvaluateAtIndex,None,itkImageFunctionID3DF)
itkImageFunctionID3DF.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID3DF_EvaluateAtContinuousIndex,None,itkImageFunctionID3DF)
itkImageFunctionID3DF.IsInsideBuffer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID3DF_IsInsideBuffer,None,itkImageFunctionID3DF)
itkImageFunctionID3DF.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID3DF_ConvertPointToNearestIndex,None,itkImageFunctionID3DF)
itkImageFunctionID3DF.ConvertPointToContinousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID3DF_ConvertPointToContinousIndex,None,itkImageFunctionID3DF)
itkImageFunctionID3DF.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID3DF_ConvertPointToContinuousIndex,None,itkImageFunctionID3DF)
itkImageFunctionID3DF.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID3DF_ConvertContinuousIndexToNearestIndex,None,itkImageFunctionID3DF)
itkImageFunctionID3DF.GetStartIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID3DF_GetStartIndex,None,itkImageFunctionID3DF)
itkImageFunctionID3DF.GetEndIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID3DF_GetEndIndex,None,itkImageFunctionID3DF)
itkImageFunctionID3DF.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID3DF_GetStartContinuousIndex,None,itkImageFunctionID3DF)
itkImageFunctionID3DF.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID3DF_GetEndContinuousIndex,None,itkImageFunctionID3DF)
itkImageFunctionID3DF.GetPointer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionID3DF_GetPointer,None,itkImageFunctionID3DF)
itkImageFunctionID3DF_swigregister = _itkImageFunctionPython.itkImageFunctionID3DF_swigregister
itkImageFunctionID3DF_swigregister(itkImageFunctionID3DF)

def itkImageFunctionID3DF_cast(*args):
  """itkImageFunctionID3DF_cast(itkLightObject obj) -> itkImageFunctionID3DF"""
  return _itkImageFunctionPython.itkImageFunctionID3DF_cast(*args)

class itkImageFunctionIF2DD(itkFunctionBasePython.itkFunctionBasePD2D):
    """Proxy of C++ itkImageFunctionIF2DD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkImageFunctionPython.itkImageFunctionIF2DD_ImageDimension
    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageF2 ptr)"""
        return _itkImageFunctionPython.itkImageFunctionIF2DD_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageF2"""
        return _itkImageFunctionPython.itkImageFunctionIF2DD_GetInputImage(self)

    def EvaluateAtIndex(self, *args):
        """EvaluateAtIndex(self, itkIndex2 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIF2DD_EvaluateAtIndex(self, *args)

    def EvaluateAtContinuousIndex(self, *args):
        """EvaluateAtContinuousIndex(self, itkContinuousIndexD2 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIF2DD_EvaluateAtContinuousIndex(self, *args)

    def IsInsideBuffer(self, *args):
        """
        IsInsideBuffer(self, itkIndex2 index) -> bool
        IsInsideBuffer(self, itkContinuousIndexD2 index) -> bool
        IsInsideBuffer(self, itkPointD2 point) -> bool
        """
        return _itkImageFunctionPython.itkImageFunctionIF2DD_IsInsideBuffer(self, *args)

    def ConvertPointToNearestIndex(self, *args):
        """ConvertPointToNearestIndex(self, itkPointD2 point, itkIndex2 index)"""
        return _itkImageFunctionPython.itkImageFunctionIF2DD_ConvertPointToNearestIndex(self, *args)

    def ConvertPointToContinousIndex(self, *args):
        """ConvertPointToContinousIndex(self, itkPointD2 point, itkContinuousIndexD2 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIF2DD_ConvertPointToContinousIndex(self, *args)

    def ConvertPointToContinuousIndex(self, *args):
        """ConvertPointToContinuousIndex(self, itkPointD2 point, itkContinuousIndexD2 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIF2DD_ConvertPointToContinuousIndex(self, *args)

    def ConvertContinuousIndexToNearestIndex(self, *args):
        """ConvertContinuousIndexToNearestIndex(self, itkContinuousIndexD2 cindex, itkIndex2 index)"""
        return _itkImageFunctionPython.itkImageFunctionIF2DD_ConvertContinuousIndexToNearestIndex(self, *args)

    def GetStartIndex(self):
        """GetStartIndex(self) -> itkIndex2"""
        return _itkImageFunctionPython.itkImageFunctionIF2DD_GetStartIndex(self)

    def GetEndIndex(self):
        """GetEndIndex(self) -> itkIndex2"""
        return _itkImageFunctionPython.itkImageFunctionIF2DD_GetEndIndex(self)

    def GetStartContinuousIndex(self):
        """GetStartContinuousIndex(self) -> itkContinuousIndexD2"""
        return _itkImageFunctionPython.itkImageFunctionIF2DD_GetStartContinuousIndex(self)

    def GetEndContinuousIndex(self):
        """GetEndContinuousIndex(self) -> itkContinuousIndexD2"""
        return _itkImageFunctionPython.itkImageFunctionIF2DD_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionPython.delete_itkImageFunctionIF2DD
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageFunctionIF2DD"""
        return _itkImageFunctionPython.itkImageFunctionIF2DD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageFunctionIF2DD"""
        return _itkImageFunctionPython.itkImageFunctionIF2DD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIF2DD
        
        Create a new object of the class itkImageFunctionIF2DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageFunctionIF2DD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageFunctionIF2DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIF2DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIF2DD.SetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF2DD_SetInputImage,None,itkImageFunctionIF2DD)
itkImageFunctionIF2DD.GetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF2DD_GetInputImage,None,itkImageFunctionIF2DD)
itkImageFunctionIF2DD.EvaluateAtIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF2DD_EvaluateAtIndex,None,itkImageFunctionIF2DD)
itkImageFunctionIF2DD.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF2DD_EvaluateAtContinuousIndex,None,itkImageFunctionIF2DD)
itkImageFunctionIF2DD.IsInsideBuffer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF2DD_IsInsideBuffer,None,itkImageFunctionIF2DD)
itkImageFunctionIF2DD.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF2DD_ConvertPointToNearestIndex,None,itkImageFunctionIF2DD)
itkImageFunctionIF2DD.ConvertPointToContinousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF2DD_ConvertPointToContinousIndex,None,itkImageFunctionIF2DD)
itkImageFunctionIF2DD.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF2DD_ConvertPointToContinuousIndex,None,itkImageFunctionIF2DD)
itkImageFunctionIF2DD.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF2DD_ConvertContinuousIndexToNearestIndex,None,itkImageFunctionIF2DD)
itkImageFunctionIF2DD.GetStartIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF2DD_GetStartIndex,None,itkImageFunctionIF2DD)
itkImageFunctionIF2DD.GetEndIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF2DD_GetEndIndex,None,itkImageFunctionIF2DD)
itkImageFunctionIF2DD.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF2DD_GetStartContinuousIndex,None,itkImageFunctionIF2DD)
itkImageFunctionIF2DD.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF2DD_GetEndContinuousIndex,None,itkImageFunctionIF2DD)
itkImageFunctionIF2DD.GetPointer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF2DD_GetPointer,None,itkImageFunctionIF2DD)
itkImageFunctionIF2DD_swigregister = _itkImageFunctionPython.itkImageFunctionIF2DD_swigregister
itkImageFunctionIF2DD_swigregister(itkImageFunctionIF2DD)

def itkImageFunctionIF2DD_cast(*args):
  """itkImageFunctionIF2DD_cast(itkLightObject obj) -> itkImageFunctionIF2DD"""
  return _itkImageFunctionPython.itkImageFunctionIF2DD_cast(*args)

class itkImageFunctionIF2DF(itkFunctionBasePython.itkFunctionBasePF2D):
    """Proxy of C++ itkImageFunctionIF2DF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkImageFunctionPython.itkImageFunctionIF2DF_ImageDimension
    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageF2 ptr)"""
        return _itkImageFunctionPython.itkImageFunctionIF2DF_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageF2"""
        return _itkImageFunctionPython.itkImageFunctionIF2DF_GetInputImage(self)

    def EvaluateAtIndex(self, *args):
        """EvaluateAtIndex(self, itkIndex2 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIF2DF_EvaluateAtIndex(self, *args)

    def EvaluateAtContinuousIndex(self, *args):
        """EvaluateAtContinuousIndex(self, itkContinuousIndexF2 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIF2DF_EvaluateAtContinuousIndex(self, *args)

    def IsInsideBuffer(self, *args):
        """
        IsInsideBuffer(self, itkIndex2 index) -> bool
        IsInsideBuffer(self, itkContinuousIndexF2 index) -> bool
        IsInsideBuffer(self, itkPointF2 point) -> bool
        """
        return _itkImageFunctionPython.itkImageFunctionIF2DF_IsInsideBuffer(self, *args)

    def ConvertPointToNearestIndex(self, *args):
        """ConvertPointToNearestIndex(self, itkPointF2 point, itkIndex2 index)"""
        return _itkImageFunctionPython.itkImageFunctionIF2DF_ConvertPointToNearestIndex(self, *args)

    def ConvertPointToContinousIndex(self, *args):
        """ConvertPointToContinousIndex(self, itkPointF2 point, itkContinuousIndexF2 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIF2DF_ConvertPointToContinousIndex(self, *args)

    def ConvertPointToContinuousIndex(self, *args):
        """ConvertPointToContinuousIndex(self, itkPointF2 point, itkContinuousIndexF2 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIF2DF_ConvertPointToContinuousIndex(self, *args)

    def ConvertContinuousIndexToNearestIndex(self, *args):
        """ConvertContinuousIndexToNearestIndex(self, itkContinuousIndexF2 cindex, itkIndex2 index)"""
        return _itkImageFunctionPython.itkImageFunctionIF2DF_ConvertContinuousIndexToNearestIndex(self, *args)

    def GetStartIndex(self):
        """GetStartIndex(self) -> itkIndex2"""
        return _itkImageFunctionPython.itkImageFunctionIF2DF_GetStartIndex(self)

    def GetEndIndex(self):
        """GetEndIndex(self) -> itkIndex2"""
        return _itkImageFunctionPython.itkImageFunctionIF2DF_GetEndIndex(self)

    def GetStartContinuousIndex(self):
        """GetStartContinuousIndex(self) -> itkContinuousIndexF2"""
        return _itkImageFunctionPython.itkImageFunctionIF2DF_GetStartContinuousIndex(self)

    def GetEndContinuousIndex(self):
        """GetEndContinuousIndex(self) -> itkContinuousIndexF2"""
        return _itkImageFunctionPython.itkImageFunctionIF2DF_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionPython.delete_itkImageFunctionIF2DF
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageFunctionIF2DF"""
        return _itkImageFunctionPython.itkImageFunctionIF2DF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageFunctionIF2DF"""
        return _itkImageFunctionPython.itkImageFunctionIF2DF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIF2DF
        
        Create a new object of the class itkImageFunctionIF2DF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageFunctionIF2DF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageFunctionIF2DF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIF2DF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIF2DF.SetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF2DF_SetInputImage,None,itkImageFunctionIF2DF)
itkImageFunctionIF2DF.GetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF2DF_GetInputImage,None,itkImageFunctionIF2DF)
itkImageFunctionIF2DF.EvaluateAtIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF2DF_EvaluateAtIndex,None,itkImageFunctionIF2DF)
itkImageFunctionIF2DF.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF2DF_EvaluateAtContinuousIndex,None,itkImageFunctionIF2DF)
itkImageFunctionIF2DF.IsInsideBuffer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF2DF_IsInsideBuffer,None,itkImageFunctionIF2DF)
itkImageFunctionIF2DF.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF2DF_ConvertPointToNearestIndex,None,itkImageFunctionIF2DF)
itkImageFunctionIF2DF.ConvertPointToContinousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF2DF_ConvertPointToContinousIndex,None,itkImageFunctionIF2DF)
itkImageFunctionIF2DF.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF2DF_ConvertPointToContinuousIndex,None,itkImageFunctionIF2DF)
itkImageFunctionIF2DF.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF2DF_ConvertContinuousIndexToNearestIndex,None,itkImageFunctionIF2DF)
itkImageFunctionIF2DF.GetStartIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF2DF_GetStartIndex,None,itkImageFunctionIF2DF)
itkImageFunctionIF2DF.GetEndIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF2DF_GetEndIndex,None,itkImageFunctionIF2DF)
itkImageFunctionIF2DF.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF2DF_GetStartContinuousIndex,None,itkImageFunctionIF2DF)
itkImageFunctionIF2DF.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF2DF_GetEndContinuousIndex,None,itkImageFunctionIF2DF)
itkImageFunctionIF2DF.GetPointer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF2DF_GetPointer,None,itkImageFunctionIF2DF)
itkImageFunctionIF2DF_swigregister = _itkImageFunctionPython.itkImageFunctionIF2DF_swigregister
itkImageFunctionIF2DF_swigregister(itkImageFunctionIF2DF)

def itkImageFunctionIF2DF_cast(*args):
  """itkImageFunctionIF2DF_cast(itkLightObject obj) -> itkImageFunctionIF2DF"""
  return _itkImageFunctionPython.itkImageFunctionIF2DF_cast(*args)

class itkImageFunctionIF3DD(itkFunctionBasePython.itkFunctionBasePD3D):
    """Proxy of C++ itkImageFunctionIF3DD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkImageFunctionPython.itkImageFunctionIF3DD_ImageDimension
    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageF3 ptr)"""
        return _itkImageFunctionPython.itkImageFunctionIF3DD_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageF3"""
        return _itkImageFunctionPython.itkImageFunctionIF3DD_GetInputImage(self)

    def EvaluateAtIndex(self, *args):
        """EvaluateAtIndex(self, itkIndex3 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIF3DD_EvaluateAtIndex(self, *args)

    def EvaluateAtContinuousIndex(self, *args):
        """EvaluateAtContinuousIndex(self, itkContinuousIndexD3 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIF3DD_EvaluateAtContinuousIndex(self, *args)

    def IsInsideBuffer(self, *args):
        """
        IsInsideBuffer(self, itkIndex3 index) -> bool
        IsInsideBuffer(self, itkContinuousIndexD3 index) -> bool
        IsInsideBuffer(self, itkPointD3 point) -> bool
        """
        return _itkImageFunctionPython.itkImageFunctionIF3DD_IsInsideBuffer(self, *args)

    def ConvertPointToNearestIndex(self, *args):
        """ConvertPointToNearestIndex(self, itkPointD3 point, itkIndex3 index)"""
        return _itkImageFunctionPython.itkImageFunctionIF3DD_ConvertPointToNearestIndex(self, *args)

    def ConvertPointToContinousIndex(self, *args):
        """ConvertPointToContinousIndex(self, itkPointD3 point, itkContinuousIndexD3 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIF3DD_ConvertPointToContinousIndex(self, *args)

    def ConvertPointToContinuousIndex(self, *args):
        """ConvertPointToContinuousIndex(self, itkPointD3 point, itkContinuousIndexD3 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIF3DD_ConvertPointToContinuousIndex(self, *args)

    def ConvertContinuousIndexToNearestIndex(self, *args):
        """ConvertContinuousIndexToNearestIndex(self, itkContinuousIndexD3 cindex, itkIndex3 index)"""
        return _itkImageFunctionPython.itkImageFunctionIF3DD_ConvertContinuousIndexToNearestIndex(self, *args)

    def GetStartIndex(self):
        """GetStartIndex(self) -> itkIndex3"""
        return _itkImageFunctionPython.itkImageFunctionIF3DD_GetStartIndex(self)

    def GetEndIndex(self):
        """GetEndIndex(self) -> itkIndex3"""
        return _itkImageFunctionPython.itkImageFunctionIF3DD_GetEndIndex(self)

    def GetStartContinuousIndex(self):
        """GetStartContinuousIndex(self) -> itkContinuousIndexD3"""
        return _itkImageFunctionPython.itkImageFunctionIF3DD_GetStartContinuousIndex(self)

    def GetEndContinuousIndex(self):
        """GetEndContinuousIndex(self) -> itkContinuousIndexD3"""
        return _itkImageFunctionPython.itkImageFunctionIF3DD_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionPython.delete_itkImageFunctionIF3DD
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageFunctionIF3DD"""
        return _itkImageFunctionPython.itkImageFunctionIF3DD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageFunctionIF3DD"""
        return _itkImageFunctionPython.itkImageFunctionIF3DD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIF3DD
        
        Create a new object of the class itkImageFunctionIF3DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageFunctionIF3DD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageFunctionIF3DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIF3DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIF3DD.SetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF3DD_SetInputImage,None,itkImageFunctionIF3DD)
itkImageFunctionIF3DD.GetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF3DD_GetInputImage,None,itkImageFunctionIF3DD)
itkImageFunctionIF3DD.EvaluateAtIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF3DD_EvaluateAtIndex,None,itkImageFunctionIF3DD)
itkImageFunctionIF3DD.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF3DD_EvaluateAtContinuousIndex,None,itkImageFunctionIF3DD)
itkImageFunctionIF3DD.IsInsideBuffer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF3DD_IsInsideBuffer,None,itkImageFunctionIF3DD)
itkImageFunctionIF3DD.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF3DD_ConvertPointToNearestIndex,None,itkImageFunctionIF3DD)
itkImageFunctionIF3DD.ConvertPointToContinousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF3DD_ConvertPointToContinousIndex,None,itkImageFunctionIF3DD)
itkImageFunctionIF3DD.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF3DD_ConvertPointToContinuousIndex,None,itkImageFunctionIF3DD)
itkImageFunctionIF3DD.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF3DD_ConvertContinuousIndexToNearestIndex,None,itkImageFunctionIF3DD)
itkImageFunctionIF3DD.GetStartIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF3DD_GetStartIndex,None,itkImageFunctionIF3DD)
itkImageFunctionIF3DD.GetEndIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF3DD_GetEndIndex,None,itkImageFunctionIF3DD)
itkImageFunctionIF3DD.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF3DD_GetStartContinuousIndex,None,itkImageFunctionIF3DD)
itkImageFunctionIF3DD.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF3DD_GetEndContinuousIndex,None,itkImageFunctionIF3DD)
itkImageFunctionIF3DD.GetPointer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF3DD_GetPointer,None,itkImageFunctionIF3DD)
itkImageFunctionIF3DD_swigregister = _itkImageFunctionPython.itkImageFunctionIF3DD_swigregister
itkImageFunctionIF3DD_swigregister(itkImageFunctionIF3DD)

def itkImageFunctionIF3DD_cast(*args):
  """itkImageFunctionIF3DD_cast(itkLightObject obj) -> itkImageFunctionIF3DD"""
  return _itkImageFunctionPython.itkImageFunctionIF3DD_cast(*args)

class itkImageFunctionIF3DF(itkFunctionBasePython.itkFunctionBasePF3D):
    """Proxy of C++ itkImageFunctionIF3DF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkImageFunctionPython.itkImageFunctionIF3DF_ImageDimension
    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageF3 ptr)"""
        return _itkImageFunctionPython.itkImageFunctionIF3DF_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageF3"""
        return _itkImageFunctionPython.itkImageFunctionIF3DF_GetInputImage(self)

    def EvaluateAtIndex(self, *args):
        """EvaluateAtIndex(self, itkIndex3 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIF3DF_EvaluateAtIndex(self, *args)

    def EvaluateAtContinuousIndex(self, *args):
        """EvaluateAtContinuousIndex(self, itkContinuousIndexF3 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIF3DF_EvaluateAtContinuousIndex(self, *args)

    def IsInsideBuffer(self, *args):
        """
        IsInsideBuffer(self, itkIndex3 index) -> bool
        IsInsideBuffer(self, itkContinuousIndexF3 index) -> bool
        IsInsideBuffer(self, itkPointF3 point) -> bool
        """
        return _itkImageFunctionPython.itkImageFunctionIF3DF_IsInsideBuffer(self, *args)

    def ConvertPointToNearestIndex(self, *args):
        """ConvertPointToNearestIndex(self, itkPointF3 point, itkIndex3 index)"""
        return _itkImageFunctionPython.itkImageFunctionIF3DF_ConvertPointToNearestIndex(self, *args)

    def ConvertPointToContinousIndex(self, *args):
        """ConvertPointToContinousIndex(self, itkPointF3 point, itkContinuousIndexF3 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIF3DF_ConvertPointToContinousIndex(self, *args)

    def ConvertPointToContinuousIndex(self, *args):
        """ConvertPointToContinuousIndex(self, itkPointF3 point, itkContinuousIndexF3 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIF3DF_ConvertPointToContinuousIndex(self, *args)

    def ConvertContinuousIndexToNearestIndex(self, *args):
        """ConvertContinuousIndexToNearestIndex(self, itkContinuousIndexF3 cindex, itkIndex3 index)"""
        return _itkImageFunctionPython.itkImageFunctionIF3DF_ConvertContinuousIndexToNearestIndex(self, *args)

    def GetStartIndex(self):
        """GetStartIndex(self) -> itkIndex3"""
        return _itkImageFunctionPython.itkImageFunctionIF3DF_GetStartIndex(self)

    def GetEndIndex(self):
        """GetEndIndex(self) -> itkIndex3"""
        return _itkImageFunctionPython.itkImageFunctionIF3DF_GetEndIndex(self)

    def GetStartContinuousIndex(self):
        """GetStartContinuousIndex(self) -> itkContinuousIndexF3"""
        return _itkImageFunctionPython.itkImageFunctionIF3DF_GetStartContinuousIndex(self)

    def GetEndContinuousIndex(self):
        """GetEndContinuousIndex(self) -> itkContinuousIndexF3"""
        return _itkImageFunctionPython.itkImageFunctionIF3DF_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionPython.delete_itkImageFunctionIF3DF
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageFunctionIF3DF"""
        return _itkImageFunctionPython.itkImageFunctionIF3DF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageFunctionIF3DF"""
        return _itkImageFunctionPython.itkImageFunctionIF3DF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIF3DF
        
        Create a new object of the class itkImageFunctionIF3DF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageFunctionIF3DF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageFunctionIF3DF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIF3DF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIF3DF.SetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF3DF_SetInputImage,None,itkImageFunctionIF3DF)
itkImageFunctionIF3DF.GetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF3DF_GetInputImage,None,itkImageFunctionIF3DF)
itkImageFunctionIF3DF.EvaluateAtIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF3DF_EvaluateAtIndex,None,itkImageFunctionIF3DF)
itkImageFunctionIF3DF.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF3DF_EvaluateAtContinuousIndex,None,itkImageFunctionIF3DF)
itkImageFunctionIF3DF.IsInsideBuffer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF3DF_IsInsideBuffer,None,itkImageFunctionIF3DF)
itkImageFunctionIF3DF.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF3DF_ConvertPointToNearestIndex,None,itkImageFunctionIF3DF)
itkImageFunctionIF3DF.ConvertPointToContinousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF3DF_ConvertPointToContinousIndex,None,itkImageFunctionIF3DF)
itkImageFunctionIF3DF.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF3DF_ConvertPointToContinuousIndex,None,itkImageFunctionIF3DF)
itkImageFunctionIF3DF.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF3DF_ConvertContinuousIndexToNearestIndex,None,itkImageFunctionIF3DF)
itkImageFunctionIF3DF.GetStartIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF3DF_GetStartIndex,None,itkImageFunctionIF3DF)
itkImageFunctionIF3DF.GetEndIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF3DF_GetEndIndex,None,itkImageFunctionIF3DF)
itkImageFunctionIF3DF.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF3DF_GetStartContinuousIndex,None,itkImageFunctionIF3DF)
itkImageFunctionIF3DF.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF3DF_GetEndContinuousIndex,None,itkImageFunctionIF3DF)
itkImageFunctionIF3DF.GetPointer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIF3DF_GetPointer,None,itkImageFunctionIF3DF)
itkImageFunctionIF3DF_swigregister = _itkImageFunctionPython.itkImageFunctionIF3DF_swigregister
itkImageFunctionIF3DF_swigregister(itkImageFunctionIF3DF)

def itkImageFunctionIF3DF_cast(*args):
  """itkImageFunctionIF3DF_cast(itkLightObject obj) -> itkImageFunctionIF3DF"""
  return _itkImageFunctionPython.itkImageFunctionIF3DF_cast(*args)

class itkImageFunctionIUC2DD(itkFunctionBasePython.itkFunctionBasePD2D):
    """Proxy of C++ itkImageFunctionIUC2DD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkImageFunctionPython.itkImageFunctionIUC2DD_ImageDimension
    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageUC2 ptr)"""
        return _itkImageFunctionPython.itkImageFunctionIUC2DD_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageUC2"""
        return _itkImageFunctionPython.itkImageFunctionIUC2DD_GetInputImage(self)

    def EvaluateAtIndex(self, *args):
        """EvaluateAtIndex(self, itkIndex2 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIUC2DD_EvaluateAtIndex(self, *args)

    def EvaluateAtContinuousIndex(self, *args):
        """EvaluateAtContinuousIndex(self, itkContinuousIndexD2 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIUC2DD_EvaluateAtContinuousIndex(self, *args)

    def IsInsideBuffer(self, *args):
        """
        IsInsideBuffer(self, itkIndex2 index) -> bool
        IsInsideBuffer(self, itkContinuousIndexD2 index) -> bool
        IsInsideBuffer(self, itkPointD2 point) -> bool
        """
        return _itkImageFunctionPython.itkImageFunctionIUC2DD_IsInsideBuffer(self, *args)

    def ConvertPointToNearestIndex(self, *args):
        """ConvertPointToNearestIndex(self, itkPointD2 point, itkIndex2 index)"""
        return _itkImageFunctionPython.itkImageFunctionIUC2DD_ConvertPointToNearestIndex(self, *args)

    def ConvertPointToContinousIndex(self, *args):
        """ConvertPointToContinousIndex(self, itkPointD2 point, itkContinuousIndexD2 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIUC2DD_ConvertPointToContinousIndex(self, *args)

    def ConvertPointToContinuousIndex(self, *args):
        """ConvertPointToContinuousIndex(self, itkPointD2 point, itkContinuousIndexD2 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIUC2DD_ConvertPointToContinuousIndex(self, *args)

    def ConvertContinuousIndexToNearestIndex(self, *args):
        """ConvertContinuousIndexToNearestIndex(self, itkContinuousIndexD2 cindex, itkIndex2 index)"""
        return _itkImageFunctionPython.itkImageFunctionIUC2DD_ConvertContinuousIndexToNearestIndex(self, *args)

    def GetStartIndex(self):
        """GetStartIndex(self) -> itkIndex2"""
        return _itkImageFunctionPython.itkImageFunctionIUC2DD_GetStartIndex(self)

    def GetEndIndex(self):
        """GetEndIndex(self) -> itkIndex2"""
        return _itkImageFunctionPython.itkImageFunctionIUC2DD_GetEndIndex(self)

    def GetStartContinuousIndex(self):
        """GetStartContinuousIndex(self) -> itkContinuousIndexD2"""
        return _itkImageFunctionPython.itkImageFunctionIUC2DD_GetStartContinuousIndex(self)

    def GetEndContinuousIndex(self):
        """GetEndContinuousIndex(self) -> itkContinuousIndexD2"""
        return _itkImageFunctionPython.itkImageFunctionIUC2DD_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionPython.delete_itkImageFunctionIUC2DD
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageFunctionIUC2DD"""
        return _itkImageFunctionPython.itkImageFunctionIUC2DD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageFunctionIUC2DD"""
        return _itkImageFunctionPython.itkImageFunctionIUC2DD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIUC2DD
        
        Create a new object of the class itkImageFunctionIUC2DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageFunctionIUC2DD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageFunctionIUC2DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIUC2DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIUC2DD.SetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC2DD_SetInputImage,None,itkImageFunctionIUC2DD)
itkImageFunctionIUC2DD.GetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC2DD_GetInputImage,None,itkImageFunctionIUC2DD)
itkImageFunctionIUC2DD.EvaluateAtIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC2DD_EvaluateAtIndex,None,itkImageFunctionIUC2DD)
itkImageFunctionIUC2DD.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC2DD_EvaluateAtContinuousIndex,None,itkImageFunctionIUC2DD)
itkImageFunctionIUC2DD.IsInsideBuffer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC2DD_IsInsideBuffer,None,itkImageFunctionIUC2DD)
itkImageFunctionIUC2DD.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC2DD_ConvertPointToNearestIndex,None,itkImageFunctionIUC2DD)
itkImageFunctionIUC2DD.ConvertPointToContinousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC2DD_ConvertPointToContinousIndex,None,itkImageFunctionIUC2DD)
itkImageFunctionIUC2DD.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC2DD_ConvertPointToContinuousIndex,None,itkImageFunctionIUC2DD)
itkImageFunctionIUC2DD.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC2DD_ConvertContinuousIndexToNearestIndex,None,itkImageFunctionIUC2DD)
itkImageFunctionIUC2DD.GetStartIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC2DD_GetStartIndex,None,itkImageFunctionIUC2DD)
itkImageFunctionIUC2DD.GetEndIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC2DD_GetEndIndex,None,itkImageFunctionIUC2DD)
itkImageFunctionIUC2DD.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC2DD_GetStartContinuousIndex,None,itkImageFunctionIUC2DD)
itkImageFunctionIUC2DD.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC2DD_GetEndContinuousIndex,None,itkImageFunctionIUC2DD)
itkImageFunctionIUC2DD.GetPointer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC2DD_GetPointer,None,itkImageFunctionIUC2DD)
itkImageFunctionIUC2DD_swigregister = _itkImageFunctionPython.itkImageFunctionIUC2DD_swigregister
itkImageFunctionIUC2DD_swigregister(itkImageFunctionIUC2DD)

def itkImageFunctionIUC2DD_cast(*args):
  """itkImageFunctionIUC2DD_cast(itkLightObject obj) -> itkImageFunctionIUC2DD"""
  return _itkImageFunctionPython.itkImageFunctionIUC2DD_cast(*args)

class itkImageFunctionIUC2DF(itkFunctionBasePython.itkFunctionBasePF2D):
    """Proxy of C++ itkImageFunctionIUC2DF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkImageFunctionPython.itkImageFunctionIUC2DF_ImageDimension
    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageUC2 ptr)"""
        return _itkImageFunctionPython.itkImageFunctionIUC2DF_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageUC2"""
        return _itkImageFunctionPython.itkImageFunctionIUC2DF_GetInputImage(self)

    def EvaluateAtIndex(self, *args):
        """EvaluateAtIndex(self, itkIndex2 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIUC2DF_EvaluateAtIndex(self, *args)

    def EvaluateAtContinuousIndex(self, *args):
        """EvaluateAtContinuousIndex(self, itkContinuousIndexF2 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIUC2DF_EvaluateAtContinuousIndex(self, *args)

    def IsInsideBuffer(self, *args):
        """
        IsInsideBuffer(self, itkIndex2 index) -> bool
        IsInsideBuffer(self, itkContinuousIndexF2 index) -> bool
        IsInsideBuffer(self, itkPointF2 point) -> bool
        """
        return _itkImageFunctionPython.itkImageFunctionIUC2DF_IsInsideBuffer(self, *args)

    def ConvertPointToNearestIndex(self, *args):
        """ConvertPointToNearestIndex(self, itkPointF2 point, itkIndex2 index)"""
        return _itkImageFunctionPython.itkImageFunctionIUC2DF_ConvertPointToNearestIndex(self, *args)

    def ConvertPointToContinousIndex(self, *args):
        """ConvertPointToContinousIndex(self, itkPointF2 point, itkContinuousIndexF2 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIUC2DF_ConvertPointToContinousIndex(self, *args)

    def ConvertPointToContinuousIndex(self, *args):
        """ConvertPointToContinuousIndex(self, itkPointF2 point, itkContinuousIndexF2 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIUC2DF_ConvertPointToContinuousIndex(self, *args)

    def ConvertContinuousIndexToNearestIndex(self, *args):
        """ConvertContinuousIndexToNearestIndex(self, itkContinuousIndexF2 cindex, itkIndex2 index)"""
        return _itkImageFunctionPython.itkImageFunctionIUC2DF_ConvertContinuousIndexToNearestIndex(self, *args)

    def GetStartIndex(self):
        """GetStartIndex(self) -> itkIndex2"""
        return _itkImageFunctionPython.itkImageFunctionIUC2DF_GetStartIndex(self)

    def GetEndIndex(self):
        """GetEndIndex(self) -> itkIndex2"""
        return _itkImageFunctionPython.itkImageFunctionIUC2DF_GetEndIndex(self)

    def GetStartContinuousIndex(self):
        """GetStartContinuousIndex(self) -> itkContinuousIndexF2"""
        return _itkImageFunctionPython.itkImageFunctionIUC2DF_GetStartContinuousIndex(self)

    def GetEndContinuousIndex(self):
        """GetEndContinuousIndex(self) -> itkContinuousIndexF2"""
        return _itkImageFunctionPython.itkImageFunctionIUC2DF_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionPython.delete_itkImageFunctionIUC2DF
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageFunctionIUC2DF"""
        return _itkImageFunctionPython.itkImageFunctionIUC2DF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageFunctionIUC2DF"""
        return _itkImageFunctionPython.itkImageFunctionIUC2DF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIUC2DF
        
        Create a new object of the class itkImageFunctionIUC2DF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageFunctionIUC2DF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageFunctionIUC2DF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIUC2DF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIUC2DF.SetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC2DF_SetInputImage,None,itkImageFunctionIUC2DF)
itkImageFunctionIUC2DF.GetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC2DF_GetInputImage,None,itkImageFunctionIUC2DF)
itkImageFunctionIUC2DF.EvaluateAtIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC2DF_EvaluateAtIndex,None,itkImageFunctionIUC2DF)
itkImageFunctionIUC2DF.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC2DF_EvaluateAtContinuousIndex,None,itkImageFunctionIUC2DF)
itkImageFunctionIUC2DF.IsInsideBuffer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC2DF_IsInsideBuffer,None,itkImageFunctionIUC2DF)
itkImageFunctionIUC2DF.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC2DF_ConvertPointToNearestIndex,None,itkImageFunctionIUC2DF)
itkImageFunctionIUC2DF.ConvertPointToContinousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC2DF_ConvertPointToContinousIndex,None,itkImageFunctionIUC2DF)
itkImageFunctionIUC2DF.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC2DF_ConvertPointToContinuousIndex,None,itkImageFunctionIUC2DF)
itkImageFunctionIUC2DF.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC2DF_ConvertContinuousIndexToNearestIndex,None,itkImageFunctionIUC2DF)
itkImageFunctionIUC2DF.GetStartIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC2DF_GetStartIndex,None,itkImageFunctionIUC2DF)
itkImageFunctionIUC2DF.GetEndIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC2DF_GetEndIndex,None,itkImageFunctionIUC2DF)
itkImageFunctionIUC2DF.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC2DF_GetStartContinuousIndex,None,itkImageFunctionIUC2DF)
itkImageFunctionIUC2DF.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC2DF_GetEndContinuousIndex,None,itkImageFunctionIUC2DF)
itkImageFunctionIUC2DF.GetPointer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC2DF_GetPointer,None,itkImageFunctionIUC2DF)
itkImageFunctionIUC2DF_swigregister = _itkImageFunctionPython.itkImageFunctionIUC2DF_swigregister
itkImageFunctionIUC2DF_swigregister(itkImageFunctionIUC2DF)

def itkImageFunctionIUC2DF_cast(*args):
  """itkImageFunctionIUC2DF_cast(itkLightObject obj) -> itkImageFunctionIUC2DF"""
  return _itkImageFunctionPython.itkImageFunctionIUC2DF_cast(*args)

class itkImageFunctionIUC3DD(itkFunctionBasePython.itkFunctionBasePD3D):
    """Proxy of C++ itkImageFunctionIUC3DD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkImageFunctionPython.itkImageFunctionIUC3DD_ImageDimension
    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageUC3 ptr)"""
        return _itkImageFunctionPython.itkImageFunctionIUC3DD_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageUC3"""
        return _itkImageFunctionPython.itkImageFunctionIUC3DD_GetInputImage(self)

    def EvaluateAtIndex(self, *args):
        """EvaluateAtIndex(self, itkIndex3 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIUC3DD_EvaluateAtIndex(self, *args)

    def EvaluateAtContinuousIndex(self, *args):
        """EvaluateAtContinuousIndex(self, itkContinuousIndexD3 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIUC3DD_EvaluateAtContinuousIndex(self, *args)

    def IsInsideBuffer(self, *args):
        """
        IsInsideBuffer(self, itkIndex3 index) -> bool
        IsInsideBuffer(self, itkContinuousIndexD3 index) -> bool
        IsInsideBuffer(self, itkPointD3 point) -> bool
        """
        return _itkImageFunctionPython.itkImageFunctionIUC3DD_IsInsideBuffer(self, *args)

    def ConvertPointToNearestIndex(self, *args):
        """ConvertPointToNearestIndex(self, itkPointD3 point, itkIndex3 index)"""
        return _itkImageFunctionPython.itkImageFunctionIUC3DD_ConvertPointToNearestIndex(self, *args)

    def ConvertPointToContinousIndex(self, *args):
        """ConvertPointToContinousIndex(self, itkPointD3 point, itkContinuousIndexD3 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIUC3DD_ConvertPointToContinousIndex(self, *args)

    def ConvertPointToContinuousIndex(self, *args):
        """ConvertPointToContinuousIndex(self, itkPointD3 point, itkContinuousIndexD3 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIUC3DD_ConvertPointToContinuousIndex(self, *args)

    def ConvertContinuousIndexToNearestIndex(self, *args):
        """ConvertContinuousIndexToNearestIndex(self, itkContinuousIndexD3 cindex, itkIndex3 index)"""
        return _itkImageFunctionPython.itkImageFunctionIUC3DD_ConvertContinuousIndexToNearestIndex(self, *args)

    def GetStartIndex(self):
        """GetStartIndex(self) -> itkIndex3"""
        return _itkImageFunctionPython.itkImageFunctionIUC3DD_GetStartIndex(self)

    def GetEndIndex(self):
        """GetEndIndex(self) -> itkIndex3"""
        return _itkImageFunctionPython.itkImageFunctionIUC3DD_GetEndIndex(self)

    def GetStartContinuousIndex(self):
        """GetStartContinuousIndex(self) -> itkContinuousIndexD3"""
        return _itkImageFunctionPython.itkImageFunctionIUC3DD_GetStartContinuousIndex(self)

    def GetEndContinuousIndex(self):
        """GetEndContinuousIndex(self) -> itkContinuousIndexD3"""
        return _itkImageFunctionPython.itkImageFunctionIUC3DD_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionPython.delete_itkImageFunctionIUC3DD
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageFunctionIUC3DD"""
        return _itkImageFunctionPython.itkImageFunctionIUC3DD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageFunctionIUC3DD"""
        return _itkImageFunctionPython.itkImageFunctionIUC3DD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIUC3DD
        
        Create a new object of the class itkImageFunctionIUC3DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageFunctionIUC3DD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageFunctionIUC3DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIUC3DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIUC3DD.SetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC3DD_SetInputImage,None,itkImageFunctionIUC3DD)
itkImageFunctionIUC3DD.GetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC3DD_GetInputImage,None,itkImageFunctionIUC3DD)
itkImageFunctionIUC3DD.EvaluateAtIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC3DD_EvaluateAtIndex,None,itkImageFunctionIUC3DD)
itkImageFunctionIUC3DD.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC3DD_EvaluateAtContinuousIndex,None,itkImageFunctionIUC3DD)
itkImageFunctionIUC3DD.IsInsideBuffer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC3DD_IsInsideBuffer,None,itkImageFunctionIUC3DD)
itkImageFunctionIUC3DD.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC3DD_ConvertPointToNearestIndex,None,itkImageFunctionIUC3DD)
itkImageFunctionIUC3DD.ConvertPointToContinousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC3DD_ConvertPointToContinousIndex,None,itkImageFunctionIUC3DD)
itkImageFunctionIUC3DD.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC3DD_ConvertPointToContinuousIndex,None,itkImageFunctionIUC3DD)
itkImageFunctionIUC3DD.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC3DD_ConvertContinuousIndexToNearestIndex,None,itkImageFunctionIUC3DD)
itkImageFunctionIUC3DD.GetStartIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC3DD_GetStartIndex,None,itkImageFunctionIUC3DD)
itkImageFunctionIUC3DD.GetEndIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC3DD_GetEndIndex,None,itkImageFunctionIUC3DD)
itkImageFunctionIUC3DD.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC3DD_GetStartContinuousIndex,None,itkImageFunctionIUC3DD)
itkImageFunctionIUC3DD.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC3DD_GetEndContinuousIndex,None,itkImageFunctionIUC3DD)
itkImageFunctionIUC3DD.GetPointer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC3DD_GetPointer,None,itkImageFunctionIUC3DD)
itkImageFunctionIUC3DD_swigregister = _itkImageFunctionPython.itkImageFunctionIUC3DD_swigregister
itkImageFunctionIUC3DD_swigregister(itkImageFunctionIUC3DD)

def itkImageFunctionIUC3DD_cast(*args):
  """itkImageFunctionIUC3DD_cast(itkLightObject obj) -> itkImageFunctionIUC3DD"""
  return _itkImageFunctionPython.itkImageFunctionIUC3DD_cast(*args)

class itkImageFunctionIUC3DF(itkFunctionBasePython.itkFunctionBasePF3D):
    """Proxy of C++ itkImageFunctionIUC3DF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkImageFunctionPython.itkImageFunctionIUC3DF_ImageDimension
    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageUC3 ptr)"""
        return _itkImageFunctionPython.itkImageFunctionIUC3DF_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageUC3"""
        return _itkImageFunctionPython.itkImageFunctionIUC3DF_GetInputImage(self)

    def EvaluateAtIndex(self, *args):
        """EvaluateAtIndex(self, itkIndex3 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIUC3DF_EvaluateAtIndex(self, *args)

    def EvaluateAtContinuousIndex(self, *args):
        """EvaluateAtContinuousIndex(self, itkContinuousIndexF3 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIUC3DF_EvaluateAtContinuousIndex(self, *args)

    def IsInsideBuffer(self, *args):
        """
        IsInsideBuffer(self, itkIndex3 index) -> bool
        IsInsideBuffer(self, itkContinuousIndexF3 index) -> bool
        IsInsideBuffer(self, itkPointF3 point) -> bool
        """
        return _itkImageFunctionPython.itkImageFunctionIUC3DF_IsInsideBuffer(self, *args)

    def ConvertPointToNearestIndex(self, *args):
        """ConvertPointToNearestIndex(self, itkPointF3 point, itkIndex3 index)"""
        return _itkImageFunctionPython.itkImageFunctionIUC3DF_ConvertPointToNearestIndex(self, *args)

    def ConvertPointToContinousIndex(self, *args):
        """ConvertPointToContinousIndex(self, itkPointF3 point, itkContinuousIndexF3 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIUC3DF_ConvertPointToContinousIndex(self, *args)

    def ConvertPointToContinuousIndex(self, *args):
        """ConvertPointToContinuousIndex(self, itkPointF3 point, itkContinuousIndexF3 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIUC3DF_ConvertPointToContinuousIndex(self, *args)

    def ConvertContinuousIndexToNearestIndex(self, *args):
        """ConvertContinuousIndexToNearestIndex(self, itkContinuousIndexF3 cindex, itkIndex3 index)"""
        return _itkImageFunctionPython.itkImageFunctionIUC3DF_ConvertContinuousIndexToNearestIndex(self, *args)

    def GetStartIndex(self):
        """GetStartIndex(self) -> itkIndex3"""
        return _itkImageFunctionPython.itkImageFunctionIUC3DF_GetStartIndex(self)

    def GetEndIndex(self):
        """GetEndIndex(self) -> itkIndex3"""
        return _itkImageFunctionPython.itkImageFunctionIUC3DF_GetEndIndex(self)

    def GetStartContinuousIndex(self):
        """GetStartContinuousIndex(self) -> itkContinuousIndexF3"""
        return _itkImageFunctionPython.itkImageFunctionIUC3DF_GetStartContinuousIndex(self)

    def GetEndContinuousIndex(self):
        """GetEndContinuousIndex(self) -> itkContinuousIndexF3"""
        return _itkImageFunctionPython.itkImageFunctionIUC3DF_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionPython.delete_itkImageFunctionIUC3DF
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageFunctionIUC3DF"""
        return _itkImageFunctionPython.itkImageFunctionIUC3DF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageFunctionIUC3DF"""
        return _itkImageFunctionPython.itkImageFunctionIUC3DF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIUC3DF
        
        Create a new object of the class itkImageFunctionIUC3DF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageFunctionIUC3DF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageFunctionIUC3DF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIUC3DF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIUC3DF.SetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC3DF_SetInputImage,None,itkImageFunctionIUC3DF)
itkImageFunctionIUC3DF.GetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC3DF_GetInputImage,None,itkImageFunctionIUC3DF)
itkImageFunctionIUC3DF.EvaluateAtIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC3DF_EvaluateAtIndex,None,itkImageFunctionIUC3DF)
itkImageFunctionIUC3DF.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC3DF_EvaluateAtContinuousIndex,None,itkImageFunctionIUC3DF)
itkImageFunctionIUC3DF.IsInsideBuffer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC3DF_IsInsideBuffer,None,itkImageFunctionIUC3DF)
itkImageFunctionIUC3DF.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC3DF_ConvertPointToNearestIndex,None,itkImageFunctionIUC3DF)
itkImageFunctionIUC3DF.ConvertPointToContinousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC3DF_ConvertPointToContinousIndex,None,itkImageFunctionIUC3DF)
itkImageFunctionIUC3DF.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC3DF_ConvertPointToContinuousIndex,None,itkImageFunctionIUC3DF)
itkImageFunctionIUC3DF.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC3DF_ConvertContinuousIndexToNearestIndex,None,itkImageFunctionIUC3DF)
itkImageFunctionIUC3DF.GetStartIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC3DF_GetStartIndex,None,itkImageFunctionIUC3DF)
itkImageFunctionIUC3DF.GetEndIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC3DF_GetEndIndex,None,itkImageFunctionIUC3DF)
itkImageFunctionIUC3DF.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC3DF_GetStartContinuousIndex,None,itkImageFunctionIUC3DF)
itkImageFunctionIUC3DF.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC3DF_GetEndContinuousIndex,None,itkImageFunctionIUC3DF)
itkImageFunctionIUC3DF.GetPointer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUC3DF_GetPointer,None,itkImageFunctionIUC3DF)
itkImageFunctionIUC3DF_swigregister = _itkImageFunctionPython.itkImageFunctionIUC3DF_swigregister
itkImageFunctionIUC3DF_swigregister(itkImageFunctionIUC3DF)

def itkImageFunctionIUC3DF_cast(*args):
  """itkImageFunctionIUC3DF_cast(itkLightObject obj) -> itkImageFunctionIUC3DF"""
  return _itkImageFunctionPython.itkImageFunctionIUC3DF_cast(*args)

class itkImageFunctionIUL2DD(itkFunctionBasePython.itkFunctionBasePD2D):
    """Proxy of C++ itkImageFunctionIUL2DD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkImageFunctionPython.itkImageFunctionIUL2DD_ImageDimension
    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageUL2 ptr)"""
        return _itkImageFunctionPython.itkImageFunctionIUL2DD_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageUL2"""
        return _itkImageFunctionPython.itkImageFunctionIUL2DD_GetInputImage(self)

    def EvaluateAtIndex(self, *args):
        """EvaluateAtIndex(self, itkIndex2 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIUL2DD_EvaluateAtIndex(self, *args)

    def EvaluateAtContinuousIndex(self, *args):
        """EvaluateAtContinuousIndex(self, itkContinuousIndexD2 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIUL2DD_EvaluateAtContinuousIndex(self, *args)

    def IsInsideBuffer(self, *args):
        """
        IsInsideBuffer(self, itkIndex2 index) -> bool
        IsInsideBuffer(self, itkContinuousIndexD2 index) -> bool
        IsInsideBuffer(self, itkPointD2 point) -> bool
        """
        return _itkImageFunctionPython.itkImageFunctionIUL2DD_IsInsideBuffer(self, *args)

    def ConvertPointToNearestIndex(self, *args):
        """ConvertPointToNearestIndex(self, itkPointD2 point, itkIndex2 index)"""
        return _itkImageFunctionPython.itkImageFunctionIUL2DD_ConvertPointToNearestIndex(self, *args)

    def ConvertPointToContinousIndex(self, *args):
        """ConvertPointToContinousIndex(self, itkPointD2 point, itkContinuousIndexD2 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIUL2DD_ConvertPointToContinousIndex(self, *args)

    def ConvertPointToContinuousIndex(self, *args):
        """ConvertPointToContinuousIndex(self, itkPointD2 point, itkContinuousIndexD2 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIUL2DD_ConvertPointToContinuousIndex(self, *args)

    def ConvertContinuousIndexToNearestIndex(self, *args):
        """ConvertContinuousIndexToNearestIndex(self, itkContinuousIndexD2 cindex, itkIndex2 index)"""
        return _itkImageFunctionPython.itkImageFunctionIUL2DD_ConvertContinuousIndexToNearestIndex(self, *args)

    def GetStartIndex(self):
        """GetStartIndex(self) -> itkIndex2"""
        return _itkImageFunctionPython.itkImageFunctionIUL2DD_GetStartIndex(self)

    def GetEndIndex(self):
        """GetEndIndex(self) -> itkIndex2"""
        return _itkImageFunctionPython.itkImageFunctionIUL2DD_GetEndIndex(self)

    def GetStartContinuousIndex(self):
        """GetStartContinuousIndex(self) -> itkContinuousIndexD2"""
        return _itkImageFunctionPython.itkImageFunctionIUL2DD_GetStartContinuousIndex(self)

    def GetEndContinuousIndex(self):
        """GetEndContinuousIndex(self) -> itkContinuousIndexD2"""
        return _itkImageFunctionPython.itkImageFunctionIUL2DD_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionPython.delete_itkImageFunctionIUL2DD
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageFunctionIUL2DD"""
        return _itkImageFunctionPython.itkImageFunctionIUL2DD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageFunctionIUL2DD"""
        return _itkImageFunctionPython.itkImageFunctionIUL2DD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIUL2DD
        
        Create a new object of the class itkImageFunctionIUL2DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageFunctionIUL2DD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageFunctionIUL2DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIUL2DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIUL2DD.SetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL2DD_SetInputImage,None,itkImageFunctionIUL2DD)
itkImageFunctionIUL2DD.GetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL2DD_GetInputImage,None,itkImageFunctionIUL2DD)
itkImageFunctionIUL2DD.EvaluateAtIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL2DD_EvaluateAtIndex,None,itkImageFunctionIUL2DD)
itkImageFunctionIUL2DD.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL2DD_EvaluateAtContinuousIndex,None,itkImageFunctionIUL2DD)
itkImageFunctionIUL2DD.IsInsideBuffer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL2DD_IsInsideBuffer,None,itkImageFunctionIUL2DD)
itkImageFunctionIUL2DD.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL2DD_ConvertPointToNearestIndex,None,itkImageFunctionIUL2DD)
itkImageFunctionIUL2DD.ConvertPointToContinousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL2DD_ConvertPointToContinousIndex,None,itkImageFunctionIUL2DD)
itkImageFunctionIUL2DD.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL2DD_ConvertPointToContinuousIndex,None,itkImageFunctionIUL2DD)
itkImageFunctionIUL2DD.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL2DD_ConvertContinuousIndexToNearestIndex,None,itkImageFunctionIUL2DD)
itkImageFunctionIUL2DD.GetStartIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL2DD_GetStartIndex,None,itkImageFunctionIUL2DD)
itkImageFunctionIUL2DD.GetEndIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL2DD_GetEndIndex,None,itkImageFunctionIUL2DD)
itkImageFunctionIUL2DD.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL2DD_GetStartContinuousIndex,None,itkImageFunctionIUL2DD)
itkImageFunctionIUL2DD.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL2DD_GetEndContinuousIndex,None,itkImageFunctionIUL2DD)
itkImageFunctionIUL2DD.GetPointer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL2DD_GetPointer,None,itkImageFunctionIUL2DD)
itkImageFunctionIUL2DD_swigregister = _itkImageFunctionPython.itkImageFunctionIUL2DD_swigregister
itkImageFunctionIUL2DD_swigregister(itkImageFunctionIUL2DD)

def itkImageFunctionIUL2DD_cast(*args):
  """itkImageFunctionIUL2DD_cast(itkLightObject obj) -> itkImageFunctionIUL2DD"""
  return _itkImageFunctionPython.itkImageFunctionIUL2DD_cast(*args)

class itkImageFunctionIUL2DF(itkFunctionBasePython.itkFunctionBasePF2D):
    """Proxy of C++ itkImageFunctionIUL2DF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkImageFunctionPython.itkImageFunctionIUL2DF_ImageDimension
    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageUL2 ptr)"""
        return _itkImageFunctionPython.itkImageFunctionIUL2DF_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageUL2"""
        return _itkImageFunctionPython.itkImageFunctionIUL2DF_GetInputImage(self)

    def EvaluateAtIndex(self, *args):
        """EvaluateAtIndex(self, itkIndex2 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIUL2DF_EvaluateAtIndex(self, *args)

    def EvaluateAtContinuousIndex(self, *args):
        """EvaluateAtContinuousIndex(self, itkContinuousIndexF2 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIUL2DF_EvaluateAtContinuousIndex(self, *args)

    def IsInsideBuffer(self, *args):
        """
        IsInsideBuffer(self, itkIndex2 index) -> bool
        IsInsideBuffer(self, itkContinuousIndexF2 index) -> bool
        IsInsideBuffer(self, itkPointF2 point) -> bool
        """
        return _itkImageFunctionPython.itkImageFunctionIUL2DF_IsInsideBuffer(self, *args)

    def ConvertPointToNearestIndex(self, *args):
        """ConvertPointToNearestIndex(self, itkPointF2 point, itkIndex2 index)"""
        return _itkImageFunctionPython.itkImageFunctionIUL2DF_ConvertPointToNearestIndex(self, *args)

    def ConvertPointToContinousIndex(self, *args):
        """ConvertPointToContinousIndex(self, itkPointF2 point, itkContinuousIndexF2 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIUL2DF_ConvertPointToContinousIndex(self, *args)

    def ConvertPointToContinuousIndex(self, *args):
        """ConvertPointToContinuousIndex(self, itkPointF2 point, itkContinuousIndexF2 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIUL2DF_ConvertPointToContinuousIndex(self, *args)

    def ConvertContinuousIndexToNearestIndex(self, *args):
        """ConvertContinuousIndexToNearestIndex(self, itkContinuousIndexF2 cindex, itkIndex2 index)"""
        return _itkImageFunctionPython.itkImageFunctionIUL2DF_ConvertContinuousIndexToNearestIndex(self, *args)

    def GetStartIndex(self):
        """GetStartIndex(self) -> itkIndex2"""
        return _itkImageFunctionPython.itkImageFunctionIUL2DF_GetStartIndex(self)

    def GetEndIndex(self):
        """GetEndIndex(self) -> itkIndex2"""
        return _itkImageFunctionPython.itkImageFunctionIUL2DF_GetEndIndex(self)

    def GetStartContinuousIndex(self):
        """GetStartContinuousIndex(self) -> itkContinuousIndexF2"""
        return _itkImageFunctionPython.itkImageFunctionIUL2DF_GetStartContinuousIndex(self)

    def GetEndContinuousIndex(self):
        """GetEndContinuousIndex(self) -> itkContinuousIndexF2"""
        return _itkImageFunctionPython.itkImageFunctionIUL2DF_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionPython.delete_itkImageFunctionIUL2DF
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageFunctionIUL2DF"""
        return _itkImageFunctionPython.itkImageFunctionIUL2DF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageFunctionIUL2DF"""
        return _itkImageFunctionPython.itkImageFunctionIUL2DF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIUL2DF
        
        Create a new object of the class itkImageFunctionIUL2DF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageFunctionIUL2DF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageFunctionIUL2DF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIUL2DF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIUL2DF.SetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL2DF_SetInputImage,None,itkImageFunctionIUL2DF)
itkImageFunctionIUL2DF.GetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL2DF_GetInputImage,None,itkImageFunctionIUL2DF)
itkImageFunctionIUL2DF.EvaluateAtIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL2DF_EvaluateAtIndex,None,itkImageFunctionIUL2DF)
itkImageFunctionIUL2DF.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL2DF_EvaluateAtContinuousIndex,None,itkImageFunctionIUL2DF)
itkImageFunctionIUL2DF.IsInsideBuffer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL2DF_IsInsideBuffer,None,itkImageFunctionIUL2DF)
itkImageFunctionIUL2DF.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL2DF_ConvertPointToNearestIndex,None,itkImageFunctionIUL2DF)
itkImageFunctionIUL2DF.ConvertPointToContinousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL2DF_ConvertPointToContinousIndex,None,itkImageFunctionIUL2DF)
itkImageFunctionIUL2DF.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL2DF_ConvertPointToContinuousIndex,None,itkImageFunctionIUL2DF)
itkImageFunctionIUL2DF.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL2DF_ConvertContinuousIndexToNearestIndex,None,itkImageFunctionIUL2DF)
itkImageFunctionIUL2DF.GetStartIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL2DF_GetStartIndex,None,itkImageFunctionIUL2DF)
itkImageFunctionIUL2DF.GetEndIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL2DF_GetEndIndex,None,itkImageFunctionIUL2DF)
itkImageFunctionIUL2DF.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL2DF_GetStartContinuousIndex,None,itkImageFunctionIUL2DF)
itkImageFunctionIUL2DF.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL2DF_GetEndContinuousIndex,None,itkImageFunctionIUL2DF)
itkImageFunctionIUL2DF.GetPointer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL2DF_GetPointer,None,itkImageFunctionIUL2DF)
itkImageFunctionIUL2DF_swigregister = _itkImageFunctionPython.itkImageFunctionIUL2DF_swigregister
itkImageFunctionIUL2DF_swigregister(itkImageFunctionIUL2DF)

def itkImageFunctionIUL2DF_cast(*args):
  """itkImageFunctionIUL2DF_cast(itkLightObject obj) -> itkImageFunctionIUL2DF"""
  return _itkImageFunctionPython.itkImageFunctionIUL2DF_cast(*args)

class itkImageFunctionIUL3DD(itkFunctionBasePython.itkFunctionBasePD3D):
    """Proxy of C++ itkImageFunctionIUL3DD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkImageFunctionPython.itkImageFunctionIUL3DD_ImageDimension
    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageUL3 ptr)"""
        return _itkImageFunctionPython.itkImageFunctionIUL3DD_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageUL3"""
        return _itkImageFunctionPython.itkImageFunctionIUL3DD_GetInputImage(self)

    def EvaluateAtIndex(self, *args):
        """EvaluateAtIndex(self, itkIndex3 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIUL3DD_EvaluateAtIndex(self, *args)

    def EvaluateAtContinuousIndex(self, *args):
        """EvaluateAtContinuousIndex(self, itkContinuousIndexD3 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIUL3DD_EvaluateAtContinuousIndex(self, *args)

    def IsInsideBuffer(self, *args):
        """
        IsInsideBuffer(self, itkIndex3 index) -> bool
        IsInsideBuffer(self, itkContinuousIndexD3 index) -> bool
        IsInsideBuffer(self, itkPointD3 point) -> bool
        """
        return _itkImageFunctionPython.itkImageFunctionIUL3DD_IsInsideBuffer(self, *args)

    def ConvertPointToNearestIndex(self, *args):
        """ConvertPointToNearestIndex(self, itkPointD3 point, itkIndex3 index)"""
        return _itkImageFunctionPython.itkImageFunctionIUL3DD_ConvertPointToNearestIndex(self, *args)

    def ConvertPointToContinousIndex(self, *args):
        """ConvertPointToContinousIndex(self, itkPointD3 point, itkContinuousIndexD3 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIUL3DD_ConvertPointToContinousIndex(self, *args)

    def ConvertPointToContinuousIndex(self, *args):
        """ConvertPointToContinuousIndex(self, itkPointD3 point, itkContinuousIndexD3 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIUL3DD_ConvertPointToContinuousIndex(self, *args)

    def ConvertContinuousIndexToNearestIndex(self, *args):
        """ConvertContinuousIndexToNearestIndex(self, itkContinuousIndexD3 cindex, itkIndex3 index)"""
        return _itkImageFunctionPython.itkImageFunctionIUL3DD_ConvertContinuousIndexToNearestIndex(self, *args)

    def GetStartIndex(self):
        """GetStartIndex(self) -> itkIndex3"""
        return _itkImageFunctionPython.itkImageFunctionIUL3DD_GetStartIndex(self)

    def GetEndIndex(self):
        """GetEndIndex(self) -> itkIndex3"""
        return _itkImageFunctionPython.itkImageFunctionIUL3DD_GetEndIndex(self)

    def GetStartContinuousIndex(self):
        """GetStartContinuousIndex(self) -> itkContinuousIndexD3"""
        return _itkImageFunctionPython.itkImageFunctionIUL3DD_GetStartContinuousIndex(self)

    def GetEndContinuousIndex(self):
        """GetEndContinuousIndex(self) -> itkContinuousIndexD3"""
        return _itkImageFunctionPython.itkImageFunctionIUL3DD_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionPython.delete_itkImageFunctionIUL3DD
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageFunctionIUL3DD"""
        return _itkImageFunctionPython.itkImageFunctionIUL3DD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageFunctionIUL3DD"""
        return _itkImageFunctionPython.itkImageFunctionIUL3DD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIUL3DD
        
        Create a new object of the class itkImageFunctionIUL3DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageFunctionIUL3DD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageFunctionIUL3DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIUL3DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIUL3DD.SetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL3DD_SetInputImage,None,itkImageFunctionIUL3DD)
itkImageFunctionIUL3DD.GetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL3DD_GetInputImage,None,itkImageFunctionIUL3DD)
itkImageFunctionIUL3DD.EvaluateAtIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL3DD_EvaluateAtIndex,None,itkImageFunctionIUL3DD)
itkImageFunctionIUL3DD.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL3DD_EvaluateAtContinuousIndex,None,itkImageFunctionIUL3DD)
itkImageFunctionIUL3DD.IsInsideBuffer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL3DD_IsInsideBuffer,None,itkImageFunctionIUL3DD)
itkImageFunctionIUL3DD.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL3DD_ConvertPointToNearestIndex,None,itkImageFunctionIUL3DD)
itkImageFunctionIUL3DD.ConvertPointToContinousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL3DD_ConvertPointToContinousIndex,None,itkImageFunctionIUL3DD)
itkImageFunctionIUL3DD.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL3DD_ConvertPointToContinuousIndex,None,itkImageFunctionIUL3DD)
itkImageFunctionIUL3DD.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL3DD_ConvertContinuousIndexToNearestIndex,None,itkImageFunctionIUL3DD)
itkImageFunctionIUL3DD.GetStartIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL3DD_GetStartIndex,None,itkImageFunctionIUL3DD)
itkImageFunctionIUL3DD.GetEndIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL3DD_GetEndIndex,None,itkImageFunctionIUL3DD)
itkImageFunctionIUL3DD.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL3DD_GetStartContinuousIndex,None,itkImageFunctionIUL3DD)
itkImageFunctionIUL3DD.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL3DD_GetEndContinuousIndex,None,itkImageFunctionIUL3DD)
itkImageFunctionIUL3DD.GetPointer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL3DD_GetPointer,None,itkImageFunctionIUL3DD)
itkImageFunctionIUL3DD_swigregister = _itkImageFunctionPython.itkImageFunctionIUL3DD_swigregister
itkImageFunctionIUL3DD_swigregister(itkImageFunctionIUL3DD)

def itkImageFunctionIUL3DD_cast(*args):
  """itkImageFunctionIUL3DD_cast(itkLightObject obj) -> itkImageFunctionIUL3DD"""
  return _itkImageFunctionPython.itkImageFunctionIUL3DD_cast(*args)

class itkImageFunctionIUL3DF(itkFunctionBasePython.itkFunctionBasePF3D):
    """Proxy of C++ itkImageFunctionIUL3DF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkImageFunctionPython.itkImageFunctionIUL3DF_ImageDimension
    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageUL3 ptr)"""
        return _itkImageFunctionPython.itkImageFunctionIUL3DF_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageUL3"""
        return _itkImageFunctionPython.itkImageFunctionIUL3DF_GetInputImage(self)

    def EvaluateAtIndex(self, *args):
        """EvaluateAtIndex(self, itkIndex3 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIUL3DF_EvaluateAtIndex(self, *args)

    def EvaluateAtContinuousIndex(self, *args):
        """EvaluateAtContinuousIndex(self, itkContinuousIndexF3 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIUL3DF_EvaluateAtContinuousIndex(self, *args)

    def IsInsideBuffer(self, *args):
        """
        IsInsideBuffer(self, itkIndex3 index) -> bool
        IsInsideBuffer(self, itkContinuousIndexF3 index) -> bool
        IsInsideBuffer(self, itkPointF3 point) -> bool
        """
        return _itkImageFunctionPython.itkImageFunctionIUL3DF_IsInsideBuffer(self, *args)

    def ConvertPointToNearestIndex(self, *args):
        """ConvertPointToNearestIndex(self, itkPointF3 point, itkIndex3 index)"""
        return _itkImageFunctionPython.itkImageFunctionIUL3DF_ConvertPointToNearestIndex(self, *args)

    def ConvertPointToContinousIndex(self, *args):
        """ConvertPointToContinousIndex(self, itkPointF3 point, itkContinuousIndexF3 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIUL3DF_ConvertPointToContinousIndex(self, *args)

    def ConvertPointToContinuousIndex(self, *args):
        """ConvertPointToContinuousIndex(self, itkPointF3 point, itkContinuousIndexF3 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIUL3DF_ConvertPointToContinuousIndex(self, *args)

    def ConvertContinuousIndexToNearestIndex(self, *args):
        """ConvertContinuousIndexToNearestIndex(self, itkContinuousIndexF3 cindex, itkIndex3 index)"""
        return _itkImageFunctionPython.itkImageFunctionIUL3DF_ConvertContinuousIndexToNearestIndex(self, *args)

    def GetStartIndex(self):
        """GetStartIndex(self) -> itkIndex3"""
        return _itkImageFunctionPython.itkImageFunctionIUL3DF_GetStartIndex(self)

    def GetEndIndex(self):
        """GetEndIndex(self) -> itkIndex3"""
        return _itkImageFunctionPython.itkImageFunctionIUL3DF_GetEndIndex(self)

    def GetStartContinuousIndex(self):
        """GetStartContinuousIndex(self) -> itkContinuousIndexF3"""
        return _itkImageFunctionPython.itkImageFunctionIUL3DF_GetStartContinuousIndex(self)

    def GetEndContinuousIndex(self):
        """GetEndContinuousIndex(self) -> itkContinuousIndexF3"""
        return _itkImageFunctionPython.itkImageFunctionIUL3DF_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionPython.delete_itkImageFunctionIUL3DF
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageFunctionIUL3DF"""
        return _itkImageFunctionPython.itkImageFunctionIUL3DF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageFunctionIUL3DF"""
        return _itkImageFunctionPython.itkImageFunctionIUL3DF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIUL3DF
        
        Create a new object of the class itkImageFunctionIUL3DF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageFunctionIUL3DF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageFunctionIUL3DF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIUL3DF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIUL3DF.SetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL3DF_SetInputImage,None,itkImageFunctionIUL3DF)
itkImageFunctionIUL3DF.GetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL3DF_GetInputImage,None,itkImageFunctionIUL3DF)
itkImageFunctionIUL3DF.EvaluateAtIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL3DF_EvaluateAtIndex,None,itkImageFunctionIUL3DF)
itkImageFunctionIUL3DF.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL3DF_EvaluateAtContinuousIndex,None,itkImageFunctionIUL3DF)
itkImageFunctionIUL3DF.IsInsideBuffer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL3DF_IsInsideBuffer,None,itkImageFunctionIUL3DF)
itkImageFunctionIUL3DF.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL3DF_ConvertPointToNearestIndex,None,itkImageFunctionIUL3DF)
itkImageFunctionIUL3DF.ConvertPointToContinousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL3DF_ConvertPointToContinousIndex,None,itkImageFunctionIUL3DF)
itkImageFunctionIUL3DF.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL3DF_ConvertPointToContinuousIndex,None,itkImageFunctionIUL3DF)
itkImageFunctionIUL3DF.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL3DF_ConvertContinuousIndexToNearestIndex,None,itkImageFunctionIUL3DF)
itkImageFunctionIUL3DF.GetStartIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL3DF_GetStartIndex,None,itkImageFunctionIUL3DF)
itkImageFunctionIUL3DF.GetEndIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL3DF_GetEndIndex,None,itkImageFunctionIUL3DF)
itkImageFunctionIUL3DF.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL3DF_GetStartContinuousIndex,None,itkImageFunctionIUL3DF)
itkImageFunctionIUL3DF.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL3DF_GetEndContinuousIndex,None,itkImageFunctionIUL3DF)
itkImageFunctionIUL3DF.GetPointer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUL3DF_GetPointer,None,itkImageFunctionIUL3DF)
itkImageFunctionIUL3DF_swigregister = _itkImageFunctionPython.itkImageFunctionIUL3DF_swigregister
itkImageFunctionIUL3DF_swigregister(itkImageFunctionIUL3DF)

def itkImageFunctionIUL3DF_cast(*args):
  """itkImageFunctionIUL3DF_cast(itkLightObject obj) -> itkImageFunctionIUL3DF"""
  return _itkImageFunctionPython.itkImageFunctionIUL3DF_cast(*args)

class itkImageFunctionIUS2DD(itkFunctionBasePython.itkFunctionBasePD2D):
    """Proxy of C++ itkImageFunctionIUS2DD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkImageFunctionPython.itkImageFunctionIUS2DD_ImageDimension
    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageUS2 ptr)"""
        return _itkImageFunctionPython.itkImageFunctionIUS2DD_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageUS2"""
        return _itkImageFunctionPython.itkImageFunctionIUS2DD_GetInputImage(self)

    def EvaluateAtIndex(self, *args):
        """EvaluateAtIndex(self, itkIndex2 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIUS2DD_EvaluateAtIndex(self, *args)

    def EvaluateAtContinuousIndex(self, *args):
        """EvaluateAtContinuousIndex(self, itkContinuousIndexD2 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIUS2DD_EvaluateAtContinuousIndex(self, *args)

    def IsInsideBuffer(self, *args):
        """
        IsInsideBuffer(self, itkIndex2 index) -> bool
        IsInsideBuffer(self, itkContinuousIndexD2 index) -> bool
        IsInsideBuffer(self, itkPointD2 point) -> bool
        """
        return _itkImageFunctionPython.itkImageFunctionIUS2DD_IsInsideBuffer(self, *args)

    def ConvertPointToNearestIndex(self, *args):
        """ConvertPointToNearestIndex(self, itkPointD2 point, itkIndex2 index)"""
        return _itkImageFunctionPython.itkImageFunctionIUS2DD_ConvertPointToNearestIndex(self, *args)

    def ConvertPointToContinousIndex(self, *args):
        """ConvertPointToContinousIndex(self, itkPointD2 point, itkContinuousIndexD2 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIUS2DD_ConvertPointToContinousIndex(self, *args)

    def ConvertPointToContinuousIndex(self, *args):
        """ConvertPointToContinuousIndex(self, itkPointD2 point, itkContinuousIndexD2 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIUS2DD_ConvertPointToContinuousIndex(self, *args)

    def ConvertContinuousIndexToNearestIndex(self, *args):
        """ConvertContinuousIndexToNearestIndex(self, itkContinuousIndexD2 cindex, itkIndex2 index)"""
        return _itkImageFunctionPython.itkImageFunctionIUS2DD_ConvertContinuousIndexToNearestIndex(self, *args)

    def GetStartIndex(self):
        """GetStartIndex(self) -> itkIndex2"""
        return _itkImageFunctionPython.itkImageFunctionIUS2DD_GetStartIndex(self)

    def GetEndIndex(self):
        """GetEndIndex(self) -> itkIndex2"""
        return _itkImageFunctionPython.itkImageFunctionIUS2DD_GetEndIndex(self)

    def GetStartContinuousIndex(self):
        """GetStartContinuousIndex(self) -> itkContinuousIndexD2"""
        return _itkImageFunctionPython.itkImageFunctionIUS2DD_GetStartContinuousIndex(self)

    def GetEndContinuousIndex(self):
        """GetEndContinuousIndex(self) -> itkContinuousIndexD2"""
        return _itkImageFunctionPython.itkImageFunctionIUS2DD_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionPython.delete_itkImageFunctionIUS2DD
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageFunctionIUS2DD"""
        return _itkImageFunctionPython.itkImageFunctionIUS2DD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageFunctionIUS2DD"""
        return _itkImageFunctionPython.itkImageFunctionIUS2DD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIUS2DD
        
        Create a new object of the class itkImageFunctionIUS2DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageFunctionIUS2DD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageFunctionIUS2DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIUS2DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIUS2DD.SetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS2DD_SetInputImage,None,itkImageFunctionIUS2DD)
itkImageFunctionIUS2DD.GetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS2DD_GetInputImage,None,itkImageFunctionIUS2DD)
itkImageFunctionIUS2DD.EvaluateAtIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS2DD_EvaluateAtIndex,None,itkImageFunctionIUS2DD)
itkImageFunctionIUS2DD.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS2DD_EvaluateAtContinuousIndex,None,itkImageFunctionIUS2DD)
itkImageFunctionIUS2DD.IsInsideBuffer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS2DD_IsInsideBuffer,None,itkImageFunctionIUS2DD)
itkImageFunctionIUS2DD.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS2DD_ConvertPointToNearestIndex,None,itkImageFunctionIUS2DD)
itkImageFunctionIUS2DD.ConvertPointToContinousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS2DD_ConvertPointToContinousIndex,None,itkImageFunctionIUS2DD)
itkImageFunctionIUS2DD.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS2DD_ConvertPointToContinuousIndex,None,itkImageFunctionIUS2DD)
itkImageFunctionIUS2DD.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS2DD_ConvertContinuousIndexToNearestIndex,None,itkImageFunctionIUS2DD)
itkImageFunctionIUS2DD.GetStartIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS2DD_GetStartIndex,None,itkImageFunctionIUS2DD)
itkImageFunctionIUS2DD.GetEndIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS2DD_GetEndIndex,None,itkImageFunctionIUS2DD)
itkImageFunctionIUS2DD.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS2DD_GetStartContinuousIndex,None,itkImageFunctionIUS2DD)
itkImageFunctionIUS2DD.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS2DD_GetEndContinuousIndex,None,itkImageFunctionIUS2DD)
itkImageFunctionIUS2DD.GetPointer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS2DD_GetPointer,None,itkImageFunctionIUS2DD)
itkImageFunctionIUS2DD_swigregister = _itkImageFunctionPython.itkImageFunctionIUS2DD_swigregister
itkImageFunctionIUS2DD_swigregister(itkImageFunctionIUS2DD)

def itkImageFunctionIUS2DD_cast(*args):
  """itkImageFunctionIUS2DD_cast(itkLightObject obj) -> itkImageFunctionIUS2DD"""
  return _itkImageFunctionPython.itkImageFunctionIUS2DD_cast(*args)

class itkImageFunctionIUS2DF(itkFunctionBasePython.itkFunctionBasePF2D):
    """Proxy of C++ itkImageFunctionIUS2DF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkImageFunctionPython.itkImageFunctionIUS2DF_ImageDimension
    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageUS2 ptr)"""
        return _itkImageFunctionPython.itkImageFunctionIUS2DF_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageUS2"""
        return _itkImageFunctionPython.itkImageFunctionIUS2DF_GetInputImage(self)

    def EvaluateAtIndex(self, *args):
        """EvaluateAtIndex(self, itkIndex2 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIUS2DF_EvaluateAtIndex(self, *args)

    def EvaluateAtContinuousIndex(self, *args):
        """EvaluateAtContinuousIndex(self, itkContinuousIndexF2 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIUS2DF_EvaluateAtContinuousIndex(self, *args)

    def IsInsideBuffer(self, *args):
        """
        IsInsideBuffer(self, itkIndex2 index) -> bool
        IsInsideBuffer(self, itkContinuousIndexF2 index) -> bool
        IsInsideBuffer(self, itkPointF2 point) -> bool
        """
        return _itkImageFunctionPython.itkImageFunctionIUS2DF_IsInsideBuffer(self, *args)

    def ConvertPointToNearestIndex(self, *args):
        """ConvertPointToNearestIndex(self, itkPointF2 point, itkIndex2 index)"""
        return _itkImageFunctionPython.itkImageFunctionIUS2DF_ConvertPointToNearestIndex(self, *args)

    def ConvertPointToContinousIndex(self, *args):
        """ConvertPointToContinousIndex(self, itkPointF2 point, itkContinuousIndexF2 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIUS2DF_ConvertPointToContinousIndex(self, *args)

    def ConvertPointToContinuousIndex(self, *args):
        """ConvertPointToContinuousIndex(self, itkPointF2 point, itkContinuousIndexF2 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIUS2DF_ConvertPointToContinuousIndex(self, *args)

    def ConvertContinuousIndexToNearestIndex(self, *args):
        """ConvertContinuousIndexToNearestIndex(self, itkContinuousIndexF2 cindex, itkIndex2 index)"""
        return _itkImageFunctionPython.itkImageFunctionIUS2DF_ConvertContinuousIndexToNearestIndex(self, *args)

    def GetStartIndex(self):
        """GetStartIndex(self) -> itkIndex2"""
        return _itkImageFunctionPython.itkImageFunctionIUS2DF_GetStartIndex(self)

    def GetEndIndex(self):
        """GetEndIndex(self) -> itkIndex2"""
        return _itkImageFunctionPython.itkImageFunctionIUS2DF_GetEndIndex(self)

    def GetStartContinuousIndex(self):
        """GetStartContinuousIndex(self) -> itkContinuousIndexF2"""
        return _itkImageFunctionPython.itkImageFunctionIUS2DF_GetStartContinuousIndex(self)

    def GetEndContinuousIndex(self):
        """GetEndContinuousIndex(self) -> itkContinuousIndexF2"""
        return _itkImageFunctionPython.itkImageFunctionIUS2DF_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionPython.delete_itkImageFunctionIUS2DF
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageFunctionIUS2DF"""
        return _itkImageFunctionPython.itkImageFunctionIUS2DF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageFunctionIUS2DF"""
        return _itkImageFunctionPython.itkImageFunctionIUS2DF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIUS2DF
        
        Create a new object of the class itkImageFunctionIUS2DF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageFunctionIUS2DF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageFunctionIUS2DF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIUS2DF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIUS2DF.SetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS2DF_SetInputImage,None,itkImageFunctionIUS2DF)
itkImageFunctionIUS2DF.GetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS2DF_GetInputImage,None,itkImageFunctionIUS2DF)
itkImageFunctionIUS2DF.EvaluateAtIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS2DF_EvaluateAtIndex,None,itkImageFunctionIUS2DF)
itkImageFunctionIUS2DF.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS2DF_EvaluateAtContinuousIndex,None,itkImageFunctionIUS2DF)
itkImageFunctionIUS2DF.IsInsideBuffer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS2DF_IsInsideBuffer,None,itkImageFunctionIUS2DF)
itkImageFunctionIUS2DF.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS2DF_ConvertPointToNearestIndex,None,itkImageFunctionIUS2DF)
itkImageFunctionIUS2DF.ConvertPointToContinousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS2DF_ConvertPointToContinousIndex,None,itkImageFunctionIUS2DF)
itkImageFunctionIUS2DF.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS2DF_ConvertPointToContinuousIndex,None,itkImageFunctionIUS2DF)
itkImageFunctionIUS2DF.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS2DF_ConvertContinuousIndexToNearestIndex,None,itkImageFunctionIUS2DF)
itkImageFunctionIUS2DF.GetStartIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS2DF_GetStartIndex,None,itkImageFunctionIUS2DF)
itkImageFunctionIUS2DF.GetEndIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS2DF_GetEndIndex,None,itkImageFunctionIUS2DF)
itkImageFunctionIUS2DF.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS2DF_GetStartContinuousIndex,None,itkImageFunctionIUS2DF)
itkImageFunctionIUS2DF.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS2DF_GetEndContinuousIndex,None,itkImageFunctionIUS2DF)
itkImageFunctionIUS2DF.GetPointer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS2DF_GetPointer,None,itkImageFunctionIUS2DF)
itkImageFunctionIUS2DF_swigregister = _itkImageFunctionPython.itkImageFunctionIUS2DF_swigregister
itkImageFunctionIUS2DF_swigregister(itkImageFunctionIUS2DF)

def itkImageFunctionIUS2DF_cast(*args):
  """itkImageFunctionIUS2DF_cast(itkLightObject obj) -> itkImageFunctionIUS2DF"""
  return _itkImageFunctionPython.itkImageFunctionIUS2DF_cast(*args)

class itkImageFunctionIUS3DD(itkFunctionBasePython.itkFunctionBasePD3D):
    """Proxy of C++ itkImageFunctionIUS3DD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkImageFunctionPython.itkImageFunctionIUS3DD_ImageDimension
    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageUS3 ptr)"""
        return _itkImageFunctionPython.itkImageFunctionIUS3DD_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageUS3"""
        return _itkImageFunctionPython.itkImageFunctionIUS3DD_GetInputImage(self)

    def EvaluateAtIndex(self, *args):
        """EvaluateAtIndex(self, itkIndex3 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIUS3DD_EvaluateAtIndex(self, *args)

    def EvaluateAtContinuousIndex(self, *args):
        """EvaluateAtContinuousIndex(self, itkContinuousIndexD3 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIUS3DD_EvaluateAtContinuousIndex(self, *args)

    def IsInsideBuffer(self, *args):
        """
        IsInsideBuffer(self, itkIndex3 index) -> bool
        IsInsideBuffer(self, itkContinuousIndexD3 index) -> bool
        IsInsideBuffer(self, itkPointD3 point) -> bool
        """
        return _itkImageFunctionPython.itkImageFunctionIUS3DD_IsInsideBuffer(self, *args)

    def ConvertPointToNearestIndex(self, *args):
        """ConvertPointToNearestIndex(self, itkPointD3 point, itkIndex3 index)"""
        return _itkImageFunctionPython.itkImageFunctionIUS3DD_ConvertPointToNearestIndex(self, *args)

    def ConvertPointToContinousIndex(self, *args):
        """ConvertPointToContinousIndex(self, itkPointD3 point, itkContinuousIndexD3 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIUS3DD_ConvertPointToContinousIndex(self, *args)

    def ConvertPointToContinuousIndex(self, *args):
        """ConvertPointToContinuousIndex(self, itkPointD3 point, itkContinuousIndexD3 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIUS3DD_ConvertPointToContinuousIndex(self, *args)

    def ConvertContinuousIndexToNearestIndex(self, *args):
        """ConvertContinuousIndexToNearestIndex(self, itkContinuousIndexD3 cindex, itkIndex3 index)"""
        return _itkImageFunctionPython.itkImageFunctionIUS3DD_ConvertContinuousIndexToNearestIndex(self, *args)

    def GetStartIndex(self):
        """GetStartIndex(self) -> itkIndex3"""
        return _itkImageFunctionPython.itkImageFunctionIUS3DD_GetStartIndex(self)

    def GetEndIndex(self):
        """GetEndIndex(self) -> itkIndex3"""
        return _itkImageFunctionPython.itkImageFunctionIUS3DD_GetEndIndex(self)

    def GetStartContinuousIndex(self):
        """GetStartContinuousIndex(self) -> itkContinuousIndexD3"""
        return _itkImageFunctionPython.itkImageFunctionIUS3DD_GetStartContinuousIndex(self)

    def GetEndContinuousIndex(self):
        """GetEndContinuousIndex(self) -> itkContinuousIndexD3"""
        return _itkImageFunctionPython.itkImageFunctionIUS3DD_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionPython.delete_itkImageFunctionIUS3DD
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageFunctionIUS3DD"""
        return _itkImageFunctionPython.itkImageFunctionIUS3DD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageFunctionIUS3DD"""
        return _itkImageFunctionPython.itkImageFunctionIUS3DD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIUS3DD
        
        Create a new object of the class itkImageFunctionIUS3DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageFunctionIUS3DD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageFunctionIUS3DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIUS3DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIUS3DD.SetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS3DD_SetInputImage,None,itkImageFunctionIUS3DD)
itkImageFunctionIUS3DD.GetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS3DD_GetInputImage,None,itkImageFunctionIUS3DD)
itkImageFunctionIUS3DD.EvaluateAtIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS3DD_EvaluateAtIndex,None,itkImageFunctionIUS3DD)
itkImageFunctionIUS3DD.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS3DD_EvaluateAtContinuousIndex,None,itkImageFunctionIUS3DD)
itkImageFunctionIUS3DD.IsInsideBuffer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS3DD_IsInsideBuffer,None,itkImageFunctionIUS3DD)
itkImageFunctionIUS3DD.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS3DD_ConvertPointToNearestIndex,None,itkImageFunctionIUS3DD)
itkImageFunctionIUS3DD.ConvertPointToContinousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS3DD_ConvertPointToContinousIndex,None,itkImageFunctionIUS3DD)
itkImageFunctionIUS3DD.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS3DD_ConvertPointToContinuousIndex,None,itkImageFunctionIUS3DD)
itkImageFunctionIUS3DD.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS3DD_ConvertContinuousIndexToNearestIndex,None,itkImageFunctionIUS3DD)
itkImageFunctionIUS3DD.GetStartIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS3DD_GetStartIndex,None,itkImageFunctionIUS3DD)
itkImageFunctionIUS3DD.GetEndIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS3DD_GetEndIndex,None,itkImageFunctionIUS3DD)
itkImageFunctionIUS3DD.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS3DD_GetStartContinuousIndex,None,itkImageFunctionIUS3DD)
itkImageFunctionIUS3DD.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS3DD_GetEndContinuousIndex,None,itkImageFunctionIUS3DD)
itkImageFunctionIUS3DD.GetPointer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS3DD_GetPointer,None,itkImageFunctionIUS3DD)
itkImageFunctionIUS3DD_swigregister = _itkImageFunctionPython.itkImageFunctionIUS3DD_swigregister
itkImageFunctionIUS3DD_swigregister(itkImageFunctionIUS3DD)

def itkImageFunctionIUS3DD_cast(*args):
  """itkImageFunctionIUS3DD_cast(itkLightObject obj) -> itkImageFunctionIUS3DD"""
  return _itkImageFunctionPython.itkImageFunctionIUS3DD_cast(*args)

class itkImageFunctionIUS3DF(itkFunctionBasePython.itkFunctionBasePF3D):
    """Proxy of C++ itkImageFunctionIUS3DF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkImageFunctionPython.itkImageFunctionIUS3DF_ImageDimension
    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageUS3 ptr)"""
        return _itkImageFunctionPython.itkImageFunctionIUS3DF_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageUS3"""
        return _itkImageFunctionPython.itkImageFunctionIUS3DF_GetInputImage(self)

    def EvaluateAtIndex(self, *args):
        """EvaluateAtIndex(self, itkIndex3 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIUS3DF_EvaluateAtIndex(self, *args)

    def EvaluateAtContinuousIndex(self, *args):
        """EvaluateAtContinuousIndex(self, itkContinuousIndexF3 index) -> double"""
        return _itkImageFunctionPython.itkImageFunctionIUS3DF_EvaluateAtContinuousIndex(self, *args)

    def IsInsideBuffer(self, *args):
        """
        IsInsideBuffer(self, itkIndex3 index) -> bool
        IsInsideBuffer(self, itkContinuousIndexF3 index) -> bool
        IsInsideBuffer(self, itkPointF3 point) -> bool
        """
        return _itkImageFunctionPython.itkImageFunctionIUS3DF_IsInsideBuffer(self, *args)

    def ConvertPointToNearestIndex(self, *args):
        """ConvertPointToNearestIndex(self, itkPointF3 point, itkIndex3 index)"""
        return _itkImageFunctionPython.itkImageFunctionIUS3DF_ConvertPointToNearestIndex(self, *args)

    def ConvertPointToContinousIndex(self, *args):
        """ConvertPointToContinousIndex(self, itkPointF3 point, itkContinuousIndexF3 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIUS3DF_ConvertPointToContinousIndex(self, *args)

    def ConvertPointToContinuousIndex(self, *args):
        """ConvertPointToContinuousIndex(self, itkPointF3 point, itkContinuousIndexF3 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIUS3DF_ConvertPointToContinuousIndex(self, *args)

    def ConvertContinuousIndexToNearestIndex(self, *args):
        """ConvertContinuousIndexToNearestIndex(self, itkContinuousIndexF3 cindex, itkIndex3 index)"""
        return _itkImageFunctionPython.itkImageFunctionIUS3DF_ConvertContinuousIndexToNearestIndex(self, *args)

    def GetStartIndex(self):
        """GetStartIndex(self) -> itkIndex3"""
        return _itkImageFunctionPython.itkImageFunctionIUS3DF_GetStartIndex(self)

    def GetEndIndex(self):
        """GetEndIndex(self) -> itkIndex3"""
        return _itkImageFunctionPython.itkImageFunctionIUS3DF_GetEndIndex(self)

    def GetStartContinuousIndex(self):
        """GetStartContinuousIndex(self) -> itkContinuousIndexF3"""
        return _itkImageFunctionPython.itkImageFunctionIUS3DF_GetStartContinuousIndex(self)

    def GetEndContinuousIndex(self):
        """GetEndContinuousIndex(self) -> itkContinuousIndexF3"""
        return _itkImageFunctionPython.itkImageFunctionIUS3DF_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionPython.delete_itkImageFunctionIUS3DF
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageFunctionIUS3DF"""
        return _itkImageFunctionPython.itkImageFunctionIUS3DF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageFunctionIUS3DF"""
        return _itkImageFunctionPython.itkImageFunctionIUS3DF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIUS3DF
        
        Create a new object of the class itkImageFunctionIUS3DF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageFunctionIUS3DF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageFunctionIUS3DF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIUS3DF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIUS3DF.SetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS3DF_SetInputImage,None,itkImageFunctionIUS3DF)
itkImageFunctionIUS3DF.GetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS3DF_GetInputImage,None,itkImageFunctionIUS3DF)
itkImageFunctionIUS3DF.EvaluateAtIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS3DF_EvaluateAtIndex,None,itkImageFunctionIUS3DF)
itkImageFunctionIUS3DF.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS3DF_EvaluateAtContinuousIndex,None,itkImageFunctionIUS3DF)
itkImageFunctionIUS3DF.IsInsideBuffer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS3DF_IsInsideBuffer,None,itkImageFunctionIUS3DF)
itkImageFunctionIUS3DF.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS3DF_ConvertPointToNearestIndex,None,itkImageFunctionIUS3DF)
itkImageFunctionIUS3DF.ConvertPointToContinousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS3DF_ConvertPointToContinousIndex,None,itkImageFunctionIUS3DF)
itkImageFunctionIUS3DF.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS3DF_ConvertPointToContinuousIndex,None,itkImageFunctionIUS3DF)
itkImageFunctionIUS3DF.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS3DF_ConvertContinuousIndexToNearestIndex,None,itkImageFunctionIUS3DF)
itkImageFunctionIUS3DF.GetStartIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS3DF_GetStartIndex,None,itkImageFunctionIUS3DF)
itkImageFunctionIUS3DF.GetEndIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS3DF_GetEndIndex,None,itkImageFunctionIUS3DF)
itkImageFunctionIUS3DF.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS3DF_GetStartContinuousIndex,None,itkImageFunctionIUS3DF)
itkImageFunctionIUS3DF.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS3DF_GetEndContinuousIndex,None,itkImageFunctionIUS3DF)
itkImageFunctionIUS3DF.GetPointer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIUS3DF_GetPointer,None,itkImageFunctionIUS3DF)
itkImageFunctionIUS3DF_swigregister = _itkImageFunctionPython.itkImageFunctionIUS3DF_swigregister
itkImageFunctionIUS3DF_swigregister(itkImageFunctionIUS3DF)

def itkImageFunctionIUS3DF_cast(*args):
  """itkImageFunctionIUS3DF_cast(itkLightObject obj) -> itkImageFunctionIUS3DF"""
  return _itkImageFunctionPython.itkImageFunctionIUS3DF_cast(*args)

class itkImageFunctionIVF22VD2D(itkFunctionBasePython.itkFunctionBasePD2VD2):
    """Proxy of C++ itkImageFunctionIVF22VD2D class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkImageFunctionPython.itkImageFunctionIVF22VD2D_ImageDimension
    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageVF22 ptr)"""
        return _itkImageFunctionPython.itkImageFunctionIVF22VD2D_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageVF22"""
        return _itkImageFunctionPython.itkImageFunctionIVF22VD2D_GetInputImage(self)

    def EvaluateAtIndex(self, *args):
        """EvaluateAtIndex(self, itkIndex2 index) -> itkVectorD2"""
        return _itkImageFunctionPython.itkImageFunctionIVF22VD2D_EvaluateAtIndex(self, *args)

    def EvaluateAtContinuousIndex(self, *args):
        """EvaluateAtContinuousIndex(self, itkContinuousIndexD2 index) -> itkVectorD2"""
        return _itkImageFunctionPython.itkImageFunctionIVF22VD2D_EvaluateAtContinuousIndex(self, *args)

    def IsInsideBuffer(self, *args):
        """
        IsInsideBuffer(self, itkIndex2 index) -> bool
        IsInsideBuffer(self, itkContinuousIndexD2 index) -> bool
        IsInsideBuffer(self, itkPointD2 point) -> bool
        """
        return _itkImageFunctionPython.itkImageFunctionIVF22VD2D_IsInsideBuffer(self, *args)

    def ConvertPointToNearestIndex(self, *args):
        """ConvertPointToNearestIndex(self, itkPointD2 point, itkIndex2 index)"""
        return _itkImageFunctionPython.itkImageFunctionIVF22VD2D_ConvertPointToNearestIndex(self, *args)

    def ConvertPointToContinousIndex(self, *args):
        """ConvertPointToContinousIndex(self, itkPointD2 point, itkContinuousIndexD2 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIVF22VD2D_ConvertPointToContinousIndex(self, *args)

    def ConvertPointToContinuousIndex(self, *args):
        """ConvertPointToContinuousIndex(self, itkPointD2 point, itkContinuousIndexD2 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIVF22VD2D_ConvertPointToContinuousIndex(self, *args)

    def ConvertContinuousIndexToNearestIndex(self, *args):
        """ConvertContinuousIndexToNearestIndex(self, itkContinuousIndexD2 cindex, itkIndex2 index)"""
        return _itkImageFunctionPython.itkImageFunctionIVF22VD2D_ConvertContinuousIndexToNearestIndex(self, *args)

    def GetStartIndex(self):
        """GetStartIndex(self) -> itkIndex2"""
        return _itkImageFunctionPython.itkImageFunctionIVF22VD2D_GetStartIndex(self)

    def GetEndIndex(self):
        """GetEndIndex(self) -> itkIndex2"""
        return _itkImageFunctionPython.itkImageFunctionIVF22VD2D_GetEndIndex(self)

    def GetStartContinuousIndex(self):
        """GetStartContinuousIndex(self) -> itkContinuousIndexD2"""
        return _itkImageFunctionPython.itkImageFunctionIVF22VD2D_GetStartContinuousIndex(self)

    def GetEndContinuousIndex(self):
        """GetEndContinuousIndex(self) -> itkContinuousIndexD2"""
        return _itkImageFunctionPython.itkImageFunctionIVF22VD2D_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionPython.delete_itkImageFunctionIVF22VD2D
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageFunctionIVF22VD2D"""
        return _itkImageFunctionPython.itkImageFunctionIVF22VD2D_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageFunctionIVF22VD2D"""
        return _itkImageFunctionPython.itkImageFunctionIVF22VD2D_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIVF22VD2D
        
        Create a new object of the class itkImageFunctionIVF22VD2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageFunctionIVF22VD2D.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageFunctionIVF22VD2D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIVF22VD2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIVF22VD2D.SetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIVF22VD2D_SetInputImage,None,itkImageFunctionIVF22VD2D)
itkImageFunctionIVF22VD2D.GetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIVF22VD2D_GetInputImage,None,itkImageFunctionIVF22VD2D)
itkImageFunctionIVF22VD2D.EvaluateAtIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIVF22VD2D_EvaluateAtIndex,None,itkImageFunctionIVF22VD2D)
itkImageFunctionIVF22VD2D.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIVF22VD2D_EvaluateAtContinuousIndex,None,itkImageFunctionIVF22VD2D)
itkImageFunctionIVF22VD2D.IsInsideBuffer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIVF22VD2D_IsInsideBuffer,None,itkImageFunctionIVF22VD2D)
itkImageFunctionIVF22VD2D.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIVF22VD2D_ConvertPointToNearestIndex,None,itkImageFunctionIVF22VD2D)
itkImageFunctionIVF22VD2D.ConvertPointToContinousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIVF22VD2D_ConvertPointToContinousIndex,None,itkImageFunctionIVF22VD2D)
itkImageFunctionIVF22VD2D.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIVF22VD2D_ConvertPointToContinuousIndex,None,itkImageFunctionIVF22VD2D)
itkImageFunctionIVF22VD2D.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIVF22VD2D_ConvertContinuousIndexToNearestIndex,None,itkImageFunctionIVF22VD2D)
itkImageFunctionIVF22VD2D.GetStartIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIVF22VD2D_GetStartIndex,None,itkImageFunctionIVF22VD2D)
itkImageFunctionIVF22VD2D.GetEndIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIVF22VD2D_GetEndIndex,None,itkImageFunctionIVF22VD2D)
itkImageFunctionIVF22VD2D.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIVF22VD2D_GetStartContinuousIndex,None,itkImageFunctionIVF22VD2D)
itkImageFunctionIVF22VD2D.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIVF22VD2D_GetEndContinuousIndex,None,itkImageFunctionIVF22VD2D)
itkImageFunctionIVF22VD2D.GetPointer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIVF22VD2D_GetPointer,None,itkImageFunctionIVF22VD2D)
itkImageFunctionIVF22VD2D_swigregister = _itkImageFunctionPython.itkImageFunctionIVF22VD2D_swigregister
itkImageFunctionIVF22VD2D_swigregister(itkImageFunctionIVF22VD2D)

def itkImageFunctionIVF22VD2D_cast(*args):
  """itkImageFunctionIVF22VD2D_cast(itkLightObject obj) -> itkImageFunctionIVF22VD2D"""
  return _itkImageFunctionPython.itkImageFunctionIVF22VD2D_cast(*args)

class itkImageFunctionIVF33VD3D(itkFunctionBasePython.itkFunctionBasePD3VD3):
    """Proxy of C++ itkImageFunctionIVF33VD3D class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkImageFunctionPython.itkImageFunctionIVF33VD3D_ImageDimension
    def SetInputImage(self, *args):
        """SetInputImage(self, itkImageVF33 ptr)"""
        return _itkImageFunctionPython.itkImageFunctionIVF33VD3D_SetInputImage(self, *args)

    def GetInputImage(self):
        """GetInputImage(self) -> itkImageVF33"""
        return _itkImageFunctionPython.itkImageFunctionIVF33VD3D_GetInputImage(self)

    def EvaluateAtIndex(self, *args):
        """EvaluateAtIndex(self, itkIndex3 index) -> itkVectorD3"""
        return _itkImageFunctionPython.itkImageFunctionIVF33VD3D_EvaluateAtIndex(self, *args)

    def EvaluateAtContinuousIndex(self, *args):
        """EvaluateAtContinuousIndex(self, itkContinuousIndexD3 index) -> itkVectorD3"""
        return _itkImageFunctionPython.itkImageFunctionIVF33VD3D_EvaluateAtContinuousIndex(self, *args)

    def IsInsideBuffer(self, *args):
        """
        IsInsideBuffer(self, itkIndex3 index) -> bool
        IsInsideBuffer(self, itkContinuousIndexD3 index) -> bool
        IsInsideBuffer(self, itkPointD3 point) -> bool
        """
        return _itkImageFunctionPython.itkImageFunctionIVF33VD3D_IsInsideBuffer(self, *args)

    def ConvertPointToNearestIndex(self, *args):
        """ConvertPointToNearestIndex(self, itkPointD3 point, itkIndex3 index)"""
        return _itkImageFunctionPython.itkImageFunctionIVF33VD3D_ConvertPointToNearestIndex(self, *args)

    def ConvertPointToContinousIndex(self, *args):
        """ConvertPointToContinousIndex(self, itkPointD3 point, itkContinuousIndexD3 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIVF33VD3D_ConvertPointToContinousIndex(self, *args)

    def ConvertPointToContinuousIndex(self, *args):
        """ConvertPointToContinuousIndex(self, itkPointD3 point, itkContinuousIndexD3 cindex)"""
        return _itkImageFunctionPython.itkImageFunctionIVF33VD3D_ConvertPointToContinuousIndex(self, *args)

    def ConvertContinuousIndexToNearestIndex(self, *args):
        """ConvertContinuousIndexToNearestIndex(self, itkContinuousIndexD3 cindex, itkIndex3 index)"""
        return _itkImageFunctionPython.itkImageFunctionIVF33VD3D_ConvertContinuousIndexToNearestIndex(self, *args)

    def GetStartIndex(self):
        """GetStartIndex(self) -> itkIndex3"""
        return _itkImageFunctionPython.itkImageFunctionIVF33VD3D_GetStartIndex(self)

    def GetEndIndex(self):
        """GetEndIndex(self) -> itkIndex3"""
        return _itkImageFunctionPython.itkImageFunctionIVF33VD3D_GetEndIndex(self)

    def GetStartContinuousIndex(self):
        """GetStartContinuousIndex(self) -> itkContinuousIndexD3"""
        return _itkImageFunctionPython.itkImageFunctionIVF33VD3D_GetStartContinuousIndex(self)

    def GetEndContinuousIndex(self):
        """GetEndContinuousIndex(self) -> itkContinuousIndexD3"""
        return _itkImageFunctionPython.itkImageFunctionIVF33VD3D_GetEndContinuousIndex(self)

    __swig_destroy__ = _itkImageFunctionPython.delete_itkImageFunctionIVF33VD3D
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageFunctionIVF33VD3D"""
        return _itkImageFunctionPython.itkImageFunctionIVF33VD3D_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageFunctionIVF33VD3D"""
        return _itkImageFunctionPython.itkImageFunctionIVF33VD3D_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageFunctionIVF33VD3D
        
        Create a new object of the class itkImageFunctionIVF33VD3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageFunctionIVF33VD3D.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageFunctionIVF33VD3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFunctionIVF33VD3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFunctionIVF33VD3D.SetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIVF33VD3D_SetInputImage,None,itkImageFunctionIVF33VD3D)
itkImageFunctionIVF33VD3D.GetInputImage = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIVF33VD3D_GetInputImage,None,itkImageFunctionIVF33VD3D)
itkImageFunctionIVF33VD3D.EvaluateAtIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIVF33VD3D_EvaluateAtIndex,None,itkImageFunctionIVF33VD3D)
itkImageFunctionIVF33VD3D.EvaluateAtContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIVF33VD3D_EvaluateAtContinuousIndex,None,itkImageFunctionIVF33VD3D)
itkImageFunctionIVF33VD3D.IsInsideBuffer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIVF33VD3D_IsInsideBuffer,None,itkImageFunctionIVF33VD3D)
itkImageFunctionIVF33VD3D.ConvertPointToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIVF33VD3D_ConvertPointToNearestIndex,None,itkImageFunctionIVF33VD3D)
itkImageFunctionIVF33VD3D.ConvertPointToContinousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIVF33VD3D_ConvertPointToContinousIndex,None,itkImageFunctionIVF33VD3D)
itkImageFunctionIVF33VD3D.ConvertPointToContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIVF33VD3D_ConvertPointToContinuousIndex,None,itkImageFunctionIVF33VD3D)
itkImageFunctionIVF33VD3D.ConvertContinuousIndexToNearestIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIVF33VD3D_ConvertContinuousIndexToNearestIndex,None,itkImageFunctionIVF33VD3D)
itkImageFunctionIVF33VD3D.GetStartIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIVF33VD3D_GetStartIndex,None,itkImageFunctionIVF33VD3D)
itkImageFunctionIVF33VD3D.GetEndIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIVF33VD3D_GetEndIndex,None,itkImageFunctionIVF33VD3D)
itkImageFunctionIVF33VD3D.GetStartContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIVF33VD3D_GetStartContinuousIndex,None,itkImageFunctionIVF33VD3D)
itkImageFunctionIVF33VD3D.GetEndContinuousIndex = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIVF33VD3D_GetEndContinuousIndex,None,itkImageFunctionIVF33VD3D)
itkImageFunctionIVF33VD3D.GetPointer = new_instancemethod(_itkImageFunctionPython.itkImageFunctionIVF33VD3D_GetPointer,None,itkImageFunctionIVF33VD3D)
itkImageFunctionIVF33VD3D_swigregister = _itkImageFunctionPython.itkImageFunctionIVF33VD3D_swigregister
itkImageFunctionIVF33VD3D_swigregister(itkImageFunctionIVF33VD3D)

def itkImageFunctionIVF33VD3D_cast(*args):
  """itkImageFunctionIVF33VD3D_cast(itkLightObject obj) -> itkImageFunctionIVF33VD3D"""
  return _itkImageFunctionPython.itkImageFunctionIVF33VD3D_cast(*args)



