// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkVTKImageToImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkVTKImageToImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkVTKImageToImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkVTKImageToImageFilterJava
#endif
#ifdef SWIGLUA
%module itkVTKImageToImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkVTKImageToImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkVTKImageToImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkVTKImageToImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkVTKImageToImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkVTKImageToImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkVTKImageToImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkVTKImageToImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkVTKImageToImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkVTKImageToImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkVTKImageToImageFilterPython
#endif
#ifdef SWIGR
%module itkVTKImageToImageFilterR
#endif
#ifdef SWIGRUBY
%module itkVTKImageToImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkVTKImageToImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkVTKImageToImageFilterTcl
#endif
#ifdef SWIGXML
%module itkVTKImageToImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "SimpleFilters.includes"
#include "Mesh.includes"
#include "ItkVtkGlue.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkVTKImageImport.i


%include itk.i
%include itkvtk.swg
%include wrap_itkVTKImageToImageFilter_ext.i


 class itkVTKImageToImageFilterID2 : public itkVTKImageImportID2 {
   public:
     static itkVTKImageToImageFilterID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput(vtkImageData * arg0);
     vtkImageExport * GetExporter() const;
     itkVTKImageImportID2 const * GetImporter() const;
   private:
     itkVTKImageToImageFilterID2(itkVTKImageToImageFilterID2 const & arg0);
     void operator=(itkVTKImageToImageFilterID2 const & arg0);
   protected:
     itkVTKImageToImageFilterID2();
     ~itkVTKImageToImageFilterID2();
 };


 class itkVTKImageToImageFilterID2_Pointer {
   public:
     itkVTKImageToImageFilterID2_Pointer();
     itkVTKImageToImageFilterID2_Pointer(itkVTKImageToImageFilterID2_Pointer const & p);
     itkVTKImageToImageFilterID2_Pointer(itkVTKImageToImageFilterID2 * p);
     ~itkVTKImageToImageFilterID2_Pointer();
     itkVTKImageToImageFilterID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVTKImageToImageFilterID2 * GetPointer() const;
     bool operator<(itkVTKImageToImageFilterID2_Pointer const & r) const;
     bool operator>(itkVTKImageToImageFilterID2_Pointer const & r) const;
     bool operator<=(itkVTKImageToImageFilterID2_Pointer const & r) const;
     bool operator>=(itkVTKImageToImageFilterID2_Pointer const & r) const;
     itkVTKImageToImageFilterID2_Pointer & operator=(itkVTKImageToImageFilterID2_Pointer const & r);
     itkVTKImageToImageFilterID2_Pointer & operator=(itkVTKImageToImageFilterID2 * r);
     itkVTKImageToImageFilterID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVTKImageToImageFilterID3 : public itkVTKImageImportID3 {
   public:
     static itkVTKImageToImageFilterID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput(vtkImageData * arg0);
     vtkImageExport * GetExporter() const;
     itkVTKImageImportID3 const * GetImporter() const;
   private:
     itkVTKImageToImageFilterID3(itkVTKImageToImageFilterID3 const & arg0);
     void operator=(itkVTKImageToImageFilterID3 const & arg0);
   protected:
     itkVTKImageToImageFilterID3();
     ~itkVTKImageToImageFilterID3();
 };


 class itkVTKImageToImageFilterID3_Pointer {
   public:
     itkVTKImageToImageFilterID3_Pointer();
     itkVTKImageToImageFilterID3_Pointer(itkVTKImageToImageFilterID3_Pointer const & p);
     itkVTKImageToImageFilterID3_Pointer(itkVTKImageToImageFilterID3 * p);
     ~itkVTKImageToImageFilterID3_Pointer();
     itkVTKImageToImageFilterID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVTKImageToImageFilterID3 * GetPointer() const;
     bool operator<(itkVTKImageToImageFilterID3_Pointer const & r) const;
     bool operator>(itkVTKImageToImageFilterID3_Pointer const & r) const;
     bool operator<=(itkVTKImageToImageFilterID3_Pointer const & r) const;
     bool operator>=(itkVTKImageToImageFilterID3_Pointer const & r) const;
     itkVTKImageToImageFilterID3_Pointer & operator=(itkVTKImageToImageFilterID3_Pointer const & r);
     itkVTKImageToImageFilterID3_Pointer & operator=(itkVTKImageToImageFilterID3 * r);
     itkVTKImageToImageFilterID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVTKImageToImageFilterIF2 : public itkVTKImageImportIF2 {
   public:
     static itkVTKImageToImageFilterIF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput(vtkImageData * arg0);
     vtkImageExport * GetExporter() const;
     itkVTKImageImportIF2 const * GetImporter() const;
   private:
     itkVTKImageToImageFilterIF2(itkVTKImageToImageFilterIF2 const & arg0);
     void operator=(itkVTKImageToImageFilterIF2 const & arg0);
   protected:
     itkVTKImageToImageFilterIF2();
     ~itkVTKImageToImageFilterIF2();
 };


 class itkVTKImageToImageFilterIF2_Pointer {
   public:
     itkVTKImageToImageFilterIF2_Pointer();
     itkVTKImageToImageFilterIF2_Pointer(itkVTKImageToImageFilterIF2_Pointer const & p);
     itkVTKImageToImageFilterIF2_Pointer(itkVTKImageToImageFilterIF2 * p);
     ~itkVTKImageToImageFilterIF2_Pointer();
     itkVTKImageToImageFilterIF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVTKImageToImageFilterIF2 * GetPointer() const;
     bool operator<(itkVTKImageToImageFilterIF2_Pointer const & r) const;
     bool operator>(itkVTKImageToImageFilterIF2_Pointer const & r) const;
     bool operator<=(itkVTKImageToImageFilterIF2_Pointer const & r) const;
     bool operator>=(itkVTKImageToImageFilterIF2_Pointer const & r) const;
     itkVTKImageToImageFilterIF2_Pointer & operator=(itkVTKImageToImageFilterIF2_Pointer const & r);
     itkVTKImageToImageFilterIF2_Pointer & operator=(itkVTKImageToImageFilterIF2 * r);
     itkVTKImageToImageFilterIF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVTKImageToImageFilterIF3 : public itkVTKImageImportIF3 {
   public:
     static itkVTKImageToImageFilterIF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput(vtkImageData * arg0);
     vtkImageExport * GetExporter() const;
     itkVTKImageImportIF3 const * GetImporter() const;
   private:
     itkVTKImageToImageFilterIF3(itkVTKImageToImageFilterIF3 const & arg0);
     void operator=(itkVTKImageToImageFilterIF3 const & arg0);
   protected:
     itkVTKImageToImageFilterIF3();
     ~itkVTKImageToImageFilterIF3();
 };


 class itkVTKImageToImageFilterIF3_Pointer {
   public:
     itkVTKImageToImageFilterIF3_Pointer();
     itkVTKImageToImageFilterIF3_Pointer(itkVTKImageToImageFilterIF3_Pointer const & p);
     itkVTKImageToImageFilterIF3_Pointer(itkVTKImageToImageFilterIF3 * p);
     ~itkVTKImageToImageFilterIF3_Pointer();
     itkVTKImageToImageFilterIF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVTKImageToImageFilterIF3 * GetPointer() const;
     bool operator<(itkVTKImageToImageFilterIF3_Pointer const & r) const;
     bool operator>(itkVTKImageToImageFilterIF3_Pointer const & r) const;
     bool operator<=(itkVTKImageToImageFilterIF3_Pointer const & r) const;
     bool operator>=(itkVTKImageToImageFilterIF3_Pointer const & r) const;
     itkVTKImageToImageFilterIF3_Pointer & operator=(itkVTKImageToImageFilterIF3_Pointer const & r);
     itkVTKImageToImageFilterIF3_Pointer & operator=(itkVTKImageToImageFilterIF3 * r);
     itkVTKImageToImageFilterIF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVTKImageToImageFilterIUC2 : public itkVTKImageImportIUC2 {
   public:
     static itkVTKImageToImageFilterIUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput(vtkImageData * arg0);
     vtkImageExport * GetExporter() const;
     itkVTKImageImportIUC2 const * GetImporter() const;
   private:
     itkVTKImageToImageFilterIUC2(itkVTKImageToImageFilterIUC2 const & arg0);
     void operator=(itkVTKImageToImageFilterIUC2 const & arg0);
   protected:
     itkVTKImageToImageFilterIUC2();
     ~itkVTKImageToImageFilterIUC2();
 };


 class itkVTKImageToImageFilterIUC2_Pointer {
   public:
     itkVTKImageToImageFilterIUC2_Pointer();
     itkVTKImageToImageFilterIUC2_Pointer(itkVTKImageToImageFilterIUC2_Pointer const & p);
     itkVTKImageToImageFilterIUC2_Pointer(itkVTKImageToImageFilterIUC2 * p);
     ~itkVTKImageToImageFilterIUC2_Pointer();
     itkVTKImageToImageFilterIUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVTKImageToImageFilterIUC2 * GetPointer() const;
     bool operator<(itkVTKImageToImageFilterIUC2_Pointer const & r) const;
     bool operator>(itkVTKImageToImageFilterIUC2_Pointer const & r) const;
     bool operator<=(itkVTKImageToImageFilterIUC2_Pointer const & r) const;
     bool operator>=(itkVTKImageToImageFilterIUC2_Pointer const & r) const;
     itkVTKImageToImageFilterIUC2_Pointer & operator=(itkVTKImageToImageFilterIUC2_Pointer const & r);
     itkVTKImageToImageFilterIUC2_Pointer & operator=(itkVTKImageToImageFilterIUC2 * r);
     itkVTKImageToImageFilterIUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVTKImageToImageFilterIUC3 : public itkVTKImageImportIUC3 {
   public:
     static itkVTKImageToImageFilterIUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput(vtkImageData * arg0);
     vtkImageExport * GetExporter() const;
     itkVTKImageImportIUC3 const * GetImporter() const;
   private:
     itkVTKImageToImageFilterIUC3(itkVTKImageToImageFilterIUC3 const & arg0);
     void operator=(itkVTKImageToImageFilterIUC3 const & arg0);
   protected:
     itkVTKImageToImageFilterIUC3();
     ~itkVTKImageToImageFilterIUC3();
 };


 class itkVTKImageToImageFilterIUC3_Pointer {
   public:
     itkVTKImageToImageFilterIUC3_Pointer();
     itkVTKImageToImageFilterIUC3_Pointer(itkVTKImageToImageFilterIUC3_Pointer const & p);
     itkVTKImageToImageFilterIUC3_Pointer(itkVTKImageToImageFilterIUC3 * p);
     ~itkVTKImageToImageFilterIUC3_Pointer();
     itkVTKImageToImageFilterIUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVTKImageToImageFilterIUC3 * GetPointer() const;
     bool operator<(itkVTKImageToImageFilterIUC3_Pointer const & r) const;
     bool operator>(itkVTKImageToImageFilterIUC3_Pointer const & r) const;
     bool operator<=(itkVTKImageToImageFilterIUC3_Pointer const & r) const;
     bool operator>=(itkVTKImageToImageFilterIUC3_Pointer const & r) const;
     itkVTKImageToImageFilterIUC3_Pointer & operator=(itkVTKImageToImageFilterIUC3_Pointer const & r);
     itkVTKImageToImageFilterIUC3_Pointer & operator=(itkVTKImageToImageFilterIUC3 * r);
     itkVTKImageToImageFilterIUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVTKImageToImageFilterIUL2 : public itkVTKImageImportIUL2 {
   public:
     static itkVTKImageToImageFilterIUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput(vtkImageData * arg0);
     vtkImageExport * GetExporter() const;
     itkVTKImageImportIUL2 const * GetImporter() const;
   private:
     itkVTKImageToImageFilterIUL2(itkVTKImageToImageFilterIUL2 const & arg0);
     void operator=(itkVTKImageToImageFilterIUL2 const & arg0);
   protected:
     itkVTKImageToImageFilterIUL2();
     ~itkVTKImageToImageFilterIUL2();
 };


 class itkVTKImageToImageFilterIUL2_Pointer {
   public:
     itkVTKImageToImageFilterIUL2_Pointer();
     itkVTKImageToImageFilterIUL2_Pointer(itkVTKImageToImageFilterIUL2_Pointer const & p);
     itkVTKImageToImageFilterIUL2_Pointer(itkVTKImageToImageFilterIUL2 * p);
     ~itkVTKImageToImageFilterIUL2_Pointer();
     itkVTKImageToImageFilterIUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVTKImageToImageFilterIUL2 * GetPointer() const;
     bool operator<(itkVTKImageToImageFilterIUL2_Pointer const & r) const;
     bool operator>(itkVTKImageToImageFilterIUL2_Pointer const & r) const;
     bool operator<=(itkVTKImageToImageFilterIUL2_Pointer const & r) const;
     bool operator>=(itkVTKImageToImageFilterIUL2_Pointer const & r) const;
     itkVTKImageToImageFilterIUL2_Pointer & operator=(itkVTKImageToImageFilterIUL2_Pointer const & r);
     itkVTKImageToImageFilterIUL2_Pointer & operator=(itkVTKImageToImageFilterIUL2 * r);
     itkVTKImageToImageFilterIUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVTKImageToImageFilterIUL3 : public itkVTKImageImportIUL3 {
   public:
     static itkVTKImageToImageFilterIUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput(vtkImageData * arg0);
     vtkImageExport * GetExporter() const;
     itkVTKImageImportIUL3 const * GetImporter() const;
   private:
     itkVTKImageToImageFilterIUL3(itkVTKImageToImageFilterIUL3 const & arg0);
     void operator=(itkVTKImageToImageFilterIUL3 const & arg0);
   protected:
     itkVTKImageToImageFilterIUL3();
     ~itkVTKImageToImageFilterIUL3();
 };


 class itkVTKImageToImageFilterIUL3_Pointer {
   public:
     itkVTKImageToImageFilterIUL3_Pointer();
     itkVTKImageToImageFilterIUL3_Pointer(itkVTKImageToImageFilterIUL3_Pointer const & p);
     itkVTKImageToImageFilterIUL3_Pointer(itkVTKImageToImageFilterIUL3 * p);
     ~itkVTKImageToImageFilterIUL3_Pointer();
     itkVTKImageToImageFilterIUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVTKImageToImageFilterIUL3 * GetPointer() const;
     bool operator<(itkVTKImageToImageFilterIUL3_Pointer const & r) const;
     bool operator>(itkVTKImageToImageFilterIUL3_Pointer const & r) const;
     bool operator<=(itkVTKImageToImageFilterIUL3_Pointer const & r) const;
     bool operator>=(itkVTKImageToImageFilterIUL3_Pointer const & r) const;
     itkVTKImageToImageFilterIUL3_Pointer & operator=(itkVTKImageToImageFilterIUL3_Pointer const & r);
     itkVTKImageToImageFilterIUL3_Pointer & operator=(itkVTKImageToImageFilterIUL3 * r);
     itkVTKImageToImageFilterIUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVTKImageToImageFilterIUS2 : public itkVTKImageImportIUS2 {
   public:
     static itkVTKImageToImageFilterIUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput(vtkImageData * arg0);
     vtkImageExport * GetExporter() const;
     itkVTKImageImportIUS2 const * GetImporter() const;
   private:
     itkVTKImageToImageFilterIUS2(itkVTKImageToImageFilterIUS2 const & arg0);
     void operator=(itkVTKImageToImageFilterIUS2 const & arg0);
   protected:
     itkVTKImageToImageFilterIUS2();
     ~itkVTKImageToImageFilterIUS2();
 };


 class itkVTKImageToImageFilterIUS2_Pointer {
   public:
     itkVTKImageToImageFilterIUS2_Pointer();
     itkVTKImageToImageFilterIUS2_Pointer(itkVTKImageToImageFilterIUS2_Pointer const & p);
     itkVTKImageToImageFilterIUS2_Pointer(itkVTKImageToImageFilterIUS2 * p);
     ~itkVTKImageToImageFilterIUS2_Pointer();
     itkVTKImageToImageFilterIUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVTKImageToImageFilterIUS2 * GetPointer() const;
     bool operator<(itkVTKImageToImageFilterIUS2_Pointer const & r) const;
     bool operator>(itkVTKImageToImageFilterIUS2_Pointer const & r) const;
     bool operator<=(itkVTKImageToImageFilterIUS2_Pointer const & r) const;
     bool operator>=(itkVTKImageToImageFilterIUS2_Pointer const & r) const;
     itkVTKImageToImageFilterIUS2_Pointer & operator=(itkVTKImageToImageFilterIUS2_Pointer const & r);
     itkVTKImageToImageFilterIUS2_Pointer & operator=(itkVTKImageToImageFilterIUS2 * r);
     itkVTKImageToImageFilterIUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVTKImageToImageFilterIUS3 : public itkVTKImageImportIUS3 {
   public:
     static itkVTKImageToImageFilterIUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput(vtkImageData * arg0);
     vtkImageExport * GetExporter() const;
     itkVTKImageImportIUS3 const * GetImporter() const;
   private:
     itkVTKImageToImageFilterIUS3(itkVTKImageToImageFilterIUS3 const & arg0);
     void operator=(itkVTKImageToImageFilterIUS3 const & arg0);
   protected:
     itkVTKImageToImageFilterIUS3();
     ~itkVTKImageToImageFilterIUS3();
 };


 class itkVTKImageToImageFilterIUS3_Pointer {
   public:
     itkVTKImageToImageFilterIUS3_Pointer();
     itkVTKImageToImageFilterIUS3_Pointer(itkVTKImageToImageFilterIUS3_Pointer const & p);
     itkVTKImageToImageFilterIUS3_Pointer(itkVTKImageToImageFilterIUS3 * p);
     ~itkVTKImageToImageFilterIUS3_Pointer();
     itkVTKImageToImageFilterIUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVTKImageToImageFilterIUS3 * GetPointer() const;
     bool operator<(itkVTKImageToImageFilterIUS3_Pointer const & r) const;
     bool operator>(itkVTKImageToImageFilterIUS3_Pointer const & r) const;
     bool operator<=(itkVTKImageToImageFilterIUS3_Pointer const & r) const;
     bool operator>=(itkVTKImageToImageFilterIUS3_Pointer const & r) const;
     itkVTKImageToImageFilterIUS3_Pointer & operator=(itkVTKImageToImageFilterIUS3_Pointer const & r);
     itkVTKImageToImageFilterIUS3_Pointer & operator=(itkVTKImageToImageFilterIUS3 * r);
     itkVTKImageToImageFilterIUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


