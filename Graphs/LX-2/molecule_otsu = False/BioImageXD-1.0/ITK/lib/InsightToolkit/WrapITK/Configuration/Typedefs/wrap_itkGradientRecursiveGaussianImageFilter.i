// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkGradientRecursiveGaussianImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkGradientRecursiveGaussianImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkGradientRecursiveGaussianImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkGradientRecursiveGaussianImageFilterJava
#endif
#ifdef SWIGLUA
%module itkGradientRecursiveGaussianImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkGradientRecursiveGaussianImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkGradientRecursiveGaussianImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkGradientRecursiveGaussianImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkGradientRecursiveGaussianImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkGradientRecursiveGaussianImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkGradientRecursiveGaussianImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkGradientRecursiveGaussianImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkGradientRecursiveGaussianImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkGradientRecursiveGaussianImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkGradientRecursiveGaussianImageFilterPython
#endif
#ifdef SWIGR
%module itkGradientRecursiveGaussianImageFilterR
#endif
#ifdef SWIGRUBY
%module itkGradientRecursiveGaussianImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkGradientRecursiveGaussianImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkGradientRecursiveGaussianImageFilterTcl
#endif
#ifdef SWIGXML
%module itkGradientRecursiveGaussianImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Filtering.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImageToImageFilterB.i


%include itk.i
%include wrap_itkGradientRecursiveGaussianImageFilter_ext.i


 class itkGradientRecursiveGaussianImageFilterID2ICVF22 : public itkImageToImageFilterID2ICVF22 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     enum  {  OutputHasPixelTraitsCheck = 1 };
     static itkGradientRecursiveGaussianImageFilterID2ICVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetSigma(double sigma);
     void SetNormalizeAcrossScale(bool normalizeInScaleSpace);
     virtual bool GetNormalizeAcrossScale() const;
     virtual void GenerateInputRequestedRegion();
     virtual void SetUseImageDirection(bool const _arg);
     virtual bool GetUseImageDirection() const;
     virtual void UseImageDirectionOn();
     virtual void UseImageDirectionOff();
   private:
     itkGradientRecursiveGaussianImageFilterID2ICVF22(itkGradientRecursiveGaussianImageFilterID2ICVF22 const & arg0);
     void operator=(itkGradientRecursiveGaussianImageFilterID2ICVF22 const & arg0);
   protected:
     itkGradientRecursiveGaussianImageFilterID2ICVF22();
     ~itkGradientRecursiveGaussianImageFilterID2ICVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
 };


 class itkGradientRecursiveGaussianImageFilterID2ICVF22_Pointer {
   public:
     itkGradientRecursiveGaussianImageFilterID2ICVF22_Pointer();
     itkGradientRecursiveGaussianImageFilterID2ICVF22_Pointer(itkGradientRecursiveGaussianImageFilterID2ICVF22_Pointer const & p);
     itkGradientRecursiveGaussianImageFilterID2ICVF22_Pointer(itkGradientRecursiveGaussianImageFilterID2ICVF22 * p);
     ~itkGradientRecursiveGaussianImageFilterID2ICVF22_Pointer();
     itkGradientRecursiveGaussianImageFilterID2ICVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGradientRecursiveGaussianImageFilterID2ICVF22 * GetPointer() const;
     bool operator<(itkGradientRecursiveGaussianImageFilterID2ICVF22_Pointer const & r) const;
     bool operator>(itkGradientRecursiveGaussianImageFilterID2ICVF22_Pointer const & r) const;
     bool operator<=(itkGradientRecursiveGaussianImageFilterID2ICVF22_Pointer const & r) const;
     bool operator>=(itkGradientRecursiveGaussianImageFilterID2ICVF22_Pointer const & r) const;
     itkGradientRecursiveGaussianImageFilterID2ICVF22_Pointer & operator=(itkGradientRecursiveGaussianImageFilterID2ICVF22_Pointer const & r);
     itkGradientRecursiveGaussianImageFilterID2ICVF22_Pointer & operator=(itkGradientRecursiveGaussianImageFilterID2ICVF22 * r);
     itkGradientRecursiveGaussianImageFilterID2ICVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGradientRecursiveGaussianImageFilterIF2ICVF22 : public itkImageToImageFilterIF2ICVF22 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     enum  {  OutputHasPixelTraitsCheck = 1 };
     static itkGradientRecursiveGaussianImageFilterIF2ICVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetSigma(double sigma);
     void SetNormalizeAcrossScale(bool normalizeInScaleSpace);
     virtual bool GetNormalizeAcrossScale() const;
     virtual void GenerateInputRequestedRegion();
     virtual void SetUseImageDirection(bool const _arg);
     virtual bool GetUseImageDirection() const;
     virtual void UseImageDirectionOn();
     virtual void UseImageDirectionOff();
   private:
     itkGradientRecursiveGaussianImageFilterIF2ICVF22(itkGradientRecursiveGaussianImageFilterIF2ICVF22 const & arg0);
     void operator=(itkGradientRecursiveGaussianImageFilterIF2ICVF22 const & arg0);
   protected:
     itkGradientRecursiveGaussianImageFilterIF2ICVF22();
     ~itkGradientRecursiveGaussianImageFilterIF2ICVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
 };


 class itkGradientRecursiveGaussianImageFilterIF2ICVF22_Pointer {
   public:
     itkGradientRecursiveGaussianImageFilterIF2ICVF22_Pointer();
     itkGradientRecursiveGaussianImageFilterIF2ICVF22_Pointer(itkGradientRecursiveGaussianImageFilterIF2ICVF22_Pointer const & p);
     itkGradientRecursiveGaussianImageFilterIF2ICVF22_Pointer(itkGradientRecursiveGaussianImageFilterIF2ICVF22 * p);
     ~itkGradientRecursiveGaussianImageFilterIF2ICVF22_Pointer();
     itkGradientRecursiveGaussianImageFilterIF2ICVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGradientRecursiveGaussianImageFilterIF2ICVF22 * GetPointer() const;
     bool operator<(itkGradientRecursiveGaussianImageFilterIF2ICVF22_Pointer const & r) const;
     bool operator>(itkGradientRecursiveGaussianImageFilterIF2ICVF22_Pointer const & r) const;
     bool operator<=(itkGradientRecursiveGaussianImageFilterIF2ICVF22_Pointer const & r) const;
     bool operator>=(itkGradientRecursiveGaussianImageFilterIF2ICVF22_Pointer const & r) const;
     itkGradientRecursiveGaussianImageFilterIF2ICVF22_Pointer & operator=(itkGradientRecursiveGaussianImageFilterIF2ICVF22_Pointer const & r);
     itkGradientRecursiveGaussianImageFilterIF2ICVF22_Pointer & operator=(itkGradientRecursiveGaussianImageFilterIF2ICVF22 * r);
     itkGradientRecursiveGaussianImageFilterIF2ICVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGradientRecursiveGaussianImageFilterIUC2ICVF22 : public itkImageToImageFilterIUC2ICVF22 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     enum  {  OutputHasPixelTraitsCheck = 1 };
     static itkGradientRecursiveGaussianImageFilterIUC2ICVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetSigma(double sigma);
     void SetNormalizeAcrossScale(bool normalizeInScaleSpace);
     virtual bool GetNormalizeAcrossScale() const;
     virtual void GenerateInputRequestedRegion();
     virtual void SetUseImageDirection(bool const _arg);
     virtual bool GetUseImageDirection() const;
     virtual void UseImageDirectionOn();
     virtual void UseImageDirectionOff();
   private:
     itkGradientRecursiveGaussianImageFilterIUC2ICVF22(itkGradientRecursiveGaussianImageFilterIUC2ICVF22 const & arg0);
     void operator=(itkGradientRecursiveGaussianImageFilterIUC2ICVF22 const & arg0);
   protected:
     itkGradientRecursiveGaussianImageFilterIUC2ICVF22();
     ~itkGradientRecursiveGaussianImageFilterIUC2ICVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
 };


 class itkGradientRecursiveGaussianImageFilterIUC2ICVF22_Pointer {
   public:
     itkGradientRecursiveGaussianImageFilterIUC2ICVF22_Pointer();
     itkGradientRecursiveGaussianImageFilterIUC2ICVF22_Pointer(itkGradientRecursiveGaussianImageFilterIUC2ICVF22_Pointer const & p);
     itkGradientRecursiveGaussianImageFilterIUC2ICVF22_Pointer(itkGradientRecursiveGaussianImageFilterIUC2ICVF22 * p);
     ~itkGradientRecursiveGaussianImageFilterIUC2ICVF22_Pointer();
     itkGradientRecursiveGaussianImageFilterIUC2ICVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGradientRecursiveGaussianImageFilterIUC2ICVF22 * GetPointer() const;
     bool operator<(itkGradientRecursiveGaussianImageFilterIUC2ICVF22_Pointer const & r) const;
     bool operator>(itkGradientRecursiveGaussianImageFilterIUC2ICVF22_Pointer const & r) const;
     bool operator<=(itkGradientRecursiveGaussianImageFilterIUC2ICVF22_Pointer const & r) const;
     bool operator>=(itkGradientRecursiveGaussianImageFilterIUC2ICVF22_Pointer const & r) const;
     itkGradientRecursiveGaussianImageFilterIUC2ICVF22_Pointer & operator=(itkGradientRecursiveGaussianImageFilterIUC2ICVF22_Pointer const & r);
     itkGradientRecursiveGaussianImageFilterIUC2ICVF22_Pointer & operator=(itkGradientRecursiveGaussianImageFilterIUC2ICVF22 * r);
     itkGradientRecursiveGaussianImageFilterIUC2ICVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGradientRecursiveGaussianImageFilterIUL2ICVF22 : public itkImageToImageFilterIUL2ICVF22 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     enum  {  OutputHasPixelTraitsCheck = 1 };
     static itkGradientRecursiveGaussianImageFilterIUL2ICVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetSigma(double sigma);
     void SetNormalizeAcrossScale(bool normalizeInScaleSpace);
     virtual bool GetNormalizeAcrossScale() const;
     virtual void GenerateInputRequestedRegion();
     virtual void SetUseImageDirection(bool const _arg);
     virtual bool GetUseImageDirection() const;
     virtual void UseImageDirectionOn();
     virtual void UseImageDirectionOff();
   private:
     itkGradientRecursiveGaussianImageFilterIUL2ICVF22(itkGradientRecursiveGaussianImageFilterIUL2ICVF22 const & arg0);
     void operator=(itkGradientRecursiveGaussianImageFilterIUL2ICVF22 const & arg0);
   protected:
     itkGradientRecursiveGaussianImageFilterIUL2ICVF22();
     ~itkGradientRecursiveGaussianImageFilterIUL2ICVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
 };


 class itkGradientRecursiveGaussianImageFilterIUL2ICVF22_Pointer {
   public:
     itkGradientRecursiveGaussianImageFilterIUL2ICVF22_Pointer();
     itkGradientRecursiveGaussianImageFilterIUL2ICVF22_Pointer(itkGradientRecursiveGaussianImageFilterIUL2ICVF22_Pointer const & p);
     itkGradientRecursiveGaussianImageFilterIUL2ICVF22_Pointer(itkGradientRecursiveGaussianImageFilterIUL2ICVF22 * p);
     ~itkGradientRecursiveGaussianImageFilterIUL2ICVF22_Pointer();
     itkGradientRecursiveGaussianImageFilterIUL2ICVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGradientRecursiveGaussianImageFilterIUL2ICVF22 * GetPointer() const;
     bool operator<(itkGradientRecursiveGaussianImageFilterIUL2ICVF22_Pointer const & r) const;
     bool operator>(itkGradientRecursiveGaussianImageFilterIUL2ICVF22_Pointer const & r) const;
     bool operator<=(itkGradientRecursiveGaussianImageFilterIUL2ICVF22_Pointer const & r) const;
     bool operator>=(itkGradientRecursiveGaussianImageFilterIUL2ICVF22_Pointer const & r) const;
     itkGradientRecursiveGaussianImageFilterIUL2ICVF22_Pointer & operator=(itkGradientRecursiveGaussianImageFilterIUL2ICVF22_Pointer const & r);
     itkGradientRecursiveGaussianImageFilterIUL2ICVF22_Pointer & operator=(itkGradientRecursiveGaussianImageFilterIUL2ICVF22 * r);
     itkGradientRecursiveGaussianImageFilterIUL2ICVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGradientRecursiveGaussianImageFilterIUS2ICVF22 : public itkImageToImageFilterIUS2ICVF22 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     enum  {  OutputHasPixelTraitsCheck = 1 };
     static itkGradientRecursiveGaussianImageFilterIUS2ICVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetSigma(double sigma);
     void SetNormalizeAcrossScale(bool normalizeInScaleSpace);
     virtual bool GetNormalizeAcrossScale() const;
     virtual void GenerateInputRequestedRegion();
     virtual void SetUseImageDirection(bool const _arg);
     virtual bool GetUseImageDirection() const;
     virtual void UseImageDirectionOn();
     virtual void UseImageDirectionOff();
   private:
     itkGradientRecursiveGaussianImageFilterIUS2ICVF22(itkGradientRecursiveGaussianImageFilterIUS2ICVF22 const & arg0);
     void operator=(itkGradientRecursiveGaussianImageFilterIUS2ICVF22 const & arg0);
   protected:
     itkGradientRecursiveGaussianImageFilterIUS2ICVF22();
     ~itkGradientRecursiveGaussianImageFilterIUS2ICVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
 };


 class itkGradientRecursiveGaussianImageFilterIUS2ICVF22_Pointer {
   public:
     itkGradientRecursiveGaussianImageFilterIUS2ICVF22_Pointer();
     itkGradientRecursiveGaussianImageFilterIUS2ICVF22_Pointer(itkGradientRecursiveGaussianImageFilterIUS2ICVF22_Pointer const & p);
     itkGradientRecursiveGaussianImageFilterIUS2ICVF22_Pointer(itkGradientRecursiveGaussianImageFilterIUS2ICVF22 * p);
     ~itkGradientRecursiveGaussianImageFilterIUS2ICVF22_Pointer();
     itkGradientRecursiveGaussianImageFilterIUS2ICVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGradientRecursiveGaussianImageFilterIUS2ICVF22 * GetPointer() const;
     bool operator<(itkGradientRecursiveGaussianImageFilterIUS2ICVF22_Pointer const & r) const;
     bool operator>(itkGradientRecursiveGaussianImageFilterIUS2ICVF22_Pointer const & r) const;
     bool operator<=(itkGradientRecursiveGaussianImageFilterIUS2ICVF22_Pointer const & r) const;
     bool operator>=(itkGradientRecursiveGaussianImageFilterIUS2ICVF22_Pointer const & r) const;
     itkGradientRecursiveGaussianImageFilterIUS2ICVF22_Pointer & operator=(itkGradientRecursiveGaussianImageFilterIUS2ICVF22_Pointer const & r);
     itkGradientRecursiveGaussianImageFilterIUS2ICVF22_Pointer & operator=(itkGradientRecursiveGaussianImageFilterIUS2ICVF22 * r);
     itkGradientRecursiveGaussianImageFilterIUS2ICVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


