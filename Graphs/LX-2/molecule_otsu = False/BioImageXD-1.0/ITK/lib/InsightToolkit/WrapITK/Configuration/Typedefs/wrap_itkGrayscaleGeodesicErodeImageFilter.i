// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkGrayscaleGeodesicErodeImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkGrayscaleGeodesicErodeImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkGrayscaleGeodesicErodeImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkGrayscaleGeodesicErodeImageFilterJava
#endif
#ifdef SWIGLUA
%module itkGrayscaleGeodesicErodeImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkGrayscaleGeodesicErodeImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkGrayscaleGeodesicErodeImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkGrayscaleGeodesicErodeImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkGrayscaleGeodesicErodeImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkGrayscaleGeodesicErodeImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkGrayscaleGeodesicErodeImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkGrayscaleGeodesicErodeImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkGrayscaleGeodesicErodeImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkGrayscaleGeodesicErodeImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkGrayscaleGeodesicErodeImageFilterPython
#endif
#ifdef SWIGR
%module itkGrayscaleGeodesicErodeImageFilterR
#endif
#ifdef SWIGRUBY
%module itkGrayscaleGeodesicErodeImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkGrayscaleGeodesicErodeImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkGrayscaleGeodesicErodeImageFilterTcl
#endif
#ifdef SWIGXML
%module itkGrayscaleGeodesicErodeImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Morphology.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImage.i
%import wrap_ITKRegions.i
%import wrap_itkImageToImageFilterA.i


%include itk.i
%include wrap_itkGrayscaleGeodesicErodeImageFilter_ext.i


 class itkGrayscaleGeodesicErodeImageFilterID2ID2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  MarkerImageDimension = 2 };
     enum  {  MaskImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkGrayscaleGeodesicErodeImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMarkerImage(itkImageD2 const * arg0);
     itkImageD2 const * GetMarkerImage();
     void SetMaskImage(itkImageD2 const * arg0);
     itkImageD2 const * GetMaskImage();
     virtual void SetRunOneIteration(bool const _arg);
     virtual bool GetRunOneIteration() const;
     virtual void RunOneIterationOn();
     virtual void RunOneIterationOff();
     virtual unsigned long GetNumberOfIterationsUsed() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkGrayscaleGeodesicErodeImageFilterID2ID2(itkGrayscaleGeodesicErodeImageFilterID2ID2 const & arg0);
     void operator=(itkGrayscaleGeodesicErodeImageFilterID2ID2 const & arg0);
   protected:
     itkGrayscaleGeodesicErodeImageFilterID2ID2();
     ~itkGrayscaleGeodesicErodeImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkGrayscaleGeodesicErodeImageFilterID2ID2_Pointer {
   public:
     itkGrayscaleGeodesicErodeImageFilterID2ID2_Pointer();
     itkGrayscaleGeodesicErodeImageFilterID2ID2_Pointer(itkGrayscaleGeodesicErodeImageFilterID2ID2_Pointer const & p);
     itkGrayscaleGeodesicErodeImageFilterID2ID2_Pointer(itkGrayscaleGeodesicErodeImageFilterID2ID2 * p);
     ~itkGrayscaleGeodesicErodeImageFilterID2ID2_Pointer();
     itkGrayscaleGeodesicErodeImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGrayscaleGeodesicErodeImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkGrayscaleGeodesicErodeImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkGrayscaleGeodesicErodeImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkGrayscaleGeodesicErodeImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkGrayscaleGeodesicErodeImageFilterID2ID2_Pointer const & r) const;
     itkGrayscaleGeodesicErodeImageFilterID2ID2_Pointer & operator=(itkGrayscaleGeodesicErodeImageFilterID2ID2_Pointer const & r);
     itkGrayscaleGeodesicErodeImageFilterID2ID2_Pointer & operator=(itkGrayscaleGeodesicErodeImageFilterID2ID2 * r);
     itkGrayscaleGeodesicErodeImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGrayscaleGeodesicErodeImageFilterID3ID3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  MarkerImageDimension = 3 };
     enum  {  MaskImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkGrayscaleGeodesicErodeImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMarkerImage(itkImageD3 const * arg0);
     itkImageD3 const * GetMarkerImage();
     void SetMaskImage(itkImageD3 const * arg0);
     itkImageD3 const * GetMaskImage();
     virtual void SetRunOneIteration(bool const _arg);
     virtual bool GetRunOneIteration() const;
     virtual void RunOneIterationOn();
     virtual void RunOneIterationOff();
     virtual unsigned long GetNumberOfIterationsUsed() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkGrayscaleGeodesicErodeImageFilterID3ID3(itkGrayscaleGeodesicErodeImageFilterID3ID3 const & arg0);
     void operator=(itkGrayscaleGeodesicErodeImageFilterID3ID3 const & arg0);
   protected:
     itkGrayscaleGeodesicErodeImageFilterID3ID3();
     ~itkGrayscaleGeodesicErodeImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkGrayscaleGeodesicErodeImageFilterID3ID3_Pointer {
   public:
     itkGrayscaleGeodesicErodeImageFilterID3ID3_Pointer();
     itkGrayscaleGeodesicErodeImageFilterID3ID3_Pointer(itkGrayscaleGeodesicErodeImageFilterID3ID3_Pointer const & p);
     itkGrayscaleGeodesicErodeImageFilterID3ID3_Pointer(itkGrayscaleGeodesicErodeImageFilterID3ID3 * p);
     ~itkGrayscaleGeodesicErodeImageFilterID3ID3_Pointer();
     itkGrayscaleGeodesicErodeImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGrayscaleGeodesicErodeImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkGrayscaleGeodesicErodeImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkGrayscaleGeodesicErodeImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkGrayscaleGeodesicErodeImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkGrayscaleGeodesicErodeImageFilterID3ID3_Pointer const & r) const;
     itkGrayscaleGeodesicErodeImageFilterID3ID3_Pointer & operator=(itkGrayscaleGeodesicErodeImageFilterID3ID3_Pointer const & r);
     itkGrayscaleGeodesicErodeImageFilterID3ID3_Pointer & operator=(itkGrayscaleGeodesicErodeImageFilterID3ID3 * r);
     itkGrayscaleGeodesicErodeImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGrayscaleGeodesicErodeImageFilterIF2IF2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  MarkerImageDimension = 2 };
     enum  {  MaskImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkGrayscaleGeodesicErodeImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMarkerImage(itkImageF2 const * arg0);
     itkImageF2 const * GetMarkerImage();
     void SetMaskImage(itkImageF2 const * arg0);
     itkImageF2 const * GetMaskImage();
     virtual void SetRunOneIteration(bool const _arg);
     virtual bool GetRunOneIteration() const;
     virtual void RunOneIterationOn();
     virtual void RunOneIterationOff();
     virtual unsigned long GetNumberOfIterationsUsed() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkGrayscaleGeodesicErodeImageFilterIF2IF2(itkGrayscaleGeodesicErodeImageFilterIF2IF2 const & arg0);
     void operator=(itkGrayscaleGeodesicErodeImageFilterIF2IF2 const & arg0);
   protected:
     itkGrayscaleGeodesicErodeImageFilterIF2IF2();
     ~itkGrayscaleGeodesicErodeImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkGrayscaleGeodesicErodeImageFilterIF2IF2_Pointer {
   public:
     itkGrayscaleGeodesicErodeImageFilterIF2IF2_Pointer();
     itkGrayscaleGeodesicErodeImageFilterIF2IF2_Pointer(itkGrayscaleGeodesicErodeImageFilterIF2IF2_Pointer const & p);
     itkGrayscaleGeodesicErodeImageFilterIF2IF2_Pointer(itkGrayscaleGeodesicErodeImageFilterIF2IF2 * p);
     ~itkGrayscaleGeodesicErodeImageFilterIF2IF2_Pointer();
     itkGrayscaleGeodesicErodeImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGrayscaleGeodesicErodeImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkGrayscaleGeodesicErodeImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkGrayscaleGeodesicErodeImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkGrayscaleGeodesicErodeImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkGrayscaleGeodesicErodeImageFilterIF2IF2_Pointer const & r) const;
     itkGrayscaleGeodesicErodeImageFilterIF2IF2_Pointer & operator=(itkGrayscaleGeodesicErodeImageFilterIF2IF2_Pointer const & r);
     itkGrayscaleGeodesicErodeImageFilterIF2IF2_Pointer & operator=(itkGrayscaleGeodesicErodeImageFilterIF2IF2 * r);
     itkGrayscaleGeodesicErodeImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGrayscaleGeodesicErodeImageFilterIF3IF3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  MarkerImageDimension = 3 };
     enum  {  MaskImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkGrayscaleGeodesicErodeImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMarkerImage(itkImageF3 const * arg0);
     itkImageF3 const * GetMarkerImage();
     void SetMaskImage(itkImageF3 const * arg0);
     itkImageF3 const * GetMaskImage();
     virtual void SetRunOneIteration(bool const _arg);
     virtual bool GetRunOneIteration() const;
     virtual void RunOneIterationOn();
     virtual void RunOneIterationOff();
     virtual unsigned long GetNumberOfIterationsUsed() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkGrayscaleGeodesicErodeImageFilterIF3IF3(itkGrayscaleGeodesicErodeImageFilterIF3IF3 const & arg0);
     void operator=(itkGrayscaleGeodesicErodeImageFilterIF3IF3 const & arg0);
   protected:
     itkGrayscaleGeodesicErodeImageFilterIF3IF3();
     ~itkGrayscaleGeodesicErodeImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkGrayscaleGeodesicErodeImageFilterIF3IF3_Pointer {
   public:
     itkGrayscaleGeodesicErodeImageFilterIF3IF3_Pointer();
     itkGrayscaleGeodesicErodeImageFilterIF3IF3_Pointer(itkGrayscaleGeodesicErodeImageFilterIF3IF3_Pointer const & p);
     itkGrayscaleGeodesicErodeImageFilterIF3IF3_Pointer(itkGrayscaleGeodesicErodeImageFilterIF3IF3 * p);
     ~itkGrayscaleGeodesicErodeImageFilterIF3IF3_Pointer();
     itkGrayscaleGeodesicErodeImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGrayscaleGeodesicErodeImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkGrayscaleGeodesicErodeImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkGrayscaleGeodesicErodeImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkGrayscaleGeodesicErodeImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkGrayscaleGeodesicErodeImageFilterIF3IF3_Pointer const & r) const;
     itkGrayscaleGeodesicErodeImageFilterIF3IF3_Pointer & operator=(itkGrayscaleGeodesicErodeImageFilterIF3IF3_Pointer const & r);
     itkGrayscaleGeodesicErodeImageFilterIF3IF3_Pointer & operator=(itkGrayscaleGeodesicErodeImageFilterIF3IF3 * r);
     itkGrayscaleGeodesicErodeImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGrayscaleGeodesicErodeImageFilterIUC2IUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  MarkerImageDimension = 2 };
     enum  {  MaskImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMarkerImage(itkImageUC2 const * arg0);
     itkImageUC2 const * GetMarkerImage();
     void SetMaskImage(itkImageUC2 const * arg0);
     itkImageUC2 const * GetMaskImage();
     virtual void SetRunOneIteration(bool const _arg);
     virtual bool GetRunOneIteration() const;
     virtual void RunOneIterationOn();
     virtual void RunOneIterationOff();
     virtual unsigned long GetNumberOfIterationsUsed() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkGrayscaleGeodesicErodeImageFilterIUC2IUC2(itkGrayscaleGeodesicErodeImageFilterIUC2IUC2 const & arg0);
     void operator=(itkGrayscaleGeodesicErodeImageFilterIUC2IUC2 const & arg0);
   protected:
     itkGrayscaleGeodesicErodeImageFilterIUC2IUC2();
     ~itkGrayscaleGeodesicErodeImageFilterIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_Pointer {
   public:
     itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_Pointer();
     itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_Pointer(itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_Pointer const & p);
     itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_Pointer(itkGrayscaleGeodesicErodeImageFilterIUC2IUC2 * p);
     ~itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_Pointer();
     itkGrayscaleGeodesicErodeImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGrayscaleGeodesicErodeImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_Pointer const & r) const;
     itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_Pointer & operator=(itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_Pointer const & r);
     itkGrayscaleGeodesicErodeImageFilterIUC2IUC2_Pointer & operator=(itkGrayscaleGeodesicErodeImageFilterIUC2IUC2 * r);
     itkGrayscaleGeodesicErodeImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGrayscaleGeodesicErodeImageFilterIUC3IUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  MarkerImageDimension = 3 };
     enum  {  MaskImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMarkerImage(itkImageUC3 const * arg0);
     itkImageUC3 const * GetMarkerImage();
     void SetMaskImage(itkImageUC3 const * arg0);
     itkImageUC3 const * GetMaskImage();
     virtual void SetRunOneIteration(bool const _arg);
     virtual bool GetRunOneIteration() const;
     virtual void RunOneIterationOn();
     virtual void RunOneIterationOff();
     virtual unsigned long GetNumberOfIterationsUsed() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkGrayscaleGeodesicErodeImageFilterIUC3IUC3(itkGrayscaleGeodesicErodeImageFilterIUC3IUC3 const & arg0);
     void operator=(itkGrayscaleGeodesicErodeImageFilterIUC3IUC3 const & arg0);
   protected:
     itkGrayscaleGeodesicErodeImageFilterIUC3IUC3();
     ~itkGrayscaleGeodesicErodeImageFilterIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_Pointer {
   public:
     itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_Pointer();
     itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_Pointer(itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_Pointer const & p);
     itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_Pointer(itkGrayscaleGeodesicErodeImageFilterIUC3IUC3 * p);
     ~itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_Pointer();
     itkGrayscaleGeodesicErodeImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGrayscaleGeodesicErodeImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_Pointer const & r) const;
     itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_Pointer & operator=(itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_Pointer const & r);
     itkGrayscaleGeodesicErodeImageFilterIUC3IUC3_Pointer & operator=(itkGrayscaleGeodesicErodeImageFilterIUC3IUC3 * r);
     itkGrayscaleGeodesicErodeImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGrayscaleGeodesicErodeImageFilterIUL2IUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  MarkerImageDimension = 2 };
     enum  {  MaskImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkGrayscaleGeodesicErodeImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMarkerImage(itkImageUL2 const * arg0);
     itkImageUL2 const * GetMarkerImage();
     void SetMaskImage(itkImageUL2 const * arg0);
     itkImageUL2 const * GetMaskImage();
     virtual void SetRunOneIteration(bool const _arg);
     virtual bool GetRunOneIteration() const;
     virtual void RunOneIterationOn();
     virtual void RunOneIterationOff();
     virtual unsigned long GetNumberOfIterationsUsed() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkGrayscaleGeodesicErodeImageFilterIUL2IUL2(itkGrayscaleGeodesicErodeImageFilterIUL2IUL2 const & arg0);
     void operator=(itkGrayscaleGeodesicErodeImageFilterIUL2IUL2 const & arg0);
   protected:
     itkGrayscaleGeodesicErodeImageFilterIUL2IUL2();
     ~itkGrayscaleGeodesicErodeImageFilterIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkGrayscaleGeodesicErodeImageFilterIUL2IUL2_Pointer {
   public:
     itkGrayscaleGeodesicErodeImageFilterIUL2IUL2_Pointer();
     itkGrayscaleGeodesicErodeImageFilterIUL2IUL2_Pointer(itkGrayscaleGeodesicErodeImageFilterIUL2IUL2_Pointer const & p);
     itkGrayscaleGeodesicErodeImageFilterIUL2IUL2_Pointer(itkGrayscaleGeodesicErodeImageFilterIUL2IUL2 * p);
     ~itkGrayscaleGeodesicErodeImageFilterIUL2IUL2_Pointer();
     itkGrayscaleGeodesicErodeImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGrayscaleGeodesicErodeImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkGrayscaleGeodesicErodeImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkGrayscaleGeodesicErodeImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkGrayscaleGeodesicErodeImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkGrayscaleGeodesicErodeImageFilterIUL2IUL2_Pointer const & r) const;
     itkGrayscaleGeodesicErodeImageFilterIUL2IUL2_Pointer & operator=(itkGrayscaleGeodesicErodeImageFilterIUL2IUL2_Pointer const & r);
     itkGrayscaleGeodesicErodeImageFilterIUL2IUL2_Pointer & operator=(itkGrayscaleGeodesicErodeImageFilterIUL2IUL2 * r);
     itkGrayscaleGeodesicErodeImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGrayscaleGeodesicErodeImageFilterIUL3IUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  MarkerImageDimension = 3 };
     enum  {  MaskImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkGrayscaleGeodesicErodeImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMarkerImage(itkImageUL3 const * arg0);
     itkImageUL3 const * GetMarkerImage();
     void SetMaskImage(itkImageUL3 const * arg0);
     itkImageUL3 const * GetMaskImage();
     virtual void SetRunOneIteration(bool const _arg);
     virtual bool GetRunOneIteration() const;
     virtual void RunOneIterationOn();
     virtual void RunOneIterationOff();
     virtual unsigned long GetNumberOfIterationsUsed() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkGrayscaleGeodesicErodeImageFilterIUL3IUL3(itkGrayscaleGeodesicErodeImageFilterIUL3IUL3 const & arg0);
     void operator=(itkGrayscaleGeodesicErodeImageFilterIUL3IUL3 const & arg0);
   protected:
     itkGrayscaleGeodesicErodeImageFilterIUL3IUL3();
     ~itkGrayscaleGeodesicErodeImageFilterIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkGrayscaleGeodesicErodeImageFilterIUL3IUL3_Pointer {
   public:
     itkGrayscaleGeodesicErodeImageFilterIUL3IUL3_Pointer();
     itkGrayscaleGeodesicErodeImageFilterIUL3IUL3_Pointer(itkGrayscaleGeodesicErodeImageFilterIUL3IUL3_Pointer const & p);
     itkGrayscaleGeodesicErodeImageFilterIUL3IUL3_Pointer(itkGrayscaleGeodesicErodeImageFilterIUL3IUL3 * p);
     ~itkGrayscaleGeodesicErodeImageFilterIUL3IUL3_Pointer();
     itkGrayscaleGeodesicErodeImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGrayscaleGeodesicErodeImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkGrayscaleGeodesicErodeImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkGrayscaleGeodesicErodeImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkGrayscaleGeodesicErodeImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkGrayscaleGeodesicErodeImageFilterIUL3IUL3_Pointer const & r) const;
     itkGrayscaleGeodesicErodeImageFilterIUL3IUL3_Pointer & operator=(itkGrayscaleGeodesicErodeImageFilterIUL3IUL3_Pointer const & r);
     itkGrayscaleGeodesicErodeImageFilterIUL3IUL3_Pointer & operator=(itkGrayscaleGeodesicErodeImageFilterIUL3IUL3 * r);
     itkGrayscaleGeodesicErodeImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGrayscaleGeodesicErodeImageFilterIUS2IUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  MarkerImageDimension = 2 };
     enum  {  MaskImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMarkerImage(itkImageUS2 const * arg0);
     itkImageUS2 const * GetMarkerImage();
     void SetMaskImage(itkImageUS2 const * arg0);
     itkImageUS2 const * GetMaskImage();
     virtual void SetRunOneIteration(bool const _arg);
     virtual bool GetRunOneIteration() const;
     virtual void RunOneIterationOn();
     virtual void RunOneIterationOff();
     virtual unsigned long GetNumberOfIterationsUsed() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkGrayscaleGeodesicErodeImageFilterIUS2IUS2(itkGrayscaleGeodesicErodeImageFilterIUS2IUS2 const & arg0);
     void operator=(itkGrayscaleGeodesicErodeImageFilterIUS2IUS2 const & arg0);
   protected:
     itkGrayscaleGeodesicErodeImageFilterIUS2IUS2();
     ~itkGrayscaleGeodesicErodeImageFilterIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_Pointer {
   public:
     itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_Pointer();
     itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_Pointer(itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_Pointer const & p);
     itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_Pointer(itkGrayscaleGeodesicErodeImageFilterIUS2IUS2 * p);
     ~itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_Pointer();
     itkGrayscaleGeodesicErodeImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGrayscaleGeodesicErodeImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_Pointer const & r) const;
     itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_Pointer & operator=(itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_Pointer const & r);
     itkGrayscaleGeodesicErodeImageFilterIUS2IUS2_Pointer & operator=(itkGrayscaleGeodesicErodeImageFilterIUS2IUS2 * r);
     itkGrayscaleGeodesicErodeImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGrayscaleGeodesicErodeImageFilterIUS3IUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  MarkerImageDimension = 3 };
     enum  {  MaskImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetMarkerImage(itkImageUS3 const * arg0);
     itkImageUS3 const * GetMarkerImage();
     void SetMaskImage(itkImageUS3 const * arg0);
     itkImageUS3 const * GetMaskImage();
     virtual void SetRunOneIteration(bool const _arg);
     virtual bool GetRunOneIteration() const;
     virtual void RunOneIterationOn();
     virtual void RunOneIterationOff();
     virtual unsigned long GetNumberOfIterationsUsed() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkGrayscaleGeodesicErodeImageFilterIUS3IUS3(itkGrayscaleGeodesicErodeImageFilterIUS3IUS3 const & arg0);
     void operator=(itkGrayscaleGeodesicErodeImageFilterIUS3IUS3 const & arg0);
   protected:
     itkGrayscaleGeodesicErodeImageFilterIUS3IUS3();
     ~itkGrayscaleGeodesicErodeImageFilterIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_Pointer {
   public:
     itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_Pointer();
     itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_Pointer(itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_Pointer const & p);
     itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_Pointer(itkGrayscaleGeodesicErodeImageFilterIUS3IUS3 * p);
     ~itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_Pointer();
     itkGrayscaleGeodesicErodeImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGrayscaleGeodesicErodeImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_Pointer const & r) const;
     itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_Pointer & operator=(itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_Pointer const & r);
     itkGrayscaleGeodesicErodeImageFilterIUS3IUS3_Pointer & operator=(itkGrayscaleGeodesicErodeImageFilterIUS3IUS3 * r);
     itkGrayscaleGeodesicErodeImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


