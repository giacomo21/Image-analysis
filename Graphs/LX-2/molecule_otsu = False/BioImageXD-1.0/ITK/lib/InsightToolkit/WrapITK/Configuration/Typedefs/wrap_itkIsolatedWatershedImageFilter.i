// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkIsolatedWatershedImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkIsolatedWatershedImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkIsolatedWatershedImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkIsolatedWatershedImageFilterJava
#endif
#ifdef SWIGLUA
%module itkIsolatedWatershedImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkIsolatedWatershedImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkIsolatedWatershedImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkIsolatedWatershedImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkIsolatedWatershedImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkIsolatedWatershedImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkIsolatedWatershedImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkIsolatedWatershedImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkIsolatedWatershedImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkIsolatedWatershedImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkIsolatedWatershedImageFilterPython
#endif
#ifdef SWIGR
%module itkIsolatedWatershedImageFilterR
#endif
#ifdef SWIGRUBY
%module itkIsolatedWatershedImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkIsolatedWatershedImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkIsolatedWatershedImageFilterTcl
#endif
#ifdef SWIGXML
%module itkIsolatedWatershedImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "SegmentationAndThreshold.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkIndex.i
%import wrap_itkImageToImageFilterA.i


%include itk.i
%include wrap_itkIsolatedWatershedImageFilter_ext.i


 class itkIsolatedWatershedImageFilterID2ID2 : public itkImageToImageFilterID2ID2 {
   public:
     static itkIsolatedWatershedImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void SetSeed1(itkIndex2 const _arg);
     virtual void SetSeed2(itkIndex2 const _arg);
     virtual void SetThreshold(double const _arg);
     virtual double GetThreshold() const;
     virtual void SetIsolatedValueTolerance(double const _arg);
     virtual double GetIsolatedValueTolerance() const;
     virtual void SetUpperValueLimit(double const _arg);
     virtual double GetUpperValueLimit() const;
     virtual void SetReplaceValue1(double const _arg);
     virtual double GetReplaceValue1() const;
     virtual void SetReplaceValue2(double const _arg);
     virtual double GetReplaceValue2() const;
     virtual double GetIsolatedValue() const;
   private:
     itkIsolatedWatershedImageFilterID2ID2(itkIsolatedWatershedImageFilterID2ID2 const & arg0);
     void operator=(itkIsolatedWatershedImageFilterID2ID2 const & arg0);
   protected:
     itkIsolatedWatershedImageFilterID2ID2();
     ~itkIsolatedWatershedImageFilterID2ID2();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual void GenerateData();
 };


 class itkIsolatedWatershedImageFilterID2ID2_Pointer {
   public:
     itkIsolatedWatershedImageFilterID2ID2_Pointer();
     itkIsolatedWatershedImageFilterID2ID2_Pointer(itkIsolatedWatershedImageFilterID2ID2_Pointer const & p);
     itkIsolatedWatershedImageFilterID2ID2_Pointer(itkIsolatedWatershedImageFilterID2ID2 * p);
     ~itkIsolatedWatershedImageFilterID2ID2_Pointer();
     itkIsolatedWatershedImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIsolatedWatershedImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkIsolatedWatershedImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkIsolatedWatershedImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkIsolatedWatershedImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkIsolatedWatershedImageFilterID2ID2_Pointer const & r) const;
     itkIsolatedWatershedImageFilterID2ID2_Pointer & operator=(itkIsolatedWatershedImageFilterID2ID2_Pointer const & r);
     itkIsolatedWatershedImageFilterID2ID2_Pointer & operator=(itkIsolatedWatershedImageFilterID2ID2 * r);
     itkIsolatedWatershedImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIsolatedWatershedImageFilterID3ID3 : public itkImageToImageFilterID3ID3 {
   public:
     static itkIsolatedWatershedImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void SetSeed1(itkIndex3 const _arg);
     virtual void SetSeed2(itkIndex3 const _arg);
     virtual void SetThreshold(double const _arg);
     virtual double GetThreshold() const;
     virtual void SetIsolatedValueTolerance(double const _arg);
     virtual double GetIsolatedValueTolerance() const;
     virtual void SetUpperValueLimit(double const _arg);
     virtual double GetUpperValueLimit() const;
     virtual void SetReplaceValue1(double const _arg);
     virtual double GetReplaceValue1() const;
     virtual void SetReplaceValue2(double const _arg);
     virtual double GetReplaceValue2() const;
     virtual double GetIsolatedValue() const;
   private:
     itkIsolatedWatershedImageFilterID3ID3(itkIsolatedWatershedImageFilterID3ID3 const & arg0);
     void operator=(itkIsolatedWatershedImageFilterID3ID3 const & arg0);
   protected:
     itkIsolatedWatershedImageFilterID3ID3();
     ~itkIsolatedWatershedImageFilterID3ID3();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual void GenerateData();
 };


 class itkIsolatedWatershedImageFilterID3ID3_Pointer {
   public:
     itkIsolatedWatershedImageFilterID3ID3_Pointer();
     itkIsolatedWatershedImageFilterID3ID3_Pointer(itkIsolatedWatershedImageFilterID3ID3_Pointer const & p);
     itkIsolatedWatershedImageFilterID3ID3_Pointer(itkIsolatedWatershedImageFilterID3ID3 * p);
     ~itkIsolatedWatershedImageFilterID3ID3_Pointer();
     itkIsolatedWatershedImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIsolatedWatershedImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkIsolatedWatershedImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkIsolatedWatershedImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkIsolatedWatershedImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkIsolatedWatershedImageFilterID3ID3_Pointer const & r) const;
     itkIsolatedWatershedImageFilterID3ID3_Pointer & operator=(itkIsolatedWatershedImageFilterID3ID3_Pointer const & r);
     itkIsolatedWatershedImageFilterID3ID3_Pointer & operator=(itkIsolatedWatershedImageFilterID3ID3 * r);
     itkIsolatedWatershedImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIsolatedWatershedImageFilterIF2IF2 : public itkImageToImageFilterIF2IF2 {
   public:
     static itkIsolatedWatershedImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void SetSeed1(itkIndex2 const _arg);
     virtual void SetSeed2(itkIndex2 const _arg);
     virtual void SetThreshold(double const _arg);
     virtual double GetThreshold() const;
     virtual void SetIsolatedValueTolerance(double const _arg);
     virtual double GetIsolatedValueTolerance() const;
     virtual void SetUpperValueLimit(double const _arg);
     virtual double GetUpperValueLimit() const;
     virtual void SetReplaceValue1(float const _arg);
     virtual float GetReplaceValue1() const;
     virtual void SetReplaceValue2(float const _arg);
     virtual float GetReplaceValue2() const;
     virtual double GetIsolatedValue() const;
   private:
     itkIsolatedWatershedImageFilterIF2IF2(itkIsolatedWatershedImageFilterIF2IF2 const & arg0);
     void operator=(itkIsolatedWatershedImageFilterIF2IF2 const & arg0);
   protected:
     itkIsolatedWatershedImageFilterIF2IF2();
     ~itkIsolatedWatershedImageFilterIF2IF2();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual void GenerateData();
 };


 class itkIsolatedWatershedImageFilterIF2IF2_Pointer {
   public:
     itkIsolatedWatershedImageFilterIF2IF2_Pointer();
     itkIsolatedWatershedImageFilterIF2IF2_Pointer(itkIsolatedWatershedImageFilterIF2IF2_Pointer const & p);
     itkIsolatedWatershedImageFilterIF2IF2_Pointer(itkIsolatedWatershedImageFilterIF2IF2 * p);
     ~itkIsolatedWatershedImageFilterIF2IF2_Pointer();
     itkIsolatedWatershedImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIsolatedWatershedImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkIsolatedWatershedImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkIsolatedWatershedImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkIsolatedWatershedImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkIsolatedWatershedImageFilterIF2IF2_Pointer const & r) const;
     itkIsolatedWatershedImageFilterIF2IF2_Pointer & operator=(itkIsolatedWatershedImageFilterIF2IF2_Pointer const & r);
     itkIsolatedWatershedImageFilterIF2IF2_Pointer & operator=(itkIsolatedWatershedImageFilterIF2IF2 * r);
     itkIsolatedWatershedImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIsolatedWatershedImageFilterIF3IF3 : public itkImageToImageFilterIF3IF3 {
   public:
     static itkIsolatedWatershedImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void SetSeed1(itkIndex3 const _arg);
     virtual void SetSeed2(itkIndex3 const _arg);
     virtual void SetThreshold(double const _arg);
     virtual double GetThreshold() const;
     virtual void SetIsolatedValueTolerance(double const _arg);
     virtual double GetIsolatedValueTolerance() const;
     virtual void SetUpperValueLimit(double const _arg);
     virtual double GetUpperValueLimit() const;
     virtual void SetReplaceValue1(float const _arg);
     virtual float GetReplaceValue1() const;
     virtual void SetReplaceValue2(float const _arg);
     virtual float GetReplaceValue2() const;
     virtual double GetIsolatedValue() const;
   private:
     itkIsolatedWatershedImageFilterIF3IF3(itkIsolatedWatershedImageFilterIF3IF3 const & arg0);
     void operator=(itkIsolatedWatershedImageFilterIF3IF3 const & arg0);
   protected:
     itkIsolatedWatershedImageFilterIF3IF3();
     ~itkIsolatedWatershedImageFilterIF3IF3();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual void GenerateData();
 };


 class itkIsolatedWatershedImageFilterIF3IF3_Pointer {
   public:
     itkIsolatedWatershedImageFilterIF3IF3_Pointer();
     itkIsolatedWatershedImageFilterIF3IF3_Pointer(itkIsolatedWatershedImageFilterIF3IF3_Pointer const & p);
     itkIsolatedWatershedImageFilterIF3IF3_Pointer(itkIsolatedWatershedImageFilterIF3IF3 * p);
     ~itkIsolatedWatershedImageFilterIF3IF3_Pointer();
     itkIsolatedWatershedImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIsolatedWatershedImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkIsolatedWatershedImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkIsolatedWatershedImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkIsolatedWatershedImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkIsolatedWatershedImageFilterIF3IF3_Pointer const & r) const;
     itkIsolatedWatershedImageFilterIF3IF3_Pointer & operator=(itkIsolatedWatershedImageFilterIF3IF3_Pointer const & r);
     itkIsolatedWatershedImageFilterIF3IF3_Pointer & operator=(itkIsolatedWatershedImageFilterIF3IF3 * r);
     itkIsolatedWatershedImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIsolatedWatershedImageFilterIUC2IUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     static itkIsolatedWatershedImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void SetSeed1(itkIndex2 const _arg);
     virtual void SetSeed2(itkIndex2 const _arg);
     virtual void SetThreshold(double const _arg);
     virtual double GetThreshold() const;
     virtual void SetIsolatedValueTolerance(double const _arg);
     virtual double GetIsolatedValueTolerance() const;
     virtual void SetUpperValueLimit(double const _arg);
     virtual double GetUpperValueLimit() const;
     virtual void SetReplaceValue1(unsigned char const _arg);
     virtual unsigned char GetReplaceValue1() const;
     virtual void SetReplaceValue2(unsigned char const _arg);
     virtual unsigned char GetReplaceValue2() const;
     virtual double GetIsolatedValue() const;
   private:
     itkIsolatedWatershedImageFilterIUC2IUC2(itkIsolatedWatershedImageFilterIUC2IUC2 const & arg0);
     void operator=(itkIsolatedWatershedImageFilterIUC2IUC2 const & arg0);
   protected:
     itkIsolatedWatershedImageFilterIUC2IUC2();
     ~itkIsolatedWatershedImageFilterIUC2IUC2();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual void GenerateData();
 };


 class itkIsolatedWatershedImageFilterIUC2IUC2_Pointer {
   public:
     itkIsolatedWatershedImageFilterIUC2IUC2_Pointer();
     itkIsolatedWatershedImageFilterIUC2IUC2_Pointer(itkIsolatedWatershedImageFilterIUC2IUC2_Pointer const & p);
     itkIsolatedWatershedImageFilterIUC2IUC2_Pointer(itkIsolatedWatershedImageFilterIUC2IUC2 * p);
     ~itkIsolatedWatershedImageFilterIUC2IUC2_Pointer();
     itkIsolatedWatershedImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIsolatedWatershedImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkIsolatedWatershedImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkIsolatedWatershedImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkIsolatedWatershedImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkIsolatedWatershedImageFilterIUC2IUC2_Pointer const & r) const;
     itkIsolatedWatershedImageFilterIUC2IUC2_Pointer & operator=(itkIsolatedWatershedImageFilterIUC2IUC2_Pointer const & r);
     itkIsolatedWatershedImageFilterIUC2IUC2_Pointer & operator=(itkIsolatedWatershedImageFilterIUC2IUC2 * r);
     itkIsolatedWatershedImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIsolatedWatershedImageFilterIUC3IUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     static itkIsolatedWatershedImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void SetSeed1(itkIndex3 const _arg);
     virtual void SetSeed2(itkIndex3 const _arg);
     virtual void SetThreshold(double const _arg);
     virtual double GetThreshold() const;
     virtual void SetIsolatedValueTolerance(double const _arg);
     virtual double GetIsolatedValueTolerance() const;
     virtual void SetUpperValueLimit(double const _arg);
     virtual double GetUpperValueLimit() const;
     virtual void SetReplaceValue1(unsigned char const _arg);
     virtual unsigned char GetReplaceValue1() const;
     virtual void SetReplaceValue2(unsigned char const _arg);
     virtual unsigned char GetReplaceValue2() const;
     virtual double GetIsolatedValue() const;
   private:
     itkIsolatedWatershedImageFilterIUC3IUC3(itkIsolatedWatershedImageFilterIUC3IUC3 const & arg0);
     void operator=(itkIsolatedWatershedImageFilterIUC3IUC3 const & arg0);
   protected:
     itkIsolatedWatershedImageFilterIUC3IUC3();
     ~itkIsolatedWatershedImageFilterIUC3IUC3();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual void GenerateData();
 };


 class itkIsolatedWatershedImageFilterIUC3IUC3_Pointer {
   public:
     itkIsolatedWatershedImageFilterIUC3IUC3_Pointer();
     itkIsolatedWatershedImageFilterIUC3IUC3_Pointer(itkIsolatedWatershedImageFilterIUC3IUC3_Pointer const & p);
     itkIsolatedWatershedImageFilterIUC3IUC3_Pointer(itkIsolatedWatershedImageFilterIUC3IUC3 * p);
     ~itkIsolatedWatershedImageFilterIUC3IUC3_Pointer();
     itkIsolatedWatershedImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIsolatedWatershedImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkIsolatedWatershedImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkIsolatedWatershedImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkIsolatedWatershedImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkIsolatedWatershedImageFilterIUC3IUC3_Pointer const & r) const;
     itkIsolatedWatershedImageFilterIUC3IUC3_Pointer & operator=(itkIsolatedWatershedImageFilterIUC3IUC3_Pointer const & r);
     itkIsolatedWatershedImageFilterIUC3IUC3_Pointer & operator=(itkIsolatedWatershedImageFilterIUC3IUC3 * r);
     itkIsolatedWatershedImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIsolatedWatershedImageFilterIUL2IUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     static itkIsolatedWatershedImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void SetSeed1(itkIndex2 const _arg);
     virtual void SetSeed2(itkIndex2 const _arg);
     virtual void SetThreshold(double const _arg);
     virtual double GetThreshold() const;
     virtual void SetIsolatedValueTolerance(double const _arg);
     virtual double GetIsolatedValueTolerance() const;
     virtual void SetUpperValueLimit(double const _arg);
     virtual double GetUpperValueLimit() const;
     virtual void SetReplaceValue1(unsigned long const _arg);
     virtual unsigned long GetReplaceValue1() const;
     virtual void SetReplaceValue2(unsigned long const _arg);
     virtual unsigned long GetReplaceValue2() const;
     virtual double GetIsolatedValue() const;
   private:
     itkIsolatedWatershedImageFilterIUL2IUL2(itkIsolatedWatershedImageFilterIUL2IUL2 const & arg0);
     void operator=(itkIsolatedWatershedImageFilterIUL2IUL2 const & arg0);
   protected:
     itkIsolatedWatershedImageFilterIUL2IUL2();
     ~itkIsolatedWatershedImageFilterIUL2IUL2();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual void GenerateData();
 };


 class itkIsolatedWatershedImageFilterIUL2IUL2_Pointer {
   public:
     itkIsolatedWatershedImageFilterIUL2IUL2_Pointer();
     itkIsolatedWatershedImageFilterIUL2IUL2_Pointer(itkIsolatedWatershedImageFilterIUL2IUL2_Pointer const & p);
     itkIsolatedWatershedImageFilterIUL2IUL2_Pointer(itkIsolatedWatershedImageFilterIUL2IUL2 * p);
     ~itkIsolatedWatershedImageFilterIUL2IUL2_Pointer();
     itkIsolatedWatershedImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIsolatedWatershedImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkIsolatedWatershedImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkIsolatedWatershedImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkIsolatedWatershedImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkIsolatedWatershedImageFilterIUL2IUL2_Pointer const & r) const;
     itkIsolatedWatershedImageFilterIUL2IUL2_Pointer & operator=(itkIsolatedWatershedImageFilterIUL2IUL2_Pointer const & r);
     itkIsolatedWatershedImageFilterIUL2IUL2_Pointer & operator=(itkIsolatedWatershedImageFilterIUL2IUL2 * r);
     itkIsolatedWatershedImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIsolatedWatershedImageFilterIUL3IUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     static itkIsolatedWatershedImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void SetSeed1(itkIndex3 const _arg);
     virtual void SetSeed2(itkIndex3 const _arg);
     virtual void SetThreshold(double const _arg);
     virtual double GetThreshold() const;
     virtual void SetIsolatedValueTolerance(double const _arg);
     virtual double GetIsolatedValueTolerance() const;
     virtual void SetUpperValueLimit(double const _arg);
     virtual double GetUpperValueLimit() const;
     virtual void SetReplaceValue1(unsigned long const _arg);
     virtual unsigned long GetReplaceValue1() const;
     virtual void SetReplaceValue2(unsigned long const _arg);
     virtual unsigned long GetReplaceValue2() const;
     virtual double GetIsolatedValue() const;
   private:
     itkIsolatedWatershedImageFilterIUL3IUL3(itkIsolatedWatershedImageFilterIUL3IUL3 const & arg0);
     void operator=(itkIsolatedWatershedImageFilterIUL3IUL3 const & arg0);
   protected:
     itkIsolatedWatershedImageFilterIUL3IUL3();
     ~itkIsolatedWatershedImageFilterIUL3IUL3();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual void GenerateData();
 };


 class itkIsolatedWatershedImageFilterIUL3IUL3_Pointer {
   public:
     itkIsolatedWatershedImageFilterIUL3IUL3_Pointer();
     itkIsolatedWatershedImageFilterIUL3IUL3_Pointer(itkIsolatedWatershedImageFilterIUL3IUL3_Pointer const & p);
     itkIsolatedWatershedImageFilterIUL3IUL3_Pointer(itkIsolatedWatershedImageFilterIUL3IUL3 * p);
     ~itkIsolatedWatershedImageFilterIUL3IUL3_Pointer();
     itkIsolatedWatershedImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIsolatedWatershedImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkIsolatedWatershedImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkIsolatedWatershedImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkIsolatedWatershedImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkIsolatedWatershedImageFilterIUL3IUL3_Pointer const & r) const;
     itkIsolatedWatershedImageFilterIUL3IUL3_Pointer & operator=(itkIsolatedWatershedImageFilterIUL3IUL3_Pointer const & r);
     itkIsolatedWatershedImageFilterIUL3IUL3_Pointer & operator=(itkIsolatedWatershedImageFilterIUL3IUL3 * r);
     itkIsolatedWatershedImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIsolatedWatershedImageFilterIUS2IUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     static itkIsolatedWatershedImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void SetSeed1(itkIndex2 const _arg);
     virtual void SetSeed2(itkIndex2 const _arg);
     virtual void SetThreshold(double const _arg);
     virtual double GetThreshold() const;
     virtual void SetIsolatedValueTolerance(double const _arg);
     virtual double GetIsolatedValueTolerance() const;
     virtual void SetUpperValueLimit(double const _arg);
     virtual double GetUpperValueLimit() const;
     virtual void SetReplaceValue1(unsigned short const _arg);
     virtual unsigned short GetReplaceValue1() const;
     virtual void SetReplaceValue2(unsigned short const _arg);
     virtual unsigned short GetReplaceValue2() const;
     virtual double GetIsolatedValue() const;
   private:
     itkIsolatedWatershedImageFilterIUS2IUS2(itkIsolatedWatershedImageFilterIUS2IUS2 const & arg0);
     void operator=(itkIsolatedWatershedImageFilterIUS2IUS2 const & arg0);
   protected:
     itkIsolatedWatershedImageFilterIUS2IUS2();
     ~itkIsolatedWatershedImageFilterIUS2IUS2();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual void GenerateData();
 };


 class itkIsolatedWatershedImageFilterIUS2IUS2_Pointer {
   public:
     itkIsolatedWatershedImageFilterIUS2IUS2_Pointer();
     itkIsolatedWatershedImageFilterIUS2IUS2_Pointer(itkIsolatedWatershedImageFilterIUS2IUS2_Pointer const & p);
     itkIsolatedWatershedImageFilterIUS2IUS2_Pointer(itkIsolatedWatershedImageFilterIUS2IUS2 * p);
     ~itkIsolatedWatershedImageFilterIUS2IUS2_Pointer();
     itkIsolatedWatershedImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIsolatedWatershedImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkIsolatedWatershedImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkIsolatedWatershedImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkIsolatedWatershedImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkIsolatedWatershedImageFilterIUS2IUS2_Pointer const & r) const;
     itkIsolatedWatershedImageFilterIUS2IUS2_Pointer & operator=(itkIsolatedWatershedImageFilterIUS2IUS2_Pointer const & r);
     itkIsolatedWatershedImageFilterIUS2IUS2_Pointer & operator=(itkIsolatedWatershedImageFilterIUS2IUS2 * r);
     itkIsolatedWatershedImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIsolatedWatershedImageFilterIUS3IUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     static itkIsolatedWatershedImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void SetSeed1(itkIndex3 const _arg);
     virtual void SetSeed2(itkIndex3 const _arg);
     virtual void SetThreshold(double const _arg);
     virtual double GetThreshold() const;
     virtual void SetIsolatedValueTolerance(double const _arg);
     virtual double GetIsolatedValueTolerance() const;
     virtual void SetUpperValueLimit(double const _arg);
     virtual double GetUpperValueLimit() const;
     virtual void SetReplaceValue1(unsigned short const _arg);
     virtual unsigned short GetReplaceValue1() const;
     virtual void SetReplaceValue2(unsigned short const _arg);
     virtual unsigned short GetReplaceValue2() const;
     virtual double GetIsolatedValue() const;
   private:
     itkIsolatedWatershedImageFilterIUS3IUS3(itkIsolatedWatershedImageFilterIUS3IUS3 const & arg0);
     void operator=(itkIsolatedWatershedImageFilterIUS3IUS3 const & arg0);
   protected:
     itkIsolatedWatershedImageFilterIUS3IUS3();
     ~itkIsolatedWatershedImageFilterIUS3IUS3();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual void GenerateData();
 };


 class itkIsolatedWatershedImageFilterIUS3IUS3_Pointer {
   public:
     itkIsolatedWatershedImageFilterIUS3IUS3_Pointer();
     itkIsolatedWatershedImageFilterIUS3IUS3_Pointer(itkIsolatedWatershedImageFilterIUS3IUS3_Pointer const & p);
     itkIsolatedWatershedImageFilterIUS3IUS3_Pointer(itkIsolatedWatershedImageFilterIUS3IUS3 * p);
     ~itkIsolatedWatershedImageFilterIUS3IUS3_Pointer();
     itkIsolatedWatershedImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIsolatedWatershedImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkIsolatedWatershedImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkIsolatedWatershedImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkIsolatedWatershedImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkIsolatedWatershedImageFilterIUS3IUS3_Pointer const & r) const;
     itkIsolatedWatershedImageFilterIUS3IUS3_Pointer & operator=(itkIsolatedWatershedImageFilterIUS3IUS3_Pointer const & r);
     itkIsolatedWatershedImageFilterIUS3IUS3_Pointer & operator=(itkIsolatedWatershedImageFilterIUS3IUS3 * r);
     itkIsolatedWatershedImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


