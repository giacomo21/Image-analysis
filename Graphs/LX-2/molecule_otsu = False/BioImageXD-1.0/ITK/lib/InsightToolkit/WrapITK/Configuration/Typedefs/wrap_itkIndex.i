// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkIndexChicken
#endif
#ifdef SWIGCSHARP
%module itkIndexCsharp
#endif
#ifdef SWIGGUILE
%module itkIndexGuile
#endif
#ifdef SWIGJAVA
%module itkIndexJava
#endif
#ifdef SWIGLUA
%module itkIndexLua
#endif
#ifdef SWIGMODULA3
%module itkIndexModula3
#endif
#ifdef SWIGMZSCHEME
%module itkIndexMzscheme
#endif
#ifdef SWIGOCAML
%module itkIndexOcaml
#endif
#ifdef SWIGPERL
%module itkIndexPerl
#endif
#ifdef SWIGPERL5
%module itkIndexPerl5
#endif
#ifdef SWIGPHP
%module itkIndexPhp
#endif
#ifdef SWIGPHP4
%module itkIndexPhp4
#endif
#ifdef SWIGPHP5
%module itkIndexPhp5
#endif
#ifdef SWIGPIKE
%module itkIndexPike
#endif
#ifdef SWIGPYTHON
%module itkIndexPython
#endif
#ifdef SWIGR
%module itkIndexR
#endif
#ifdef SWIGRUBY
%module itkIndexRuby
#endif
#ifdef SWIGSEXP
%module itkIndexSexp
#endif
#ifdef SWIGTCL
%module itkIndexTcl
#endif
#ifdef SWIGXML
%module itkIndexXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
%}


%{
%}




%import wrap_itkSize.i
%import wrap_itkOffset.i


%include itk.i
%include wrap_itkIndex_ext.i


 class itkIndex1 {
   public:
     ~itkIndex1();
     static unsigned int GetIndexDimension();
     itkIndex1 const operator+(itkSize1 const & size) const;
     itkIndex1 const & operator+=(itkSize1 const & size);
     itkIndex1 const operator-(itkSize1 const & size) const;
     itkIndex1 const & operator-=(itkSize1 const & size);
     itkIndex1 const operator+(itkOffset1 const & offset) const;
     itkIndex1 const & operator+=(itkOffset1 const & offset);
     itkIndex1 const & operator-=(itkOffset1 const & offset);
     itkIndex1 const operator-(itkOffset1 const & off) const;
     itkOffset1 const operator-(itkIndex1 const & vec) const;
     itkIndex1 const operator*(itkSize1 const & vec) const;
     bool operator==(itkIndex1 const & vec) const;
     bool operator!=(itkIndex1 const & vec) const;
     long & operator[](unsigned int dim);
     long operator[](unsigned int dim) const;
     long const * GetIndex() const;
     void SetIndex(long const * val);
     void SetElement(unsigned long element, long val);
     long GetElement(unsigned long element) const;
     static itkIndex1 GetBasisIndex(unsigned int dim);
     void Fill(long value);
     itkIndex1();
     itkIndex1(itkIndex1 const & arg0);
     void operator=(itkIndex1 const & arg0);
   private:
   protected:
 };


 class itkIndex2 {
   public:
     ~itkIndex2();
     static unsigned int GetIndexDimension();
     itkIndex2 const operator+(itkSize2 const & size) const;
     itkIndex2 const & operator+=(itkSize2 const & size);
     itkIndex2 const operator-(itkSize2 const & size) const;
     itkIndex2 const & operator-=(itkSize2 const & size);
     itkIndex2 const operator+(itkOffset2 const & offset) const;
     itkIndex2 const & operator+=(itkOffset2 const & offset);
     itkIndex2 const & operator-=(itkOffset2 const & offset);
     itkIndex2 const operator-(itkOffset2 const & off) const;
     itkOffset2 const operator-(itkIndex2 const & vec) const;
     itkIndex2 const operator*(itkSize2 const & vec) const;
     bool operator==(itkIndex2 const & vec) const;
     bool operator!=(itkIndex2 const & vec) const;
     long & operator[](unsigned int dim);
     long operator[](unsigned int dim) const;
     long const * GetIndex() const;
     void SetIndex(long const * val);
     void SetElement(unsigned long element, long val);
     long GetElement(unsigned long element) const;
     static itkIndex2 GetBasisIndex(unsigned int dim);
     void Fill(long value);
     itkIndex2();
     itkIndex2(itkIndex2 const & arg0);
     void operator=(itkIndex2 const & arg0);
   private:
   protected:
 };


 class itkIndex3 {
   public:
     ~itkIndex3();
     static unsigned int GetIndexDimension();
     itkIndex3 const operator+(itkSize3 const & size) const;
     itkIndex3 const & operator+=(itkSize3 const & size);
     itkIndex3 const operator-(itkSize3 const & size) const;
     itkIndex3 const & operator-=(itkSize3 const & size);
     itkIndex3 const operator+(itkOffset3 const & offset) const;
     itkIndex3 const & operator+=(itkOffset3 const & offset);
     itkIndex3 const & operator-=(itkOffset3 const & offset);
     itkIndex3 const operator-(itkOffset3 const & off) const;
     itkOffset3 const operator-(itkIndex3 const & vec) const;
     itkIndex3 const operator*(itkSize3 const & vec) const;
     bool operator==(itkIndex3 const & vec) const;
     bool operator!=(itkIndex3 const & vec) const;
     long & operator[](unsigned int dim);
     long operator[](unsigned int dim) const;
     long const * GetIndex() const;
     void SetIndex(long const * val);
     void SetElement(unsigned long element, long val);
     long GetElement(unsigned long element) const;
     static itkIndex3 GetBasisIndex(unsigned int dim);
     void Fill(long value);
     itkIndex3();
     itkIndex3(itkIndex3 const & arg0);
     void operator=(itkIndex3 const & arg0);
   private:
   protected:
 };


