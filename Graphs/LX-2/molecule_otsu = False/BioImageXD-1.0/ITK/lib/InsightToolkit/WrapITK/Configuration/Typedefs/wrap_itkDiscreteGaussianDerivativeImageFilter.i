// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkDiscreteGaussianDerivativeImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkDiscreteGaussianDerivativeImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkDiscreteGaussianDerivativeImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkDiscreteGaussianDerivativeImageFilterJava
#endif
#ifdef SWIGLUA
%module itkDiscreteGaussianDerivativeImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkDiscreteGaussianDerivativeImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkDiscreteGaussianDerivativeImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkDiscreteGaussianDerivativeImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkDiscreteGaussianDerivativeImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkDiscreteGaussianDerivativeImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkDiscreteGaussianDerivativeImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkDiscreteGaussianDerivativeImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkDiscreteGaussianDerivativeImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkDiscreteGaussianDerivativeImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkDiscreteGaussianDerivativeImageFilterPython
#endif
#ifdef SWIGR
%module itkDiscreteGaussianDerivativeImageFilterR
#endif
#ifdef SWIGRUBY
%module itkDiscreteGaussianDerivativeImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkDiscreteGaussianDerivativeImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkDiscreteGaussianDerivativeImageFilterTcl
#endif
#ifdef SWIGXML
%module itkDiscreteGaussianDerivativeImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Filtering.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkFixedArray.i
%import wrap_itkImageToImageFilterA.i


%include itk.i
%include wrap_itkDiscreteGaussianDerivativeImageFilter_ext.i


 class itkDiscreteGaussianDerivativeImageFilterID2ID2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkDiscreteGaussianDerivativeImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOrder(itkFixedArrayUI2 const _arg);
     virtual itkFixedArrayUI2 const GetOrder() const;
     virtual void SetVariance(itkFixedArrayD2 const _arg);
     virtual itkFixedArrayD2 const GetVariance() const;
     virtual void SetMaximumError(itkFixedArrayD2 const _arg);
     virtual itkFixedArrayD2 const GetMaximumError() const;
     virtual int GetMaximumKernelWidth() const;
     virtual void SetMaximumKernelWidth(int const _arg);
     virtual void SetInternalNumberOfStreamDivisions(unsigned int const _arg);
     virtual unsigned int GetInternalNumberOfStreamDivisions() const;
     void SetOrder(unsigned int const v);
     void SetVariance(double const v);
     void SetMaximumError(double const v);
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
   private:
     itkDiscreteGaussianDerivativeImageFilterID2ID2(itkDiscreteGaussianDerivativeImageFilterID2ID2 const & arg0);
     void operator=(itkDiscreteGaussianDerivativeImageFilterID2ID2 const & arg0);
   protected:
     itkDiscreteGaussianDerivativeImageFilterID2ID2();
     ~itkDiscreteGaussianDerivativeImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkDiscreteGaussianDerivativeImageFilterID2ID2_Pointer {
   public:
     itkDiscreteGaussianDerivativeImageFilterID2ID2_Pointer();
     itkDiscreteGaussianDerivativeImageFilterID2ID2_Pointer(itkDiscreteGaussianDerivativeImageFilterID2ID2_Pointer const & p);
     itkDiscreteGaussianDerivativeImageFilterID2ID2_Pointer(itkDiscreteGaussianDerivativeImageFilterID2ID2 * p);
     ~itkDiscreteGaussianDerivativeImageFilterID2ID2_Pointer();
     itkDiscreteGaussianDerivativeImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDiscreteGaussianDerivativeImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkDiscreteGaussianDerivativeImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkDiscreteGaussianDerivativeImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkDiscreteGaussianDerivativeImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkDiscreteGaussianDerivativeImageFilterID2ID2_Pointer const & r) const;
     itkDiscreteGaussianDerivativeImageFilterID2ID2_Pointer & operator=(itkDiscreteGaussianDerivativeImageFilterID2ID2_Pointer const & r);
     itkDiscreteGaussianDerivativeImageFilterID2ID2_Pointer & operator=(itkDiscreteGaussianDerivativeImageFilterID2ID2 * r);
     itkDiscreteGaussianDerivativeImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDiscreteGaussianDerivativeImageFilterID3ID3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkDiscreteGaussianDerivativeImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOrder(itkFixedArrayUI3 const _arg);
     virtual itkFixedArrayUI3 const GetOrder() const;
     virtual void SetVariance(itkFixedArrayD3 const _arg);
     virtual itkFixedArrayD3 const GetVariance() const;
     virtual void SetMaximumError(itkFixedArrayD3 const _arg);
     virtual itkFixedArrayD3 const GetMaximumError() const;
     virtual int GetMaximumKernelWidth() const;
     virtual void SetMaximumKernelWidth(int const _arg);
     virtual void SetInternalNumberOfStreamDivisions(unsigned int const _arg);
     virtual unsigned int GetInternalNumberOfStreamDivisions() const;
     void SetOrder(unsigned int const v);
     void SetVariance(double const v);
     void SetMaximumError(double const v);
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
   private:
     itkDiscreteGaussianDerivativeImageFilterID3ID3(itkDiscreteGaussianDerivativeImageFilterID3ID3 const & arg0);
     void operator=(itkDiscreteGaussianDerivativeImageFilterID3ID3 const & arg0);
   protected:
     itkDiscreteGaussianDerivativeImageFilterID3ID3();
     ~itkDiscreteGaussianDerivativeImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkDiscreteGaussianDerivativeImageFilterID3ID3_Pointer {
   public:
     itkDiscreteGaussianDerivativeImageFilterID3ID3_Pointer();
     itkDiscreteGaussianDerivativeImageFilterID3ID3_Pointer(itkDiscreteGaussianDerivativeImageFilterID3ID3_Pointer const & p);
     itkDiscreteGaussianDerivativeImageFilterID3ID3_Pointer(itkDiscreteGaussianDerivativeImageFilterID3ID3 * p);
     ~itkDiscreteGaussianDerivativeImageFilterID3ID3_Pointer();
     itkDiscreteGaussianDerivativeImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDiscreteGaussianDerivativeImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkDiscreteGaussianDerivativeImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkDiscreteGaussianDerivativeImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkDiscreteGaussianDerivativeImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkDiscreteGaussianDerivativeImageFilterID3ID3_Pointer const & r) const;
     itkDiscreteGaussianDerivativeImageFilterID3ID3_Pointer & operator=(itkDiscreteGaussianDerivativeImageFilterID3ID3_Pointer const & r);
     itkDiscreteGaussianDerivativeImageFilterID3ID3_Pointer & operator=(itkDiscreteGaussianDerivativeImageFilterID3ID3 * r);
     itkDiscreteGaussianDerivativeImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDiscreteGaussianDerivativeImageFilterIF2IF2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkDiscreteGaussianDerivativeImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOrder(itkFixedArrayUI2 const _arg);
     virtual itkFixedArrayUI2 const GetOrder() const;
     virtual void SetVariance(itkFixedArrayD2 const _arg);
     virtual itkFixedArrayD2 const GetVariance() const;
     virtual void SetMaximumError(itkFixedArrayD2 const _arg);
     virtual itkFixedArrayD2 const GetMaximumError() const;
     virtual int GetMaximumKernelWidth() const;
     virtual void SetMaximumKernelWidth(int const _arg);
     virtual void SetInternalNumberOfStreamDivisions(unsigned int const _arg);
     virtual unsigned int GetInternalNumberOfStreamDivisions() const;
     void SetOrder(unsigned int const v);
     void SetVariance(double const v);
     void SetMaximumError(double const v);
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
   private:
     itkDiscreteGaussianDerivativeImageFilterIF2IF2(itkDiscreteGaussianDerivativeImageFilterIF2IF2 const & arg0);
     void operator=(itkDiscreteGaussianDerivativeImageFilterIF2IF2 const & arg0);
   protected:
     itkDiscreteGaussianDerivativeImageFilterIF2IF2();
     ~itkDiscreteGaussianDerivativeImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkDiscreteGaussianDerivativeImageFilterIF2IF2_Pointer {
   public:
     itkDiscreteGaussianDerivativeImageFilterIF2IF2_Pointer();
     itkDiscreteGaussianDerivativeImageFilterIF2IF2_Pointer(itkDiscreteGaussianDerivativeImageFilterIF2IF2_Pointer const & p);
     itkDiscreteGaussianDerivativeImageFilterIF2IF2_Pointer(itkDiscreteGaussianDerivativeImageFilterIF2IF2 * p);
     ~itkDiscreteGaussianDerivativeImageFilterIF2IF2_Pointer();
     itkDiscreteGaussianDerivativeImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDiscreteGaussianDerivativeImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkDiscreteGaussianDerivativeImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkDiscreteGaussianDerivativeImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkDiscreteGaussianDerivativeImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkDiscreteGaussianDerivativeImageFilterIF2IF2_Pointer const & r) const;
     itkDiscreteGaussianDerivativeImageFilterIF2IF2_Pointer & operator=(itkDiscreteGaussianDerivativeImageFilterIF2IF2_Pointer const & r);
     itkDiscreteGaussianDerivativeImageFilterIF2IF2_Pointer & operator=(itkDiscreteGaussianDerivativeImageFilterIF2IF2 * r);
     itkDiscreteGaussianDerivativeImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDiscreteGaussianDerivativeImageFilterIF3IF3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkDiscreteGaussianDerivativeImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOrder(itkFixedArrayUI3 const _arg);
     virtual itkFixedArrayUI3 const GetOrder() const;
     virtual void SetVariance(itkFixedArrayD3 const _arg);
     virtual itkFixedArrayD3 const GetVariance() const;
     virtual void SetMaximumError(itkFixedArrayD3 const _arg);
     virtual itkFixedArrayD3 const GetMaximumError() const;
     virtual int GetMaximumKernelWidth() const;
     virtual void SetMaximumKernelWidth(int const _arg);
     virtual void SetInternalNumberOfStreamDivisions(unsigned int const _arg);
     virtual unsigned int GetInternalNumberOfStreamDivisions() const;
     void SetOrder(unsigned int const v);
     void SetVariance(double const v);
     void SetMaximumError(double const v);
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
   private:
     itkDiscreteGaussianDerivativeImageFilterIF3IF3(itkDiscreteGaussianDerivativeImageFilterIF3IF3 const & arg0);
     void operator=(itkDiscreteGaussianDerivativeImageFilterIF3IF3 const & arg0);
   protected:
     itkDiscreteGaussianDerivativeImageFilterIF3IF3();
     ~itkDiscreteGaussianDerivativeImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkDiscreteGaussianDerivativeImageFilterIF3IF3_Pointer {
   public:
     itkDiscreteGaussianDerivativeImageFilterIF3IF3_Pointer();
     itkDiscreteGaussianDerivativeImageFilterIF3IF3_Pointer(itkDiscreteGaussianDerivativeImageFilterIF3IF3_Pointer const & p);
     itkDiscreteGaussianDerivativeImageFilterIF3IF3_Pointer(itkDiscreteGaussianDerivativeImageFilterIF3IF3 * p);
     ~itkDiscreteGaussianDerivativeImageFilterIF3IF3_Pointer();
     itkDiscreteGaussianDerivativeImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDiscreteGaussianDerivativeImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkDiscreteGaussianDerivativeImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkDiscreteGaussianDerivativeImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkDiscreteGaussianDerivativeImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkDiscreteGaussianDerivativeImageFilterIF3IF3_Pointer const & r) const;
     itkDiscreteGaussianDerivativeImageFilterIF3IF3_Pointer & operator=(itkDiscreteGaussianDerivativeImageFilterIF3IF3_Pointer const & r);
     itkDiscreteGaussianDerivativeImageFilterIF3IF3_Pointer & operator=(itkDiscreteGaussianDerivativeImageFilterIF3IF3 * r);
     itkDiscreteGaussianDerivativeImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDiscreteGaussianDerivativeImageFilterIUC2IUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOrder(itkFixedArrayUI2 const _arg);
     virtual itkFixedArrayUI2 const GetOrder() const;
     virtual void SetVariance(itkFixedArrayD2 const _arg);
     virtual itkFixedArrayD2 const GetVariance() const;
     virtual void SetMaximumError(itkFixedArrayD2 const _arg);
     virtual itkFixedArrayD2 const GetMaximumError() const;
     virtual int GetMaximumKernelWidth() const;
     virtual void SetMaximumKernelWidth(int const _arg);
     virtual void SetInternalNumberOfStreamDivisions(unsigned int const _arg);
     virtual unsigned int GetInternalNumberOfStreamDivisions() const;
     void SetOrder(unsigned int const v);
     void SetVariance(double const v);
     void SetMaximumError(double const v);
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
   private:
     itkDiscreteGaussianDerivativeImageFilterIUC2IUC2(itkDiscreteGaussianDerivativeImageFilterIUC2IUC2 const & arg0);
     void operator=(itkDiscreteGaussianDerivativeImageFilterIUC2IUC2 const & arg0);
   protected:
     itkDiscreteGaussianDerivativeImageFilterIUC2IUC2();
     ~itkDiscreteGaussianDerivativeImageFilterIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_Pointer {
   public:
     itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_Pointer();
     itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_Pointer(itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_Pointer const & p);
     itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_Pointer(itkDiscreteGaussianDerivativeImageFilterIUC2IUC2 * p);
     ~itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_Pointer();
     itkDiscreteGaussianDerivativeImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDiscreteGaussianDerivativeImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_Pointer const & r) const;
     itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_Pointer & operator=(itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_Pointer const & r);
     itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_Pointer & operator=(itkDiscreteGaussianDerivativeImageFilterIUC2IUC2 * r);
     itkDiscreteGaussianDerivativeImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDiscreteGaussianDerivativeImageFilterIUC3IUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOrder(itkFixedArrayUI3 const _arg);
     virtual itkFixedArrayUI3 const GetOrder() const;
     virtual void SetVariance(itkFixedArrayD3 const _arg);
     virtual itkFixedArrayD3 const GetVariance() const;
     virtual void SetMaximumError(itkFixedArrayD3 const _arg);
     virtual itkFixedArrayD3 const GetMaximumError() const;
     virtual int GetMaximumKernelWidth() const;
     virtual void SetMaximumKernelWidth(int const _arg);
     virtual void SetInternalNumberOfStreamDivisions(unsigned int const _arg);
     virtual unsigned int GetInternalNumberOfStreamDivisions() const;
     void SetOrder(unsigned int const v);
     void SetVariance(double const v);
     void SetMaximumError(double const v);
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
   private:
     itkDiscreteGaussianDerivativeImageFilterIUC3IUC3(itkDiscreteGaussianDerivativeImageFilterIUC3IUC3 const & arg0);
     void operator=(itkDiscreteGaussianDerivativeImageFilterIUC3IUC3 const & arg0);
   protected:
     itkDiscreteGaussianDerivativeImageFilterIUC3IUC3();
     ~itkDiscreteGaussianDerivativeImageFilterIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_Pointer {
   public:
     itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_Pointer();
     itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_Pointer(itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_Pointer const & p);
     itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_Pointer(itkDiscreteGaussianDerivativeImageFilterIUC3IUC3 * p);
     ~itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_Pointer();
     itkDiscreteGaussianDerivativeImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDiscreteGaussianDerivativeImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_Pointer const & r) const;
     itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_Pointer & operator=(itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_Pointer const & r);
     itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_Pointer & operator=(itkDiscreteGaussianDerivativeImageFilterIUC3IUC3 * r);
     itkDiscreteGaussianDerivativeImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDiscreteGaussianDerivativeImageFilterIUL2IUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkDiscreteGaussianDerivativeImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOrder(itkFixedArrayUI2 const _arg);
     virtual itkFixedArrayUI2 const GetOrder() const;
     virtual void SetVariance(itkFixedArrayD2 const _arg);
     virtual itkFixedArrayD2 const GetVariance() const;
     virtual void SetMaximumError(itkFixedArrayD2 const _arg);
     virtual itkFixedArrayD2 const GetMaximumError() const;
     virtual int GetMaximumKernelWidth() const;
     virtual void SetMaximumKernelWidth(int const _arg);
     virtual void SetInternalNumberOfStreamDivisions(unsigned int const _arg);
     virtual unsigned int GetInternalNumberOfStreamDivisions() const;
     void SetOrder(unsigned int const v);
     void SetVariance(double const v);
     void SetMaximumError(double const v);
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
   private:
     itkDiscreteGaussianDerivativeImageFilterIUL2IUL2(itkDiscreteGaussianDerivativeImageFilterIUL2IUL2 const & arg0);
     void operator=(itkDiscreteGaussianDerivativeImageFilterIUL2IUL2 const & arg0);
   protected:
     itkDiscreteGaussianDerivativeImageFilterIUL2IUL2();
     ~itkDiscreteGaussianDerivativeImageFilterIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkDiscreteGaussianDerivativeImageFilterIUL2IUL2_Pointer {
   public:
     itkDiscreteGaussianDerivativeImageFilterIUL2IUL2_Pointer();
     itkDiscreteGaussianDerivativeImageFilterIUL2IUL2_Pointer(itkDiscreteGaussianDerivativeImageFilterIUL2IUL2_Pointer const & p);
     itkDiscreteGaussianDerivativeImageFilterIUL2IUL2_Pointer(itkDiscreteGaussianDerivativeImageFilterIUL2IUL2 * p);
     ~itkDiscreteGaussianDerivativeImageFilterIUL2IUL2_Pointer();
     itkDiscreteGaussianDerivativeImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDiscreteGaussianDerivativeImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkDiscreteGaussianDerivativeImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkDiscreteGaussianDerivativeImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkDiscreteGaussianDerivativeImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkDiscreteGaussianDerivativeImageFilterIUL2IUL2_Pointer const & r) const;
     itkDiscreteGaussianDerivativeImageFilterIUL2IUL2_Pointer & operator=(itkDiscreteGaussianDerivativeImageFilterIUL2IUL2_Pointer const & r);
     itkDiscreteGaussianDerivativeImageFilterIUL2IUL2_Pointer & operator=(itkDiscreteGaussianDerivativeImageFilterIUL2IUL2 * r);
     itkDiscreteGaussianDerivativeImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDiscreteGaussianDerivativeImageFilterIUL3IUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkDiscreteGaussianDerivativeImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOrder(itkFixedArrayUI3 const _arg);
     virtual itkFixedArrayUI3 const GetOrder() const;
     virtual void SetVariance(itkFixedArrayD3 const _arg);
     virtual itkFixedArrayD3 const GetVariance() const;
     virtual void SetMaximumError(itkFixedArrayD3 const _arg);
     virtual itkFixedArrayD3 const GetMaximumError() const;
     virtual int GetMaximumKernelWidth() const;
     virtual void SetMaximumKernelWidth(int const _arg);
     virtual void SetInternalNumberOfStreamDivisions(unsigned int const _arg);
     virtual unsigned int GetInternalNumberOfStreamDivisions() const;
     void SetOrder(unsigned int const v);
     void SetVariance(double const v);
     void SetMaximumError(double const v);
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
   private:
     itkDiscreteGaussianDerivativeImageFilterIUL3IUL3(itkDiscreteGaussianDerivativeImageFilterIUL3IUL3 const & arg0);
     void operator=(itkDiscreteGaussianDerivativeImageFilterIUL3IUL3 const & arg0);
   protected:
     itkDiscreteGaussianDerivativeImageFilterIUL3IUL3();
     ~itkDiscreteGaussianDerivativeImageFilterIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkDiscreteGaussianDerivativeImageFilterIUL3IUL3_Pointer {
   public:
     itkDiscreteGaussianDerivativeImageFilterIUL3IUL3_Pointer();
     itkDiscreteGaussianDerivativeImageFilterIUL3IUL3_Pointer(itkDiscreteGaussianDerivativeImageFilterIUL3IUL3_Pointer const & p);
     itkDiscreteGaussianDerivativeImageFilterIUL3IUL3_Pointer(itkDiscreteGaussianDerivativeImageFilterIUL3IUL3 * p);
     ~itkDiscreteGaussianDerivativeImageFilterIUL3IUL3_Pointer();
     itkDiscreteGaussianDerivativeImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDiscreteGaussianDerivativeImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkDiscreteGaussianDerivativeImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkDiscreteGaussianDerivativeImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkDiscreteGaussianDerivativeImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkDiscreteGaussianDerivativeImageFilterIUL3IUL3_Pointer const & r) const;
     itkDiscreteGaussianDerivativeImageFilterIUL3IUL3_Pointer & operator=(itkDiscreteGaussianDerivativeImageFilterIUL3IUL3_Pointer const & r);
     itkDiscreteGaussianDerivativeImageFilterIUL3IUL3_Pointer & operator=(itkDiscreteGaussianDerivativeImageFilterIUL3IUL3 * r);
     itkDiscreteGaussianDerivativeImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDiscreteGaussianDerivativeImageFilterIUS2IUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOrder(itkFixedArrayUI2 const _arg);
     virtual itkFixedArrayUI2 const GetOrder() const;
     virtual void SetVariance(itkFixedArrayD2 const _arg);
     virtual itkFixedArrayD2 const GetVariance() const;
     virtual void SetMaximumError(itkFixedArrayD2 const _arg);
     virtual itkFixedArrayD2 const GetMaximumError() const;
     virtual int GetMaximumKernelWidth() const;
     virtual void SetMaximumKernelWidth(int const _arg);
     virtual void SetInternalNumberOfStreamDivisions(unsigned int const _arg);
     virtual unsigned int GetInternalNumberOfStreamDivisions() const;
     void SetOrder(unsigned int const v);
     void SetVariance(double const v);
     void SetMaximumError(double const v);
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
   private:
     itkDiscreteGaussianDerivativeImageFilterIUS2IUS2(itkDiscreteGaussianDerivativeImageFilterIUS2IUS2 const & arg0);
     void operator=(itkDiscreteGaussianDerivativeImageFilterIUS2IUS2 const & arg0);
   protected:
     itkDiscreteGaussianDerivativeImageFilterIUS2IUS2();
     ~itkDiscreteGaussianDerivativeImageFilterIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_Pointer {
   public:
     itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_Pointer();
     itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_Pointer(itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_Pointer const & p);
     itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_Pointer(itkDiscreteGaussianDerivativeImageFilterIUS2IUS2 * p);
     ~itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_Pointer();
     itkDiscreteGaussianDerivativeImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDiscreteGaussianDerivativeImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_Pointer const & r) const;
     itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_Pointer & operator=(itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_Pointer const & r);
     itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_Pointer & operator=(itkDiscreteGaussianDerivativeImageFilterIUS2IUS2 * r);
     itkDiscreteGaussianDerivativeImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDiscreteGaussianDerivativeImageFilterIUS3IUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOrder(itkFixedArrayUI3 const _arg);
     virtual itkFixedArrayUI3 const GetOrder() const;
     virtual void SetVariance(itkFixedArrayD3 const _arg);
     virtual itkFixedArrayD3 const GetVariance() const;
     virtual void SetMaximumError(itkFixedArrayD3 const _arg);
     virtual itkFixedArrayD3 const GetMaximumError() const;
     virtual int GetMaximumKernelWidth() const;
     virtual void SetMaximumKernelWidth(int const _arg);
     virtual void SetInternalNumberOfStreamDivisions(unsigned int const _arg);
     virtual unsigned int GetInternalNumberOfStreamDivisions() const;
     void SetOrder(unsigned int const v);
     void SetVariance(double const v);
     void SetMaximumError(double const v);
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
   private:
     itkDiscreteGaussianDerivativeImageFilterIUS3IUS3(itkDiscreteGaussianDerivativeImageFilterIUS3IUS3 const & arg0);
     void operator=(itkDiscreteGaussianDerivativeImageFilterIUS3IUS3 const & arg0);
   protected:
     itkDiscreteGaussianDerivativeImageFilterIUS3IUS3();
     ~itkDiscreteGaussianDerivativeImageFilterIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
 };


 class itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_Pointer {
   public:
     itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_Pointer();
     itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_Pointer(itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_Pointer const & p);
     itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_Pointer(itkDiscreteGaussianDerivativeImageFilterIUS3IUS3 * p);
     ~itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_Pointer();
     itkDiscreteGaussianDerivativeImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDiscreteGaussianDerivativeImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_Pointer const & r) const;
     itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_Pointer & operator=(itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_Pointer const & r);
     itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_Pointer & operator=(itkDiscreteGaussianDerivativeImageFilterIUS3IUS3 * r);
     itkDiscreteGaussianDerivativeImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


