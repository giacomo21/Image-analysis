# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkInPlaceImageFilterBPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkInPlaceImageFilterBPython', [dirname(__file__)])
        except ImportError:
            import _itkInPlaceImageFilterBPython
            return _itkInPlaceImageFilterBPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkInPlaceImageFilterBPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkInPlaceImageFilterBPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkInPlaceImageFilterBPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkImageToImageFilterBPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
def itkInPlaceImageFilterICF3ID3_New():
  return itkInPlaceImageFilterICF3ID3.New()

def itkInPlaceImageFilterICF2ID2_New():
  return itkInPlaceImageFilterICF2ID2.New()

def itkInPlaceImageFilterICF3IF3_New():
  return itkInPlaceImageFilterICF3IF3.New()

def itkInPlaceImageFilterICF2IF2_New():
  return itkInPlaceImageFilterICF2IF2.New()

def itkInPlaceImageFilterID3ICF3_New():
  return itkInPlaceImageFilterID3ICF3.New()

def itkInPlaceImageFilterID2ICF2_New():
  return itkInPlaceImageFilterID2ICF2.New()

def itkInPlaceImageFilterIF3ICF3_New():
  return itkInPlaceImageFilterIF3ICF3.New()

def itkInPlaceImageFilterIF2ICF2_New():
  return itkInPlaceImageFilterIF2ICF2.New()

def itkInPlaceImageFilterICF3ICF3_New():
  return itkInPlaceImageFilterICF3ICF3.New()

def itkInPlaceImageFilterICF2ICF2_New():
  return itkInPlaceImageFilterICF2ICF2.New()

def itkInPlaceImageFilterID3ICVF33_New():
  return itkInPlaceImageFilterID3ICVF33.New()

def itkInPlaceImageFilterID2ICVF22_New():
  return itkInPlaceImageFilterID2ICVF22.New()

def itkInPlaceImageFilterID3IVF33_New():
  return itkInPlaceImageFilterID3IVF33.New()

def itkInPlaceImageFilterID2IVF22_New():
  return itkInPlaceImageFilterID2IVF22.New()

def itkInPlaceImageFilterIF3ICVF33_New():
  return itkInPlaceImageFilterIF3ICVF33.New()

def itkInPlaceImageFilterIF2ICVF22_New():
  return itkInPlaceImageFilterIF2ICVF22.New()

def itkInPlaceImageFilterIF3IVF33_New():
  return itkInPlaceImageFilterIF3IVF33.New()

def itkInPlaceImageFilterIF2IVF22_New():
  return itkInPlaceImageFilterIF2IVF22.New()

def itkInPlaceImageFilterIUS3ICVF33_New():
  return itkInPlaceImageFilterIUS3ICVF33.New()

def itkInPlaceImageFilterIUS2ICVF22_New():
  return itkInPlaceImageFilterIUS2ICVF22.New()

def itkInPlaceImageFilterIUS3IVF33_New():
  return itkInPlaceImageFilterIUS3IVF33.New()

def itkInPlaceImageFilterIUS2IVF22_New():
  return itkInPlaceImageFilterIUS2IVF22.New()

def itkInPlaceImageFilterIUL3ICVF33_New():
  return itkInPlaceImageFilterIUL3ICVF33.New()

def itkInPlaceImageFilterIUL2ICVF22_New():
  return itkInPlaceImageFilterIUL2ICVF22.New()

def itkInPlaceImageFilterIUL3IVF33_New():
  return itkInPlaceImageFilterIUL3IVF33.New()

def itkInPlaceImageFilterIUL2IVF22_New():
  return itkInPlaceImageFilterIUL2IVF22.New()

def itkInPlaceImageFilterIUC3ICVF33_New():
  return itkInPlaceImageFilterIUC3ICVF33.New()

def itkInPlaceImageFilterIUC2ICVF22_New():
  return itkInPlaceImageFilterIUC2ICVF22.New()

def itkInPlaceImageFilterIUC3IVF33_New():
  return itkInPlaceImageFilterIUC3IVF33.New()

def itkInPlaceImageFilterIUC2IVF22_New():
  return itkInPlaceImageFilterIUC2IVF22.New()

def itkInPlaceImageFilterICVF33ID3_New():
  return itkInPlaceImageFilterICVF33ID3.New()

def itkInPlaceImageFilterICVF22ID2_New():
  return itkInPlaceImageFilterICVF22ID2.New()

def itkInPlaceImageFilterICVF33IF3_New():
  return itkInPlaceImageFilterICVF33IF3.New()

def itkInPlaceImageFilterICVF22IF2_New():
  return itkInPlaceImageFilterICVF22IF2.New()

def itkInPlaceImageFilterICVF33IUS3_New():
  return itkInPlaceImageFilterICVF33IUS3.New()

def itkInPlaceImageFilterICVF22IUS2_New():
  return itkInPlaceImageFilterICVF22IUS2.New()

def itkInPlaceImageFilterICVF33IUL3_New():
  return itkInPlaceImageFilterICVF33IUL3.New()

def itkInPlaceImageFilterICVF22IUL2_New():
  return itkInPlaceImageFilterICVF22IUL2.New()

def itkInPlaceImageFilterICVF33IUC3_New():
  return itkInPlaceImageFilterICVF33IUC3.New()

def itkInPlaceImageFilterICVF22IUC2_New():
  return itkInPlaceImageFilterICVF22IUC2.New()

def itkInPlaceImageFilterIVF33ID3_New():
  return itkInPlaceImageFilterIVF33ID3.New()

def itkInPlaceImageFilterIVF22ID2_New():
  return itkInPlaceImageFilterIVF22ID2.New()

def itkInPlaceImageFilterIVF33IF3_New():
  return itkInPlaceImageFilterIVF33IF3.New()

def itkInPlaceImageFilterIVF22IF2_New():
  return itkInPlaceImageFilterIVF22IF2.New()

def itkInPlaceImageFilterIVF33IUS3_New():
  return itkInPlaceImageFilterIVF33IUS3.New()

def itkInPlaceImageFilterIVF22IUS2_New():
  return itkInPlaceImageFilterIVF22IUS2.New()

def itkInPlaceImageFilterIVF33IUL3_New():
  return itkInPlaceImageFilterIVF33IUL3.New()

def itkInPlaceImageFilterIVF22IUL2_New():
  return itkInPlaceImageFilterIVF22IUL2.New()

def itkInPlaceImageFilterIVF33IUC3_New():
  return itkInPlaceImageFilterIVF33IUC3.New()

def itkInPlaceImageFilterIVF22IUC2_New():
  return itkInPlaceImageFilterIVF22IUC2.New()

def itkInPlaceImageFilterID3VID3_New():
  return itkInPlaceImageFilterID3VID3.New()

def itkInPlaceImageFilterVID3ID3_New():
  return itkInPlaceImageFilterVID3ID3.New()

def itkInPlaceImageFilterIF3VIF3_New():
  return itkInPlaceImageFilterIF3VIF3.New()

def itkInPlaceImageFilterVIF3IF3_New():
  return itkInPlaceImageFilterVIF3IF3.New()

def itkInPlaceImageFilterIUS3VIUS3_New():
  return itkInPlaceImageFilterIUS3VIUS3.New()

def itkInPlaceImageFilterVIUS3IUS3_New():
  return itkInPlaceImageFilterVIUS3IUS3.New()

def itkInPlaceImageFilterIUL3VIUL3_New():
  return itkInPlaceImageFilterIUL3VIUL3.New()

def itkInPlaceImageFilterVIUL3IUL3_New():
  return itkInPlaceImageFilterVIUL3IUL3.New()

def itkInPlaceImageFilterIUC3VIUC3_New():
  return itkInPlaceImageFilterIUC3VIUC3.New()

def itkInPlaceImageFilterVIUC3IUC3_New():
  return itkInPlaceImageFilterVIUC3IUC3.New()

def itkInPlaceImageFilterID2VID2_New():
  return itkInPlaceImageFilterID2VID2.New()

def itkInPlaceImageFilterVID2ID2_New():
  return itkInPlaceImageFilterVID2ID2.New()

def itkInPlaceImageFilterIF2VIF2_New():
  return itkInPlaceImageFilterIF2VIF2.New()

def itkInPlaceImageFilterVIF2IF2_New():
  return itkInPlaceImageFilterVIF2IF2.New()

def itkInPlaceImageFilterIUS2VIUS2_New():
  return itkInPlaceImageFilterIUS2VIUS2.New()

def itkInPlaceImageFilterVIUS2IUS2_New():
  return itkInPlaceImageFilterVIUS2IUS2.New()

def itkInPlaceImageFilterIUL2VIUL2_New():
  return itkInPlaceImageFilterIUL2VIUL2.New()

def itkInPlaceImageFilterVIUL2IUL2_New():
  return itkInPlaceImageFilterVIUL2IUL2.New()

def itkInPlaceImageFilterIUC2VIUC2_New():
  return itkInPlaceImageFilterIUC2VIUC2.New()

def itkInPlaceImageFilterVIUC2IUC2_New():
  return itkInPlaceImageFilterVIUC2IUC2.New()

class itkInPlaceImageFilterICF2ICF2(itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2):
    """Proxy of C++ itkInPlaceImageFilterICF2ICF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ICF2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ICF2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ICF2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ICF2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ICF2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ICF2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ICF2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterICF2ICF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterICF2ICF2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ICF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterICF2ICF2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ICF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterICF2ICF2
        
        Create a new object of the class itkInPlaceImageFilterICF2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterICF2ICF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterICF2ICF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterICF2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterICF2ICF2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ICF2_SetInPlace,None,itkInPlaceImageFilterICF2ICF2)
itkInPlaceImageFilterICF2ICF2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ICF2_GetInPlace,None,itkInPlaceImageFilterICF2ICF2)
itkInPlaceImageFilterICF2ICF2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ICF2_InPlaceOn,None,itkInPlaceImageFilterICF2ICF2)
itkInPlaceImageFilterICF2ICF2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ICF2_InPlaceOff,None,itkInPlaceImageFilterICF2ICF2)
itkInPlaceImageFilterICF2ICF2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ICF2_CanRunInPlace,None,itkInPlaceImageFilterICF2ICF2)
itkInPlaceImageFilterICF2ICF2.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ICF2_GetPointer,None,itkInPlaceImageFilterICF2ICF2)
itkInPlaceImageFilterICF2ICF2_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ICF2_swigregister
itkInPlaceImageFilterICF2ICF2_swigregister(itkInPlaceImageFilterICF2ICF2)

def itkInPlaceImageFilterICF2ICF2_cast(*args):
  """itkInPlaceImageFilterICF2ICF2_cast(itkLightObject obj) -> itkInPlaceImageFilterICF2ICF2"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ICF2_cast(*args)

class itkInPlaceImageFilterICF2ID2(itkImageToImageFilterBPython.itkImageToImageFilterICF2ID2):
    """Proxy of C++ itkInPlaceImageFilterICF2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ID2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ID2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ID2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ID2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ID2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ID2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ID2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterICF2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterICF2ID2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterICF2ID2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterICF2ID2
        
        Create a new object of the class itkInPlaceImageFilterICF2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterICF2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterICF2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterICF2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterICF2ID2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ID2_SetInPlace,None,itkInPlaceImageFilterICF2ID2)
itkInPlaceImageFilterICF2ID2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ID2_GetInPlace,None,itkInPlaceImageFilterICF2ID2)
itkInPlaceImageFilterICF2ID2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ID2_InPlaceOn,None,itkInPlaceImageFilterICF2ID2)
itkInPlaceImageFilterICF2ID2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ID2_InPlaceOff,None,itkInPlaceImageFilterICF2ID2)
itkInPlaceImageFilterICF2ID2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ID2_CanRunInPlace,None,itkInPlaceImageFilterICF2ID2)
itkInPlaceImageFilterICF2ID2.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ID2_GetPointer,None,itkInPlaceImageFilterICF2ID2)
itkInPlaceImageFilterICF2ID2_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ID2_swigregister
itkInPlaceImageFilterICF2ID2_swigregister(itkInPlaceImageFilterICF2ID2)

def itkInPlaceImageFilterICF2ID2_cast(*args):
  """itkInPlaceImageFilterICF2ID2_cast(itkLightObject obj) -> itkInPlaceImageFilterICF2ID2"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ID2_cast(*args)

class itkInPlaceImageFilterICF2IF2(itkImageToImageFilterBPython.itkImageToImageFilterICF2IF2):
    """Proxy of C++ itkInPlaceImageFilterICF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2IF2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2IF2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2IF2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2IF2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2IF2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2IF2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2IF2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterICF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterICF2IF2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterICF2IF2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterICF2IF2
        
        Create a new object of the class itkInPlaceImageFilterICF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterICF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterICF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterICF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterICF2IF2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2IF2_SetInPlace,None,itkInPlaceImageFilterICF2IF2)
itkInPlaceImageFilterICF2IF2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2IF2_GetInPlace,None,itkInPlaceImageFilterICF2IF2)
itkInPlaceImageFilterICF2IF2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2IF2_InPlaceOn,None,itkInPlaceImageFilterICF2IF2)
itkInPlaceImageFilterICF2IF2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2IF2_InPlaceOff,None,itkInPlaceImageFilterICF2IF2)
itkInPlaceImageFilterICF2IF2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2IF2_CanRunInPlace,None,itkInPlaceImageFilterICF2IF2)
itkInPlaceImageFilterICF2IF2.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2IF2_GetPointer,None,itkInPlaceImageFilterICF2IF2)
itkInPlaceImageFilterICF2IF2_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2IF2_swigregister
itkInPlaceImageFilterICF2IF2_swigregister(itkInPlaceImageFilterICF2IF2)

def itkInPlaceImageFilterICF2IF2_cast(*args):
  """itkInPlaceImageFilterICF2IF2_cast(itkLightObject obj) -> itkInPlaceImageFilterICF2IF2"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2IF2_cast(*args)

class itkInPlaceImageFilterICF3ICF3(itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    """Proxy of C++ itkInPlaceImageFilterICF3ICF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterICF3ICF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterICF3ICF3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterICF3ICF3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterICF3ICF3
        
        Create a new object of the class itkInPlaceImageFilterICF3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterICF3ICF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterICF3ICF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterICF3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterICF3ICF3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF3_SetInPlace,None,itkInPlaceImageFilterICF3ICF3)
itkInPlaceImageFilterICF3ICF3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF3_GetInPlace,None,itkInPlaceImageFilterICF3ICF3)
itkInPlaceImageFilterICF3ICF3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF3_InPlaceOn,None,itkInPlaceImageFilterICF3ICF3)
itkInPlaceImageFilterICF3ICF3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF3_InPlaceOff,None,itkInPlaceImageFilterICF3ICF3)
itkInPlaceImageFilterICF3ICF3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF3_CanRunInPlace,None,itkInPlaceImageFilterICF3ICF3)
itkInPlaceImageFilterICF3ICF3.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF3_GetPointer,None,itkInPlaceImageFilterICF3ICF3)
itkInPlaceImageFilterICF3ICF3_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF3_swigregister
itkInPlaceImageFilterICF3ICF3_swigregister(itkInPlaceImageFilterICF3ICF3)

def itkInPlaceImageFilterICF3ICF3_cast(*args):
  """itkInPlaceImageFilterICF3ICF3_cast(itkLightObject obj) -> itkInPlaceImageFilterICF3ICF3"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF3_cast(*args)

class itkInPlaceImageFilterICF3ID3(itkImageToImageFilterBPython.itkImageToImageFilterICF3ID3):
    """Proxy of C++ itkInPlaceImageFilterICF3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ID3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ID3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ID3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ID3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ID3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ID3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ID3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterICF3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterICF3ID3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterICF3ID3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterICF3ID3
        
        Create a new object of the class itkInPlaceImageFilterICF3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterICF3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterICF3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterICF3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterICF3ID3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ID3_SetInPlace,None,itkInPlaceImageFilterICF3ID3)
itkInPlaceImageFilterICF3ID3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ID3_GetInPlace,None,itkInPlaceImageFilterICF3ID3)
itkInPlaceImageFilterICF3ID3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ID3_InPlaceOn,None,itkInPlaceImageFilterICF3ID3)
itkInPlaceImageFilterICF3ID3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ID3_InPlaceOff,None,itkInPlaceImageFilterICF3ID3)
itkInPlaceImageFilterICF3ID3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ID3_CanRunInPlace,None,itkInPlaceImageFilterICF3ID3)
itkInPlaceImageFilterICF3ID3.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ID3_GetPointer,None,itkInPlaceImageFilterICF3ID3)
itkInPlaceImageFilterICF3ID3_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ID3_swigregister
itkInPlaceImageFilterICF3ID3_swigregister(itkInPlaceImageFilterICF3ID3)

def itkInPlaceImageFilterICF3ID3_cast(*args):
  """itkInPlaceImageFilterICF3ID3_cast(itkLightObject obj) -> itkInPlaceImageFilterICF3ID3"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ID3_cast(*args)

class itkInPlaceImageFilterICF3IF3(itkImageToImageFilterBPython.itkImageToImageFilterICF3IF3):
    """Proxy of C++ itkInPlaceImageFilterICF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3IF3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3IF3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3IF3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3IF3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3IF3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3IF3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3IF3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterICF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterICF3IF3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterICF3IF3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterICF3IF3
        
        Create a new object of the class itkInPlaceImageFilterICF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterICF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterICF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterICF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterICF3IF3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3IF3_SetInPlace,None,itkInPlaceImageFilterICF3IF3)
itkInPlaceImageFilterICF3IF3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3IF3_GetInPlace,None,itkInPlaceImageFilterICF3IF3)
itkInPlaceImageFilterICF3IF3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3IF3_InPlaceOn,None,itkInPlaceImageFilterICF3IF3)
itkInPlaceImageFilterICF3IF3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3IF3_InPlaceOff,None,itkInPlaceImageFilterICF3IF3)
itkInPlaceImageFilterICF3IF3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3IF3_CanRunInPlace,None,itkInPlaceImageFilterICF3IF3)
itkInPlaceImageFilterICF3IF3.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3IF3_GetPointer,None,itkInPlaceImageFilterICF3IF3)
itkInPlaceImageFilterICF3IF3_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3IF3_swigregister
itkInPlaceImageFilterICF3IF3_swigregister(itkInPlaceImageFilterICF3IF3)

def itkInPlaceImageFilterICF3IF3_cast(*args):
  """itkInPlaceImageFilterICF3IF3_cast(itkLightObject obj) -> itkInPlaceImageFilterICF3IF3"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3IF3_cast(*args)

class itkInPlaceImageFilterICVF22ID2(itkImageToImageFilterBPython.itkImageToImageFilterICVF22ID2):
    """Proxy of C++ itkInPlaceImageFilterICVF22ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22ID2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22ID2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22ID2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22ID2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22ID2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22ID2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22ID2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterICVF22ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterICVF22ID2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterICVF22ID2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterICVF22ID2
        
        Create a new object of the class itkInPlaceImageFilterICVF22ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterICVF22ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterICVF22ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterICVF22ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterICVF22ID2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22ID2_SetInPlace,None,itkInPlaceImageFilterICVF22ID2)
itkInPlaceImageFilterICVF22ID2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22ID2_GetInPlace,None,itkInPlaceImageFilterICVF22ID2)
itkInPlaceImageFilterICVF22ID2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22ID2_InPlaceOn,None,itkInPlaceImageFilterICVF22ID2)
itkInPlaceImageFilterICVF22ID2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22ID2_InPlaceOff,None,itkInPlaceImageFilterICVF22ID2)
itkInPlaceImageFilterICVF22ID2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22ID2_CanRunInPlace,None,itkInPlaceImageFilterICVF22ID2)
itkInPlaceImageFilterICVF22ID2.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22ID2_GetPointer,None,itkInPlaceImageFilterICVF22ID2)
itkInPlaceImageFilterICVF22ID2_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22ID2_swigregister
itkInPlaceImageFilterICVF22ID2_swigregister(itkInPlaceImageFilterICVF22ID2)

def itkInPlaceImageFilterICVF22ID2_cast(*args):
  """itkInPlaceImageFilterICVF22ID2_cast(itkLightObject obj) -> itkInPlaceImageFilterICVF22ID2"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22ID2_cast(*args)

class itkInPlaceImageFilterICVF22IF2(itkImageToImageFilterBPython.itkImageToImageFilterICVF22IF2):
    """Proxy of C++ itkInPlaceImageFilterICVF22IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IF2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IF2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IF2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IF2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IF2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IF2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IF2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterICVF22IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterICVF22IF2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterICVF22IF2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterICVF22IF2
        
        Create a new object of the class itkInPlaceImageFilterICVF22IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterICVF22IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterICVF22IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterICVF22IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterICVF22IF2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IF2_SetInPlace,None,itkInPlaceImageFilterICVF22IF2)
itkInPlaceImageFilterICVF22IF2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IF2_GetInPlace,None,itkInPlaceImageFilterICVF22IF2)
itkInPlaceImageFilterICVF22IF2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IF2_InPlaceOn,None,itkInPlaceImageFilterICVF22IF2)
itkInPlaceImageFilterICVF22IF2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IF2_InPlaceOff,None,itkInPlaceImageFilterICVF22IF2)
itkInPlaceImageFilterICVF22IF2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IF2_CanRunInPlace,None,itkInPlaceImageFilterICVF22IF2)
itkInPlaceImageFilterICVF22IF2.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IF2_GetPointer,None,itkInPlaceImageFilterICVF22IF2)
itkInPlaceImageFilterICVF22IF2_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IF2_swigregister
itkInPlaceImageFilterICVF22IF2_swigregister(itkInPlaceImageFilterICVF22IF2)

def itkInPlaceImageFilterICVF22IF2_cast(*args):
  """itkInPlaceImageFilterICVF22IF2_cast(itkLightObject obj) -> itkInPlaceImageFilterICVF22IF2"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IF2_cast(*args)

class itkInPlaceImageFilterICVF22IUC2(itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUC2):
    """Proxy of C++ itkInPlaceImageFilterICVF22IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUC2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUC2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUC2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUC2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUC2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUC2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUC2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterICVF22IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterICVF22IUC2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterICVF22IUC2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterICVF22IUC2
        
        Create a new object of the class itkInPlaceImageFilterICVF22IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterICVF22IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterICVF22IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterICVF22IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterICVF22IUC2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUC2_SetInPlace,None,itkInPlaceImageFilterICVF22IUC2)
itkInPlaceImageFilterICVF22IUC2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUC2_GetInPlace,None,itkInPlaceImageFilterICVF22IUC2)
itkInPlaceImageFilterICVF22IUC2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUC2_InPlaceOn,None,itkInPlaceImageFilterICVF22IUC2)
itkInPlaceImageFilterICVF22IUC2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUC2_InPlaceOff,None,itkInPlaceImageFilterICVF22IUC2)
itkInPlaceImageFilterICVF22IUC2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUC2_CanRunInPlace,None,itkInPlaceImageFilterICVF22IUC2)
itkInPlaceImageFilterICVF22IUC2.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUC2_GetPointer,None,itkInPlaceImageFilterICVF22IUC2)
itkInPlaceImageFilterICVF22IUC2_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUC2_swigregister
itkInPlaceImageFilterICVF22IUC2_swigregister(itkInPlaceImageFilterICVF22IUC2)

def itkInPlaceImageFilterICVF22IUC2_cast(*args):
  """itkInPlaceImageFilterICVF22IUC2_cast(itkLightObject obj) -> itkInPlaceImageFilterICVF22IUC2"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUC2_cast(*args)

class itkInPlaceImageFilterICVF22IUL2(itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUL2):
    """Proxy of C++ itkInPlaceImageFilterICVF22IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUL2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUL2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUL2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUL2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUL2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUL2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUL2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterICVF22IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterICVF22IUL2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterICVF22IUL2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterICVF22IUL2
        
        Create a new object of the class itkInPlaceImageFilterICVF22IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterICVF22IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterICVF22IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterICVF22IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterICVF22IUL2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUL2_SetInPlace,None,itkInPlaceImageFilterICVF22IUL2)
itkInPlaceImageFilterICVF22IUL2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUL2_GetInPlace,None,itkInPlaceImageFilterICVF22IUL2)
itkInPlaceImageFilterICVF22IUL2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUL2_InPlaceOn,None,itkInPlaceImageFilterICVF22IUL2)
itkInPlaceImageFilterICVF22IUL2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUL2_InPlaceOff,None,itkInPlaceImageFilterICVF22IUL2)
itkInPlaceImageFilterICVF22IUL2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUL2_CanRunInPlace,None,itkInPlaceImageFilterICVF22IUL2)
itkInPlaceImageFilterICVF22IUL2.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUL2_GetPointer,None,itkInPlaceImageFilterICVF22IUL2)
itkInPlaceImageFilterICVF22IUL2_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUL2_swigregister
itkInPlaceImageFilterICVF22IUL2_swigregister(itkInPlaceImageFilterICVF22IUL2)

def itkInPlaceImageFilterICVF22IUL2_cast(*args):
  """itkInPlaceImageFilterICVF22IUL2_cast(itkLightObject obj) -> itkInPlaceImageFilterICVF22IUL2"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUL2_cast(*args)

class itkInPlaceImageFilterICVF22IUS2(itkImageToImageFilterBPython.itkImageToImageFilterICVF22IUS2):
    """Proxy of C++ itkInPlaceImageFilterICVF22IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUS2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUS2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUS2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUS2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUS2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUS2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUS2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterICVF22IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterICVF22IUS2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterICVF22IUS2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterICVF22IUS2
        
        Create a new object of the class itkInPlaceImageFilterICVF22IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterICVF22IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterICVF22IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterICVF22IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterICVF22IUS2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUS2_SetInPlace,None,itkInPlaceImageFilterICVF22IUS2)
itkInPlaceImageFilterICVF22IUS2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUS2_GetInPlace,None,itkInPlaceImageFilterICVF22IUS2)
itkInPlaceImageFilterICVF22IUS2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUS2_InPlaceOn,None,itkInPlaceImageFilterICVF22IUS2)
itkInPlaceImageFilterICVF22IUS2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUS2_InPlaceOff,None,itkInPlaceImageFilterICVF22IUS2)
itkInPlaceImageFilterICVF22IUS2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUS2_CanRunInPlace,None,itkInPlaceImageFilterICVF22IUS2)
itkInPlaceImageFilterICVF22IUS2.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUS2_GetPointer,None,itkInPlaceImageFilterICVF22IUS2)
itkInPlaceImageFilterICVF22IUS2_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUS2_swigregister
itkInPlaceImageFilterICVF22IUS2_swigregister(itkInPlaceImageFilterICVF22IUS2)

def itkInPlaceImageFilterICVF22IUS2_cast(*args):
  """itkInPlaceImageFilterICVF22IUS2_cast(itkLightObject obj) -> itkInPlaceImageFilterICVF22IUS2"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUS2_cast(*args)

class itkInPlaceImageFilterICVF33ID3(itkImageToImageFilterBPython.itkImageToImageFilterICVF33ID3):
    """Proxy of C++ itkInPlaceImageFilterICVF33ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33ID3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33ID3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33ID3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33ID3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33ID3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33ID3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33ID3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterICVF33ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterICVF33ID3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterICVF33ID3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterICVF33ID3
        
        Create a new object of the class itkInPlaceImageFilterICVF33ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterICVF33ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterICVF33ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterICVF33ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterICVF33ID3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33ID3_SetInPlace,None,itkInPlaceImageFilterICVF33ID3)
itkInPlaceImageFilterICVF33ID3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33ID3_GetInPlace,None,itkInPlaceImageFilterICVF33ID3)
itkInPlaceImageFilterICVF33ID3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33ID3_InPlaceOn,None,itkInPlaceImageFilterICVF33ID3)
itkInPlaceImageFilterICVF33ID3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33ID3_InPlaceOff,None,itkInPlaceImageFilterICVF33ID3)
itkInPlaceImageFilterICVF33ID3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33ID3_CanRunInPlace,None,itkInPlaceImageFilterICVF33ID3)
itkInPlaceImageFilterICVF33ID3.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33ID3_GetPointer,None,itkInPlaceImageFilterICVF33ID3)
itkInPlaceImageFilterICVF33ID3_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33ID3_swigregister
itkInPlaceImageFilterICVF33ID3_swigregister(itkInPlaceImageFilterICVF33ID3)

def itkInPlaceImageFilterICVF33ID3_cast(*args):
  """itkInPlaceImageFilterICVF33ID3_cast(itkLightObject obj) -> itkInPlaceImageFilterICVF33ID3"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33ID3_cast(*args)

class itkInPlaceImageFilterICVF33IF3(itkImageToImageFilterBPython.itkImageToImageFilterICVF33IF3):
    """Proxy of C++ itkInPlaceImageFilterICVF33IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IF3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IF3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IF3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IF3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IF3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IF3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IF3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterICVF33IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterICVF33IF3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterICVF33IF3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterICVF33IF3
        
        Create a new object of the class itkInPlaceImageFilterICVF33IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterICVF33IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterICVF33IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterICVF33IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterICVF33IF3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IF3_SetInPlace,None,itkInPlaceImageFilterICVF33IF3)
itkInPlaceImageFilterICVF33IF3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IF3_GetInPlace,None,itkInPlaceImageFilterICVF33IF3)
itkInPlaceImageFilterICVF33IF3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IF3_InPlaceOn,None,itkInPlaceImageFilterICVF33IF3)
itkInPlaceImageFilterICVF33IF3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IF3_InPlaceOff,None,itkInPlaceImageFilterICVF33IF3)
itkInPlaceImageFilterICVF33IF3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IF3_CanRunInPlace,None,itkInPlaceImageFilterICVF33IF3)
itkInPlaceImageFilterICVF33IF3.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IF3_GetPointer,None,itkInPlaceImageFilterICVF33IF3)
itkInPlaceImageFilterICVF33IF3_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IF3_swigregister
itkInPlaceImageFilterICVF33IF3_swigregister(itkInPlaceImageFilterICVF33IF3)

def itkInPlaceImageFilterICVF33IF3_cast(*args):
  """itkInPlaceImageFilterICVF33IF3_cast(itkLightObject obj) -> itkInPlaceImageFilterICVF33IF3"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IF3_cast(*args)

class itkInPlaceImageFilterICVF33IUC3(itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUC3):
    """Proxy of C++ itkInPlaceImageFilterICVF33IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUC3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUC3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUC3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUC3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUC3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUC3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUC3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterICVF33IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterICVF33IUC3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterICVF33IUC3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterICVF33IUC3
        
        Create a new object of the class itkInPlaceImageFilterICVF33IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterICVF33IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterICVF33IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterICVF33IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterICVF33IUC3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUC3_SetInPlace,None,itkInPlaceImageFilterICVF33IUC3)
itkInPlaceImageFilterICVF33IUC3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUC3_GetInPlace,None,itkInPlaceImageFilterICVF33IUC3)
itkInPlaceImageFilterICVF33IUC3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUC3_InPlaceOn,None,itkInPlaceImageFilterICVF33IUC3)
itkInPlaceImageFilterICVF33IUC3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUC3_InPlaceOff,None,itkInPlaceImageFilterICVF33IUC3)
itkInPlaceImageFilterICVF33IUC3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUC3_CanRunInPlace,None,itkInPlaceImageFilterICVF33IUC3)
itkInPlaceImageFilterICVF33IUC3.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUC3_GetPointer,None,itkInPlaceImageFilterICVF33IUC3)
itkInPlaceImageFilterICVF33IUC3_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUC3_swigregister
itkInPlaceImageFilterICVF33IUC3_swigregister(itkInPlaceImageFilterICVF33IUC3)

def itkInPlaceImageFilterICVF33IUC3_cast(*args):
  """itkInPlaceImageFilterICVF33IUC3_cast(itkLightObject obj) -> itkInPlaceImageFilterICVF33IUC3"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUC3_cast(*args)

class itkInPlaceImageFilterICVF33IUL3(itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUL3):
    """Proxy of C++ itkInPlaceImageFilterICVF33IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUL3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUL3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUL3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUL3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUL3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUL3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUL3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterICVF33IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterICVF33IUL3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterICVF33IUL3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterICVF33IUL3
        
        Create a new object of the class itkInPlaceImageFilterICVF33IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterICVF33IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterICVF33IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterICVF33IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterICVF33IUL3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUL3_SetInPlace,None,itkInPlaceImageFilterICVF33IUL3)
itkInPlaceImageFilterICVF33IUL3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUL3_GetInPlace,None,itkInPlaceImageFilterICVF33IUL3)
itkInPlaceImageFilterICVF33IUL3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUL3_InPlaceOn,None,itkInPlaceImageFilterICVF33IUL3)
itkInPlaceImageFilterICVF33IUL3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUL3_InPlaceOff,None,itkInPlaceImageFilterICVF33IUL3)
itkInPlaceImageFilterICVF33IUL3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUL3_CanRunInPlace,None,itkInPlaceImageFilterICVF33IUL3)
itkInPlaceImageFilterICVF33IUL3.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUL3_GetPointer,None,itkInPlaceImageFilterICVF33IUL3)
itkInPlaceImageFilterICVF33IUL3_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUL3_swigregister
itkInPlaceImageFilterICVF33IUL3_swigregister(itkInPlaceImageFilterICVF33IUL3)

def itkInPlaceImageFilterICVF33IUL3_cast(*args):
  """itkInPlaceImageFilterICVF33IUL3_cast(itkLightObject obj) -> itkInPlaceImageFilterICVF33IUL3"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUL3_cast(*args)

class itkInPlaceImageFilterICVF33IUS3(itkImageToImageFilterBPython.itkImageToImageFilterICVF33IUS3):
    """Proxy of C++ itkInPlaceImageFilterICVF33IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUS3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUS3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUS3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUS3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUS3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUS3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUS3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterICVF33IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterICVF33IUS3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterICVF33IUS3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterICVF33IUS3
        
        Create a new object of the class itkInPlaceImageFilterICVF33IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterICVF33IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterICVF33IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterICVF33IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterICVF33IUS3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUS3_SetInPlace,None,itkInPlaceImageFilterICVF33IUS3)
itkInPlaceImageFilterICVF33IUS3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUS3_GetInPlace,None,itkInPlaceImageFilterICVF33IUS3)
itkInPlaceImageFilterICVF33IUS3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUS3_InPlaceOn,None,itkInPlaceImageFilterICVF33IUS3)
itkInPlaceImageFilterICVF33IUS3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUS3_InPlaceOff,None,itkInPlaceImageFilterICVF33IUS3)
itkInPlaceImageFilterICVF33IUS3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUS3_CanRunInPlace,None,itkInPlaceImageFilterICVF33IUS3)
itkInPlaceImageFilterICVF33IUS3.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUS3_GetPointer,None,itkInPlaceImageFilterICVF33IUS3)
itkInPlaceImageFilterICVF33IUS3_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUS3_swigregister
itkInPlaceImageFilterICVF33IUS3_swigregister(itkInPlaceImageFilterICVF33IUS3)

def itkInPlaceImageFilterICVF33IUS3_cast(*args):
  """itkInPlaceImageFilterICVF33IUS3_cast(itkLightObject obj) -> itkInPlaceImageFilterICVF33IUS3"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUS3_cast(*args)

class itkInPlaceImageFilterID2ICF2(itkImageToImageFilterBPython.itkImageToImageFilterID2ICF2):
    """Proxy of C++ itkInPlaceImageFilterID2ICF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICF2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICF2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICF2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICF2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICF2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICF2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICF2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterID2ICF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterID2ICF2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterID2ICF2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterID2ICF2
        
        Create a new object of the class itkInPlaceImageFilterID2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterID2ICF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterID2ICF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterID2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterID2ICF2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICF2_SetInPlace,None,itkInPlaceImageFilterID2ICF2)
itkInPlaceImageFilterID2ICF2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICF2_GetInPlace,None,itkInPlaceImageFilterID2ICF2)
itkInPlaceImageFilterID2ICF2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICF2_InPlaceOn,None,itkInPlaceImageFilterID2ICF2)
itkInPlaceImageFilterID2ICF2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICF2_InPlaceOff,None,itkInPlaceImageFilterID2ICF2)
itkInPlaceImageFilterID2ICF2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICF2_CanRunInPlace,None,itkInPlaceImageFilterID2ICF2)
itkInPlaceImageFilterID2ICF2.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICF2_GetPointer,None,itkInPlaceImageFilterID2ICF2)
itkInPlaceImageFilterID2ICF2_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICF2_swigregister
itkInPlaceImageFilterID2ICF2_swigregister(itkInPlaceImageFilterID2ICF2)

def itkInPlaceImageFilterID2ICF2_cast(*args):
  """itkInPlaceImageFilterID2ICF2_cast(itkLightObject obj) -> itkInPlaceImageFilterID2ICF2"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICF2_cast(*args)

class itkInPlaceImageFilterID2ICVF22(itkImageToImageFilterBPython.itkImageToImageFilterID2ICVF22):
    """Proxy of C++ itkInPlaceImageFilterID2ICVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICVF22_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICVF22_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICVF22_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICVF22_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICVF22_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICVF22_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICVF22_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterID2ICVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterID2ICVF22"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterID2ICVF22"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterID2ICVF22
        
        Create a new object of the class itkInPlaceImageFilterID2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterID2ICVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterID2ICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterID2ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterID2ICVF22.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICVF22_SetInPlace,None,itkInPlaceImageFilterID2ICVF22)
itkInPlaceImageFilterID2ICVF22.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICVF22_GetInPlace,None,itkInPlaceImageFilterID2ICVF22)
itkInPlaceImageFilterID2ICVF22.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICVF22_InPlaceOn,None,itkInPlaceImageFilterID2ICVF22)
itkInPlaceImageFilterID2ICVF22.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICVF22_InPlaceOff,None,itkInPlaceImageFilterID2ICVF22)
itkInPlaceImageFilterID2ICVF22.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICVF22_CanRunInPlace,None,itkInPlaceImageFilterID2ICVF22)
itkInPlaceImageFilterID2ICVF22.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICVF22_GetPointer,None,itkInPlaceImageFilterID2ICVF22)
itkInPlaceImageFilterID2ICVF22_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICVF22_swigregister
itkInPlaceImageFilterID2ICVF22_swigregister(itkInPlaceImageFilterID2ICVF22)

def itkInPlaceImageFilterID2ICVF22_cast(*args):
  """itkInPlaceImageFilterID2ICVF22_cast(itkLightObject obj) -> itkInPlaceImageFilterID2ICVF22"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICVF22_cast(*args)

class itkInPlaceImageFilterID2IVF22(itkImageToImageFilterBPython.itkImageToImageFilterID2IVF22):
    """Proxy of C++ itkInPlaceImageFilterID2IVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2IVF22_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2IVF22_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2IVF22_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2IVF22_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2IVF22_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2IVF22_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2IVF22_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterID2IVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterID2IVF22"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2IVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterID2IVF22"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2IVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterID2IVF22
        
        Create a new object of the class itkInPlaceImageFilterID2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterID2IVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterID2IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterID2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterID2IVF22.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2IVF22_SetInPlace,None,itkInPlaceImageFilterID2IVF22)
itkInPlaceImageFilterID2IVF22.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2IVF22_GetInPlace,None,itkInPlaceImageFilterID2IVF22)
itkInPlaceImageFilterID2IVF22.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2IVF22_InPlaceOn,None,itkInPlaceImageFilterID2IVF22)
itkInPlaceImageFilterID2IVF22.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2IVF22_InPlaceOff,None,itkInPlaceImageFilterID2IVF22)
itkInPlaceImageFilterID2IVF22.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2IVF22_CanRunInPlace,None,itkInPlaceImageFilterID2IVF22)
itkInPlaceImageFilterID2IVF22.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2IVF22_GetPointer,None,itkInPlaceImageFilterID2IVF22)
itkInPlaceImageFilterID2IVF22_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2IVF22_swigregister
itkInPlaceImageFilterID2IVF22_swigregister(itkInPlaceImageFilterID2IVF22)

def itkInPlaceImageFilterID2IVF22_cast(*args):
  """itkInPlaceImageFilterID2IVF22_cast(itkLightObject obj) -> itkInPlaceImageFilterID2IVF22"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2IVF22_cast(*args)

class itkInPlaceImageFilterID2VID2(itkImageToImageFilterBPython.itkImageToImageFilterID2VID2):
    """Proxy of C++ itkInPlaceImageFilterID2VID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2VID2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2VID2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2VID2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2VID2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2VID2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2VID2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2VID2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterID2VID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterID2VID2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2VID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterID2VID2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2VID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterID2VID2
        
        Create a new object of the class itkInPlaceImageFilterID2VID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterID2VID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterID2VID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterID2VID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterID2VID2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2VID2_SetInPlace,None,itkInPlaceImageFilterID2VID2)
itkInPlaceImageFilterID2VID2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2VID2_GetInPlace,None,itkInPlaceImageFilterID2VID2)
itkInPlaceImageFilterID2VID2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2VID2_InPlaceOn,None,itkInPlaceImageFilterID2VID2)
itkInPlaceImageFilterID2VID2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2VID2_InPlaceOff,None,itkInPlaceImageFilterID2VID2)
itkInPlaceImageFilterID2VID2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2VID2_CanRunInPlace,None,itkInPlaceImageFilterID2VID2)
itkInPlaceImageFilterID2VID2.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2VID2_GetPointer,None,itkInPlaceImageFilterID2VID2)
itkInPlaceImageFilterID2VID2_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2VID2_swigregister
itkInPlaceImageFilterID2VID2_swigregister(itkInPlaceImageFilterID2VID2)

def itkInPlaceImageFilterID2VID2_cast(*args):
  """itkInPlaceImageFilterID2VID2_cast(itkLightObject obj) -> itkInPlaceImageFilterID2VID2"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2VID2_cast(*args)

class itkInPlaceImageFilterID3ICF3(itkImageToImageFilterBPython.itkImageToImageFilterID3ICF3):
    """Proxy of C++ itkInPlaceImageFilterID3ICF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICF3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICF3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICF3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICF3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICF3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICF3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICF3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterID3ICF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterID3ICF3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterID3ICF3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterID3ICF3
        
        Create a new object of the class itkInPlaceImageFilterID3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterID3ICF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterID3ICF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterID3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterID3ICF3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICF3_SetInPlace,None,itkInPlaceImageFilterID3ICF3)
itkInPlaceImageFilterID3ICF3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICF3_GetInPlace,None,itkInPlaceImageFilterID3ICF3)
itkInPlaceImageFilterID3ICF3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICF3_InPlaceOn,None,itkInPlaceImageFilterID3ICF3)
itkInPlaceImageFilterID3ICF3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICF3_InPlaceOff,None,itkInPlaceImageFilterID3ICF3)
itkInPlaceImageFilterID3ICF3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICF3_CanRunInPlace,None,itkInPlaceImageFilterID3ICF3)
itkInPlaceImageFilterID3ICF3.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICF3_GetPointer,None,itkInPlaceImageFilterID3ICF3)
itkInPlaceImageFilterID3ICF3_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICF3_swigregister
itkInPlaceImageFilterID3ICF3_swigregister(itkInPlaceImageFilterID3ICF3)

def itkInPlaceImageFilterID3ICF3_cast(*args):
  """itkInPlaceImageFilterID3ICF3_cast(itkLightObject obj) -> itkInPlaceImageFilterID3ICF3"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICF3_cast(*args)

class itkInPlaceImageFilterID3ICVF33(itkImageToImageFilterBPython.itkImageToImageFilterID3ICVF33):
    """Proxy of C++ itkInPlaceImageFilterID3ICVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICVF33_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICVF33_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICVF33_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICVF33_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICVF33_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICVF33_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICVF33_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterID3ICVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterID3ICVF33"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterID3ICVF33"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterID3ICVF33
        
        Create a new object of the class itkInPlaceImageFilterID3ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterID3ICVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterID3ICVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterID3ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterID3ICVF33.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICVF33_SetInPlace,None,itkInPlaceImageFilterID3ICVF33)
itkInPlaceImageFilterID3ICVF33.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICVF33_GetInPlace,None,itkInPlaceImageFilterID3ICVF33)
itkInPlaceImageFilterID3ICVF33.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICVF33_InPlaceOn,None,itkInPlaceImageFilterID3ICVF33)
itkInPlaceImageFilterID3ICVF33.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICVF33_InPlaceOff,None,itkInPlaceImageFilterID3ICVF33)
itkInPlaceImageFilterID3ICVF33.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICVF33_CanRunInPlace,None,itkInPlaceImageFilterID3ICVF33)
itkInPlaceImageFilterID3ICVF33.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICVF33_GetPointer,None,itkInPlaceImageFilterID3ICVF33)
itkInPlaceImageFilterID3ICVF33_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICVF33_swigregister
itkInPlaceImageFilterID3ICVF33_swigregister(itkInPlaceImageFilterID3ICVF33)

def itkInPlaceImageFilterID3ICVF33_cast(*args):
  """itkInPlaceImageFilterID3ICVF33_cast(itkLightObject obj) -> itkInPlaceImageFilterID3ICVF33"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICVF33_cast(*args)

class itkInPlaceImageFilterID3IVF33(itkImageToImageFilterBPython.itkImageToImageFilterID3IVF33):
    """Proxy of C++ itkInPlaceImageFilterID3IVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3IVF33_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3IVF33_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3IVF33_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3IVF33_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3IVF33_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3IVF33_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3IVF33_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterID3IVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterID3IVF33"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3IVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterID3IVF33"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3IVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterID3IVF33
        
        Create a new object of the class itkInPlaceImageFilterID3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterID3IVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterID3IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterID3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterID3IVF33.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3IVF33_SetInPlace,None,itkInPlaceImageFilterID3IVF33)
itkInPlaceImageFilterID3IVF33.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3IVF33_GetInPlace,None,itkInPlaceImageFilterID3IVF33)
itkInPlaceImageFilterID3IVF33.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3IVF33_InPlaceOn,None,itkInPlaceImageFilterID3IVF33)
itkInPlaceImageFilterID3IVF33.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3IVF33_InPlaceOff,None,itkInPlaceImageFilterID3IVF33)
itkInPlaceImageFilterID3IVF33.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3IVF33_CanRunInPlace,None,itkInPlaceImageFilterID3IVF33)
itkInPlaceImageFilterID3IVF33.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3IVF33_GetPointer,None,itkInPlaceImageFilterID3IVF33)
itkInPlaceImageFilterID3IVF33_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3IVF33_swigregister
itkInPlaceImageFilterID3IVF33_swigregister(itkInPlaceImageFilterID3IVF33)

def itkInPlaceImageFilterID3IVF33_cast(*args):
  """itkInPlaceImageFilterID3IVF33_cast(itkLightObject obj) -> itkInPlaceImageFilterID3IVF33"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3IVF33_cast(*args)

class itkInPlaceImageFilterID3VID3(itkImageToImageFilterBPython.itkImageToImageFilterID3VID3):
    """Proxy of C++ itkInPlaceImageFilterID3VID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3VID3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3VID3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3VID3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3VID3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3VID3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3VID3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3VID3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterID3VID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterID3VID3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3VID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterID3VID3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3VID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterID3VID3
        
        Create a new object of the class itkInPlaceImageFilterID3VID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterID3VID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterID3VID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterID3VID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterID3VID3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3VID3_SetInPlace,None,itkInPlaceImageFilterID3VID3)
itkInPlaceImageFilterID3VID3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3VID3_GetInPlace,None,itkInPlaceImageFilterID3VID3)
itkInPlaceImageFilterID3VID3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3VID3_InPlaceOn,None,itkInPlaceImageFilterID3VID3)
itkInPlaceImageFilterID3VID3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3VID3_InPlaceOff,None,itkInPlaceImageFilterID3VID3)
itkInPlaceImageFilterID3VID3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3VID3_CanRunInPlace,None,itkInPlaceImageFilterID3VID3)
itkInPlaceImageFilterID3VID3.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3VID3_GetPointer,None,itkInPlaceImageFilterID3VID3)
itkInPlaceImageFilterID3VID3_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3VID3_swigregister
itkInPlaceImageFilterID3VID3_swigregister(itkInPlaceImageFilterID3VID3)

def itkInPlaceImageFilterID3VID3_cast(*args):
  """itkInPlaceImageFilterID3VID3_cast(itkLightObject obj) -> itkInPlaceImageFilterID3VID3"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3VID3_cast(*args)

class itkInPlaceImageFilterIF2ICF2(itkImageToImageFilterBPython.itkImageToImageFilterIF2ICF2):
    """Proxy of C++ itkInPlaceImageFilterIF2ICF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICF2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICF2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICF2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICF2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICF2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICF2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICF2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIF2ICF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIF2ICF2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIF2ICF2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIF2ICF2
        
        Create a new object of the class itkInPlaceImageFilterIF2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIF2ICF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIF2ICF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIF2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIF2ICF2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICF2_SetInPlace,None,itkInPlaceImageFilterIF2ICF2)
itkInPlaceImageFilterIF2ICF2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICF2_GetInPlace,None,itkInPlaceImageFilterIF2ICF2)
itkInPlaceImageFilterIF2ICF2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICF2_InPlaceOn,None,itkInPlaceImageFilterIF2ICF2)
itkInPlaceImageFilterIF2ICF2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICF2_InPlaceOff,None,itkInPlaceImageFilterIF2ICF2)
itkInPlaceImageFilterIF2ICF2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICF2_CanRunInPlace,None,itkInPlaceImageFilterIF2ICF2)
itkInPlaceImageFilterIF2ICF2.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICF2_GetPointer,None,itkInPlaceImageFilterIF2ICF2)
itkInPlaceImageFilterIF2ICF2_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICF2_swigregister
itkInPlaceImageFilterIF2ICF2_swigregister(itkInPlaceImageFilterIF2ICF2)

def itkInPlaceImageFilterIF2ICF2_cast(*args):
  """itkInPlaceImageFilterIF2ICF2_cast(itkLightObject obj) -> itkInPlaceImageFilterIF2ICF2"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICF2_cast(*args)

class itkInPlaceImageFilterIF2ICVF22(itkImageToImageFilterBPython.itkImageToImageFilterIF2ICVF22):
    """Proxy of C++ itkInPlaceImageFilterIF2ICVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICVF22_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICVF22_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICVF22_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICVF22_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICVF22_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICVF22_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICVF22_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIF2ICVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIF2ICVF22"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIF2ICVF22"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIF2ICVF22
        
        Create a new object of the class itkInPlaceImageFilterIF2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIF2ICVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIF2ICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIF2ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIF2ICVF22.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICVF22_SetInPlace,None,itkInPlaceImageFilterIF2ICVF22)
itkInPlaceImageFilterIF2ICVF22.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICVF22_GetInPlace,None,itkInPlaceImageFilterIF2ICVF22)
itkInPlaceImageFilterIF2ICVF22.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICVF22_InPlaceOn,None,itkInPlaceImageFilterIF2ICVF22)
itkInPlaceImageFilterIF2ICVF22.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICVF22_InPlaceOff,None,itkInPlaceImageFilterIF2ICVF22)
itkInPlaceImageFilterIF2ICVF22.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICVF22_CanRunInPlace,None,itkInPlaceImageFilterIF2ICVF22)
itkInPlaceImageFilterIF2ICVF22.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICVF22_GetPointer,None,itkInPlaceImageFilterIF2ICVF22)
itkInPlaceImageFilterIF2ICVF22_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICVF22_swigregister
itkInPlaceImageFilterIF2ICVF22_swigregister(itkInPlaceImageFilterIF2ICVF22)

def itkInPlaceImageFilterIF2ICVF22_cast(*args):
  """itkInPlaceImageFilterIF2ICVF22_cast(itkLightObject obj) -> itkInPlaceImageFilterIF2ICVF22"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICVF22_cast(*args)

class itkInPlaceImageFilterIF2IVF22(itkImageToImageFilterBPython.itkImageToImageFilterIF2IVF22):
    """Proxy of C++ itkInPlaceImageFilterIF2IVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2IVF22_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2IVF22_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2IVF22_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2IVF22_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2IVF22_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2IVF22_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2IVF22_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIF2IVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIF2IVF22"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2IVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIF2IVF22"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2IVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIF2IVF22
        
        Create a new object of the class itkInPlaceImageFilterIF2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIF2IVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIF2IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIF2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIF2IVF22.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2IVF22_SetInPlace,None,itkInPlaceImageFilterIF2IVF22)
itkInPlaceImageFilterIF2IVF22.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2IVF22_GetInPlace,None,itkInPlaceImageFilterIF2IVF22)
itkInPlaceImageFilterIF2IVF22.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2IVF22_InPlaceOn,None,itkInPlaceImageFilterIF2IVF22)
itkInPlaceImageFilterIF2IVF22.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2IVF22_InPlaceOff,None,itkInPlaceImageFilterIF2IVF22)
itkInPlaceImageFilterIF2IVF22.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2IVF22_CanRunInPlace,None,itkInPlaceImageFilterIF2IVF22)
itkInPlaceImageFilterIF2IVF22.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2IVF22_GetPointer,None,itkInPlaceImageFilterIF2IVF22)
itkInPlaceImageFilterIF2IVF22_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2IVF22_swigregister
itkInPlaceImageFilterIF2IVF22_swigregister(itkInPlaceImageFilterIF2IVF22)

def itkInPlaceImageFilterIF2IVF22_cast(*args):
  """itkInPlaceImageFilterIF2IVF22_cast(itkLightObject obj) -> itkInPlaceImageFilterIF2IVF22"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2IVF22_cast(*args)

class itkInPlaceImageFilterIF2VIF2(itkImageToImageFilterBPython.itkImageToImageFilterIF2VIF2):
    """Proxy of C++ itkInPlaceImageFilterIF2VIF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2VIF2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2VIF2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2VIF2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2VIF2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2VIF2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2VIF2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2VIF2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIF2VIF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIF2VIF2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2VIF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIF2VIF2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2VIF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIF2VIF2
        
        Create a new object of the class itkInPlaceImageFilterIF2VIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIF2VIF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIF2VIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIF2VIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIF2VIF2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2VIF2_SetInPlace,None,itkInPlaceImageFilterIF2VIF2)
itkInPlaceImageFilterIF2VIF2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2VIF2_GetInPlace,None,itkInPlaceImageFilterIF2VIF2)
itkInPlaceImageFilterIF2VIF2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2VIF2_InPlaceOn,None,itkInPlaceImageFilterIF2VIF2)
itkInPlaceImageFilterIF2VIF2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2VIF2_InPlaceOff,None,itkInPlaceImageFilterIF2VIF2)
itkInPlaceImageFilterIF2VIF2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2VIF2_CanRunInPlace,None,itkInPlaceImageFilterIF2VIF2)
itkInPlaceImageFilterIF2VIF2.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2VIF2_GetPointer,None,itkInPlaceImageFilterIF2VIF2)
itkInPlaceImageFilterIF2VIF2_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2VIF2_swigregister
itkInPlaceImageFilterIF2VIF2_swigregister(itkInPlaceImageFilterIF2VIF2)

def itkInPlaceImageFilterIF2VIF2_cast(*args):
  """itkInPlaceImageFilterIF2VIF2_cast(itkLightObject obj) -> itkInPlaceImageFilterIF2VIF2"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2VIF2_cast(*args)

class itkInPlaceImageFilterIF3ICF3(itkImageToImageFilterBPython.itkImageToImageFilterIF3ICF3):
    """Proxy of C++ itkInPlaceImageFilterIF3ICF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICF3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICF3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICF3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICF3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICF3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICF3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICF3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIF3ICF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIF3ICF3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIF3ICF3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIF3ICF3
        
        Create a new object of the class itkInPlaceImageFilterIF3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIF3ICF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIF3ICF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIF3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIF3ICF3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICF3_SetInPlace,None,itkInPlaceImageFilterIF3ICF3)
itkInPlaceImageFilterIF3ICF3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICF3_GetInPlace,None,itkInPlaceImageFilterIF3ICF3)
itkInPlaceImageFilterIF3ICF3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICF3_InPlaceOn,None,itkInPlaceImageFilterIF3ICF3)
itkInPlaceImageFilterIF3ICF3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICF3_InPlaceOff,None,itkInPlaceImageFilterIF3ICF3)
itkInPlaceImageFilterIF3ICF3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICF3_CanRunInPlace,None,itkInPlaceImageFilterIF3ICF3)
itkInPlaceImageFilterIF3ICF3.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICF3_GetPointer,None,itkInPlaceImageFilterIF3ICF3)
itkInPlaceImageFilterIF3ICF3_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICF3_swigregister
itkInPlaceImageFilterIF3ICF3_swigregister(itkInPlaceImageFilterIF3ICF3)

def itkInPlaceImageFilterIF3ICF3_cast(*args):
  """itkInPlaceImageFilterIF3ICF3_cast(itkLightObject obj) -> itkInPlaceImageFilterIF3ICF3"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICF3_cast(*args)

class itkInPlaceImageFilterIF3ICVF33(itkImageToImageFilterBPython.itkImageToImageFilterIF3ICVF33):
    """Proxy of C++ itkInPlaceImageFilterIF3ICVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICVF33_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICVF33_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICVF33_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICVF33_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICVF33_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICVF33_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICVF33_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIF3ICVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIF3ICVF33"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIF3ICVF33"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIF3ICVF33
        
        Create a new object of the class itkInPlaceImageFilterIF3ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIF3ICVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIF3ICVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIF3ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIF3ICVF33.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICVF33_SetInPlace,None,itkInPlaceImageFilterIF3ICVF33)
itkInPlaceImageFilterIF3ICVF33.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICVF33_GetInPlace,None,itkInPlaceImageFilterIF3ICVF33)
itkInPlaceImageFilterIF3ICVF33.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICVF33_InPlaceOn,None,itkInPlaceImageFilterIF3ICVF33)
itkInPlaceImageFilterIF3ICVF33.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICVF33_InPlaceOff,None,itkInPlaceImageFilterIF3ICVF33)
itkInPlaceImageFilterIF3ICVF33.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICVF33_CanRunInPlace,None,itkInPlaceImageFilterIF3ICVF33)
itkInPlaceImageFilterIF3ICVF33.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICVF33_GetPointer,None,itkInPlaceImageFilterIF3ICVF33)
itkInPlaceImageFilterIF3ICVF33_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICVF33_swigregister
itkInPlaceImageFilterIF3ICVF33_swigregister(itkInPlaceImageFilterIF3ICVF33)

def itkInPlaceImageFilterIF3ICVF33_cast(*args):
  """itkInPlaceImageFilterIF3ICVF33_cast(itkLightObject obj) -> itkInPlaceImageFilterIF3ICVF33"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICVF33_cast(*args)

class itkInPlaceImageFilterIF3IVF33(itkImageToImageFilterBPython.itkImageToImageFilterIF3IVF33):
    """Proxy of C++ itkInPlaceImageFilterIF3IVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3IVF33_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3IVF33_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3IVF33_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3IVF33_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3IVF33_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3IVF33_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3IVF33_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIF3IVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIF3IVF33"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3IVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIF3IVF33"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3IVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIF3IVF33
        
        Create a new object of the class itkInPlaceImageFilterIF3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIF3IVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIF3IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIF3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIF3IVF33.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3IVF33_SetInPlace,None,itkInPlaceImageFilterIF3IVF33)
itkInPlaceImageFilterIF3IVF33.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3IVF33_GetInPlace,None,itkInPlaceImageFilterIF3IVF33)
itkInPlaceImageFilterIF3IVF33.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3IVF33_InPlaceOn,None,itkInPlaceImageFilterIF3IVF33)
itkInPlaceImageFilterIF3IVF33.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3IVF33_InPlaceOff,None,itkInPlaceImageFilterIF3IVF33)
itkInPlaceImageFilterIF3IVF33.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3IVF33_CanRunInPlace,None,itkInPlaceImageFilterIF3IVF33)
itkInPlaceImageFilterIF3IVF33.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3IVF33_GetPointer,None,itkInPlaceImageFilterIF3IVF33)
itkInPlaceImageFilterIF3IVF33_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3IVF33_swigregister
itkInPlaceImageFilterIF3IVF33_swigregister(itkInPlaceImageFilterIF3IVF33)

def itkInPlaceImageFilterIF3IVF33_cast(*args):
  """itkInPlaceImageFilterIF3IVF33_cast(itkLightObject obj) -> itkInPlaceImageFilterIF3IVF33"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3IVF33_cast(*args)

class itkInPlaceImageFilterIF3VIF3(itkImageToImageFilterBPython.itkImageToImageFilterIF3VIF3):
    """Proxy of C++ itkInPlaceImageFilterIF3VIF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3VIF3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3VIF3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3VIF3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3VIF3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3VIF3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3VIF3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3VIF3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIF3VIF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIF3VIF3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3VIF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIF3VIF3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3VIF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIF3VIF3
        
        Create a new object of the class itkInPlaceImageFilterIF3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIF3VIF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIF3VIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIF3VIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIF3VIF3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3VIF3_SetInPlace,None,itkInPlaceImageFilterIF3VIF3)
itkInPlaceImageFilterIF3VIF3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3VIF3_GetInPlace,None,itkInPlaceImageFilterIF3VIF3)
itkInPlaceImageFilterIF3VIF3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3VIF3_InPlaceOn,None,itkInPlaceImageFilterIF3VIF3)
itkInPlaceImageFilterIF3VIF3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3VIF3_InPlaceOff,None,itkInPlaceImageFilterIF3VIF3)
itkInPlaceImageFilterIF3VIF3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3VIF3_CanRunInPlace,None,itkInPlaceImageFilterIF3VIF3)
itkInPlaceImageFilterIF3VIF3.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3VIF3_GetPointer,None,itkInPlaceImageFilterIF3VIF3)
itkInPlaceImageFilterIF3VIF3_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3VIF3_swigregister
itkInPlaceImageFilterIF3VIF3_swigregister(itkInPlaceImageFilterIF3VIF3)

def itkInPlaceImageFilterIF3VIF3_cast(*args):
  """itkInPlaceImageFilterIF3VIF3_cast(itkLightObject obj) -> itkInPlaceImageFilterIF3VIF3"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3VIF3_cast(*args)

class itkInPlaceImageFilterIUC2ICVF22(itkImageToImageFilterBPython.itkImageToImageFilterIUC2ICVF22):
    """Proxy of C++ itkInPlaceImageFilterIUC2ICVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2ICVF22_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2ICVF22_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2ICVF22_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2ICVF22_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2ICVF22_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2ICVF22_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2ICVF22_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIUC2ICVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUC2ICVF22"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2ICVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUC2ICVF22"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2ICVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUC2ICVF22
        
        Create a new object of the class itkInPlaceImageFilterIUC2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUC2ICVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUC2ICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUC2ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUC2ICVF22.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2ICVF22_SetInPlace,None,itkInPlaceImageFilterIUC2ICVF22)
itkInPlaceImageFilterIUC2ICVF22.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2ICVF22_GetInPlace,None,itkInPlaceImageFilterIUC2ICVF22)
itkInPlaceImageFilterIUC2ICVF22.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2ICVF22_InPlaceOn,None,itkInPlaceImageFilterIUC2ICVF22)
itkInPlaceImageFilterIUC2ICVF22.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2ICVF22_InPlaceOff,None,itkInPlaceImageFilterIUC2ICVF22)
itkInPlaceImageFilterIUC2ICVF22.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2ICVF22_CanRunInPlace,None,itkInPlaceImageFilterIUC2ICVF22)
itkInPlaceImageFilterIUC2ICVF22.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2ICVF22_GetPointer,None,itkInPlaceImageFilterIUC2ICVF22)
itkInPlaceImageFilterIUC2ICVF22_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2ICVF22_swigregister
itkInPlaceImageFilterIUC2ICVF22_swigregister(itkInPlaceImageFilterIUC2ICVF22)

def itkInPlaceImageFilterIUC2ICVF22_cast(*args):
  """itkInPlaceImageFilterIUC2ICVF22_cast(itkLightObject obj) -> itkInPlaceImageFilterIUC2ICVF22"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2ICVF22_cast(*args)

class itkInPlaceImageFilterIUC2IVF22(itkImageToImageFilterBPython.itkImageToImageFilterIUC2IVF22):
    """Proxy of C++ itkInPlaceImageFilterIUC2IVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2IVF22_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2IVF22_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2IVF22_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2IVF22_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2IVF22_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2IVF22_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2IVF22_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIUC2IVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUC2IVF22"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2IVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUC2IVF22"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2IVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUC2IVF22
        
        Create a new object of the class itkInPlaceImageFilterIUC2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUC2IVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUC2IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUC2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUC2IVF22.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2IVF22_SetInPlace,None,itkInPlaceImageFilterIUC2IVF22)
itkInPlaceImageFilterIUC2IVF22.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2IVF22_GetInPlace,None,itkInPlaceImageFilterIUC2IVF22)
itkInPlaceImageFilterIUC2IVF22.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2IVF22_InPlaceOn,None,itkInPlaceImageFilterIUC2IVF22)
itkInPlaceImageFilterIUC2IVF22.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2IVF22_InPlaceOff,None,itkInPlaceImageFilterIUC2IVF22)
itkInPlaceImageFilterIUC2IVF22.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2IVF22_CanRunInPlace,None,itkInPlaceImageFilterIUC2IVF22)
itkInPlaceImageFilterIUC2IVF22.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2IVF22_GetPointer,None,itkInPlaceImageFilterIUC2IVF22)
itkInPlaceImageFilterIUC2IVF22_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2IVF22_swigregister
itkInPlaceImageFilterIUC2IVF22_swigregister(itkInPlaceImageFilterIUC2IVF22)

def itkInPlaceImageFilterIUC2IVF22_cast(*args):
  """itkInPlaceImageFilterIUC2IVF22_cast(itkLightObject obj) -> itkInPlaceImageFilterIUC2IVF22"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2IVF22_cast(*args)

class itkInPlaceImageFilterIUC2VIUC2(itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIUC2):
    """Proxy of C++ itkInPlaceImageFilterIUC2VIUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2VIUC2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2VIUC2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2VIUC2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2VIUC2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2VIUC2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2VIUC2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2VIUC2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIUC2VIUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUC2VIUC2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2VIUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUC2VIUC2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2VIUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUC2VIUC2
        
        Create a new object of the class itkInPlaceImageFilterIUC2VIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUC2VIUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUC2VIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUC2VIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUC2VIUC2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2VIUC2_SetInPlace,None,itkInPlaceImageFilterIUC2VIUC2)
itkInPlaceImageFilterIUC2VIUC2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2VIUC2_GetInPlace,None,itkInPlaceImageFilterIUC2VIUC2)
itkInPlaceImageFilterIUC2VIUC2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2VIUC2_InPlaceOn,None,itkInPlaceImageFilterIUC2VIUC2)
itkInPlaceImageFilterIUC2VIUC2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2VIUC2_InPlaceOff,None,itkInPlaceImageFilterIUC2VIUC2)
itkInPlaceImageFilterIUC2VIUC2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2VIUC2_CanRunInPlace,None,itkInPlaceImageFilterIUC2VIUC2)
itkInPlaceImageFilterIUC2VIUC2.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2VIUC2_GetPointer,None,itkInPlaceImageFilterIUC2VIUC2)
itkInPlaceImageFilterIUC2VIUC2_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2VIUC2_swigregister
itkInPlaceImageFilterIUC2VIUC2_swigregister(itkInPlaceImageFilterIUC2VIUC2)

def itkInPlaceImageFilterIUC2VIUC2_cast(*args):
  """itkInPlaceImageFilterIUC2VIUC2_cast(itkLightObject obj) -> itkInPlaceImageFilterIUC2VIUC2"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC2VIUC2_cast(*args)

class itkInPlaceImageFilterIUC3ICVF33(itkImageToImageFilterBPython.itkImageToImageFilterIUC3ICVF33):
    """Proxy of C++ itkInPlaceImageFilterIUC3ICVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3ICVF33_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3ICVF33_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3ICVF33_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3ICVF33_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3ICVF33_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3ICVF33_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3ICVF33_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIUC3ICVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUC3ICVF33"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3ICVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUC3ICVF33"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3ICVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUC3ICVF33
        
        Create a new object of the class itkInPlaceImageFilterIUC3ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUC3ICVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUC3ICVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUC3ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUC3ICVF33.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3ICVF33_SetInPlace,None,itkInPlaceImageFilterIUC3ICVF33)
itkInPlaceImageFilterIUC3ICVF33.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3ICVF33_GetInPlace,None,itkInPlaceImageFilterIUC3ICVF33)
itkInPlaceImageFilterIUC3ICVF33.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3ICVF33_InPlaceOn,None,itkInPlaceImageFilterIUC3ICVF33)
itkInPlaceImageFilterIUC3ICVF33.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3ICVF33_InPlaceOff,None,itkInPlaceImageFilterIUC3ICVF33)
itkInPlaceImageFilterIUC3ICVF33.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3ICVF33_CanRunInPlace,None,itkInPlaceImageFilterIUC3ICVF33)
itkInPlaceImageFilterIUC3ICVF33.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3ICVF33_GetPointer,None,itkInPlaceImageFilterIUC3ICVF33)
itkInPlaceImageFilterIUC3ICVF33_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3ICVF33_swigregister
itkInPlaceImageFilterIUC3ICVF33_swigregister(itkInPlaceImageFilterIUC3ICVF33)

def itkInPlaceImageFilterIUC3ICVF33_cast(*args):
  """itkInPlaceImageFilterIUC3ICVF33_cast(itkLightObject obj) -> itkInPlaceImageFilterIUC3ICVF33"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3ICVF33_cast(*args)

class itkInPlaceImageFilterIUC3IVF33(itkImageToImageFilterBPython.itkImageToImageFilterIUC3IVF33):
    """Proxy of C++ itkInPlaceImageFilterIUC3IVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3IVF33_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3IVF33_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3IVF33_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3IVF33_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3IVF33_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3IVF33_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3IVF33_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIUC3IVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUC3IVF33"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3IVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUC3IVF33"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3IVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUC3IVF33
        
        Create a new object of the class itkInPlaceImageFilterIUC3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUC3IVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUC3IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUC3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUC3IVF33.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3IVF33_SetInPlace,None,itkInPlaceImageFilterIUC3IVF33)
itkInPlaceImageFilterIUC3IVF33.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3IVF33_GetInPlace,None,itkInPlaceImageFilterIUC3IVF33)
itkInPlaceImageFilterIUC3IVF33.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3IVF33_InPlaceOn,None,itkInPlaceImageFilterIUC3IVF33)
itkInPlaceImageFilterIUC3IVF33.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3IVF33_InPlaceOff,None,itkInPlaceImageFilterIUC3IVF33)
itkInPlaceImageFilterIUC3IVF33.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3IVF33_CanRunInPlace,None,itkInPlaceImageFilterIUC3IVF33)
itkInPlaceImageFilterIUC3IVF33.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3IVF33_GetPointer,None,itkInPlaceImageFilterIUC3IVF33)
itkInPlaceImageFilterIUC3IVF33_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3IVF33_swigregister
itkInPlaceImageFilterIUC3IVF33_swigregister(itkInPlaceImageFilterIUC3IVF33)

def itkInPlaceImageFilterIUC3IVF33_cast(*args):
  """itkInPlaceImageFilterIUC3IVF33_cast(itkLightObject obj) -> itkInPlaceImageFilterIUC3IVF33"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3IVF33_cast(*args)

class itkInPlaceImageFilterIUC3VIUC3(itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIUC3):
    """Proxy of C++ itkInPlaceImageFilterIUC3VIUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3VIUC3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3VIUC3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3VIUC3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3VIUC3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3VIUC3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3VIUC3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3VIUC3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIUC3VIUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUC3VIUC3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3VIUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUC3VIUC3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3VIUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUC3VIUC3
        
        Create a new object of the class itkInPlaceImageFilterIUC3VIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUC3VIUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUC3VIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUC3VIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUC3VIUC3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3VIUC3_SetInPlace,None,itkInPlaceImageFilterIUC3VIUC3)
itkInPlaceImageFilterIUC3VIUC3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3VIUC3_GetInPlace,None,itkInPlaceImageFilterIUC3VIUC3)
itkInPlaceImageFilterIUC3VIUC3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3VIUC3_InPlaceOn,None,itkInPlaceImageFilterIUC3VIUC3)
itkInPlaceImageFilterIUC3VIUC3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3VIUC3_InPlaceOff,None,itkInPlaceImageFilterIUC3VIUC3)
itkInPlaceImageFilterIUC3VIUC3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3VIUC3_CanRunInPlace,None,itkInPlaceImageFilterIUC3VIUC3)
itkInPlaceImageFilterIUC3VIUC3.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3VIUC3_GetPointer,None,itkInPlaceImageFilterIUC3VIUC3)
itkInPlaceImageFilterIUC3VIUC3_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3VIUC3_swigregister
itkInPlaceImageFilterIUC3VIUC3_swigregister(itkInPlaceImageFilterIUC3VIUC3)

def itkInPlaceImageFilterIUC3VIUC3_cast(*args):
  """itkInPlaceImageFilterIUC3VIUC3_cast(itkLightObject obj) -> itkInPlaceImageFilterIUC3VIUC3"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3VIUC3_cast(*args)

class itkInPlaceImageFilterIUL2ICVF22(itkImageToImageFilterBPython.itkImageToImageFilterIUL2ICVF22):
    """Proxy of C++ itkInPlaceImageFilterIUL2ICVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2ICVF22_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2ICVF22_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2ICVF22_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2ICVF22_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2ICVF22_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2ICVF22_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2ICVF22_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIUL2ICVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUL2ICVF22"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2ICVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUL2ICVF22"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2ICVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUL2ICVF22
        
        Create a new object of the class itkInPlaceImageFilterIUL2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUL2ICVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUL2ICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUL2ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUL2ICVF22.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2ICVF22_SetInPlace,None,itkInPlaceImageFilterIUL2ICVF22)
itkInPlaceImageFilterIUL2ICVF22.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2ICVF22_GetInPlace,None,itkInPlaceImageFilterIUL2ICVF22)
itkInPlaceImageFilterIUL2ICVF22.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2ICVF22_InPlaceOn,None,itkInPlaceImageFilterIUL2ICVF22)
itkInPlaceImageFilterIUL2ICVF22.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2ICVF22_InPlaceOff,None,itkInPlaceImageFilterIUL2ICVF22)
itkInPlaceImageFilterIUL2ICVF22.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2ICVF22_CanRunInPlace,None,itkInPlaceImageFilterIUL2ICVF22)
itkInPlaceImageFilterIUL2ICVF22.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2ICVF22_GetPointer,None,itkInPlaceImageFilterIUL2ICVF22)
itkInPlaceImageFilterIUL2ICVF22_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2ICVF22_swigregister
itkInPlaceImageFilterIUL2ICVF22_swigregister(itkInPlaceImageFilterIUL2ICVF22)

def itkInPlaceImageFilterIUL2ICVF22_cast(*args):
  """itkInPlaceImageFilterIUL2ICVF22_cast(itkLightObject obj) -> itkInPlaceImageFilterIUL2ICVF22"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2ICVF22_cast(*args)

class itkInPlaceImageFilterIUL2IVF22(itkImageToImageFilterBPython.itkImageToImageFilterIUL2IVF22):
    """Proxy of C++ itkInPlaceImageFilterIUL2IVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2IVF22_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2IVF22_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2IVF22_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2IVF22_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2IVF22_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2IVF22_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2IVF22_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIUL2IVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUL2IVF22"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2IVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUL2IVF22"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2IVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUL2IVF22
        
        Create a new object of the class itkInPlaceImageFilterIUL2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUL2IVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUL2IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUL2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUL2IVF22.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2IVF22_SetInPlace,None,itkInPlaceImageFilterIUL2IVF22)
itkInPlaceImageFilterIUL2IVF22.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2IVF22_GetInPlace,None,itkInPlaceImageFilterIUL2IVF22)
itkInPlaceImageFilterIUL2IVF22.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2IVF22_InPlaceOn,None,itkInPlaceImageFilterIUL2IVF22)
itkInPlaceImageFilterIUL2IVF22.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2IVF22_InPlaceOff,None,itkInPlaceImageFilterIUL2IVF22)
itkInPlaceImageFilterIUL2IVF22.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2IVF22_CanRunInPlace,None,itkInPlaceImageFilterIUL2IVF22)
itkInPlaceImageFilterIUL2IVF22.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2IVF22_GetPointer,None,itkInPlaceImageFilterIUL2IVF22)
itkInPlaceImageFilterIUL2IVF22_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2IVF22_swigregister
itkInPlaceImageFilterIUL2IVF22_swigregister(itkInPlaceImageFilterIUL2IVF22)

def itkInPlaceImageFilterIUL2IVF22_cast(*args):
  """itkInPlaceImageFilterIUL2IVF22_cast(itkLightObject obj) -> itkInPlaceImageFilterIUL2IVF22"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2IVF22_cast(*args)

class itkInPlaceImageFilterIUL2VIUL2(itkImageToImageFilterBPython.itkImageToImageFilterIUL2VIUL2):
    """Proxy of C++ itkInPlaceImageFilterIUL2VIUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2VIUL2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2VIUL2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2VIUL2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2VIUL2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2VIUL2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2VIUL2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2VIUL2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIUL2VIUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUL2VIUL2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2VIUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUL2VIUL2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2VIUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUL2VIUL2
        
        Create a new object of the class itkInPlaceImageFilterIUL2VIUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUL2VIUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUL2VIUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUL2VIUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUL2VIUL2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2VIUL2_SetInPlace,None,itkInPlaceImageFilterIUL2VIUL2)
itkInPlaceImageFilterIUL2VIUL2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2VIUL2_GetInPlace,None,itkInPlaceImageFilterIUL2VIUL2)
itkInPlaceImageFilterIUL2VIUL2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2VIUL2_InPlaceOn,None,itkInPlaceImageFilterIUL2VIUL2)
itkInPlaceImageFilterIUL2VIUL2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2VIUL2_InPlaceOff,None,itkInPlaceImageFilterIUL2VIUL2)
itkInPlaceImageFilterIUL2VIUL2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2VIUL2_CanRunInPlace,None,itkInPlaceImageFilterIUL2VIUL2)
itkInPlaceImageFilterIUL2VIUL2.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2VIUL2_GetPointer,None,itkInPlaceImageFilterIUL2VIUL2)
itkInPlaceImageFilterIUL2VIUL2_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2VIUL2_swigregister
itkInPlaceImageFilterIUL2VIUL2_swigregister(itkInPlaceImageFilterIUL2VIUL2)

def itkInPlaceImageFilterIUL2VIUL2_cast(*args):
  """itkInPlaceImageFilterIUL2VIUL2_cast(itkLightObject obj) -> itkInPlaceImageFilterIUL2VIUL2"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL2VIUL2_cast(*args)

class itkInPlaceImageFilterIUL3ICVF33(itkImageToImageFilterBPython.itkImageToImageFilterIUL3ICVF33):
    """Proxy of C++ itkInPlaceImageFilterIUL3ICVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3ICVF33_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3ICVF33_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3ICVF33_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3ICVF33_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3ICVF33_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3ICVF33_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3ICVF33_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIUL3ICVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUL3ICVF33"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3ICVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUL3ICVF33"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3ICVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUL3ICVF33
        
        Create a new object of the class itkInPlaceImageFilterIUL3ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUL3ICVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUL3ICVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUL3ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUL3ICVF33.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3ICVF33_SetInPlace,None,itkInPlaceImageFilterIUL3ICVF33)
itkInPlaceImageFilterIUL3ICVF33.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3ICVF33_GetInPlace,None,itkInPlaceImageFilterIUL3ICVF33)
itkInPlaceImageFilterIUL3ICVF33.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3ICVF33_InPlaceOn,None,itkInPlaceImageFilterIUL3ICVF33)
itkInPlaceImageFilterIUL3ICVF33.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3ICVF33_InPlaceOff,None,itkInPlaceImageFilterIUL3ICVF33)
itkInPlaceImageFilterIUL3ICVF33.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3ICVF33_CanRunInPlace,None,itkInPlaceImageFilterIUL3ICVF33)
itkInPlaceImageFilterIUL3ICVF33.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3ICVF33_GetPointer,None,itkInPlaceImageFilterIUL3ICVF33)
itkInPlaceImageFilterIUL3ICVF33_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3ICVF33_swigregister
itkInPlaceImageFilterIUL3ICVF33_swigregister(itkInPlaceImageFilterIUL3ICVF33)

def itkInPlaceImageFilterIUL3ICVF33_cast(*args):
  """itkInPlaceImageFilterIUL3ICVF33_cast(itkLightObject obj) -> itkInPlaceImageFilterIUL3ICVF33"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3ICVF33_cast(*args)

class itkInPlaceImageFilterIUL3IVF33(itkImageToImageFilterBPython.itkImageToImageFilterIUL3IVF33):
    """Proxy of C++ itkInPlaceImageFilterIUL3IVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3IVF33_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3IVF33_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3IVF33_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3IVF33_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3IVF33_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3IVF33_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3IVF33_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIUL3IVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUL3IVF33"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3IVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUL3IVF33"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3IVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUL3IVF33
        
        Create a new object of the class itkInPlaceImageFilterIUL3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUL3IVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUL3IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUL3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUL3IVF33.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3IVF33_SetInPlace,None,itkInPlaceImageFilterIUL3IVF33)
itkInPlaceImageFilterIUL3IVF33.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3IVF33_GetInPlace,None,itkInPlaceImageFilterIUL3IVF33)
itkInPlaceImageFilterIUL3IVF33.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3IVF33_InPlaceOn,None,itkInPlaceImageFilterIUL3IVF33)
itkInPlaceImageFilterIUL3IVF33.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3IVF33_InPlaceOff,None,itkInPlaceImageFilterIUL3IVF33)
itkInPlaceImageFilterIUL3IVF33.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3IVF33_CanRunInPlace,None,itkInPlaceImageFilterIUL3IVF33)
itkInPlaceImageFilterIUL3IVF33.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3IVF33_GetPointer,None,itkInPlaceImageFilterIUL3IVF33)
itkInPlaceImageFilterIUL3IVF33_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3IVF33_swigregister
itkInPlaceImageFilterIUL3IVF33_swigregister(itkInPlaceImageFilterIUL3IVF33)

def itkInPlaceImageFilterIUL3IVF33_cast(*args):
  """itkInPlaceImageFilterIUL3IVF33_cast(itkLightObject obj) -> itkInPlaceImageFilterIUL3IVF33"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3IVF33_cast(*args)

class itkInPlaceImageFilterIUL3VIUL3(itkImageToImageFilterBPython.itkImageToImageFilterIUL3VIUL3):
    """Proxy of C++ itkInPlaceImageFilterIUL3VIUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3VIUL3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3VIUL3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3VIUL3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3VIUL3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3VIUL3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3VIUL3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3VIUL3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIUL3VIUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUL3VIUL3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3VIUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUL3VIUL3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3VIUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUL3VIUL3
        
        Create a new object of the class itkInPlaceImageFilterIUL3VIUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUL3VIUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUL3VIUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUL3VIUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUL3VIUL3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3VIUL3_SetInPlace,None,itkInPlaceImageFilterIUL3VIUL3)
itkInPlaceImageFilterIUL3VIUL3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3VIUL3_GetInPlace,None,itkInPlaceImageFilterIUL3VIUL3)
itkInPlaceImageFilterIUL3VIUL3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3VIUL3_InPlaceOn,None,itkInPlaceImageFilterIUL3VIUL3)
itkInPlaceImageFilterIUL3VIUL3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3VIUL3_InPlaceOff,None,itkInPlaceImageFilterIUL3VIUL3)
itkInPlaceImageFilterIUL3VIUL3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3VIUL3_CanRunInPlace,None,itkInPlaceImageFilterIUL3VIUL3)
itkInPlaceImageFilterIUL3VIUL3.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3VIUL3_GetPointer,None,itkInPlaceImageFilterIUL3VIUL3)
itkInPlaceImageFilterIUL3VIUL3_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3VIUL3_swigregister
itkInPlaceImageFilterIUL3VIUL3_swigregister(itkInPlaceImageFilterIUL3VIUL3)

def itkInPlaceImageFilterIUL3VIUL3_cast(*args):
  """itkInPlaceImageFilterIUL3VIUL3_cast(itkLightObject obj) -> itkInPlaceImageFilterIUL3VIUL3"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUL3VIUL3_cast(*args)

class itkInPlaceImageFilterIUS2ICVF22(itkImageToImageFilterBPython.itkImageToImageFilterIUS2ICVF22):
    """Proxy of C++ itkInPlaceImageFilterIUS2ICVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2ICVF22_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2ICVF22_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2ICVF22_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2ICVF22_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2ICVF22_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2ICVF22_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2ICVF22_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIUS2ICVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUS2ICVF22"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2ICVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUS2ICVF22"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2ICVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUS2ICVF22
        
        Create a new object of the class itkInPlaceImageFilterIUS2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUS2ICVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUS2ICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUS2ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUS2ICVF22.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2ICVF22_SetInPlace,None,itkInPlaceImageFilterIUS2ICVF22)
itkInPlaceImageFilterIUS2ICVF22.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2ICVF22_GetInPlace,None,itkInPlaceImageFilterIUS2ICVF22)
itkInPlaceImageFilterIUS2ICVF22.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2ICVF22_InPlaceOn,None,itkInPlaceImageFilterIUS2ICVF22)
itkInPlaceImageFilterIUS2ICVF22.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2ICVF22_InPlaceOff,None,itkInPlaceImageFilterIUS2ICVF22)
itkInPlaceImageFilterIUS2ICVF22.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2ICVF22_CanRunInPlace,None,itkInPlaceImageFilterIUS2ICVF22)
itkInPlaceImageFilterIUS2ICVF22.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2ICVF22_GetPointer,None,itkInPlaceImageFilterIUS2ICVF22)
itkInPlaceImageFilterIUS2ICVF22_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2ICVF22_swigregister
itkInPlaceImageFilterIUS2ICVF22_swigregister(itkInPlaceImageFilterIUS2ICVF22)

def itkInPlaceImageFilterIUS2ICVF22_cast(*args):
  """itkInPlaceImageFilterIUS2ICVF22_cast(itkLightObject obj) -> itkInPlaceImageFilterIUS2ICVF22"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2ICVF22_cast(*args)

class itkInPlaceImageFilterIUS2IVF22(itkImageToImageFilterBPython.itkImageToImageFilterIUS2IVF22):
    """Proxy of C++ itkInPlaceImageFilterIUS2IVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2IVF22_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2IVF22_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2IVF22_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2IVF22_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2IVF22_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2IVF22_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2IVF22_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIUS2IVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUS2IVF22"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2IVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUS2IVF22"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2IVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUS2IVF22
        
        Create a new object of the class itkInPlaceImageFilterIUS2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUS2IVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUS2IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUS2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUS2IVF22.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2IVF22_SetInPlace,None,itkInPlaceImageFilterIUS2IVF22)
itkInPlaceImageFilterIUS2IVF22.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2IVF22_GetInPlace,None,itkInPlaceImageFilterIUS2IVF22)
itkInPlaceImageFilterIUS2IVF22.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2IVF22_InPlaceOn,None,itkInPlaceImageFilterIUS2IVF22)
itkInPlaceImageFilterIUS2IVF22.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2IVF22_InPlaceOff,None,itkInPlaceImageFilterIUS2IVF22)
itkInPlaceImageFilterIUS2IVF22.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2IVF22_CanRunInPlace,None,itkInPlaceImageFilterIUS2IVF22)
itkInPlaceImageFilterIUS2IVF22.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2IVF22_GetPointer,None,itkInPlaceImageFilterIUS2IVF22)
itkInPlaceImageFilterIUS2IVF22_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2IVF22_swigregister
itkInPlaceImageFilterIUS2IVF22_swigregister(itkInPlaceImageFilterIUS2IVF22)

def itkInPlaceImageFilterIUS2IVF22_cast(*args):
  """itkInPlaceImageFilterIUS2IVF22_cast(itkLightObject obj) -> itkInPlaceImageFilterIUS2IVF22"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2IVF22_cast(*args)

class itkInPlaceImageFilterIUS2VIUS2(itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIUS2):
    """Proxy of C++ itkInPlaceImageFilterIUS2VIUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2VIUS2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2VIUS2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2VIUS2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2VIUS2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2VIUS2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2VIUS2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2VIUS2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIUS2VIUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUS2VIUS2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2VIUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUS2VIUS2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2VIUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUS2VIUS2
        
        Create a new object of the class itkInPlaceImageFilterIUS2VIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUS2VIUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUS2VIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUS2VIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUS2VIUS2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2VIUS2_SetInPlace,None,itkInPlaceImageFilterIUS2VIUS2)
itkInPlaceImageFilterIUS2VIUS2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2VIUS2_GetInPlace,None,itkInPlaceImageFilterIUS2VIUS2)
itkInPlaceImageFilterIUS2VIUS2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2VIUS2_InPlaceOn,None,itkInPlaceImageFilterIUS2VIUS2)
itkInPlaceImageFilterIUS2VIUS2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2VIUS2_InPlaceOff,None,itkInPlaceImageFilterIUS2VIUS2)
itkInPlaceImageFilterIUS2VIUS2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2VIUS2_CanRunInPlace,None,itkInPlaceImageFilterIUS2VIUS2)
itkInPlaceImageFilterIUS2VIUS2.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2VIUS2_GetPointer,None,itkInPlaceImageFilterIUS2VIUS2)
itkInPlaceImageFilterIUS2VIUS2_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2VIUS2_swigregister
itkInPlaceImageFilterIUS2VIUS2_swigregister(itkInPlaceImageFilterIUS2VIUS2)

def itkInPlaceImageFilterIUS2VIUS2_cast(*args):
  """itkInPlaceImageFilterIUS2VIUS2_cast(itkLightObject obj) -> itkInPlaceImageFilterIUS2VIUS2"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS2VIUS2_cast(*args)

class itkInPlaceImageFilterIUS3ICVF33(itkImageToImageFilterBPython.itkImageToImageFilterIUS3ICVF33):
    """Proxy of C++ itkInPlaceImageFilterIUS3ICVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3ICVF33_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3ICVF33_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3ICVF33_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3ICVF33_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3ICVF33_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3ICVF33_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3ICVF33_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIUS3ICVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUS3ICVF33"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3ICVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUS3ICVF33"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3ICVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUS3ICVF33
        
        Create a new object of the class itkInPlaceImageFilterIUS3ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUS3ICVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUS3ICVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUS3ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUS3ICVF33.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3ICVF33_SetInPlace,None,itkInPlaceImageFilterIUS3ICVF33)
itkInPlaceImageFilterIUS3ICVF33.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3ICVF33_GetInPlace,None,itkInPlaceImageFilterIUS3ICVF33)
itkInPlaceImageFilterIUS3ICVF33.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3ICVF33_InPlaceOn,None,itkInPlaceImageFilterIUS3ICVF33)
itkInPlaceImageFilterIUS3ICVF33.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3ICVF33_InPlaceOff,None,itkInPlaceImageFilterIUS3ICVF33)
itkInPlaceImageFilterIUS3ICVF33.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3ICVF33_CanRunInPlace,None,itkInPlaceImageFilterIUS3ICVF33)
itkInPlaceImageFilterIUS3ICVF33.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3ICVF33_GetPointer,None,itkInPlaceImageFilterIUS3ICVF33)
itkInPlaceImageFilterIUS3ICVF33_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3ICVF33_swigregister
itkInPlaceImageFilterIUS3ICVF33_swigregister(itkInPlaceImageFilterIUS3ICVF33)

def itkInPlaceImageFilterIUS3ICVF33_cast(*args):
  """itkInPlaceImageFilterIUS3ICVF33_cast(itkLightObject obj) -> itkInPlaceImageFilterIUS3ICVF33"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3ICVF33_cast(*args)

class itkInPlaceImageFilterIUS3IVF33(itkImageToImageFilterBPython.itkImageToImageFilterIUS3IVF33):
    """Proxy of C++ itkInPlaceImageFilterIUS3IVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3IVF33_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3IVF33_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3IVF33_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3IVF33_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3IVF33_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3IVF33_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3IVF33_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIUS3IVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUS3IVF33"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3IVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUS3IVF33"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3IVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUS3IVF33
        
        Create a new object of the class itkInPlaceImageFilterIUS3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUS3IVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUS3IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUS3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUS3IVF33.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3IVF33_SetInPlace,None,itkInPlaceImageFilterIUS3IVF33)
itkInPlaceImageFilterIUS3IVF33.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3IVF33_GetInPlace,None,itkInPlaceImageFilterIUS3IVF33)
itkInPlaceImageFilterIUS3IVF33.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3IVF33_InPlaceOn,None,itkInPlaceImageFilterIUS3IVF33)
itkInPlaceImageFilterIUS3IVF33.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3IVF33_InPlaceOff,None,itkInPlaceImageFilterIUS3IVF33)
itkInPlaceImageFilterIUS3IVF33.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3IVF33_CanRunInPlace,None,itkInPlaceImageFilterIUS3IVF33)
itkInPlaceImageFilterIUS3IVF33.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3IVF33_GetPointer,None,itkInPlaceImageFilterIUS3IVF33)
itkInPlaceImageFilterIUS3IVF33_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3IVF33_swigregister
itkInPlaceImageFilterIUS3IVF33_swigregister(itkInPlaceImageFilterIUS3IVF33)

def itkInPlaceImageFilterIUS3IVF33_cast(*args):
  """itkInPlaceImageFilterIUS3IVF33_cast(itkLightObject obj) -> itkInPlaceImageFilterIUS3IVF33"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3IVF33_cast(*args)

class itkInPlaceImageFilterIUS3VIUS3(itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIUS3):
    """Proxy of C++ itkInPlaceImageFilterIUS3VIUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3VIUS3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3VIUS3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3VIUS3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3VIUS3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3VIUS3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3VIUS3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3VIUS3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIUS3VIUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIUS3VIUS3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3VIUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIUS3VIUS3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3VIUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIUS3VIUS3
        
        Create a new object of the class itkInPlaceImageFilterIUS3VIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIUS3VIUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIUS3VIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIUS3VIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIUS3VIUS3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3VIUS3_SetInPlace,None,itkInPlaceImageFilterIUS3VIUS3)
itkInPlaceImageFilterIUS3VIUS3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3VIUS3_GetInPlace,None,itkInPlaceImageFilterIUS3VIUS3)
itkInPlaceImageFilterIUS3VIUS3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3VIUS3_InPlaceOn,None,itkInPlaceImageFilterIUS3VIUS3)
itkInPlaceImageFilterIUS3VIUS3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3VIUS3_InPlaceOff,None,itkInPlaceImageFilterIUS3VIUS3)
itkInPlaceImageFilterIUS3VIUS3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3VIUS3_CanRunInPlace,None,itkInPlaceImageFilterIUS3VIUS3)
itkInPlaceImageFilterIUS3VIUS3.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3VIUS3_GetPointer,None,itkInPlaceImageFilterIUS3VIUS3)
itkInPlaceImageFilterIUS3VIUS3_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3VIUS3_swigregister
itkInPlaceImageFilterIUS3VIUS3_swigregister(itkInPlaceImageFilterIUS3VIUS3)

def itkInPlaceImageFilterIUS3VIUS3_cast(*args):
  """itkInPlaceImageFilterIUS3VIUS3_cast(itkLightObject obj) -> itkInPlaceImageFilterIUS3VIUS3"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3VIUS3_cast(*args)

class itkInPlaceImageFilterIVF22ID2(itkImageToImageFilterBPython.itkImageToImageFilterIVF22ID2):
    """Proxy of C++ itkInPlaceImageFilterIVF22ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22ID2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22ID2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22ID2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22ID2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22ID2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22ID2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22ID2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIVF22ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIVF22ID2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIVF22ID2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIVF22ID2
        
        Create a new object of the class itkInPlaceImageFilterIVF22ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIVF22ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIVF22ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIVF22ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIVF22ID2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22ID2_SetInPlace,None,itkInPlaceImageFilterIVF22ID2)
itkInPlaceImageFilterIVF22ID2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22ID2_GetInPlace,None,itkInPlaceImageFilterIVF22ID2)
itkInPlaceImageFilterIVF22ID2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22ID2_InPlaceOn,None,itkInPlaceImageFilterIVF22ID2)
itkInPlaceImageFilterIVF22ID2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22ID2_InPlaceOff,None,itkInPlaceImageFilterIVF22ID2)
itkInPlaceImageFilterIVF22ID2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22ID2_CanRunInPlace,None,itkInPlaceImageFilterIVF22ID2)
itkInPlaceImageFilterIVF22ID2.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22ID2_GetPointer,None,itkInPlaceImageFilterIVF22ID2)
itkInPlaceImageFilterIVF22ID2_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22ID2_swigregister
itkInPlaceImageFilterIVF22ID2_swigregister(itkInPlaceImageFilterIVF22ID2)

def itkInPlaceImageFilterIVF22ID2_cast(*args):
  """itkInPlaceImageFilterIVF22ID2_cast(itkLightObject obj) -> itkInPlaceImageFilterIVF22ID2"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22ID2_cast(*args)

class itkInPlaceImageFilterIVF22IF2(itkImageToImageFilterBPython.itkImageToImageFilterIVF22IF2):
    """Proxy of C++ itkInPlaceImageFilterIVF22IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IF2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IF2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IF2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IF2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IF2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IF2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IF2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIVF22IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIVF22IF2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIVF22IF2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIVF22IF2
        
        Create a new object of the class itkInPlaceImageFilterIVF22IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIVF22IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIVF22IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIVF22IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIVF22IF2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IF2_SetInPlace,None,itkInPlaceImageFilterIVF22IF2)
itkInPlaceImageFilterIVF22IF2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IF2_GetInPlace,None,itkInPlaceImageFilterIVF22IF2)
itkInPlaceImageFilterIVF22IF2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IF2_InPlaceOn,None,itkInPlaceImageFilterIVF22IF2)
itkInPlaceImageFilterIVF22IF2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IF2_InPlaceOff,None,itkInPlaceImageFilterIVF22IF2)
itkInPlaceImageFilterIVF22IF2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IF2_CanRunInPlace,None,itkInPlaceImageFilterIVF22IF2)
itkInPlaceImageFilterIVF22IF2.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IF2_GetPointer,None,itkInPlaceImageFilterIVF22IF2)
itkInPlaceImageFilterIVF22IF2_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IF2_swigregister
itkInPlaceImageFilterIVF22IF2_swigregister(itkInPlaceImageFilterIVF22IF2)

def itkInPlaceImageFilterIVF22IF2_cast(*args):
  """itkInPlaceImageFilterIVF22IF2_cast(itkLightObject obj) -> itkInPlaceImageFilterIVF22IF2"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IF2_cast(*args)

class itkInPlaceImageFilterIVF22IUC2(itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUC2):
    """Proxy of C++ itkInPlaceImageFilterIVF22IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUC2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUC2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUC2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUC2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUC2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUC2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUC2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIVF22IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIVF22IUC2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIVF22IUC2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIVF22IUC2
        
        Create a new object of the class itkInPlaceImageFilterIVF22IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIVF22IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIVF22IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIVF22IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIVF22IUC2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUC2_SetInPlace,None,itkInPlaceImageFilterIVF22IUC2)
itkInPlaceImageFilterIVF22IUC2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUC2_GetInPlace,None,itkInPlaceImageFilterIVF22IUC2)
itkInPlaceImageFilterIVF22IUC2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUC2_InPlaceOn,None,itkInPlaceImageFilterIVF22IUC2)
itkInPlaceImageFilterIVF22IUC2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUC2_InPlaceOff,None,itkInPlaceImageFilterIVF22IUC2)
itkInPlaceImageFilterIVF22IUC2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUC2_CanRunInPlace,None,itkInPlaceImageFilterIVF22IUC2)
itkInPlaceImageFilterIVF22IUC2.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUC2_GetPointer,None,itkInPlaceImageFilterIVF22IUC2)
itkInPlaceImageFilterIVF22IUC2_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUC2_swigregister
itkInPlaceImageFilterIVF22IUC2_swigregister(itkInPlaceImageFilterIVF22IUC2)

def itkInPlaceImageFilterIVF22IUC2_cast(*args):
  """itkInPlaceImageFilterIVF22IUC2_cast(itkLightObject obj) -> itkInPlaceImageFilterIVF22IUC2"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUC2_cast(*args)

class itkInPlaceImageFilterIVF22IUL2(itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUL2):
    """Proxy of C++ itkInPlaceImageFilterIVF22IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUL2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUL2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUL2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUL2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUL2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUL2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUL2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIVF22IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIVF22IUL2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIVF22IUL2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIVF22IUL2
        
        Create a new object of the class itkInPlaceImageFilterIVF22IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIVF22IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIVF22IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIVF22IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIVF22IUL2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUL2_SetInPlace,None,itkInPlaceImageFilterIVF22IUL2)
itkInPlaceImageFilterIVF22IUL2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUL2_GetInPlace,None,itkInPlaceImageFilterIVF22IUL2)
itkInPlaceImageFilterIVF22IUL2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUL2_InPlaceOn,None,itkInPlaceImageFilterIVF22IUL2)
itkInPlaceImageFilterIVF22IUL2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUL2_InPlaceOff,None,itkInPlaceImageFilterIVF22IUL2)
itkInPlaceImageFilterIVF22IUL2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUL2_CanRunInPlace,None,itkInPlaceImageFilterIVF22IUL2)
itkInPlaceImageFilterIVF22IUL2.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUL2_GetPointer,None,itkInPlaceImageFilterIVF22IUL2)
itkInPlaceImageFilterIVF22IUL2_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUL2_swigregister
itkInPlaceImageFilterIVF22IUL2_swigregister(itkInPlaceImageFilterIVF22IUL2)

def itkInPlaceImageFilterIVF22IUL2_cast(*args):
  """itkInPlaceImageFilterIVF22IUL2_cast(itkLightObject obj) -> itkInPlaceImageFilterIVF22IUL2"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUL2_cast(*args)

class itkInPlaceImageFilterIVF22IUS2(itkImageToImageFilterBPython.itkImageToImageFilterIVF22IUS2):
    """Proxy of C++ itkInPlaceImageFilterIVF22IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUS2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUS2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUS2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUS2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUS2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUS2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUS2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIVF22IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIVF22IUS2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIVF22IUS2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIVF22IUS2
        
        Create a new object of the class itkInPlaceImageFilterIVF22IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIVF22IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIVF22IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIVF22IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIVF22IUS2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUS2_SetInPlace,None,itkInPlaceImageFilterIVF22IUS2)
itkInPlaceImageFilterIVF22IUS2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUS2_GetInPlace,None,itkInPlaceImageFilterIVF22IUS2)
itkInPlaceImageFilterIVF22IUS2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUS2_InPlaceOn,None,itkInPlaceImageFilterIVF22IUS2)
itkInPlaceImageFilterIVF22IUS2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUS2_InPlaceOff,None,itkInPlaceImageFilterIVF22IUS2)
itkInPlaceImageFilterIVF22IUS2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUS2_CanRunInPlace,None,itkInPlaceImageFilterIVF22IUS2)
itkInPlaceImageFilterIVF22IUS2.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUS2_GetPointer,None,itkInPlaceImageFilterIVF22IUS2)
itkInPlaceImageFilterIVF22IUS2_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUS2_swigregister
itkInPlaceImageFilterIVF22IUS2_swigregister(itkInPlaceImageFilterIVF22IUS2)

def itkInPlaceImageFilterIVF22IUS2_cast(*args):
  """itkInPlaceImageFilterIVF22IUS2_cast(itkLightObject obj) -> itkInPlaceImageFilterIVF22IUS2"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF22IUS2_cast(*args)

class itkInPlaceImageFilterIVF33ID3(itkImageToImageFilterBPython.itkImageToImageFilterIVF33ID3):
    """Proxy of C++ itkInPlaceImageFilterIVF33ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33ID3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33ID3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33ID3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33ID3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33ID3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33ID3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33ID3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIVF33ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIVF33ID3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIVF33ID3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIVF33ID3
        
        Create a new object of the class itkInPlaceImageFilterIVF33ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIVF33ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIVF33ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIVF33ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIVF33ID3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33ID3_SetInPlace,None,itkInPlaceImageFilterIVF33ID3)
itkInPlaceImageFilterIVF33ID3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33ID3_GetInPlace,None,itkInPlaceImageFilterIVF33ID3)
itkInPlaceImageFilterIVF33ID3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33ID3_InPlaceOn,None,itkInPlaceImageFilterIVF33ID3)
itkInPlaceImageFilterIVF33ID3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33ID3_InPlaceOff,None,itkInPlaceImageFilterIVF33ID3)
itkInPlaceImageFilterIVF33ID3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33ID3_CanRunInPlace,None,itkInPlaceImageFilterIVF33ID3)
itkInPlaceImageFilterIVF33ID3.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33ID3_GetPointer,None,itkInPlaceImageFilterIVF33ID3)
itkInPlaceImageFilterIVF33ID3_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33ID3_swigregister
itkInPlaceImageFilterIVF33ID3_swigregister(itkInPlaceImageFilterIVF33ID3)

def itkInPlaceImageFilterIVF33ID3_cast(*args):
  """itkInPlaceImageFilterIVF33ID3_cast(itkLightObject obj) -> itkInPlaceImageFilterIVF33ID3"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33ID3_cast(*args)

class itkInPlaceImageFilterIVF33IF3(itkImageToImageFilterBPython.itkImageToImageFilterIVF33IF3):
    """Proxy of C++ itkInPlaceImageFilterIVF33IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IF3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IF3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IF3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IF3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IF3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IF3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IF3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIVF33IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIVF33IF3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIVF33IF3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIVF33IF3
        
        Create a new object of the class itkInPlaceImageFilterIVF33IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIVF33IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIVF33IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIVF33IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIVF33IF3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IF3_SetInPlace,None,itkInPlaceImageFilterIVF33IF3)
itkInPlaceImageFilterIVF33IF3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IF3_GetInPlace,None,itkInPlaceImageFilterIVF33IF3)
itkInPlaceImageFilterIVF33IF3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IF3_InPlaceOn,None,itkInPlaceImageFilterIVF33IF3)
itkInPlaceImageFilterIVF33IF3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IF3_InPlaceOff,None,itkInPlaceImageFilterIVF33IF3)
itkInPlaceImageFilterIVF33IF3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IF3_CanRunInPlace,None,itkInPlaceImageFilterIVF33IF3)
itkInPlaceImageFilterIVF33IF3.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IF3_GetPointer,None,itkInPlaceImageFilterIVF33IF3)
itkInPlaceImageFilterIVF33IF3_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IF3_swigregister
itkInPlaceImageFilterIVF33IF3_swigregister(itkInPlaceImageFilterIVF33IF3)

def itkInPlaceImageFilterIVF33IF3_cast(*args):
  """itkInPlaceImageFilterIVF33IF3_cast(itkLightObject obj) -> itkInPlaceImageFilterIVF33IF3"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IF3_cast(*args)

class itkInPlaceImageFilterIVF33IUC3(itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUC3):
    """Proxy of C++ itkInPlaceImageFilterIVF33IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUC3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUC3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUC3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUC3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUC3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUC3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUC3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIVF33IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIVF33IUC3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIVF33IUC3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIVF33IUC3
        
        Create a new object of the class itkInPlaceImageFilterIVF33IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIVF33IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIVF33IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIVF33IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIVF33IUC3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUC3_SetInPlace,None,itkInPlaceImageFilterIVF33IUC3)
itkInPlaceImageFilterIVF33IUC3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUC3_GetInPlace,None,itkInPlaceImageFilterIVF33IUC3)
itkInPlaceImageFilterIVF33IUC3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUC3_InPlaceOn,None,itkInPlaceImageFilterIVF33IUC3)
itkInPlaceImageFilterIVF33IUC3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUC3_InPlaceOff,None,itkInPlaceImageFilterIVF33IUC3)
itkInPlaceImageFilterIVF33IUC3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUC3_CanRunInPlace,None,itkInPlaceImageFilterIVF33IUC3)
itkInPlaceImageFilterIVF33IUC3.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUC3_GetPointer,None,itkInPlaceImageFilterIVF33IUC3)
itkInPlaceImageFilterIVF33IUC3_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUC3_swigregister
itkInPlaceImageFilterIVF33IUC3_swigregister(itkInPlaceImageFilterIVF33IUC3)

def itkInPlaceImageFilterIVF33IUC3_cast(*args):
  """itkInPlaceImageFilterIVF33IUC3_cast(itkLightObject obj) -> itkInPlaceImageFilterIVF33IUC3"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUC3_cast(*args)

class itkInPlaceImageFilterIVF33IUL3(itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUL3):
    """Proxy of C++ itkInPlaceImageFilterIVF33IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUL3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUL3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUL3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUL3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUL3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUL3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUL3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIVF33IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIVF33IUL3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIVF33IUL3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIVF33IUL3
        
        Create a new object of the class itkInPlaceImageFilterIVF33IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIVF33IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIVF33IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIVF33IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIVF33IUL3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUL3_SetInPlace,None,itkInPlaceImageFilterIVF33IUL3)
itkInPlaceImageFilterIVF33IUL3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUL3_GetInPlace,None,itkInPlaceImageFilterIVF33IUL3)
itkInPlaceImageFilterIVF33IUL3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUL3_InPlaceOn,None,itkInPlaceImageFilterIVF33IUL3)
itkInPlaceImageFilterIVF33IUL3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUL3_InPlaceOff,None,itkInPlaceImageFilterIVF33IUL3)
itkInPlaceImageFilterIVF33IUL3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUL3_CanRunInPlace,None,itkInPlaceImageFilterIVF33IUL3)
itkInPlaceImageFilterIVF33IUL3.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUL3_GetPointer,None,itkInPlaceImageFilterIVF33IUL3)
itkInPlaceImageFilterIVF33IUL3_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUL3_swigregister
itkInPlaceImageFilterIVF33IUL3_swigregister(itkInPlaceImageFilterIVF33IUL3)

def itkInPlaceImageFilterIVF33IUL3_cast(*args):
  """itkInPlaceImageFilterIVF33IUL3_cast(itkLightObject obj) -> itkInPlaceImageFilterIVF33IUL3"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUL3_cast(*args)

class itkInPlaceImageFilterIVF33IUS3(itkImageToImageFilterBPython.itkImageToImageFilterIVF33IUS3):
    """Proxy of C++ itkInPlaceImageFilterIVF33IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUS3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUS3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUS3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUS3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUS3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUS3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUS3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterIVF33IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterIVF33IUS3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterIVF33IUS3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterIVF33IUS3
        
        Create a new object of the class itkInPlaceImageFilterIVF33IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterIVF33IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterIVF33IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterIVF33IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterIVF33IUS3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUS3_SetInPlace,None,itkInPlaceImageFilterIVF33IUS3)
itkInPlaceImageFilterIVF33IUS3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUS3_GetInPlace,None,itkInPlaceImageFilterIVF33IUS3)
itkInPlaceImageFilterIVF33IUS3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUS3_InPlaceOn,None,itkInPlaceImageFilterIVF33IUS3)
itkInPlaceImageFilterIVF33IUS3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUS3_InPlaceOff,None,itkInPlaceImageFilterIVF33IUS3)
itkInPlaceImageFilterIVF33IUS3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUS3_CanRunInPlace,None,itkInPlaceImageFilterIVF33IUS3)
itkInPlaceImageFilterIVF33IUS3.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUS3_GetPointer,None,itkInPlaceImageFilterIVF33IUS3)
itkInPlaceImageFilterIVF33IUS3_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUS3_swigregister
itkInPlaceImageFilterIVF33IUS3_swigregister(itkInPlaceImageFilterIVF33IUS3)

def itkInPlaceImageFilterIVF33IUS3_cast(*args):
  """itkInPlaceImageFilterIVF33IUS3_cast(itkLightObject obj) -> itkInPlaceImageFilterIVF33IUS3"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterIVF33IUS3_cast(*args)

class itkInPlaceImageFilterVID2ID2(itkImageToImageFilterBPython.itkImageToImageFilterVID2ID2):
    """Proxy of C++ itkInPlaceImageFilterVID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID2ID2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID2ID2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID2ID2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID2ID2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID2ID2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID2ID2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID2ID2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterVID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterVID2ID2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterVID2ID2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterVID2ID2
        
        Create a new object of the class itkInPlaceImageFilterVID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterVID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterVID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterVID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterVID2ID2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID2ID2_SetInPlace,None,itkInPlaceImageFilterVID2ID2)
itkInPlaceImageFilterVID2ID2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID2ID2_GetInPlace,None,itkInPlaceImageFilterVID2ID2)
itkInPlaceImageFilterVID2ID2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID2ID2_InPlaceOn,None,itkInPlaceImageFilterVID2ID2)
itkInPlaceImageFilterVID2ID2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID2ID2_InPlaceOff,None,itkInPlaceImageFilterVID2ID2)
itkInPlaceImageFilterVID2ID2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID2ID2_CanRunInPlace,None,itkInPlaceImageFilterVID2ID2)
itkInPlaceImageFilterVID2ID2.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID2ID2_GetPointer,None,itkInPlaceImageFilterVID2ID2)
itkInPlaceImageFilterVID2ID2_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID2ID2_swigregister
itkInPlaceImageFilterVID2ID2_swigregister(itkInPlaceImageFilterVID2ID2)

def itkInPlaceImageFilterVID2ID2_cast(*args):
  """itkInPlaceImageFilterVID2ID2_cast(itkLightObject obj) -> itkInPlaceImageFilterVID2ID2"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID2ID2_cast(*args)

class itkInPlaceImageFilterVID3ID3(itkImageToImageFilterBPython.itkImageToImageFilterVID3ID3):
    """Proxy of C++ itkInPlaceImageFilterVID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID3ID3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID3ID3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID3ID3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID3ID3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID3ID3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID3ID3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID3ID3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterVID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterVID3ID3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterVID3ID3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterVID3ID3
        
        Create a new object of the class itkInPlaceImageFilterVID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterVID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterVID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterVID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterVID3ID3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID3ID3_SetInPlace,None,itkInPlaceImageFilterVID3ID3)
itkInPlaceImageFilterVID3ID3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID3ID3_GetInPlace,None,itkInPlaceImageFilterVID3ID3)
itkInPlaceImageFilterVID3ID3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID3ID3_InPlaceOn,None,itkInPlaceImageFilterVID3ID3)
itkInPlaceImageFilterVID3ID3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID3ID3_InPlaceOff,None,itkInPlaceImageFilterVID3ID3)
itkInPlaceImageFilterVID3ID3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID3ID3_CanRunInPlace,None,itkInPlaceImageFilterVID3ID3)
itkInPlaceImageFilterVID3ID3.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID3ID3_GetPointer,None,itkInPlaceImageFilterVID3ID3)
itkInPlaceImageFilterVID3ID3_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID3ID3_swigregister
itkInPlaceImageFilterVID3ID3_swigregister(itkInPlaceImageFilterVID3ID3)

def itkInPlaceImageFilterVID3ID3_cast(*args):
  """itkInPlaceImageFilterVID3ID3_cast(itkLightObject obj) -> itkInPlaceImageFilterVID3ID3"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVID3ID3_cast(*args)

class itkInPlaceImageFilterVIF2IF2(itkImageToImageFilterBPython.itkImageToImageFilterVIF2IF2):
    """Proxy of C++ itkInPlaceImageFilterVIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF2IF2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF2IF2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF2IF2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF2IF2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF2IF2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF2IF2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF2IF2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterVIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterVIF2IF2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterVIF2IF2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterVIF2IF2
        
        Create a new object of the class itkInPlaceImageFilterVIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterVIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterVIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterVIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterVIF2IF2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF2IF2_SetInPlace,None,itkInPlaceImageFilterVIF2IF2)
itkInPlaceImageFilterVIF2IF2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF2IF2_GetInPlace,None,itkInPlaceImageFilterVIF2IF2)
itkInPlaceImageFilterVIF2IF2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF2IF2_InPlaceOn,None,itkInPlaceImageFilterVIF2IF2)
itkInPlaceImageFilterVIF2IF2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF2IF2_InPlaceOff,None,itkInPlaceImageFilterVIF2IF2)
itkInPlaceImageFilterVIF2IF2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF2IF2_CanRunInPlace,None,itkInPlaceImageFilterVIF2IF2)
itkInPlaceImageFilterVIF2IF2.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF2IF2_GetPointer,None,itkInPlaceImageFilterVIF2IF2)
itkInPlaceImageFilterVIF2IF2_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF2IF2_swigregister
itkInPlaceImageFilterVIF2IF2_swigregister(itkInPlaceImageFilterVIF2IF2)

def itkInPlaceImageFilterVIF2IF2_cast(*args):
  """itkInPlaceImageFilterVIF2IF2_cast(itkLightObject obj) -> itkInPlaceImageFilterVIF2IF2"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF2IF2_cast(*args)

class itkInPlaceImageFilterVIF3IF3(itkImageToImageFilterBPython.itkImageToImageFilterVIF3IF3):
    """Proxy of C++ itkInPlaceImageFilterVIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF3IF3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF3IF3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF3IF3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF3IF3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF3IF3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF3IF3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF3IF3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterVIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterVIF3IF3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterVIF3IF3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterVIF3IF3
        
        Create a new object of the class itkInPlaceImageFilterVIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterVIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterVIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterVIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterVIF3IF3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF3IF3_SetInPlace,None,itkInPlaceImageFilterVIF3IF3)
itkInPlaceImageFilterVIF3IF3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF3IF3_GetInPlace,None,itkInPlaceImageFilterVIF3IF3)
itkInPlaceImageFilterVIF3IF3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF3IF3_InPlaceOn,None,itkInPlaceImageFilterVIF3IF3)
itkInPlaceImageFilterVIF3IF3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF3IF3_InPlaceOff,None,itkInPlaceImageFilterVIF3IF3)
itkInPlaceImageFilterVIF3IF3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF3IF3_CanRunInPlace,None,itkInPlaceImageFilterVIF3IF3)
itkInPlaceImageFilterVIF3IF3.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF3IF3_GetPointer,None,itkInPlaceImageFilterVIF3IF3)
itkInPlaceImageFilterVIF3IF3_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF3IF3_swigregister
itkInPlaceImageFilterVIF3IF3_swigregister(itkInPlaceImageFilterVIF3IF3)

def itkInPlaceImageFilterVIF3IF3_cast(*args):
  """itkInPlaceImageFilterVIF3IF3_cast(itkLightObject obj) -> itkInPlaceImageFilterVIF3IF3"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIF3IF3_cast(*args)

class itkInPlaceImageFilterVIUC2IUC2(itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUC2):
    """Proxy of C++ itkInPlaceImageFilterVIUC2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC2IUC2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC2IUC2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC2IUC2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC2IUC2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC2IUC2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC2IUC2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC2IUC2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterVIUC2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterVIUC2IUC2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterVIUC2IUC2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterVIUC2IUC2
        
        Create a new object of the class itkInPlaceImageFilterVIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterVIUC2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterVIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterVIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterVIUC2IUC2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC2IUC2_SetInPlace,None,itkInPlaceImageFilterVIUC2IUC2)
itkInPlaceImageFilterVIUC2IUC2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC2IUC2_GetInPlace,None,itkInPlaceImageFilterVIUC2IUC2)
itkInPlaceImageFilterVIUC2IUC2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC2IUC2_InPlaceOn,None,itkInPlaceImageFilterVIUC2IUC2)
itkInPlaceImageFilterVIUC2IUC2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC2IUC2_InPlaceOff,None,itkInPlaceImageFilterVIUC2IUC2)
itkInPlaceImageFilterVIUC2IUC2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC2IUC2_CanRunInPlace,None,itkInPlaceImageFilterVIUC2IUC2)
itkInPlaceImageFilterVIUC2IUC2.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC2IUC2_GetPointer,None,itkInPlaceImageFilterVIUC2IUC2)
itkInPlaceImageFilterVIUC2IUC2_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC2IUC2_swigregister
itkInPlaceImageFilterVIUC2IUC2_swigregister(itkInPlaceImageFilterVIUC2IUC2)

def itkInPlaceImageFilterVIUC2IUC2_cast(*args):
  """itkInPlaceImageFilterVIUC2IUC2_cast(itkLightObject obj) -> itkInPlaceImageFilterVIUC2IUC2"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC2IUC2_cast(*args)

class itkInPlaceImageFilterVIUC3IUC3(itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUC3):
    """Proxy of C++ itkInPlaceImageFilterVIUC3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC3IUC3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC3IUC3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC3IUC3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC3IUC3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC3IUC3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC3IUC3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC3IUC3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterVIUC3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterVIUC3IUC3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterVIUC3IUC3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterVIUC3IUC3
        
        Create a new object of the class itkInPlaceImageFilterVIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterVIUC3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterVIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterVIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterVIUC3IUC3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC3IUC3_SetInPlace,None,itkInPlaceImageFilterVIUC3IUC3)
itkInPlaceImageFilterVIUC3IUC3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC3IUC3_GetInPlace,None,itkInPlaceImageFilterVIUC3IUC3)
itkInPlaceImageFilterVIUC3IUC3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC3IUC3_InPlaceOn,None,itkInPlaceImageFilterVIUC3IUC3)
itkInPlaceImageFilterVIUC3IUC3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC3IUC3_InPlaceOff,None,itkInPlaceImageFilterVIUC3IUC3)
itkInPlaceImageFilterVIUC3IUC3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC3IUC3_CanRunInPlace,None,itkInPlaceImageFilterVIUC3IUC3)
itkInPlaceImageFilterVIUC3IUC3.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC3IUC3_GetPointer,None,itkInPlaceImageFilterVIUC3IUC3)
itkInPlaceImageFilterVIUC3IUC3_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC3IUC3_swigregister
itkInPlaceImageFilterVIUC3IUC3_swigregister(itkInPlaceImageFilterVIUC3IUC3)

def itkInPlaceImageFilterVIUC3IUC3_cast(*args):
  """itkInPlaceImageFilterVIUC3IUC3_cast(itkLightObject obj) -> itkInPlaceImageFilterVIUC3IUC3"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUC3IUC3_cast(*args)

class itkInPlaceImageFilterVIUL2IUL2(itkImageToImageFilterBPython.itkImageToImageFilterVIUL2IUL2):
    """Proxy of C++ itkInPlaceImageFilterVIUL2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL2IUL2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL2IUL2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL2IUL2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL2IUL2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL2IUL2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL2IUL2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL2IUL2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterVIUL2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterVIUL2IUL2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterVIUL2IUL2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterVIUL2IUL2
        
        Create a new object of the class itkInPlaceImageFilterVIUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterVIUL2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterVIUL2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterVIUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterVIUL2IUL2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL2IUL2_SetInPlace,None,itkInPlaceImageFilterVIUL2IUL2)
itkInPlaceImageFilterVIUL2IUL2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL2IUL2_GetInPlace,None,itkInPlaceImageFilterVIUL2IUL2)
itkInPlaceImageFilterVIUL2IUL2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL2IUL2_InPlaceOn,None,itkInPlaceImageFilterVIUL2IUL2)
itkInPlaceImageFilterVIUL2IUL2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL2IUL2_InPlaceOff,None,itkInPlaceImageFilterVIUL2IUL2)
itkInPlaceImageFilterVIUL2IUL2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL2IUL2_CanRunInPlace,None,itkInPlaceImageFilterVIUL2IUL2)
itkInPlaceImageFilterVIUL2IUL2.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL2IUL2_GetPointer,None,itkInPlaceImageFilterVIUL2IUL2)
itkInPlaceImageFilterVIUL2IUL2_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL2IUL2_swigregister
itkInPlaceImageFilterVIUL2IUL2_swigregister(itkInPlaceImageFilterVIUL2IUL2)

def itkInPlaceImageFilterVIUL2IUL2_cast(*args):
  """itkInPlaceImageFilterVIUL2IUL2_cast(itkLightObject obj) -> itkInPlaceImageFilterVIUL2IUL2"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL2IUL2_cast(*args)

class itkInPlaceImageFilterVIUL3IUL3(itkImageToImageFilterBPython.itkImageToImageFilterVIUL3IUL3):
    """Proxy of C++ itkInPlaceImageFilterVIUL3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL3IUL3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL3IUL3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL3IUL3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL3IUL3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL3IUL3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL3IUL3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL3IUL3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterVIUL3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterVIUL3IUL3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterVIUL3IUL3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterVIUL3IUL3
        
        Create a new object of the class itkInPlaceImageFilterVIUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterVIUL3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterVIUL3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterVIUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterVIUL3IUL3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL3IUL3_SetInPlace,None,itkInPlaceImageFilterVIUL3IUL3)
itkInPlaceImageFilterVIUL3IUL3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL3IUL3_GetInPlace,None,itkInPlaceImageFilterVIUL3IUL3)
itkInPlaceImageFilterVIUL3IUL3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL3IUL3_InPlaceOn,None,itkInPlaceImageFilterVIUL3IUL3)
itkInPlaceImageFilterVIUL3IUL3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL3IUL3_InPlaceOff,None,itkInPlaceImageFilterVIUL3IUL3)
itkInPlaceImageFilterVIUL3IUL3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL3IUL3_CanRunInPlace,None,itkInPlaceImageFilterVIUL3IUL3)
itkInPlaceImageFilterVIUL3IUL3.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL3IUL3_GetPointer,None,itkInPlaceImageFilterVIUL3IUL3)
itkInPlaceImageFilterVIUL3IUL3_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL3IUL3_swigregister
itkInPlaceImageFilterVIUL3IUL3_swigregister(itkInPlaceImageFilterVIUL3IUL3)

def itkInPlaceImageFilterVIUL3IUL3_cast(*args):
  """itkInPlaceImageFilterVIUL3IUL3_cast(itkLightObject obj) -> itkInPlaceImageFilterVIUL3IUL3"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUL3IUL3_cast(*args)

class itkInPlaceImageFilterVIUS2IUS2(itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUS2):
    """Proxy of C++ itkInPlaceImageFilterVIUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS2IUS2_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS2IUS2_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS2IUS2_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS2IUS2_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS2IUS2_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS2IUS2_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS2IUS2_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterVIUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterVIUS2IUS2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterVIUS2IUS2"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterVIUS2IUS2
        
        Create a new object of the class itkInPlaceImageFilterVIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterVIUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterVIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterVIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterVIUS2IUS2.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS2IUS2_SetInPlace,None,itkInPlaceImageFilterVIUS2IUS2)
itkInPlaceImageFilterVIUS2IUS2.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS2IUS2_GetInPlace,None,itkInPlaceImageFilterVIUS2IUS2)
itkInPlaceImageFilterVIUS2IUS2.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS2IUS2_InPlaceOn,None,itkInPlaceImageFilterVIUS2IUS2)
itkInPlaceImageFilterVIUS2IUS2.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS2IUS2_InPlaceOff,None,itkInPlaceImageFilterVIUS2IUS2)
itkInPlaceImageFilterVIUS2IUS2.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS2IUS2_CanRunInPlace,None,itkInPlaceImageFilterVIUS2IUS2)
itkInPlaceImageFilterVIUS2IUS2.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS2IUS2_GetPointer,None,itkInPlaceImageFilterVIUS2IUS2)
itkInPlaceImageFilterVIUS2IUS2_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS2IUS2_swigregister
itkInPlaceImageFilterVIUS2IUS2_swigregister(itkInPlaceImageFilterVIUS2IUS2)

def itkInPlaceImageFilterVIUS2IUS2_cast(*args):
  """itkInPlaceImageFilterVIUS2IUS2_cast(itkLightObject obj) -> itkInPlaceImageFilterVIUS2IUS2"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS2IUS2_cast(*args)

class itkInPlaceImageFilterVIUS3IUS3(itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUS3):
    """Proxy of C++ itkInPlaceImageFilterVIUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS3IUS3_InputImageDimension
    OutputImageDimension = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS3IUS3_OutputImageDimension
    def SetInPlace(self, *args):
        """SetInPlace(self, bool _arg)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS3IUS3_SetInPlace(self, *args)

    def GetInPlace(self):
        """GetInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS3IUS3_GetInPlace(self)

    def InPlaceOn(self):
        """InPlaceOn(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS3IUS3_InPlaceOn(self)

    def InPlaceOff(self):
        """InPlaceOff(self)"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS3IUS3_InPlaceOff(self)

    def CanRunInPlace(self):
        """CanRunInPlace(self) -> bool"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS3IUS3_CanRunInPlace(self)

    __swig_destroy__ = _itkInPlaceImageFilterBPython.delete_itkInPlaceImageFilterVIUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkInPlaceImageFilterVIUS3IUS3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkInPlaceImageFilterVIUS3IUS3"""
        return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkInPlaceImageFilterVIUS3IUS3
        
        Create a new object of the class itkInPlaceImageFilterVIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkInPlaceImageFilterVIUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkInPlaceImageFilterVIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkInPlaceImageFilterVIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkInPlaceImageFilterVIUS3IUS3.SetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS3IUS3_SetInPlace,None,itkInPlaceImageFilterVIUS3IUS3)
itkInPlaceImageFilterVIUS3IUS3.GetInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS3IUS3_GetInPlace,None,itkInPlaceImageFilterVIUS3IUS3)
itkInPlaceImageFilterVIUS3IUS3.InPlaceOn = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS3IUS3_InPlaceOn,None,itkInPlaceImageFilterVIUS3IUS3)
itkInPlaceImageFilterVIUS3IUS3.InPlaceOff = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS3IUS3_InPlaceOff,None,itkInPlaceImageFilterVIUS3IUS3)
itkInPlaceImageFilterVIUS3IUS3.CanRunInPlace = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS3IUS3_CanRunInPlace,None,itkInPlaceImageFilterVIUS3IUS3)
itkInPlaceImageFilterVIUS3IUS3.GetPointer = new_instancemethod(_itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS3IUS3_GetPointer,None,itkInPlaceImageFilterVIUS3IUS3)
itkInPlaceImageFilterVIUS3IUS3_swigregister = _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS3IUS3_swigregister
itkInPlaceImageFilterVIUS3IUS3_swigregister(itkInPlaceImageFilterVIUS3IUS3)

def itkInPlaceImageFilterVIUS3IUS3_cast(*args):
  """itkInPlaceImageFilterVIUS3IUS3_cast(itkLightObject obj) -> itkInPlaceImageFilterVIUS3IUS3"""
  return _itkInPlaceImageFilterBPython.itkInPlaceImageFilterVIUS3IUS3_cast(*args)



