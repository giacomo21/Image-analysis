// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkDiscreteGaussianImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkDiscreteGaussianImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkDiscreteGaussianImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkDiscreteGaussianImageFilterJava
#endif
#ifdef SWIGLUA
%module itkDiscreteGaussianImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkDiscreteGaussianImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkDiscreteGaussianImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkDiscreteGaussianImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkDiscreteGaussianImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkDiscreteGaussianImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkDiscreteGaussianImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkDiscreteGaussianImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkDiscreteGaussianImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkDiscreteGaussianImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkDiscreteGaussianImageFilterPython
#endif
#ifdef SWIGR
%module itkDiscreteGaussianImageFilterR
#endif
#ifdef SWIGRUBY
%module itkDiscreteGaussianImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkDiscreteGaussianImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkDiscreteGaussianImageFilterTcl
#endif
#ifdef SWIGXML
%module itkDiscreteGaussianImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Filtering.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkFixedArray.i
%import wrap_itkImageToImageFilterA.i


%include itk.i
%include wrap_itkDiscreteGaussianImageFilter_ext.i


 class itkDiscreteGaussianImageFilterID2ID2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkDiscreteGaussianImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetVariance(itkFixedArrayD2 const _arg);
     virtual itkFixedArrayD2 const GetVariance() const;
     virtual void SetMaximumError(itkFixedArrayD2 const _arg);
     virtual itkFixedArrayD2 const GetMaximumError() const;
     virtual int GetMaximumKernelWidth() const;
     virtual void SetMaximumKernelWidth(int const _arg);
     virtual unsigned int GetFilterDimensionality() const;
     virtual void SetFilterDimensionality(unsigned int const _arg);
     void SetVariance(double const v);
     void SetMaximumError(double const v);
     void SetVariance(double const * v);
     void SetVariance(float const * v);
     void SetMaximumError(double const * v);
     void SetMaximumError(float const * v);
     void SetUseImageSpacingOn();
     void SetUseImageSpacingOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool GetUseImageSpacing() const;
     virtual void SetInternalNumberOfStreamDivisions(unsigned int const _arg);
     virtual unsigned int const & GetInternalNumberOfStreamDivisions() const;
     virtual void GenerateInputRequestedRegion();
   private:
     itkDiscreteGaussianImageFilterID2ID2(itkDiscreteGaussianImageFilterID2ID2 const & arg0);
     void operator=(itkDiscreteGaussianImageFilterID2ID2 const & arg0);
   protected:
     itkDiscreteGaussianImageFilterID2ID2();
     ~itkDiscreteGaussianImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkDiscreteGaussianImageFilterID2ID2_Pointer {
   public:
     itkDiscreteGaussianImageFilterID2ID2_Pointer();
     itkDiscreteGaussianImageFilterID2ID2_Pointer(itkDiscreteGaussianImageFilterID2ID2_Pointer const & p);
     itkDiscreteGaussianImageFilterID2ID2_Pointer(itkDiscreteGaussianImageFilterID2ID2 * p);
     ~itkDiscreteGaussianImageFilterID2ID2_Pointer();
     itkDiscreteGaussianImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDiscreteGaussianImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkDiscreteGaussianImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkDiscreteGaussianImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkDiscreteGaussianImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkDiscreteGaussianImageFilterID2ID2_Pointer const & r) const;
     itkDiscreteGaussianImageFilterID2ID2_Pointer & operator=(itkDiscreteGaussianImageFilterID2ID2_Pointer const & r);
     itkDiscreteGaussianImageFilterID2ID2_Pointer & operator=(itkDiscreteGaussianImageFilterID2ID2 * r);
     itkDiscreteGaussianImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDiscreteGaussianImageFilterID3ID3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkDiscreteGaussianImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetVariance(itkFixedArrayD3 const _arg);
     virtual itkFixedArrayD3 const GetVariance() const;
     virtual void SetMaximumError(itkFixedArrayD3 const _arg);
     virtual itkFixedArrayD3 const GetMaximumError() const;
     virtual int GetMaximumKernelWidth() const;
     virtual void SetMaximumKernelWidth(int const _arg);
     virtual unsigned int GetFilterDimensionality() const;
     virtual void SetFilterDimensionality(unsigned int const _arg);
     void SetVariance(double const v);
     void SetMaximumError(double const v);
     void SetVariance(double const * v);
     void SetVariance(float const * v);
     void SetMaximumError(double const * v);
     void SetMaximumError(float const * v);
     void SetUseImageSpacingOn();
     void SetUseImageSpacingOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool GetUseImageSpacing() const;
     virtual void SetInternalNumberOfStreamDivisions(unsigned int const _arg);
     virtual unsigned int const & GetInternalNumberOfStreamDivisions() const;
     virtual void GenerateInputRequestedRegion();
   private:
     itkDiscreteGaussianImageFilterID3ID3(itkDiscreteGaussianImageFilterID3ID3 const & arg0);
     void operator=(itkDiscreteGaussianImageFilterID3ID3 const & arg0);
   protected:
     itkDiscreteGaussianImageFilterID3ID3();
     ~itkDiscreteGaussianImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkDiscreteGaussianImageFilterID3ID3_Pointer {
   public:
     itkDiscreteGaussianImageFilterID3ID3_Pointer();
     itkDiscreteGaussianImageFilterID3ID3_Pointer(itkDiscreteGaussianImageFilterID3ID3_Pointer const & p);
     itkDiscreteGaussianImageFilterID3ID3_Pointer(itkDiscreteGaussianImageFilterID3ID3 * p);
     ~itkDiscreteGaussianImageFilterID3ID3_Pointer();
     itkDiscreteGaussianImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDiscreteGaussianImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkDiscreteGaussianImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkDiscreteGaussianImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkDiscreteGaussianImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkDiscreteGaussianImageFilterID3ID3_Pointer const & r) const;
     itkDiscreteGaussianImageFilterID3ID3_Pointer & operator=(itkDiscreteGaussianImageFilterID3ID3_Pointer const & r);
     itkDiscreteGaussianImageFilterID3ID3_Pointer & operator=(itkDiscreteGaussianImageFilterID3ID3 * r);
     itkDiscreteGaussianImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDiscreteGaussianImageFilterIF2IF2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkDiscreteGaussianImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetVariance(itkFixedArrayD2 const _arg);
     virtual itkFixedArrayD2 const GetVariance() const;
     virtual void SetMaximumError(itkFixedArrayD2 const _arg);
     virtual itkFixedArrayD2 const GetMaximumError() const;
     virtual int GetMaximumKernelWidth() const;
     virtual void SetMaximumKernelWidth(int const _arg);
     virtual unsigned int GetFilterDimensionality() const;
     virtual void SetFilterDimensionality(unsigned int const _arg);
     void SetVariance(double const v);
     void SetMaximumError(double const v);
     void SetVariance(double const * v);
     void SetVariance(float const * v);
     void SetMaximumError(double const * v);
     void SetMaximumError(float const * v);
     void SetUseImageSpacingOn();
     void SetUseImageSpacingOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool GetUseImageSpacing() const;
     virtual void SetInternalNumberOfStreamDivisions(unsigned int const _arg);
     virtual unsigned int const & GetInternalNumberOfStreamDivisions() const;
     virtual void GenerateInputRequestedRegion();
   private:
     itkDiscreteGaussianImageFilterIF2IF2(itkDiscreteGaussianImageFilterIF2IF2 const & arg0);
     void operator=(itkDiscreteGaussianImageFilterIF2IF2 const & arg0);
   protected:
     itkDiscreteGaussianImageFilterIF2IF2();
     ~itkDiscreteGaussianImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkDiscreteGaussianImageFilterIF2IF2_Pointer {
   public:
     itkDiscreteGaussianImageFilterIF2IF2_Pointer();
     itkDiscreteGaussianImageFilterIF2IF2_Pointer(itkDiscreteGaussianImageFilterIF2IF2_Pointer const & p);
     itkDiscreteGaussianImageFilterIF2IF2_Pointer(itkDiscreteGaussianImageFilterIF2IF2 * p);
     ~itkDiscreteGaussianImageFilterIF2IF2_Pointer();
     itkDiscreteGaussianImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDiscreteGaussianImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkDiscreteGaussianImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkDiscreteGaussianImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkDiscreteGaussianImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkDiscreteGaussianImageFilterIF2IF2_Pointer const & r) const;
     itkDiscreteGaussianImageFilterIF2IF2_Pointer & operator=(itkDiscreteGaussianImageFilterIF2IF2_Pointer const & r);
     itkDiscreteGaussianImageFilterIF2IF2_Pointer & operator=(itkDiscreteGaussianImageFilterIF2IF2 * r);
     itkDiscreteGaussianImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDiscreteGaussianImageFilterIF3IF3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkDiscreteGaussianImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetVariance(itkFixedArrayD3 const _arg);
     virtual itkFixedArrayD3 const GetVariance() const;
     virtual void SetMaximumError(itkFixedArrayD3 const _arg);
     virtual itkFixedArrayD3 const GetMaximumError() const;
     virtual int GetMaximumKernelWidth() const;
     virtual void SetMaximumKernelWidth(int const _arg);
     virtual unsigned int GetFilterDimensionality() const;
     virtual void SetFilterDimensionality(unsigned int const _arg);
     void SetVariance(double const v);
     void SetMaximumError(double const v);
     void SetVariance(double const * v);
     void SetVariance(float const * v);
     void SetMaximumError(double const * v);
     void SetMaximumError(float const * v);
     void SetUseImageSpacingOn();
     void SetUseImageSpacingOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool GetUseImageSpacing() const;
     virtual void SetInternalNumberOfStreamDivisions(unsigned int const _arg);
     virtual unsigned int const & GetInternalNumberOfStreamDivisions() const;
     virtual void GenerateInputRequestedRegion();
   private:
     itkDiscreteGaussianImageFilterIF3IF3(itkDiscreteGaussianImageFilterIF3IF3 const & arg0);
     void operator=(itkDiscreteGaussianImageFilterIF3IF3 const & arg0);
   protected:
     itkDiscreteGaussianImageFilterIF3IF3();
     ~itkDiscreteGaussianImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkDiscreteGaussianImageFilterIF3IF3_Pointer {
   public:
     itkDiscreteGaussianImageFilterIF3IF3_Pointer();
     itkDiscreteGaussianImageFilterIF3IF3_Pointer(itkDiscreteGaussianImageFilterIF3IF3_Pointer const & p);
     itkDiscreteGaussianImageFilterIF3IF3_Pointer(itkDiscreteGaussianImageFilterIF3IF3 * p);
     ~itkDiscreteGaussianImageFilterIF3IF3_Pointer();
     itkDiscreteGaussianImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDiscreteGaussianImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkDiscreteGaussianImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkDiscreteGaussianImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkDiscreteGaussianImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkDiscreteGaussianImageFilterIF3IF3_Pointer const & r) const;
     itkDiscreteGaussianImageFilterIF3IF3_Pointer & operator=(itkDiscreteGaussianImageFilterIF3IF3_Pointer const & r);
     itkDiscreteGaussianImageFilterIF3IF3_Pointer & operator=(itkDiscreteGaussianImageFilterIF3IF3 * r);
     itkDiscreteGaussianImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDiscreteGaussianImageFilterIUC2IUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkDiscreteGaussianImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetVariance(itkFixedArrayD2 const _arg);
     virtual itkFixedArrayD2 const GetVariance() const;
     virtual void SetMaximumError(itkFixedArrayD2 const _arg);
     virtual itkFixedArrayD2 const GetMaximumError() const;
     virtual int GetMaximumKernelWidth() const;
     virtual void SetMaximumKernelWidth(int const _arg);
     virtual unsigned int GetFilterDimensionality() const;
     virtual void SetFilterDimensionality(unsigned int const _arg);
     void SetVariance(double const v);
     void SetMaximumError(double const v);
     void SetVariance(double const * v);
     void SetVariance(float const * v);
     void SetMaximumError(double const * v);
     void SetMaximumError(float const * v);
     void SetUseImageSpacingOn();
     void SetUseImageSpacingOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool GetUseImageSpacing() const;
     virtual void SetInternalNumberOfStreamDivisions(unsigned int const _arg);
     virtual unsigned int const & GetInternalNumberOfStreamDivisions() const;
     virtual void GenerateInputRequestedRegion();
   private:
     itkDiscreteGaussianImageFilterIUC2IUC2(itkDiscreteGaussianImageFilterIUC2IUC2 const & arg0);
     void operator=(itkDiscreteGaussianImageFilterIUC2IUC2 const & arg0);
   protected:
     itkDiscreteGaussianImageFilterIUC2IUC2();
     ~itkDiscreteGaussianImageFilterIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkDiscreteGaussianImageFilterIUC2IUC2_Pointer {
   public:
     itkDiscreteGaussianImageFilterIUC2IUC2_Pointer();
     itkDiscreteGaussianImageFilterIUC2IUC2_Pointer(itkDiscreteGaussianImageFilterIUC2IUC2_Pointer const & p);
     itkDiscreteGaussianImageFilterIUC2IUC2_Pointer(itkDiscreteGaussianImageFilterIUC2IUC2 * p);
     ~itkDiscreteGaussianImageFilterIUC2IUC2_Pointer();
     itkDiscreteGaussianImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDiscreteGaussianImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkDiscreteGaussianImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkDiscreteGaussianImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkDiscreteGaussianImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkDiscreteGaussianImageFilterIUC2IUC2_Pointer const & r) const;
     itkDiscreteGaussianImageFilterIUC2IUC2_Pointer & operator=(itkDiscreteGaussianImageFilterIUC2IUC2_Pointer const & r);
     itkDiscreteGaussianImageFilterIUC2IUC2_Pointer & operator=(itkDiscreteGaussianImageFilterIUC2IUC2 * r);
     itkDiscreteGaussianImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDiscreteGaussianImageFilterIUC3IUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkDiscreteGaussianImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetVariance(itkFixedArrayD3 const _arg);
     virtual itkFixedArrayD3 const GetVariance() const;
     virtual void SetMaximumError(itkFixedArrayD3 const _arg);
     virtual itkFixedArrayD3 const GetMaximumError() const;
     virtual int GetMaximumKernelWidth() const;
     virtual void SetMaximumKernelWidth(int const _arg);
     virtual unsigned int GetFilterDimensionality() const;
     virtual void SetFilterDimensionality(unsigned int const _arg);
     void SetVariance(double const v);
     void SetMaximumError(double const v);
     void SetVariance(double const * v);
     void SetVariance(float const * v);
     void SetMaximumError(double const * v);
     void SetMaximumError(float const * v);
     void SetUseImageSpacingOn();
     void SetUseImageSpacingOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool GetUseImageSpacing() const;
     virtual void SetInternalNumberOfStreamDivisions(unsigned int const _arg);
     virtual unsigned int const & GetInternalNumberOfStreamDivisions() const;
     virtual void GenerateInputRequestedRegion();
   private:
     itkDiscreteGaussianImageFilterIUC3IUC3(itkDiscreteGaussianImageFilterIUC3IUC3 const & arg0);
     void operator=(itkDiscreteGaussianImageFilterIUC3IUC3 const & arg0);
   protected:
     itkDiscreteGaussianImageFilterIUC3IUC3();
     ~itkDiscreteGaussianImageFilterIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkDiscreteGaussianImageFilterIUC3IUC3_Pointer {
   public:
     itkDiscreteGaussianImageFilterIUC3IUC3_Pointer();
     itkDiscreteGaussianImageFilterIUC3IUC3_Pointer(itkDiscreteGaussianImageFilterIUC3IUC3_Pointer const & p);
     itkDiscreteGaussianImageFilterIUC3IUC3_Pointer(itkDiscreteGaussianImageFilterIUC3IUC3 * p);
     ~itkDiscreteGaussianImageFilterIUC3IUC3_Pointer();
     itkDiscreteGaussianImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDiscreteGaussianImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkDiscreteGaussianImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkDiscreteGaussianImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkDiscreteGaussianImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkDiscreteGaussianImageFilterIUC3IUC3_Pointer const & r) const;
     itkDiscreteGaussianImageFilterIUC3IUC3_Pointer & operator=(itkDiscreteGaussianImageFilterIUC3IUC3_Pointer const & r);
     itkDiscreteGaussianImageFilterIUC3IUC3_Pointer & operator=(itkDiscreteGaussianImageFilterIUC3IUC3 * r);
     itkDiscreteGaussianImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDiscreteGaussianImageFilterIUL2IUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkDiscreteGaussianImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetVariance(itkFixedArrayD2 const _arg);
     virtual itkFixedArrayD2 const GetVariance() const;
     virtual void SetMaximumError(itkFixedArrayD2 const _arg);
     virtual itkFixedArrayD2 const GetMaximumError() const;
     virtual int GetMaximumKernelWidth() const;
     virtual void SetMaximumKernelWidth(int const _arg);
     virtual unsigned int GetFilterDimensionality() const;
     virtual void SetFilterDimensionality(unsigned int const _arg);
     void SetVariance(double const v);
     void SetMaximumError(double const v);
     void SetVariance(double const * v);
     void SetVariance(float const * v);
     void SetMaximumError(double const * v);
     void SetMaximumError(float const * v);
     void SetUseImageSpacingOn();
     void SetUseImageSpacingOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool GetUseImageSpacing() const;
     virtual void SetInternalNumberOfStreamDivisions(unsigned int const _arg);
     virtual unsigned int const & GetInternalNumberOfStreamDivisions() const;
     virtual void GenerateInputRequestedRegion();
   private:
     itkDiscreteGaussianImageFilterIUL2IUL2(itkDiscreteGaussianImageFilterIUL2IUL2 const & arg0);
     void operator=(itkDiscreteGaussianImageFilterIUL2IUL2 const & arg0);
   protected:
     itkDiscreteGaussianImageFilterIUL2IUL2();
     ~itkDiscreteGaussianImageFilterIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkDiscreteGaussianImageFilterIUL2IUL2_Pointer {
   public:
     itkDiscreteGaussianImageFilterIUL2IUL2_Pointer();
     itkDiscreteGaussianImageFilterIUL2IUL2_Pointer(itkDiscreteGaussianImageFilterIUL2IUL2_Pointer const & p);
     itkDiscreteGaussianImageFilterIUL2IUL2_Pointer(itkDiscreteGaussianImageFilterIUL2IUL2 * p);
     ~itkDiscreteGaussianImageFilterIUL2IUL2_Pointer();
     itkDiscreteGaussianImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDiscreteGaussianImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkDiscreteGaussianImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkDiscreteGaussianImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkDiscreteGaussianImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkDiscreteGaussianImageFilterIUL2IUL2_Pointer const & r) const;
     itkDiscreteGaussianImageFilterIUL2IUL2_Pointer & operator=(itkDiscreteGaussianImageFilterIUL2IUL2_Pointer const & r);
     itkDiscreteGaussianImageFilterIUL2IUL2_Pointer & operator=(itkDiscreteGaussianImageFilterIUL2IUL2 * r);
     itkDiscreteGaussianImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDiscreteGaussianImageFilterIUL3IUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkDiscreteGaussianImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetVariance(itkFixedArrayD3 const _arg);
     virtual itkFixedArrayD3 const GetVariance() const;
     virtual void SetMaximumError(itkFixedArrayD3 const _arg);
     virtual itkFixedArrayD3 const GetMaximumError() const;
     virtual int GetMaximumKernelWidth() const;
     virtual void SetMaximumKernelWidth(int const _arg);
     virtual unsigned int GetFilterDimensionality() const;
     virtual void SetFilterDimensionality(unsigned int const _arg);
     void SetVariance(double const v);
     void SetMaximumError(double const v);
     void SetVariance(double const * v);
     void SetVariance(float const * v);
     void SetMaximumError(double const * v);
     void SetMaximumError(float const * v);
     void SetUseImageSpacingOn();
     void SetUseImageSpacingOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool GetUseImageSpacing() const;
     virtual void SetInternalNumberOfStreamDivisions(unsigned int const _arg);
     virtual unsigned int const & GetInternalNumberOfStreamDivisions() const;
     virtual void GenerateInputRequestedRegion();
   private:
     itkDiscreteGaussianImageFilterIUL3IUL3(itkDiscreteGaussianImageFilterIUL3IUL3 const & arg0);
     void operator=(itkDiscreteGaussianImageFilterIUL3IUL3 const & arg0);
   protected:
     itkDiscreteGaussianImageFilterIUL3IUL3();
     ~itkDiscreteGaussianImageFilterIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkDiscreteGaussianImageFilterIUL3IUL3_Pointer {
   public:
     itkDiscreteGaussianImageFilterIUL3IUL3_Pointer();
     itkDiscreteGaussianImageFilterIUL3IUL3_Pointer(itkDiscreteGaussianImageFilterIUL3IUL3_Pointer const & p);
     itkDiscreteGaussianImageFilterIUL3IUL3_Pointer(itkDiscreteGaussianImageFilterIUL3IUL3 * p);
     ~itkDiscreteGaussianImageFilterIUL3IUL3_Pointer();
     itkDiscreteGaussianImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDiscreteGaussianImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkDiscreteGaussianImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkDiscreteGaussianImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkDiscreteGaussianImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkDiscreteGaussianImageFilterIUL3IUL3_Pointer const & r) const;
     itkDiscreteGaussianImageFilterIUL3IUL3_Pointer & operator=(itkDiscreteGaussianImageFilterIUL3IUL3_Pointer const & r);
     itkDiscreteGaussianImageFilterIUL3IUL3_Pointer & operator=(itkDiscreteGaussianImageFilterIUL3IUL3 * r);
     itkDiscreteGaussianImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDiscreteGaussianImageFilterIUS2IUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkDiscreteGaussianImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetVariance(itkFixedArrayD2 const _arg);
     virtual itkFixedArrayD2 const GetVariance() const;
     virtual void SetMaximumError(itkFixedArrayD2 const _arg);
     virtual itkFixedArrayD2 const GetMaximumError() const;
     virtual int GetMaximumKernelWidth() const;
     virtual void SetMaximumKernelWidth(int const _arg);
     virtual unsigned int GetFilterDimensionality() const;
     virtual void SetFilterDimensionality(unsigned int const _arg);
     void SetVariance(double const v);
     void SetMaximumError(double const v);
     void SetVariance(double const * v);
     void SetVariance(float const * v);
     void SetMaximumError(double const * v);
     void SetMaximumError(float const * v);
     void SetUseImageSpacingOn();
     void SetUseImageSpacingOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool GetUseImageSpacing() const;
     virtual void SetInternalNumberOfStreamDivisions(unsigned int const _arg);
     virtual unsigned int const & GetInternalNumberOfStreamDivisions() const;
     virtual void GenerateInputRequestedRegion();
   private:
     itkDiscreteGaussianImageFilterIUS2IUS2(itkDiscreteGaussianImageFilterIUS2IUS2 const & arg0);
     void operator=(itkDiscreteGaussianImageFilterIUS2IUS2 const & arg0);
   protected:
     itkDiscreteGaussianImageFilterIUS2IUS2();
     ~itkDiscreteGaussianImageFilterIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkDiscreteGaussianImageFilterIUS2IUS2_Pointer {
   public:
     itkDiscreteGaussianImageFilterIUS2IUS2_Pointer();
     itkDiscreteGaussianImageFilterIUS2IUS2_Pointer(itkDiscreteGaussianImageFilterIUS2IUS2_Pointer const & p);
     itkDiscreteGaussianImageFilterIUS2IUS2_Pointer(itkDiscreteGaussianImageFilterIUS2IUS2 * p);
     ~itkDiscreteGaussianImageFilterIUS2IUS2_Pointer();
     itkDiscreteGaussianImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDiscreteGaussianImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkDiscreteGaussianImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkDiscreteGaussianImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkDiscreteGaussianImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkDiscreteGaussianImageFilterIUS2IUS2_Pointer const & r) const;
     itkDiscreteGaussianImageFilterIUS2IUS2_Pointer & operator=(itkDiscreteGaussianImageFilterIUS2IUS2_Pointer const & r);
     itkDiscreteGaussianImageFilterIUS2IUS2_Pointer & operator=(itkDiscreteGaussianImageFilterIUS2IUS2 * r);
     itkDiscreteGaussianImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDiscreteGaussianImageFilterIUS3IUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkDiscreteGaussianImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetVariance(itkFixedArrayD3 const _arg);
     virtual itkFixedArrayD3 const GetVariance() const;
     virtual void SetMaximumError(itkFixedArrayD3 const _arg);
     virtual itkFixedArrayD3 const GetMaximumError() const;
     virtual int GetMaximumKernelWidth() const;
     virtual void SetMaximumKernelWidth(int const _arg);
     virtual unsigned int GetFilterDimensionality() const;
     virtual void SetFilterDimensionality(unsigned int const _arg);
     void SetVariance(double const v);
     void SetMaximumError(double const v);
     void SetVariance(double const * v);
     void SetVariance(float const * v);
     void SetMaximumError(double const * v);
     void SetMaximumError(float const * v);
     void SetUseImageSpacingOn();
     void SetUseImageSpacingOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool GetUseImageSpacing() const;
     virtual void SetInternalNumberOfStreamDivisions(unsigned int const _arg);
     virtual unsigned int const & GetInternalNumberOfStreamDivisions() const;
     virtual void GenerateInputRequestedRegion();
   private:
     itkDiscreteGaussianImageFilterIUS3IUS3(itkDiscreteGaussianImageFilterIUS3IUS3 const & arg0);
     void operator=(itkDiscreteGaussianImageFilterIUS3IUS3 const & arg0);
   protected:
     itkDiscreteGaussianImageFilterIUS3IUS3();
     ~itkDiscreteGaussianImageFilterIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkDiscreteGaussianImageFilterIUS3IUS3_Pointer {
   public:
     itkDiscreteGaussianImageFilterIUS3IUS3_Pointer();
     itkDiscreteGaussianImageFilterIUS3IUS3_Pointer(itkDiscreteGaussianImageFilterIUS3IUS3_Pointer const & p);
     itkDiscreteGaussianImageFilterIUS3IUS3_Pointer(itkDiscreteGaussianImageFilterIUS3IUS3 * p);
     ~itkDiscreteGaussianImageFilterIUS3IUS3_Pointer();
     itkDiscreteGaussianImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDiscreteGaussianImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkDiscreteGaussianImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkDiscreteGaussianImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkDiscreteGaussianImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkDiscreteGaussianImageFilterIUS3IUS3_Pointer const & r) const;
     itkDiscreteGaussianImageFilterIUS3IUS3_Pointer & operator=(itkDiscreteGaussianImageFilterIUS3IUS3_Pointer const & r);
     itkDiscreteGaussianImageFilterIUS3IUS3_Pointer & operator=(itkDiscreteGaussianImageFilterIUS3IUS3 * r);
     itkDiscreteGaussianImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


