// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkMovingHistogramImageFilterBaseChicken
#endif
#ifdef SWIGCSHARP
%module itkMovingHistogramImageFilterBaseCsharp
#endif
#ifdef SWIGGUILE
%module itkMovingHistogramImageFilterBaseGuile
#endif
#ifdef SWIGJAVA
%module itkMovingHistogramImageFilterBaseJava
#endif
#ifdef SWIGLUA
%module itkMovingHistogramImageFilterBaseLua
#endif
#ifdef SWIGMODULA3
%module itkMovingHistogramImageFilterBaseModula3
#endif
#ifdef SWIGMZSCHEME
%module itkMovingHistogramImageFilterBaseMzscheme
#endif
#ifdef SWIGOCAML
%module itkMovingHistogramImageFilterBaseOcaml
#endif
#ifdef SWIGPERL
%module itkMovingHistogramImageFilterBasePerl
#endif
#ifdef SWIGPERL5
%module itkMovingHistogramImageFilterBasePerl5
#endif
#ifdef SWIGPHP
%module itkMovingHistogramImageFilterBasePhp
#endif
#ifdef SWIGPHP4
%module itkMovingHistogramImageFilterBasePhp4
#endif
#ifdef SWIGPHP5
%module itkMovingHistogramImageFilterBasePhp5
#endif
#ifdef SWIGPIKE
%module itkMovingHistogramImageFilterBasePike
#endif
#ifdef SWIGPYTHON
%module itkMovingHistogramImageFilterBasePython
#endif
#ifdef SWIGR
%module itkMovingHistogramImageFilterBaseR
#endif
#ifdef SWIGRUBY
%module itkMovingHistogramImageFilterBaseRuby
#endif
#ifdef SWIGSEXP
%module itkMovingHistogramImageFilterBaseSexp
#endif
#ifdef SWIGTCL
%module itkMovingHistogramImageFilterBaseTcl
#endif
#ifdef SWIGXML
%module itkMovingHistogramImageFilterBaseXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Review.includes"
%}


%{
%}




%import wrap_itkIndex.i
%import wrap_itkOffset.i
%import wrap_itkKernelImageFilter.i
%import wrap_itkFlatStructuringElement.i
%import wrap_ITKCommonBase.i


%include itk.i
%include wrap_itkMovingHistogramImageFilterBase_ext.i


 class itkMovingHistogramImageFilterBaseID2ID2SE2 : public itkKernelImageFilterID2ID2SE2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkMovingHistogramImageFilterBaseID2ID2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetKernel(itkFlatStructuringElement2 const & kernel);
     virtual unsigned long GetPixelsPerTranslation() const;
   private:
     itkMovingHistogramImageFilterBaseID2ID2SE2(itkMovingHistogramImageFilterBaseID2ID2SE2 const & arg0);
     void operator=(itkMovingHistogramImageFilterBaseID2ID2SE2 const & arg0);
   protected:
     itkMovingHistogramImageFilterBaseID2ID2SE2();
     ~itkMovingHistogramImageFilterBaseID2ID2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     void GetDirAndOffset(itkIndex2 const LineStart, itkIndex2 const PrevLineStart, itkOffset2 & LineOffset, itkOffset2 & Changes, int & LineDirection);
 };


 class itkMovingHistogramImageFilterBaseID2ID2SE2_Pointer {
   public:
     itkMovingHistogramImageFilterBaseID2ID2SE2_Pointer();
     itkMovingHistogramImageFilterBaseID2ID2SE2_Pointer(itkMovingHistogramImageFilterBaseID2ID2SE2_Pointer const & p);
     itkMovingHistogramImageFilterBaseID2ID2SE2_Pointer(itkMovingHistogramImageFilterBaseID2ID2SE2 * p);
     ~itkMovingHistogramImageFilterBaseID2ID2SE2_Pointer();
     itkMovingHistogramImageFilterBaseID2ID2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMovingHistogramImageFilterBaseID2ID2SE2 * GetPointer() const;
     bool operator<(itkMovingHistogramImageFilterBaseID2ID2SE2_Pointer const & r) const;
     bool operator>(itkMovingHistogramImageFilterBaseID2ID2SE2_Pointer const & r) const;
     bool operator<=(itkMovingHistogramImageFilterBaseID2ID2SE2_Pointer const & r) const;
     bool operator>=(itkMovingHistogramImageFilterBaseID2ID2SE2_Pointer const & r) const;
     itkMovingHistogramImageFilterBaseID2ID2SE2_Pointer & operator=(itkMovingHistogramImageFilterBaseID2ID2SE2_Pointer const & r);
     itkMovingHistogramImageFilterBaseID2ID2SE2_Pointer & operator=(itkMovingHistogramImageFilterBaseID2ID2SE2 * r);
     itkMovingHistogramImageFilterBaseID2ID2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMovingHistogramImageFilterBaseID3ID3SE3 : public itkKernelImageFilterID3ID3SE3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkMovingHistogramImageFilterBaseID3ID3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetKernel(itkFlatStructuringElement3 const & kernel);
     virtual unsigned long GetPixelsPerTranslation() const;
   private:
     itkMovingHistogramImageFilterBaseID3ID3SE3(itkMovingHistogramImageFilterBaseID3ID3SE3 const & arg0);
     void operator=(itkMovingHistogramImageFilterBaseID3ID3SE3 const & arg0);
   protected:
     itkMovingHistogramImageFilterBaseID3ID3SE3();
     ~itkMovingHistogramImageFilterBaseID3ID3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     void GetDirAndOffset(itkIndex3 const LineStart, itkIndex3 const PrevLineStart, itkOffset3 & LineOffset, itkOffset3 & Changes, int & LineDirection);
 };


 class itkMovingHistogramImageFilterBaseID3ID3SE3_Pointer {
   public:
     itkMovingHistogramImageFilterBaseID3ID3SE3_Pointer();
     itkMovingHistogramImageFilterBaseID3ID3SE3_Pointer(itkMovingHistogramImageFilterBaseID3ID3SE3_Pointer const & p);
     itkMovingHistogramImageFilterBaseID3ID3SE3_Pointer(itkMovingHistogramImageFilterBaseID3ID3SE3 * p);
     ~itkMovingHistogramImageFilterBaseID3ID3SE3_Pointer();
     itkMovingHistogramImageFilterBaseID3ID3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMovingHistogramImageFilterBaseID3ID3SE3 * GetPointer() const;
     bool operator<(itkMovingHistogramImageFilterBaseID3ID3SE3_Pointer const & r) const;
     bool operator>(itkMovingHistogramImageFilterBaseID3ID3SE3_Pointer const & r) const;
     bool operator<=(itkMovingHistogramImageFilterBaseID3ID3SE3_Pointer const & r) const;
     bool operator>=(itkMovingHistogramImageFilterBaseID3ID3SE3_Pointer const & r) const;
     itkMovingHistogramImageFilterBaseID3ID3SE3_Pointer & operator=(itkMovingHistogramImageFilterBaseID3ID3SE3_Pointer const & r);
     itkMovingHistogramImageFilterBaseID3ID3SE3_Pointer & operator=(itkMovingHistogramImageFilterBaseID3ID3SE3 * r);
     itkMovingHistogramImageFilterBaseID3ID3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMovingHistogramImageFilterBaseIF2IF2SE2 : public itkKernelImageFilterIF2IF2SE2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkMovingHistogramImageFilterBaseIF2IF2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetKernel(itkFlatStructuringElement2 const & kernel);
     virtual unsigned long GetPixelsPerTranslation() const;
   private:
     itkMovingHistogramImageFilterBaseIF2IF2SE2(itkMovingHistogramImageFilterBaseIF2IF2SE2 const & arg0);
     void operator=(itkMovingHistogramImageFilterBaseIF2IF2SE2 const & arg0);
   protected:
     itkMovingHistogramImageFilterBaseIF2IF2SE2();
     ~itkMovingHistogramImageFilterBaseIF2IF2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     void GetDirAndOffset(itkIndex2 const LineStart, itkIndex2 const PrevLineStart, itkOffset2 & LineOffset, itkOffset2 & Changes, int & LineDirection);
 };


 class itkMovingHistogramImageFilterBaseIF2IF2SE2_Pointer {
   public:
     itkMovingHistogramImageFilterBaseIF2IF2SE2_Pointer();
     itkMovingHistogramImageFilterBaseIF2IF2SE2_Pointer(itkMovingHistogramImageFilterBaseIF2IF2SE2_Pointer const & p);
     itkMovingHistogramImageFilterBaseIF2IF2SE2_Pointer(itkMovingHistogramImageFilterBaseIF2IF2SE2 * p);
     ~itkMovingHistogramImageFilterBaseIF2IF2SE2_Pointer();
     itkMovingHistogramImageFilterBaseIF2IF2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMovingHistogramImageFilterBaseIF2IF2SE2 * GetPointer() const;
     bool operator<(itkMovingHistogramImageFilterBaseIF2IF2SE2_Pointer const & r) const;
     bool operator>(itkMovingHistogramImageFilterBaseIF2IF2SE2_Pointer const & r) const;
     bool operator<=(itkMovingHistogramImageFilterBaseIF2IF2SE2_Pointer const & r) const;
     bool operator>=(itkMovingHistogramImageFilterBaseIF2IF2SE2_Pointer const & r) const;
     itkMovingHistogramImageFilterBaseIF2IF2SE2_Pointer & operator=(itkMovingHistogramImageFilterBaseIF2IF2SE2_Pointer const & r);
     itkMovingHistogramImageFilterBaseIF2IF2SE2_Pointer & operator=(itkMovingHistogramImageFilterBaseIF2IF2SE2 * r);
     itkMovingHistogramImageFilterBaseIF2IF2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMovingHistogramImageFilterBaseIF3IF3SE3 : public itkKernelImageFilterIF3IF3SE3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkMovingHistogramImageFilterBaseIF3IF3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetKernel(itkFlatStructuringElement3 const & kernel);
     virtual unsigned long GetPixelsPerTranslation() const;
   private:
     itkMovingHistogramImageFilterBaseIF3IF3SE3(itkMovingHistogramImageFilterBaseIF3IF3SE3 const & arg0);
     void operator=(itkMovingHistogramImageFilterBaseIF3IF3SE3 const & arg0);
   protected:
     itkMovingHistogramImageFilterBaseIF3IF3SE3();
     ~itkMovingHistogramImageFilterBaseIF3IF3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     void GetDirAndOffset(itkIndex3 const LineStart, itkIndex3 const PrevLineStart, itkOffset3 & LineOffset, itkOffset3 & Changes, int & LineDirection);
 };


 class itkMovingHistogramImageFilterBaseIF3IF3SE3_Pointer {
   public:
     itkMovingHistogramImageFilterBaseIF3IF3SE3_Pointer();
     itkMovingHistogramImageFilterBaseIF3IF3SE3_Pointer(itkMovingHistogramImageFilterBaseIF3IF3SE3_Pointer const & p);
     itkMovingHistogramImageFilterBaseIF3IF3SE3_Pointer(itkMovingHistogramImageFilterBaseIF3IF3SE3 * p);
     ~itkMovingHistogramImageFilterBaseIF3IF3SE3_Pointer();
     itkMovingHistogramImageFilterBaseIF3IF3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMovingHistogramImageFilterBaseIF3IF3SE3 * GetPointer() const;
     bool operator<(itkMovingHistogramImageFilterBaseIF3IF3SE3_Pointer const & r) const;
     bool operator>(itkMovingHistogramImageFilterBaseIF3IF3SE3_Pointer const & r) const;
     bool operator<=(itkMovingHistogramImageFilterBaseIF3IF3SE3_Pointer const & r) const;
     bool operator>=(itkMovingHistogramImageFilterBaseIF3IF3SE3_Pointer const & r) const;
     itkMovingHistogramImageFilterBaseIF3IF3SE3_Pointer & operator=(itkMovingHistogramImageFilterBaseIF3IF3SE3_Pointer const & r);
     itkMovingHistogramImageFilterBaseIF3IF3SE3_Pointer & operator=(itkMovingHistogramImageFilterBaseIF3IF3SE3 * r);
     itkMovingHistogramImageFilterBaseIF3IF3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMovingHistogramImageFilterBaseIUC2IUC2SE2 : public itkKernelImageFilterIUC2IUC2SE2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkMovingHistogramImageFilterBaseIUC2IUC2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetKernel(itkFlatStructuringElement2 const & kernel);
     virtual unsigned long GetPixelsPerTranslation() const;
   private:
     itkMovingHistogramImageFilterBaseIUC2IUC2SE2(itkMovingHistogramImageFilterBaseIUC2IUC2SE2 const & arg0);
     void operator=(itkMovingHistogramImageFilterBaseIUC2IUC2SE2 const & arg0);
   protected:
     itkMovingHistogramImageFilterBaseIUC2IUC2SE2();
     ~itkMovingHistogramImageFilterBaseIUC2IUC2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     void GetDirAndOffset(itkIndex2 const LineStart, itkIndex2 const PrevLineStart, itkOffset2 & LineOffset, itkOffset2 & Changes, int & LineDirection);
 };


 class itkMovingHistogramImageFilterBaseIUC2IUC2SE2_Pointer {
   public:
     itkMovingHistogramImageFilterBaseIUC2IUC2SE2_Pointer();
     itkMovingHistogramImageFilterBaseIUC2IUC2SE2_Pointer(itkMovingHistogramImageFilterBaseIUC2IUC2SE2_Pointer const & p);
     itkMovingHistogramImageFilterBaseIUC2IUC2SE2_Pointer(itkMovingHistogramImageFilterBaseIUC2IUC2SE2 * p);
     ~itkMovingHistogramImageFilterBaseIUC2IUC2SE2_Pointer();
     itkMovingHistogramImageFilterBaseIUC2IUC2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMovingHistogramImageFilterBaseIUC2IUC2SE2 * GetPointer() const;
     bool operator<(itkMovingHistogramImageFilterBaseIUC2IUC2SE2_Pointer const & r) const;
     bool operator>(itkMovingHistogramImageFilterBaseIUC2IUC2SE2_Pointer const & r) const;
     bool operator<=(itkMovingHistogramImageFilterBaseIUC2IUC2SE2_Pointer const & r) const;
     bool operator>=(itkMovingHistogramImageFilterBaseIUC2IUC2SE2_Pointer const & r) const;
     itkMovingHistogramImageFilterBaseIUC2IUC2SE2_Pointer & operator=(itkMovingHistogramImageFilterBaseIUC2IUC2SE2_Pointer const & r);
     itkMovingHistogramImageFilterBaseIUC2IUC2SE2_Pointer & operator=(itkMovingHistogramImageFilterBaseIUC2IUC2SE2 * r);
     itkMovingHistogramImageFilterBaseIUC2IUC2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMovingHistogramImageFilterBaseIUC3IUC3SE3 : public itkKernelImageFilterIUC3IUC3SE3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkMovingHistogramImageFilterBaseIUC3IUC3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetKernel(itkFlatStructuringElement3 const & kernel);
     virtual unsigned long GetPixelsPerTranslation() const;
   private:
     itkMovingHistogramImageFilterBaseIUC3IUC3SE3(itkMovingHistogramImageFilterBaseIUC3IUC3SE3 const & arg0);
     void operator=(itkMovingHistogramImageFilterBaseIUC3IUC3SE3 const & arg0);
   protected:
     itkMovingHistogramImageFilterBaseIUC3IUC3SE3();
     ~itkMovingHistogramImageFilterBaseIUC3IUC3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     void GetDirAndOffset(itkIndex3 const LineStart, itkIndex3 const PrevLineStart, itkOffset3 & LineOffset, itkOffset3 & Changes, int & LineDirection);
 };


 class itkMovingHistogramImageFilterBaseIUC3IUC3SE3_Pointer {
   public:
     itkMovingHistogramImageFilterBaseIUC3IUC3SE3_Pointer();
     itkMovingHistogramImageFilterBaseIUC3IUC3SE3_Pointer(itkMovingHistogramImageFilterBaseIUC3IUC3SE3_Pointer const & p);
     itkMovingHistogramImageFilterBaseIUC3IUC3SE3_Pointer(itkMovingHistogramImageFilterBaseIUC3IUC3SE3 * p);
     ~itkMovingHistogramImageFilterBaseIUC3IUC3SE3_Pointer();
     itkMovingHistogramImageFilterBaseIUC3IUC3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMovingHistogramImageFilterBaseIUC3IUC3SE3 * GetPointer() const;
     bool operator<(itkMovingHistogramImageFilterBaseIUC3IUC3SE3_Pointer const & r) const;
     bool operator>(itkMovingHistogramImageFilterBaseIUC3IUC3SE3_Pointer const & r) const;
     bool operator<=(itkMovingHistogramImageFilterBaseIUC3IUC3SE3_Pointer const & r) const;
     bool operator>=(itkMovingHistogramImageFilterBaseIUC3IUC3SE3_Pointer const & r) const;
     itkMovingHistogramImageFilterBaseIUC3IUC3SE3_Pointer & operator=(itkMovingHistogramImageFilterBaseIUC3IUC3SE3_Pointer const & r);
     itkMovingHistogramImageFilterBaseIUC3IUC3SE3_Pointer & operator=(itkMovingHistogramImageFilterBaseIUC3IUC3SE3 * r);
     itkMovingHistogramImageFilterBaseIUC3IUC3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMovingHistogramImageFilterBaseIUL2IUL2SE2 : public itkKernelImageFilterIUL2IUL2SE2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkMovingHistogramImageFilterBaseIUL2IUL2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetKernel(itkFlatStructuringElement2 const & kernel);
     virtual unsigned long GetPixelsPerTranslation() const;
   private:
     itkMovingHistogramImageFilterBaseIUL2IUL2SE2(itkMovingHistogramImageFilterBaseIUL2IUL2SE2 const & arg0);
     void operator=(itkMovingHistogramImageFilterBaseIUL2IUL2SE2 const & arg0);
   protected:
     itkMovingHistogramImageFilterBaseIUL2IUL2SE2();
     ~itkMovingHistogramImageFilterBaseIUL2IUL2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     void GetDirAndOffset(itkIndex2 const LineStart, itkIndex2 const PrevLineStart, itkOffset2 & LineOffset, itkOffset2 & Changes, int & LineDirection);
 };


 class itkMovingHistogramImageFilterBaseIUL2IUL2SE2_Pointer {
   public:
     itkMovingHistogramImageFilterBaseIUL2IUL2SE2_Pointer();
     itkMovingHistogramImageFilterBaseIUL2IUL2SE2_Pointer(itkMovingHistogramImageFilterBaseIUL2IUL2SE2_Pointer const & p);
     itkMovingHistogramImageFilterBaseIUL2IUL2SE2_Pointer(itkMovingHistogramImageFilterBaseIUL2IUL2SE2 * p);
     ~itkMovingHistogramImageFilterBaseIUL2IUL2SE2_Pointer();
     itkMovingHistogramImageFilterBaseIUL2IUL2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMovingHistogramImageFilterBaseIUL2IUL2SE2 * GetPointer() const;
     bool operator<(itkMovingHistogramImageFilterBaseIUL2IUL2SE2_Pointer const & r) const;
     bool operator>(itkMovingHistogramImageFilterBaseIUL2IUL2SE2_Pointer const & r) const;
     bool operator<=(itkMovingHistogramImageFilterBaseIUL2IUL2SE2_Pointer const & r) const;
     bool operator>=(itkMovingHistogramImageFilterBaseIUL2IUL2SE2_Pointer const & r) const;
     itkMovingHistogramImageFilterBaseIUL2IUL2SE2_Pointer & operator=(itkMovingHistogramImageFilterBaseIUL2IUL2SE2_Pointer const & r);
     itkMovingHistogramImageFilterBaseIUL2IUL2SE2_Pointer & operator=(itkMovingHistogramImageFilterBaseIUL2IUL2SE2 * r);
     itkMovingHistogramImageFilterBaseIUL2IUL2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMovingHistogramImageFilterBaseIUL3IUL3SE3 : public itkKernelImageFilterIUL3IUL3SE3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkMovingHistogramImageFilterBaseIUL3IUL3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetKernel(itkFlatStructuringElement3 const & kernel);
     virtual unsigned long GetPixelsPerTranslation() const;
   private:
     itkMovingHistogramImageFilterBaseIUL3IUL3SE3(itkMovingHistogramImageFilterBaseIUL3IUL3SE3 const & arg0);
     void operator=(itkMovingHistogramImageFilterBaseIUL3IUL3SE3 const & arg0);
   protected:
     itkMovingHistogramImageFilterBaseIUL3IUL3SE3();
     ~itkMovingHistogramImageFilterBaseIUL3IUL3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     void GetDirAndOffset(itkIndex3 const LineStart, itkIndex3 const PrevLineStart, itkOffset3 & LineOffset, itkOffset3 & Changes, int & LineDirection);
 };


 class itkMovingHistogramImageFilterBaseIUL3IUL3SE3_Pointer {
   public:
     itkMovingHistogramImageFilterBaseIUL3IUL3SE3_Pointer();
     itkMovingHistogramImageFilterBaseIUL3IUL3SE3_Pointer(itkMovingHistogramImageFilterBaseIUL3IUL3SE3_Pointer const & p);
     itkMovingHistogramImageFilterBaseIUL3IUL3SE3_Pointer(itkMovingHistogramImageFilterBaseIUL3IUL3SE3 * p);
     ~itkMovingHistogramImageFilterBaseIUL3IUL3SE3_Pointer();
     itkMovingHistogramImageFilterBaseIUL3IUL3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMovingHistogramImageFilterBaseIUL3IUL3SE3 * GetPointer() const;
     bool operator<(itkMovingHistogramImageFilterBaseIUL3IUL3SE3_Pointer const & r) const;
     bool operator>(itkMovingHistogramImageFilterBaseIUL3IUL3SE3_Pointer const & r) const;
     bool operator<=(itkMovingHistogramImageFilterBaseIUL3IUL3SE3_Pointer const & r) const;
     bool operator>=(itkMovingHistogramImageFilterBaseIUL3IUL3SE3_Pointer const & r) const;
     itkMovingHistogramImageFilterBaseIUL3IUL3SE3_Pointer & operator=(itkMovingHistogramImageFilterBaseIUL3IUL3SE3_Pointer const & r);
     itkMovingHistogramImageFilterBaseIUL3IUL3SE3_Pointer & operator=(itkMovingHistogramImageFilterBaseIUL3IUL3SE3 * r);
     itkMovingHistogramImageFilterBaseIUL3IUL3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMovingHistogramImageFilterBaseIUS2IUS2SE2 : public itkKernelImageFilterIUS2IUS2SE2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkMovingHistogramImageFilterBaseIUS2IUS2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetKernel(itkFlatStructuringElement2 const & kernel);
     virtual unsigned long GetPixelsPerTranslation() const;
   private:
     itkMovingHistogramImageFilterBaseIUS2IUS2SE2(itkMovingHistogramImageFilterBaseIUS2IUS2SE2 const & arg0);
     void operator=(itkMovingHistogramImageFilterBaseIUS2IUS2SE2 const & arg0);
   protected:
     itkMovingHistogramImageFilterBaseIUS2IUS2SE2();
     ~itkMovingHistogramImageFilterBaseIUS2IUS2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     void GetDirAndOffset(itkIndex2 const LineStart, itkIndex2 const PrevLineStart, itkOffset2 & LineOffset, itkOffset2 & Changes, int & LineDirection);
 };


 class itkMovingHistogramImageFilterBaseIUS2IUS2SE2_Pointer {
   public:
     itkMovingHistogramImageFilterBaseIUS2IUS2SE2_Pointer();
     itkMovingHistogramImageFilterBaseIUS2IUS2SE2_Pointer(itkMovingHistogramImageFilterBaseIUS2IUS2SE2_Pointer const & p);
     itkMovingHistogramImageFilterBaseIUS2IUS2SE2_Pointer(itkMovingHistogramImageFilterBaseIUS2IUS2SE2 * p);
     ~itkMovingHistogramImageFilterBaseIUS2IUS2SE2_Pointer();
     itkMovingHistogramImageFilterBaseIUS2IUS2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMovingHistogramImageFilterBaseIUS2IUS2SE2 * GetPointer() const;
     bool operator<(itkMovingHistogramImageFilterBaseIUS2IUS2SE2_Pointer const & r) const;
     bool operator>(itkMovingHistogramImageFilterBaseIUS2IUS2SE2_Pointer const & r) const;
     bool operator<=(itkMovingHistogramImageFilterBaseIUS2IUS2SE2_Pointer const & r) const;
     bool operator>=(itkMovingHistogramImageFilterBaseIUS2IUS2SE2_Pointer const & r) const;
     itkMovingHistogramImageFilterBaseIUS2IUS2SE2_Pointer & operator=(itkMovingHistogramImageFilterBaseIUS2IUS2SE2_Pointer const & r);
     itkMovingHistogramImageFilterBaseIUS2IUS2SE2_Pointer & operator=(itkMovingHistogramImageFilterBaseIUS2IUS2SE2 * r);
     itkMovingHistogramImageFilterBaseIUS2IUS2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMovingHistogramImageFilterBaseIUS3IUS3SE3 : public itkKernelImageFilterIUS3IUS3SE3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkMovingHistogramImageFilterBaseIUS3IUS3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetKernel(itkFlatStructuringElement3 const & kernel);
     virtual unsigned long GetPixelsPerTranslation() const;
   private:
     itkMovingHistogramImageFilterBaseIUS3IUS3SE3(itkMovingHistogramImageFilterBaseIUS3IUS3SE3 const & arg0);
     void operator=(itkMovingHistogramImageFilterBaseIUS3IUS3SE3 const & arg0);
   protected:
     itkMovingHistogramImageFilterBaseIUS3IUS3SE3();
     ~itkMovingHistogramImageFilterBaseIUS3IUS3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     void GetDirAndOffset(itkIndex3 const LineStart, itkIndex3 const PrevLineStart, itkOffset3 & LineOffset, itkOffset3 & Changes, int & LineDirection);
 };


 class itkMovingHistogramImageFilterBaseIUS3IUS3SE3_Pointer {
   public:
     itkMovingHistogramImageFilterBaseIUS3IUS3SE3_Pointer();
     itkMovingHistogramImageFilterBaseIUS3IUS3SE3_Pointer(itkMovingHistogramImageFilterBaseIUS3IUS3SE3_Pointer const & p);
     itkMovingHistogramImageFilterBaseIUS3IUS3SE3_Pointer(itkMovingHistogramImageFilterBaseIUS3IUS3SE3 * p);
     ~itkMovingHistogramImageFilterBaseIUS3IUS3SE3_Pointer();
     itkMovingHistogramImageFilterBaseIUS3IUS3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMovingHistogramImageFilterBaseIUS3IUS3SE3 * GetPointer() const;
     bool operator<(itkMovingHistogramImageFilterBaseIUS3IUS3SE3_Pointer const & r) const;
     bool operator>(itkMovingHistogramImageFilterBaseIUS3IUS3SE3_Pointer const & r) const;
     bool operator<=(itkMovingHistogramImageFilterBaseIUS3IUS3SE3_Pointer const & r) const;
     bool operator>=(itkMovingHistogramImageFilterBaseIUS3IUS3SE3_Pointer const & r) const;
     itkMovingHistogramImageFilterBaseIUS3IUS3SE3_Pointer & operator=(itkMovingHistogramImageFilterBaseIUS3IUS3SE3_Pointer const & r);
     itkMovingHistogramImageFilterBaseIUS3IUS3SE3_Pointer & operator=(itkMovingHistogramImageFilterBaseIUS3IUS3SE3 * r);
     itkMovingHistogramImageFilterBaseIUS3IUS3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


