# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkBilateralImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkBilateralImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkBilateralImageFilterPython
            return _itkBilateralImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkBilateralImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkBilateralImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkBilateralImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkFixedArrayPython
import pyBasePython
import ITKRegionsPython
import ITKCommonBasePython
import itkEventObjectsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImageToImageFilterAPython
import itkImagePython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
def itkBilateralImageFilterID3ID3_New():
  return itkBilateralImageFilterID3ID3.New()

def itkBilateralImageFilterID2ID2_New():
  return itkBilateralImageFilterID2ID2.New()

def itkBilateralImageFilterIF3IF3_New():
  return itkBilateralImageFilterIF3IF3.New()

def itkBilateralImageFilterIF2IF2_New():
  return itkBilateralImageFilterIF2IF2.New()

def itkBilateralImageFilterIUS3IUS3_New():
  return itkBilateralImageFilterIUS3IUS3.New()

def itkBilateralImageFilterIUS2IUS2_New():
  return itkBilateralImageFilterIUS2IUS2.New()

def itkBilateralImageFilterIUL3IUL3_New():
  return itkBilateralImageFilterIUL3IUL3.New()

def itkBilateralImageFilterIUL2IUL2_New():
  return itkBilateralImageFilterIUL2IUL2.New()

def itkBilateralImageFilterIUC3IUC3_New():
  return itkBilateralImageFilterIUC3IUC3.New()

def itkBilateralImageFilterIUC2IUC2_New():
  return itkBilateralImageFilterIUC2IUC2.New()

class itkBilateralImageFilterID2ID2(itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    """Proxy of C++ itkBilateralImageFilterID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_ImageDimension
    OutputHasNumericTraitsCheck = _itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_OutputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetDomainSigma(self):
        """GetDomainSigma(self) -> itkFixedArrayD2"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_GetDomainSigma(self)

    def SetRangeSigma(self, *args):
        """SetRangeSigma(self, double _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_SetRangeSigma(self, *args)

    def GetRangeSigma(self):
        """GetRangeSigma(self) -> double"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_GetRangeSigma(self)

    def GetFilterDimensionality(self):
        """GetFilterDimensionality(self) -> unsigned int"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_GetFilterDimensionality(self)

    def SetFilterDimensionality(self, *args):
        """SetFilterDimensionality(self, unsigned int _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_SetFilterDimensionality(self, *args)

    def SetDomainSigma(self, *args):
        """
        SetDomainSigma(self, itkFixedArrayD2 _arg)
        SetDomainSigma(self, double v)
        """
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_SetDomainSigma(self, *args)

    def AutomaticKernelSizeOn(self):
        """AutomaticKernelSizeOn(self)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_AutomaticKernelSizeOn(self)

    def AutomaticKernelSizeOff(self):
        """AutomaticKernelSizeOff(self)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_AutomaticKernelSizeOff(self)

    def GetAutomaticKernelSize(self):
        """GetAutomaticKernelSize(self) -> bool"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_GetAutomaticKernelSize(self)

    def SetAutomaticKernelSize(self, *args):
        """SetAutomaticKernelSize(self, bool _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_SetAutomaticKernelSize(self, *args)

    def SetRadius(self, *args):
        """
        SetRadius(self, unsigned long arg0)
        SetRadius(self, itkSize2 _arg)
        """
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_SetRadius(self, *args)

    def GetRadius(self):
        """GetRadius(self) -> itkSize2"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_GetRadius(self)

    def SetNumberOfRangeGaussianSamples(self, *args):
        """SetNumberOfRangeGaussianSamples(self, unsigned long _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_SetNumberOfRangeGaussianSamples(self, *args)

    def GetNumberOfRangeGaussianSamples(self):
        """GetNumberOfRangeGaussianSamples(self) -> unsigned long"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_GetNumberOfRangeGaussianSamples(self)

    __swig_destroy__ = _itkBilateralImageFilterPython.delete_itkBilateralImageFilterID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkBilateralImageFilterID2ID2"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBilateralImageFilterID2ID2"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBilateralImageFilterID2ID2
        
        Create a new object of the class itkBilateralImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBilateralImageFilterID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBilateralImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBilateralImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBilateralImageFilterID2ID2.GetDomainSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_GetDomainSigma,None,itkBilateralImageFilterID2ID2)
itkBilateralImageFilterID2ID2.SetRangeSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_SetRangeSigma,None,itkBilateralImageFilterID2ID2)
itkBilateralImageFilterID2ID2.GetRangeSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_GetRangeSigma,None,itkBilateralImageFilterID2ID2)
itkBilateralImageFilterID2ID2.GetFilterDimensionality = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_GetFilterDimensionality,None,itkBilateralImageFilterID2ID2)
itkBilateralImageFilterID2ID2.SetFilterDimensionality = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_SetFilterDimensionality,None,itkBilateralImageFilterID2ID2)
itkBilateralImageFilterID2ID2.SetDomainSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_SetDomainSigma,None,itkBilateralImageFilterID2ID2)
itkBilateralImageFilterID2ID2.AutomaticKernelSizeOn = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_AutomaticKernelSizeOn,None,itkBilateralImageFilterID2ID2)
itkBilateralImageFilterID2ID2.AutomaticKernelSizeOff = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_AutomaticKernelSizeOff,None,itkBilateralImageFilterID2ID2)
itkBilateralImageFilterID2ID2.GetAutomaticKernelSize = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_GetAutomaticKernelSize,None,itkBilateralImageFilterID2ID2)
itkBilateralImageFilterID2ID2.SetAutomaticKernelSize = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_SetAutomaticKernelSize,None,itkBilateralImageFilterID2ID2)
itkBilateralImageFilterID2ID2.SetRadius = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_SetRadius,None,itkBilateralImageFilterID2ID2)
itkBilateralImageFilterID2ID2.GetRadius = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_GetRadius,None,itkBilateralImageFilterID2ID2)
itkBilateralImageFilterID2ID2.SetNumberOfRangeGaussianSamples = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_SetNumberOfRangeGaussianSamples,None,itkBilateralImageFilterID2ID2)
itkBilateralImageFilterID2ID2.GetNumberOfRangeGaussianSamples = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_GetNumberOfRangeGaussianSamples,None,itkBilateralImageFilterID2ID2)
itkBilateralImageFilterID2ID2.GetPointer = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_GetPointer,None,itkBilateralImageFilterID2ID2)
itkBilateralImageFilterID2ID2_swigregister = _itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_swigregister
itkBilateralImageFilterID2ID2_swigregister(itkBilateralImageFilterID2ID2)

def itkBilateralImageFilterID2ID2___New_orig__():
  """itkBilateralImageFilterID2ID2___New_orig__()"""
  return _itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2___New_orig__()

def itkBilateralImageFilterID2ID2_cast(*args):
  """itkBilateralImageFilterID2ID2_cast(itkLightObject obj) -> itkBilateralImageFilterID2ID2"""
  return _itkBilateralImageFilterPython.itkBilateralImageFilterID2ID2_cast(*args)

class itkBilateralImageFilterID3ID3(itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    """Proxy of C++ itkBilateralImageFilterID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_ImageDimension
    OutputHasNumericTraitsCheck = _itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_OutputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetDomainSigma(self):
        """GetDomainSigma(self) -> itkFixedArrayD3"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_GetDomainSigma(self)

    def SetRangeSigma(self, *args):
        """SetRangeSigma(self, double _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_SetRangeSigma(self, *args)

    def GetRangeSigma(self):
        """GetRangeSigma(self) -> double"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_GetRangeSigma(self)

    def GetFilterDimensionality(self):
        """GetFilterDimensionality(self) -> unsigned int"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_GetFilterDimensionality(self)

    def SetFilterDimensionality(self, *args):
        """SetFilterDimensionality(self, unsigned int _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_SetFilterDimensionality(self, *args)

    def SetDomainSigma(self, *args):
        """
        SetDomainSigma(self, itkFixedArrayD3 _arg)
        SetDomainSigma(self, double v)
        """
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_SetDomainSigma(self, *args)

    def AutomaticKernelSizeOn(self):
        """AutomaticKernelSizeOn(self)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_AutomaticKernelSizeOn(self)

    def AutomaticKernelSizeOff(self):
        """AutomaticKernelSizeOff(self)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_AutomaticKernelSizeOff(self)

    def GetAutomaticKernelSize(self):
        """GetAutomaticKernelSize(self) -> bool"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_GetAutomaticKernelSize(self)

    def SetAutomaticKernelSize(self, *args):
        """SetAutomaticKernelSize(self, bool _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_SetAutomaticKernelSize(self, *args)

    def SetRadius(self, *args):
        """
        SetRadius(self, unsigned long arg0)
        SetRadius(self, itkSize3 _arg)
        """
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_SetRadius(self, *args)

    def GetRadius(self):
        """GetRadius(self) -> itkSize3"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_GetRadius(self)

    def SetNumberOfRangeGaussianSamples(self, *args):
        """SetNumberOfRangeGaussianSamples(self, unsigned long _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_SetNumberOfRangeGaussianSamples(self, *args)

    def GetNumberOfRangeGaussianSamples(self):
        """GetNumberOfRangeGaussianSamples(self) -> unsigned long"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_GetNumberOfRangeGaussianSamples(self)

    __swig_destroy__ = _itkBilateralImageFilterPython.delete_itkBilateralImageFilterID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkBilateralImageFilterID3ID3"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBilateralImageFilterID3ID3"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBilateralImageFilterID3ID3
        
        Create a new object of the class itkBilateralImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBilateralImageFilterID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBilateralImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBilateralImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBilateralImageFilterID3ID3.GetDomainSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_GetDomainSigma,None,itkBilateralImageFilterID3ID3)
itkBilateralImageFilterID3ID3.SetRangeSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_SetRangeSigma,None,itkBilateralImageFilterID3ID3)
itkBilateralImageFilterID3ID3.GetRangeSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_GetRangeSigma,None,itkBilateralImageFilterID3ID3)
itkBilateralImageFilterID3ID3.GetFilterDimensionality = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_GetFilterDimensionality,None,itkBilateralImageFilterID3ID3)
itkBilateralImageFilterID3ID3.SetFilterDimensionality = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_SetFilterDimensionality,None,itkBilateralImageFilterID3ID3)
itkBilateralImageFilterID3ID3.SetDomainSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_SetDomainSigma,None,itkBilateralImageFilterID3ID3)
itkBilateralImageFilterID3ID3.AutomaticKernelSizeOn = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_AutomaticKernelSizeOn,None,itkBilateralImageFilterID3ID3)
itkBilateralImageFilterID3ID3.AutomaticKernelSizeOff = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_AutomaticKernelSizeOff,None,itkBilateralImageFilterID3ID3)
itkBilateralImageFilterID3ID3.GetAutomaticKernelSize = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_GetAutomaticKernelSize,None,itkBilateralImageFilterID3ID3)
itkBilateralImageFilterID3ID3.SetAutomaticKernelSize = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_SetAutomaticKernelSize,None,itkBilateralImageFilterID3ID3)
itkBilateralImageFilterID3ID3.SetRadius = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_SetRadius,None,itkBilateralImageFilterID3ID3)
itkBilateralImageFilterID3ID3.GetRadius = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_GetRadius,None,itkBilateralImageFilterID3ID3)
itkBilateralImageFilterID3ID3.SetNumberOfRangeGaussianSamples = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_SetNumberOfRangeGaussianSamples,None,itkBilateralImageFilterID3ID3)
itkBilateralImageFilterID3ID3.GetNumberOfRangeGaussianSamples = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_GetNumberOfRangeGaussianSamples,None,itkBilateralImageFilterID3ID3)
itkBilateralImageFilterID3ID3.GetPointer = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_GetPointer,None,itkBilateralImageFilterID3ID3)
itkBilateralImageFilterID3ID3_swigregister = _itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_swigregister
itkBilateralImageFilterID3ID3_swigregister(itkBilateralImageFilterID3ID3)

def itkBilateralImageFilterID3ID3___New_orig__():
  """itkBilateralImageFilterID3ID3___New_orig__()"""
  return _itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3___New_orig__()

def itkBilateralImageFilterID3ID3_cast(*args):
  """itkBilateralImageFilterID3ID3_cast(itkLightObject obj) -> itkBilateralImageFilterID3ID3"""
  return _itkBilateralImageFilterPython.itkBilateralImageFilterID3ID3_cast(*args)

class itkBilateralImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkBilateralImageFilterIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_ImageDimension
    OutputHasNumericTraitsCheck = _itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_OutputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetDomainSigma(self):
        """GetDomainSigma(self) -> itkFixedArrayD2"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_GetDomainSigma(self)

    def SetRangeSigma(self, *args):
        """SetRangeSigma(self, double _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_SetRangeSigma(self, *args)

    def GetRangeSigma(self):
        """GetRangeSigma(self) -> double"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_GetRangeSigma(self)

    def GetFilterDimensionality(self):
        """GetFilterDimensionality(self) -> unsigned int"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_GetFilterDimensionality(self)

    def SetFilterDimensionality(self, *args):
        """SetFilterDimensionality(self, unsigned int _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_SetFilterDimensionality(self, *args)

    def SetDomainSigma(self, *args):
        """
        SetDomainSigma(self, itkFixedArrayD2 _arg)
        SetDomainSigma(self, double v)
        """
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_SetDomainSigma(self, *args)

    def AutomaticKernelSizeOn(self):
        """AutomaticKernelSizeOn(self)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_AutomaticKernelSizeOn(self)

    def AutomaticKernelSizeOff(self):
        """AutomaticKernelSizeOff(self)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_AutomaticKernelSizeOff(self)

    def GetAutomaticKernelSize(self):
        """GetAutomaticKernelSize(self) -> bool"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_GetAutomaticKernelSize(self)

    def SetAutomaticKernelSize(self, *args):
        """SetAutomaticKernelSize(self, bool _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_SetAutomaticKernelSize(self, *args)

    def SetRadius(self, *args):
        """
        SetRadius(self, unsigned long arg0)
        SetRadius(self, itkSize2 _arg)
        """
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_SetRadius(self, *args)

    def GetRadius(self):
        """GetRadius(self) -> itkSize2"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_GetRadius(self)

    def SetNumberOfRangeGaussianSamples(self, *args):
        """SetNumberOfRangeGaussianSamples(self, unsigned long _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_SetNumberOfRangeGaussianSamples(self, *args)

    def GetNumberOfRangeGaussianSamples(self):
        """GetNumberOfRangeGaussianSamples(self) -> unsigned long"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_GetNumberOfRangeGaussianSamples(self)

    __swig_destroy__ = _itkBilateralImageFilterPython.delete_itkBilateralImageFilterIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkBilateralImageFilterIF2IF2"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBilateralImageFilterIF2IF2"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBilateralImageFilterIF2IF2
        
        Create a new object of the class itkBilateralImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBilateralImageFilterIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBilateralImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBilateralImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBilateralImageFilterIF2IF2.GetDomainSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_GetDomainSigma,None,itkBilateralImageFilterIF2IF2)
itkBilateralImageFilterIF2IF2.SetRangeSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_SetRangeSigma,None,itkBilateralImageFilterIF2IF2)
itkBilateralImageFilterIF2IF2.GetRangeSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_GetRangeSigma,None,itkBilateralImageFilterIF2IF2)
itkBilateralImageFilterIF2IF2.GetFilterDimensionality = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_GetFilterDimensionality,None,itkBilateralImageFilterIF2IF2)
itkBilateralImageFilterIF2IF2.SetFilterDimensionality = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_SetFilterDimensionality,None,itkBilateralImageFilterIF2IF2)
itkBilateralImageFilterIF2IF2.SetDomainSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_SetDomainSigma,None,itkBilateralImageFilterIF2IF2)
itkBilateralImageFilterIF2IF2.AutomaticKernelSizeOn = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_AutomaticKernelSizeOn,None,itkBilateralImageFilterIF2IF2)
itkBilateralImageFilterIF2IF2.AutomaticKernelSizeOff = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_AutomaticKernelSizeOff,None,itkBilateralImageFilterIF2IF2)
itkBilateralImageFilterIF2IF2.GetAutomaticKernelSize = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_GetAutomaticKernelSize,None,itkBilateralImageFilterIF2IF2)
itkBilateralImageFilterIF2IF2.SetAutomaticKernelSize = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_SetAutomaticKernelSize,None,itkBilateralImageFilterIF2IF2)
itkBilateralImageFilterIF2IF2.SetRadius = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_SetRadius,None,itkBilateralImageFilterIF2IF2)
itkBilateralImageFilterIF2IF2.GetRadius = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_GetRadius,None,itkBilateralImageFilterIF2IF2)
itkBilateralImageFilterIF2IF2.SetNumberOfRangeGaussianSamples = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_SetNumberOfRangeGaussianSamples,None,itkBilateralImageFilterIF2IF2)
itkBilateralImageFilterIF2IF2.GetNumberOfRangeGaussianSamples = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_GetNumberOfRangeGaussianSamples,None,itkBilateralImageFilterIF2IF2)
itkBilateralImageFilterIF2IF2.GetPointer = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_GetPointer,None,itkBilateralImageFilterIF2IF2)
itkBilateralImageFilterIF2IF2_swigregister = _itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_swigregister
itkBilateralImageFilterIF2IF2_swigregister(itkBilateralImageFilterIF2IF2)

def itkBilateralImageFilterIF2IF2___New_orig__():
  """itkBilateralImageFilterIF2IF2___New_orig__()"""
  return _itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2___New_orig__()

def itkBilateralImageFilterIF2IF2_cast(*args):
  """itkBilateralImageFilterIF2IF2_cast(itkLightObject obj) -> itkBilateralImageFilterIF2IF2"""
  return _itkBilateralImageFilterPython.itkBilateralImageFilterIF2IF2_cast(*args)

class itkBilateralImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkBilateralImageFilterIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_ImageDimension
    OutputHasNumericTraitsCheck = _itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_OutputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetDomainSigma(self):
        """GetDomainSigma(self) -> itkFixedArrayD3"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_GetDomainSigma(self)

    def SetRangeSigma(self, *args):
        """SetRangeSigma(self, double _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_SetRangeSigma(self, *args)

    def GetRangeSigma(self):
        """GetRangeSigma(self) -> double"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_GetRangeSigma(self)

    def GetFilterDimensionality(self):
        """GetFilterDimensionality(self) -> unsigned int"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_GetFilterDimensionality(self)

    def SetFilterDimensionality(self, *args):
        """SetFilterDimensionality(self, unsigned int _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_SetFilterDimensionality(self, *args)

    def SetDomainSigma(self, *args):
        """
        SetDomainSigma(self, itkFixedArrayD3 _arg)
        SetDomainSigma(self, double v)
        """
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_SetDomainSigma(self, *args)

    def AutomaticKernelSizeOn(self):
        """AutomaticKernelSizeOn(self)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_AutomaticKernelSizeOn(self)

    def AutomaticKernelSizeOff(self):
        """AutomaticKernelSizeOff(self)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_AutomaticKernelSizeOff(self)

    def GetAutomaticKernelSize(self):
        """GetAutomaticKernelSize(self) -> bool"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_GetAutomaticKernelSize(self)

    def SetAutomaticKernelSize(self, *args):
        """SetAutomaticKernelSize(self, bool _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_SetAutomaticKernelSize(self, *args)

    def SetRadius(self, *args):
        """
        SetRadius(self, unsigned long arg0)
        SetRadius(self, itkSize3 _arg)
        """
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_SetRadius(self, *args)

    def GetRadius(self):
        """GetRadius(self) -> itkSize3"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_GetRadius(self)

    def SetNumberOfRangeGaussianSamples(self, *args):
        """SetNumberOfRangeGaussianSamples(self, unsigned long _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_SetNumberOfRangeGaussianSamples(self, *args)

    def GetNumberOfRangeGaussianSamples(self):
        """GetNumberOfRangeGaussianSamples(self) -> unsigned long"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_GetNumberOfRangeGaussianSamples(self)

    __swig_destroy__ = _itkBilateralImageFilterPython.delete_itkBilateralImageFilterIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkBilateralImageFilterIF3IF3"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBilateralImageFilterIF3IF3"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBilateralImageFilterIF3IF3
        
        Create a new object of the class itkBilateralImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBilateralImageFilterIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBilateralImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBilateralImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBilateralImageFilterIF3IF3.GetDomainSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_GetDomainSigma,None,itkBilateralImageFilterIF3IF3)
itkBilateralImageFilterIF3IF3.SetRangeSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_SetRangeSigma,None,itkBilateralImageFilterIF3IF3)
itkBilateralImageFilterIF3IF3.GetRangeSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_GetRangeSigma,None,itkBilateralImageFilterIF3IF3)
itkBilateralImageFilterIF3IF3.GetFilterDimensionality = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_GetFilterDimensionality,None,itkBilateralImageFilterIF3IF3)
itkBilateralImageFilterIF3IF3.SetFilterDimensionality = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_SetFilterDimensionality,None,itkBilateralImageFilterIF3IF3)
itkBilateralImageFilterIF3IF3.SetDomainSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_SetDomainSigma,None,itkBilateralImageFilterIF3IF3)
itkBilateralImageFilterIF3IF3.AutomaticKernelSizeOn = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_AutomaticKernelSizeOn,None,itkBilateralImageFilterIF3IF3)
itkBilateralImageFilterIF3IF3.AutomaticKernelSizeOff = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_AutomaticKernelSizeOff,None,itkBilateralImageFilterIF3IF3)
itkBilateralImageFilterIF3IF3.GetAutomaticKernelSize = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_GetAutomaticKernelSize,None,itkBilateralImageFilterIF3IF3)
itkBilateralImageFilterIF3IF3.SetAutomaticKernelSize = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_SetAutomaticKernelSize,None,itkBilateralImageFilterIF3IF3)
itkBilateralImageFilterIF3IF3.SetRadius = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_SetRadius,None,itkBilateralImageFilterIF3IF3)
itkBilateralImageFilterIF3IF3.GetRadius = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_GetRadius,None,itkBilateralImageFilterIF3IF3)
itkBilateralImageFilterIF3IF3.SetNumberOfRangeGaussianSamples = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_SetNumberOfRangeGaussianSamples,None,itkBilateralImageFilterIF3IF3)
itkBilateralImageFilterIF3IF3.GetNumberOfRangeGaussianSamples = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_GetNumberOfRangeGaussianSamples,None,itkBilateralImageFilterIF3IF3)
itkBilateralImageFilterIF3IF3.GetPointer = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_GetPointer,None,itkBilateralImageFilterIF3IF3)
itkBilateralImageFilterIF3IF3_swigregister = _itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_swigregister
itkBilateralImageFilterIF3IF3_swigregister(itkBilateralImageFilterIF3IF3)

def itkBilateralImageFilterIF3IF3___New_orig__():
  """itkBilateralImageFilterIF3IF3___New_orig__()"""
  return _itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3___New_orig__()

def itkBilateralImageFilterIF3IF3_cast(*args):
  """itkBilateralImageFilterIF3IF3_cast(itkLightObject obj) -> itkBilateralImageFilterIF3IF3"""
  return _itkBilateralImageFilterPython.itkBilateralImageFilterIF3IF3_cast(*args)

class itkBilateralImageFilterIUC2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """Proxy of C++ itkBilateralImageFilterIUC2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_ImageDimension
    OutputHasNumericTraitsCheck = _itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_OutputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetDomainSigma(self):
        """GetDomainSigma(self) -> itkFixedArrayD2"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_GetDomainSigma(self)

    def SetRangeSigma(self, *args):
        """SetRangeSigma(self, double _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_SetRangeSigma(self, *args)

    def GetRangeSigma(self):
        """GetRangeSigma(self) -> double"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_GetRangeSigma(self)

    def GetFilterDimensionality(self):
        """GetFilterDimensionality(self) -> unsigned int"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_GetFilterDimensionality(self)

    def SetFilterDimensionality(self, *args):
        """SetFilterDimensionality(self, unsigned int _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_SetFilterDimensionality(self, *args)

    def SetDomainSigma(self, *args):
        """
        SetDomainSigma(self, itkFixedArrayD2 _arg)
        SetDomainSigma(self, double v)
        """
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_SetDomainSigma(self, *args)

    def AutomaticKernelSizeOn(self):
        """AutomaticKernelSizeOn(self)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_AutomaticKernelSizeOn(self)

    def AutomaticKernelSizeOff(self):
        """AutomaticKernelSizeOff(self)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_AutomaticKernelSizeOff(self)

    def GetAutomaticKernelSize(self):
        """GetAutomaticKernelSize(self) -> bool"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_GetAutomaticKernelSize(self)

    def SetAutomaticKernelSize(self, *args):
        """SetAutomaticKernelSize(self, bool _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_SetAutomaticKernelSize(self, *args)

    def SetRadius(self, *args):
        """
        SetRadius(self, unsigned long arg0)
        SetRadius(self, itkSize2 _arg)
        """
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_SetRadius(self, *args)

    def GetRadius(self):
        """GetRadius(self) -> itkSize2"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_GetRadius(self)

    def SetNumberOfRangeGaussianSamples(self, *args):
        """SetNumberOfRangeGaussianSamples(self, unsigned long _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_SetNumberOfRangeGaussianSamples(self, *args)

    def GetNumberOfRangeGaussianSamples(self):
        """GetNumberOfRangeGaussianSamples(self) -> unsigned long"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_GetNumberOfRangeGaussianSamples(self)

    __swig_destroy__ = _itkBilateralImageFilterPython.delete_itkBilateralImageFilterIUC2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkBilateralImageFilterIUC2IUC2"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBilateralImageFilterIUC2IUC2"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBilateralImageFilterIUC2IUC2
        
        Create a new object of the class itkBilateralImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBilateralImageFilterIUC2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBilateralImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBilateralImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBilateralImageFilterIUC2IUC2.GetDomainSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_GetDomainSigma,None,itkBilateralImageFilterIUC2IUC2)
itkBilateralImageFilterIUC2IUC2.SetRangeSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_SetRangeSigma,None,itkBilateralImageFilterIUC2IUC2)
itkBilateralImageFilterIUC2IUC2.GetRangeSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_GetRangeSigma,None,itkBilateralImageFilterIUC2IUC2)
itkBilateralImageFilterIUC2IUC2.GetFilterDimensionality = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_GetFilterDimensionality,None,itkBilateralImageFilterIUC2IUC2)
itkBilateralImageFilterIUC2IUC2.SetFilterDimensionality = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_SetFilterDimensionality,None,itkBilateralImageFilterIUC2IUC2)
itkBilateralImageFilterIUC2IUC2.SetDomainSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_SetDomainSigma,None,itkBilateralImageFilterIUC2IUC2)
itkBilateralImageFilterIUC2IUC2.AutomaticKernelSizeOn = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_AutomaticKernelSizeOn,None,itkBilateralImageFilterIUC2IUC2)
itkBilateralImageFilterIUC2IUC2.AutomaticKernelSizeOff = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_AutomaticKernelSizeOff,None,itkBilateralImageFilterIUC2IUC2)
itkBilateralImageFilterIUC2IUC2.GetAutomaticKernelSize = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_GetAutomaticKernelSize,None,itkBilateralImageFilterIUC2IUC2)
itkBilateralImageFilterIUC2IUC2.SetAutomaticKernelSize = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_SetAutomaticKernelSize,None,itkBilateralImageFilterIUC2IUC2)
itkBilateralImageFilterIUC2IUC2.SetRadius = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_SetRadius,None,itkBilateralImageFilterIUC2IUC2)
itkBilateralImageFilterIUC2IUC2.GetRadius = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_GetRadius,None,itkBilateralImageFilterIUC2IUC2)
itkBilateralImageFilterIUC2IUC2.SetNumberOfRangeGaussianSamples = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_SetNumberOfRangeGaussianSamples,None,itkBilateralImageFilterIUC2IUC2)
itkBilateralImageFilterIUC2IUC2.GetNumberOfRangeGaussianSamples = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_GetNumberOfRangeGaussianSamples,None,itkBilateralImageFilterIUC2IUC2)
itkBilateralImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_GetPointer,None,itkBilateralImageFilterIUC2IUC2)
itkBilateralImageFilterIUC2IUC2_swigregister = _itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_swigregister
itkBilateralImageFilterIUC2IUC2_swigregister(itkBilateralImageFilterIUC2IUC2)

def itkBilateralImageFilterIUC2IUC2___New_orig__():
  """itkBilateralImageFilterIUC2IUC2___New_orig__()"""
  return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2___New_orig__()

def itkBilateralImageFilterIUC2IUC2_cast(*args):
  """itkBilateralImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkBilateralImageFilterIUC2IUC2"""
  return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC2IUC2_cast(*args)

class itkBilateralImageFilterIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """Proxy of C++ itkBilateralImageFilterIUC3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_ImageDimension
    OutputHasNumericTraitsCheck = _itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_OutputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetDomainSigma(self):
        """GetDomainSigma(self) -> itkFixedArrayD3"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_GetDomainSigma(self)

    def SetRangeSigma(self, *args):
        """SetRangeSigma(self, double _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_SetRangeSigma(self, *args)

    def GetRangeSigma(self):
        """GetRangeSigma(self) -> double"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_GetRangeSigma(self)

    def GetFilterDimensionality(self):
        """GetFilterDimensionality(self) -> unsigned int"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_GetFilterDimensionality(self)

    def SetFilterDimensionality(self, *args):
        """SetFilterDimensionality(self, unsigned int _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_SetFilterDimensionality(self, *args)

    def SetDomainSigma(self, *args):
        """
        SetDomainSigma(self, itkFixedArrayD3 _arg)
        SetDomainSigma(self, double v)
        """
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_SetDomainSigma(self, *args)

    def AutomaticKernelSizeOn(self):
        """AutomaticKernelSizeOn(self)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_AutomaticKernelSizeOn(self)

    def AutomaticKernelSizeOff(self):
        """AutomaticKernelSizeOff(self)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_AutomaticKernelSizeOff(self)

    def GetAutomaticKernelSize(self):
        """GetAutomaticKernelSize(self) -> bool"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_GetAutomaticKernelSize(self)

    def SetAutomaticKernelSize(self, *args):
        """SetAutomaticKernelSize(self, bool _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_SetAutomaticKernelSize(self, *args)

    def SetRadius(self, *args):
        """
        SetRadius(self, unsigned long arg0)
        SetRadius(self, itkSize3 _arg)
        """
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_SetRadius(self, *args)

    def GetRadius(self):
        """GetRadius(self) -> itkSize3"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_GetRadius(self)

    def SetNumberOfRangeGaussianSamples(self, *args):
        """SetNumberOfRangeGaussianSamples(self, unsigned long _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_SetNumberOfRangeGaussianSamples(self, *args)

    def GetNumberOfRangeGaussianSamples(self):
        """GetNumberOfRangeGaussianSamples(self) -> unsigned long"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_GetNumberOfRangeGaussianSamples(self)

    __swig_destroy__ = _itkBilateralImageFilterPython.delete_itkBilateralImageFilterIUC3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkBilateralImageFilterIUC3IUC3"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBilateralImageFilterIUC3IUC3"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBilateralImageFilterIUC3IUC3
        
        Create a new object of the class itkBilateralImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBilateralImageFilterIUC3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBilateralImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBilateralImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBilateralImageFilterIUC3IUC3.GetDomainSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_GetDomainSigma,None,itkBilateralImageFilterIUC3IUC3)
itkBilateralImageFilterIUC3IUC3.SetRangeSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_SetRangeSigma,None,itkBilateralImageFilterIUC3IUC3)
itkBilateralImageFilterIUC3IUC3.GetRangeSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_GetRangeSigma,None,itkBilateralImageFilterIUC3IUC3)
itkBilateralImageFilterIUC3IUC3.GetFilterDimensionality = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_GetFilterDimensionality,None,itkBilateralImageFilterIUC3IUC3)
itkBilateralImageFilterIUC3IUC3.SetFilterDimensionality = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_SetFilterDimensionality,None,itkBilateralImageFilterIUC3IUC3)
itkBilateralImageFilterIUC3IUC3.SetDomainSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_SetDomainSigma,None,itkBilateralImageFilterIUC3IUC3)
itkBilateralImageFilterIUC3IUC3.AutomaticKernelSizeOn = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_AutomaticKernelSizeOn,None,itkBilateralImageFilterIUC3IUC3)
itkBilateralImageFilterIUC3IUC3.AutomaticKernelSizeOff = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_AutomaticKernelSizeOff,None,itkBilateralImageFilterIUC3IUC3)
itkBilateralImageFilterIUC3IUC3.GetAutomaticKernelSize = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_GetAutomaticKernelSize,None,itkBilateralImageFilterIUC3IUC3)
itkBilateralImageFilterIUC3IUC3.SetAutomaticKernelSize = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_SetAutomaticKernelSize,None,itkBilateralImageFilterIUC3IUC3)
itkBilateralImageFilterIUC3IUC3.SetRadius = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_SetRadius,None,itkBilateralImageFilterIUC3IUC3)
itkBilateralImageFilterIUC3IUC3.GetRadius = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_GetRadius,None,itkBilateralImageFilterIUC3IUC3)
itkBilateralImageFilterIUC3IUC3.SetNumberOfRangeGaussianSamples = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_SetNumberOfRangeGaussianSamples,None,itkBilateralImageFilterIUC3IUC3)
itkBilateralImageFilterIUC3IUC3.GetNumberOfRangeGaussianSamples = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_GetNumberOfRangeGaussianSamples,None,itkBilateralImageFilterIUC3IUC3)
itkBilateralImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_GetPointer,None,itkBilateralImageFilterIUC3IUC3)
itkBilateralImageFilterIUC3IUC3_swigregister = _itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_swigregister
itkBilateralImageFilterIUC3IUC3_swigregister(itkBilateralImageFilterIUC3IUC3)

def itkBilateralImageFilterIUC3IUC3___New_orig__():
  """itkBilateralImageFilterIUC3IUC3___New_orig__()"""
  return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3___New_orig__()

def itkBilateralImageFilterIUC3IUC3_cast(*args):
  """itkBilateralImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkBilateralImageFilterIUC3IUC3"""
  return _itkBilateralImageFilterPython.itkBilateralImageFilterIUC3IUC3_cast(*args)

class itkBilateralImageFilterIUL2IUL2(itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2):
    """Proxy of C++ itkBilateralImageFilterIUL2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_ImageDimension
    OutputHasNumericTraitsCheck = _itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_OutputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetDomainSigma(self):
        """GetDomainSigma(self) -> itkFixedArrayD2"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_GetDomainSigma(self)

    def SetRangeSigma(self, *args):
        """SetRangeSigma(self, double _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_SetRangeSigma(self, *args)

    def GetRangeSigma(self):
        """GetRangeSigma(self) -> double"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_GetRangeSigma(self)

    def GetFilterDimensionality(self):
        """GetFilterDimensionality(self) -> unsigned int"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_GetFilterDimensionality(self)

    def SetFilterDimensionality(self, *args):
        """SetFilterDimensionality(self, unsigned int _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_SetFilterDimensionality(self, *args)

    def SetDomainSigma(self, *args):
        """
        SetDomainSigma(self, itkFixedArrayD2 _arg)
        SetDomainSigma(self, double v)
        """
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_SetDomainSigma(self, *args)

    def AutomaticKernelSizeOn(self):
        """AutomaticKernelSizeOn(self)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_AutomaticKernelSizeOn(self)

    def AutomaticKernelSizeOff(self):
        """AutomaticKernelSizeOff(self)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_AutomaticKernelSizeOff(self)

    def GetAutomaticKernelSize(self):
        """GetAutomaticKernelSize(self) -> bool"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_GetAutomaticKernelSize(self)

    def SetAutomaticKernelSize(self, *args):
        """SetAutomaticKernelSize(self, bool _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_SetAutomaticKernelSize(self, *args)

    def SetRadius(self, *args):
        """
        SetRadius(self, unsigned long arg0)
        SetRadius(self, itkSize2 _arg)
        """
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_SetRadius(self, *args)

    def GetRadius(self):
        """GetRadius(self) -> itkSize2"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_GetRadius(self)

    def SetNumberOfRangeGaussianSamples(self, *args):
        """SetNumberOfRangeGaussianSamples(self, unsigned long _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_SetNumberOfRangeGaussianSamples(self, *args)

    def GetNumberOfRangeGaussianSamples(self):
        """GetNumberOfRangeGaussianSamples(self) -> unsigned long"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_GetNumberOfRangeGaussianSamples(self)

    __swig_destroy__ = _itkBilateralImageFilterPython.delete_itkBilateralImageFilterIUL2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkBilateralImageFilterIUL2IUL2"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBilateralImageFilterIUL2IUL2"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBilateralImageFilterIUL2IUL2
        
        Create a new object of the class itkBilateralImageFilterIUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBilateralImageFilterIUL2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBilateralImageFilterIUL2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBilateralImageFilterIUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBilateralImageFilterIUL2IUL2.GetDomainSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_GetDomainSigma,None,itkBilateralImageFilterIUL2IUL2)
itkBilateralImageFilterIUL2IUL2.SetRangeSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_SetRangeSigma,None,itkBilateralImageFilterIUL2IUL2)
itkBilateralImageFilterIUL2IUL2.GetRangeSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_GetRangeSigma,None,itkBilateralImageFilterIUL2IUL2)
itkBilateralImageFilterIUL2IUL2.GetFilterDimensionality = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_GetFilterDimensionality,None,itkBilateralImageFilterIUL2IUL2)
itkBilateralImageFilterIUL2IUL2.SetFilterDimensionality = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_SetFilterDimensionality,None,itkBilateralImageFilterIUL2IUL2)
itkBilateralImageFilterIUL2IUL2.SetDomainSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_SetDomainSigma,None,itkBilateralImageFilterIUL2IUL2)
itkBilateralImageFilterIUL2IUL2.AutomaticKernelSizeOn = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_AutomaticKernelSizeOn,None,itkBilateralImageFilterIUL2IUL2)
itkBilateralImageFilterIUL2IUL2.AutomaticKernelSizeOff = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_AutomaticKernelSizeOff,None,itkBilateralImageFilterIUL2IUL2)
itkBilateralImageFilterIUL2IUL2.GetAutomaticKernelSize = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_GetAutomaticKernelSize,None,itkBilateralImageFilterIUL2IUL2)
itkBilateralImageFilterIUL2IUL2.SetAutomaticKernelSize = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_SetAutomaticKernelSize,None,itkBilateralImageFilterIUL2IUL2)
itkBilateralImageFilterIUL2IUL2.SetRadius = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_SetRadius,None,itkBilateralImageFilterIUL2IUL2)
itkBilateralImageFilterIUL2IUL2.GetRadius = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_GetRadius,None,itkBilateralImageFilterIUL2IUL2)
itkBilateralImageFilterIUL2IUL2.SetNumberOfRangeGaussianSamples = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_SetNumberOfRangeGaussianSamples,None,itkBilateralImageFilterIUL2IUL2)
itkBilateralImageFilterIUL2IUL2.GetNumberOfRangeGaussianSamples = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_GetNumberOfRangeGaussianSamples,None,itkBilateralImageFilterIUL2IUL2)
itkBilateralImageFilterIUL2IUL2.GetPointer = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_GetPointer,None,itkBilateralImageFilterIUL2IUL2)
itkBilateralImageFilterIUL2IUL2_swigregister = _itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_swigregister
itkBilateralImageFilterIUL2IUL2_swigregister(itkBilateralImageFilterIUL2IUL2)

def itkBilateralImageFilterIUL2IUL2___New_orig__():
  """itkBilateralImageFilterIUL2IUL2___New_orig__()"""
  return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2___New_orig__()

def itkBilateralImageFilterIUL2IUL2_cast(*args):
  """itkBilateralImageFilterIUL2IUL2_cast(itkLightObject obj) -> itkBilateralImageFilterIUL2IUL2"""
  return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL2IUL2_cast(*args)

class itkBilateralImageFilterIUL3IUL3(itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3):
    """Proxy of C++ itkBilateralImageFilterIUL3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_ImageDimension
    OutputHasNumericTraitsCheck = _itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_OutputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetDomainSigma(self):
        """GetDomainSigma(self) -> itkFixedArrayD3"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_GetDomainSigma(self)

    def SetRangeSigma(self, *args):
        """SetRangeSigma(self, double _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_SetRangeSigma(self, *args)

    def GetRangeSigma(self):
        """GetRangeSigma(self) -> double"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_GetRangeSigma(self)

    def GetFilterDimensionality(self):
        """GetFilterDimensionality(self) -> unsigned int"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_GetFilterDimensionality(self)

    def SetFilterDimensionality(self, *args):
        """SetFilterDimensionality(self, unsigned int _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_SetFilterDimensionality(self, *args)

    def SetDomainSigma(self, *args):
        """
        SetDomainSigma(self, itkFixedArrayD3 _arg)
        SetDomainSigma(self, double v)
        """
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_SetDomainSigma(self, *args)

    def AutomaticKernelSizeOn(self):
        """AutomaticKernelSizeOn(self)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_AutomaticKernelSizeOn(self)

    def AutomaticKernelSizeOff(self):
        """AutomaticKernelSizeOff(self)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_AutomaticKernelSizeOff(self)

    def GetAutomaticKernelSize(self):
        """GetAutomaticKernelSize(self) -> bool"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_GetAutomaticKernelSize(self)

    def SetAutomaticKernelSize(self, *args):
        """SetAutomaticKernelSize(self, bool _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_SetAutomaticKernelSize(self, *args)

    def SetRadius(self, *args):
        """
        SetRadius(self, unsigned long arg0)
        SetRadius(self, itkSize3 _arg)
        """
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_SetRadius(self, *args)

    def GetRadius(self):
        """GetRadius(self) -> itkSize3"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_GetRadius(self)

    def SetNumberOfRangeGaussianSamples(self, *args):
        """SetNumberOfRangeGaussianSamples(self, unsigned long _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_SetNumberOfRangeGaussianSamples(self, *args)

    def GetNumberOfRangeGaussianSamples(self):
        """GetNumberOfRangeGaussianSamples(self) -> unsigned long"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_GetNumberOfRangeGaussianSamples(self)

    __swig_destroy__ = _itkBilateralImageFilterPython.delete_itkBilateralImageFilterIUL3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkBilateralImageFilterIUL3IUL3"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBilateralImageFilterIUL3IUL3"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBilateralImageFilterIUL3IUL3
        
        Create a new object of the class itkBilateralImageFilterIUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBilateralImageFilterIUL3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBilateralImageFilterIUL3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBilateralImageFilterIUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBilateralImageFilterIUL3IUL3.GetDomainSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_GetDomainSigma,None,itkBilateralImageFilterIUL3IUL3)
itkBilateralImageFilterIUL3IUL3.SetRangeSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_SetRangeSigma,None,itkBilateralImageFilterIUL3IUL3)
itkBilateralImageFilterIUL3IUL3.GetRangeSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_GetRangeSigma,None,itkBilateralImageFilterIUL3IUL3)
itkBilateralImageFilterIUL3IUL3.GetFilterDimensionality = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_GetFilterDimensionality,None,itkBilateralImageFilterIUL3IUL3)
itkBilateralImageFilterIUL3IUL3.SetFilterDimensionality = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_SetFilterDimensionality,None,itkBilateralImageFilterIUL3IUL3)
itkBilateralImageFilterIUL3IUL3.SetDomainSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_SetDomainSigma,None,itkBilateralImageFilterIUL3IUL3)
itkBilateralImageFilterIUL3IUL3.AutomaticKernelSizeOn = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_AutomaticKernelSizeOn,None,itkBilateralImageFilterIUL3IUL3)
itkBilateralImageFilterIUL3IUL3.AutomaticKernelSizeOff = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_AutomaticKernelSizeOff,None,itkBilateralImageFilterIUL3IUL3)
itkBilateralImageFilterIUL3IUL3.GetAutomaticKernelSize = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_GetAutomaticKernelSize,None,itkBilateralImageFilterIUL3IUL3)
itkBilateralImageFilterIUL3IUL3.SetAutomaticKernelSize = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_SetAutomaticKernelSize,None,itkBilateralImageFilterIUL3IUL3)
itkBilateralImageFilterIUL3IUL3.SetRadius = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_SetRadius,None,itkBilateralImageFilterIUL3IUL3)
itkBilateralImageFilterIUL3IUL3.GetRadius = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_GetRadius,None,itkBilateralImageFilterIUL3IUL3)
itkBilateralImageFilterIUL3IUL3.SetNumberOfRangeGaussianSamples = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_SetNumberOfRangeGaussianSamples,None,itkBilateralImageFilterIUL3IUL3)
itkBilateralImageFilterIUL3IUL3.GetNumberOfRangeGaussianSamples = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_GetNumberOfRangeGaussianSamples,None,itkBilateralImageFilterIUL3IUL3)
itkBilateralImageFilterIUL3IUL3.GetPointer = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_GetPointer,None,itkBilateralImageFilterIUL3IUL3)
itkBilateralImageFilterIUL3IUL3_swigregister = _itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_swigregister
itkBilateralImageFilterIUL3IUL3_swigregister(itkBilateralImageFilterIUL3IUL3)

def itkBilateralImageFilterIUL3IUL3___New_orig__():
  """itkBilateralImageFilterIUL3IUL3___New_orig__()"""
  return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3___New_orig__()

def itkBilateralImageFilterIUL3IUL3_cast(*args):
  """itkBilateralImageFilterIUL3IUL3_cast(itkLightObject obj) -> itkBilateralImageFilterIUL3IUL3"""
  return _itkBilateralImageFilterPython.itkBilateralImageFilterIUL3IUL3_cast(*args)

class itkBilateralImageFilterIUS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """Proxy of C++ itkBilateralImageFilterIUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_ImageDimension
    OutputHasNumericTraitsCheck = _itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_OutputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetDomainSigma(self):
        """GetDomainSigma(self) -> itkFixedArrayD2"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_GetDomainSigma(self)

    def SetRangeSigma(self, *args):
        """SetRangeSigma(self, double _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_SetRangeSigma(self, *args)

    def GetRangeSigma(self):
        """GetRangeSigma(self) -> double"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_GetRangeSigma(self)

    def GetFilterDimensionality(self):
        """GetFilterDimensionality(self) -> unsigned int"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_GetFilterDimensionality(self)

    def SetFilterDimensionality(self, *args):
        """SetFilterDimensionality(self, unsigned int _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_SetFilterDimensionality(self, *args)

    def SetDomainSigma(self, *args):
        """
        SetDomainSigma(self, itkFixedArrayD2 _arg)
        SetDomainSigma(self, double v)
        """
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_SetDomainSigma(self, *args)

    def AutomaticKernelSizeOn(self):
        """AutomaticKernelSizeOn(self)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_AutomaticKernelSizeOn(self)

    def AutomaticKernelSizeOff(self):
        """AutomaticKernelSizeOff(self)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_AutomaticKernelSizeOff(self)

    def GetAutomaticKernelSize(self):
        """GetAutomaticKernelSize(self) -> bool"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_GetAutomaticKernelSize(self)

    def SetAutomaticKernelSize(self, *args):
        """SetAutomaticKernelSize(self, bool _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_SetAutomaticKernelSize(self, *args)

    def SetRadius(self, *args):
        """
        SetRadius(self, unsigned long arg0)
        SetRadius(self, itkSize2 _arg)
        """
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_SetRadius(self, *args)

    def GetRadius(self):
        """GetRadius(self) -> itkSize2"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_GetRadius(self)

    def SetNumberOfRangeGaussianSamples(self, *args):
        """SetNumberOfRangeGaussianSamples(self, unsigned long _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_SetNumberOfRangeGaussianSamples(self, *args)

    def GetNumberOfRangeGaussianSamples(self):
        """GetNumberOfRangeGaussianSamples(self) -> unsigned long"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_GetNumberOfRangeGaussianSamples(self)

    __swig_destroy__ = _itkBilateralImageFilterPython.delete_itkBilateralImageFilterIUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkBilateralImageFilterIUS2IUS2"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBilateralImageFilterIUS2IUS2"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBilateralImageFilterIUS2IUS2
        
        Create a new object of the class itkBilateralImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBilateralImageFilterIUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBilateralImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBilateralImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBilateralImageFilterIUS2IUS2.GetDomainSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_GetDomainSigma,None,itkBilateralImageFilterIUS2IUS2)
itkBilateralImageFilterIUS2IUS2.SetRangeSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_SetRangeSigma,None,itkBilateralImageFilterIUS2IUS2)
itkBilateralImageFilterIUS2IUS2.GetRangeSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_GetRangeSigma,None,itkBilateralImageFilterIUS2IUS2)
itkBilateralImageFilterIUS2IUS2.GetFilterDimensionality = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_GetFilterDimensionality,None,itkBilateralImageFilterIUS2IUS2)
itkBilateralImageFilterIUS2IUS2.SetFilterDimensionality = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_SetFilterDimensionality,None,itkBilateralImageFilterIUS2IUS2)
itkBilateralImageFilterIUS2IUS2.SetDomainSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_SetDomainSigma,None,itkBilateralImageFilterIUS2IUS2)
itkBilateralImageFilterIUS2IUS2.AutomaticKernelSizeOn = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_AutomaticKernelSizeOn,None,itkBilateralImageFilterIUS2IUS2)
itkBilateralImageFilterIUS2IUS2.AutomaticKernelSizeOff = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_AutomaticKernelSizeOff,None,itkBilateralImageFilterIUS2IUS2)
itkBilateralImageFilterIUS2IUS2.GetAutomaticKernelSize = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_GetAutomaticKernelSize,None,itkBilateralImageFilterIUS2IUS2)
itkBilateralImageFilterIUS2IUS2.SetAutomaticKernelSize = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_SetAutomaticKernelSize,None,itkBilateralImageFilterIUS2IUS2)
itkBilateralImageFilterIUS2IUS2.SetRadius = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_SetRadius,None,itkBilateralImageFilterIUS2IUS2)
itkBilateralImageFilterIUS2IUS2.GetRadius = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_GetRadius,None,itkBilateralImageFilterIUS2IUS2)
itkBilateralImageFilterIUS2IUS2.SetNumberOfRangeGaussianSamples = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_SetNumberOfRangeGaussianSamples,None,itkBilateralImageFilterIUS2IUS2)
itkBilateralImageFilterIUS2IUS2.GetNumberOfRangeGaussianSamples = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_GetNumberOfRangeGaussianSamples,None,itkBilateralImageFilterIUS2IUS2)
itkBilateralImageFilterIUS2IUS2.GetPointer = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_GetPointer,None,itkBilateralImageFilterIUS2IUS2)
itkBilateralImageFilterIUS2IUS2_swigregister = _itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_swigregister
itkBilateralImageFilterIUS2IUS2_swigregister(itkBilateralImageFilterIUS2IUS2)

def itkBilateralImageFilterIUS2IUS2___New_orig__():
  """itkBilateralImageFilterIUS2IUS2___New_orig__()"""
  return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2___New_orig__()

def itkBilateralImageFilterIUS2IUS2_cast(*args):
  """itkBilateralImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkBilateralImageFilterIUS2IUS2"""
  return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS2IUS2_cast(*args)

class itkBilateralImageFilterIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """Proxy of C++ itkBilateralImageFilterIUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_ImageDimension
    OutputHasNumericTraitsCheck = _itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_OutputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetDomainSigma(self):
        """GetDomainSigma(self) -> itkFixedArrayD3"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_GetDomainSigma(self)

    def SetRangeSigma(self, *args):
        """SetRangeSigma(self, double _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_SetRangeSigma(self, *args)

    def GetRangeSigma(self):
        """GetRangeSigma(self) -> double"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_GetRangeSigma(self)

    def GetFilterDimensionality(self):
        """GetFilterDimensionality(self) -> unsigned int"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_GetFilterDimensionality(self)

    def SetFilterDimensionality(self, *args):
        """SetFilterDimensionality(self, unsigned int _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_SetFilterDimensionality(self, *args)

    def SetDomainSigma(self, *args):
        """
        SetDomainSigma(self, itkFixedArrayD3 _arg)
        SetDomainSigma(self, double v)
        """
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_SetDomainSigma(self, *args)

    def AutomaticKernelSizeOn(self):
        """AutomaticKernelSizeOn(self)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_AutomaticKernelSizeOn(self)

    def AutomaticKernelSizeOff(self):
        """AutomaticKernelSizeOff(self)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_AutomaticKernelSizeOff(self)

    def GetAutomaticKernelSize(self):
        """GetAutomaticKernelSize(self) -> bool"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_GetAutomaticKernelSize(self)

    def SetAutomaticKernelSize(self, *args):
        """SetAutomaticKernelSize(self, bool _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_SetAutomaticKernelSize(self, *args)

    def SetRadius(self, *args):
        """
        SetRadius(self, unsigned long arg0)
        SetRadius(self, itkSize3 _arg)
        """
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_SetRadius(self, *args)

    def GetRadius(self):
        """GetRadius(self) -> itkSize3"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_GetRadius(self)

    def SetNumberOfRangeGaussianSamples(self, *args):
        """SetNumberOfRangeGaussianSamples(self, unsigned long _arg)"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_SetNumberOfRangeGaussianSamples(self, *args)

    def GetNumberOfRangeGaussianSamples(self):
        """GetNumberOfRangeGaussianSamples(self) -> unsigned long"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_GetNumberOfRangeGaussianSamples(self)

    __swig_destroy__ = _itkBilateralImageFilterPython.delete_itkBilateralImageFilterIUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkBilateralImageFilterIUS3IUS3"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBilateralImageFilterIUS3IUS3"""
        return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBilateralImageFilterIUS3IUS3
        
        Create a new object of the class itkBilateralImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBilateralImageFilterIUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBilateralImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBilateralImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBilateralImageFilterIUS3IUS3.GetDomainSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_GetDomainSigma,None,itkBilateralImageFilterIUS3IUS3)
itkBilateralImageFilterIUS3IUS3.SetRangeSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_SetRangeSigma,None,itkBilateralImageFilterIUS3IUS3)
itkBilateralImageFilterIUS3IUS3.GetRangeSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_GetRangeSigma,None,itkBilateralImageFilterIUS3IUS3)
itkBilateralImageFilterIUS3IUS3.GetFilterDimensionality = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_GetFilterDimensionality,None,itkBilateralImageFilterIUS3IUS3)
itkBilateralImageFilterIUS3IUS3.SetFilterDimensionality = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_SetFilterDimensionality,None,itkBilateralImageFilterIUS3IUS3)
itkBilateralImageFilterIUS3IUS3.SetDomainSigma = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_SetDomainSigma,None,itkBilateralImageFilterIUS3IUS3)
itkBilateralImageFilterIUS3IUS3.AutomaticKernelSizeOn = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_AutomaticKernelSizeOn,None,itkBilateralImageFilterIUS3IUS3)
itkBilateralImageFilterIUS3IUS3.AutomaticKernelSizeOff = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_AutomaticKernelSizeOff,None,itkBilateralImageFilterIUS3IUS3)
itkBilateralImageFilterIUS3IUS3.GetAutomaticKernelSize = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_GetAutomaticKernelSize,None,itkBilateralImageFilterIUS3IUS3)
itkBilateralImageFilterIUS3IUS3.SetAutomaticKernelSize = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_SetAutomaticKernelSize,None,itkBilateralImageFilterIUS3IUS3)
itkBilateralImageFilterIUS3IUS3.SetRadius = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_SetRadius,None,itkBilateralImageFilterIUS3IUS3)
itkBilateralImageFilterIUS3IUS3.GetRadius = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_GetRadius,None,itkBilateralImageFilterIUS3IUS3)
itkBilateralImageFilterIUS3IUS3.SetNumberOfRangeGaussianSamples = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_SetNumberOfRangeGaussianSamples,None,itkBilateralImageFilterIUS3IUS3)
itkBilateralImageFilterIUS3IUS3.GetNumberOfRangeGaussianSamples = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_GetNumberOfRangeGaussianSamples,None,itkBilateralImageFilterIUS3IUS3)
itkBilateralImageFilterIUS3IUS3.GetPointer = new_instancemethod(_itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_GetPointer,None,itkBilateralImageFilterIUS3IUS3)
itkBilateralImageFilterIUS3IUS3_swigregister = _itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_swigregister
itkBilateralImageFilterIUS3IUS3_swigregister(itkBilateralImageFilterIUS3IUS3)

def itkBilateralImageFilterIUS3IUS3___New_orig__():
  """itkBilateralImageFilterIUS3IUS3___New_orig__()"""
  return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3___New_orig__()

def itkBilateralImageFilterIUS3IUS3_cast(*args):
  """itkBilateralImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkBilateralImageFilterIUS3IUS3"""
  return _itkBilateralImageFilterPython.itkBilateralImageFilterIUS3IUS3_cast(*args)



