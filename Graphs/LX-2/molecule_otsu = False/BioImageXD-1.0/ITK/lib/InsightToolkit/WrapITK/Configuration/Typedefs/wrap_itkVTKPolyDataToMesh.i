// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkVTKPolyDataToMeshChicken
#endif
#ifdef SWIGCSHARP
%module itkVTKPolyDataToMeshCsharp
#endif
#ifdef SWIGGUILE
%module itkVTKPolyDataToMeshGuile
#endif
#ifdef SWIGJAVA
%module itkVTKPolyDataToMeshJava
#endif
#ifdef SWIGLUA
%module itkVTKPolyDataToMeshLua
#endif
#ifdef SWIGMODULA3
%module itkVTKPolyDataToMeshModula3
#endif
#ifdef SWIGMZSCHEME
%module itkVTKPolyDataToMeshMzscheme
#endif
#ifdef SWIGOCAML
%module itkVTKPolyDataToMeshOcaml
#endif
#ifdef SWIGPERL
%module itkVTKPolyDataToMeshPerl
#endif
#ifdef SWIGPERL5
%module itkVTKPolyDataToMeshPerl5
#endif
#ifdef SWIGPHP
%module itkVTKPolyDataToMeshPhp
#endif
#ifdef SWIGPHP4
%module itkVTKPolyDataToMeshPhp4
#endif
#ifdef SWIGPHP5
%module itkVTKPolyDataToMeshPhp5
#endif
#ifdef SWIGPIKE
%module itkVTKPolyDataToMeshPike
#endif
#ifdef SWIGPYTHON
%module itkVTKPolyDataToMeshPython
#endif
#ifdef SWIGR
%module itkVTKPolyDataToMeshR
#endif
#ifdef SWIGRUBY
%module itkVTKPolyDataToMeshRuby
#endif
#ifdef SWIGSEXP
%module itkVTKPolyDataToMeshSexp
#endif
#ifdef SWIGTCL
%module itkVTKPolyDataToMeshTcl
#endif
#ifdef SWIGXML
%module itkVTKPolyDataToMeshXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "SimpleFilters.includes"
#include "Mesh.includes"
#include "ItkVtkGlue.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkMesh.i


%include itk.i
%include itkvtk.swg
%include wrap_itkVTKPolyDataToMesh_ext.i


 class itkVTKPolyDataToMeshMD3S : public itkObject {
   public:
     static itkVTKPolyDataToMeshMD3S_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput(vtkPolyData * polydata);
     vtkPolyData * GetInput();
     itkMeshD3S * GetOutput();
     void Update();
   private:
     itkVTKPolyDataToMeshMD3S();
     ~itkVTKPolyDataToMeshMD3S();
     itkVTKPolyDataToMeshMD3S(itkVTKPolyDataToMeshMD3S const & arg0);
     void operator=(itkVTKPolyDataToMeshMD3S const & arg0);
   protected:
 };


 class itkVTKPolyDataToMeshMD3S_Pointer {
   public:
     itkVTKPolyDataToMeshMD3S_Pointer();
     itkVTKPolyDataToMeshMD3S_Pointer(itkVTKPolyDataToMeshMD3S_Pointer const & p);
     itkVTKPolyDataToMeshMD3S_Pointer(itkVTKPolyDataToMeshMD3S * p);
     ~itkVTKPolyDataToMeshMD3S_Pointer();
     itkVTKPolyDataToMeshMD3S * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVTKPolyDataToMeshMD3S * GetPointer() const;
     bool operator<(itkVTKPolyDataToMeshMD3S_Pointer const & r) const;
     bool operator>(itkVTKPolyDataToMeshMD3S_Pointer const & r) const;
     bool operator<=(itkVTKPolyDataToMeshMD3S_Pointer const & r) const;
     bool operator>=(itkVTKPolyDataToMeshMD3S_Pointer const & r) const;
     itkVTKPolyDataToMeshMD3S_Pointer & operator=(itkVTKPolyDataToMeshMD3S_Pointer const & r);
     itkVTKPolyDataToMeshMD3S_Pointer & operator=(itkVTKPolyDataToMeshMD3S * r);
     itkVTKPolyDataToMeshMD3S * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


