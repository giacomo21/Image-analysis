// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkGradientImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkGradientImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkGradientImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkGradientImageFilterJava
#endif
#ifdef SWIGLUA
%module itkGradientImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkGradientImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkGradientImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkGradientImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkGradientImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkGradientImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkGradientImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkGradientImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkGradientImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkGradientImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkGradientImageFilterPython
#endif
#ifdef SWIGR
%module itkGradientImageFilterR
#endif
#ifdef SWIGRUBY
%module itkGradientImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkGradientImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkGradientImageFilterTcl
#endif
#ifdef SWIGXML
%module itkGradientImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Filtering.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImageToImageFilterB.i
%import wrap_ITKRegions.i


%include itk.i
%include wrap_itkGradientImageFilter_ext.i


 class itkGradientImageFilterID2FF : public itkImageToImageFilterID2ICVF22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkGradientImageFilterID2FF_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void GenerateInputRequestedRegion();
     void SetUseImageSpacingOn();
     void SetUseImageSpacingOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool GetUseImageSpacing() const;
     virtual void SetUseImageDirection(bool const _arg);
     virtual bool GetUseImageDirection() const;
     virtual void UseImageDirectionOn();
     virtual void UseImageDirectionOff();
   private:
     itkGradientImageFilterID2FF(itkGradientImageFilterID2FF const & arg0);
     void operator=(itkGradientImageFilterID2FF const & arg0);
   protected:
     itkGradientImageFilterID2FF();
     ~itkGradientImageFilterID2FF();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkGradientImageFilterID2FF_Pointer {
   public:
     itkGradientImageFilterID2FF_Pointer();
     itkGradientImageFilterID2FF_Pointer(itkGradientImageFilterID2FF_Pointer const & p);
     itkGradientImageFilterID2FF_Pointer(itkGradientImageFilterID2FF * p);
     ~itkGradientImageFilterID2FF_Pointer();
     itkGradientImageFilterID2FF * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGradientImageFilterID2FF * GetPointer() const;
     bool operator<(itkGradientImageFilterID2FF_Pointer const & r) const;
     bool operator>(itkGradientImageFilterID2FF_Pointer const & r) const;
     bool operator<=(itkGradientImageFilterID2FF_Pointer const & r) const;
     bool operator>=(itkGradientImageFilterID2FF_Pointer const & r) const;
     itkGradientImageFilterID2FF_Pointer & operator=(itkGradientImageFilterID2FF_Pointer const & r);
     itkGradientImageFilterID2FF_Pointer & operator=(itkGradientImageFilterID2FF * r);
     itkGradientImageFilterID2FF * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGradientImageFilterID3FF : public itkImageToImageFilterID3ICVF33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkGradientImageFilterID3FF_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void GenerateInputRequestedRegion();
     void SetUseImageSpacingOn();
     void SetUseImageSpacingOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool GetUseImageSpacing() const;
     virtual void SetUseImageDirection(bool const _arg);
     virtual bool GetUseImageDirection() const;
     virtual void UseImageDirectionOn();
     virtual void UseImageDirectionOff();
   private:
     itkGradientImageFilterID3FF(itkGradientImageFilterID3FF const & arg0);
     void operator=(itkGradientImageFilterID3FF const & arg0);
   protected:
     itkGradientImageFilterID3FF();
     ~itkGradientImageFilterID3FF();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkGradientImageFilterID3FF_Pointer {
   public:
     itkGradientImageFilterID3FF_Pointer();
     itkGradientImageFilterID3FF_Pointer(itkGradientImageFilterID3FF_Pointer const & p);
     itkGradientImageFilterID3FF_Pointer(itkGradientImageFilterID3FF * p);
     ~itkGradientImageFilterID3FF_Pointer();
     itkGradientImageFilterID3FF * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGradientImageFilterID3FF * GetPointer() const;
     bool operator<(itkGradientImageFilterID3FF_Pointer const & r) const;
     bool operator>(itkGradientImageFilterID3FF_Pointer const & r) const;
     bool operator<=(itkGradientImageFilterID3FF_Pointer const & r) const;
     bool operator>=(itkGradientImageFilterID3FF_Pointer const & r) const;
     itkGradientImageFilterID3FF_Pointer & operator=(itkGradientImageFilterID3FF_Pointer const & r);
     itkGradientImageFilterID3FF_Pointer & operator=(itkGradientImageFilterID3FF * r);
     itkGradientImageFilterID3FF * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGradientImageFilterIF2FF : public itkImageToImageFilterIF2ICVF22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkGradientImageFilterIF2FF_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void GenerateInputRequestedRegion();
     void SetUseImageSpacingOn();
     void SetUseImageSpacingOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool GetUseImageSpacing() const;
     virtual void SetUseImageDirection(bool const _arg);
     virtual bool GetUseImageDirection() const;
     virtual void UseImageDirectionOn();
     virtual void UseImageDirectionOff();
   private:
     itkGradientImageFilterIF2FF(itkGradientImageFilterIF2FF const & arg0);
     void operator=(itkGradientImageFilterIF2FF const & arg0);
   protected:
     itkGradientImageFilterIF2FF();
     ~itkGradientImageFilterIF2FF();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkGradientImageFilterIF2FF_Pointer {
   public:
     itkGradientImageFilterIF2FF_Pointer();
     itkGradientImageFilterIF2FF_Pointer(itkGradientImageFilterIF2FF_Pointer const & p);
     itkGradientImageFilterIF2FF_Pointer(itkGradientImageFilterIF2FF * p);
     ~itkGradientImageFilterIF2FF_Pointer();
     itkGradientImageFilterIF2FF * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGradientImageFilterIF2FF * GetPointer() const;
     bool operator<(itkGradientImageFilterIF2FF_Pointer const & r) const;
     bool operator>(itkGradientImageFilterIF2FF_Pointer const & r) const;
     bool operator<=(itkGradientImageFilterIF2FF_Pointer const & r) const;
     bool operator>=(itkGradientImageFilterIF2FF_Pointer const & r) const;
     itkGradientImageFilterIF2FF_Pointer & operator=(itkGradientImageFilterIF2FF_Pointer const & r);
     itkGradientImageFilterIF2FF_Pointer & operator=(itkGradientImageFilterIF2FF * r);
     itkGradientImageFilterIF2FF * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGradientImageFilterIF3FF : public itkImageToImageFilterIF3ICVF33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkGradientImageFilterIF3FF_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void GenerateInputRequestedRegion();
     void SetUseImageSpacingOn();
     void SetUseImageSpacingOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool GetUseImageSpacing() const;
     virtual void SetUseImageDirection(bool const _arg);
     virtual bool GetUseImageDirection() const;
     virtual void UseImageDirectionOn();
     virtual void UseImageDirectionOff();
   private:
     itkGradientImageFilterIF3FF(itkGradientImageFilterIF3FF const & arg0);
     void operator=(itkGradientImageFilterIF3FF const & arg0);
   protected:
     itkGradientImageFilterIF3FF();
     ~itkGradientImageFilterIF3FF();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkGradientImageFilterIF3FF_Pointer {
   public:
     itkGradientImageFilterIF3FF_Pointer();
     itkGradientImageFilterIF3FF_Pointer(itkGradientImageFilterIF3FF_Pointer const & p);
     itkGradientImageFilterIF3FF_Pointer(itkGradientImageFilterIF3FF * p);
     ~itkGradientImageFilterIF3FF_Pointer();
     itkGradientImageFilterIF3FF * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGradientImageFilterIF3FF * GetPointer() const;
     bool operator<(itkGradientImageFilterIF3FF_Pointer const & r) const;
     bool operator>(itkGradientImageFilterIF3FF_Pointer const & r) const;
     bool operator<=(itkGradientImageFilterIF3FF_Pointer const & r) const;
     bool operator>=(itkGradientImageFilterIF3FF_Pointer const & r) const;
     itkGradientImageFilterIF3FF_Pointer & operator=(itkGradientImageFilterIF3FF_Pointer const & r);
     itkGradientImageFilterIF3FF_Pointer & operator=(itkGradientImageFilterIF3FF * r);
     itkGradientImageFilterIF3FF * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGradientImageFilterIUC2FF : public itkImageToImageFilterIUC2ICVF22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkGradientImageFilterIUC2FF_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void GenerateInputRequestedRegion();
     void SetUseImageSpacingOn();
     void SetUseImageSpacingOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool GetUseImageSpacing() const;
     virtual void SetUseImageDirection(bool const _arg);
     virtual bool GetUseImageDirection() const;
     virtual void UseImageDirectionOn();
     virtual void UseImageDirectionOff();
   private:
     itkGradientImageFilterIUC2FF(itkGradientImageFilterIUC2FF const & arg0);
     void operator=(itkGradientImageFilterIUC2FF const & arg0);
   protected:
     itkGradientImageFilterIUC2FF();
     ~itkGradientImageFilterIUC2FF();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkGradientImageFilterIUC2FF_Pointer {
   public:
     itkGradientImageFilterIUC2FF_Pointer();
     itkGradientImageFilterIUC2FF_Pointer(itkGradientImageFilterIUC2FF_Pointer const & p);
     itkGradientImageFilterIUC2FF_Pointer(itkGradientImageFilterIUC2FF * p);
     ~itkGradientImageFilterIUC2FF_Pointer();
     itkGradientImageFilterIUC2FF * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGradientImageFilterIUC2FF * GetPointer() const;
     bool operator<(itkGradientImageFilterIUC2FF_Pointer const & r) const;
     bool operator>(itkGradientImageFilterIUC2FF_Pointer const & r) const;
     bool operator<=(itkGradientImageFilterIUC2FF_Pointer const & r) const;
     bool operator>=(itkGradientImageFilterIUC2FF_Pointer const & r) const;
     itkGradientImageFilterIUC2FF_Pointer & operator=(itkGradientImageFilterIUC2FF_Pointer const & r);
     itkGradientImageFilterIUC2FF_Pointer & operator=(itkGradientImageFilterIUC2FF * r);
     itkGradientImageFilterIUC2FF * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGradientImageFilterIUC3FF : public itkImageToImageFilterIUC3ICVF33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkGradientImageFilterIUC3FF_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void GenerateInputRequestedRegion();
     void SetUseImageSpacingOn();
     void SetUseImageSpacingOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool GetUseImageSpacing() const;
     virtual void SetUseImageDirection(bool const _arg);
     virtual bool GetUseImageDirection() const;
     virtual void UseImageDirectionOn();
     virtual void UseImageDirectionOff();
   private:
     itkGradientImageFilterIUC3FF(itkGradientImageFilterIUC3FF const & arg0);
     void operator=(itkGradientImageFilterIUC3FF const & arg0);
   protected:
     itkGradientImageFilterIUC3FF();
     ~itkGradientImageFilterIUC3FF();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkGradientImageFilterIUC3FF_Pointer {
   public:
     itkGradientImageFilterIUC3FF_Pointer();
     itkGradientImageFilterIUC3FF_Pointer(itkGradientImageFilterIUC3FF_Pointer const & p);
     itkGradientImageFilterIUC3FF_Pointer(itkGradientImageFilterIUC3FF * p);
     ~itkGradientImageFilterIUC3FF_Pointer();
     itkGradientImageFilterIUC3FF * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGradientImageFilterIUC3FF * GetPointer() const;
     bool operator<(itkGradientImageFilterIUC3FF_Pointer const & r) const;
     bool operator>(itkGradientImageFilterIUC3FF_Pointer const & r) const;
     bool operator<=(itkGradientImageFilterIUC3FF_Pointer const & r) const;
     bool operator>=(itkGradientImageFilterIUC3FF_Pointer const & r) const;
     itkGradientImageFilterIUC3FF_Pointer & operator=(itkGradientImageFilterIUC3FF_Pointer const & r);
     itkGradientImageFilterIUC3FF_Pointer & operator=(itkGradientImageFilterIUC3FF * r);
     itkGradientImageFilterIUC3FF * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGradientImageFilterIUL2FF : public itkImageToImageFilterIUL2ICVF22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkGradientImageFilterIUL2FF_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void GenerateInputRequestedRegion();
     void SetUseImageSpacingOn();
     void SetUseImageSpacingOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool GetUseImageSpacing() const;
     virtual void SetUseImageDirection(bool const _arg);
     virtual bool GetUseImageDirection() const;
     virtual void UseImageDirectionOn();
     virtual void UseImageDirectionOff();
   private:
     itkGradientImageFilterIUL2FF(itkGradientImageFilterIUL2FF const & arg0);
     void operator=(itkGradientImageFilterIUL2FF const & arg0);
   protected:
     itkGradientImageFilterIUL2FF();
     ~itkGradientImageFilterIUL2FF();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkGradientImageFilterIUL2FF_Pointer {
   public:
     itkGradientImageFilterIUL2FF_Pointer();
     itkGradientImageFilterIUL2FF_Pointer(itkGradientImageFilterIUL2FF_Pointer const & p);
     itkGradientImageFilterIUL2FF_Pointer(itkGradientImageFilterIUL2FF * p);
     ~itkGradientImageFilterIUL2FF_Pointer();
     itkGradientImageFilterIUL2FF * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGradientImageFilterIUL2FF * GetPointer() const;
     bool operator<(itkGradientImageFilterIUL2FF_Pointer const & r) const;
     bool operator>(itkGradientImageFilterIUL2FF_Pointer const & r) const;
     bool operator<=(itkGradientImageFilterIUL2FF_Pointer const & r) const;
     bool operator>=(itkGradientImageFilterIUL2FF_Pointer const & r) const;
     itkGradientImageFilterIUL2FF_Pointer & operator=(itkGradientImageFilterIUL2FF_Pointer const & r);
     itkGradientImageFilterIUL2FF_Pointer & operator=(itkGradientImageFilterIUL2FF * r);
     itkGradientImageFilterIUL2FF * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGradientImageFilterIUL3FF : public itkImageToImageFilterIUL3ICVF33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkGradientImageFilterIUL3FF_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void GenerateInputRequestedRegion();
     void SetUseImageSpacingOn();
     void SetUseImageSpacingOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool GetUseImageSpacing() const;
     virtual void SetUseImageDirection(bool const _arg);
     virtual bool GetUseImageDirection() const;
     virtual void UseImageDirectionOn();
     virtual void UseImageDirectionOff();
   private:
     itkGradientImageFilterIUL3FF(itkGradientImageFilterIUL3FF const & arg0);
     void operator=(itkGradientImageFilterIUL3FF const & arg0);
   protected:
     itkGradientImageFilterIUL3FF();
     ~itkGradientImageFilterIUL3FF();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkGradientImageFilterIUL3FF_Pointer {
   public:
     itkGradientImageFilterIUL3FF_Pointer();
     itkGradientImageFilterIUL3FF_Pointer(itkGradientImageFilterIUL3FF_Pointer const & p);
     itkGradientImageFilterIUL3FF_Pointer(itkGradientImageFilterIUL3FF * p);
     ~itkGradientImageFilterIUL3FF_Pointer();
     itkGradientImageFilterIUL3FF * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGradientImageFilterIUL3FF * GetPointer() const;
     bool operator<(itkGradientImageFilterIUL3FF_Pointer const & r) const;
     bool operator>(itkGradientImageFilterIUL3FF_Pointer const & r) const;
     bool operator<=(itkGradientImageFilterIUL3FF_Pointer const & r) const;
     bool operator>=(itkGradientImageFilterIUL3FF_Pointer const & r) const;
     itkGradientImageFilterIUL3FF_Pointer & operator=(itkGradientImageFilterIUL3FF_Pointer const & r);
     itkGradientImageFilterIUL3FF_Pointer & operator=(itkGradientImageFilterIUL3FF * r);
     itkGradientImageFilterIUL3FF * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGradientImageFilterIUS2FF : public itkImageToImageFilterIUS2ICVF22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkGradientImageFilterIUS2FF_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void GenerateInputRequestedRegion();
     void SetUseImageSpacingOn();
     void SetUseImageSpacingOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool GetUseImageSpacing() const;
     virtual void SetUseImageDirection(bool const _arg);
     virtual bool GetUseImageDirection() const;
     virtual void UseImageDirectionOn();
     virtual void UseImageDirectionOff();
   private:
     itkGradientImageFilterIUS2FF(itkGradientImageFilterIUS2FF const & arg0);
     void operator=(itkGradientImageFilterIUS2FF const & arg0);
   protected:
     itkGradientImageFilterIUS2FF();
     ~itkGradientImageFilterIUS2FF();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkGradientImageFilterIUS2FF_Pointer {
   public:
     itkGradientImageFilterIUS2FF_Pointer();
     itkGradientImageFilterIUS2FF_Pointer(itkGradientImageFilterIUS2FF_Pointer const & p);
     itkGradientImageFilterIUS2FF_Pointer(itkGradientImageFilterIUS2FF * p);
     ~itkGradientImageFilterIUS2FF_Pointer();
     itkGradientImageFilterIUS2FF * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGradientImageFilterIUS2FF * GetPointer() const;
     bool operator<(itkGradientImageFilterIUS2FF_Pointer const & r) const;
     bool operator>(itkGradientImageFilterIUS2FF_Pointer const & r) const;
     bool operator<=(itkGradientImageFilterIUS2FF_Pointer const & r) const;
     bool operator>=(itkGradientImageFilterIUS2FF_Pointer const & r) const;
     itkGradientImageFilterIUS2FF_Pointer & operator=(itkGradientImageFilterIUS2FF_Pointer const & r);
     itkGradientImageFilterIUS2FF_Pointer & operator=(itkGradientImageFilterIUS2FF * r);
     itkGradientImageFilterIUS2FF * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkGradientImageFilterIUS3FF : public itkImageToImageFilterIUS3ICVF33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkGradientImageFilterIUS3FF_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void GenerateInputRequestedRegion();
     void SetUseImageSpacingOn();
     void SetUseImageSpacingOff();
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool GetUseImageSpacing() const;
     virtual void SetUseImageDirection(bool const _arg);
     virtual bool GetUseImageDirection() const;
     virtual void UseImageDirectionOn();
     virtual void UseImageDirectionOff();
   private:
     itkGradientImageFilterIUS3FF(itkGradientImageFilterIUS3FF const & arg0);
     void operator=(itkGradientImageFilterIUS3FF const & arg0);
   protected:
     itkGradientImageFilterIUS3FF();
     ~itkGradientImageFilterIUS3FF();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkGradientImageFilterIUS3FF_Pointer {
   public:
     itkGradientImageFilterIUS3FF_Pointer();
     itkGradientImageFilterIUS3FF_Pointer(itkGradientImageFilterIUS3FF_Pointer const & p);
     itkGradientImageFilterIUS3FF_Pointer(itkGradientImageFilterIUS3FF * p);
     ~itkGradientImageFilterIUS3FF_Pointer();
     itkGradientImageFilterIUS3FF * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkGradientImageFilterIUS3FF * GetPointer() const;
     bool operator<(itkGradientImageFilterIUS3FF_Pointer const & r) const;
     bool operator>(itkGradientImageFilterIUS3FF_Pointer const & r) const;
     bool operator<=(itkGradientImageFilterIUS3FF_Pointer const & r) const;
     bool operator>=(itkGradientImageFilterIUS3FF_Pointer const & r) const;
     itkGradientImageFilterIUS3FF_Pointer & operator=(itkGradientImageFilterIUS3FF_Pointer const & r);
     itkGradientImageFilterIUS3FF_Pointer & operator=(itkGradientImageFilterIUS3FF * r);
     itkGradientImageFilterIUS3FF * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


