// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkDynamicThreshold3DImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkDynamicThreshold3DImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkDynamicThreshold3DImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkDynamicThreshold3DImageFilterJava
#endif
#ifdef SWIGLUA
%module itkDynamicThreshold3DImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkDynamicThreshold3DImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkDynamicThreshold3DImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkDynamicThreshold3DImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkDynamicThreshold3DImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkDynamicThreshold3DImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkDynamicThreshold3DImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkDynamicThreshold3DImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkDynamicThreshold3DImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkDynamicThreshold3DImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkDynamicThreshold3DImageFilterPython
#endif
#ifdef SWIGR
%module itkDynamicThreshold3DImageFilterR
#endif
#ifdef SWIGRUBY
%module itkDynamicThreshold3DImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkDynamicThreshold3DImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkDynamicThreshold3DImageFilterTcl
#endif
#ifdef SWIGXML
%module itkDynamicThreshold3DImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "itkBXD.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImageToImageFilterA.i


%include itk.i
%include wrap_itkDynamicThreshold3DImageFilter_ext.i


 class itkDynamicThreshold3DImageFilterID2ID2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  Mean = 0 };
     enum  {  Median = 1 };
     enum  {  ImageDimension = 2 };
     static itkDynamicThreshold3DImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual int GetStatisticsType() const;
     virtual void SetInsideValue(double const _arg);
     virtual double GetInsideValue() const;
     virtual void SetOutsideValue(double const _arg);
     virtual double GetOutsideValue() const;
     virtual void SetThreshold(double const _arg);
     virtual double GetThreshold();
     virtual int GetUseImageSpacing();
     virtual unsigned int const * GetRadius() const;
     void SetStatisticsType(int arg0);
     void SetStatisticsTypeMean();
     void SetStatisticsTypeMedian();
     void SetUseImageSpacing(int arg0);
     void SetUseImageSpacingOn();
     void SetUseImageSpacingOff();
     int SetRadius(unsigned int x, unsigned int y, unsigned int z = 0);
   private:
     itkDynamicThreshold3DImageFilterID2ID2(itkDynamicThreshold3DImageFilterID2ID2 const & arg0);
     void operator=(itkDynamicThreshold3DImageFilterID2ID2 const & arg0);
   protected:
     itkDynamicThreshold3DImageFilterID2ID2();
     ~itkDynamicThreshold3DImageFilterID2ID2();
     void Unallocate();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     void AllocateOutputImage();
 };


 class itkDynamicThreshold3DImageFilterID2ID2_Pointer {
   public:
     itkDynamicThreshold3DImageFilterID2ID2_Pointer();
     itkDynamicThreshold3DImageFilterID2ID2_Pointer(itkDynamicThreshold3DImageFilterID2ID2_Pointer const & p);
     itkDynamicThreshold3DImageFilterID2ID2_Pointer(itkDynamicThreshold3DImageFilterID2ID2 * p);
     ~itkDynamicThreshold3DImageFilterID2ID2_Pointer();
     itkDynamicThreshold3DImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDynamicThreshold3DImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkDynamicThreshold3DImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkDynamicThreshold3DImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkDynamicThreshold3DImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkDynamicThreshold3DImageFilterID2ID2_Pointer const & r) const;
     itkDynamicThreshold3DImageFilterID2ID2_Pointer & operator=(itkDynamicThreshold3DImageFilterID2ID2_Pointer const & r);
     itkDynamicThreshold3DImageFilterID2ID2_Pointer & operator=(itkDynamicThreshold3DImageFilterID2ID2 * r);
     itkDynamicThreshold3DImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDynamicThreshold3DImageFilterID3ID3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  Mean = 0 };
     enum  {  Median = 1 };
     enum  {  ImageDimension = 3 };
     static itkDynamicThreshold3DImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual int GetStatisticsType() const;
     virtual void SetInsideValue(double const _arg);
     virtual double GetInsideValue() const;
     virtual void SetOutsideValue(double const _arg);
     virtual double GetOutsideValue() const;
     virtual void SetThreshold(double const _arg);
     virtual double GetThreshold();
     virtual int GetUseImageSpacing();
     virtual unsigned int const * GetRadius() const;
     void SetStatisticsType(int arg0);
     void SetStatisticsTypeMean();
     void SetStatisticsTypeMedian();
     void SetUseImageSpacing(int arg0);
     void SetUseImageSpacingOn();
     void SetUseImageSpacingOff();
     int SetRadius(unsigned int x, unsigned int y, unsigned int z = 0);
   private:
     itkDynamicThreshold3DImageFilterID3ID3(itkDynamicThreshold3DImageFilterID3ID3 const & arg0);
     void operator=(itkDynamicThreshold3DImageFilterID3ID3 const & arg0);
   protected:
     itkDynamicThreshold3DImageFilterID3ID3();
     ~itkDynamicThreshold3DImageFilterID3ID3();
     void Unallocate();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     void AllocateOutputImage();
 };


 class itkDynamicThreshold3DImageFilterID3ID3_Pointer {
   public:
     itkDynamicThreshold3DImageFilterID3ID3_Pointer();
     itkDynamicThreshold3DImageFilterID3ID3_Pointer(itkDynamicThreshold3DImageFilterID3ID3_Pointer const & p);
     itkDynamicThreshold3DImageFilterID3ID3_Pointer(itkDynamicThreshold3DImageFilterID3ID3 * p);
     ~itkDynamicThreshold3DImageFilterID3ID3_Pointer();
     itkDynamicThreshold3DImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDynamicThreshold3DImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkDynamicThreshold3DImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkDynamicThreshold3DImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkDynamicThreshold3DImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkDynamicThreshold3DImageFilterID3ID3_Pointer const & r) const;
     itkDynamicThreshold3DImageFilterID3ID3_Pointer & operator=(itkDynamicThreshold3DImageFilterID3ID3_Pointer const & r);
     itkDynamicThreshold3DImageFilterID3ID3_Pointer & operator=(itkDynamicThreshold3DImageFilterID3ID3 * r);
     itkDynamicThreshold3DImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDynamicThreshold3DImageFilterIF2IF2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  Mean = 0 };
     enum  {  Median = 1 };
     enum  {  ImageDimension = 2 };
     static itkDynamicThreshold3DImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual int GetStatisticsType() const;
     virtual void SetInsideValue(float const _arg);
     virtual float GetInsideValue() const;
     virtual void SetOutsideValue(float const _arg);
     virtual float GetOutsideValue() const;
     virtual void SetThreshold(float const _arg);
     virtual float GetThreshold();
     virtual int GetUseImageSpacing();
     virtual unsigned int const * GetRadius() const;
     void SetStatisticsType(int arg0);
     void SetStatisticsTypeMean();
     void SetStatisticsTypeMedian();
     void SetUseImageSpacing(int arg0);
     void SetUseImageSpacingOn();
     void SetUseImageSpacingOff();
     int SetRadius(unsigned int x, unsigned int y, unsigned int z = 0);
   private:
     itkDynamicThreshold3DImageFilterIF2IF2(itkDynamicThreshold3DImageFilterIF2IF2 const & arg0);
     void operator=(itkDynamicThreshold3DImageFilterIF2IF2 const & arg0);
   protected:
     itkDynamicThreshold3DImageFilterIF2IF2();
     ~itkDynamicThreshold3DImageFilterIF2IF2();
     void Unallocate();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     void AllocateOutputImage();
 };


 class itkDynamicThreshold3DImageFilterIF2IF2_Pointer {
   public:
     itkDynamicThreshold3DImageFilterIF2IF2_Pointer();
     itkDynamicThreshold3DImageFilterIF2IF2_Pointer(itkDynamicThreshold3DImageFilterIF2IF2_Pointer const & p);
     itkDynamicThreshold3DImageFilterIF2IF2_Pointer(itkDynamicThreshold3DImageFilterIF2IF2 * p);
     ~itkDynamicThreshold3DImageFilterIF2IF2_Pointer();
     itkDynamicThreshold3DImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDynamicThreshold3DImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkDynamicThreshold3DImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkDynamicThreshold3DImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkDynamicThreshold3DImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkDynamicThreshold3DImageFilterIF2IF2_Pointer const & r) const;
     itkDynamicThreshold3DImageFilterIF2IF2_Pointer & operator=(itkDynamicThreshold3DImageFilterIF2IF2_Pointer const & r);
     itkDynamicThreshold3DImageFilterIF2IF2_Pointer & operator=(itkDynamicThreshold3DImageFilterIF2IF2 * r);
     itkDynamicThreshold3DImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDynamicThreshold3DImageFilterIF3IF3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  Mean = 0 };
     enum  {  Median = 1 };
     enum  {  ImageDimension = 3 };
     static itkDynamicThreshold3DImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual int GetStatisticsType() const;
     virtual void SetInsideValue(float const _arg);
     virtual float GetInsideValue() const;
     virtual void SetOutsideValue(float const _arg);
     virtual float GetOutsideValue() const;
     virtual void SetThreshold(float const _arg);
     virtual float GetThreshold();
     virtual int GetUseImageSpacing();
     virtual unsigned int const * GetRadius() const;
     void SetStatisticsType(int arg0);
     void SetStatisticsTypeMean();
     void SetStatisticsTypeMedian();
     void SetUseImageSpacing(int arg0);
     void SetUseImageSpacingOn();
     void SetUseImageSpacingOff();
     int SetRadius(unsigned int x, unsigned int y, unsigned int z = 0);
   private:
     itkDynamicThreshold3DImageFilterIF3IF3(itkDynamicThreshold3DImageFilterIF3IF3 const & arg0);
     void operator=(itkDynamicThreshold3DImageFilterIF3IF3 const & arg0);
   protected:
     itkDynamicThreshold3DImageFilterIF3IF3();
     ~itkDynamicThreshold3DImageFilterIF3IF3();
     void Unallocate();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     void AllocateOutputImage();
 };


 class itkDynamicThreshold3DImageFilterIF3IF3_Pointer {
   public:
     itkDynamicThreshold3DImageFilterIF3IF3_Pointer();
     itkDynamicThreshold3DImageFilterIF3IF3_Pointer(itkDynamicThreshold3DImageFilterIF3IF3_Pointer const & p);
     itkDynamicThreshold3DImageFilterIF3IF3_Pointer(itkDynamicThreshold3DImageFilterIF3IF3 * p);
     ~itkDynamicThreshold3DImageFilterIF3IF3_Pointer();
     itkDynamicThreshold3DImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDynamicThreshold3DImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkDynamicThreshold3DImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkDynamicThreshold3DImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkDynamicThreshold3DImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkDynamicThreshold3DImageFilterIF3IF3_Pointer const & r) const;
     itkDynamicThreshold3DImageFilterIF3IF3_Pointer & operator=(itkDynamicThreshold3DImageFilterIF3IF3_Pointer const & r);
     itkDynamicThreshold3DImageFilterIF3IF3_Pointer & operator=(itkDynamicThreshold3DImageFilterIF3IF3 * r);
     itkDynamicThreshold3DImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDynamicThreshold3DImageFilterIUC2IUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  Mean = 0 };
     enum  {  Median = 1 };
     enum  {  ImageDimension = 2 };
     static itkDynamicThreshold3DImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual int GetStatisticsType() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char GetInsideValue() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char GetOutsideValue() const;
     virtual void SetThreshold(unsigned char const _arg);
     virtual unsigned char GetThreshold();
     virtual int GetUseImageSpacing();
     virtual unsigned int const * GetRadius() const;
     void SetStatisticsType(int arg0);
     void SetStatisticsTypeMean();
     void SetStatisticsTypeMedian();
     void SetUseImageSpacing(int arg0);
     void SetUseImageSpacingOn();
     void SetUseImageSpacingOff();
     int SetRadius(unsigned int x, unsigned int y, unsigned int z = 0);
   private:
     itkDynamicThreshold3DImageFilterIUC2IUC2(itkDynamicThreshold3DImageFilterIUC2IUC2 const & arg0);
     void operator=(itkDynamicThreshold3DImageFilterIUC2IUC2 const & arg0);
   protected:
     itkDynamicThreshold3DImageFilterIUC2IUC2();
     ~itkDynamicThreshold3DImageFilterIUC2IUC2();
     void Unallocate();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     void AllocateOutputImage();
 };


 class itkDynamicThreshold3DImageFilterIUC2IUC2_Pointer {
   public:
     itkDynamicThreshold3DImageFilterIUC2IUC2_Pointer();
     itkDynamicThreshold3DImageFilterIUC2IUC2_Pointer(itkDynamicThreshold3DImageFilterIUC2IUC2_Pointer const & p);
     itkDynamicThreshold3DImageFilterIUC2IUC2_Pointer(itkDynamicThreshold3DImageFilterIUC2IUC2 * p);
     ~itkDynamicThreshold3DImageFilterIUC2IUC2_Pointer();
     itkDynamicThreshold3DImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDynamicThreshold3DImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkDynamicThreshold3DImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkDynamicThreshold3DImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkDynamicThreshold3DImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkDynamicThreshold3DImageFilterIUC2IUC2_Pointer const & r) const;
     itkDynamicThreshold3DImageFilterIUC2IUC2_Pointer & operator=(itkDynamicThreshold3DImageFilterIUC2IUC2_Pointer const & r);
     itkDynamicThreshold3DImageFilterIUC2IUC2_Pointer & operator=(itkDynamicThreshold3DImageFilterIUC2IUC2 * r);
     itkDynamicThreshold3DImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDynamicThreshold3DImageFilterIUC3IUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  Mean = 0 };
     enum  {  Median = 1 };
     enum  {  ImageDimension = 3 };
     static itkDynamicThreshold3DImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual int GetStatisticsType() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char GetInsideValue() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char GetOutsideValue() const;
     virtual void SetThreshold(unsigned char const _arg);
     virtual unsigned char GetThreshold();
     virtual int GetUseImageSpacing();
     virtual unsigned int const * GetRadius() const;
     void SetStatisticsType(int arg0);
     void SetStatisticsTypeMean();
     void SetStatisticsTypeMedian();
     void SetUseImageSpacing(int arg0);
     void SetUseImageSpacingOn();
     void SetUseImageSpacingOff();
     int SetRadius(unsigned int x, unsigned int y, unsigned int z = 0);
   private:
     itkDynamicThreshold3DImageFilterIUC3IUC3(itkDynamicThreshold3DImageFilterIUC3IUC3 const & arg0);
     void operator=(itkDynamicThreshold3DImageFilterIUC3IUC3 const & arg0);
   protected:
     itkDynamicThreshold3DImageFilterIUC3IUC3();
     ~itkDynamicThreshold3DImageFilterIUC3IUC3();
     void Unallocate();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     void AllocateOutputImage();
 };


 class itkDynamicThreshold3DImageFilterIUC3IUC3_Pointer {
   public:
     itkDynamicThreshold3DImageFilterIUC3IUC3_Pointer();
     itkDynamicThreshold3DImageFilterIUC3IUC3_Pointer(itkDynamicThreshold3DImageFilterIUC3IUC3_Pointer const & p);
     itkDynamicThreshold3DImageFilterIUC3IUC3_Pointer(itkDynamicThreshold3DImageFilterIUC3IUC3 * p);
     ~itkDynamicThreshold3DImageFilterIUC3IUC3_Pointer();
     itkDynamicThreshold3DImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDynamicThreshold3DImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkDynamicThreshold3DImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkDynamicThreshold3DImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkDynamicThreshold3DImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkDynamicThreshold3DImageFilterIUC3IUC3_Pointer const & r) const;
     itkDynamicThreshold3DImageFilterIUC3IUC3_Pointer & operator=(itkDynamicThreshold3DImageFilterIUC3IUC3_Pointer const & r);
     itkDynamicThreshold3DImageFilterIUC3IUC3_Pointer & operator=(itkDynamicThreshold3DImageFilterIUC3IUC3 * r);
     itkDynamicThreshold3DImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDynamicThreshold3DImageFilterIUL2IUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  Mean = 0 };
     enum  {  Median = 1 };
     enum  {  ImageDimension = 2 };
     static itkDynamicThreshold3DImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual int GetStatisticsType() const;
     virtual void SetInsideValue(unsigned long const _arg);
     virtual unsigned long GetInsideValue() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long GetOutsideValue() const;
     virtual void SetThreshold(unsigned long const _arg);
     virtual unsigned long GetThreshold();
     virtual int GetUseImageSpacing();
     virtual unsigned int const * GetRadius() const;
     void SetStatisticsType(int arg0);
     void SetStatisticsTypeMean();
     void SetStatisticsTypeMedian();
     void SetUseImageSpacing(int arg0);
     void SetUseImageSpacingOn();
     void SetUseImageSpacingOff();
     int SetRadius(unsigned int x, unsigned int y, unsigned int z = 0);
   private:
     itkDynamicThreshold3DImageFilterIUL2IUL2(itkDynamicThreshold3DImageFilterIUL2IUL2 const & arg0);
     void operator=(itkDynamicThreshold3DImageFilterIUL2IUL2 const & arg0);
   protected:
     itkDynamicThreshold3DImageFilterIUL2IUL2();
     ~itkDynamicThreshold3DImageFilterIUL2IUL2();
     void Unallocate();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     void AllocateOutputImage();
 };


 class itkDynamicThreshold3DImageFilterIUL2IUL2_Pointer {
   public:
     itkDynamicThreshold3DImageFilterIUL2IUL2_Pointer();
     itkDynamicThreshold3DImageFilterIUL2IUL2_Pointer(itkDynamicThreshold3DImageFilterIUL2IUL2_Pointer const & p);
     itkDynamicThreshold3DImageFilterIUL2IUL2_Pointer(itkDynamicThreshold3DImageFilterIUL2IUL2 * p);
     ~itkDynamicThreshold3DImageFilterIUL2IUL2_Pointer();
     itkDynamicThreshold3DImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDynamicThreshold3DImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkDynamicThreshold3DImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkDynamicThreshold3DImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkDynamicThreshold3DImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkDynamicThreshold3DImageFilterIUL2IUL2_Pointer const & r) const;
     itkDynamicThreshold3DImageFilterIUL2IUL2_Pointer & operator=(itkDynamicThreshold3DImageFilterIUL2IUL2_Pointer const & r);
     itkDynamicThreshold3DImageFilterIUL2IUL2_Pointer & operator=(itkDynamicThreshold3DImageFilterIUL2IUL2 * r);
     itkDynamicThreshold3DImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDynamicThreshold3DImageFilterIUL3IUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  Mean = 0 };
     enum  {  Median = 1 };
     enum  {  ImageDimension = 3 };
     static itkDynamicThreshold3DImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual int GetStatisticsType() const;
     virtual void SetInsideValue(unsigned long const _arg);
     virtual unsigned long GetInsideValue() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long GetOutsideValue() const;
     virtual void SetThreshold(unsigned long const _arg);
     virtual unsigned long GetThreshold();
     virtual int GetUseImageSpacing();
     virtual unsigned int const * GetRadius() const;
     void SetStatisticsType(int arg0);
     void SetStatisticsTypeMean();
     void SetStatisticsTypeMedian();
     void SetUseImageSpacing(int arg0);
     void SetUseImageSpacingOn();
     void SetUseImageSpacingOff();
     int SetRadius(unsigned int x, unsigned int y, unsigned int z = 0);
   private:
     itkDynamicThreshold3DImageFilterIUL3IUL3(itkDynamicThreshold3DImageFilterIUL3IUL3 const & arg0);
     void operator=(itkDynamicThreshold3DImageFilterIUL3IUL3 const & arg0);
   protected:
     itkDynamicThreshold3DImageFilterIUL3IUL3();
     ~itkDynamicThreshold3DImageFilterIUL3IUL3();
     void Unallocate();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     void AllocateOutputImage();
 };


 class itkDynamicThreshold3DImageFilterIUL3IUL3_Pointer {
   public:
     itkDynamicThreshold3DImageFilterIUL3IUL3_Pointer();
     itkDynamicThreshold3DImageFilterIUL3IUL3_Pointer(itkDynamicThreshold3DImageFilterIUL3IUL3_Pointer const & p);
     itkDynamicThreshold3DImageFilterIUL3IUL3_Pointer(itkDynamicThreshold3DImageFilterIUL3IUL3 * p);
     ~itkDynamicThreshold3DImageFilterIUL3IUL3_Pointer();
     itkDynamicThreshold3DImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDynamicThreshold3DImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkDynamicThreshold3DImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkDynamicThreshold3DImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkDynamicThreshold3DImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkDynamicThreshold3DImageFilterIUL3IUL3_Pointer const & r) const;
     itkDynamicThreshold3DImageFilterIUL3IUL3_Pointer & operator=(itkDynamicThreshold3DImageFilterIUL3IUL3_Pointer const & r);
     itkDynamicThreshold3DImageFilterIUL3IUL3_Pointer & operator=(itkDynamicThreshold3DImageFilterIUL3IUL3 * r);
     itkDynamicThreshold3DImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDynamicThreshold3DImageFilterIUS2IUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  Mean = 0 };
     enum  {  Median = 1 };
     enum  {  ImageDimension = 2 };
     static itkDynamicThreshold3DImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual int GetStatisticsType() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short GetInsideValue() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short GetOutsideValue() const;
     virtual void SetThreshold(unsigned short const _arg);
     virtual unsigned short GetThreshold();
     virtual int GetUseImageSpacing();
     virtual unsigned int const * GetRadius() const;
     void SetStatisticsType(int arg0);
     void SetStatisticsTypeMean();
     void SetStatisticsTypeMedian();
     void SetUseImageSpacing(int arg0);
     void SetUseImageSpacingOn();
     void SetUseImageSpacingOff();
     int SetRadius(unsigned int x, unsigned int y, unsigned int z = 0);
   private:
     itkDynamicThreshold3DImageFilterIUS2IUS2(itkDynamicThreshold3DImageFilterIUS2IUS2 const & arg0);
     void operator=(itkDynamicThreshold3DImageFilterIUS2IUS2 const & arg0);
   protected:
     itkDynamicThreshold3DImageFilterIUS2IUS2();
     ~itkDynamicThreshold3DImageFilterIUS2IUS2();
     void Unallocate();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     void AllocateOutputImage();
 };


 class itkDynamicThreshold3DImageFilterIUS2IUS2_Pointer {
   public:
     itkDynamicThreshold3DImageFilterIUS2IUS2_Pointer();
     itkDynamicThreshold3DImageFilterIUS2IUS2_Pointer(itkDynamicThreshold3DImageFilterIUS2IUS2_Pointer const & p);
     itkDynamicThreshold3DImageFilterIUS2IUS2_Pointer(itkDynamicThreshold3DImageFilterIUS2IUS2 * p);
     ~itkDynamicThreshold3DImageFilterIUS2IUS2_Pointer();
     itkDynamicThreshold3DImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDynamicThreshold3DImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkDynamicThreshold3DImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkDynamicThreshold3DImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkDynamicThreshold3DImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkDynamicThreshold3DImageFilterIUS2IUS2_Pointer const & r) const;
     itkDynamicThreshold3DImageFilterIUS2IUS2_Pointer & operator=(itkDynamicThreshold3DImageFilterIUS2IUS2_Pointer const & r);
     itkDynamicThreshold3DImageFilterIUS2IUS2_Pointer & operator=(itkDynamicThreshold3DImageFilterIUS2IUS2 * r);
     itkDynamicThreshold3DImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDynamicThreshold3DImageFilterIUS3IUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  Mean = 0 };
     enum  {  Median = 1 };
     enum  {  ImageDimension = 3 };
     static itkDynamicThreshold3DImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual int GetStatisticsType() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short GetInsideValue() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short GetOutsideValue() const;
     virtual void SetThreshold(unsigned short const _arg);
     virtual unsigned short GetThreshold();
     virtual int GetUseImageSpacing();
     virtual unsigned int const * GetRadius() const;
     void SetStatisticsType(int arg0);
     void SetStatisticsTypeMean();
     void SetStatisticsTypeMedian();
     void SetUseImageSpacing(int arg0);
     void SetUseImageSpacingOn();
     void SetUseImageSpacingOff();
     int SetRadius(unsigned int x, unsigned int y, unsigned int z = 0);
   private:
     itkDynamicThreshold3DImageFilterIUS3IUS3(itkDynamicThreshold3DImageFilterIUS3IUS3 const & arg0);
     void operator=(itkDynamicThreshold3DImageFilterIUS3IUS3 const & arg0);
   protected:
     itkDynamicThreshold3DImageFilterIUS3IUS3();
     ~itkDynamicThreshold3DImageFilterIUS3IUS3();
     void Unallocate();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     void AllocateOutputImage();
 };


 class itkDynamicThreshold3DImageFilterIUS3IUS3_Pointer {
   public:
     itkDynamicThreshold3DImageFilterIUS3IUS3_Pointer();
     itkDynamicThreshold3DImageFilterIUS3IUS3_Pointer(itkDynamicThreshold3DImageFilterIUS3IUS3_Pointer const & p);
     itkDynamicThreshold3DImageFilterIUS3IUS3_Pointer(itkDynamicThreshold3DImageFilterIUS3IUS3 * p);
     ~itkDynamicThreshold3DImageFilterIUS3IUS3_Pointer();
     itkDynamicThreshold3DImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDynamicThreshold3DImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkDynamicThreshold3DImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkDynamicThreshold3DImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkDynamicThreshold3DImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkDynamicThreshold3DImageFilterIUS3IUS3_Pointer const & r) const;
     itkDynamicThreshold3DImageFilterIUS3IUS3_Pointer & operator=(itkDynamicThreshold3DImageFilterIUS3IUS3_Pointer const & r);
     itkDynamicThreshold3DImageFilterIUS3IUS3_Pointer & operator=(itkDynamicThreshold3DImageFilterIUS3IUS3 * r);
     itkDynamicThreshold3DImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


