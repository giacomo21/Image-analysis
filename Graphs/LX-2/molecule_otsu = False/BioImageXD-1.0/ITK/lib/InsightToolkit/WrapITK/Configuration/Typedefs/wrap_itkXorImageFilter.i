// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkXorImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkXorImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkXorImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkXorImageFilterJava
#endif
#ifdef SWIGLUA
%module itkXorImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkXorImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkXorImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkXorImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkXorImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkXorImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkXorImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkXorImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkXorImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkXorImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkXorImageFilterPython
#endif
#ifdef SWIGR
%module itkXorImageFilterR
#endif
#ifdef SWIGRUBY
%module itkXorImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkXorImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkXorImageFilterTcl
#endif
#ifdef SWIGXML
%module itkXorImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "PixelMath.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImage.i
%import wrap_itkInPlaceImageFilterA.i
%import wrap_ITKRegions.i


%include itk.i
%include wrap_itkXorImageFilter_ext.i


 class itkXorImageFilterIUC2IUC2IUC2_Pointer {
   public:
     itkXorImageFilterIUC2IUC2IUC2_Pointer();
     itkXorImageFilterIUC2IUC2IUC2_Pointer(itkXorImageFilterIUC2IUC2IUC2_Pointer const & p);
     itkXorImageFilterIUC2IUC2IUC2_Pointer(itkXorImageFilterIUC2IUC2IUC2 * p);
     ~itkXorImageFilterIUC2IUC2IUC2_Pointer();
     itkXorImageFilterIUC2IUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkXorImageFilterIUC2IUC2IUC2 * GetPointer() const;
     bool operator<(itkXorImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator>(itkXorImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator<=(itkXorImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator>=(itkXorImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     itkXorImageFilterIUC2IUC2IUC2_Pointer & operator=(itkXorImageFilterIUC2IUC2IUC2_Pointer const & r);
     itkXorImageFilterIUC2IUC2IUC2_Pointer & operator=(itkXorImageFilterIUC2IUC2IUC2 * r);
     itkXorImageFilterIUC2IUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkXorImageFilterIUC2IUC2IUC2_Superclass : public itkInPlaceImageFilterIUC2IUC2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkXorImageFilterIUC2IUC2IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUC2 const * image1);
     void SetInput2(itkImageUC2 const * image2);
     itk::Functor::XOR< unsigned char, unsigned char, unsigned char > & GetFunctor();
     itk::Functor::XOR< unsigned char, unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::XOR< unsigned char, unsigned char, unsigned char > const & functor);
   private:
     itkXorImageFilterIUC2IUC2IUC2_Superclass(itkXorImageFilterIUC2IUC2IUC2_Superclass const & arg0);
     void operator=(itkXorImageFilterIUC2IUC2IUC2_Superclass const & arg0);
   protected:
     itkXorImageFilterIUC2IUC2IUC2_Superclass();
     ~itkXorImageFilterIUC2IUC2IUC2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkXorImageFilterIUC2IUC2IUC2_Superclass_Pointer {
   public:
     itkXorImageFilterIUC2IUC2IUC2_Superclass_Pointer();
     itkXorImageFilterIUC2IUC2IUC2_Superclass_Pointer(itkXorImageFilterIUC2IUC2IUC2_Superclass_Pointer const & p);
     itkXorImageFilterIUC2IUC2IUC2_Superclass_Pointer(itkXorImageFilterIUC2IUC2IUC2_Superclass * p);
     ~itkXorImageFilterIUC2IUC2IUC2_Superclass_Pointer();
     itkXorImageFilterIUC2IUC2IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkXorImageFilterIUC2IUC2IUC2_Superclass * GetPointer() const;
     bool operator<(itkXorImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkXorImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkXorImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkXorImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     itkXorImageFilterIUC2IUC2IUC2_Superclass_Pointer & operator=(itkXorImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r);
     itkXorImageFilterIUC2IUC2IUC2_Superclass_Pointer & operator=(itkXorImageFilterIUC2IUC2IUC2_Superclass * r);
     itkXorImageFilterIUC2IUC2IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkXorImageFilterIUC3IUC3IUC3_Pointer {
   public:
     itkXorImageFilterIUC3IUC3IUC3_Pointer();
     itkXorImageFilterIUC3IUC3IUC3_Pointer(itkXorImageFilterIUC3IUC3IUC3_Pointer const & p);
     itkXorImageFilterIUC3IUC3IUC3_Pointer(itkXorImageFilterIUC3IUC3IUC3 * p);
     ~itkXorImageFilterIUC3IUC3IUC3_Pointer();
     itkXorImageFilterIUC3IUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkXorImageFilterIUC3IUC3IUC3 * GetPointer() const;
     bool operator<(itkXorImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     bool operator>(itkXorImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     bool operator<=(itkXorImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     bool operator>=(itkXorImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     itkXorImageFilterIUC3IUC3IUC3_Pointer & operator=(itkXorImageFilterIUC3IUC3IUC3_Pointer const & r);
     itkXorImageFilterIUC3IUC3IUC3_Pointer & operator=(itkXorImageFilterIUC3IUC3IUC3 * r);
     itkXorImageFilterIUC3IUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkXorImageFilterIUC3IUC3IUC3_Superclass : public itkInPlaceImageFilterIUC3IUC3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkXorImageFilterIUC3IUC3IUC3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUC3 const * image1);
     void SetInput2(itkImageUC3 const * image2);
     itk::Functor::XOR< unsigned char, unsigned char, unsigned char > & GetFunctor();
     itk::Functor::XOR< unsigned char, unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::XOR< unsigned char, unsigned char, unsigned char > const & functor);
   private:
     itkXorImageFilterIUC3IUC3IUC3_Superclass(itkXorImageFilterIUC3IUC3IUC3_Superclass const & arg0);
     void operator=(itkXorImageFilterIUC3IUC3IUC3_Superclass const & arg0);
   protected:
     itkXorImageFilterIUC3IUC3IUC3_Superclass();
     ~itkXorImageFilterIUC3IUC3IUC3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkXorImageFilterIUC3IUC3IUC3_Superclass_Pointer {
   public:
     itkXorImageFilterIUC3IUC3IUC3_Superclass_Pointer();
     itkXorImageFilterIUC3IUC3IUC3_Superclass_Pointer(itkXorImageFilterIUC3IUC3IUC3_Superclass_Pointer const & p);
     itkXorImageFilterIUC3IUC3IUC3_Superclass_Pointer(itkXorImageFilterIUC3IUC3IUC3_Superclass * p);
     ~itkXorImageFilterIUC3IUC3IUC3_Superclass_Pointer();
     itkXorImageFilterIUC3IUC3IUC3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkXorImageFilterIUC3IUC3IUC3_Superclass * GetPointer() const;
     bool operator<(itkXorImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>(itkXorImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     bool operator<=(itkXorImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>=(itkXorImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     itkXorImageFilterIUC3IUC3IUC3_Superclass_Pointer & operator=(itkXorImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r);
     itkXorImageFilterIUC3IUC3IUC3_Superclass_Pointer & operator=(itkXorImageFilterIUC3IUC3IUC3_Superclass * r);
     itkXorImageFilterIUC3IUC3IUC3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkXorImageFilterIUL2IUL2IUL2_Pointer {
   public:
     itkXorImageFilterIUL2IUL2IUL2_Pointer();
     itkXorImageFilterIUL2IUL2IUL2_Pointer(itkXorImageFilterIUL2IUL2IUL2_Pointer const & p);
     itkXorImageFilterIUL2IUL2IUL2_Pointer(itkXorImageFilterIUL2IUL2IUL2 * p);
     ~itkXorImageFilterIUL2IUL2IUL2_Pointer();
     itkXorImageFilterIUL2IUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkXorImageFilterIUL2IUL2IUL2 * GetPointer() const;
     bool operator<(itkXorImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator>(itkXorImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator<=(itkXorImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator>=(itkXorImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     itkXorImageFilterIUL2IUL2IUL2_Pointer & operator=(itkXorImageFilterIUL2IUL2IUL2_Pointer const & r);
     itkXorImageFilterIUL2IUL2IUL2_Pointer & operator=(itkXorImageFilterIUL2IUL2IUL2 * r);
     itkXorImageFilterIUL2IUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkXorImageFilterIUL2IUL2IUL2_Superclass : public itkInPlaceImageFilterIUL2IUL2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkXorImageFilterIUL2IUL2IUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUL2 const * image1);
     void SetInput2(itkImageUL2 const * image2);
     itk::Functor::XOR< unsigned long, unsigned long, unsigned long > & GetFunctor();
     itk::Functor::XOR< unsigned long, unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::XOR< unsigned long, unsigned long, unsigned long > const & functor);
   private:
     itkXorImageFilterIUL2IUL2IUL2_Superclass(itkXorImageFilterIUL2IUL2IUL2_Superclass const & arg0);
     void operator=(itkXorImageFilterIUL2IUL2IUL2_Superclass const & arg0);
   protected:
     itkXorImageFilterIUL2IUL2IUL2_Superclass();
     ~itkXorImageFilterIUL2IUL2IUL2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkXorImageFilterIUL2IUL2IUL2_Superclass_Pointer {
   public:
     itkXorImageFilterIUL2IUL2IUL2_Superclass_Pointer();
     itkXorImageFilterIUL2IUL2IUL2_Superclass_Pointer(itkXorImageFilterIUL2IUL2IUL2_Superclass_Pointer const & p);
     itkXorImageFilterIUL2IUL2IUL2_Superclass_Pointer(itkXorImageFilterIUL2IUL2IUL2_Superclass * p);
     ~itkXorImageFilterIUL2IUL2IUL2_Superclass_Pointer();
     itkXorImageFilterIUL2IUL2IUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkXorImageFilterIUL2IUL2IUL2_Superclass * GetPointer() const;
     bool operator<(itkXorImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>(itkXorImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkXorImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkXorImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     itkXorImageFilterIUL2IUL2IUL2_Superclass_Pointer & operator=(itkXorImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r);
     itkXorImageFilterIUL2IUL2IUL2_Superclass_Pointer & operator=(itkXorImageFilterIUL2IUL2IUL2_Superclass * r);
     itkXorImageFilterIUL2IUL2IUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkXorImageFilterIUL3IUL3IUL3_Pointer {
   public:
     itkXorImageFilterIUL3IUL3IUL3_Pointer();
     itkXorImageFilterIUL3IUL3IUL3_Pointer(itkXorImageFilterIUL3IUL3IUL3_Pointer const & p);
     itkXorImageFilterIUL3IUL3IUL3_Pointer(itkXorImageFilterIUL3IUL3IUL3 * p);
     ~itkXorImageFilterIUL3IUL3IUL3_Pointer();
     itkXorImageFilterIUL3IUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkXorImageFilterIUL3IUL3IUL3 * GetPointer() const;
     bool operator<(itkXorImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     bool operator>(itkXorImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     bool operator<=(itkXorImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     bool operator>=(itkXorImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     itkXorImageFilterIUL3IUL3IUL3_Pointer & operator=(itkXorImageFilterIUL3IUL3IUL3_Pointer const & r);
     itkXorImageFilterIUL3IUL3IUL3_Pointer & operator=(itkXorImageFilterIUL3IUL3IUL3 * r);
     itkXorImageFilterIUL3IUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkXorImageFilterIUL3IUL3IUL3_Superclass : public itkInPlaceImageFilterIUL3IUL3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkXorImageFilterIUL3IUL3IUL3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUL3 const * image1);
     void SetInput2(itkImageUL3 const * image2);
     itk::Functor::XOR< unsigned long, unsigned long, unsigned long > & GetFunctor();
     itk::Functor::XOR< unsigned long, unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::XOR< unsigned long, unsigned long, unsigned long > const & functor);
   private:
     itkXorImageFilterIUL3IUL3IUL3_Superclass(itkXorImageFilterIUL3IUL3IUL3_Superclass const & arg0);
     void operator=(itkXorImageFilterIUL3IUL3IUL3_Superclass const & arg0);
   protected:
     itkXorImageFilterIUL3IUL3IUL3_Superclass();
     ~itkXorImageFilterIUL3IUL3IUL3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkXorImageFilterIUL3IUL3IUL3_Superclass_Pointer {
   public:
     itkXorImageFilterIUL3IUL3IUL3_Superclass_Pointer();
     itkXorImageFilterIUL3IUL3IUL3_Superclass_Pointer(itkXorImageFilterIUL3IUL3IUL3_Superclass_Pointer const & p);
     itkXorImageFilterIUL3IUL3IUL3_Superclass_Pointer(itkXorImageFilterIUL3IUL3IUL3_Superclass * p);
     ~itkXorImageFilterIUL3IUL3IUL3_Superclass_Pointer();
     itkXorImageFilterIUL3IUL3IUL3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkXorImageFilterIUL3IUL3IUL3_Superclass * GetPointer() const;
     bool operator<(itkXorImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>(itkXorImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     bool operator<=(itkXorImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>=(itkXorImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     itkXorImageFilterIUL3IUL3IUL3_Superclass_Pointer & operator=(itkXorImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r);
     itkXorImageFilterIUL3IUL3IUL3_Superclass_Pointer & operator=(itkXorImageFilterIUL3IUL3IUL3_Superclass * r);
     itkXorImageFilterIUL3IUL3IUL3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkXorImageFilterIUS2IUS2IUS2_Pointer {
   public:
     itkXorImageFilterIUS2IUS2IUS2_Pointer();
     itkXorImageFilterIUS2IUS2IUS2_Pointer(itkXorImageFilterIUS2IUS2IUS2_Pointer const & p);
     itkXorImageFilterIUS2IUS2IUS2_Pointer(itkXorImageFilterIUS2IUS2IUS2 * p);
     ~itkXorImageFilterIUS2IUS2IUS2_Pointer();
     itkXorImageFilterIUS2IUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkXorImageFilterIUS2IUS2IUS2 * GetPointer() const;
     bool operator<(itkXorImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator>(itkXorImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator<=(itkXorImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator>=(itkXorImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     itkXorImageFilterIUS2IUS2IUS2_Pointer & operator=(itkXorImageFilterIUS2IUS2IUS2_Pointer const & r);
     itkXorImageFilterIUS2IUS2IUS2_Pointer & operator=(itkXorImageFilterIUS2IUS2IUS2 * r);
     itkXorImageFilterIUS2IUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkXorImageFilterIUS2IUS2IUS2_Superclass : public itkInPlaceImageFilterIUS2IUS2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkXorImageFilterIUS2IUS2IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUS2 const * image1);
     void SetInput2(itkImageUS2 const * image2);
     itk::Functor::XOR< unsigned short, unsigned short, unsigned short > & GetFunctor();
     itk::Functor::XOR< unsigned short, unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::XOR< unsigned short, unsigned short, unsigned short > const & functor);
   private:
     itkXorImageFilterIUS2IUS2IUS2_Superclass(itkXorImageFilterIUS2IUS2IUS2_Superclass const & arg0);
     void operator=(itkXorImageFilterIUS2IUS2IUS2_Superclass const & arg0);
   protected:
     itkXorImageFilterIUS2IUS2IUS2_Superclass();
     ~itkXorImageFilterIUS2IUS2IUS2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkXorImageFilterIUS2IUS2IUS2_Superclass_Pointer {
   public:
     itkXorImageFilterIUS2IUS2IUS2_Superclass_Pointer();
     itkXorImageFilterIUS2IUS2IUS2_Superclass_Pointer(itkXorImageFilterIUS2IUS2IUS2_Superclass_Pointer const & p);
     itkXorImageFilterIUS2IUS2IUS2_Superclass_Pointer(itkXorImageFilterIUS2IUS2IUS2_Superclass * p);
     ~itkXorImageFilterIUS2IUS2IUS2_Superclass_Pointer();
     itkXorImageFilterIUS2IUS2IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkXorImageFilterIUS2IUS2IUS2_Superclass * GetPointer() const;
     bool operator<(itkXorImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkXorImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkXorImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkXorImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     itkXorImageFilterIUS2IUS2IUS2_Superclass_Pointer & operator=(itkXorImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r);
     itkXorImageFilterIUS2IUS2IUS2_Superclass_Pointer & operator=(itkXorImageFilterIUS2IUS2IUS2_Superclass * r);
     itkXorImageFilterIUS2IUS2IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkXorImageFilterIUS3IUS3IUS3_Pointer {
   public:
     itkXorImageFilterIUS3IUS3IUS3_Pointer();
     itkXorImageFilterIUS3IUS3IUS3_Pointer(itkXorImageFilterIUS3IUS3IUS3_Pointer const & p);
     itkXorImageFilterIUS3IUS3IUS3_Pointer(itkXorImageFilterIUS3IUS3IUS3 * p);
     ~itkXorImageFilterIUS3IUS3IUS3_Pointer();
     itkXorImageFilterIUS3IUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkXorImageFilterIUS3IUS3IUS3 * GetPointer() const;
     bool operator<(itkXorImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     bool operator>(itkXorImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     bool operator<=(itkXorImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     bool operator>=(itkXorImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     itkXorImageFilterIUS3IUS3IUS3_Pointer & operator=(itkXorImageFilterIUS3IUS3IUS3_Pointer const & r);
     itkXorImageFilterIUS3IUS3IUS3_Pointer & operator=(itkXorImageFilterIUS3IUS3IUS3 * r);
     itkXorImageFilterIUS3IUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkXorImageFilterIUS3IUS3IUS3_Superclass : public itkInPlaceImageFilterIUS3IUS3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkXorImageFilterIUS3IUS3IUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUS3 const * image1);
     void SetInput2(itkImageUS3 const * image2);
     itk::Functor::XOR< unsigned short, unsigned short, unsigned short > & GetFunctor();
     itk::Functor::XOR< unsigned short, unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::XOR< unsigned short, unsigned short, unsigned short > const & functor);
   private:
     itkXorImageFilterIUS3IUS3IUS3_Superclass(itkXorImageFilterIUS3IUS3IUS3_Superclass const & arg0);
     void operator=(itkXorImageFilterIUS3IUS3IUS3_Superclass const & arg0);
   protected:
     itkXorImageFilterIUS3IUS3IUS3_Superclass();
     ~itkXorImageFilterIUS3IUS3IUS3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkXorImageFilterIUS3IUS3IUS3_Superclass_Pointer {
   public:
     itkXorImageFilterIUS3IUS3IUS3_Superclass_Pointer();
     itkXorImageFilterIUS3IUS3IUS3_Superclass_Pointer(itkXorImageFilterIUS3IUS3IUS3_Superclass_Pointer const & p);
     itkXorImageFilterIUS3IUS3IUS3_Superclass_Pointer(itkXorImageFilterIUS3IUS3IUS3_Superclass * p);
     ~itkXorImageFilterIUS3IUS3IUS3_Superclass_Pointer();
     itkXorImageFilterIUS3IUS3IUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkXorImageFilterIUS3IUS3IUS3_Superclass * GetPointer() const;
     bool operator<(itkXorImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>(itkXorImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkXorImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkXorImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     itkXorImageFilterIUS3IUS3IUS3_Superclass_Pointer & operator=(itkXorImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r);
     itkXorImageFilterIUS3IUS3IUS3_Superclass_Pointer & operator=(itkXorImageFilterIUS3IUS3IUS3_Superclass * r);
     itkXorImageFilterIUS3IUS3IUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkXorImageFilterIUC2IUC2IUC2 : public itkXorImageFilterIUC2IUC2IUC2_Superclass {
   public:
     enum  {  Input1Input2OutputLogicalOperatorsCheck = 1 };
     static itkXorImageFilterIUC2IUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkXorImageFilterIUC2IUC2IUC2(itkXorImageFilterIUC2IUC2IUC2 const & arg0);
     void operator=(itkXorImageFilterIUC2IUC2IUC2 const & arg0);
   protected:
     itkXorImageFilterIUC2IUC2IUC2();
     ~itkXorImageFilterIUC2IUC2IUC2();
 };


 class itkXorImageFilterIUC3IUC3IUC3 : public itkXorImageFilterIUC3IUC3IUC3_Superclass {
   public:
     enum  {  Input1Input2OutputLogicalOperatorsCheck = 1 };
     static itkXorImageFilterIUC3IUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkXorImageFilterIUC3IUC3IUC3(itkXorImageFilterIUC3IUC3IUC3 const & arg0);
     void operator=(itkXorImageFilterIUC3IUC3IUC3 const & arg0);
   protected:
     itkXorImageFilterIUC3IUC3IUC3();
     ~itkXorImageFilterIUC3IUC3IUC3();
 };


 class itkXorImageFilterIUL2IUL2IUL2 : public itkXorImageFilterIUL2IUL2IUL2_Superclass {
   public:
     enum  {  Input1Input2OutputLogicalOperatorsCheck = 1 };
     static itkXorImageFilterIUL2IUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkXorImageFilterIUL2IUL2IUL2(itkXorImageFilterIUL2IUL2IUL2 const & arg0);
     void operator=(itkXorImageFilterIUL2IUL2IUL2 const & arg0);
   protected:
     itkXorImageFilterIUL2IUL2IUL2();
     ~itkXorImageFilterIUL2IUL2IUL2();
 };


 class itkXorImageFilterIUL3IUL3IUL3 : public itkXorImageFilterIUL3IUL3IUL3_Superclass {
   public:
     enum  {  Input1Input2OutputLogicalOperatorsCheck = 1 };
     static itkXorImageFilterIUL3IUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkXorImageFilterIUL3IUL3IUL3(itkXorImageFilterIUL3IUL3IUL3 const & arg0);
     void operator=(itkXorImageFilterIUL3IUL3IUL3 const & arg0);
   protected:
     itkXorImageFilterIUL3IUL3IUL3();
     ~itkXorImageFilterIUL3IUL3IUL3();
 };


 class itkXorImageFilterIUS2IUS2IUS2 : public itkXorImageFilterIUS2IUS2IUS2_Superclass {
   public:
     enum  {  Input1Input2OutputLogicalOperatorsCheck = 1 };
     static itkXorImageFilterIUS2IUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkXorImageFilterIUS2IUS2IUS2(itkXorImageFilterIUS2IUS2IUS2 const & arg0);
     void operator=(itkXorImageFilterIUS2IUS2IUS2 const & arg0);
   protected:
     itkXorImageFilterIUS2IUS2IUS2();
     ~itkXorImageFilterIUS2IUS2IUS2();
 };


 class itkXorImageFilterIUS3IUS3IUS3 : public itkXorImageFilterIUS3IUS3IUS3_Superclass {
   public:
     enum  {  Input1Input2OutputLogicalOperatorsCheck = 1 };
     static itkXorImageFilterIUS3IUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkXorImageFilterIUS3IUS3IUS3(itkXorImageFilterIUS3IUS3IUS3 const & arg0);
     void operator=(itkXorImageFilterIUS3IUS3IUS3 const & arg0);
   protected:
     itkXorImageFilterIUS3IUS3IUS3();
     ~itkXorImageFilterIUS3IUS3IUS3();
 };


