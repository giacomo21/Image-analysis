# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkMeanImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkMeanImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkMeanImageFilterPython
            return _itkMeanImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkMeanImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkMeanImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkMeanImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkSizePython
import ITKRegionsPython
import itkIndexPython
import itkOffsetPython
import itkImageToImageFilterAPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
def itkMeanImageFilterID3ID3_New():
  return itkMeanImageFilterID3ID3.New()

def itkMeanImageFilterID2ID2_New():
  return itkMeanImageFilterID2ID2.New()

def itkMeanImageFilterIF3IF3_New():
  return itkMeanImageFilterIF3IF3.New()

def itkMeanImageFilterIF2IF2_New():
  return itkMeanImageFilterIF2IF2.New()

def itkMeanImageFilterIUS3IUS3_New():
  return itkMeanImageFilterIUS3IUS3.New()

def itkMeanImageFilterIUS2IUS2_New():
  return itkMeanImageFilterIUS2IUS2.New()

def itkMeanImageFilterIUL3IUL3_New():
  return itkMeanImageFilterIUL3IUL3.New()

def itkMeanImageFilterIUL2IUL2_New():
  return itkMeanImageFilterIUL2IUL2.New()

def itkMeanImageFilterIUC3IUC3_New():
  return itkMeanImageFilterIUC3IUC3.New()

def itkMeanImageFilterIUC2IUC2_New():
  return itkMeanImageFilterIUC2IUC2.New()

class itkMeanImageFilterID2ID2(itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    """Proxy of C++ itkMeanImageFilterID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkMeanImageFilterPython.itkMeanImageFilterID2ID2_InputImageDimension
    OutputImageDimension = _itkMeanImageFilterPython.itkMeanImageFilterID2ID2_OutputImageDimension
    InputHasNumericTraitsCheck = _itkMeanImageFilterPython.itkMeanImageFilterID2ID2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMeanImageFilterPython.itkMeanImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRadius(self, *args):
        """SetRadius(self, itkSize2 _arg)"""
        return _itkMeanImageFilterPython.itkMeanImageFilterID2ID2_SetRadius(self, *args)

    def GetRadius(self):
        """GetRadius(self) -> itkSize2"""
        return _itkMeanImageFilterPython.itkMeanImageFilterID2ID2_GetRadius(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkMeanImageFilterPython.itkMeanImageFilterID2ID2_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkMeanImageFilterPython.delete_itkMeanImageFilterID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMeanImageFilterID2ID2"""
        return _itkMeanImageFilterPython.itkMeanImageFilterID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMeanImageFilterID2ID2"""
        return _itkMeanImageFilterPython.itkMeanImageFilterID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMeanImageFilterID2ID2
        
        Create a new object of the class itkMeanImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMeanImageFilterID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMeanImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeanImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeanImageFilterID2ID2.SetRadius = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterID2ID2_SetRadius,None,itkMeanImageFilterID2ID2)
itkMeanImageFilterID2ID2.GetRadius = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterID2ID2_GetRadius,None,itkMeanImageFilterID2ID2)
itkMeanImageFilterID2ID2.GenerateInputRequestedRegion = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterID2ID2_GenerateInputRequestedRegion,None,itkMeanImageFilterID2ID2)
itkMeanImageFilterID2ID2.GetPointer = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterID2ID2_GetPointer,None,itkMeanImageFilterID2ID2)
itkMeanImageFilterID2ID2_swigregister = _itkMeanImageFilterPython.itkMeanImageFilterID2ID2_swigregister
itkMeanImageFilterID2ID2_swigregister(itkMeanImageFilterID2ID2)

def itkMeanImageFilterID2ID2___New_orig__():
  """itkMeanImageFilterID2ID2___New_orig__()"""
  return _itkMeanImageFilterPython.itkMeanImageFilterID2ID2___New_orig__()

def itkMeanImageFilterID2ID2_cast(*args):
  """itkMeanImageFilterID2ID2_cast(itkLightObject obj) -> itkMeanImageFilterID2ID2"""
  return _itkMeanImageFilterPython.itkMeanImageFilterID2ID2_cast(*args)

class itkMeanImageFilterID3ID3(itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    """Proxy of C++ itkMeanImageFilterID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkMeanImageFilterPython.itkMeanImageFilterID3ID3_InputImageDimension
    OutputImageDimension = _itkMeanImageFilterPython.itkMeanImageFilterID3ID3_OutputImageDimension
    InputHasNumericTraitsCheck = _itkMeanImageFilterPython.itkMeanImageFilterID3ID3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMeanImageFilterPython.itkMeanImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRadius(self, *args):
        """SetRadius(self, itkSize3 _arg)"""
        return _itkMeanImageFilterPython.itkMeanImageFilterID3ID3_SetRadius(self, *args)

    def GetRadius(self):
        """GetRadius(self) -> itkSize3"""
        return _itkMeanImageFilterPython.itkMeanImageFilterID3ID3_GetRadius(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkMeanImageFilterPython.itkMeanImageFilterID3ID3_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkMeanImageFilterPython.delete_itkMeanImageFilterID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkMeanImageFilterID3ID3"""
        return _itkMeanImageFilterPython.itkMeanImageFilterID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMeanImageFilterID3ID3"""
        return _itkMeanImageFilterPython.itkMeanImageFilterID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMeanImageFilterID3ID3
        
        Create a new object of the class itkMeanImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMeanImageFilterID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMeanImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeanImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeanImageFilterID3ID3.SetRadius = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterID3ID3_SetRadius,None,itkMeanImageFilterID3ID3)
itkMeanImageFilterID3ID3.GetRadius = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterID3ID3_GetRadius,None,itkMeanImageFilterID3ID3)
itkMeanImageFilterID3ID3.GenerateInputRequestedRegion = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterID3ID3_GenerateInputRequestedRegion,None,itkMeanImageFilterID3ID3)
itkMeanImageFilterID3ID3.GetPointer = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterID3ID3_GetPointer,None,itkMeanImageFilterID3ID3)
itkMeanImageFilterID3ID3_swigregister = _itkMeanImageFilterPython.itkMeanImageFilterID3ID3_swigregister
itkMeanImageFilterID3ID3_swigregister(itkMeanImageFilterID3ID3)

def itkMeanImageFilterID3ID3___New_orig__():
  """itkMeanImageFilterID3ID3___New_orig__()"""
  return _itkMeanImageFilterPython.itkMeanImageFilterID3ID3___New_orig__()

def itkMeanImageFilterID3ID3_cast(*args):
  """itkMeanImageFilterID3ID3_cast(itkLightObject obj) -> itkMeanImageFilterID3ID3"""
  return _itkMeanImageFilterPython.itkMeanImageFilterID3ID3_cast(*args)

class itkMeanImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkMeanImageFilterIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkMeanImageFilterPython.itkMeanImageFilterIF2IF2_InputImageDimension
    OutputImageDimension = _itkMeanImageFilterPython.itkMeanImageFilterIF2IF2_OutputImageDimension
    InputHasNumericTraitsCheck = _itkMeanImageFilterPython.itkMeanImageFilterIF2IF2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRadius(self, *args):
        """SetRadius(self, itkSize2 _arg)"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIF2IF2_SetRadius(self, *args)

    def GetRadius(self):
        """GetRadius(self) -> itkSize2"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIF2IF2_GetRadius(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIF2IF2_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkMeanImageFilterPython.delete_itkMeanImageFilterIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMeanImageFilterIF2IF2"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMeanImageFilterIF2IF2"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMeanImageFilterIF2IF2
        
        Create a new object of the class itkMeanImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMeanImageFilterIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMeanImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeanImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeanImageFilterIF2IF2.SetRadius = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIF2IF2_SetRadius,None,itkMeanImageFilterIF2IF2)
itkMeanImageFilterIF2IF2.GetRadius = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIF2IF2_GetRadius,None,itkMeanImageFilterIF2IF2)
itkMeanImageFilterIF2IF2.GenerateInputRequestedRegion = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIF2IF2_GenerateInputRequestedRegion,None,itkMeanImageFilterIF2IF2)
itkMeanImageFilterIF2IF2.GetPointer = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIF2IF2_GetPointer,None,itkMeanImageFilterIF2IF2)
itkMeanImageFilterIF2IF2_swigregister = _itkMeanImageFilterPython.itkMeanImageFilterIF2IF2_swigregister
itkMeanImageFilterIF2IF2_swigregister(itkMeanImageFilterIF2IF2)

def itkMeanImageFilterIF2IF2___New_orig__():
  """itkMeanImageFilterIF2IF2___New_orig__()"""
  return _itkMeanImageFilterPython.itkMeanImageFilterIF2IF2___New_orig__()

def itkMeanImageFilterIF2IF2_cast(*args):
  """itkMeanImageFilterIF2IF2_cast(itkLightObject obj) -> itkMeanImageFilterIF2IF2"""
  return _itkMeanImageFilterPython.itkMeanImageFilterIF2IF2_cast(*args)

class itkMeanImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkMeanImageFilterIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkMeanImageFilterPython.itkMeanImageFilterIF3IF3_InputImageDimension
    OutputImageDimension = _itkMeanImageFilterPython.itkMeanImageFilterIF3IF3_OutputImageDimension
    InputHasNumericTraitsCheck = _itkMeanImageFilterPython.itkMeanImageFilterIF3IF3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRadius(self, *args):
        """SetRadius(self, itkSize3 _arg)"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIF3IF3_SetRadius(self, *args)

    def GetRadius(self):
        """GetRadius(self) -> itkSize3"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIF3IF3_GetRadius(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIF3IF3_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkMeanImageFilterPython.delete_itkMeanImageFilterIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkMeanImageFilterIF3IF3"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMeanImageFilterIF3IF3"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMeanImageFilterIF3IF3
        
        Create a new object of the class itkMeanImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMeanImageFilterIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMeanImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeanImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeanImageFilterIF3IF3.SetRadius = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIF3IF3_SetRadius,None,itkMeanImageFilterIF3IF3)
itkMeanImageFilterIF3IF3.GetRadius = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIF3IF3_GetRadius,None,itkMeanImageFilterIF3IF3)
itkMeanImageFilterIF3IF3.GenerateInputRequestedRegion = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIF3IF3_GenerateInputRequestedRegion,None,itkMeanImageFilterIF3IF3)
itkMeanImageFilterIF3IF3.GetPointer = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIF3IF3_GetPointer,None,itkMeanImageFilterIF3IF3)
itkMeanImageFilterIF3IF3_swigregister = _itkMeanImageFilterPython.itkMeanImageFilterIF3IF3_swigregister
itkMeanImageFilterIF3IF3_swigregister(itkMeanImageFilterIF3IF3)

def itkMeanImageFilterIF3IF3___New_orig__():
  """itkMeanImageFilterIF3IF3___New_orig__()"""
  return _itkMeanImageFilterPython.itkMeanImageFilterIF3IF3___New_orig__()

def itkMeanImageFilterIF3IF3_cast(*args):
  """itkMeanImageFilterIF3IF3_cast(itkLightObject obj) -> itkMeanImageFilterIF3IF3"""
  return _itkMeanImageFilterPython.itkMeanImageFilterIF3IF3_cast(*args)

class itkMeanImageFilterIUC2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """Proxy of C++ itkMeanImageFilterIUC2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkMeanImageFilterPython.itkMeanImageFilterIUC2IUC2_InputImageDimension
    OutputImageDimension = _itkMeanImageFilterPython.itkMeanImageFilterIUC2IUC2_OutputImageDimension
    InputHasNumericTraitsCheck = _itkMeanImageFilterPython.itkMeanImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRadius(self, *args):
        """SetRadius(self, itkSize2 _arg)"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUC2IUC2_SetRadius(self, *args)

    def GetRadius(self):
        """GetRadius(self) -> itkSize2"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUC2IUC2_GetRadius(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUC2IUC2_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkMeanImageFilterPython.delete_itkMeanImageFilterIUC2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMeanImageFilterIUC2IUC2"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUC2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMeanImageFilterIUC2IUC2"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUC2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMeanImageFilterIUC2IUC2
        
        Create a new object of the class itkMeanImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMeanImageFilterIUC2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMeanImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeanImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeanImageFilterIUC2IUC2.SetRadius = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIUC2IUC2_SetRadius,None,itkMeanImageFilterIUC2IUC2)
itkMeanImageFilterIUC2IUC2.GetRadius = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIUC2IUC2_GetRadius,None,itkMeanImageFilterIUC2IUC2)
itkMeanImageFilterIUC2IUC2.GenerateInputRequestedRegion = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIUC2IUC2_GenerateInputRequestedRegion,None,itkMeanImageFilterIUC2IUC2)
itkMeanImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIUC2IUC2_GetPointer,None,itkMeanImageFilterIUC2IUC2)
itkMeanImageFilterIUC2IUC2_swigregister = _itkMeanImageFilterPython.itkMeanImageFilterIUC2IUC2_swigregister
itkMeanImageFilterIUC2IUC2_swigregister(itkMeanImageFilterIUC2IUC2)

def itkMeanImageFilterIUC2IUC2___New_orig__():
  """itkMeanImageFilterIUC2IUC2___New_orig__()"""
  return _itkMeanImageFilterPython.itkMeanImageFilterIUC2IUC2___New_orig__()

def itkMeanImageFilterIUC2IUC2_cast(*args):
  """itkMeanImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkMeanImageFilterIUC2IUC2"""
  return _itkMeanImageFilterPython.itkMeanImageFilterIUC2IUC2_cast(*args)

class itkMeanImageFilterIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """Proxy of C++ itkMeanImageFilterIUC3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkMeanImageFilterPython.itkMeanImageFilterIUC3IUC3_InputImageDimension
    OutputImageDimension = _itkMeanImageFilterPython.itkMeanImageFilterIUC3IUC3_OutputImageDimension
    InputHasNumericTraitsCheck = _itkMeanImageFilterPython.itkMeanImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRadius(self, *args):
        """SetRadius(self, itkSize3 _arg)"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUC3IUC3_SetRadius(self, *args)

    def GetRadius(self):
        """GetRadius(self) -> itkSize3"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUC3IUC3_GetRadius(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUC3IUC3_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkMeanImageFilterPython.delete_itkMeanImageFilterIUC3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkMeanImageFilterIUC3IUC3"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUC3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMeanImageFilterIUC3IUC3"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUC3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMeanImageFilterIUC3IUC3
        
        Create a new object of the class itkMeanImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMeanImageFilterIUC3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMeanImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeanImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeanImageFilterIUC3IUC3.SetRadius = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIUC3IUC3_SetRadius,None,itkMeanImageFilterIUC3IUC3)
itkMeanImageFilterIUC3IUC3.GetRadius = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIUC3IUC3_GetRadius,None,itkMeanImageFilterIUC3IUC3)
itkMeanImageFilterIUC3IUC3.GenerateInputRequestedRegion = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIUC3IUC3_GenerateInputRequestedRegion,None,itkMeanImageFilterIUC3IUC3)
itkMeanImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIUC3IUC3_GetPointer,None,itkMeanImageFilterIUC3IUC3)
itkMeanImageFilterIUC3IUC3_swigregister = _itkMeanImageFilterPython.itkMeanImageFilterIUC3IUC3_swigregister
itkMeanImageFilterIUC3IUC3_swigregister(itkMeanImageFilterIUC3IUC3)

def itkMeanImageFilterIUC3IUC3___New_orig__():
  """itkMeanImageFilterIUC3IUC3___New_orig__()"""
  return _itkMeanImageFilterPython.itkMeanImageFilterIUC3IUC3___New_orig__()

def itkMeanImageFilterIUC3IUC3_cast(*args):
  """itkMeanImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkMeanImageFilterIUC3IUC3"""
  return _itkMeanImageFilterPython.itkMeanImageFilterIUC3IUC3_cast(*args)

class itkMeanImageFilterIUL2IUL2(itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2):
    """Proxy of C++ itkMeanImageFilterIUL2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkMeanImageFilterPython.itkMeanImageFilterIUL2IUL2_InputImageDimension
    OutputImageDimension = _itkMeanImageFilterPython.itkMeanImageFilterIUL2IUL2_OutputImageDimension
    InputHasNumericTraitsCheck = _itkMeanImageFilterPython.itkMeanImageFilterIUL2IUL2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUL2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRadius(self, *args):
        """SetRadius(self, itkSize2 _arg)"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUL2IUL2_SetRadius(self, *args)

    def GetRadius(self):
        """GetRadius(self) -> itkSize2"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUL2IUL2_GetRadius(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUL2IUL2_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkMeanImageFilterPython.delete_itkMeanImageFilterIUL2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMeanImageFilterIUL2IUL2"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUL2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMeanImageFilterIUL2IUL2"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUL2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMeanImageFilterIUL2IUL2
        
        Create a new object of the class itkMeanImageFilterIUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMeanImageFilterIUL2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMeanImageFilterIUL2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeanImageFilterIUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeanImageFilterIUL2IUL2.SetRadius = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIUL2IUL2_SetRadius,None,itkMeanImageFilterIUL2IUL2)
itkMeanImageFilterIUL2IUL2.GetRadius = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIUL2IUL2_GetRadius,None,itkMeanImageFilterIUL2IUL2)
itkMeanImageFilterIUL2IUL2.GenerateInputRequestedRegion = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIUL2IUL2_GenerateInputRequestedRegion,None,itkMeanImageFilterIUL2IUL2)
itkMeanImageFilterIUL2IUL2.GetPointer = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIUL2IUL2_GetPointer,None,itkMeanImageFilterIUL2IUL2)
itkMeanImageFilterIUL2IUL2_swigregister = _itkMeanImageFilterPython.itkMeanImageFilterIUL2IUL2_swigregister
itkMeanImageFilterIUL2IUL2_swigregister(itkMeanImageFilterIUL2IUL2)

def itkMeanImageFilterIUL2IUL2___New_orig__():
  """itkMeanImageFilterIUL2IUL2___New_orig__()"""
  return _itkMeanImageFilterPython.itkMeanImageFilterIUL2IUL2___New_orig__()

def itkMeanImageFilterIUL2IUL2_cast(*args):
  """itkMeanImageFilterIUL2IUL2_cast(itkLightObject obj) -> itkMeanImageFilterIUL2IUL2"""
  return _itkMeanImageFilterPython.itkMeanImageFilterIUL2IUL2_cast(*args)

class itkMeanImageFilterIUL3IUL3(itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3):
    """Proxy of C++ itkMeanImageFilterIUL3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkMeanImageFilterPython.itkMeanImageFilterIUL3IUL3_InputImageDimension
    OutputImageDimension = _itkMeanImageFilterPython.itkMeanImageFilterIUL3IUL3_OutputImageDimension
    InputHasNumericTraitsCheck = _itkMeanImageFilterPython.itkMeanImageFilterIUL3IUL3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUL3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRadius(self, *args):
        """SetRadius(self, itkSize3 _arg)"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUL3IUL3_SetRadius(self, *args)

    def GetRadius(self):
        """GetRadius(self) -> itkSize3"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUL3IUL3_GetRadius(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUL3IUL3_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkMeanImageFilterPython.delete_itkMeanImageFilterIUL3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkMeanImageFilterIUL3IUL3"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUL3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMeanImageFilterIUL3IUL3"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUL3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMeanImageFilterIUL3IUL3
        
        Create a new object of the class itkMeanImageFilterIUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMeanImageFilterIUL3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMeanImageFilterIUL3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeanImageFilterIUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeanImageFilterIUL3IUL3.SetRadius = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIUL3IUL3_SetRadius,None,itkMeanImageFilterIUL3IUL3)
itkMeanImageFilterIUL3IUL3.GetRadius = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIUL3IUL3_GetRadius,None,itkMeanImageFilterIUL3IUL3)
itkMeanImageFilterIUL3IUL3.GenerateInputRequestedRegion = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIUL3IUL3_GenerateInputRequestedRegion,None,itkMeanImageFilterIUL3IUL3)
itkMeanImageFilterIUL3IUL3.GetPointer = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIUL3IUL3_GetPointer,None,itkMeanImageFilterIUL3IUL3)
itkMeanImageFilterIUL3IUL3_swigregister = _itkMeanImageFilterPython.itkMeanImageFilterIUL3IUL3_swigregister
itkMeanImageFilterIUL3IUL3_swigregister(itkMeanImageFilterIUL3IUL3)

def itkMeanImageFilterIUL3IUL3___New_orig__():
  """itkMeanImageFilterIUL3IUL3___New_orig__()"""
  return _itkMeanImageFilterPython.itkMeanImageFilterIUL3IUL3___New_orig__()

def itkMeanImageFilterIUL3IUL3_cast(*args):
  """itkMeanImageFilterIUL3IUL3_cast(itkLightObject obj) -> itkMeanImageFilterIUL3IUL3"""
  return _itkMeanImageFilterPython.itkMeanImageFilterIUL3IUL3_cast(*args)

class itkMeanImageFilterIUS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """Proxy of C++ itkMeanImageFilterIUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkMeanImageFilterPython.itkMeanImageFilterIUS2IUS2_InputImageDimension
    OutputImageDimension = _itkMeanImageFilterPython.itkMeanImageFilterIUS2IUS2_OutputImageDimension
    InputHasNumericTraitsCheck = _itkMeanImageFilterPython.itkMeanImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRadius(self, *args):
        """SetRadius(self, itkSize2 _arg)"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUS2IUS2_SetRadius(self, *args)

    def GetRadius(self):
        """GetRadius(self) -> itkSize2"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUS2IUS2_GetRadius(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUS2IUS2_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkMeanImageFilterPython.delete_itkMeanImageFilterIUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMeanImageFilterIUS2IUS2"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMeanImageFilterIUS2IUS2"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMeanImageFilterIUS2IUS2
        
        Create a new object of the class itkMeanImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMeanImageFilterIUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMeanImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeanImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeanImageFilterIUS2IUS2.SetRadius = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIUS2IUS2_SetRadius,None,itkMeanImageFilterIUS2IUS2)
itkMeanImageFilterIUS2IUS2.GetRadius = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIUS2IUS2_GetRadius,None,itkMeanImageFilterIUS2IUS2)
itkMeanImageFilterIUS2IUS2.GenerateInputRequestedRegion = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIUS2IUS2_GenerateInputRequestedRegion,None,itkMeanImageFilterIUS2IUS2)
itkMeanImageFilterIUS2IUS2.GetPointer = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIUS2IUS2_GetPointer,None,itkMeanImageFilterIUS2IUS2)
itkMeanImageFilterIUS2IUS2_swigregister = _itkMeanImageFilterPython.itkMeanImageFilterIUS2IUS2_swigregister
itkMeanImageFilterIUS2IUS2_swigregister(itkMeanImageFilterIUS2IUS2)

def itkMeanImageFilterIUS2IUS2___New_orig__():
  """itkMeanImageFilterIUS2IUS2___New_orig__()"""
  return _itkMeanImageFilterPython.itkMeanImageFilterIUS2IUS2___New_orig__()

def itkMeanImageFilterIUS2IUS2_cast(*args):
  """itkMeanImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkMeanImageFilterIUS2IUS2"""
  return _itkMeanImageFilterPython.itkMeanImageFilterIUS2IUS2_cast(*args)

class itkMeanImageFilterIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """Proxy of C++ itkMeanImageFilterIUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkMeanImageFilterPython.itkMeanImageFilterIUS3IUS3_InputImageDimension
    OutputImageDimension = _itkMeanImageFilterPython.itkMeanImageFilterIUS3IUS3_OutputImageDimension
    InputHasNumericTraitsCheck = _itkMeanImageFilterPython.itkMeanImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRadius(self, *args):
        """SetRadius(self, itkSize3 _arg)"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUS3IUS3_SetRadius(self, *args)

    def GetRadius(self):
        """GetRadius(self) -> itkSize3"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUS3IUS3_GetRadius(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUS3IUS3_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkMeanImageFilterPython.delete_itkMeanImageFilterIUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkMeanImageFilterIUS3IUS3"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMeanImageFilterIUS3IUS3"""
        return _itkMeanImageFilterPython.itkMeanImageFilterIUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMeanImageFilterIUS3IUS3
        
        Create a new object of the class itkMeanImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMeanImageFilterIUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMeanImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeanImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeanImageFilterIUS3IUS3.SetRadius = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIUS3IUS3_SetRadius,None,itkMeanImageFilterIUS3IUS3)
itkMeanImageFilterIUS3IUS3.GetRadius = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIUS3IUS3_GetRadius,None,itkMeanImageFilterIUS3IUS3)
itkMeanImageFilterIUS3IUS3.GenerateInputRequestedRegion = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIUS3IUS3_GenerateInputRequestedRegion,None,itkMeanImageFilterIUS3IUS3)
itkMeanImageFilterIUS3IUS3.GetPointer = new_instancemethod(_itkMeanImageFilterPython.itkMeanImageFilterIUS3IUS3_GetPointer,None,itkMeanImageFilterIUS3IUS3)
itkMeanImageFilterIUS3IUS3_swigregister = _itkMeanImageFilterPython.itkMeanImageFilterIUS3IUS3_swigregister
itkMeanImageFilterIUS3IUS3_swigregister(itkMeanImageFilterIUS3IUS3)

def itkMeanImageFilterIUS3IUS3___New_orig__():
  """itkMeanImageFilterIUS3IUS3___New_orig__()"""
  return _itkMeanImageFilterPython.itkMeanImageFilterIUS3IUS3___New_orig__()

def itkMeanImageFilterIUS3IUS3_cast(*args):
  """itkMeanImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkMeanImageFilterIUS3IUS3"""
  return _itkMeanImageFilterPython.itkMeanImageFilterIUS3IUS3_cast(*args)



