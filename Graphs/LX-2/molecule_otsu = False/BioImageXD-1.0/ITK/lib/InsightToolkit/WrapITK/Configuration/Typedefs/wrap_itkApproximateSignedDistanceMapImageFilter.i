// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkApproximateSignedDistanceMapImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkApproximateSignedDistanceMapImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkApproximateSignedDistanceMapImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkApproximateSignedDistanceMapImageFilterJava
#endif
#ifdef SWIGLUA
%module itkApproximateSignedDistanceMapImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkApproximateSignedDistanceMapImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkApproximateSignedDistanceMapImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkApproximateSignedDistanceMapImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkApproximateSignedDistanceMapImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkApproximateSignedDistanceMapImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkApproximateSignedDistanceMapImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkApproximateSignedDistanceMapImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkApproximateSignedDistanceMapImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkApproximateSignedDistanceMapImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkApproximateSignedDistanceMapImageFilterPython
#endif
#ifdef SWIGR
%module itkApproximateSignedDistanceMapImageFilterR
#endif
#ifdef SWIGRUBY
%module itkApproximateSignedDistanceMapImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkApproximateSignedDistanceMapImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkApproximateSignedDistanceMapImageFilterTcl
#endif
#ifdef SWIGXML
%module itkApproximateSignedDistanceMapImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "DistanceMap.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImageToImageFilterA.i


%include itk.i
%include wrap_itkApproximateSignedDistanceMapImageFilter_ext.i


 class itkApproximateSignedDistanceMapImageFilterID2ID2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkApproximateSignedDistanceMapImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetInsideValue(double const _arg);
     virtual double GetInsideValue() const;
     virtual void SetOutsideValue(double const _arg);
     virtual double GetOutsideValue() const;
   private:
     itkApproximateSignedDistanceMapImageFilterID2ID2(itkApproximateSignedDistanceMapImageFilterID2ID2 const & arg0);
     void operator=(itkApproximateSignedDistanceMapImageFilterID2ID2 const & arg0);
   protected:
     itkApproximateSignedDistanceMapImageFilterID2ID2();
     ~itkApproximateSignedDistanceMapImageFilterID2ID2();
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkApproximateSignedDistanceMapImageFilterID2ID2_Pointer {
   public:
     itkApproximateSignedDistanceMapImageFilterID2ID2_Pointer();
     itkApproximateSignedDistanceMapImageFilterID2ID2_Pointer(itkApproximateSignedDistanceMapImageFilterID2ID2_Pointer const & p);
     itkApproximateSignedDistanceMapImageFilterID2ID2_Pointer(itkApproximateSignedDistanceMapImageFilterID2ID2 * p);
     ~itkApproximateSignedDistanceMapImageFilterID2ID2_Pointer();
     itkApproximateSignedDistanceMapImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkApproximateSignedDistanceMapImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkApproximateSignedDistanceMapImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkApproximateSignedDistanceMapImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkApproximateSignedDistanceMapImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkApproximateSignedDistanceMapImageFilterID2ID2_Pointer const & r) const;
     itkApproximateSignedDistanceMapImageFilterID2ID2_Pointer & operator=(itkApproximateSignedDistanceMapImageFilterID2ID2_Pointer const & r);
     itkApproximateSignedDistanceMapImageFilterID2ID2_Pointer & operator=(itkApproximateSignedDistanceMapImageFilterID2ID2 * r);
     itkApproximateSignedDistanceMapImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkApproximateSignedDistanceMapImageFilterID3ID3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkApproximateSignedDistanceMapImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetInsideValue(double const _arg);
     virtual double GetInsideValue() const;
     virtual void SetOutsideValue(double const _arg);
     virtual double GetOutsideValue() const;
   private:
     itkApproximateSignedDistanceMapImageFilterID3ID3(itkApproximateSignedDistanceMapImageFilterID3ID3 const & arg0);
     void operator=(itkApproximateSignedDistanceMapImageFilterID3ID3 const & arg0);
   protected:
     itkApproximateSignedDistanceMapImageFilterID3ID3();
     ~itkApproximateSignedDistanceMapImageFilterID3ID3();
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkApproximateSignedDistanceMapImageFilterID3ID3_Pointer {
   public:
     itkApproximateSignedDistanceMapImageFilterID3ID3_Pointer();
     itkApproximateSignedDistanceMapImageFilterID3ID3_Pointer(itkApproximateSignedDistanceMapImageFilterID3ID3_Pointer const & p);
     itkApproximateSignedDistanceMapImageFilterID3ID3_Pointer(itkApproximateSignedDistanceMapImageFilterID3ID3 * p);
     ~itkApproximateSignedDistanceMapImageFilterID3ID3_Pointer();
     itkApproximateSignedDistanceMapImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkApproximateSignedDistanceMapImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkApproximateSignedDistanceMapImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkApproximateSignedDistanceMapImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkApproximateSignedDistanceMapImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkApproximateSignedDistanceMapImageFilterID3ID3_Pointer const & r) const;
     itkApproximateSignedDistanceMapImageFilterID3ID3_Pointer & operator=(itkApproximateSignedDistanceMapImageFilterID3ID3_Pointer const & r);
     itkApproximateSignedDistanceMapImageFilterID3ID3_Pointer & operator=(itkApproximateSignedDistanceMapImageFilterID3ID3 * r);
     itkApproximateSignedDistanceMapImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkApproximateSignedDistanceMapImageFilterIF2IF2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkApproximateSignedDistanceMapImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetInsideValue(float const _arg);
     virtual float GetInsideValue() const;
     virtual void SetOutsideValue(float const _arg);
     virtual float GetOutsideValue() const;
   private:
     itkApproximateSignedDistanceMapImageFilterIF2IF2(itkApproximateSignedDistanceMapImageFilterIF2IF2 const & arg0);
     void operator=(itkApproximateSignedDistanceMapImageFilterIF2IF2 const & arg0);
   protected:
     itkApproximateSignedDistanceMapImageFilterIF2IF2();
     ~itkApproximateSignedDistanceMapImageFilterIF2IF2();
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkApproximateSignedDistanceMapImageFilterIF2IF2_Pointer {
   public:
     itkApproximateSignedDistanceMapImageFilterIF2IF2_Pointer();
     itkApproximateSignedDistanceMapImageFilterIF2IF2_Pointer(itkApproximateSignedDistanceMapImageFilterIF2IF2_Pointer const & p);
     itkApproximateSignedDistanceMapImageFilterIF2IF2_Pointer(itkApproximateSignedDistanceMapImageFilterIF2IF2 * p);
     ~itkApproximateSignedDistanceMapImageFilterIF2IF2_Pointer();
     itkApproximateSignedDistanceMapImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkApproximateSignedDistanceMapImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkApproximateSignedDistanceMapImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkApproximateSignedDistanceMapImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkApproximateSignedDistanceMapImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkApproximateSignedDistanceMapImageFilterIF2IF2_Pointer const & r) const;
     itkApproximateSignedDistanceMapImageFilterIF2IF2_Pointer & operator=(itkApproximateSignedDistanceMapImageFilterIF2IF2_Pointer const & r);
     itkApproximateSignedDistanceMapImageFilterIF2IF2_Pointer & operator=(itkApproximateSignedDistanceMapImageFilterIF2IF2 * r);
     itkApproximateSignedDistanceMapImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkApproximateSignedDistanceMapImageFilterIF3IF3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkApproximateSignedDistanceMapImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetInsideValue(float const _arg);
     virtual float GetInsideValue() const;
     virtual void SetOutsideValue(float const _arg);
     virtual float GetOutsideValue() const;
   private:
     itkApproximateSignedDistanceMapImageFilterIF3IF3(itkApproximateSignedDistanceMapImageFilterIF3IF3 const & arg0);
     void operator=(itkApproximateSignedDistanceMapImageFilterIF3IF3 const & arg0);
   protected:
     itkApproximateSignedDistanceMapImageFilterIF3IF3();
     ~itkApproximateSignedDistanceMapImageFilterIF3IF3();
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkApproximateSignedDistanceMapImageFilterIF3IF3_Pointer {
   public:
     itkApproximateSignedDistanceMapImageFilterIF3IF3_Pointer();
     itkApproximateSignedDistanceMapImageFilterIF3IF3_Pointer(itkApproximateSignedDistanceMapImageFilterIF3IF3_Pointer const & p);
     itkApproximateSignedDistanceMapImageFilterIF3IF3_Pointer(itkApproximateSignedDistanceMapImageFilterIF3IF3 * p);
     ~itkApproximateSignedDistanceMapImageFilterIF3IF3_Pointer();
     itkApproximateSignedDistanceMapImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkApproximateSignedDistanceMapImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkApproximateSignedDistanceMapImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkApproximateSignedDistanceMapImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkApproximateSignedDistanceMapImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkApproximateSignedDistanceMapImageFilterIF3IF3_Pointer const & r) const;
     itkApproximateSignedDistanceMapImageFilterIF3IF3_Pointer & operator=(itkApproximateSignedDistanceMapImageFilterIF3IF3_Pointer const & r);
     itkApproximateSignedDistanceMapImageFilterIF3IF3_Pointer & operator=(itkApproximateSignedDistanceMapImageFilterIF3IF3 * r);
     itkApproximateSignedDistanceMapImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


