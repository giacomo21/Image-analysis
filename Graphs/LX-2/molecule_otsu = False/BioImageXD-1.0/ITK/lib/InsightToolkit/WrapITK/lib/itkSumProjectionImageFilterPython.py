# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkSumProjectionImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkSumProjectionImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkSumProjectionImageFilterPython
            return _itkSumProjectionImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkSumProjectionImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkSumProjectionImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkSumProjectionImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkImageToImageFilterBPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterAPython
def itkSumProjectionImageFilterID3ID2_New():
  return itkSumProjectionImageFilterID3ID2.New()

def itkSumProjectionImageFilterID3ID2_Superclass_New():
  return itkSumProjectionImageFilterID3ID2_Superclass.New()

def itkSumProjectionImageFilterIF3IF2_New():
  return itkSumProjectionImageFilterIF3IF2.New()

def itkSumProjectionImageFilterIF3IF2_Superclass_New():
  return itkSumProjectionImageFilterIF3IF2_Superclass.New()

def itkSumProjectionImageFilterIUS3IUS2_New():
  return itkSumProjectionImageFilterIUS3IUS2.New()

def itkSumProjectionImageFilterIUS3IUS2_Superclass_New():
  return itkSumProjectionImageFilterIUS3IUS2_Superclass.New()

def itkSumProjectionImageFilterIUL3IUL2_New():
  return itkSumProjectionImageFilterIUL3IUL2.New()

def itkSumProjectionImageFilterIUL3IUL2_Superclass_New():
  return itkSumProjectionImageFilterIUL3IUL2_Superclass.New()

def itkSumProjectionImageFilterIUC3IUC2_New():
  return itkSumProjectionImageFilterIUC3IUC2.New()

def itkSumProjectionImageFilterIUC3IUC2_Superclass_New():
  return itkSumProjectionImageFilterIUC3IUC2_Superclass.New()

def itkSumProjectionImageFilterID3ID3_New():
  return itkSumProjectionImageFilterID3ID3.New()

def itkSumProjectionImageFilterID3ID3_Superclass_New():
  return itkSumProjectionImageFilterID3ID3_Superclass.New()

def itkSumProjectionImageFilterID2ID2_New():
  return itkSumProjectionImageFilterID2ID2.New()

def itkSumProjectionImageFilterID2ID2_Superclass_New():
  return itkSumProjectionImageFilterID2ID2_Superclass.New()

def itkSumProjectionImageFilterIF3IF3_New():
  return itkSumProjectionImageFilterIF3IF3.New()

def itkSumProjectionImageFilterIF3IF3_Superclass_New():
  return itkSumProjectionImageFilterIF3IF3_Superclass.New()

def itkSumProjectionImageFilterIF2IF2_New():
  return itkSumProjectionImageFilterIF2IF2.New()

def itkSumProjectionImageFilterIF2IF2_Superclass_New():
  return itkSumProjectionImageFilterIF2IF2_Superclass.New()

def itkSumProjectionImageFilterIUS3IUS3_New():
  return itkSumProjectionImageFilterIUS3IUS3.New()

def itkSumProjectionImageFilterIUS3IUS3_Superclass_New():
  return itkSumProjectionImageFilterIUS3IUS3_Superclass.New()

def itkSumProjectionImageFilterIUS2IUS2_New():
  return itkSumProjectionImageFilterIUS2IUS2.New()

def itkSumProjectionImageFilterIUS2IUS2_Superclass_New():
  return itkSumProjectionImageFilterIUS2IUS2_Superclass.New()

def itkSumProjectionImageFilterIUL3IUL3_New():
  return itkSumProjectionImageFilterIUL3IUL3.New()

def itkSumProjectionImageFilterIUL3IUL3_Superclass_New():
  return itkSumProjectionImageFilterIUL3IUL3_Superclass.New()

def itkSumProjectionImageFilterIUL2IUL2_New():
  return itkSumProjectionImageFilterIUL2IUL2.New()

def itkSumProjectionImageFilterIUL2IUL2_Superclass_New():
  return itkSumProjectionImageFilterIUL2IUL2_Superclass.New()

def itkSumProjectionImageFilterIUC3IUC3_New():
  return itkSumProjectionImageFilterIUC3IUC3.New()

def itkSumProjectionImageFilterIUC3IUC3_Superclass_New():
  return itkSumProjectionImageFilterIUC3IUC3_Superclass.New()

def itkSumProjectionImageFilterIUC2IUC2_New():
  return itkSumProjectionImageFilterIUC2IUC2.New()

def itkSumProjectionImageFilterIUC2IUC2_Superclass_New():
  return itkSumProjectionImageFilterIUC2IUC2_Superclass.New()

class itkSumProjectionImageFilterID2ID2_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    """Proxy of C++ itkSumProjectionImageFilterID2ID2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_Superclass_InputImageDimension
    OutputImageDimension = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_Superclass_OutputImageDimension
    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_Superclass_ImageDimensionCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetProjectionDimension(self, *args):
        """SetProjectionDimension(self, unsigned int _arg)"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_Superclass_SetProjectionDimension(self, *args)

    def GetProjectionDimension(self):
        """GetProjectionDimension(self) -> unsigned int"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterID2ID2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterID2ID2_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSumProjectionImageFilterID2ID2_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterID2ID2_Superclass
        
        Create a new object of the class itkSumProjectionImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSumProjectionImageFilterID2ID2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSumProjectionImageFilterID2ID2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterID2ID2_Superclass.SetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_Superclass_SetProjectionDimension,None,itkSumProjectionImageFilterID2ID2_Superclass)
itkSumProjectionImageFilterID2ID2_Superclass.GetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_Superclass_GetProjectionDimension,None,itkSumProjectionImageFilterID2ID2_Superclass)
itkSumProjectionImageFilterID2ID2_Superclass.GetPointer = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_Superclass_GetPointer,None,itkSumProjectionImageFilterID2ID2_Superclass)
itkSumProjectionImageFilterID2ID2_Superclass_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_Superclass_swigregister
itkSumProjectionImageFilterID2ID2_Superclass_swigregister(itkSumProjectionImageFilterID2ID2_Superclass)

def itkSumProjectionImageFilterID2ID2_Superclass___New_orig__():
  """itkSumProjectionImageFilterID2ID2_Superclass___New_orig__()"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_Superclass___New_orig__()

def itkSumProjectionImageFilterID2ID2_Superclass_cast(*args):
  """itkSumProjectionImageFilterID2ID2_Superclass_cast(itkLightObject obj) -> itkSumProjectionImageFilterID2ID2_Superclass"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_Superclass_cast(*args)

class itkSumProjectionImageFilterID3ID2_Superclass(itkImageToImageFilterBPython.itkImageToImageFilterID3ID2):
    """Proxy of C++ itkSumProjectionImageFilterID3ID2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_Superclass_InputImageDimension
    OutputImageDimension = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_Superclass_OutputImageDimension
    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_Superclass_ImageDimensionCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetProjectionDimension(self, *args):
        """SetProjectionDimension(self, unsigned int _arg)"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_Superclass_SetProjectionDimension(self, *args)

    def GetProjectionDimension(self):
        """GetProjectionDimension(self) -> unsigned int"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterID3ID2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterID3ID2_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSumProjectionImageFilterID3ID2_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterID3ID2_Superclass
        
        Create a new object of the class itkSumProjectionImageFilterID3ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSumProjectionImageFilterID3ID2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSumProjectionImageFilterID3ID2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterID3ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterID3ID2_Superclass.SetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_Superclass_SetProjectionDimension,None,itkSumProjectionImageFilterID3ID2_Superclass)
itkSumProjectionImageFilterID3ID2_Superclass.GetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_Superclass_GetProjectionDimension,None,itkSumProjectionImageFilterID3ID2_Superclass)
itkSumProjectionImageFilterID3ID2_Superclass.GetPointer = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_Superclass_GetPointer,None,itkSumProjectionImageFilterID3ID2_Superclass)
itkSumProjectionImageFilterID3ID2_Superclass_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_Superclass_swigregister
itkSumProjectionImageFilterID3ID2_Superclass_swigregister(itkSumProjectionImageFilterID3ID2_Superclass)

def itkSumProjectionImageFilterID3ID2_Superclass___New_orig__():
  """itkSumProjectionImageFilterID3ID2_Superclass___New_orig__()"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_Superclass___New_orig__()

def itkSumProjectionImageFilterID3ID2_Superclass_cast(*args):
  """itkSumProjectionImageFilterID3ID2_Superclass_cast(itkLightObject obj) -> itkSumProjectionImageFilterID3ID2_Superclass"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_Superclass_cast(*args)

class itkSumProjectionImageFilterID3ID3_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    """Proxy of C++ itkSumProjectionImageFilterID3ID3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_Superclass_InputImageDimension
    OutputImageDimension = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_Superclass_OutputImageDimension
    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_Superclass_ImageDimensionCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetProjectionDimension(self, *args):
        """SetProjectionDimension(self, unsigned int _arg)"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_Superclass_SetProjectionDimension(self, *args)

    def GetProjectionDimension(self):
        """GetProjectionDimension(self) -> unsigned int"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterID3ID3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterID3ID3_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSumProjectionImageFilterID3ID3_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterID3ID3_Superclass
        
        Create a new object of the class itkSumProjectionImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSumProjectionImageFilterID3ID3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSumProjectionImageFilterID3ID3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterID3ID3_Superclass.SetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_Superclass_SetProjectionDimension,None,itkSumProjectionImageFilterID3ID3_Superclass)
itkSumProjectionImageFilterID3ID3_Superclass.GetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_Superclass_GetProjectionDimension,None,itkSumProjectionImageFilterID3ID3_Superclass)
itkSumProjectionImageFilterID3ID3_Superclass.GetPointer = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_Superclass_GetPointer,None,itkSumProjectionImageFilterID3ID3_Superclass)
itkSumProjectionImageFilterID3ID3_Superclass_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_Superclass_swigregister
itkSumProjectionImageFilterID3ID3_Superclass_swigregister(itkSumProjectionImageFilterID3ID3_Superclass)

def itkSumProjectionImageFilterID3ID3_Superclass___New_orig__():
  """itkSumProjectionImageFilterID3ID3_Superclass___New_orig__()"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_Superclass___New_orig__()

def itkSumProjectionImageFilterID3ID3_Superclass_cast(*args):
  """itkSumProjectionImageFilterID3ID3_Superclass_cast(itkLightObject obj) -> itkSumProjectionImageFilterID3ID3_Superclass"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_Superclass_cast(*args)

class itkSumProjectionImageFilterIF2IF2_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkSumProjectionImageFilterIF2IF2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass_InputImageDimension
    OutputImageDimension = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass_OutputImageDimension
    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass_ImageDimensionCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetProjectionDimension(self, *args):
        """SetProjectionDimension(self, unsigned int _arg)"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass_SetProjectionDimension(self, *args)

    def GetProjectionDimension(self):
        """GetProjectionDimension(self) -> unsigned int"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIF2IF2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIF2IF2_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSumProjectionImageFilterIF2IF2_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIF2IF2_Superclass
        
        Create a new object of the class itkSumProjectionImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSumProjectionImageFilterIF2IF2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSumProjectionImageFilterIF2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIF2IF2_Superclass.SetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass_SetProjectionDimension,None,itkSumProjectionImageFilterIF2IF2_Superclass)
itkSumProjectionImageFilterIF2IF2_Superclass.GetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass_GetProjectionDimension,None,itkSumProjectionImageFilterIF2IF2_Superclass)
itkSumProjectionImageFilterIF2IF2_Superclass.GetPointer = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass_GetPointer,None,itkSumProjectionImageFilterIF2IF2_Superclass)
itkSumProjectionImageFilterIF2IF2_Superclass_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass_swigregister
itkSumProjectionImageFilterIF2IF2_Superclass_swigregister(itkSumProjectionImageFilterIF2IF2_Superclass)

def itkSumProjectionImageFilterIF2IF2_Superclass___New_orig__():
  """itkSumProjectionImageFilterIF2IF2_Superclass___New_orig__()"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass___New_orig__()

def itkSumProjectionImageFilterIF2IF2_Superclass_cast(*args):
  """itkSumProjectionImageFilterIF2IF2_Superclass_cast(itkLightObject obj) -> itkSumProjectionImageFilterIF2IF2_Superclass"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_Superclass_cast(*args)

class itkSumProjectionImageFilterIF3IF2_Superclass(itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2):
    """Proxy of C++ itkSumProjectionImageFilterIF3IF2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass_InputImageDimension
    OutputImageDimension = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass_OutputImageDimension
    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass_ImageDimensionCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetProjectionDimension(self, *args):
        """SetProjectionDimension(self, unsigned int _arg)"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass_SetProjectionDimension(self, *args)

    def GetProjectionDimension(self):
        """GetProjectionDimension(self) -> unsigned int"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIF3IF2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIF3IF2_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSumProjectionImageFilterIF3IF2_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIF3IF2_Superclass
        
        Create a new object of the class itkSumProjectionImageFilterIF3IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSumProjectionImageFilterIF3IF2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSumProjectionImageFilterIF3IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIF3IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIF3IF2_Superclass.SetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass_SetProjectionDimension,None,itkSumProjectionImageFilterIF3IF2_Superclass)
itkSumProjectionImageFilterIF3IF2_Superclass.GetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass_GetProjectionDimension,None,itkSumProjectionImageFilterIF3IF2_Superclass)
itkSumProjectionImageFilterIF3IF2_Superclass.GetPointer = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass_GetPointer,None,itkSumProjectionImageFilterIF3IF2_Superclass)
itkSumProjectionImageFilterIF3IF2_Superclass_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass_swigregister
itkSumProjectionImageFilterIF3IF2_Superclass_swigregister(itkSumProjectionImageFilterIF3IF2_Superclass)

def itkSumProjectionImageFilterIF3IF2_Superclass___New_orig__():
  """itkSumProjectionImageFilterIF3IF2_Superclass___New_orig__()"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass___New_orig__()

def itkSumProjectionImageFilterIF3IF2_Superclass_cast(*args):
  """itkSumProjectionImageFilterIF3IF2_Superclass_cast(itkLightObject obj) -> itkSumProjectionImageFilterIF3IF2_Superclass"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_Superclass_cast(*args)

class itkSumProjectionImageFilterIF3IF3_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkSumProjectionImageFilterIF3IF3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass_InputImageDimension
    OutputImageDimension = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass_OutputImageDimension
    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass_ImageDimensionCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetProjectionDimension(self, *args):
        """SetProjectionDimension(self, unsigned int _arg)"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass_SetProjectionDimension(self, *args)

    def GetProjectionDimension(self):
        """GetProjectionDimension(self) -> unsigned int"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIF3IF3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIF3IF3_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSumProjectionImageFilterIF3IF3_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIF3IF3_Superclass
        
        Create a new object of the class itkSumProjectionImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSumProjectionImageFilterIF3IF3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSumProjectionImageFilterIF3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIF3IF3_Superclass.SetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass_SetProjectionDimension,None,itkSumProjectionImageFilterIF3IF3_Superclass)
itkSumProjectionImageFilterIF3IF3_Superclass.GetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass_GetProjectionDimension,None,itkSumProjectionImageFilterIF3IF3_Superclass)
itkSumProjectionImageFilterIF3IF3_Superclass.GetPointer = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass_GetPointer,None,itkSumProjectionImageFilterIF3IF3_Superclass)
itkSumProjectionImageFilterIF3IF3_Superclass_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass_swigregister
itkSumProjectionImageFilterIF3IF3_Superclass_swigregister(itkSumProjectionImageFilterIF3IF3_Superclass)

def itkSumProjectionImageFilterIF3IF3_Superclass___New_orig__():
  """itkSumProjectionImageFilterIF3IF3_Superclass___New_orig__()"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass___New_orig__()

def itkSumProjectionImageFilterIF3IF3_Superclass_cast(*args):
  """itkSumProjectionImageFilterIF3IF3_Superclass_cast(itkLightObject obj) -> itkSumProjectionImageFilterIF3IF3_Superclass"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_Superclass_cast(*args)

class itkSumProjectionImageFilterIUC2IUC2_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """Proxy of C++ itkSumProjectionImageFilterIUC2IUC2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass_InputImageDimension
    OutputImageDimension = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass_OutputImageDimension
    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass_ImageDimensionCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetProjectionDimension(self, *args):
        """SetProjectionDimension(self, unsigned int _arg)"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass_SetProjectionDimension(self, *args)

    def GetProjectionDimension(self):
        """GetProjectionDimension(self) -> unsigned int"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUC2IUC2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIUC2IUC2_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSumProjectionImageFilterIUC2IUC2_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUC2IUC2_Superclass
        
        Create a new object of the class itkSumProjectionImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSumProjectionImageFilterIUC2IUC2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSumProjectionImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIUC2IUC2_Superclass.SetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass_SetProjectionDimension,None,itkSumProjectionImageFilterIUC2IUC2_Superclass)
itkSumProjectionImageFilterIUC2IUC2_Superclass.GetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass_GetProjectionDimension,None,itkSumProjectionImageFilterIUC2IUC2_Superclass)
itkSumProjectionImageFilterIUC2IUC2_Superclass.GetPointer = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass_GetPointer,None,itkSumProjectionImageFilterIUC2IUC2_Superclass)
itkSumProjectionImageFilterIUC2IUC2_Superclass_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass_swigregister
itkSumProjectionImageFilterIUC2IUC2_Superclass_swigregister(itkSumProjectionImageFilterIUC2IUC2_Superclass)

def itkSumProjectionImageFilterIUC2IUC2_Superclass___New_orig__():
  """itkSumProjectionImageFilterIUC2IUC2_Superclass___New_orig__()"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass___New_orig__()

def itkSumProjectionImageFilterIUC2IUC2_Superclass_cast(*args):
  """itkSumProjectionImageFilterIUC2IUC2_Superclass_cast(itkLightObject obj) -> itkSumProjectionImageFilterIUC2IUC2_Superclass"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_Superclass_cast(*args)

class itkSumProjectionImageFilterIUC3IUC2_Superclass(itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2):
    """Proxy of C++ itkSumProjectionImageFilterIUC3IUC2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass_InputImageDimension
    OutputImageDimension = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass_OutputImageDimension
    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass_ImageDimensionCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetProjectionDimension(self, *args):
        """SetProjectionDimension(self, unsigned int _arg)"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass_SetProjectionDimension(self, *args)

    def GetProjectionDimension(self):
        """GetProjectionDimension(self) -> unsigned int"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUC3IUC2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIUC3IUC2_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSumProjectionImageFilterIUC3IUC2_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUC3IUC2_Superclass
        
        Create a new object of the class itkSumProjectionImageFilterIUC3IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSumProjectionImageFilterIUC3IUC2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSumProjectionImageFilterIUC3IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIUC3IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIUC3IUC2_Superclass.SetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass_SetProjectionDimension,None,itkSumProjectionImageFilterIUC3IUC2_Superclass)
itkSumProjectionImageFilterIUC3IUC2_Superclass.GetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass_GetProjectionDimension,None,itkSumProjectionImageFilterIUC3IUC2_Superclass)
itkSumProjectionImageFilterIUC3IUC2_Superclass.GetPointer = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass_GetPointer,None,itkSumProjectionImageFilterIUC3IUC2_Superclass)
itkSumProjectionImageFilterIUC3IUC2_Superclass_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass_swigregister
itkSumProjectionImageFilterIUC3IUC2_Superclass_swigregister(itkSumProjectionImageFilterIUC3IUC2_Superclass)

def itkSumProjectionImageFilterIUC3IUC2_Superclass___New_orig__():
  """itkSumProjectionImageFilterIUC3IUC2_Superclass___New_orig__()"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass___New_orig__()

def itkSumProjectionImageFilterIUC3IUC2_Superclass_cast(*args):
  """itkSumProjectionImageFilterIUC3IUC2_Superclass_cast(itkLightObject obj) -> itkSumProjectionImageFilterIUC3IUC2_Superclass"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_Superclass_cast(*args)

class itkSumProjectionImageFilterIUC3IUC3_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """Proxy of C++ itkSumProjectionImageFilterIUC3IUC3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass_InputImageDimension
    OutputImageDimension = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass_OutputImageDimension
    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass_ImageDimensionCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetProjectionDimension(self, *args):
        """SetProjectionDimension(self, unsigned int _arg)"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass_SetProjectionDimension(self, *args)

    def GetProjectionDimension(self):
        """GetProjectionDimension(self) -> unsigned int"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUC3IUC3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIUC3IUC3_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSumProjectionImageFilterIUC3IUC3_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUC3IUC3_Superclass
        
        Create a new object of the class itkSumProjectionImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSumProjectionImageFilterIUC3IUC3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSumProjectionImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIUC3IUC3_Superclass.SetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass_SetProjectionDimension,None,itkSumProjectionImageFilterIUC3IUC3_Superclass)
itkSumProjectionImageFilterIUC3IUC3_Superclass.GetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass_GetProjectionDimension,None,itkSumProjectionImageFilterIUC3IUC3_Superclass)
itkSumProjectionImageFilterIUC3IUC3_Superclass.GetPointer = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass_GetPointer,None,itkSumProjectionImageFilterIUC3IUC3_Superclass)
itkSumProjectionImageFilterIUC3IUC3_Superclass_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass_swigregister
itkSumProjectionImageFilterIUC3IUC3_Superclass_swigregister(itkSumProjectionImageFilterIUC3IUC3_Superclass)

def itkSumProjectionImageFilterIUC3IUC3_Superclass___New_orig__():
  """itkSumProjectionImageFilterIUC3IUC3_Superclass___New_orig__()"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass___New_orig__()

def itkSumProjectionImageFilterIUC3IUC3_Superclass_cast(*args):
  """itkSumProjectionImageFilterIUC3IUC3_Superclass_cast(itkLightObject obj) -> itkSumProjectionImageFilterIUC3IUC3_Superclass"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_Superclass_cast(*args)

class itkSumProjectionImageFilterIUL2IUL2_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2):
    """Proxy of C++ itkSumProjectionImageFilterIUL2IUL2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL2IUL2_Superclass_InputImageDimension
    OutputImageDimension = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL2IUL2_Superclass_OutputImageDimension
    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL2IUL2_Superclass_ImageDimensionCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL2IUL2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetProjectionDimension(self, *args):
        """SetProjectionDimension(self, unsigned int _arg)"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL2IUL2_Superclass_SetProjectionDimension(self, *args)

    def GetProjectionDimension(self):
        """GetProjectionDimension(self) -> unsigned int"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL2IUL2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUL2IUL2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIUL2IUL2_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL2IUL2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSumProjectionImageFilterIUL2IUL2_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL2IUL2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUL2IUL2_Superclass
        
        Create a new object of the class itkSumProjectionImageFilterIUL2IUL2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSumProjectionImageFilterIUL2IUL2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSumProjectionImageFilterIUL2IUL2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIUL2IUL2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIUL2IUL2_Superclass.SetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL2IUL2_Superclass_SetProjectionDimension,None,itkSumProjectionImageFilterIUL2IUL2_Superclass)
itkSumProjectionImageFilterIUL2IUL2_Superclass.GetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL2IUL2_Superclass_GetProjectionDimension,None,itkSumProjectionImageFilterIUL2IUL2_Superclass)
itkSumProjectionImageFilterIUL2IUL2_Superclass.GetPointer = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL2IUL2_Superclass_GetPointer,None,itkSumProjectionImageFilterIUL2IUL2_Superclass)
itkSumProjectionImageFilterIUL2IUL2_Superclass_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL2IUL2_Superclass_swigregister
itkSumProjectionImageFilterIUL2IUL2_Superclass_swigregister(itkSumProjectionImageFilterIUL2IUL2_Superclass)

def itkSumProjectionImageFilterIUL2IUL2_Superclass___New_orig__():
  """itkSumProjectionImageFilterIUL2IUL2_Superclass___New_orig__()"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL2IUL2_Superclass___New_orig__()

def itkSumProjectionImageFilterIUL2IUL2_Superclass_cast(*args):
  """itkSumProjectionImageFilterIUL2IUL2_Superclass_cast(itkLightObject obj) -> itkSumProjectionImageFilterIUL2IUL2_Superclass"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL2IUL2_Superclass_cast(*args)

class itkSumProjectionImageFilterIUL3IUL2_Superclass(itkImageToImageFilterBPython.itkImageToImageFilterIUL3IUL2):
    """Proxy of C++ itkSumProjectionImageFilterIUL3IUL2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL2_Superclass_InputImageDimension
    OutputImageDimension = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL2_Superclass_OutputImageDimension
    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL2_Superclass_ImageDimensionCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetProjectionDimension(self, *args):
        """SetProjectionDimension(self, unsigned int _arg)"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL2_Superclass_SetProjectionDimension(self, *args)

    def GetProjectionDimension(self):
        """GetProjectionDimension(self) -> unsigned int"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUL3IUL2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIUL3IUL2_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSumProjectionImageFilterIUL3IUL2_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUL3IUL2_Superclass
        
        Create a new object of the class itkSumProjectionImageFilterIUL3IUL2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSumProjectionImageFilterIUL3IUL2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSumProjectionImageFilterIUL3IUL2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIUL3IUL2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIUL3IUL2_Superclass.SetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL2_Superclass_SetProjectionDimension,None,itkSumProjectionImageFilterIUL3IUL2_Superclass)
itkSumProjectionImageFilterIUL3IUL2_Superclass.GetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL2_Superclass_GetProjectionDimension,None,itkSumProjectionImageFilterIUL3IUL2_Superclass)
itkSumProjectionImageFilterIUL3IUL2_Superclass.GetPointer = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL2_Superclass_GetPointer,None,itkSumProjectionImageFilterIUL3IUL2_Superclass)
itkSumProjectionImageFilterIUL3IUL2_Superclass_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL2_Superclass_swigregister
itkSumProjectionImageFilterIUL3IUL2_Superclass_swigregister(itkSumProjectionImageFilterIUL3IUL2_Superclass)

def itkSumProjectionImageFilterIUL3IUL2_Superclass___New_orig__():
  """itkSumProjectionImageFilterIUL3IUL2_Superclass___New_orig__()"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL2_Superclass___New_orig__()

def itkSumProjectionImageFilterIUL3IUL2_Superclass_cast(*args):
  """itkSumProjectionImageFilterIUL3IUL2_Superclass_cast(itkLightObject obj) -> itkSumProjectionImageFilterIUL3IUL2_Superclass"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL2_Superclass_cast(*args)

class itkSumProjectionImageFilterIUL3IUL3_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3):
    """Proxy of C++ itkSumProjectionImageFilterIUL3IUL3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL3_Superclass_InputImageDimension
    OutputImageDimension = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL3_Superclass_OutputImageDimension
    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL3_Superclass_ImageDimensionCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetProjectionDimension(self, *args):
        """SetProjectionDimension(self, unsigned int _arg)"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL3_Superclass_SetProjectionDimension(self, *args)

    def GetProjectionDimension(self):
        """GetProjectionDimension(self) -> unsigned int"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL3_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUL3IUL3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIUL3IUL3_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSumProjectionImageFilterIUL3IUL3_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUL3IUL3_Superclass
        
        Create a new object of the class itkSumProjectionImageFilterIUL3IUL3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSumProjectionImageFilterIUL3IUL3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSumProjectionImageFilterIUL3IUL3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIUL3IUL3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIUL3IUL3_Superclass.SetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL3_Superclass_SetProjectionDimension,None,itkSumProjectionImageFilterIUL3IUL3_Superclass)
itkSumProjectionImageFilterIUL3IUL3_Superclass.GetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL3_Superclass_GetProjectionDimension,None,itkSumProjectionImageFilterIUL3IUL3_Superclass)
itkSumProjectionImageFilterIUL3IUL3_Superclass.GetPointer = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL3_Superclass_GetPointer,None,itkSumProjectionImageFilterIUL3IUL3_Superclass)
itkSumProjectionImageFilterIUL3IUL3_Superclass_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL3_Superclass_swigregister
itkSumProjectionImageFilterIUL3IUL3_Superclass_swigregister(itkSumProjectionImageFilterIUL3IUL3_Superclass)

def itkSumProjectionImageFilterIUL3IUL3_Superclass___New_orig__():
  """itkSumProjectionImageFilterIUL3IUL3_Superclass___New_orig__()"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL3_Superclass___New_orig__()

def itkSumProjectionImageFilterIUL3IUL3_Superclass_cast(*args):
  """itkSumProjectionImageFilterIUL3IUL3_Superclass_cast(itkLightObject obj) -> itkSumProjectionImageFilterIUL3IUL3_Superclass"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL3_Superclass_cast(*args)

class itkSumProjectionImageFilterIUS2IUS2_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """Proxy of C++ itkSumProjectionImageFilterIUS2IUS2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass_InputImageDimension
    OutputImageDimension = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass_OutputImageDimension
    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass_ImageDimensionCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetProjectionDimension(self, *args):
        """SetProjectionDimension(self, unsigned int _arg)"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass_SetProjectionDimension(self, *args)

    def GetProjectionDimension(self):
        """GetProjectionDimension(self) -> unsigned int"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUS2IUS2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIUS2IUS2_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSumProjectionImageFilterIUS2IUS2_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUS2IUS2_Superclass
        
        Create a new object of the class itkSumProjectionImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSumProjectionImageFilterIUS2IUS2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSumProjectionImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIUS2IUS2_Superclass.SetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass_SetProjectionDimension,None,itkSumProjectionImageFilterIUS2IUS2_Superclass)
itkSumProjectionImageFilterIUS2IUS2_Superclass.GetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass_GetProjectionDimension,None,itkSumProjectionImageFilterIUS2IUS2_Superclass)
itkSumProjectionImageFilterIUS2IUS2_Superclass.GetPointer = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass_GetPointer,None,itkSumProjectionImageFilterIUS2IUS2_Superclass)
itkSumProjectionImageFilterIUS2IUS2_Superclass_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass_swigregister
itkSumProjectionImageFilterIUS2IUS2_Superclass_swigregister(itkSumProjectionImageFilterIUS2IUS2_Superclass)

def itkSumProjectionImageFilterIUS2IUS2_Superclass___New_orig__():
  """itkSumProjectionImageFilterIUS2IUS2_Superclass___New_orig__()"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass___New_orig__()

def itkSumProjectionImageFilterIUS2IUS2_Superclass_cast(*args):
  """itkSumProjectionImageFilterIUS2IUS2_Superclass_cast(itkLightObject obj) -> itkSumProjectionImageFilterIUS2IUS2_Superclass"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_Superclass_cast(*args)

class itkSumProjectionImageFilterIUS3IUS2_Superclass(itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2):
    """Proxy of C++ itkSumProjectionImageFilterIUS3IUS2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass_InputImageDimension
    OutputImageDimension = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass_OutputImageDimension
    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass_ImageDimensionCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetProjectionDimension(self, *args):
        """SetProjectionDimension(self, unsigned int _arg)"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass_SetProjectionDimension(self, *args)

    def GetProjectionDimension(self):
        """GetProjectionDimension(self) -> unsigned int"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUS3IUS2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIUS3IUS2_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSumProjectionImageFilterIUS3IUS2_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUS3IUS2_Superclass
        
        Create a new object of the class itkSumProjectionImageFilterIUS3IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSumProjectionImageFilterIUS3IUS2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSumProjectionImageFilterIUS3IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIUS3IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIUS3IUS2_Superclass.SetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass_SetProjectionDimension,None,itkSumProjectionImageFilterIUS3IUS2_Superclass)
itkSumProjectionImageFilterIUS3IUS2_Superclass.GetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass_GetProjectionDimension,None,itkSumProjectionImageFilterIUS3IUS2_Superclass)
itkSumProjectionImageFilterIUS3IUS2_Superclass.GetPointer = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass_GetPointer,None,itkSumProjectionImageFilterIUS3IUS2_Superclass)
itkSumProjectionImageFilterIUS3IUS2_Superclass_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass_swigregister
itkSumProjectionImageFilterIUS3IUS2_Superclass_swigregister(itkSumProjectionImageFilterIUS3IUS2_Superclass)

def itkSumProjectionImageFilterIUS3IUS2_Superclass___New_orig__():
  """itkSumProjectionImageFilterIUS3IUS2_Superclass___New_orig__()"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass___New_orig__()

def itkSumProjectionImageFilterIUS3IUS2_Superclass_cast(*args):
  """itkSumProjectionImageFilterIUS3IUS2_Superclass_cast(itkLightObject obj) -> itkSumProjectionImageFilterIUS3IUS2_Superclass"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_Superclass_cast(*args)

class itkSumProjectionImageFilterIUS3IUS3_Superclass(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """Proxy of C++ itkSumProjectionImageFilterIUS3IUS3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass_InputImageDimension
    OutputImageDimension = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass_OutputImageDimension
    ImageDimensionCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass_ImageDimensionCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetProjectionDimension(self, *args):
        """SetProjectionDimension(self, unsigned int _arg)"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass_SetProjectionDimension(self, *args)

    def GetProjectionDimension(self):
        """GetProjectionDimension(self) -> unsigned int"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass_GetProjectionDimension(self)

    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUS3IUS3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIUS3IUS3_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSumProjectionImageFilterIUS3IUS3_Superclass"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUS3IUS3_Superclass
        
        Create a new object of the class itkSumProjectionImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSumProjectionImageFilterIUS3IUS3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSumProjectionImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIUS3IUS3_Superclass.SetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass_SetProjectionDimension,None,itkSumProjectionImageFilterIUS3IUS3_Superclass)
itkSumProjectionImageFilterIUS3IUS3_Superclass.GetProjectionDimension = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass_GetProjectionDimension,None,itkSumProjectionImageFilterIUS3IUS3_Superclass)
itkSumProjectionImageFilterIUS3IUS3_Superclass.GetPointer = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass_GetPointer,None,itkSumProjectionImageFilterIUS3IUS3_Superclass)
itkSumProjectionImageFilterIUS3IUS3_Superclass_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass_swigregister
itkSumProjectionImageFilterIUS3IUS3_Superclass_swigregister(itkSumProjectionImageFilterIUS3IUS3_Superclass)

def itkSumProjectionImageFilterIUS3IUS3_Superclass___New_orig__():
  """itkSumProjectionImageFilterIUS3IUS3_Superclass___New_orig__()"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass___New_orig__()

def itkSumProjectionImageFilterIUS3IUS3_Superclass_cast(*args):
  """itkSumProjectionImageFilterIUS3IUS3_Superclass_cast(itkLightObject obj) -> itkSumProjectionImageFilterIUS3IUS3_Superclass"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_Superclass_cast(*args)

class itkSumProjectionImageFilterID2ID2(itkSumProjectionImageFilterID2ID2_Superclass):
    """Proxy of C++ itkSumProjectionImageFilterID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterID2ID2"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSumProjectionImageFilterID2ID2"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterID2ID2
        
        Create a new object of the class itkSumProjectionImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSumProjectionImageFilterID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSumProjectionImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterID2ID2.GetPointer = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_GetPointer,None,itkSumProjectionImageFilterID2ID2)
itkSumProjectionImageFilterID2ID2_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_swigregister
itkSumProjectionImageFilterID2ID2_swigregister(itkSumProjectionImageFilterID2ID2)

def itkSumProjectionImageFilterID2ID2___New_orig__():
  """itkSumProjectionImageFilterID2ID2___New_orig__()"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2___New_orig__()

def itkSumProjectionImageFilterID2ID2_cast(*args):
  """itkSumProjectionImageFilterID2ID2_cast(itkLightObject obj) -> itkSumProjectionImageFilterID2ID2"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID2ID2_cast(*args)

class itkSumProjectionImageFilterID3ID2(itkSumProjectionImageFilterID3ID2_Superclass):
    """Proxy of C++ itkSumProjectionImageFilterID3ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterID3ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterID3ID2"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSumProjectionImageFilterID3ID2"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterID3ID2
        
        Create a new object of the class itkSumProjectionImageFilterID3ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSumProjectionImageFilterID3ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSumProjectionImageFilterID3ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterID3ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterID3ID2.GetPointer = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_GetPointer,None,itkSumProjectionImageFilterID3ID2)
itkSumProjectionImageFilterID3ID2_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_swigregister
itkSumProjectionImageFilterID3ID2_swigregister(itkSumProjectionImageFilterID3ID2)

def itkSumProjectionImageFilterID3ID2___New_orig__():
  """itkSumProjectionImageFilterID3ID2___New_orig__()"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2___New_orig__()

def itkSumProjectionImageFilterID3ID2_cast(*args):
  """itkSumProjectionImageFilterID3ID2_cast(itkLightObject obj) -> itkSumProjectionImageFilterID3ID2"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID2_cast(*args)

class itkSumProjectionImageFilterID3ID3(itkSumProjectionImageFilterID3ID3_Superclass):
    """Proxy of C++ itkSumProjectionImageFilterID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterID3ID3"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSumProjectionImageFilterID3ID3"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterID3ID3
        
        Create a new object of the class itkSumProjectionImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSumProjectionImageFilterID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSumProjectionImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterID3ID3.GetPointer = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_GetPointer,None,itkSumProjectionImageFilterID3ID3)
itkSumProjectionImageFilterID3ID3_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_swigregister
itkSumProjectionImageFilterID3ID3_swigregister(itkSumProjectionImageFilterID3ID3)

def itkSumProjectionImageFilterID3ID3___New_orig__():
  """itkSumProjectionImageFilterID3ID3___New_orig__()"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3___New_orig__()

def itkSumProjectionImageFilterID3ID3_cast(*args):
  """itkSumProjectionImageFilterID3ID3_cast(itkLightObject obj) -> itkSumProjectionImageFilterID3ID3"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterID3ID3_cast(*args)

class itkSumProjectionImageFilterIF2IF2(itkSumProjectionImageFilterIF2IF2_Superclass):
    """Proxy of C++ itkSumProjectionImageFilterIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIF2IF2"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSumProjectionImageFilterIF2IF2"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIF2IF2
        
        Create a new object of the class itkSumProjectionImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSumProjectionImageFilterIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSumProjectionImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIF2IF2.GetPointer = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_GetPointer,None,itkSumProjectionImageFilterIF2IF2)
itkSumProjectionImageFilterIF2IF2_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_swigregister
itkSumProjectionImageFilterIF2IF2_swigregister(itkSumProjectionImageFilterIF2IF2)

def itkSumProjectionImageFilterIF2IF2___New_orig__():
  """itkSumProjectionImageFilterIF2IF2___New_orig__()"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2___New_orig__()

def itkSumProjectionImageFilterIF2IF2_cast(*args):
  """itkSumProjectionImageFilterIF2IF2_cast(itkLightObject obj) -> itkSumProjectionImageFilterIF2IF2"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF2IF2_cast(*args)

class itkSumProjectionImageFilterIF3IF2(itkSumProjectionImageFilterIF3IF2_Superclass):
    """Proxy of C++ itkSumProjectionImageFilterIF3IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIF3IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIF3IF2"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSumProjectionImageFilterIF3IF2"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIF3IF2
        
        Create a new object of the class itkSumProjectionImageFilterIF3IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSumProjectionImageFilterIF3IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSumProjectionImageFilterIF3IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIF3IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIF3IF2.GetPointer = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_GetPointer,None,itkSumProjectionImageFilterIF3IF2)
itkSumProjectionImageFilterIF3IF2_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_swigregister
itkSumProjectionImageFilterIF3IF2_swigregister(itkSumProjectionImageFilterIF3IF2)

def itkSumProjectionImageFilterIF3IF2___New_orig__():
  """itkSumProjectionImageFilterIF3IF2___New_orig__()"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2___New_orig__()

def itkSumProjectionImageFilterIF3IF2_cast(*args):
  """itkSumProjectionImageFilterIF3IF2_cast(itkLightObject obj) -> itkSumProjectionImageFilterIF3IF2"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF2_cast(*args)

class itkSumProjectionImageFilterIF3IF3(itkSumProjectionImageFilterIF3IF3_Superclass):
    """Proxy of C++ itkSumProjectionImageFilterIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIF3IF3"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSumProjectionImageFilterIF3IF3"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIF3IF3
        
        Create a new object of the class itkSumProjectionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSumProjectionImageFilterIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSumProjectionImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIF3IF3.GetPointer = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_GetPointer,None,itkSumProjectionImageFilterIF3IF3)
itkSumProjectionImageFilterIF3IF3_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_swigregister
itkSumProjectionImageFilterIF3IF3_swigregister(itkSumProjectionImageFilterIF3IF3)

def itkSumProjectionImageFilterIF3IF3___New_orig__():
  """itkSumProjectionImageFilterIF3IF3___New_orig__()"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3___New_orig__()

def itkSumProjectionImageFilterIF3IF3_cast(*args):
  """itkSumProjectionImageFilterIF3IF3_cast(itkLightObject obj) -> itkSumProjectionImageFilterIF3IF3"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIF3IF3_cast(*args)

class itkSumProjectionImageFilterIUC2IUC2(itkSumProjectionImageFilterIUC2IUC2_Superclass):
    """Proxy of C++ itkSumProjectionImageFilterIUC2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUC2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIUC2IUC2"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSumProjectionImageFilterIUC2IUC2"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUC2IUC2
        
        Create a new object of the class itkSumProjectionImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSumProjectionImageFilterIUC2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSumProjectionImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_GetPointer,None,itkSumProjectionImageFilterIUC2IUC2)
itkSumProjectionImageFilterIUC2IUC2_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_swigregister
itkSumProjectionImageFilterIUC2IUC2_swigregister(itkSumProjectionImageFilterIUC2IUC2)

def itkSumProjectionImageFilterIUC2IUC2___New_orig__():
  """itkSumProjectionImageFilterIUC2IUC2___New_orig__()"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2___New_orig__()

def itkSumProjectionImageFilterIUC2IUC2_cast(*args):
  """itkSumProjectionImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkSumProjectionImageFilterIUC2IUC2"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC2IUC2_cast(*args)

class itkSumProjectionImageFilterIUC3IUC2(itkSumProjectionImageFilterIUC3IUC2_Superclass):
    """Proxy of C++ itkSumProjectionImageFilterIUC3IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUC3IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIUC3IUC2"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSumProjectionImageFilterIUC3IUC2"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUC3IUC2
        
        Create a new object of the class itkSumProjectionImageFilterIUC3IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSumProjectionImageFilterIUC3IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSumProjectionImageFilterIUC3IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIUC3IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIUC3IUC2.GetPointer = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_GetPointer,None,itkSumProjectionImageFilterIUC3IUC2)
itkSumProjectionImageFilterIUC3IUC2_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_swigregister
itkSumProjectionImageFilterIUC3IUC2_swigregister(itkSumProjectionImageFilterIUC3IUC2)

def itkSumProjectionImageFilterIUC3IUC2___New_orig__():
  """itkSumProjectionImageFilterIUC3IUC2___New_orig__()"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2___New_orig__()

def itkSumProjectionImageFilterIUC3IUC2_cast(*args):
  """itkSumProjectionImageFilterIUC3IUC2_cast(itkLightObject obj) -> itkSumProjectionImageFilterIUC3IUC2"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC2_cast(*args)

class itkSumProjectionImageFilterIUC3IUC3(itkSumProjectionImageFilterIUC3IUC3_Superclass):
    """Proxy of C++ itkSumProjectionImageFilterIUC3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUC3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIUC3IUC3"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSumProjectionImageFilterIUC3IUC3"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUC3IUC3
        
        Create a new object of the class itkSumProjectionImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSumProjectionImageFilterIUC3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSumProjectionImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_GetPointer,None,itkSumProjectionImageFilterIUC3IUC3)
itkSumProjectionImageFilterIUC3IUC3_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_swigregister
itkSumProjectionImageFilterIUC3IUC3_swigregister(itkSumProjectionImageFilterIUC3IUC3)

def itkSumProjectionImageFilterIUC3IUC3___New_orig__():
  """itkSumProjectionImageFilterIUC3IUC3___New_orig__()"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3___New_orig__()

def itkSumProjectionImageFilterIUC3IUC3_cast(*args):
  """itkSumProjectionImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkSumProjectionImageFilterIUC3IUC3"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUC3IUC3_cast(*args)

class itkSumProjectionImageFilterIUL2IUL2(itkSumProjectionImageFilterIUL2IUL2_Superclass):
    """Proxy of C++ itkSumProjectionImageFilterIUL2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL2IUL2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL2IUL2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUL2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIUL2IUL2"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSumProjectionImageFilterIUL2IUL2"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUL2IUL2
        
        Create a new object of the class itkSumProjectionImageFilterIUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSumProjectionImageFilterIUL2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSumProjectionImageFilterIUL2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIUL2IUL2.GetPointer = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL2IUL2_GetPointer,None,itkSumProjectionImageFilterIUL2IUL2)
itkSumProjectionImageFilterIUL2IUL2_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL2IUL2_swigregister
itkSumProjectionImageFilterIUL2IUL2_swigregister(itkSumProjectionImageFilterIUL2IUL2)

def itkSumProjectionImageFilterIUL2IUL2___New_orig__():
  """itkSumProjectionImageFilterIUL2IUL2___New_orig__()"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL2IUL2___New_orig__()

def itkSumProjectionImageFilterIUL2IUL2_cast(*args):
  """itkSumProjectionImageFilterIUL2IUL2_cast(itkLightObject obj) -> itkSumProjectionImageFilterIUL2IUL2"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL2IUL2_cast(*args)

class itkSumProjectionImageFilterIUL3IUL2(itkSumProjectionImageFilterIUL3IUL2_Superclass):
    """Proxy of C++ itkSumProjectionImageFilterIUL3IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUL3IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIUL3IUL2"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSumProjectionImageFilterIUL3IUL2"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUL3IUL2
        
        Create a new object of the class itkSumProjectionImageFilterIUL3IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSumProjectionImageFilterIUL3IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSumProjectionImageFilterIUL3IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIUL3IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIUL3IUL2.GetPointer = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL2_GetPointer,None,itkSumProjectionImageFilterIUL3IUL2)
itkSumProjectionImageFilterIUL3IUL2_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL2_swigregister
itkSumProjectionImageFilterIUL3IUL2_swigregister(itkSumProjectionImageFilterIUL3IUL2)

def itkSumProjectionImageFilterIUL3IUL2___New_orig__():
  """itkSumProjectionImageFilterIUL3IUL2___New_orig__()"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL2___New_orig__()

def itkSumProjectionImageFilterIUL3IUL2_cast(*args):
  """itkSumProjectionImageFilterIUL3IUL2_cast(itkLightObject obj) -> itkSumProjectionImageFilterIUL3IUL2"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL2_cast(*args)

class itkSumProjectionImageFilterIUL3IUL3(itkSumProjectionImageFilterIUL3IUL3_Superclass):
    """Proxy of C++ itkSumProjectionImageFilterIUL3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUL3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIUL3IUL3"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSumProjectionImageFilterIUL3IUL3"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUL3IUL3
        
        Create a new object of the class itkSumProjectionImageFilterIUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSumProjectionImageFilterIUL3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSumProjectionImageFilterIUL3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIUL3IUL3.GetPointer = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL3_GetPointer,None,itkSumProjectionImageFilterIUL3IUL3)
itkSumProjectionImageFilterIUL3IUL3_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL3_swigregister
itkSumProjectionImageFilterIUL3IUL3_swigregister(itkSumProjectionImageFilterIUL3IUL3)

def itkSumProjectionImageFilterIUL3IUL3___New_orig__():
  """itkSumProjectionImageFilterIUL3IUL3___New_orig__()"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL3___New_orig__()

def itkSumProjectionImageFilterIUL3IUL3_cast(*args):
  """itkSumProjectionImageFilterIUL3IUL3_cast(itkLightObject obj) -> itkSumProjectionImageFilterIUL3IUL3"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUL3IUL3_cast(*args)

class itkSumProjectionImageFilterIUS2IUS2(itkSumProjectionImageFilterIUS2IUS2_Superclass):
    """Proxy of C++ itkSumProjectionImageFilterIUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIUS2IUS2"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSumProjectionImageFilterIUS2IUS2"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUS2IUS2
        
        Create a new object of the class itkSumProjectionImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSumProjectionImageFilterIUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSumProjectionImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIUS2IUS2.GetPointer = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_GetPointer,None,itkSumProjectionImageFilterIUS2IUS2)
itkSumProjectionImageFilterIUS2IUS2_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_swigregister
itkSumProjectionImageFilterIUS2IUS2_swigregister(itkSumProjectionImageFilterIUS2IUS2)

def itkSumProjectionImageFilterIUS2IUS2___New_orig__():
  """itkSumProjectionImageFilterIUS2IUS2___New_orig__()"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2___New_orig__()

def itkSumProjectionImageFilterIUS2IUS2_cast(*args):
  """itkSumProjectionImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkSumProjectionImageFilterIUS2IUS2"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS2IUS2_cast(*args)

class itkSumProjectionImageFilterIUS3IUS2(itkSumProjectionImageFilterIUS3IUS2_Superclass):
    """Proxy of C++ itkSumProjectionImageFilterIUS3IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUS3IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIUS3IUS2"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSumProjectionImageFilterIUS3IUS2"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUS3IUS2
        
        Create a new object of the class itkSumProjectionImageFilterIUS3IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSumProjectionImageFilterIUS3IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSumProjectionImageFilterIUS3IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIUS3IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIUS3IUS2.GetPointer = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_GetPointer,None,itkSumProjectionImageFilterIUS3IUS2)
itkSumProjectionImageFilterIUS3IUS2_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_swigregister
itkSumProjectionImageFilterIUS3IUS2_swigregister(itkSumProjectionImageFilterIUS3IUS2)

def itkSumProjectionImageFilterIUS3IUS2___New_orig__():
  """itkSumProjectionImageFilterIUS3IUS2___New_orig__()"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2___New_orig__()

def itkSumProjectionImageFilterIUS3IUS2_cast(*args):
  """itkSumProjectionImageFilterIUS3IUS2_cast(itkLightObject obj) -> itkSumProjectionImageFilterIUS3IUS2"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS2_cast(*args)

class itkSumProjectionImageFilterIUS3IUS3(itkSumProjectionImageFilterIUS3IUS3_Superclass):
    """Proxy of C++ itkSumProjectionImageFilterIUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    InputHasNumericTraitsCheck = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkSumProjectionImageFilterPython.delete_itkSumProjectionImageFilterIUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkSumProjectionImageFilterIUS3IUS3"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSumProjectionImageFilterIUS3IUS3"""
        return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSumProjectionImageFilterIUS3IUS3
        
        Create a new object of the class itkSumProjectionImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSumProjectionImageFilterIUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSumProjectionImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSumProjectionImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSumProjectionImageFilterIUS3IUS3.GetPointer = new_instancemethod(_itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_GetPointer,None,itkSumProjectionImageFilterIUS3IUS3)
itkSumProjectionImageFilterIUS3IUS3_swigregister = _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_swigregister
itkSumProjectionImageFilterIUS3IUS3_swigregister(itkSumProjectionImageFilterIUS3IUS3)

def itkSumProjectionImageFilterIUS3IUS3___New_orig__():
  """itkSumProjectionImageFilterIUS3IUS3___New_orig__()"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3___New_orig__()

def itkSumProjectionImageFilterIUS3IUS3_cast(*args):
  """itkSumProjectionImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkSumProjectionImageFilterIUS3IUS3"""
  return _itkSumProjectionImageFilterPython.itkSumProjectionImageFilterIUS3IUS3_cast(*args)



