// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkLabelObjectLineChicken
#endif
#ifdef SWIGCSHARP
%module itkLabelObjectLineCsharp
#endif
#ifdef SWIGGUILE
%module itkLabelObjectLineGuile
#endif
#ifdef SWIGJAVA
%module itkLabelObjectLineJava
#endif
#ifdef SWIGLUA
%module itkLabelObjectLineLua
#endif
#ifdef SWIGMODULA3
%module itkLabelObjectLineModula3
#endif
#ifdef SWIGMZSCHEME
%module itkLabelObjectLineMzscheme
#endif
#ifdef SWIGOCAML
%module itkLabelObjectLineOcaml
#endif
#ifdef SWIGPERL
%module itkLabelObjectLinePerl
#endif
#ifdef SWIGPERL5
%module itkLabelObjectLinePerl5
#endif
#ifdef SWIGPHP
%module itkLabelObjectLinePhp
#endif
#ifdef SWIGPHP4
%module itkLabelObjectLinePhp4
#endif
#ifdef SWIGPHP5
%module itkLabelObjectLinePhp5
#endif
#ifdef SWIGPIKE
%module itkLabelObjectLinePike
#endif
#ifdef SWIGPYTHON
%module itkLabelObjectLinePython
#endif
#ifdef SWIGR
%module itkLabelObjectLineR
#endif
#ifdef SWIGRUBY
%module itkLabelObjectLineRuby
#endif
#ifdef SWIGSEXP
%module itkLabelObjectLineSexp
#endif
#ifdef SWIGTCL
%module itkLabelObjectLineTcl
#endif
#ifdef SWIGXML
%module itkLabelObjectLineXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "Numerics.includes"
#include "BinaryMorphology.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkIndex.i


%include itk.i
%include wrap_itkLabelObjectLine_ext.i


 class itkLabelObjectLine2 {
   public:
     enum  {  ImageDimension = 2 };
     itkLabelObjectLine2 & operator=(itkLabelObjectLine2 const & arg0);
     itkLabelObjectLine2(itkLabelObjectLine2 const & arg0);
     itkLabelObjectLine2();
     ~itkLabelObjectLine2();
     itkLabelObjectLine2(itkIndex2 const & idx, unsigned long const & length);
     void SetIndex(itkIndex2 const & idx);
     itkIndex2 const & GetIndex() const;
     void SetLength(unsigned long const length);
     unsigned long const & GetLength() const;
     bool HasIndex(itkIndex2 const idx) const;
     bool IsNextIndex(itkIndex2 const & idx) const;
     void Print(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent = 0) const;
   private:
   protected:
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void PrintHeader(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void PrintTrailer(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkLabelObjectLine3 {
   public:
     enum  {  ImageDimension = 3 };
     itkLabelObjectLine3 & operator=(itkLabelObjectLine3 const & arg0);
     itkLabelObjectLine3(itkLabelObjectLine3 const & arg0);
     itkLabelObjectLine3();
     ~itkLabelObjectLine3();
     itkLabelObjectLine3(itkIndex3 const & idx, unsigned long const & length);
     void SetIndex(itkIndex3 const & idx);
     itkIndex3 const & GetIndex() const;
     void SetLength(unsigned long const length);
     unsigned long const & GetLength() const;
     bool HasIndex(itkIndex3 const idx) const;
     bool IsNextIndex(itkIndex3 const & idx) const;
     void Print(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent = 0) const;
   private:
   protected:
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void PrintHeader(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void PrintTrailer(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


