// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkRegionFromReferenceLabelMapFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkRegionFromReferenceLabelMapFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkRegionFromReferenceLabelMapFilterGuile
#endif
#ifdef SWIGJAVA
%module itkRegionFromReferenceLabelMapFilterJava
#endif
#ifdef SWIGLUA
%module itkRegionFromReferenceLabelMapFilterLua
#endif
#ifdef SWIGMODULA3
%module itkRegionFromReferenceLabelMapFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkRegionFromReferenceLabelMapFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkRegionFromReferenceLabelMapFilterOcaml
#endif
#ifdef SWIGPERL
%module itkRegionFromReferenceLabelMapFilterPerl
#endif
#ifdef SWIGPERL5
%module itkRegionFromReferenceLabelMapFilterPerl5
#endif
#ifdef SWIGPHP
%module itkRegionFromReferenceLabelMapFilterPhp
#endif
#ifdef SWIGPHP4
%module itkRegionFromReferenceLabelMapFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkRegionFromReferenceLabelMapFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkRegionFromReferenceLabelMapFilterPike
#endif
#ifdef SWIGPYTHON
%module itkRegionFromReferenceLabelMapFilterPython
#endif
#ifdef SWIGR
%module itkRegionFromReferenceLabelMapFilterR
#endif
#ifdef SWIGRUBY
%module itkRegionFromReferenceLabelMapFilterRuby
#endif
#ifdef SWIGSEXP
%module itkRegionFromReferenceLabelMapFilterSexp
#endif
#ifdef SWIGTCL
%module itkRegionFromReferenceLabelMapFilterTcl
#endif
#ifdef SWIGXML
%module itkRegionFromReferenceLabelMapFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "Numerics.includes"
#include "BinaryMorphology.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkChangeRegionLabelMapFilter.i
%import wrap_itkImage.i
%import wrap_itkLabelMap.i


%include itk.i
%include wrap_itkRegionFromReferenceLabelMapFilter_ext.i


 class itkRegionFromReferenceLabelMapFilterLM2 : public itkChangeRegionLabelMapFilterLM2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     static itkRegionFromReferenceLabelMapFilterLM2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetReferenceImage(itkImageBase2 const * image);
     itkImageBase2 const * GetReferenceImage() const;
     void SetInput1(itkLabelMap2 const * input);
     void SetInput2(itkImageBase2 const * input);
   private:
     itkRegionFromReferenceLabelMapFilterLM2(itkRegionFromReferenceLabelMapFilterLM2 const & arg0);
     void operator=(itkRegionFromReferenceLabelMapFilterLM2 const & arg0);
   protected:
     itkRegionFromReferenceLabelMapFilterLM2();
     ~itkRegionFromReferenceLabelMapFilterLM2();
     virtual void GenerateOutputInformation();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkRegionFromReferenceLabelMapFilterLM2_Pointer {
   public:
     itkRegionFromReferenceLabelMapFilterLM2_Pointer();
     itkRegionFromReferenceLabelMapFilterLM2_Pointer(itkRegionFromReferenceLabelMapFilterLM2_Pointer const & p);
     itkRegionFromReferenceLabelMapFilterLM2_Pointer(itkRegionFromReferenceLabelMapFilterLM2 * p);
     ~itkRegionFromReferenceLabelMapFilterLM2_Pointer();
     itkRegionFromReferenceLabelMapFilterLM2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRegionFromReferenceLabelMapFilterLM2 * GetPointer() const;
     bool operator<(itkRegionFromReferenceLabelMapFilterLM2_Pointer const & r) const;
     bool operator>(itkRegionFromReferenceLabelMapFilterLM2_Pointer const & r) const;
     bool operator<=(itkRegionFromReferenceLabelMapFilterLM2_Pointer const & r) const;
     bool operator>=(itkRegionFromReferenceLabelMapFilterLM2_Pointer const & r) const;
     itkRegionFromReferenceLabelMapFilterLM2_Pointer & operator=(itkRegionFromReferenceLabelMapFilterLM2_Pointer const & r);
     itkRegionFromReferenceLabelMapFilterLM2_Pointer & operator=(itkRegionFromReferenceLabelMapFilterLM2 * r);
     itkRegionFromReferenceLabelMapFilterLM2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRegionFromReferenceLabelMapFilterLM3 : public itkChangeRegionLabelMapFilterLM3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     static itkRegionFromReferenceLabelMapFilterLM3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetReferenceImage(itkImageBase3 const * image);
     itkImageBase3 const * GetReferenceImage() const;
     void SetInput1(itkLabelMap3 const * input);
     void SetInput2(itkImageBase3 const * input);
   private:
     itkRegionFromReferenceLabelMapFilterLM3(itkRegionFromReferenceLabelMapFilterLM3 const & arg0);
     void operator=(itkRegionFromReferenceLabelMapFilterLM3 const & arg0);
   protected:
     itkRegionFromReferenceLabelMapFilterLM3();
     ~itkRegionFromReferenceLabelMapFilterLM3();
     virtual void GenerateOutputInformation();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkRegionFromReferenceLabelMapFilterLM3_Pointer {
   public:
     itkRegionFromReferenceLabelMapFilterLM3_Pointer();
     itkRegionFromReferenceLabelMapFilterLM3_Pointer(itkRegionFromReferenceLabelMapFilterLM3_Pointer const & p);
     itkRegionFromReferenceLabelMapFilterLM3_Pointer(itkRegionFromReferenceLabelMapFilterLM3 * p);
     ~itkRegionFromReferenceLabelMapFilterLM3_Pointer();
     itkRegionFromReferenceLabelMapFilterLM3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRegionFromReferenceLabelMapFilterLM3 * GetPointer() const;
     bool operator<(itkRegionFromReferenceLabelMapFilterLM3_Pointer const & r) const;
     bool operator>(itkRegionFromReferenceLabelMapFilterLM3_Pointer const & r) const;
     bool operator<=(itkRegionFromReferenceLabelMapFilterLM3_Pointer const & r) const;
     bool operator>=(itkRegionFromReferenceLabelMapFilterLM3_Pointer const & r) const;
     itkRegionFromReferenceLabelMapFilterLM3_Pointer & operator=(itkRegionFromReferenceLabelMapFilterLM3_Pointer const & r);
     itkRegionFromReferenceLabelMapFilterLM3_Pointer & operator=(itkRegionFromReferenceLabelMapFilterLM3 * r);
     itkRegionFromReferenceLabelMapFilterLM3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


