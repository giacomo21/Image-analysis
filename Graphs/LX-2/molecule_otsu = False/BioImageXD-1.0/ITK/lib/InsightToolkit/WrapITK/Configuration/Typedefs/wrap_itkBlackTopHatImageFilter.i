// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkBlackTopHatImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkBlackTopHatImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkBlackTopHatImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkBlackTopHatImageFilterJava
#endif
#ifdef SWIGLUA
%module itkBlackTopHatImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkBlackTopHatImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkBlackTopHatImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkBlackTopHatImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkBlackTopHatImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkBlackTopHatImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkBlackTopHatImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkBlackTopHatImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkBlackTopHatImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkBlackTopHatImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkBlackTopHatImageFilterPython
#endif
#ifdef SWIGR
%module itkBlackTopHatImageFilterR
#endif
#ifdef SWIGRUBY
%module itkBlackTopHatImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkBlackTopHatImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkBlackTopHatImageFilterTcl
#endif
#ifdef SWIGXML
%module itkBlackTopHatImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Morphology.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImageToImageFilterA.i
%import wrap_itkFlatStructuringElement.i


%include itk.i
%include wrap_itkBlackTopHatImageFilter_ext.i


 class itkBlackTopHatImageFilterID2ID2SE2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     static itkBlackTopHatImageFilterID2ID2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetKernel(itkFlatStructuringElement2 const _arg);
     virtual itkFlatStructuringElement2 const & GetKernel() const;
     virtual void SetSafeBorder(bool const _arg);
     virtual bool const & GetSafeBorder() const;
     virtual void SafeBorderOn();
     virtual void SafeBorderOff();
   private:
     itkBlackTopHatImageFilterID2ID2SE2(itkBlackTopHatImageFilterID2ID2SE2 const & arg0);
     void operator=(itkBlackTopHatImageFilterID2ID2SE2 const & arg0);
   protected:
     itkBlackTopHatImageFilterID2ID2SE2();
     ~itkBlackTopHatImageFilterID2ID2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBlackTopHatImageFilterID2ID2SE2_Pointer {
   public:
     itkBlackTopHatImageFilterID2ID2SE2_Pointer();
     itkBlackTopHatImageFilterID2ID2SE2_Pointer(itkBlackTopHatImageFilterID2ID2SE2_Pointer const & p);
     itkBlackTopHatImageFilterID2ID2SE2_Pointer(itkBlackTopHatImageFilterID2ID2SE2 * p);
     ~itkBlackTopHatImageFilterID2ID2SE2_Pointer();
     itkBlackTopHatImageFilterID2ID2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBlackTopHatImageFilterID2ID2SE2 * GetPointer() const;
     bool operator<(itkBlackTopHatImageFilterID2ID2SE2_Pointer const & r) const;
     bool operator>(itkBlackTopHatImageFilterID2ID2SE2_Pointer const & r) const;
     bool operator<=(itkBlackTopHatImageFilterID2ID2SE2_Pointer const & r) const;
     bool operator>=(itkBlackTopHatImageFilterID2ID2SE2_Pointer const & r) const;
     itkBlackTopHatImageFilterID2ID2SE2_Pointer & operator=(itkBlackTopHatImageFilterID2ID2SE2_Pointer const & r);
     itkBlackTopHatImageFilterID2ID2SE2_Pointer & operator=(itkBlackTopHatImageFilterID2ID2SE2 * r);
     itkBlackTopHatImageFilterID2ID2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBlackTopHatImageFilterID3ID3SE3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     static itkBlackTopHatImageFilterID3ID3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetKernel(itkFlatStructuringElement3 const _arg);
     virtual itkFlatStructuringElement3 const & GetKernel() const;
     virtual void SetSafeBorder(bool const _arg);
     virtual bool const & GetSafeBorder() const;
     virtual void SafeBorderOn();
     virtual void SafeBorderOff();
   private:
     itkBlackTopHatImageFilterID3ID3SE3(itkBlackTopHatImageFilterID3ID3SE3 const & arg0);
     void operator=(itkBlackTopHatImageFilterID3ID3SE3 const & arg0);
   protected:
     itkBlackTopHatImageFilterID3ID3SE3();
     ~itkBlackTopHatImageFilterID3ID3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBlackTopHatImageFilterID3ID3SE3_Pointer {
   public:
     itkBlackTopHatImageFilterID3ID3SE3_Pointer();
     itkBlackTopHatImageFilterID3ID3SE3_Pointer(itkBlackTopHatImageFilterID3ID3SE3_Pointer const & p);
     itkBlackTopHatImageFilterID3ID3SE3_Pointer(itkBlackTopHatImageFilterID3ID3SE3 * p);
     ~itkBlackTopHatImageFilterID3ID3SE3_Pointer();
     itkBlackTopHatImageFilterID3ID3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBlackTopHatImageFilterID3ID3SE3 * GetPointer() const;
     bool operator<(itkBlackTopHatImageFilterID3ID3SE3_Pointer const & r) const;
     bool operator>(itkBlackTopHatImageFilterID3ID3SE3_Pointer const & r) const;
     bool operator<=(itkBlackTopHatImageFilterID3ID3SE3_Pointer const & r) const;
     bool operator>=(itkBlackTopHatImageFilterID3ID3SE3_Pointer const & r) const;
     itkBlackTopHatImageFilterID3ID3SE3_Pointer & operator=(itkBlackTopHatImageFilterID3ID3SE3_Pointer const & r);
     itkBlackTopHatImageFilterID3ID3SE3_Pointer & operator=(itkBlackTopHatImageFilterID3ID3SE3 * r);
     itkBlackTopHatImageFilterID3ID3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBlackTopHatImageFilterIF2IF2SE2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     static itkBlackTopHatImageFilterIF2IF2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetKernel(itkFlatStructuringElement2 const _arg);
     virtual itkFlatStructuringElement2 const & GetKernel() const;
     virtual void SetSafeBorder(bool const _arg);
     virtual bool const & GetSafeBorder() const;
     virtual void SafeBorderOn();
     virtual void SafeBorderOff();
   private:
     itkBlackTopHatImageFilterIF2IF2SE2(itkBlackTopHatImageFilterIF2IF2SE2 const & arg0);
     void operator=(itkBlackTopHatImageFilterIF2IF2SE2 const & arg0);
   protected:
     itkBlackTopHatImageFilterIF2IF2SE2();
     ~itkBlackTopHatImageFilterIF2IF2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBlackTopHatImageFilterIF2IF2SE2_Pointer {
   public:
     itkBlackTopHatImageFilterIF2IF2SE2_Pointer();
     itkBlackTopHatImageFilterIF2IF2SE2_Pointer(itkBlackTopHatImageFilterIF2IF2SE2_Pointer const & p);
     itkBlackTopHatImageFilterIF2IF2SE2_Pointer(itkBlackTopHatImageFilterIF2IF2SE2 * p);
     ~itkBlackTopHatImageFilterIF2IF2SE2_Pointer();
     itkBlackTopHatImageFilterIF2IF2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBlackTopHatImageFilterIF2IF2SE2 * GetPointer() const;
     bool operator<(itkBlackTopHatImageFilterIF2IF2SE2_Pointer const & r) const;
     bool operator>(itkBlackTopHatImageFilterIF2IF2SE2_Pointer const & r) const;
     bool operator<=(itkBlackTopHatImageFilterIF2IF2SE2_Pointer const & r) const;
     bool operator>=(itkBlackTopHatImageFilterIF2IF2SE2_Pointer const & r) const;
     itkBlackTopHatImageFilterIF2IF2SE2_Pointer & operator=(itkBlackTopHatImageFilterIF2IF2SE2_Pointer const & r);
     itkBlackTopHatImageFilterIF2IF2SE2_Pointer & operator=(itkBlackTopHatImageFilterIF2IF2SE2 * r);
     itkBlackTopHatImageFilterIF2IF2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBlackTopHatImageFilterIF3IF3SE3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     static itkBlackTopHatImageFilterIF3IF3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetKernel(itkFlatStructuringElement3 const _arg);
     virtual itkFlatStructuringElement3 const & GetKernel() const;
     virtual void SetSafeBorder(bool const _arg);
     virtual bool const & GetSafeBorder() const;
     virtual void SafeBorderOn();
     virtual void SafeBorderOff();
   private:
     itkBlackTopHatImageFilterIF3IF3SE3(itkBlackTopHatImageFilterIF3IF3SE3 const & arg0);
     void operator=(itkBlackTopHatImageFilterIF3IF3SE3 const & arg0);
   protected:
     itkBlackTopHatImageFilterIF3IF3SE3();
     ~itkBlackTopHatImageFilterIF3IF3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBlackTopHatImageFilterIF3IF3SE3_Pointer {
   public:
     itkBlackTopHatImageFilterIF3IF3SE3_Pointer();
     itkBlackTopHatImageFilterIF3IF3SE3_Pointer(itkBlackTopHatImageFilterIF3IF3SE3_Pointer const & p);
     itkBlackTopHatImageFilterIF3IF3SE3_Pointer(itkBlackTopHatImageFilterIF3IF3SE3 * p);
     ~itkBlackTopHatImageFilterIF3IF3SE3_Pointer();
     itkBlackTopHatImageFilterIF3IF3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBlackTopHatImageFilterIF3IF3SE3 * GetPointer() const;
     bool operator<(itkBlackTopHatImageFilterIF3IF3SE3_Pointer const & r) const;
     bool operator>(itkBlackTopHatImageFilterIF3IF3SE3_Pointer const & r) const;
     bool operator<=(itkBlackTopHatImageFilterIF3IF3SE3_Pointer const & r) const;
     bool operator>=(itkBlackTopHatImageFilterIF3IF3SE3_Pointer const & r) const;
     itkBlackTopHatImageFilterIF3IF3SE3_Pointer & operator=(itkBlackTopHatImageFilterIF3IF3SE3_Pointer const & r);
     itkBlackTopHatImageFilterIF3IF3SE3_Pointer & operator=(itkBlackTopHatImageFilterIF3IF3SE3 * r);
     itkBlackTopHatImageFilterIF3IF3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBlackTopHatImageFilterIUC2IUC2SE2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     static itkBlackTopHatImageFilterIUC2IUC2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetKernel(itkFlatStructuringElement2 const _arg);
     virtual itkFlatStructuringElement2 const & GetKernel() const;
     virtual void SetSafeBorder(bool const _arg);
     virtual bool const & GetSafeBorder() const;
     virtual void SafeBorderOn();
     virtual void SafeBorderOff();
   private:
     itkBlackTopHatImageFilterIUC2IUC2SE2(itkBlackTopHatImageFilterIUC2IUC2SE2 const & arg0);
     void operator=(itkBlackTopHatImageFilterIUC2IUC2SE2 const & arg0);
   protected:
     itkBlackTopHatImageFilterIUC2IUC2SE2();
     ~itkBlackTopHatImageFilterIUC2IUC2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBlackTopHatImageFilterIUC2IUC2SE2_Pointer {
   public:
     itkBlackTopHatImageFilterIUC2IUC2SE2_Pointer();
     itkBlackTopHatImageFilterIUC2IUC2SE2_Pointer(itkBlackTopHatImageFilterIUC2IUC2SE2_Pointer const & p);
     itkBlackTopHatImageFilterIUC2IUC2SE2_Pointer(itkBlackTopHatImageFilterIUC2IUC2SE2 * p);
     ~itkBlackTopHatImageFilterIUC2IUC2SE2_Pointer();
     itkBlackTopHatImageFilterIUC2IUC2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBlackTopHatImageFilterIUC2IUC2SE2 * GetPointer() const;
     bool operator<(itkBlackTopHatImageFilterIUC2IUC2SE2_Pointer const & r) const;
     bool operator>(itkBlackTopHatImageFilterIUC2IUC2SE2_Pointer const & r) const;
     bool operator<=(itkBlackTopHatImageFilterIUC2IUC2SE2_Pointer const & r) const;
     bool operator>=(itkBlackTopHatImageFilterIUC2IUC2SE2_Pointer const & r) const;
     itkBlackTopHatImageFilterIUC2IUC2SE2_Pointer & operator=(itkBlackTopHatImageFilterIUC2IUC2SE2_Pointer const & r);
     itkBlackTopHatImageFilterIUC2IUC2SE2_Pointer & operator=(itkBlackTopHatImageFilterIUC2IUC2SE2 * r);
     itkBlackTopHatImageFilterIUC2IUC2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBlackTopHatImageFilterIUC3IUC3SE3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     static itkBlackTopHatImageFilterIUC3IUC3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetKernel(itkFlatStructuringElement3 const _arg);
     virtual itkFlatStructuringElement3 const & GetKernel() const;
     virtual void SetSafeBorder(bool const _arg);
     virtual bool const & GetSafeBorder() const;
     virtual void SafeBorderOn();
     virtual void SafeBorderOff();
   private:
     itkBlackTopHatImageFilterIUC3IUC3SE3(itkBlackTopHatImageFilterIUC3IUC3SE3 const & arg0);
     void operator=(itkBlackTopHatImageFilterIUC3IUC3SE3 const & arg0);
   protected:
     itkBlackTopHatImageFilterIUC3IUC3SE3();
     ~itkBlackTopHatImageFilterIUC3IUC3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBlackTopHatImageFilterIUC3IUC3SE3_Pointer {
   public:
     itkBlackTopHatImageFilterIUC3IUC3SE3_Pointer();
     itkBlackTopHatImageFilterIUC3IUC3SE3_Pointer(itkBlackTopHatImageFilterIUC3IUC3SE3_Pointer const & p);
     itkBlackTopHatImageFilterIUC3IUC3SE3_Pointer(itkBlackTopHatImageFilterIUC3IUC3SE3 * p);
     ~itkBlackTopHatImageFilterIUC3IUC3SE3_Pointer();
     itkBlackTopHatImageFilterIUC3IUC3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBlackTopHatImageFilterIUC3IUC3SE3 * GetPointer() const;
     bool operator<(itkBlackTopHatImageFilterIUC3IUC3SE3_Pointer const & r) const;
     bool operator>(itkBlackTopHatImageFilterIUC3IUC3SE3_Pointer const & r) const;
     bool operator<=(itkBlackTopHatImageFilterIUC3IUC3SE3_Pointer const & r) const;
     bool operator>=(itkBlackTopHatImageFilterIUC3IUC3SE3_Pointer const & r) const;
     itkBlackTopHatImageFilterIUC3IUC3SE3_Pointer & operator=(itkBlackTopHatImageFilterIUC3IUC3SE3_Pointer const & r);
     itkBlackTopHatImageFilterIUC3IUC3SE3_Pointer & operator=(itkBlackTopHatImageFilterIUC3IUC3SE3 * r);
     itkBlackTopHatImageFilterIUC3IUC3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBlackTopHatImageFilterIUL2IUL2SE2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     static itkBlackTopHatImageFilterIUL2IUL2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetKernel(itkFlatStructuringElement2 const _arg);
     virtual itkFlatStructuringElement2 const & GetKernel() const;
     virtual void SetSafeBorder(bool const _arg);
     virtual bool const & GetSafeBorder() const;
     virtual void SafeBorderOn();
     virtual void SafeBorderOff();
   private:
     itkBlackTopHatImageFilterIUL2IUL2SE2(itkBlackTopHatImageFilterIUL2IUL2SE2 const & arg0);
     void operator=(itkBlackTopHatImageFilterIUL2IUL2SE2 const & arg0);
   protected:
     itkBlackTopHatImageFilterIUL2IUL2SE2();
     ~itkBlackTopHatImageFilterIUL2IUL2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBlackTopHatImageFilterIUL2IUL2SE2_Pointer {
   public:
     itkBlackTopHatImageFilterIUL2IUL2SE2_Pointer();
     itkBlackTopHatImageFilterIUL2IUL2SE2_Pointer(itkBlackTopHatImageFilterIUL2IUL2SE2_Pointer const & p);
     itkBlackTopHatImageFilterIUL2IUL2SE2_Pointer(itkBlackTopHatImageFilterIUL2IUL2SE2 * p);
     ~itkBlackTopHatImageFilterIUL2IUL2SE2_Pointer();
     itkBlackTopHatImageFilterIUL2IUL2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBlackTopHatImageFilterIUL2IUL2SE2 * GetPointer() const;
     bool operator<(itkBlackTopHatImageFilterIUL2IUL2SE2_Pointer const & r) const;
     bool operator>(itkBlackTopHatImageFilterIUL2IUL2SE2_Pointer const & r) const;
     bool operator<=(itkBlackTopHatImageFilterIUL2IUL2SE2_Pointer const & r) const;
     bool operator>=(itkBlackTopHatImageFilterIUL2IUL2SE2_Pointer const & r) const;
     itkBlackTopHatImageFilterIUL2IUL2SE2_Pointer & operator=(itkBlackTopHatImageFilterIUL2IUL2SE2_Pointer const & r);
     itkBlackTopHatImageFilterIUL2IUL2SE2_Pointer & operator=(itkBlackTopHatImageFilterIUL2IUL2SE2 * r);
     itkBlackTopHatImageFilterIUL2IUL2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBlackTopHatImageFilterIUL3IUL3SE3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     static itkBlackTopHatImageFilterIUL3IUL3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetKernel(itkFlatStructuringElement3 const _arg);
     virtual itkFlatStructuringElement3 const & GetKernel() const;
     virtual void SetSafeBorder(bool const _arg);
     virtual bool const & GetSafeBorder() const;
     virtual void SafeBorderOn();
     virtual void SafeBorderOff();
   private:
     itkBlackTopHatImageFilterIUL3IUL3SE3(itkBlackTopHatImageFilterIUL3IUL3SE3 const & arg0);
     void operator=(itkBlackTopHatImageFilterIUL3IUL3SE3 const & arg0);
   protected:
     itkBlackTopHatImageFilterIUL3IUL3SE3();
     ~itkBlackTopHatImageFilterIUL3IUL3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBlackTopHatImageFilterIUL3IUL3SE3_Pointer {
   public:
     itkBlackTopHatImageFilterIUL3IUL3SE3_Pointer();
     itkBlackTopHatImageFilterIUL3IUL3SE3_Pointer(itkBlackTopHatImageFilterIUL3IUL3SE3_Pointer const & p);
     itkBlackTopHatImageFilterIUL3IUL3SE3_Pointer(itkBlackTopHatImageFilterIUL3IUL3SE3 * p);
     ~itkBlackTopHatImageFilterIUL3IUL3SE3_Pointer();
     itkBlackTopHatImageFilterIUL3IUL3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBlackTopHatImageFilterIUL3IUL3SE3 * GetPointer() const;
     bool operator<(itkBlackTopHatImageFilterIUL3IUL3SE3_Pointer const & r) const;
     bool operator>(itkBlackTopHatImageFilterIUL3IUL3SE3_Pointer const & r) const;
     bool operator<=(itkBlackTopHatImageFilterIUL3IUL3SE3_Pointer const & r) const;
     bool operator>=(itkBlackTopHatImageFilterIUL3IUL3SE3_Pointer const & r) const;
     itkBlackTopHatImageFilterIUL3IUL3SE3_Pointer & operator=(itkBlackTopHatImageFilterIUL3IUL3SE3_Pointer const & r);
     itkBlackTopHatImageFilterIUL3IUL3SE3_Pointer & operator=(itkBlackTopHatImageFilterIUL3IUL3SE3 * r);
     itkBlackTopHatImageFilterIUL3IUL3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBlackTopHatImageFilterIUS2IUS2SE2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     static itkBlackTopHatImageFilterIUS2IUS2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetKernel(itkFlatStructuringElement2 const _arg);
     virtual itkFlatStructuringElement2 const & GetKernel() const;
     virtual void SetSafeBorder(bool const _arg);
     virtual bool const & GetSafeBorder() const;
     virtual void SafeBorderOn();
     virtual void SafeBorderOff();
   private:
     itkBlackTopHatImageFilterIUS2IUS2SE2(itkBlackTopHatImageFilterIUS2IUS2SE2 const & arg0);
     void operator=(itkBlackTopHatImageFilterIUS2IUS2SE2 const & arg0);
   protected:
     itkBlackTopHatImageFilterIUS2IUS2SE2();
     ~itkBlackTopHatImageFilterIUS2IUS2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBlackTopHatImageFilterIUS2IUS2SE2_Pointer {
   public:
     itkBlackTopHatImageFilterIUS2IUS2SE2_Pointer();
     itkBlackTopHatImageFilterIUS2IUS2SE2_Pointer(itkBlackTopHatImageFilterIUS2IUS2SE2_Pointer const & p);
     itkBlackTopHatImageFilterIUS2IUS2SE2_Pointer(itkBlackTopHatImageFilterIUS2IUS2SE2 * p);
     ~itkBlackTopHatImageFilterIUS2IUS2SE2_Pointer();
     itkBlackTopHatImageFilterIUS2IUS2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBlackTopHatImageFilterIUS2IUS2SE2 * GetPointer() const;
     bool operator<(itkBlackTopHatImageFilterIUS2IUS2SE2_Pointer const & r) const;
     bool operator>(itkBlackTopHatImageFilterIUS2IUS2SE2_Pointer const & r) const;
     bool operator<=(itkBlackTopHatImageFilterIUS2IUS2SE2_Pointer const & r) const;
     bool operator>=(itkBlackTopHatImageFilterIUS2IUS2SE2_Pointer const & r) const;
     itkBlackTopHatImageFilterIUS2IUS2SE2_Pointer & operator=(itkBlackTopHatImageFilterIUS2IUS2SE2_Pointer const & r);
     itkBlackTopHatImageFilterIUS2IUS2SE2_Pointer & operator=(itkBlackTopHatImageFilterIUS2IUS2SE2 * r);
     itkBlackTopHatImageFilterIUS2IUS2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBlackTopHatImageFilterIUS3IUS3SE3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     static itkBlackTopHatImageFilterIUS3IUS3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetKernel(itkFlatStructuringElement3 const _arg);
     virtual itkFlatStructuringElement3 const & GetKernel() const;
     virtual void SetSafeBorder(bool const _arg);
     virtual bool const & GetSafeBorder() const;
     virtual void SafeBorderOn();
     virtual void SafeBorderOff();
   private:
     itkBlackTopHatImageFilterIUS3IUS3SE3(itkBlackTopHatImageFilterIUS3IUS3SE3 const & arg0);
     void operator=(itkBlackTopHatImageFilterIUS3IUS3SE3 const & arg0);
   protected:
     itkBlackTopHatImageFilterIUS3IUS3SE3();
     ~itkBlackTopHatImageFilterIUS3IUS3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBlackTopHatImageFilterIUS3IUS3SE3_Pointer {
   public:
     itkBlackTopHatImageFilterIUS3IUS3SE3_Pointer();
     itkBlackTopHatImageFilterIUS3IUS3SE3_Pointer(itkBlackTopHatImageFilterIUS3IUS3SE3_Pointer const & p);
     itkBlackTopHatImageFilterIUS3IUS3SE3_Pointer(itkBlackTopHatImageFilterIUS3IUS3SE3 * p);
     ~itkBlackTopHatImageFilterIUS3IUS3SE3_Pointer();
     itkBlackTopHatImageFilterIUS3IUS3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBlackTopHatImageFilterIUS3IUS3SE3 * GetPointer() const;
     bool operator<(itkBlackTopHatImageFilterIUS3IUS3SE3_Pointer const & r) const;
     bool operator>(itkBlackTopHatImageFilterIUS3IUS3SE3_Pointer const & r) const;
     bool operator<=(itkBlackTopHatImageFilterIUS3IUS3SE3_Pointer const & r) const;
     bool operator>=(itkBlackTopHatImageFilterIUS3IUS3SE3_Pointer const & r) const;
     itkBlackTopHatImageFilterIUS3IUS3SE3_Pointer & operator=(itkBlackTopHatImageFilterIUS3IUS3SE3_Pointer const & r);
     itkBlackTopHatImageFilterIUS3IUS3SE3_Pointer & operator=(itkBlackTopHatImageFilterIUS3IUS3SE3 * r);
     itkBlackTopHatImageFilterIUS3IUS3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


