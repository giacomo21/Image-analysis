// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkScalarChanAndVeseSparseLevelSetImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkScalarChanAndVeseSparseLevelSetImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkScalarChanAndVeseSparseLevelSetImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkScalarChanAndVeseSparseLevelSetImageFilterJava
#endif
#ifdef SWIGLUA
%module itkScalarChanAndVeseSparseLevelSetImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkScalarChanAndVeseSparseLevelSetImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkScalarChanAndVeseSparseLevelSetImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkScalarChanAndVeseSparseLevelSetImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkScalarChanAndVeseSparseLevelSetImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkScalarChanAndVeseSparseLevelSetImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkScalarChanAndVeseSparseLevelSetImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkScalarChanAndVeseSparseLevelSetImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkScalarChanAndVeseSparseLevelSetImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkScalarChanAndVeseSparseLevelSetImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkScalarChanAndVeseSparseLevelSetImageFilterPython
#endif
#ifdef SWIGR
%module itkScalarChanAndVeseSparseLevelSetImageFilterR
#endif
#ifdef SWIGRUBY
%module itkScalarChanAndVeseSparseLevelSetImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkScalarChanAndVeseSparseLevelSetImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkScalarChanAndVeseSparseLevelSetImageFilterTcl
#endif
#ifdef SWIGXML
%module itkScalarChanAndVeseSparseLevelSetImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Numerics.includes"
#include "LevelSet.includes"
%}


%{
%}




%import wrap_itkIndex.i
%import wrap_itkImage.i
%import wrap_itkScalarChanAndVeseDenseLevelSetImageFilter.i
%import wrap_ITKCommonBase.i
%import wrap_itkSparseFieldLevelSetImageFilter.i


%include itk.i
%include wrap_itkScalarChanAndVeseSparseLevelSetImageFilter_ext.i


 class itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Pointer {
   public:
     itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Pointer();
     itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Pointer(itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Pointer const & p);
     itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Pointer(itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2 * p);
     ~itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Pointer();
     itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2 * GetPointer() const;
     bool operator<(itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Pointer const & r) const;
     bool operator>(itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Pointer const & r) const;
     bool operator<=(itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Pointer const & r) const;
     bool operator>=(itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Pointer const & r) const;
     itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Pointer & operator=(itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Pointer const & r);
     itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Pointer & operator=(itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2 * r);
     itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Superclass : public itkScalarChanAndVeseDenseLevelSetImageFilterID2ID2ID2_Superclass_Superclass {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetNumberOfLayers(unsigned int const _arg);
     virtual unsigned int GetNumberOfLayers() const;
     virtual void SetIsoSurfaceValue(double const _arg);
     virtual double GetIsoSurfaceValue() const;
     virtual void SetInterpolateSurfaceLocation(bool const _arg);
     virtual bool GetInterpolateSurfaceLocation() const;
     void InterpolateSurfaceLocationOn();
     void InterpolateSurfaceLocationOff();
     void SetFunctionCount(unsigned int const & n);
   private:
     itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Superclass(itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Superclass const & arg0);
     void operator=(itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Superclass const & arg0);
   protected:
     itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Superclass();
     ~itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual double CalculateUpdateValue(itkIndex2 const & arg0, double const & dt, double const & value, double const & change);
     virtual void PostProcessOutput();
     virtual void InitializeBackgroundPixels();
     virtual void Initialize();
     virtual void CopyInputToOutput();
     virtual void AllocateUpdateBuffer();
     virtual void ApplyUpdate(double dt);
     virtual double CalculateChange();
     void ConstructLayer(itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Superclass::SparseDataStruct * sparsePtr, signed char from, signed char to);
     void ConstructActiveLayer();
     void InitializeActiveLayerValues();
     void InitializeBackgroundConstants();
     void PropagateLayerValues(itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Superclass::SparseDataStruct * sparsePtr, signed char from, signed char to, signed char promote, int InOrOut);
     void PropagateAllLayerValues();
     void PropagateFunctionLayerValues(unsigned int functionIndex);
     void UpdateActiveLayerValues(double dt, itkSparseFieldLayerSFLSNI2 * StatusUpList, itkSparseFieldLayerSFLSNI2 * StatusDownList);
     void ProcessStatusList(itkSparseFieldLayerSFLSNI2 * InputList, itkSparseFieldLayerSFLSNI2 * OutputList, signed char ChangeToStatus, signed char SearchForStatus);
     void ProcessOutsideList(itkSparseFieldLayerSFLSNI2 * OutsideList, signed char ChangeToStatus);
     virtual void InitializeIteration();
     virtual void UpdatePixel(unsigned int arg0, unsigned int arg1, itk::NeighborhoodIterator< itk::Image< double, 2u >, itk::ZeroFluxNeumannBoundaryCondition< itk::Image< double, 2u > > > & arg2, double & arg3, bool & arg4);
     virtual double GetValueZero() const;
     virtual double GetValueOne() const;
 };


 class itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Superclass_Pointer {
   public:
     itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Superclass_Pointer();
     itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Superclass_Pointer(itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Superclass_Pointer const & p);
     itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Superclass_Pointer(itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Superclass * p);
     ~itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Superclass_Pointer();
     itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Superclass * GetPointer() const;
     bool operator<(itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     bool operator>(itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Superclass_Pointer & operator=(itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Superclass_Pointer const & r);
     itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Superclass_Pointer & operator=(itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Superclass * r);
     itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Pointer {
   public:
     itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Pointer();
     itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Pointer(itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Pointer const & p);
     itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Pointer(itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3 * p);
     ~itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Pointer();
     itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3 * GetPointer() const;
     bool operator<(itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Pointer const & r) const;
     bool operator>(itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Pointer const & r) const;
     bool operator<=(itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Pointer const & r) const;
     bool operator>=(itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Pointer const & r) const;
     itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Pointer & operator=(itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Pointer const & r);
     itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Pointer & operator=(itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3 * r);
     itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Superclass : public itkScalarChanAndVeseDenseLevelSetImageFilterID3ID3ID3_Superclass_Superclass {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetNumberOfLayers(unsigned int const _arg);
     virtual unsigned int GetNumberOfLayers() const;
     virtual void SetIsoSurfaceValue(double const _arg);
     virtual double GetIsoSurfaceValue() const;
     virtual void SetInterpolateSurfaceLocation(bool const _arg);
     virtual bool GetInterpolateSurfaceLocation() const;
     void InterpolateSurfaceLocationOn();
     void InterpolateSurfaceLocationOff();
     void SetFunctionCount(unsigned int const & n);
   private:
     itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Superclass(itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Superclass const & arg0);
     void operator=(itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Superclass const & arg0);
   protected:
     itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Superclass();
     ~itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual double CalculateUpdateValue(itkIndex3 const & arg0, double const & dt, double const & value, double const & change);
     virtual void PostProcessOutput();
     virtual void InitializeBackgroundPixels();
     virtual void Initialize();
     virtual void CopyInputToOutput();
     virtual void AllocateUpdateBuffer();
     virtual void ApplyUpdate(double dt);
     virtual double CalculateChange();
     void ConstructLayer(itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Superclass::SparseDataStruct * sparsePtr, signed char from, signed char to);
     void ConstructActiveLayer();
     void InitializeActiveLayerValues();
     void InitializeBackgroundConstants();
     void PropagateLayerValues(itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Superclass::SparseDataStruct * sparsePtr, signed char from, signed char to, signed char promote, int InOrOut);
     void PropagateAllLayerValues();
     void PropagateFunctionLayerValues(unsigned int functionIndex);
     void UpdateActiveLayerValues(double dt, itkSparseFieldLayerSFLSNI3 * StatusUpList, itkSparseFieldLayerSFLSNI3 * StatusDownList);
     void ProcessStatusList(itkSparseFieldLayerSFLSNI3 * InputList, itkSparseFieldLayerSFLSNI3 * OutputList, signed char ChangeToStatus, signed char SearchForStatus);
     void ProcessOutsideList(itkSparseFieldLayerSFLSNI3 * OutsideList, signed char ChangeToStatus);
     virtual void InitializeIteration();
     virtual void UpdatePixel(unsigned int arg0, unsigned int arg1, itk::NeighborhoodIterator< itk::Image< double, 3u >, itk::ZeroFluxNeumannBoundaryCondition< itk::Image< double, 3u > > > & arg2, double & arg3, bool & arg4);
     virtual double GetValueZero() const;
     virtual double GetValueOne() const;
 };


 class itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Superclass_Pointer {
   public:
     itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Superclass_Pointer();
     itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Superclass_Pointer(itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Superclass_Pointer const & p);
     itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Superclass_Pointer(itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Superclass * p);
     ~itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Superclass_Pointer();
     itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Superclass * GetPointer() const;
     bool operator<(itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     bool operator>(itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     bool operator<=(itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     bool operator>=(itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Superclass_Pointer & operator=(itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Superclass_Pointer const & r);
     itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Superclass_Pointer & operator=(itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Superclass * r);
     itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Pointer {
   public:
     itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Pointer();
     itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Pointer(itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Pointer const & p);
     itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Pointer(itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2 * p);
     ~itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Pointer();
     itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2 * GetPointer() const;
     bool operator<(itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Pointer const & r) const;
     bool operator>(itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Pointer const & r) const;
     bool operator<=(itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Pointer const & r) const;
     bool operator>=(itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Pointer const & r) const;
     itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Pointer & operator=(itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Pointer const & r);
     itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Pointer & operator=(itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2 * r);
     itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Superclass : public itkScalarChanAndVeseDenseLevelSetImageFilterIF2IF2IF2_Superclass_Superclass {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetNumberOfLayers(unsigned int const _arg);
     virtual unsigned int GetNumberOfLayers() const;
     virtual void SetIsoSurfaceValue(float const _arg);
     virtual float GetIsoSurfaceValue() const;
     virtual void SetInterpolateSurfaceLocation(bool const _arg);
     virtual bool GetInterpolateSurfaceLocation() const;
     void InterpolateSurfaceLocationOn();
     void InterpolateSurfaceLocationOff();
     void SetFunctionCount(unsigned int const & n);
   private:
     itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Superclass(itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Superclass const & arg0);
     void operator=(itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Superclass const & arg0);
   protected:
     itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Superclass();
     ~itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual float CalculateUpdateValue(itkIndex2 const & arg0, double const & dt, float const & value, float const & change);
     virtual void PostProcessOutput();
     virtual void InitializeBackgroundPixels();
     virtual void Initialize();
     virtual void CopyInputToOutput();
     virtual void AllocateUpdateBuffer();
     virtual void ApplyUpdate(double dt);
     virtual double CalculateChange();
     void ConstructLayer(itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Superclass::SparseDataStruct * sparsePtr, signed char from, signed char to);
     void ConstructActiveLayer();
     void InitializeActiveLayerValues();
     void InitializeBackgroundConstants();
     void PropagateLayerValues(itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Superclass::SparseDataStruct * sparsePtr, signed char from, signed char to, signed char promote, int InOrOut);
     void PropagateAllLayerValues();
     void PropagateFunctionLayerValues(unsigned int functionIndex);
     void UpdateActiveLayerValues(double dt, itkSparseFieldLayerSFLSNI2 * StatusUpList, itkSparseFieldLayerSFLSNI2 * StatusDownList);
     void ProcessStatusList(itkSparseFieldLayerSFLSNI2 * InputList, itkSparseFieldLayerSFLSNI2 * OutputList, signed char ChangeToStatus, signed char SearchForStatus);
     void ProcessOutsideList(itkSparseFieldLayerSFLSNI2 * OutsideList, signed char ChangeToStatus);
     virtual void InitializeIteration();
     virtual void UpdatePixel(unsigned int arg0, unsigned int arg1, itk::NeighborhoodIterator< itk::Image< float, 2u >, itk::ZeroFluxNeumannBoundaryCondition< itk::Image< float, 2u > > > & arg2, float & arg3, bool & arg4);
     virtual float GetValueZero() const;
     virtual float GetValueOne() const;
 };


 class itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Superclass_Pointer {
   public:
     itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Superclass_Pointer();
     itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Superclass_Pointer(itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Superclass_Pointer const & p);
     itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Superclass_Pointer(itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Superclass * p);
     ~itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Superclass_Pointer();
     itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Superclass * GetPointer() const;
     bool operator<(itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     bool operator>(itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Superclass_Pointer & operator=(itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Superclass_Pointer const & r);
     itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Superclass_Pointer & operator=(itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Superclass * r);
     itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Pointer {
   public:
     itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Pointer();
     itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Pointer(itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Pointer const & p);
     itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Pointer(itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3 * p);
     ~itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Pointer();
     itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3 * GetPointer() const;
     bool operator<(itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Pointer const & r) const;
     bool operator>(itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Pointer const & r) const;
     bool operator<=(itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Pointer const & r) const;
     bool operator>=(itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Pointer const & r) const;
     itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Pointer & operator=(itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Pointer const & r);
     itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Pointer & operator=(itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3 * r);
     itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Superclass : public itkScalarChanAndVeseDenseLevelSetImageFilterIF3IF3IF3_Superclass_Superclass {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetNumberOfLayers(unsigned int const _arg);
     virtual unsigned int GetNumberOfLayers() const;
     virtual void SetIsoSurfaceValue(float const _arg);
     virtual float GetIsoSurfaceValue() const;
     virtual void SetInterpolateSurfaceLocation(bool const _arg);
     virtual bool GetInterpolateSurfaceLocation() const;
     void InterpolateSurfaceLocationOn();
     void InterpolateSurfaceLocationOff();
     void SetFunctionCount(unsigned int const & n);
   private:
     itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Superclass(itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Superclass const & arg0);
     void operator=(itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Superclass const & arg0);
   protected:
     itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Superclass();
     ~itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual float CalculateUpdateValue(itkIndex3 const & arg0, double const & dt, float const & value, float const & change);
     virtual void PostProcessOutput();
     virtual void InitializeBackgroundPixels();
     virtual void Initialize();
     virtual void CopyInputToOutput();
     virtual void AllocateUpdateBuffer();
     virtual void ApplyUpdate(double dt);
     virtual double CalculateChange();
     void ConstructLayer(itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Superclass::SparseDataStruct * sparsePtr, signed char from, signed char to);
     void ConstructActiveLayer();
     void InitializeActiveLayerValues();
     void InitializeBackgroundConstants();
     void PropagateLayerValues(itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Superclass::SparseDataStruct * sparsePtr, signed char from, signed char to, signed char promote, int InOrOut);
     void PropagateAllLayerValues();
     void PropagateFunctionLayerValues(unsigned int functionIndex);
     void UpdateActiveLayerValues(double dt, itkSparseFieldLayerSFLSNI3 * StatusUpList, itkSparseFieldLayerSFLSNI3 * StatusDownList);
     void ProcessStatusList(itkSparseFieldLayerSFLSNI3 * InputList, itkSparseFieldLayerSFLSNI3 * OutputList, signed char ChangeToStatus, signed char SearchForStatus);
     void ProcessOutsideList(itkSparseFieldLayerSFLSNI3 * OutsideList, signed char ChangeToStatus);
     virtual void InitializeIteration();
     virtual void UpdatePixel(unsigned int arg0, unsigned int arg1, itk::NeighborhoodIterator< itk::Image< float, 3u >, itk::ZeroFluxNeumannBoundaryCondition< itk::Image< float, 3u > > > & arg2, float & arg3, bool & arg4);
     virtual float GetValueZero() const;
     virtual float GetValueOne() const;
 };


 class itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Superclass_Pointer {
   public:
     itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Superclass_Pointer();
     itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Superclass_Pointer(itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Superclass_Pointer const & p);
     itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Superclass_Pointer(itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Superclass * p);
     ~itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Superclass_Pointer();
     itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Superclass * GetPointer() const;
     bool operator<(itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     bool operator>(itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Superclass_Pointer & operator=(itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Superclass_Pointer const & r);
     itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Superclass_Pointer & operator=(itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Superclass * r);
     itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2 : public itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Superclass {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFeatureImage(itkImageD2_Pointer const f);
   private:
   protected:
     itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2();
     ~itkScalarChanAndVeseSparseLevelSetImageFilterID2ID2ID2();
     virtual void Initialize();
     virtual void InitializeIteration();
     virtual void UpdatePixel(unsigned int functionIndex, unsigned int idx, itk::NeighborhoodIterator< itk::Image< double, 2u >, itk::ZeroFluxNeumannBoundaryCondition< itk::Image< double, 2u > > > & iterator, double & newValue, bool & status);
 };


 class itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3 : public itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Superclass {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFeatureImage(itkImageD3_Pointer const f);
   private:
   protected:
     itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3();
     ~itkScalarChanAndVeseSparseLevelSetImageFilterID3ID3ID3();
     virtual void Initialize();
     virtual void InitializeIteration();
     virtual void UpdatePixel(unsigned int functionIndex, unsigned int idx, itk::NeighborhoodIterator< itk::Image< double, 3u >, itk::ZeroFluxNeumannBoundaryCondition< itk::Image< double, 3u > > > & iterator, double & newValue, bool & status);
 };


 class itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2 : public itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Superclass {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFeatureImage(itkImageF2_Pointer const f);
   private:
   protected:
     itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2();
     ~itkScalarChanAndVeseSparseLevelSetImageFilterIF2IF2IF2();
     virtual void Initialize();
     virtual void InitializeIteration();
     virtual void UpdatePixel(unsigned int functionIndex, unsigned int idx, itk::NeighborhoodIterator< itk::Image< float, 2u >, itk::ZeroFluxNeumannBoundaryCondition< itk::Image< float, 2u > > > & iterator, float & newValue, bool & status);
 };


 class itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3 : public itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Superclass {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFeatureImage(itkImageF3_Pointer const f);
   private:
   protected:
     itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3();
     ~itkScalarChanAndVeseSparseLevelSetImageFilterIF3IF3IF3();
     virtual void Initialize();
     virtual void InitializeIteration();
     virtual void UpdatePixel(unsigned int functionIndex, unsigned int idx, itk::NeighborhoodIterator< itk::Image< float, 3u >, itk::ZeroFluxNeumannBoundaryCondition< itk::Image< float, 3u > > > & iterator, float & newValue, bool & status);
 };


