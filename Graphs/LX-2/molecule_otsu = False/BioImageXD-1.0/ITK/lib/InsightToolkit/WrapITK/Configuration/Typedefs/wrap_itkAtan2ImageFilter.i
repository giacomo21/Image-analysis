// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkAtan2ImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkAtan2ImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkAtan2ImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkAtan2ImageFilterJava
#endif
#ifdef SWIGLUA
%module itkAtan2ImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkAtan2ImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkAtan2ImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkAtan2ImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkAtan2ImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkAtan2ImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkAtan2ImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkAtan2ImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkAtan2ImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkAtan2ImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkAtan2ImageFilterPython
#endif
#ifdef SWIGR
%module itkAtan2ImageFilterR
#endif
#ifdef SWIGRUBY
%module itkAtan2ImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkAtan2ImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkAtan2ImageFilterTcl
#endif
#ifdef SWIGXML
%module itkAtan2ImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "PixelMath.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkInPlaceImageFilterA.i
%import wrap_itkImage.i
%import wrap_ITKRegions.i


%include itk.i
%include wrap_itkAtan2ImageFilter_ext.i


 class itkAtan2ImageFilterID2ID2ID2_Pointer {
   public:
     itkAtan2ImageFilterID2ID2ID2_Pointer();
     itkAtan2ImageFilterID2ID2ID2_Pointer(itkAtan2ImageFilterID2ID2ID2_Pointer const & p);
     itkAtan2ImageFilterID2ID2ID2_Pointer(itkAtan2ImageFilterID2ID2ID2 * p);
     ~itkAtan2ImageFilterID2ID2ID2_Pointer();
     itkAtan2ImageFilterID2ID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAtan2ImageFilterID2ID2ID2 * GetPointer() const;
     bool operator<(itkAtan2ImageFilterID2ID2ID2_Pointer const & r) const;
     bool operator>(itkAtan2ImageFilterID2ID2ID2_Pointer const & r) const;
     bool operator<=(itkAtan2ImageFilterID2ID2ID2_Pointer const & r) const;
     bool operator>=(itkAtan2ImageFilterID2ID2ID2_Pointer const & r) const;
     itkAtan2ImageFilterID2ID2ID2_Pointer & operator=(itkAtan2ImageFilterID2ID2ID2_Pointer const & r);
     itkAtan2ImageFilterID2ID2ID2_Pointer & operator=(itkAtan2ImageFilterID2ID2ID2 * r);
     itkAtan2ImageFilterID2ID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAtan2ImageFilterID2ID2ID2_Superclass : public itkInPlaceImageFilterID2ID2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkAtan2ImageFilterID2ID2ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageD2 const * image1);
     void SetInput2(itkImageD2 const * image2);
     itk::Functor::Atan2< double, double, double > & GetFunctor();
     itk::Functor::Atan2< double, double, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Atan2< double, double, double > const & functor);
   private:
     itkAtan2ImageFilterID2ID2ID2_Superclass(itkAtan2ImageFilterID2ID2ID2_Superclass const & arg0);
     void operator=(itkAtan2ImageFilterID2ID2ID2_Superclass const & arg0);
   protected:
     itkAtan2ImageFilterID2ID2ID2_Superclass();
     ~itkAtan2ImageFilterID2ID2ID2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkAtan2ImageFilterID2ID2ID2_Superclass_Pointer {
   public:
     itkAtan2ImageFilterID2ID2ID2_Superclass_Pointer();
     itkAtan2ImageFilterID2ID2ID2_Superclass_Pointer(itkAtan2ImageFilterID2ID2ID2_Superclass_Pointer const & p);
     itkAtan2ImageFilterID2ID2ID2_Superclass_Pointer(itkAtan2ImageFilterID2ID2ID2_Superclass * p);
     ~itkAtan2ImageFilterID2ID2ID2_Superclass_Pointer();
     itkAtan2ImageFilterID2ID2ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAtan2ImageFilterID2ID2ID2_Superclass * GetPointer() const;
     bool operator<(itkAtan2ImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     bool operator>(itkAtan2ImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkAtan2ImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkAtan2ImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     itkAtan2ImageFilterID2ID2ID2_Superclass_Pointer & operator=(itkAtan2ImageFilterID2ID2ID2_Superclass_Pointer const & r);
     itkAtan2ImageFilterID2ID2ID2_Superclass_Pointer & operator=(itkAtan2ImageFilterID2ID2ID2_Superclass * r);
     itkAtan2ImageFilterID2ID2ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAtan2ImageFilterID3ID3ID3_Pointer {
   public:
     itkAtan2ImageFilterID3ID3ID3_Pointer();
     itkAtan2ImageFilterID3ID3ID3_Pointer(itkAtan2ImageFilterID3ID3ID3_Pointer const & p);
     itkAtan2ImageFilterID3ID3ID3_Pointer(itkAtan2ImageFilterID3ID3ID3 * p);
     ~itkAtan2ImageFilterID3ID3ID3_Pointer();
     itkAtan2ImageFilterID3ID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAtan2ImageFilterID3ID3ID3 * GetPointer() const;
     bool operator<(itkAtan2ImageFilterID3ID3ID3_Pointer const & r) const;
     bool operator>(itkAtan2ImageFilterID3ID3ID3_Pointer const & r) const;
     bool operator<=(itkAtan2ImageFilterID3ID3ID3_Pointer const & r) const;
     bool operator>=(itkAtan2ImageFilterID3ID3ID3_Pointer const & r) const;
     itkAtan2ImageFilterID3ID3ID3_Pointer & operator=(itkAtan2ImageFilterID3ID3ID3_Pointer const & r);
     itkAtan2ImageFilterID3ID3ID3_Pointer & operator=(itkAtan2ImageFilterID3ID3ID3 * r);
     itkAtan2ImageFilterID3ID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAtan2ImageFilterID3ID3ID3_Superclass : public itkInPlaceImageFilterID3ID3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkAtan2ImageFilterID3ID3ID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageD3 const * image1);
     void SetInput2(itkImageD3 const * image2);
     itk::Functor::Atan2< double, double, double > & GetFunctor();
     itk::Functor::Atan2< double, double, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Atan2< double, double, double > const & functor);
   private:
     itkAtan2ImageFilterID3ID3ID3_Superclass(itkAtan2ImageFilterID3ID3ID3_Superclass const & arg0);
     void operator=(itkAtan2ImageFilterID3ID3ID3_Superclass const & arg0);
   protected:
     itkAtan2ImageFilterID3ID3ID3_Superclass();
     ~itkAtan2ImageFilterID3ID3ID3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkAtan2ImageFilterID3ID3ID3_Superclass_Pointer {
   public:
     itkAtan2ImageFilterID3ID3ID3_Superclass_Pointer();
     itkAtan2ImageFilterID3ID3ID3_Superclass_Pointer(itkAtan2ImageFilterID3ID3ID3_Superclass_Pointer const & p);
     itkAtan2ImageFilterID3ID3ID3_Superclass_Pointer(itkAtan2ImageFilterID3ID3ID3_Superclass * p);
     ~itkAtan2ImageFilterID3ID3ID3_Superclass_Pointer();
     itkAtan2ImageFilterID3ID3ID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAtan2ImageFilterID3ID3ID3_Superclass * GetPointer() const;
     bool operator<(itkAtan2ImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     bool operator>(itkAtan2ImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     bool operator<=(itkAtan2ImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     bool operator>=(itkAtan2ImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     itkAtan2ImageFilterID3ID3ID3_Superclass_Pointer & operator=(itkAtan2ImageFilterID3ID3ID3_Superclass_Pointer const & r);
     itkAtan2ImageFilterID3ID3ID3_Superclass_Pointer & operator=(itkAtan2ImageFilterID3ID3ID3_Superclass * r);
     itkAtan2ImageFilterID3ID3ID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAtan2ImageFilterIF2IF2IF2_Pointer {
   public:
     itkAtan2ImageFilterIF2IF2IF2_Pointer();
     itkAtan2ImageFilterIF2IF2IF2_Pointer(itkAtan2ImageFilterIF2IF2IF2_Pointer const & p);
     itkAtan2ImageFilterIF2IF2IF2_Pointer(itkAtan2ImageFilterIF2IF2IF2 * p);
     ~itkAtan2ImageFilterIF2IF2IF2_Pointer();
     itkAtan2ImageFilterIF2IF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAtan2ImageFilterIF2IF2IF2 * GetPointer() const;
     bool operator<(itkAtan2ImageFilterIF2IF2IF2_Pointer const & r) const;
     bool operator>(itkAtan2ImageFilterIF2IF2IF2_Pointer const & r) const;
     bool operator<=(itkAtan2ImageFilterIF2IF2IF2_Pointer const & r) const;
     bool operator>=(itkAtan2ImageFilterIF2IF2IF2_Pointer const & r) const;
     itkAtan2ImageFilterIF2IF2IF2_Pointer & operator=(itkAtan2ImageFilterIF2IF2IF2_Pointer const & r);
     itkAtan2ImageFilterIF2IF2IF2_Pointer & operator=(itkAtan2ImageFilterIF2IF2IF2 * r);
     itkAtan2ImageFilterIF2IF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAtan2ImageFilterIF2IF2IF2_Superclass : public itkInPlaceImageFilterIF2IF2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkAtan2ImageFilterIF2IF2IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageF2 const * image1);
     void SetInput2(itkImageF2 const * image2);
     itk::Functor::Atan2< float, float, float > & GetFunctor();
     itk::Functor::Atan2< float, float, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Atan2< float, float, float > const & functor);
   private:
     itkAtan2ImageFilterIF2IF2IF2_Superclass(itkAtan2ImageFilterIF2IF2IF2_Superclass const & arg0);
     void operator=(itkAtan2ImageFilterIF2IF2IF2_Superclass const & arg0);
   protected:
     itkAtan2ImageFilterIF2IF2IF2_Superclass();
     ~itkAtan2ImageFilterIF2IF2IF2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkAtan2ImageFilterIF2IF2IF2_Superclass_Pointer {
   public:
     itkAtan2ImageFilterIF2IF2IF2_Superclass_Pointer();
     itkAtan2ImageFilterIF2IF2IF2_Superclass_Pointer(itkAtan2ImageFilterIF2IF2IF2_Superclass_Pointer const & p);
     itkAtan2ImageFilterIF2IF2IF2_Superclass_Pointer(itkAtan2ImageFilterIF2IF2IF2_Superclass * p);
     ~itkAtan2ImageFilterIF2IF2IF2_Superclass_Pointer();
     itkAtan2ImageFilterIF2IF2IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAtan2ImageFilterIF2IF2IF2_Superclass * GetPointer() const;
     bool operator<(itkAtan2ImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     bool operator>(itkAtan2ImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkAtan2ImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkAtan2ImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     itkAtan2ImageFilterIF2IF2IF2_Superclass_Pointer & operator=(itkAtan2ImageFilterIF2IF2IF2_Superclass_Pointer const & r);
     itkAtan2ImageFilterIF2IF2IF2_Superclass_Pointer & operator=(itkAtan2ImageFilterIF2IF2IF2_Superclass * r);
     itkAtan2ImageFilterIF2IF2IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAtan2ImageFilterIF3IF3IF3_Pointer {
   public:
     itkAtan2ImageFilterIF3IF3IF3_Pointer();
     itkAtan2ImageFilterIF3IF3IF3_Pointer(itkAtan2ImageFilterIF3IF3IF3_Pointer const & p);
     itkAtan2ImageFilterIF3IF3IF3_Pointer(itkAtan2ImageFilterIF3IF3IF3 * p);
     ~itkAtan2ImageFilterIF3IF3IF3_Pointer();
     itkAtan2ImageFilterIF3IF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAtan2ImageFilterIF3IF3IF3 * GetPointer() const;
     bool operator<(itkAtan2ImageFilterIF3IF3IF3_Pointer const & r) const;
     bool operator>(itkAtan2ImageFilterIF3IF3IF3_Pointer const & r) const;
     bool operator<=(itkAtan2ImageFilterIF3IF3IF3_Pointer const & r) const;
     bool operator>=(itkAtan2ImageFilterIF3IF3IF3_Pointer const & r) const;
     itkAtan2ImageFilterIF3IF3IF3_Pointer & operator=(itkAtan2ImageFilterIF3IF3IF3_Pointer const & r);
     itkAtan2ImageFilterIF3IF3IF3_Pointer & operator=(itkAtan2ImageFilterIF3IF3IF3 * r);
     itkAtan2ImageFilterIF3IF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAtan2ImageFilterIF3IF3IF3_Superclass : public itkInPlaceImageFilterIF3IF3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkAtan2ImageFilterIF3IF3IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageF3 const * image1);
     void SetInput2(itkImageF3 const * image2);
     itk::Functor::Atan2< float, float, float > & GetFunctor();
     itk::Functor::Atan2< float, float, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Atan2< float, float, float > const & functor);
   private:
     itkAtan2ImageFilterIF3IF3IF3_Superclass(itkAtan2ImageFilterIF3IF3IF3_Superclass const & arg0);
     void operator=(itkAtan2ImageFilterIF3IF3IF3_Superclass const & arg0);
   protected:
     itkAtan2ImageFilterIF3IF3IF3_Superclass();
     ~itkAtan2ImageFilterIF3IF3IF3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkAtan2ImageFilterIF3IF3IF3_Superclass_Pointer {
   public:
     itkAtan2ImageFilterIF3IF3IF3_Superclass_Pointer();
     itkAtan2ImageFilterIF3IF3IF3_Superclass_Pointer(itkAtan2ImageFilterIF3IF3IF3_Superclass_Pointer const & p);
     itkAtan2ImageFilterIF3IF3IF3_Superclass_Pointer(itkAtan2ImageFilterIF3IF3IF3_Superclass * p);
     ~itkAtan2ImageFilterIF3IF3IF3_Superclass_Pointer();
     itkAtan2ImageFilterIF3IF3IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAtan2ImageFilterIF3IF3IF3_Superclass * GetPointer() const;
     bool operator<(itkAtan2ImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     bool operator>(itkAtan2ImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkAtan2ImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkAtan2ImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     itkAtan2ImageFilterIF3IF3IF3_Superclass_Pointer & operator=(itkAtan2ImageFilterIF3IF3IF3_Superclass_Pointer const & r);
     itkAtan2ImageFilterIF3IF3IF3_Superclass_Pointer & operator=(itkAtan2ImageFilterIF3IF3IF3_Superclass * r);
     itkAtan2ImageFilterIF3IF3IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAtan2ImageFilterID2ID2ID2 : public itkAtan2ImageFilterID2ID2ID2_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkAtan2ImageFilterID2ID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAtan2ImageFilterID2ID2ID2(itkAtan2ImageFilterID2ID2ID2 const & arg0);
     void operator=(itkAtan2ImageFilterID2ID2ID2 const & arg0);
   protected:
     itkAtan2ImageFilterID2ID2ID2();
     ~itkAtan2ImageFilterID2ID2ID2();
 };


 class itkAtan2ImageFilterID3ID3ID3 : public itkAtan2ImageFilterID3ID3ID3_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkAtan2ImageFilterID3ID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAtan2ImageFilterID3ID3ID3(itkAtan2ImageFilterID3ID3ID3 const & arg0);
     void operator=(itkAtan2ImageFilterID3ID3ID3 const & arg0);
   protected:
     itkAtan2ImageFilterID3ID3ID3();
     ~itkAtan2ImageFilterID3ID3ID3();
 };


 class itkAtan2ImageFilterIF2IF2IF2 : public itkAtan2ImageFilterIF2IF2IF2_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkAtan2ImageFilterIF2IF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAtan2ImageFilterIF2IF2IF2(itkAtan2ImageFilterIF2IF2IF2 const & arg0);
     void operator=(itkAtan2ImageFilterIF2IF2IF2 const & arg0);
   protected:
     itkAtan2ImageFilterIF2IF2IF2();
     ~itkAtan2ImageFilterIF2IF2IF2();
 };


 class itkAtan2ImageFilterIF3IF3IF3 : public itkAtan2ImageFilterIF3IF3IF3_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkAtan2ImageFilterIF3IF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAtan2ImageFilterIF3IF3IF3(itkAtan2ImageFilterIF3IF3IF3 const & arg0);
     void operator=(itkAtan2ImageFilterIF3IF3IF3 const & arg0);
   protected:
     itkAtan2ImageFilterIF3IF3IF3();
     ~itkAtan2ImageFilterIF3IF3IF3();
 };


