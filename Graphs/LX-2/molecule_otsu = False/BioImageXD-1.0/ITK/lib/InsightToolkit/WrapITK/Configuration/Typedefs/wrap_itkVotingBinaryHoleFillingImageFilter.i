// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkVotingBinaryHoleFillingImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkVotingBinaryHoleFillingImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkVotingBinaryHoleFillingImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkVotingBinaryHoleFillingImageFilterJava
#endif
#ifdef SWIGLUA
%module itkVotingBinaryHoleFillingImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkVotingBinaryHoleFillingImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkVotingBinaryHoleFillingImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkVotingBinaryHoleFillingImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkVotingBinaryHoleFillingImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkVotingBinaryHoleFillingImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkVotingBinaryHoleFillingImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkVotingBinaryHoleFillingImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkVotingBinaryHoleFillingImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkVotingBinaryHoleFillingImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkVotingBinaryHoleFillingImageFilterPython
#endif
#ifdef SWIGR
%module itkVotingBinaryHoleFillingImageFilterR
#endif
#ifdef SWIGRUBY
%module itkVotingBinaryHoleFillingImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkVotingBinaryHoleFillingImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkVotingBinaryHoleFillingImageFilterTcl
#endif
#ifdef SWIGXML
%module itkVotingBinaryHoleFillingImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Denoising.includes"
%}


%{
%}




%import wrap_itkVotingBinaryImageFilter.i
%import wrap_ITKCommonBase.i
%import wrap_ITKRegions.i


%include itk.i
%include wrap_itkVotingBinaryHoleFillingImageFilter_ext.i


 class itkVotingBinaryHoleFillingImageFilterIUC2IUC2 : public itkVotingBinaryImageFilterIUC2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  UnsignedIntConvertibleToInputCheck = 1 };
     static itkVotingBinaryHoleFillingImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual unsigned int const & GetMajorityThreshold() const;
     virtual void SetMajorityThreshold(unsigned int const _arg);
     virtual unsigned long const & GetNumberOfPixelsChanged() const;
   private:
     itkVotingBinaryHoleFillingImageFilterIUC2IUC2(itkVotingBinaryHoleFillingImageFilterIUC2IUC2 const & arg0);
     void operator=(itkVotingBinaryHoleFillingImageFilterIUC2IUC2 const & arg0);
   protected:
     itkVotingBinaryHoleFillingImageFilterIUC2IUC2();
     ~itkVotingBinaryHoleFillingImageFilterIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void SetBirthThreshold(unsigned int const value);
     virtual void SetSurvivalThreshold(unsigned int const value);
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
 };


 class itkVotingBinaryHoleFillingImageFilterIUC2IUC2_Pointer {
   public:
     itkVotingBinaryHoleFillingImageFilterIUC2IUC2_Pointer();
     itkVotingBinaryHoleFillingImageFilterIUC2IUC2_Pointer(itkVotingBinaryHoleFillingImageFilterIUC2IUC2_Pointer const & p);
     itkVotingBinaryHoleFillingImageFilterIUC2IUC2_Pointer(itkVotingBinaryHoleFillingImageFilterIUC2IUC2 * p);
     ~itkVotingBinaryHoleFillingImageFilterIUC2IUC2_Pointer();
     itkVotingBinaryHoleFillingImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVotingBinaryHoleFillingImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkVotingBinaryHoleFillingImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkVotingBinaryHoleFillingImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkVotingBinaryHoleFillingImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkVotingBinaryHoleFillingImageFilterIUC2IUC2_Pointer const & r) const;
     itkVotingBinaryHoleFillingImageFilterIUC2IUC2_Pointer & operator=(itkVotingBinaryHoleFillingImageFilterIUC2IUC2_Pointer const & r);
     itkVotingBinaryHoleFillingImageFilterIUC2IUC2_Pointer & operator=(itkVotingBinaryHoleFillingImageFilterIUC2IUC2 * r);
     itkVotingBinaryHoleFillingImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVotingBinaryHoleFillingImageFilterIUC3IUC3 : public itkVotingBinaryImageFilterIUC3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  UnsignedIntConvertibleToInputCheck = 1 };
     static itkVotingBinaryHoleFillingImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual unsigned int const & GetMajorityThreshold() const;
     virtual void SetMajorityThreshold(unsigned int const _arg);
     virtual unsigned long const & GetNumberOfPixelsChanged() const;
   private:
     itkVotingBinaryHoleFillingImageFilterIUC3IUC3(itkVotingBinaryHoleFillingImageFilterIUC3IUC3 const & arg0);
     void operator=(itkVotingBinaryHoleFillingImageFilterIUC3IUC3 const & arg0);
   protected:
     itkVotingBinaryHoleFillingImageFilterIUC3IUC3();
     ~itkVotingBinaryHoleFillingImageFilterIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void SetBirthThreshold(unsigned int const value);
     virtual void SetSurvivalThreshold(unsigned int const value);
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
 };


 class itkVotingBinaryHoleFillingImageFilterIUC3IUC3_Pointer {
   public:
     itkVotingBinaryHoleFillingImageFilterIUC3IUC3_Pointer();
     itkVotingBinaryHoleFillingImageFilterIUC3IUC3_Pointer(itkVotingBinaryHoleFillingImageFilterIUC3IUC3_Pointer const & p);
     itkVotingBinaryHoleFillingImageFilterIUC3IUC3_Pointer(itkVotingBinaryHoleFillingImageFilterIUC3IUC3 * p);
     ~itkVotingBinaryHoleFillingImageFilterIUC3IUC3_Pointer();
     itkVotingBinaryHoleFillingImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVotingBinaryHoleFillingImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkVotingBinaryHoleFillingImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkVotingBinaryHoleFillingImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkVotingBinaryHoleFillingImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkVotingBinaryHoleFillingImageFilterIUC3IUC3_Pointer const & r) const;
     itkVotingBinaryHoleFillingImageFilterIUC3IUC3_Pointer & operator=(itkVotingBinaryHoleFillingImageFilterIUC3IUC3_Pointer const & r);
     itkVotingBinaryHoleFillingImageFilterIUC3IUC3_Pointer & operator=(itkVotingBinaryHoleFillingImageFilterIUC3IUC3 * r);
     itkVotingBinaryHoleFillingImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVotingBinaryHoleFillingImageFilterIUL2IUL2 : public itkVotingBinaryImageFilterIUL2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  UnsignedIntConvertibleToInputCheck = 1 };
     static itkVotingBinaryHoleFillingImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual unsigned int const & GetMajorityThreshold() const;
     virtual void SetMajorityThreshold(unsigned int const _arg);
     virtual unsigned long const & GetNumberOfPixelsChanged() const;
   private:
     itkVotingBinaryHoleFillingImageFilterIUL2IUL2(itkVotingBinaryHoleFillingImageFilterIUL2IUL2 const & arg0);
     void operator=(itkVotingBinaryHoleFillingImageFilterIUL2IUL2 const & arg0);
   protected:
     itkVotingBinaryHoleFillingImageFilterIUL2IUL2();
     ~itkVotingBinaryHoleFillingImageFilterIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void SetBirthThreshold(unsigned int const value);
     virtual void SetSurvivalThreshold(unsigned int const value);
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
 };


 class itkVotingBinaryHoleFillingImageFilterIUL2IUL2_Pointer {
   public:
     itkVotingBinaryHoleFillingImageFilterIUL2IUL2_Pointer();
     itkVotingBinaryHoleFillingImageFilterIUL2IUL2_Pointer(itkVotingBinaryHoleFillingImageFilterIUL2IUL2_Pointer const & p);
     itkVotingBinaryHoleFillingImageFilterIUL2IUL2_Pointer(itkVotingBinaryHoleFillingImageFilterIUL2IUL2 * p);
     ~itkVotingBinaryHoleFillingImageFilterIUL2IUL2_Pointer();
     itkVotingBinaryHoleFillingImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVotingBinaryHoleFillingImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkVotingBinaryHoleFillingImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkVotingBinaryHoleFillingImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkVotingBinaryHoleFillingImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkVotingBinaryHoleFillingImageFilterIUL2IUL2_Pointer const & r) const;
     itkVotingBinaryHoleFillingImageFilterIUL2IUL2_Pointer & operator=(itkVotingBinaryHoleFillingImageFilterIUL2IUL2_Pointer const & r);
     itkVotingBinaryHoleFillingImageFilterIUL2IUL2_Pointer & operator=(itkVotingBinaryHoleFillingImageFilterIUL2IUL2 * r);
     itkVotingBinaryHoleFillingImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVotingBinaryHoleFillingImageFilterIUL3IUL3 : public itkVotingBinaryImageFilterIUL3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  UnsignedIntConvertibleToInputCheck = 1 };
     static itkVotingBinaryHoleFillingImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual unsigned int const & GetMajorityThreshold() const;
     virtual void SetMajorityThreshold(unsigned int const _arg);
     virtual unsigned long const & GetNumberOfPixelsChanged() const;
   private:
     itkVotingBinaryHoleFillingImageFilterIUL3IUL3(itkVotingBinaryHoleFillingImageFilterIUL3IUL3 const & arg0);
     void operator=(itkVotingBinaryHoleFillingImageFilterIUL3IUL3 const & arg0);
   protected:
     itkVotingBinaryHoleFillingImageFilterIUL3IUL3();
     ~itkVotingBinaryHoleFillingImageFilterIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void SetBirthThreshold(unsigned int const value);
     virtual void SetSurvivalThreshold(unsigned int const value);
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
 };


 class itkVotingBinaryHoleFillingImageFilterIUL3IUL3_Pointer {
   public:
     itkVotingBinaryHoleFillingImageFilterIUL3IUL3_Pointer();
     itkVotingBinaryHoleFillingImageFilterIUL3IUL3_Pointer(itkVotingBinaryHoleFillingImageFilterIUL3IUL3_Pointer const & p);
     itkVotingBinaryHoleFillingImageFilterIUL3IUL3_Pointer(itkVotingBinaryHoleFillingImageFilterIUL3IUL3 * p);
     ~itkVotingBinaryHoleFillingImageFilterIUL3IUL3_Pointer();
     itkVotingBinaryHoleFillingImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVotingBinaryHoleFillingImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkVotingBinaryHoleFillingImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkVotingBinaryHoleFillingImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkVotingBinaryHoleFillingImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkVotingBinaryHoleFillingImageFilterIUL3IUL3_Pointer const & r) const;
     itkVotingBinaryHoleFillingImageFilterIUL3IUL3_Pointer & operator=(itkVotingBinaryHoleFillingImageFilterIUL3IUL3_Pointer const & r);
     itkVotingBinaryHoleFillingImageFilterIUL3IUL3_Pointer & operator=(itkVotingBinaryHoleFillingImageFilterIUL3IUL3 * r);
     itkVotingBinaryHoleFillingImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVotingBinaryHoleFillingImageFilterIUS2IUS2 : public itkVotingBinaryImageFilterIUS2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  UnsignedIntConvertibleToInputCheck = 1 };
     static itkVotingBinaryHoleFillingImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual unsigned int const & GetMajorityThreshold() const;
     virtual void SetMajorityThreshold(unsigned int const _arg);
     virtual unsigned long const & GetNumberOfPixelsChanged() const;
   private:
     itkVotingBinaryHoleFillingImageFilterIUS2IUS2(itkVotingBinaryHoleFillingImageFilterIUS2IUS2 const & arg0);
     void operator=(itkVotingBinaryHoleFillingImageFilterIUS2IUS2 const & arg0);
   protected:
     itkVotingBinaryHoleFillingImageFilterIUS2IUS2();
     ~itkVotingBinaryHoleFillingImageFilterIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void SetBirthThreshold(unsigned int const value);
     virtual void SetSurvivalThreshold(unsigned int const value);
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
 };


 class itkVotingBinaryHoleFillingImageFilterIUS2IUS2_Pointer {
   public:
     itkVotingBinaryHoleFillingImageFilterIUS2IUS2_Pointer();
     itkVotingBinaryHoleFillingImageFilterIUS2IUS2_Pointer(itkVotingBinaryHoleFillingImageFilterIUS2IUS2_Pointer const & p);
     itkVotingBinaryHoleFillingImageFilterIUS2IUS2_Pointer(itkVotingBinaryHoleFillingImageFilterIUS2IUS2 * p);
     ~itkVotingBinaryHoleFillingImageFilterIUS2IUS2_Pointer();
     itkVotingBinaryHoleFillingImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVotingBinaryHoleFillingImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkVotingBinaryHoleFillingImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkVotingBinaryHoleFillingImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkVotingBinaryHoleFillingImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkVotingBinaryHoleFillingImageFilterIUS2IUS2_Pointer const & r) const;
     itkVotingBinaryHoleFillingImageFilterIUS2IUS2_Pointer & operator=(itkVotingBinaryHoleFillingImageFilterIUS2IUS2_Pointer const & r);
     itkVotingBinaryHoleFillingImageFilterIUS2IUS2_Pointer & operator=(itkVotingBinaryHoleFillingImageFilterIUS2IUS2 * r);
     itkVotingBinaryHoleFillingImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVotingBinaryHoleFillingImageFilterIUS3IUS3 : public itkVotingBinaryImageFilterIUS3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  UnsignedIntConvertibleToInputCheck = 1 };
     static itkVotingBinaryHoleFillingImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual unsigned int const & GetMajorityThreshold() const;
     virtual void SetMajorityThreshold(unsigned int const _arg);
     virtual unsigned long const & GetNumberOfPixelsChanged() const;
   private:
     itkVotingBinaryHoleFillingImageFilterIUS3IUS3(itkVotingBinaryHoleFillingImageFilterIUS3IUS3 const & arg0);
     void operator=(itkVotingBinaryHoleFillingImageFilterIUS3IUS3 const & arg0);
   protected:
     itkVotingBinaryHoleFillingImageFilterIUS3IUS3();
     ~itkVotingBinaryHoleFillingImageFilterIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void SetBirthThreshold(unsigned int const value);
     virtual void SetSurvivalThreshold(unsigned int const value);
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
 };


 class itkVotingBinaryHoleFillingImageFilterIUS3IUS3_Pointer {
   public:
     itkVotingBinaryHoleFillingImageFilterIUS3IUS3_Pointer();
     itkVotingBinaryHoleFillingImageFilterIUS3IUS3_Pointer(itkVotingBinaryHoleFillingImageFilterIUS3IUS3_Pointer const & p);
     itkVotingBinaryHoleFillingImageFilterIUS3IUS3_Pointer(itkVotingBinaryHoleFillingImageFilterIUS3IUS3 * p);
     ~itkVotingBinaryHoleFillingImageFilterIUS3IUS3_Pointer();
     itkVotingBinaryHoleFillingImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVotingBinaryHoleFillingImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkVotingBinaryHoleFillingImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkVotingBinaryHoleFillingImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkVotingBinaryHoleFillingImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkVotingBinaryHoleFillingImageFilterIUS3IUS3_Pointer const & r) const;
     itkVotingBinaryHoleFillingImageFilterIUS3IUS3_Pointer & operator=(itkVotingBinaryHoleFillingImageFilterIUS3IUS3_Pointer const & r);
     itkVotingBinaryHoleFillingImageFilterIUS3IUS3_Pointer & operator=(itkVotingBinaryHoleFillingImageFilterIUS3IUS3 * r);
     itkVotingBinaryHoleFillingImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


