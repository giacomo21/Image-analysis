// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkRecursiveSeparableImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkRecursiveSeparableImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkRecursiveSeparableImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkRecursiveSeparableImageFilterJava
#endif
#ifdef SWIGLUA
%module itkRecursiveSeparableImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkRecursiveSeparableImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkRecursiveSeparableImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkRecursiveSeparableImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkRecursiveSeparableImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkRecursiveSeparableImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkRecursiveSeparableImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkRecursiveSeparableImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkRecursiveSeparableImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkRecursiveSeparableImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkRecursiveSeparableImageFilterPython
#endif
#ifdef SWIGR
%module itkRecursiveSeparableImageFilterR
#endif
#ifdef SWIGRUBY
%module itkRecursiveSeparableImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkRecursiveSeparableImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkRecursiveSeparableImageFilterTcl
#endif
#ifdef SWIGXML
%module itkRecursiveSeparableImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Filtering.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImage.i
%import wrap_ITKRegions.i
%import wrap_itkImageToImageFilterA.i


%include itk.i
%include wrap_itkRecursiveSeparableImageFilter_ext.i


 class itkRecursiveSeparableImageFilterID2ID2 : public itkImageToImageFilterID2ID2 {
   public:
     virtual char const * GetNameOfClass() const;
     virtual unsigned int GetDirection() const;
     virtual void SetDirection(unsigned int const _arg);
     void SetInputImage(itkImageD2 const * arg0);
     itkImageD2 const * GetInputImage();
   private:
     itkRecursiveSeparableImageFilterID2ID2(itkRecursiveSeparableImageFilterID2ID2 const & arg0);
     void operator=(itkRecursiveSeparableImageFilterID2ID2 const & arg0);
   protected:
     itkRecursiveSeparableImageFilterID2ID2();
     ~itkRecursiveSeparableImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual int SplitRequestedRegion(int i, int num, itkImageRegion2 & splitRegion);
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual void SetUp(double spacing) = 0;
     void FilterDataArray(double * outs, double const * data, double * scratch, unsigned int ln);
 };


 class itkRecursiveSeparableImageFilterID2ID2_Pointer {
   public:
     itkRecursiveSeparableImageFilterID2ID2_Pointer();
     itkRecursiveSeparableImageFilterID2ID2_Pointer(itkRecursiveSeparableImageFilterID2ID2_Pointer const & p);
     itkRecursiveSeparableImageFilterID2ID2_Pointer(itkRecursiveSeparableImageFilterID2ID2 * p);
     ~itkRecursiveSeparableImageFilterID2ID2_Pointer();
     itkRecursiveSeparableImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRecursiveSeparableImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkRecursiveSeparableImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkRecursiveSeparableImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkRecursiveSeparableImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkRecursiveSeparableImageFilterID2ID2_Pointer const & r) const;
     itkRecursiveSeparableImageFilterID2ID2_Pointer & operator=(itkRecursiveSeparableImageFilterID2ID2_Pointer const & r);
     itkRecursiveSeparableImageFilterID2ID2_Pointer & operator=(itkRecursiveSeparableImageFilterID2ID2 * r);
     itkRecursiveSeparableImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRecursiveSeparableImageFilterID3ID3 : public itkImageToImageFilterID3ID3 {
   public:
     virtual char const * GetNameOfClass() const;
     virtual unsigned int GetDirection() const;
     virtual void SetDirection(unsigned int const _arg);
     void SetInputImage(itkImageD3 const * arg0);
     itkImageD3 const * GetInputImage();
   private:
     itkRecursiveSeparableImageFilterID3ID3(itkRecursiveSeparableImageFilterID3ID3 const & arg0);
     void operator=(itkRecursiveSeparableImageFilterID3ID3 const & arg0);
   protected:
     itkRecursiveSeparableImageFilterID3ID3();
     ~itkRecursiveSeparableImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual int SplitRequestedRegion(int i, int num, itkImageRegion3 & splitRegion);
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual void SetUp(double spacing) = 0;
     void FilterDataArray(double * outs, double const * data, double * scratch, unsigned int ln);
 };


 class itkRecursiveSeparableImageFilterID3ID3_Pointer {
   public:
     itkRecursiveSeparableImageFilterID3ID3_Pointer();
     itkRecursiveSeparableImageFilterID3ID3_Pointer(itkRecursiveSeparableImageFilterID3ID3_Pointer const & p);
     itkRecursiveSeparableImageFilterID3ID3_Pointer(itkRecursiveSeparableImageFilterID3ID3 * p);
     ~itkRecursiveSeparableImageFilterID3ID3_Pointer();
     itkRecursiveSeparableImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRecursiveSeparableImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkRecursiveSeparableImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkRecursiveSeparableImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkRecursiveSeparableImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkRecursiveSeparableImageFilterID3ID3_Pointer const & r) const;
     itkRecursiveSeparableImageFilterID3ID3_Pointer & operator=(itkRecursiveSeparableImageFilterID3ID3_Pointer const & r);
     itkRecursiveSeparableImageFilterID3ID3_Pointer & operator=(itkRecursiveSeparableImageFilterID3ID3 * r);
     itkRecursiveSeparableImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRecursiveSeparableImageFilterIF2IF2 : public itkImageToImageFilterIF2IF2 {
   public:
     virtual char const * GetNameOfClass() const;
     virtual unsigned int GetDirection() const;
     virtual void SetDirection(unsigned int const _arg);
     void SetInputImage(itkImageF2 const * arg0);
     itkImageF2 const * GetInputImage();
   private:
     itkRecursiveSeparableImageFilterIF2IF2(itkRecursiveSeparableImageFilterIF2IF2 const & arg0);
     void operator=(itkRecursiveSeparableImageFilterIF2IF2 const & arg0);
   protected:
     itkRecursiveSeparableImageFilterIF2IF2();
     ~itkRecursiveSeparableImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual int SplitRequestedRegion(int i, int num, itkImageRegion2 & splitRegion);
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual void SetUp(double spacing) = 0;
     void FilterDataArray(double * outs, double const * data, double * scratch, unsigned int ln);
 };


 class itkRecursiveSeparableImageFilterIF2IF2_Pointer {
   public:
     itkRecursiveSeparableImageFilterIF2IF2_Pointer();
     itkRecursiveSeparableImageFilterIF2IF2_Pointer(itkRecursiveSeparableImageFilterIF2IF2_Pointer const & p);
     itkRecursiveSeparableImageFilterIF2IF2_Pointer(itkRecursiveSeparableImageFilterIF2IF2 * p);
     ~itkRecursiveSeparableImageFilterIF2IF2_Pointer();
     itkRecursiveSeparableImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRecursiveSeparableImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkRecursiveSeparableImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkRecursiveSeparableImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkRecursiveSeparableImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkRecursiveSeparableImageFilterIF2IF2_Pointer const & r) const;
     itkRecursiveSeparableImageFilterIF2IF2_Pointer & operator=(itkRecursiveSeparableImageFilterIF2IF2_Pointer const & r);
     itkRecursiveSeparableImageFilterIF2IF2_Pointer & operator=(itkRecursiveSeparableImageFilterIF2IF2 * r);
     itkRecursiveSeparableImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRecursiveSeparableImageFilterIF3IF3 : public itkImageToImageFilterIF3IF3 {
   public:
     virtual char const * GetNameOfClass() const;
     virtual unsigned int GetDirection() const;
     virtual void SetDirection(unsigned int const _arg);
     void SetInputImage(itkImageF3 const * arg0);
     itkImageF3 const * GetInputImage();
   private:
     itkRecursiveSeparableImageFilterIF3IF3(itkRecursiveSeparableImageFilterIF3IF3 const & arg0);
     void operator=(itkRecursiveSeparableImageFilterIF3IF3 const & arg0);
   protected:
     itkRecursiveSeparableImageFilterIF3IF3();
     ~itkRecursiveSeparableImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual int SplitRequestedRegion(int i, int num, itkImageRegion3 & splitRegion);
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual void SetUp(double spacing) = 0;
     void FilterDataArray(double * outs, double const * data, double * scratch, unsigned int ln);
 };


 class itkRecursiveSeparableImageFilterIF3IF3_Pointer {
   public:
     itkRecursiveSeparableImageFilterIF3IF3_Pointer();
     itkRecursiveSeparableImageFilterIF3IF3_Pointer(itkRecursiveSeparableImageFilterIF3IF3_Pointer const & p);
     itkRecursiveSeparableImageFilterIF3IF3_Pointer(itkRecursiveSeparableImageFilterIF3IF3 * p);
     ~itkRecursiveSeparableImageFilterIF3IF3_Pointer();
     itkRecursiveSeparableImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRecursiveSeparableImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkRecursiveSeparableImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkRecursiveSeparableImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkRecursiveSeparableImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkRecursiveSeparableImageFilterIF3IF3_Pointer const & r) const;
     itkRecursiveSeparableImageFilterIF3IF3_Pointer & operator=(itkRecursiveSeparableImageFilterIF3IF3_Pointer const & r);
     itkRecursiveSeparableImageFilterIF3IF3_Pointer & operator=(itkRecursiveSeparableImageFilterIF3IF3 * r);
     itkRecursiveSeparableImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRecursiveSeparableImageFilterIUC2IUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     virtual char const * GetNameOfClass() const;
     virtual unsigned int GetDirection() const;
     virtual void SetDirection(unsigned int const _arg);
     void SetInputImage(itkImageUC2 const * arg0);
     itkImageUC2 const * GetInputImage();
   private:
     itkRecursiveSeparableImageFilterIUC2IUC2(itkRecursiveSeparableImageFilterIUC2IUC2 const & arg0);
     void operator=(itkRecursiveSeparableImageFilterIUC2IUC2 const & arg0);
   protected:
     itkRecursiveSeparableImageFilterIUC2IUC2();
     ~itkRecursiveSeparableImageFilterIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual int SplitRequestedRegion(int i, int num, itkImageRegion2 & splitRegion);
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual void SetUp(double spacing) = 0;
     void FilterDataArray(double * outs, double const * data, double * scratch, unsigned int ln);
 };


 class itkRecursiveSeparableImageFilterIUC2IUC2_Pointer {
   public:
     itkRecursiveSeparableImageFilterIUC2IUC2_Pointer();
     itkRecursiveSeparableImageFilterIUC2IUC2_Pointer(itkRecursiveSeparableImageFilterIUC2IUC2_Pointer const & p);
     itkRecursiveSeparableImageFilterIUC2IUC2_Pointer(itkRecursiveSeparableImageFilterIUC2IUC2 * p);
     ~itkRecursiveSeparableImageFilterIUC2IUC2_Pointer();
     itkRecursiveSeparableImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRecursiveSeparableImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkRecursiveSeparableImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkRecursiveSeparableImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkRecursiveSeparableImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkRecursiveSeparableImageFilterIUC2IUC2_Pointer const & r) const;
     itkRecursiveSeparableImageFilterIUC2IUC2_Pointer & operator=(itkRecursiveSeparableImageFilterIUC2IUC2_Pointer const & r);
     itkRecursiveSeparableImageFilterIUC2IUC2_Pointer & operator=(itkRecursiveSeparableImageFilterIUC2IUC2 * r);
     itkRecursiveSeparableImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRecursiveSeparableImageFilterIUC3IUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     virtual char const * GetNameOfClass() const;
     virtual unsigned int GetDirection() const;
     virtual void SetDirection(unsigned int const _arg);
     void SetInputImage(itkImageUC3 const * arg0);
     itkImageUC3 const * GetInputImage();
   private:
     itkRecursiveSeparableImageFilterIUC3IUC3(itkRecursiveSeparableImageFilterIUC3IUC3 const & arg0);
     void operator=(itkRecursiveSeparableImageFilterIUC3IUC3 const & arg0);
   protected:
     itkRecursiveSeparableImageFilterIUC3IUC3();
     ~itkRecursiveSeparableImageFilterIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual int SplitRequestedRegion(int i, int num, itkImageRegion3 & splitRegion);
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual void SetUp(double spacing) = 0;
     void FilterDataArray(double * outs, double const * data, double * scratch, unsigned int ln);
 };


 class itkRecursiveSeparableImageFilterIUC3IUC3_Pointer {
   public:
     itkRecursiveSeparableImageFilterIUC3IUC3_Pointer();
     itkRecursiveSeparableImageFilterIUC3IUC3_Pointer(itkRecursiveSeparableImageFilterIUC3IUC3_Pointer const & p);
     itkRecursiveSeparableImageFilterIUC3IUC3_Pointer(itkRecursiveSeparableImageFilterIUC3IUC3 * p);
     ~itkRecursiveSeparableImageFilterIUC3IUC3_Pointer();
     itkRecursiveSeparableImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRecursiveSeparableImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkRecursiveSeparableImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkRecursiveSeparableImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkRecursiveSeparableImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkRecursiveSeparableImageFilterIUC3IUC3_Pointer const & r) const;
     itkRecursiveSeparableImageFilterIUC3IUC3_Pointer & operator=(itkRecursiveSeparableImageFilterIUC3IUC3_Pointer const & r);
     itkRecursiveSeparableImageFilterIUC3IUC3_Pointer & operator=(itkRecursiveSeparableImageFilterIUC3IUC3 * r);
     itkRecursiveSeparableImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRecursiveSeparableImageFilterIUL2IUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     virtual char const * GetNameOfClass() const;
     virtual unsigned int GetDirection() const;
     virtual void SetDirection(unsigned int const _arg);
     void SetInputImage(itkImageUL2 const * arg0);
     itkImageUL2 const * GetInputImage();
   private:
     itkRecursiveSeparableImageFilterIUL2IUL2(itkRecursiveSeparableImageFilterIUL2IUL2 const & arg0);
     void operator=(itkRecursiveSeparableImageFilterIUL2IUL2 const & arg0);
   protected:
     itkRecursiveSeparableImageFilterIUL2IUL2();
     ~itkRecursiveSeparableImageFilterIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual int SplitRequestedRegion(int i, int num, itkImageRegion2 & splitRegion);
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual void SetUp(double spacing) = 0;
     void FilterDataArray(double * outs, double const * data, double * scratch, unsigned int ln);
 };


 class itkRecursiveSeparableImageFilterIUL2IUL2_Pointer {
   public:
     itkRecursiveSeparableImageFilterIUL2IUL2_Pointer();
     itkRecursiveSeparableImageFilterIUL2IUL2_Pointer(itkRecursiveSeparableImageFilterIUL2IUL2_Pointer const & p);
     itkRecursiveSeparableImageFilterIUL2IUL2_Pointer(itkRecursiveSeparableImageFilterIUL2IUL2 * p);
     ~itkRecursiveSeparableImageFilterIUL2IUL2_Pointer();
     itkRecursiveSeparableImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRecursiveSeparableImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkRecursiveSeparableImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkRecursiveSeparableImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkRecursiveSeparableImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkRecursiveSeparableImageFilterIUL2IUL2_Pointer const & r) const;
     itkRecursiveSeparableImageFilterIUL2IUL2_Pointer & operator=(itkRecursiveSeparableImageFilterIUL2IUL2_Pointer const & r);
     itkRecursiveSeparableImageFilterIUL2IUL2_Pointer & operator=(itkRecursiveSeparableImageFilterIUL2IUL2 * r);
     itkRecursiveSeparableImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRecursiveSeparableImageFilterIUL3IUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     virtual char const * GetNameOfClass() const;
     virtual unsigned int GetDirection() const;
     virtual void SetDirection(unsigned int const _arg);
     void SetInputImage(itkImageUL3 const * arg0);
     itkImageUL3 const * GetInputImage();
   private:
     itkRecursiveSeparableImageFilterIUL3IUL3(itkRecursiveSeparableImageFilterIUL3IUL3 const & arg0);
     void operator=(itkRecursiveSeparableImageFilterIUL3IUL3 const & arg0);
   protected:
     itkRecursiveSeparableImageFilterIUL3IUL3();
     ~itkRecursiveSeparableImageFilterIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual int SplitRequestedRegion(int i, int num, itkImageRegion3 & splitRegion);
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual void SetUp(double spacing) = 0;
     void FilterDataArray(double * outs, double const * data, double * scratch, unsigned int ln);
 };


 class itkRecursiveSeparableImageFilterIUL3IUL3_Pointer {
   public:
     itkRecursiveSeparableImageFilterIUL3IUL3_Pointer();
     itkRecursiveSeparableImageFilterIUL3IUL3_Pointer(itkRecursiveSeparableImageFilterIUL3IUL3_Pointer const & p);
     itkRecursiveSeparableImageFilterIUL3IUL3_Pointer(itkRecursiveSeparableImageFilterIUL3IUL3 * p);
     ~itkRecursiveSeparableImageFilterIUL3IUL3_Pointer();
     itkRecursiveSeparableImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRecursiveSeparableImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkRecursiveSeparableImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkRecursiveSeparableImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkRecursiveSeparableImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkRecursiveSeparableImageFilterIUL3IUL3_Pointer const & r) const;
     itkRecursiveSeparableImageFilterIUL3IUL3_Pointer & operator=(itkRecursiveSeparableImageFilterIUL3IUL3_Pointer const & r);
     itkRecursiveSeparableImageFilterIUL3IUL3_Pointer & operator=(itkRecursiveSeparableImageFilterIUL3IUL3 * r);
     itkRecursiveSeparableImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRecursiveSeparableImageFilterIUS2IUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     virtual char const * GetNameOfClass() const;
     virtual unsigned int GetDirection() const;
     virtual void SetDirection(unsigned int const _arg);
     void SetInputImage(itkImageUS2 const * arg0);
     itkImageUS2 const * GetInputImage();
   private:
     itkRecursiveSeparableImageFilterIUS2IUS2(itkRecursiveSeparableImageFilterIUS2IUS2 const & arg0);
     void operator=(itkRecursiveSeparableImageFilterIUS2IUS2 const & arg0);
   protected:
     itkRecursiveSeparableImageFilterIUS2IUS2();
     ~itkRecursiveSeparableImageFilterIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual int SplitRequestedRegion(int i, int num, itkImageRegion2 & splitRegion);
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual void SetUp(double spacing) = 0;
     void FilterDataArray(double * outs, double const * data, double * scratch, unsigned int ln);
 };


 class itkRecursiveSeparableImageFilterIUS2IUS2_Pointer {
   public:
     itkRecursiveSeparableImageFilterIUS2IUS2_Pointer();
     itkRecursiveSeparableImageFilterIUS2IUS2_Pointer(itkRecursiveSeparableImageFilterIUS2IUS2_Pointer const & p);
     itkRecursiveSeparableImageFilterIUS2IUS2_Pointer(itkRecursiveSeparableImageFilterIUS2IUS2 * p);
     ~itkRecursiveSeparableImageFilterIUS2IUS2_Pointer();
     itkRecursiveSeparableImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRecursiveSeparableImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkRecursiveSeparableImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkRecursiveSeparableImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkRecursiveSeparableImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkRecursiveSeparableImageFilterIUS2IUS2_Pointer const & r) const;
     itkRecursiveSeparableImageFilterIUS2IUS2_Pointer & operator=(itkRecursiveSeparableImageFilterIUS2IUS2_Pointer const & r);
     itkRecursiveSeparableImageFilterIUS2IUS2_Pointer & operator=(itkRecursiveSeparableImageFilterIUS2IUS2 * r);
     itkRecursiveSeparableImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRecursiveSeparableImageFilterIUS3IUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     virtual char const * GetNameOfClass() const;
     virtual unsigned int GetDirection() const;
     virtual void SetDirection(unsigned int const _arg);
     void SetInputImage(itkImageUS3 const * arg0);
     itkImageUS3 const * GetInputImage();
   private:
     itkRecursiveSeparableImageFilterIUS3IUS3(itkRecursiveSeparableImageFilterIUS3IUS3 const & arg0);
     void operator=(itkRecursiveSeparableImageFilterIUS3IUS3 const & arg0);
   protected:
     itkRecursiveSeparableImageFilterIUS3IUS3();
     ~itkRecursiveSeparableImageFilterIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual int SplitRequestedRegion(int i, int num, itkImageRegion3 & splitRegion);
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual void SetUp(double spacing) = 0;
     void FilterDataArray(double * outs, double const * data, double * scratch, unsigned int ln);
 };


 class itkRecursiveSeparableImageFilterIUS3IUS3_Pointer {
   public:
     itkRecursiveSeparableImageFilterIUS3IUS3_Pointer();
     itkRecursiveSeparableImageFilterIUS3IUS3_Pointer(itkRecursiveSeparableImageFilterIUS3IUS3_Pointer const & p);
     itkRecursiveSeparableImageFilterIUS3IUS3_Pointer(itkRecursiveSeparableImageFilterIUS3IUS3 * p);
     ~itkRecursiveSeparableImageFilterIUS3IUS3_Pointer();
     itkRecursiveSeparableImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRecursiveSeparableImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkRecursiveSeparableImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkRecursiveSeparableImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkRecursiveSeparableImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkRecursiveSeparableImageFilterIUS3IUS3_Pointer const & r) const;
     itkRecursiveSeparableImageFilterIUS3IUS3_Pointer & operator=(itkRecursiveSeparableImageFilterIUS3IUS3_Pointer const & r);
     itkRecursiveSeparableImageFilterIUS3IUS3_Pointer & operator=(itkRecursiveSeparableImageFilterIUS3IUS3 * r);
     itkRecursiveSeparableImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


