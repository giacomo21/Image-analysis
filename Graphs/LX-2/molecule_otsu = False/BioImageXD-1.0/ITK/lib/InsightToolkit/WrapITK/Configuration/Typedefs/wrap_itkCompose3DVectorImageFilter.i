// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkCompose3DVectorImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkCompose3DVectorImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkCompose3DVectorImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkCompose3DVectorImageFilterJava
#endif
#ifdef SWIGLUA
%module itkCompose3DVectorImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkCompose3DVectorImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkCompose3DVectorImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkCompose3DVectorImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkCompose3DVectorImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkCompose3DVectorImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkCompose3DVectorImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkCompose3DVectorImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkCompose3DVectorImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkCompose3DVectorImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkCompose3DVectorImageFilterPython
#endif
#ifdef SWIGR
%module itkCompose3DVectorImageFilterR
#endif
#ifdef SWIGRUBY
%module itkCompose3DVectorImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkCompose3DVectorImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkCompose3DVectorImageFilterTcl
#endif
#ifdef SWIGXML
%module itkCompose3DVectorImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Compose.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImage.i
%import wrap_itkInPlaceImageFilterB.i
%import wrap_ITKRegions.i


%include itk.i
%include wrap_itkCompose3DVectorImageFilter_ext.i


 class itkCompose3DVectorImageFilterIF3IVF33_Pointer {
   public:
     itkCompose3DVectorImageFilterIF3IVF33_Pointer();
     itkCompose3DVectorImageFilterIF3IVF33_Pointer(itkCompose3DVectorImageFilterIF3IVF33_Pointer const & p);
     itkCompose3DVectorImageFilterIF3IVF33_Pointer(itkCompose3DVectorImageFilterIF3IVF33 * p);
     ~itkCompose3DVectorImageFilterIF3IVF33_Pointer();
     itkCompose3DVectorImageFilterIF3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkCompose3DVectorImageFilterIF3IVF33 * GetPointer() const;
     bool operator<(itkCompose3DVectorImageFilterIF3IVF33_Pointer const & r) const;
     bool operator>(itkCompose3DVectorImageFilterIF3IVF33_Pointer const & r) const;
     bool operator<=(itkCompose3DVectorImageFilterIF3IVF33_Pointer const & r) const;
     bool operator>=(itkCompose3DVectorImageFilterIF3IVF33_Pointer const & r) const;
     itkCompose3DVectorImageFilterIF3IVF33_Pointer & operator=(itkCompose3DVectorImageFilterIF3IVF33_Pointer const & r);
     itkCompose3DVectorImageFilterIF3IVF33_Pointer & operator=(itkCompose3DVectorImageFilterIF3IVF33 * r);
     itkCompose3DVectorImageFilterIF3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkCompose3DVectorImageFilterIF3IVF33_Superclass : public itkInPlaceImageFilterIF3IVF33 {
   public:
     enum  {  Input1ImageDimension = 3 };
     enum  {  Input2ImageDimension = 3 };
     enum  {  Input3ImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     enum  {  SameDimensionCheck3 = 1 };
     static itkCompose3DVectorImageFilterIF3IVF33_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageF3 const * image1);
     void SetInput2(itkImageF3 const * image2);
     void SetInput3(itkImageF3 const * image3);
     itk::Function::Compose3DVector< float > & GetFunctor();
     itk::Function::Compose3DVector< float > const & GetFunctor() const;
     void SetFunctor(itk::Function::Compose3DVector< float > const & functor);
   private:
     itkCompose3DVectorImageFilterIF3IVF33_Superclass(itkCompose3DVectorImageFilterIF3IVF33_Superclass const & arg0);
     void operator=(itkCompose3DVectorImageFilterIF3IVF33_Superclass const & arg0);
   protected:
     itkCompose3DVectorImageFilterIF3IVF33_Superclass();
     ~itkCompose3DVectorImageFilterIF3IVF33_Superclass();
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkCompose3DVectorImageFilterIF3IVF33_Superclass_Pointer {
   public:
     itkCompose3DVectorImageFilterIF3IVF33_Superclass_Pointer();
     itkCompose3DVectorImageFilterIF3IVF33_Superclass_Pointer(itkCompose3DVectorImageFilterIF3IVF33_Superclass_Pointer const & p);
     itkCompose3DVectorImageFilterIF3IVF33_Superclass_Pointer(itkCompose3DVectorImageFilterIF3IVF33_Superclass * p);
     ~itkCompose3DVectorImageFilterIF3IVF33_Superclass_Pointer();
     itkCompose3DVectorImageFilterIF3IVF33_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkCompose3DVectorImageFilterIF3IVF33_Superclass * GetPointer() const;
     bool operator<(itkCompose3DVectorImageFilterIF3IVF33_Superclass_Pointer const & r) const;
     bool operator>(itkCompose3DVectorImageFilterIF3IVF33_Superclass_Pointer const & r) const;
     bool operator<=(itkCompose3DVectorImageFilterIF3IVF33_Superclass_Pointer const & r) const;
     bool operator>=(itkCompose3DVectorImageFilterIF3IVF33_Superclass_Pointer const & r) const;
     itkCompose3DVectorImageFilterIF3IVF33_Superclass_Pointer & operator=(itkCompose3DVectorImageFilterIF3IVF33_Superclass_Pointer const & r);
     itkCompose3DVectorImageFilterIF3IVF33_Superclass_Pointer & operator=(itkCompose3DVectorImageFilterIF3IVF33_Superclass * r);
     itkCompose3DVectorImageFilterIF3IVF33_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkCompose3DVectorImageFilterIF3IVF33 : public itkCompose3DVectorImageFilterIF3IVF33_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkCompose3DVectorImageFilterIF3IVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkCompose3DVectorImageFilterIF3IVF33(itkCompose3DVectorImageFilterIF3IVF33 const & arg0);
     void operator=(itkCompose3DVectorImageFilterIF3IVF33 const & arg0);
   protected:
     itkCompose3DVectorImageFilterIF3IVF33();
     ~itkCompose3DVectorImageFilterIF3IVF33();
 };


