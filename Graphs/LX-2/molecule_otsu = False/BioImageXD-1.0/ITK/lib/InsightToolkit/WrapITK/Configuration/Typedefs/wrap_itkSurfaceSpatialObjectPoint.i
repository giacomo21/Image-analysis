// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkSurfaceSpatialObjectPointChicken
#endif
#ifdef SWIGCSHARP
%module itkSurfaceSpatialObjectPointCsharp
#endif
#ifdef SWIGGUILE
%module itkSurfaceSpatialObjectPointGuile
#endif
#ifdef SWIGJAVA
%module itkSurfaceSpatialObjectPointJava
#endif
#ifdef SWIGLUA
%module itkSurfaceSpatialObjectPointLua
#endif
#ifdef SWIGMODULA3
%module itkSurfaceSpatialObjectPointModula3
#endif
#ifdef SWIGMZSCHEME
%module itkSurfaceSpatialObjectPointMzscheme
#endif
#ifdef SWIGOCAML
%module itkSurfaceSpatialObjectPointOcaml
#endif
#ifdef SWIGPERL
%module itkSurfaceSpatialObjectPointPerl
#endif
#ifdef SWIGPERL5
%module itkSurfaceSpatialObjectPointPerl5
#endif
#ifdef SWIGPHP
%module itkSurfaceSpatialObjectPointPhp
#endif
#ifdef SWIGPHP4
%module itkSurfaceSpatialObjectPointPhp4
#endif
#ifdef SWIGPHP5
%module itkSurfaceSpatialObjectPointPhp5
#endif
#ifdef SWIGPIKE
%module itkSurfaceSpatialObjectPointPike
#endif
#ifdef SWIGPYTHON
%module itkSurfaceSpatialObjectPointPython
#endif
#ifdef SWIGR
%module itkSurfaceSpatialObjectPointR
#endif
#ifdef SWIGRUBY
%module itkSurfaceSpatialObjectPointRuby
#endif
#ifdef SWIGSEXP
%module itkSurfaceSpatialObjectPointSexp
#endif
#ifdef SWIGTCL
%module itkSurfaceSpatialObjectPointTcl
#endif
#ifdef SWIGXML
%module itkSurfaceSpatialObjectPointXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "Calculators.includes"
#include "SpatialObject.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkCovariantVector.i
%import wrap_itkSpatialObjectPoint.i


%include itk.i
%include wrap_itkSurfaceSpatialObjectPoint_ext.i


 class itkSurfaceSpatialObjectPoint2 : public itkSpatialObjectPoint2 {
   public:
     itkSurfaceSpatialObjectPoint2(itkSurfaceSpatialObjectPoint2 const & arg0);
     itkSurfaceSpatialObjectPoint2();
     ~itkSurfaceSpatialObjectPoint2();
     itkCovariantVectorD2 const & GetNormal() const;
     void SetNormal(itkCovariantVectorD2 const & normal);
     void SetNormal(double const normalx, double const normaly);
     void SetNormal(double const normalx, double const normaly, double const normalz);
     itkSurfaceSpatialObjectPoint2 & operator=(itkSurfaceSpatialObjectPoint2 const & rhs);
   private:
   protected:
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSurfaceSpatialObjectPoint3 : public itkSpatialObjectPoint3 {
   public:
     itkSurfaceSpatialObjectPoint3(itkSurfaceSpatialObjectPoint3 const & arg0);
     itkSurfaceSpatialObjectPoint3();
     ~itkSurfaceSpatialObjectPoint3();
     itkCovariantVectorD3 const & GetNormal() const;
     void SetNormal(itkCovariantVectorD3 const & normal);
     void SetNormal(double const normalx, double const normaly);
     void SetNormal(double const normalx, double const normaly, double const normalz);
     itkSurfaceSpatialObjectPoint3 & operator=(itkSurfaceSpatialObjectPoint3 const & rhs);
   private:
   protected:
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


