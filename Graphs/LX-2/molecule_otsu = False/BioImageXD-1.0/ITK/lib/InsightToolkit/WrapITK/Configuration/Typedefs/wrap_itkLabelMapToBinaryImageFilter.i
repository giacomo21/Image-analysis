// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkLabelMapToBinaryImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkLabelMapToBinaryImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkLabelMapToBinaryImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkLabelMapToBinaryImageFilterJava
#endif
#ifdef SWIGLUA
%module itkLabelMapToBinaryImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkLabelMapToBinaryImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkLabelMapToBinaryImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkLabelMapToBinaryImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkLabelMapToBinaryImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkLabelMapToBinaryImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkLabelMapToBinaryImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkLabelMapToBinaryImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkLabelMapToBinaryImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkLabelMapToBinaryImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkLabelMapToBinaryImageFilterPython
#endif
#ifdef SWIGR
%module itkLabelMapToBinaryImageFilterR
#endif
#ifdef SWIGRUBY
%module itkLabelMapToBinaryImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkLabelMapToBinaryImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkLabelMapToBinaryImageFilterTcl
#endif
#ifdef SWIGXML
%module itkLabelMapToBinaryImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "Numerics.includes"
#include "BinaryMorphology.includes"
%}


%{
%}




%import wrap_itkStatisticsLabelObject.i
%import wrap_itkLabelMapFilter.i
%import wrap_ITKRegions.i
%import wrap_itkLabelMap.i
%import wrap_itkImage.i
%import wrap_ITKCommonBase.i


%include itk.i
%include wrap_itkLabelMapToBinaryImageFilter_ext.i


 class itkLabelMapToBinaryImageFilterLM2IUC2 : public itkLabelMapFilterLM2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     static itkLabelMapToBinaryImageFilterLM2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned char const _arg);
     virtual unsigned char GetForegroundValue() const;
     void SetBackgroundImage(itkImageUC2 const * input);
     itkImageUC2 * GetBackgroundImage();
     void SetInput1(itkLabelMap2 const * input);
     void SetInput2(itkImageUC2 const * input);
   private:
     itkLabelMapToBinaryImageFilterLM2IUC2(itkLabelMapToBinaryImageFilterLM2IUC2 const & arg0);
     void operator=(itkLabelMapToBinaryImageFilterLM2IUC2 const & arg0);
   protected:
     itkLabelMapToBinaryImageFilterLM2IUC2();
     ~itkLabelMapToBinaryImageFilterLM2IUC2();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void ThreadedProcessLabelObject(itkStatisticsLabelObjectUL2 * labelObject);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkLabelMapToBinaryImageFilterLM2IUC2_Pointer {
   public:
     itkLabelMapToBinaryImageFilterLM2IUC2_Pointer();
     itkLabelMapToBinaryImageFilterLM2IUC2_Pointer(itkLabelMapToBinaryImageFilterLM2IUC2_Pointer const & p);
     itkLabelMapToBinaryImageFilterLM2IUC2_Pointer(itkLabelMapToBinaryImageFilterLM2IUC2 * p);
     ~itkLabelMapToBinaryImageFilterLM2IUC2_Pointer();
     itkLabelMapToBinaryImageFilterLM2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLabelMapToBinaryImageFilterLM2IUC2 * GetPointer() const;
     bool operator<(itkLabelMapToBinaryImageFilterLM2IUC2_Pointer const & r) const;
     bool operator>(itkLabelMapToBinaryImageFilterLM2IUC2_Pointer const & r) const;
     bool operator<=(itkLabelMapToBinaryImageFilterLM2IUC2_Pointer const & r) const;
     bool operator>=(itkLabelMapToBinaryImageFilterLM2IUC2_Pointer const & r) const;
     itkLabelMapToBinaryImageFilterLM2IUC2_Pointer & operator=(itkLabelMapToBinaryImageFilterLM2IUC2_Pointer const & r);
     itkLabelMapToBinaryImageFilterLM2IUC2_Pointer & operator=(itkLabelMapToBinaryImageFilterLM2IUC2 * r);
     itkLabelMapToBinaryImageFilterLM2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLabelMapToBinaryImageFilterLM2IUL2 : public itkLabelMapFilterLM2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     static itkLabelMapToBinaryImageFilterLM2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned long const _arg);
     virtual unsigned long GetForegroundValue() const;
     void SetBackgroundImage(itkImageUL2 const * input);
     itkImageUL2 * GetBackgroundImage();
     void SetInput1(itkLabelMap2 const * input);
     void SetInput2(itkImageUL2 const * input);
   private:
     itkLabelMapToBinaryImageFilterLM2IUL2(itkLabelMapToBinaryImageFilterLM2IUL2 const & arg0);
     void operator=(itkLabelMapToBinaryImageFilterLM2IUL2 const & arg0);
   protected:
     itkLabelMapToBinaryImageFilterLM2IUL2();
     ~itkLabelMapToBinaryImageFilterLM2IUL2();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void ThreadedProcessLabelObject(itkStatisticsLabelObjectUL2 * labelObject);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkLabelMapToBinaryImageFilterLM2IUL2_Pointer {
   public:
     itkLabelMapToBinaryImageFilterLM2IUL2_Pointer();
     itkLabelMapToBinaryImageFilterLM2IUL2_Pointer(itkLabelMapToBinaryImageFilterLM2IUL2_Pointer const & p);
     itkLabelMapToBinaryImageFilterLM2IUL2_Pointer(itkLabelMapToBinaryImageFilterLM2IUL2 * p);
     ~itkLabelMapToBinaryImageFilterLM2IUL2_Pointer();
     itkLabelMapToBinaryImageFilterLM2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLabelMapToBinaryImageFilterLM2IUL2 * GetPointer() const;
     bool operator<(itkLabelMapToBinaryImageFilterLM2IUL2_Pointer const & r) const;
     bool operator>(itkLabelMapToBinaryImageFilterLM2IUL2_Pointer const & r) const;
     bool operator<=(itkLabelMapToBinaryImageFilterLM2IUL2_Pointer const & r) const;
     bool operator>=(itkLabelMapToBinaryImageFilterLM2IUL2_Pointer const & r) const;
     itkLabelMapToBinaryImageFilterLM2IUL2_Pointer & operator=(itkLabelMapToBinaryImageFilterLM2IUL2_Pointer const & r);
     itkLabelMapToBinaryImageFilterLM2IUL2_Pointer & operator=(itkLabelMapToBinaryImageFilterLM2IUL2 * r);
     itkLabelMapToBinaryImageFilterLM2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLabelMapToBinaryImageFilterLM2IUS2 : public itkLabelMapFilterLM2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     static itkLabelMapToBinaryImageFilterLM2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned short const _arg);
     virtual unsigned short GetForegroundValue() const;
     void SetBackgroundImage(itkImageUS2 const * input);
     itkImageUS2 * GetBackgroundImage();
     void SetInput1(itkLabelMap2 const * input);
     void SetInput2(itkImageUS2 const * input);
   private:
     itkLabelMapToBinaryImageFilterLM2IUS2(itkLabelMapToBinaryImageFilterLM2IUS2 const & arg0);
     void operator=(itkLabelMapToBinaryImageFilterLM2IUS2 const & arg0);
   protected:
     itkLabelMapToBinaryImageFilterLM2IUS2();
     ~itkLabelMapToBinaryImageFilterLM2IUS2();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void ThreadedProcessLabelObject(itkStatisticsLabelObjectUL2 * labelObject);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkLabelMapToBinaryImageFilterLM2IUS2_Pointer {
   public:
     itkLabelMapToBinaryImageFilterLM2IUS2_Pointer();
     itkLabelMapToBinaryImageFilterLM2IUS2_Pointer(itkLabelMapToBinaryImageFilterLM2IUS2_Pointer const & p);
     itkLabelMapToBinaryImageFilterLM2IUS2_Pointer(itkLabelMapToBinaryImageFilterLM2IUS2 * p);
     ~itkLabelMapToBinaryImageFilterLM2IUS2_Pointer();
     itkLabelMapToBinaryImageFilterLM2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLabelMapToBinaryImageFilterLM2IUS2 * GetPointer() const;
     bool operator<(itkLabelMapToBinaryImageFilterLM2IUS2_Pointer const & r) const;
     bool operator>(itkLabelMapToBinaryImageFilterLM2IUS2_Pointer const & r) const;
     bool operator<=(itkLabelMapToBinaryImageFilterLM2IUS2_Pointer const & r) const;
     bool operator>=(itkLabelMapToBinaryImageFilterLM2IUS2_Pointer const & r) const;
     itkLabelMapToBinaryImageFilterLM2IUS2_Pointer & operator=(itkLabelMapToBinaryImageFilterLM2IUS2_Pointer const & r);
     itkLabelMapToBinaryImageFilterLM2IUS2_Pointer & operator=(itkLabelMapToBinaryImageFilterLM2IUS2 * r);
     itkLabelMapToBinaryImageFilterLM2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLabelMapToBinaryImageFilterLM3IUC3 : public itkLabelMapFilterLM3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     static itkLabelMapToBinaryImageFilterLM3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned char const _arg);
     virtual unsigned char GetForegroundValue() const;
     void SetBackgroundImage(itkImageUC3 const * input);
     itkImageUC3 * GetBackgroundImage();
     void SetInput1(itkLabelMap3 const * input);
     void SetInput2(itkImageUC3 const * input);
   private:
     itkLabelMapToBinaryImageFilterLM3IUC3(itkLabelMapToBinaryImageFilterLM3IUC3 const & arg0);
     void operator=(itkLabelMapToBinaryImageFilterLM3IUC3 const & arg0);
   protected:
     itkLabelMapToBinaryImageFilterLM3IUC3();
     ~itkLabelMapToBinaryImageFilterLM3IUC3();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void ThreadedProcessLabelObject(itkStatisticsLabelObjectUL3 * labelObject);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkLabelMapToBinaryImageFilterLM3IUC3_Pointer {
   public:
     itkLabelMapToBinaryImageFilterLM3IUC3_Pointer();
     itkLabelMapToBinaryImageFilterLM3IUC3_Pointer(itkLabelMapToBinaryImageFilterLM3IUC3_Pointer const & p);
     itkLabelMapToBinaryImageFilterLM3IUC3_Pointer(itkLabelMapToBinaryImageFilterLM3IUC3 * p);
     ~itkLabelMapToBinaryImageFilterLM3IUC3_Pointer();
     itkLabelMapToBinaryImageFilterLM3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLabelMapToBinaryImageFilterLM3IUC3 * GetPointer() const;
     bool operator<(itkLabelMapToBinaryImageFilterLM3IUC3_Pointer const & r) const;
     bool operator>(itkLabelMapToBinaryImageFilterLM3IUC3_Pointer const & r) const;
     bool operator<=(itkLabelMapToBinaryImageFilterLM3IUC3_Pointer const & r) const;
     bool operator>=(itkLabelMapToBinaryImageFilterLM3IUC3_Pointer const & r) const;
     itkLabelMapToBinaryImageFilterLM3IUC3_Pointer & operator=(itkLabelMapToBinaryImageFilterLM3IUC3_Pointer const & r);
     itkLabelMapToBinaryImageFilterLM3IUC3_Pointer & operator=(itkLabelMapToBinaryImageFilterLM3IUC3 * r);
     itkLabelMapToBinaryImageFilterLM3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLabelMapToBinaryImageFilterLM3IUL3 : public itkLabelMapFilterLM3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     static itkLabelMapToBinaryImageFilterLM3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned long const _arg);
     virtual unsigned long GetForegroundValue() const;
     void SetBackgroundImage(itkImageUL3 const * input);
     itkImageUL3 * GetBackgroundImage();
     void SetInput1(itkLabelMap3 const * input);
     void SetInput2(itkImageUL3 const * input);
   private:
     itkLabelMapToBinaryImageFilterLM3IUL3(itkLabelMapToBinaryImageFilterLM3IUL3 const & arg0);
     void operator=(itkLabelMapToBinaryImageFilterLM3IUL3 const & arg0);
   protected:
     itkLabelMapToBinaryImageFilterLM3IUL3();
     ~itkLabelMapToBinaryImageFilterLM3IUL3();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void ThreadedProcessLabelObject(itkStatisticsLabelObjectUL3 * labelObject);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkLabelMapToBinaryImageFilterLM3IUL3_Pointer {
   public:
     itkLabelMapToBinaryImageFilterLM3IUL3_Pointer();
     itkLabelMapToBinaryImageFilterLM3IUL3_Pointer(itkLabelMapToBinaryImageFilterLM3IUL3_Pointer const & p);
     itkLabelMapToBinaryImageFilterLM3IUL3_Pointer(itkLabelMapToBinaryImageFilterLM3IUL3 * p);
     ~itkLabelMapToBinaryImageFilterLM3IUL3_Pointer();
     itkLabelMapToBinaryImageFilterLM3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLabelMapToBinaryImageFilterLM3IUL3 * GetPointer() const;
     bool operator<(itkLabelMapToBinaryImageFilterLM3IUL3_Pointer const & r) const;
     bool operator>(itkLabelMapToBinaryImageFilterLM3IUL3_Pointer const & r) const;
     bool operator<=(itkLabelMapToBinaryImageFilterLM3IUL3_Pointer const & r) const;
     bool operator>=(itkLabelMapToBinaryImageFilterLM3IUL3_Pointer const & r) const;
     itkLabelMapToBinaryImageFilterLM3IUL3_Pointer & operator=(itkLabelMapToBinaryImageFilterLM3IUL3_Pointer const & r);
     itkLabelMapToBinaryImageFilterLM3IUL3_Pointer & operator=(itkLabelMapToBinaryImageFilterLM3IUL3 * r);
     itkLabelMapToBinaryImageFilterLM3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLabelMapToBinaryImageFilterLM3IUS3 : public itkLabelMapFilterLM3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     static itkLabelMapToBinaryImageFilterLM3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned short const _arg);
     virtual unsigned short GetForegroundValue() const;
     void SetBackgroundImage(itkImageUS3 const * input);
     itkImageUS3 * GetBackgroundImage();
     void SetInput1(itkLabelMap3 const * input);
     void SetInput2(itkImageUS3 const * input);
   private:
     itkLabelMapToBinaryImageFilterLM3IUS3(itkLabelMapToBinaryImageFilterLM3IUS3 const & arg0);
     void operator=(itkLabelMapToBinaryImageFilterLM3IUS3 const & arg0);
   protected:
     itkLabelMapToBinaryImageFilterLM3IUS3();
     ~itkLabelMapToBinaryImageFilterLM3IUS3();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void ThreadedProcessLabelObject(itkStatisticsLabelObjectUL3 * labelObject);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkLabelMapToBinaryImageFilterLM3IUS3_Pointer {
   public:
     itkLabelMapToBinaryImageFilterLM3IUS3_Pointer();
     itkLabelMapToBinaryImageFilterLM3IUS3_Pointer(itkLabelMapToBinaryImageFilterLM3IUS3_Pointer const & p);
     itkLabelMapToBinaryImageFilterLM3IUS3_Pointer(itkLabelMapToBinaryImageFilterLM3IUS3 * p);
     ~itkLabelMapToBinaryImageFilterLM3IUS3_Pointer();
     itkLabelMapToBinaryImageFilterLM3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLabelMapToBinaryImageFilterLM3IUS3 * GetPointer() const;
     bool operator<(itkLabelMapToBinaryImageFilterLM3IUS3_Pointer const & r) const;
     bool operator>(itkLabelMapToBinaryImageFilterLM3IUS3_Pointer const & r) const;
     bool operator<=(itkLabelMapToBinaryImageFilterLM3IUS3_Pointer const & r) const;
     bool operator>=(itkLabelMapToBinaryImageFilterLM3IUS3_Pointer const & r) const;
     itkLabelMapToBinaryImageFilterLM3IUS3_Pointer & operator=(itkLabelMapToBinaryImageFilterLM3IUS3_Pointer const & r);
     itkLabelMapToBinaryImageFilterLM3IUS3_Pointer & operator=(itkLabelMapToBinaryImageFilterLM3IUS3 * r);
     itkLabelMapToBinaryImageFilterLM3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


