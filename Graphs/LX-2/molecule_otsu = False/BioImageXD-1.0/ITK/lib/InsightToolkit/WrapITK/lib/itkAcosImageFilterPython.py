# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkAcosImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkAcosImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkAcosImageFilterPython
            return _itkAcosImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkAcosImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkAcosImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkAcosImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterAPython
def itkAcosImageFilterID3ID3_New():
  return itkAcosImageFilterID3ID3.New()

def itkAcosImageFilterID3ID3_Superclass_New():
  return itkAcosImageFilterID3ID3_Superclass.New()

def itkAcosImageFilterID2ID2_New():
  return itkAcosImageFilterID2ID2.New()

def itkAcosImageFilterID2ID2_Superclass_New():
  return itkAcosImageFilterID2ID2_Superclass.New()

def itkAcosImageFilterIF3IF3_New():
  return itkAcosImageFilterIF3IF3.New()

def itkAcosImageFilterIF3IF3_Superclass_New():
  return itkAcosImageFilterIF3IF3_Superclass.New()

def itkAcosImageFilterIF2IF2_New():
  return itkAcosImageFilterIF2IF2.New()

def itkAcosImageFilterIF2IF2_Superclass_New():
  return itkAcosImageFilterIF2IF2_Superclass.New()

def itkAcosImageFilterIUS3IUS3_New():
  return itkAcosImageFilterIUS3IUS3.New()

def itkAcosImageFilterIUS3IUS3_Superclass_New():
  return itkAcosImageFilterIUS3IUS3_Superclass.New()

def itkAcosImageFilterIUS2IUS2_New():
  return itkAcosImageFilterIUS2IUS2.New()

def itkAcosImageFilterIUS2IUS2_Superclass_New():
  return itkAcosImageFilterIUS2IUS2_Superclass.New()

def itkAcosImageFilterIUL3IUL3_New():
  return itkAcosImageFilterIUL3IUL3.New()

def itkAcosImageFilterIUL3IUL3_Superclass_New():
  return itkAcosImageFilterIUL3IUL3_Superclass.New()

def itkAcosImageFilterIUL2IUL2_New():
  return itkAcosImageFilterIUL2IUL2.New()

def itkAcosImageFilterIUL2IUL2_Superclass_New():
  return itkAcosImageFilterIUL2IUL2_Superclass.New()

def itkAcosImageFilterIUC3IUC3_New():
  return itkAcosImageFilterIUC3IUC3.New()

def itkAcosImageFilterIUC3IUC3_Superclass_New():
  return itkAcosImageFilterIUC3IUC3_Superclass.New()

def itkAcosImageFilterIUC2IUC2_New():
  return itkAcosImageFilterIUC2IUC2.New()

def itkAcosImageFilterIUC2IUC2_Superclass_New():
  return itkAcosImageFilterIUC2IUC2_Superclass.New()

class itkAcosImageFilterID2ID2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    """Proxy of C++ itkAcosImageFilterID2ID2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkAcosImageFilterPython.itkAcosImageFilterID2ID2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Functor::Acos<(double,double)>
        GetFunctor(self) -> itk::Functor::Acos<(double,double)>
        """
        return _itkAcosImageFilterPython.itkAcosImageFilterID2ID2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Functor::Acos<(double,double)> functor)"""
        return _itkAcosImageFilterPython.itkAcosImageFilterID2ID2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkAcosImageFilterPython.delete_itkAcosImageFilterID2ID2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkAcosImageFilterID2ID2_Superclass"""
        return _itkAcosImageFilterPython.itkAcosImageFilterID2ID2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAcosImageFilterID2ID2_Superclass"""
        return _itkAcosImageFilterPython.itkAcosImageFilterID2ID2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAcosImageFilterID2ID2_Superclass
        
        Create a new object of the class itkAcosImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAcosImageFilterID2ID2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAcosImageFilterID2ID2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAcosImageFilterID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAcosImageFilterID2ID2_Superclass.GetFunctor = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterID2ID2_Superclass_GetFunctor,None,itkAcosImageFilterID2ID2_Superclass)
itkAcosImageFilterID2ID2_Superclass.SetFunctor = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterID2ID2_Superclass_SetFunctor,None,itkAcosImageFilterID2ID2_Superclass)
itkAcosImageFilterID2ID2_Superclass.GetPointer = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterID2ID2_Superclass_GetPointer,None,itkAcosImageFilterID2ID2_Superclass)
itkAcosImageFilterID2ID2_Superclass_swigregister = _itkAcosImageFilterPython.itkAcosImageFilterID2ID2_Superclass_swigregister
itkAcosImageFilterID2ID2_Superclass_swigregister(itkAcosImageFilterID2ID2_Superclass)

def itkAcosImageFilterID2ID2_Superclass___New_orig__():
  """itkAcosImageFilterID2ID2_Superclass___New_orig__()"""
  return _itkAcosImageFilterPython.itkAcosImageFilterID2ID2_Superclass___New_orig__()

def itkAcosImageFilterID2ID2_Superclass_cast(*args):
  """itkAcosImageFilterID2ID2_Superclass_cast(itkLightObject obj) -> itkAcosImageFilterID2ID2_Superclass"""
  return _itkAcosImageFilterPython.itkAcosImageFilterID2ID2_Superclass_cast(*args)

class itkAcosImageFilterID3ID3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    """Proxy of C++ itkAcosImageFilterID3ID3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkAcosImageFilterPython.itkAcosImageFilterID3ID3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Functor::Acos<(double,double)>
        GetFunctor(self) -> itk::Functor::Acos<(double,double)>
        """
        return _itkAcosImageFilterPython.itkAcosImageFilterID3ID3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Functor::Acos<(double,double)> functor)"""
        return _itkAcosImageFilterPython.itkAcosImageFilterID3ID3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkAcosImageFilterPython.delete_itkAcosImageFilterID3ID3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkAcosImageFilterID3ID3_Superclass"""
        return _itkAcosImageFilterPython.itkAcosImageFilterID3ID3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAcosImageFilterID3ID3_Superclass"""
        return _itkAcosImageFilterPython.itkAcosImageFilterID3ID3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAcosImageFilterID3ID3_Superclass
        
        Create a new object of the class itkAcosImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAcosImageFilterID3ID3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAcosImageFilterID3ID3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAcosImageFilterID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAcosImageFilterID3ID3_Superclass.GetFunctor = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterID3ID3_Superclass_GetFunctor,None,itkAcosImageFilterID3ID3_Superclass)
itkAcosImageFilterID3ID3_Superclass.SetFunctor = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterID3ID3_Superclass_SetFunctor,None,itkAcosImageFilterID3ID3_Superclass)
itkAcosImageFilterID3ID3_Superclass.GetPointer = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterID3ID3_Superclass_GetPointer,None,itkAcosImageFilterID3ID3_Superclass)
itkAcosImageFilterID3ID3_Superclass_swigregister = _itkAcosImageFilterPython.itkAcosImageFilterID3ID3_Superclass_swigregister
itkAcosImageFilterID3ID3_Superclass_swigregister(itkAcosImageFilterID3ID3_Superclass)

def itkAcosImageFilterID3ID3_Superclass___New_orig__():
  """itkAcosImageFilterID3ID3_Superclass___New_orig__()"""
  return _itkAcosImageFilterPython.itkAcosImageFilterID3ID3_Superclass___New_orig__()

def itkAcosImageFilterID3ID3_Superclass_cast(*args):
  """itkAcosImageFilterID3ID3_Superclass_cast(itkLightObject obj) -> itkAcosImageFilterID3ID3_Superclass"""
  return _itkAcosImageFilterPython.itkAcosImageFilterID3ID3_Superclass_cast(*args)

class itkAcosImageFilterIF2IF2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    """Proxy of C++ itkAcosImageFilterIF2IF2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIF2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Functor::Acos<(float,float)>
        GetFunctor(self) -> itk::Functor::Acos<(float,float)>
        """
        return _itkAcosImageFilterPython.itkAcosImageFilterIF2IF2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Functor::Acos<(float,float)> functor)"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIF2IF2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkAcosImageFilterPython.delete_itkAcosImageFilterIF2IF2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkAcosImageFilterIF2IF2_Superclass"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIF2IF2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAcosImageFilterIF2IF2_Superclass"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIF2IF2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAcosImageFilterIF2IF2_Superclass
        
        Create a new object of the class itkAcosImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAcosImageFilterIF2IF2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAcosImageFilterIF2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAcosImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAcosImageFilterIF2IF2_Superclass.GetFunctor = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIF2IF2_Superclass_GetFunctor,None,itkAcosImageFilterIF2IF2_Superclass)
itkAcosImageFilterIF2IF2_Superclass.SetFunctor = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIF2IF2_Superclass_SetFunctor,None,itkAcosImageFilterIF2IF2_Superclass)
itkAcosImageFilterIF2IF2_Superclass.GetPointer = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIF2IF2_Superclass_GetPointer,None,itkAcosImageFilterIF2IF2_Superclass)
itkAcosImageFilterIF2IF2_Superclass_swigregister = _itkAcosImageFilterPython.itkAcosImageFilterIF2IF2_Superclass_swigregister
itkAcosImageFilterIF2IF2_Superclass_swigregister(itkAcosImageFilterIF2IF2_Superclass)

def itkAcosImageFilterIF2IF2_Superclass___New_orig__():
  """itkAcosImageFilterIF2IF2_Superclass___New_orig__()"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIF2IF2_Superclass___New_orig__()

def itkAcosImageFilterIF2IF2_Superclass_cast(*args):
  """itkAcosImageFilterIF2IF2_Superclass_cast(itkLightObject obj) -> itkAcosImageFilterIF2IF2_Superclass"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIF2IF2_Superclass_cast(*args)

class itkAcosImageFilterIF3IF3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    """Proxy of C++ itkAcosImageFilterIF3IF3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIF3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Functor::Acos<(float,float)>
        GetFunctor(self) -> itk::Functor::Acos<(float,float)>
        """
        return _itkAcosImageFilterPython.itkAcosImageFilterIF3IF3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Functor::Acos<(float,float)> functor)"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIF3IF3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkAcosImageFilterPython.delete_itkAcosImageFilterIF3IF3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkAcosImageFilterIF3IF3_Superclass"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIF3IF3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAcosImageFilterIF3IF3_Superclass"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIF3IF3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAcosImageFilterIF3IF3_Superclass
        
        Create a new object of the class itkAcosImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAcosImageFilterIF3IF3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAcosImageFilterIF3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAcosImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAcosImageFilterIF3IF3_Superclass.GetFunctor = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIF3IF3_Superclass_GetFunctor,None,itkAcosImageFilterIF3IF3_Superclass)
itkAcosImageFilterIF3IF3_Superclass.SetFunctor = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIF3IF3_Superclass_SetFunctor,None,itkAcosImageFilterIF3IF3_Superclass)
itkAcosImageFilterIF3IF3_Superclass.GetPointer = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIF3IF3_Superclass_GetPointer,None,itkAcosImageFilterIF3IF3_Superclass)
itkAcosImageFilterIF3IF3_Superclass_swigregister = _itkAcosImageFilterPython.itkAcosImageFilterIF3IF3_Superclass_swigregister
itkAcosImageFilterIF3IF3_Superclass_swigregister(itkAcosImageFilterIF3IF3_Superclass)

def itkAcosImageFilterIF3IF3_Superclass___New_orig__():
  """itkAcosImageFilterIF3IF3_Superclass___New_orig__()"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIF3IF3_Superclass___New_orig__()

def itkAcosImageFilterIF3IF3_Superclass_cast(*args):
  """itkAcosImageFilterIF3IF3_Superclass_cast(itkLightObject obj) -> itkAcosImageFilterIF3IF3_Superclass"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIF3IF3_Superclass_cast(*args)

class itkAcosImageFilterIUC2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    """Proxy of C++ itkAcosImageFilterIUC2IUC2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUC2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Functor::Acos<(unsigned char,unsigned char)>
        GetFunctor(self) -> itk::Functor::Acos<(unsigned char,unsigned char)>
        """
        return _itkAcosImageFilterPython.itkAcosImageFilterIUC2IUC2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Functor::Acos<(unsigned char,unsigned char)> functor)"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUC2IUC2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkAcosImageFilterPython.delete_itkAcosImageFilterIUC2IUC2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkAcosImageFilterIUC2IUC2_Superclass"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUC2IUC2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAcosImageFilterIUC2IUC2_Superclass"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUC2IUC2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAcosImageFilterIUC2IUC2_Superclass
        
        Create a new object of the class itkAcosImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAcosImageFilterIUC2IUC2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAcosImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAcosImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAcosImageFilterIUC2IUC2_Superclass.GetFunctor = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIUC2IUC2_Superclass_GetFunctor,None,itkAcosImageFilterIUC2IUC2_Superclass)
itkAcosImageFilterIUC2IUC2_Superclass.SetFunctor = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIUC2IUC2_Superclass_SetFunctor,None,itkAcosImageFilterIUC2IUC2_Superclass)
itkAcosImageFilterIUC2IUC2_Superclass.GetPointer = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIUC2IUC2_Superclass_GetPointer,None,itkAcosImageFilterIUC2IUC2_Superclass)
itkAcosImageFilterIUC2IUC2_Superclass_swigregister = _itkAcosImageFilterPython.itkAcosImageFilterIUC2IUC2_Superclass_swigregister
itkAcosImageFilterIUC2IUC2_Superclass_swigregister(itkAcosImageFilterIUC2IUC2_Superclass)

def itkAcosImageFilterIUC2IUC2_Superclass___New_orig__():
  """itkAcosImageFilterIUC2IUC2_Superclass___New_orig__()"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIUC2IUC2_Superclass___New_orig__()

def itkAcosImageFilterIUC2IUC2_Superclass_cast(*args):
  """itkAcosImageFilterIUC2IUC2_Superclass_cast(itkLightObject obj) -> itkAcosImageFilterIUC2IUC2_Superclass"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIUC2IUC2_Superclass_cast(*args)

class itkAcosImageFilterIUC3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    """Proxy of C++ itkAcosImageFilterIUC3IUC3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUC3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Functor::Acos<(unsigned char,unsigned char)>
        GetFunctor(self) -> itk::Functor::Acos<(unsigned char,unsigned char)>
        """
        return _itkAcosImageFilterPython.itkAcosImageFilterIUC3IUC3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Functor::Acos<(unsigned char,unsigned char)> functor)"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUC3IUC3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkAcosImageFilterPython.delete_itkAcosImageFilterIUC3IUC3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkAcosImageFilterIUC3IUC3_Superclass"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUC3IUC3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAcosImageFilterIUC3IUC3_Superclass"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUC3IUC3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAcosImageFilterIUC3IUC3_Superclass
        
        Create a new object of the class itkAcosImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAcosImageFilterIUC3IUC3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAcosImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAcosImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAcosImageFilterIUC3IUC3_Superclass.GetFunctor = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIUC3IUC3_Superclass_GetFunctor,None,itkAcosImageFilterIUC3IUC3_Superclass)
itkAcosImageFilterIUC3IUC3_Superclass.SetFunctor = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIUC3IUC3_Superclass_SetFunctor,None,itkAcosImageFilterIUC3IUC3_Superclass)
itkAcosImageFilterIUC3IUC3_Superclass.GetPointer = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIUC3IUC3_Superclass_GetPointer,None,itkAcosImageFilterIUC3IUC3_Superclass)
itkAcosImageFilterIUC3IUC3_Superclass_swigregister = _itkAcosImageFilterPython.itkAcosImageFilterIUC3IUC3_Superclass_swigregister
itkAcosImageFilterIUC3IUC3_Superclass_swigregister(itkAcosImageFilterIUC3IUC3_Superclass)

def itkAcosImageFilterIUC3IUC3_Superclass___New_orig__():
  """itkAcosImageFilterIUC3IUC3_Superclass___New_orig__()"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIUC3IUC3_Superclass___New_orig__()

def itkAcosImageFilterIUC3IUC3_Superclass_cast(*args):
  """itkAcosImageFilterIUC3IUC3_Superclass_cast(itkLightObject obj) -> itkAcosImageFilterIUC3IUC3_Superclass"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIUC3IUC3_Superclass_cast(*args)

class itkAcosImageFilterIUL2IUL2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUL2):
    """Proxy of C++ itkAcosImageFilterIUL2IUL2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUL2IUL2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Functor::Acos<(unsigned long,unsigned long)>
        GetFunctor(self) -> itk::Functor::Acos<(unsigned long,unsigned long)>
        """
        return _itkAcosImageFilterPython.itkAcosImageFilterIUL2IUL2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Functor::Acos<(unsigned long,unsigned long)> functor)"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUL2IUL2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkAcosImageFilterPython.delete_itkAcosImageFilterIUL2IUL2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkAcosImageFilterIUL2IUL2_Superclass"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUL2IUL2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAcosImageFilterIUL2IUL2_Superclass"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUL2IUL2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAcosImageFilterIUL2IUL2_Superclass
        
        Create a new object of the class itkAcosImageFilterIUL2IUL2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAcosImageFilterIUL2IUL2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAcosImageFilterIUL2IUL2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAcosImageFilterIUL2IUL2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAcosImageFilterIUL2IUL2_Superclass.GetFunctor = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIUL2IUL2_Superclass_GetFunctor,None,itkAcosImageFilterIUL2IUL2_Superclass)
itkAcosImageFilterIUL2IUL2_Superclass.SetFunctor = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIUL2IUL2_Superclass_SetFunctor,None,itkAcosImageFilterIUL2IUL2_Superclass)
itkAcosImageFilterIUL2IUL2_Superclass.GetPointer = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIUL2IUL2_Superclass_GetPointer,None,itkAcosImageFilterIUL2IUL2_Superclass)
itkAcosImageFilterIUL2IUL2_Superclass_swigregister = _itkAcosImageFilterPython.itkAcosImageFilterIUL2IUL2_Superclass_swigregister
itkAcosImageFilterIUL2IUL2_Superclass_swigregister(itkAcosImageFilterIUL2IUL2_Superclass)

def itkAcosImageFilterIUL2IUL2_Superclass___New_orig__():
  """itkAcosImageFilterIUL2IUL2_Superclass___New_orig__()"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIUL2IUL2_Superclass___New_orig__()

def itkAcosImageFilterIUL2IUL2_Superclass_cast(*args):
  """itkAcosImageFilterIUL2IUL2_Superclass_cast(itkLightObject obj) -> itkAcosImageFilterIUL2IUL2_Superclass"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIUL2IUL2_Superclass_cast(*args)

class itkAcosImageFilterIUL3IUL3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUL3):
    """Proxy of C++ itkAcosImageFilterIUL3IUL3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUL3IUL3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Functor::Acos<(unsigned long,unsigned long)>
        GetFunctor(self) -> itk::Functor::Acos<(unsigned long,unsigned long)>
        """
        return _itkAcosImageFilterPython.itkAcosImageFilterIUL3IUL3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Functor::Acos<(unsigned long,unsigned long)> functor)"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUL3IUL3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkAcosImageFilterPython.delete_itkAcosImageFilterIUL3IUL3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkAcosImageFilterIUL3IUL3_Superclass"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUL3IUL3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAcosImageFilterIUL3IUL3_Superclass"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUL3IUL3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAcosImageFilterIUL3IUL3_Superclass
        
        Create a new object of the class itkAcosImageFilterIUL3IUL3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAcosImageFilterIUL3IUL3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAcosImageFilterIUL3IUL3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAcosImageFilterIUL3IUL3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAcosImageFilterIUL3IUL3_Superclass.GetFunctor = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIUL3IUL3_Superclass_GetFunctor,None,itkAcosImageFilterIUL3IUL3_Superclass)
itkAcosImageFilterIUL3IUL3_Superclass.SetFunctor = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIUL3IUL3_Superclass_SetFunctor,None,itkAcosImageFilterIUL3IUL3_Superclass)
itkAcosImageFilterIUL3IUL3_Superclass.GetPointer = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIUL3IUL3_Superclass_GetPointer,None,itkAcosImageFilterIUL3IUL3_Superclass)
itkAcosImageFilterIUL3IUL3_Superclass_swigregister = _itkAcosImageFilterPython.itkAcosImageFilterIUL3IUL3_Superclass_swigregister
itkAcosImageFilterIUL3IUL3_Superclass_swigregister(itkAcosImageFilterIUL3IUL3_Superclass)

def itkAcosImageFilterIUL3IUL3_Superclass___New_orig__():
  """itkAcosImageFilterIUL3IUL3_Superclass___New_orig__()"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIUL3IUL3_Superclass___New_orig__()

def itkAcosImageFilterIUL3IUL3_Superclass_cast(*args):
  """itkAcosImageFilterIUL3IUL3_Superclass_cast(itkLightObject obj) -> itkAcosImageFilterIUL3IUL3_Superclass"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIUL3IUL3_Superclass_cast(*args)

class itkAcosImageFilterIUS2IUS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    """Proxy of C++ itkAcosImageFilterIUS2IUS2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUS2IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Functor::Acos<(unsigned short,unsigned short)>
        GetFunctor(self) -> itk::Functor::Acos<(unsigned short,unsigned short)>
        """
        return _itkAcosImageFilterPython.itkAcosImageFilterIUS2IUS2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Functor::Acos<(unsigned short,unsigned short)> functor)"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUS2IUS2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkAcosImageFilterPython.delete_itkAcosImageFilterIUS2IUS2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkAcosImageFilterIUS2IUS2_Superclass"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUS2IUS2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAcosImageFilterIUS2IUS2_Superclass"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUS2IUS2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAcosImageFilterIUS2IUS2_Superclass
        
        Create a new object of the class itkAcosImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAcosImageFilterIUS2IUS2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAcosImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAcosImageFilterIUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAcosImageFilterIUS2IUS2_Superclass.GetFunctor = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIUS2IUS2_Superclass_GetFunctor,None,itkAcosImageFilterIUS2IUS2_Superclass)
itkAcosImageFilterIUS2IUS2_Superclass.SetFunctor = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIUS2IUS2_Superclass_SetFunctor,None,itkAcosImageFilterIUS2IUS2_Superclass)
itkAcosImageFilterIUS2IUS2_Superclass.GetPointer = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIUS2IUS2_Superclass_GetPointer,None,itkAcosImageFilterIUS2IUS2_Superclass)
itkAcosImageFilterIUS2IUS2_Superclass_swigregister = _itkAcosImageFilterPython.itkAcosImageFilterIUS2IUS2_Superclass_swigregister
itkAcosImageFilterIUS2IUS2_Superclass_swigregister(itkAcosImageFilterIUS2IUS2_Superclass)

def itkAcosImageFilterIUS2IUS2_Superclass___New_orig__():
  """itkAcosImageFilterIUS2IUS2_Superclass___New_orig__()"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIUS2IUS2_Superclass___New_orig__()

def itkAcosImageFilterIUS2IUS2_Superclass_cast(*args):
  """itkAcosImageFilterIUS2IUS2_Superclass_cast(itkLightObject obj) -> itkAcosImageFilterIUS2IUS2_Superclass"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIUS2IUS2_Superclass_cast(*args)

class itkAcosImageFilterIUS3IUS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    """Proxy of C++ itkAcosImageFilterIUS3IUS3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUS3IUS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Functor::Acos<(unsigned short,unsigned short)>
        GetFunctor(self) -> itk::Functor::Acos<(unsigned short,unsigned short)>
        """
        return _itkAcosImageFilterPython.itkAcosImageFilterIUS3IUS3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Functor::Acos<(unsigned short,unsigned short)> functor)"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUS3IUS3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkAcosImageFilterPython.delete_itkAcosImageFilterIUS3IUS3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkAcosImageFilterIUS3IUS3_Superclass"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUS3IUS3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAcosImageFilterIUS3IUS3_Superclass"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUS3IUS3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAcosImageFilterIUS3IUS3_Superclass
        
        Create a new object of the class itkAcosImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAcosImageFilterIUS3IUS3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAcosImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAcosImageFilterIUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAcosImageFilterIUS3IUS3_Superclass.GetFunctor = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIUS3IUS3_Superclass_GetFunctor,None,itkAcosImageFilterIUS3IUS3_Superclass)
itkAcosImageFilterIUS3IUS3_Superclass.SetFunctor = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIUS3IUS3_Superclass_SetFunctor,None,itkAcosImageFilterIUS3IUS3_Superclass)
itkAcosImageFilterIUS3IUS3_Superclass.GetPointer = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIUS3IUS3_Superclass_GetPointer,None,itkAcosImageFilterIUS3IUS3_Superclass)
itkAcosImageFilterIUS3IUS3_Superclass_swigregister = _itkAcosImageFilterPython.itkAcosImageFilterIUS3IUS3_Superclass_swigregister
itkAcosImageFilterIUS3IUS3_Superclass_swigregister(itkAcosImageFilterIUS3IUS3_Superclass)

def itkAcosImageFilterIUS3IUS3_Superclass___New_orig__():
  """itkAcosImageFilterIUS3IUS3_Superclass___New_orig__()"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIUS3IUS3_Superclass___New_orig__()

def itkAcosImageFilterIUS3IUS3_Superclass_cast(*args):
  """itkAcosImageFilterIUS3IUS3_Superclass_cast(itkLightObject obj) -> itkAcosImageFilterIUS3IUS3_Superclass"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIUS3IUS3_Superclass_cast(*args)

class itkAcosImageFilterID2ID2(itkAcosImageFilterID2ID2_Superclass):
    """Proxy of C++ itkAcosImageFilterID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputCovertibleToDoubleCheck = _itkAcosImageFilterPython.itkAcosImageFilterID2ID2_InputCovertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkAcosImageFilterPython.itkAcosImageFilterID2ID2_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkAcosImageFilterPython.itkAcosImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkAcosImageFilterPython.delete_itkAcosImageFilterID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkAcosImageFilterID2ID2"""
        return _itkAcosImageFilterPython.itkAcosImageFilterID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAcosImageFilterID2ID2"""
        return _itkAcosImageFilterPython.itkAcosImageFilterID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAcosImageFilterID2ID2
        
        Create a new object of the class itkAcosImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAcosImageFilterID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAcosImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAcosImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAcosImageFilterID2ID2.GetPointer = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterID2ID2_GetPointer,None,itkAcosImageFilterID2ID2)
itkAcosImageFilterID2ID2_swigregister = _itkAcosImageFilterPython.itkAcosImageFilterID2ID2_swigregister
itkAcosImageFilterID2ID2_swigregister(itkAcosImageFilterID2ID2)

def itkAcosImageFilterID2ID2___New_orig__():
  """itkAcosImageFilterID2ID2___New_orig__()"""
  return _itkAcosImageFilterPython.itkAcosImageFilterID2ID2___New_orig__()

def itkAcosImageFilterID2ID2_cast(*args):
  """itkAcosImageFilterID2ID2_cast(itkLightObject obj) -> itkAcosImageFilterID2ID2"""
  return _itkAcosImageFilterPython.itkAcosImageFilterID2ID2_cast(*args)

class itkAcosImageFilterID3ID3(itkAcosImageFilterID3ID3_Superclass):
    """Proxy of C++ itkAcosImageFilterID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputCovertibleToDoubleCheck = _itkAcosImageFilterPython.itkAcosImageFilterID3ID3_InputCovertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkAcosImageFilterPython.itkAcosImageFilterID3ID3_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkAcosImageFilterPython.itkAcosImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkAcosImageFilterPython.delete_itkAcosImageFilterID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkAcosImageFilterID3ID3"""
        return _itkAcosImageFilterPython.itkAcosImageFilterID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAcosImageFilterID3ID3"""
        return _itkAcosImageFilterPython.itkAcosImageFilterID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAcosImageFilterID3ID3
        
        Create a new object of the class itkAcosImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAcosImageFilterID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAcosImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAcosImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAcosImageFilterID3ID3.GetPointer = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterID3ID3_GetPointer,None,itkAcosImageFilterID3ID3)
itkAcosImageFilterID3ID3_swigregister = _itkAcosImageFilterPython.itkAcosImageFilterID3ID3_swigregister
itkAcosImageFilterID3ID3_swigregister(itkAcosImageFilterID3ID3)

def itkAcosImageFilterID3ID3___New_orig__():
  """itkAcosImageFilterID3ID3___New_orig__()"""
  return _itkAcosImageFilterPython.itkAcosImageFilterID3ID3___New_orig__()

def itkAcosImageFilterID3ID3_cast(*args):
  """itkAcosImageFilterID3ID3_cast(itkLightObject obj) -> itkAcosImageFilterID3ID3"""
  return _itkAcosImageFilterPython.itkAcosImageFilterID3ID3_cast(*args)

class itkAcosImageFilterIF2IF2(itkAcosImageFilterIF2IF2_Superclass):
    """Proxy of C++ itkAcosImageFilterIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputCovertibleToDoubleCheck = _itkAcosImageFilterPython.itkAcosImageFilterIF2IF2_InputCovertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkAcosImageFilterPython.itkAcosImageFilterIF2IF2_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkAcosImageFilterPython.delete_itkAcosImageFilterIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkAcosImageFilterIF2IF2"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAcosImageFilterIF2IF2"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAcosImageFilterIF2IF2
        
        Create a new object of the class itkAcosImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAcosImageFilterIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAcosImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAcosImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAcosImageFilterIF2IF2.GetPointer = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIF2IF2_GetPointer,None,itkAcosImageFilterIF2IF2)
itkAcosImageFilterIF2IF2_swigregister = _itkAcosImageFilterPython.itkAcosImageFilterIF2IF2_swigregister
itkAcosImageFilterIF2IF2_swigregister(itkAcosImageFilterIF2IF2)

def itkAcosImageFilterIF2IF2___New_orig__():
  """itkAcosImageFilterIF2IF2___New_orig__()"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIF2IF2___New_orig__()

def itkAcosImageFilterIF2IF2_cast(*args):
  """itkAcosImageFilterIF2IF2_cast(itkLightObject obj) -> itkAcosImageFilterIF2IF2"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIF2IF2_cast(*args)

class itkAcosImageFilterIF3IF3(itkAcosImageFilterIF3IF3_Superclass):
    """Proxy of C++ itkAcosImageFilterIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputCovertibleToDoubleCheck = _itkAcosImageFilterPython.itkAcosImageFilterIF3IF3_InputCovertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkAcosImageFilterPython.itkAcosImageFilterIF3IF3_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkAcosImageFilterPython.delete_itkAcosImageFilterIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkAcosImageFilterIF3IF3"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAcosImageFilterIF3IF3"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAcosImageFilterIF3IF3
        
        Create a new object of the class itkAcosImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAcosImageFilterIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAcosImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAcosImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAcosImageFilterIF3IF3.GetPointer = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIF3IF3_GetPointer,None,itkAcosImageFilterIF3IF3)
itkAcosImageFilterIF3IF3_swigregister = _itkAcosImageFilterPython.itkAcosImageFilterIF3IF3_swigregister
itkAcosImageFilterIF3IF3_swigregister(itkAcosImageFilterIF3IF3)

def itkAcosImageFilterIF3IF3___New_orig__():
  """itkAcosImageFilterIF3IF3___New_orig__()"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIF3IF3___New_orig__()

def itkAcosImageFilterIF3IF3_cast(*args):
  """itkAcosImageFilterIF3IF3_cast(itkLightObject obj) -> itkAcosImageFilterIF3IF3"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIF3IF3_cast(*args)

class itkAcosImageFilterIUC2IUC2(itkAcosImageFilterIUC2IUC2_Superclass):
    """Proxy of C++ itkAcosImageFilterIUC2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputCovertibleToDoubleCheck = _itkAcosImageFilterPython.itkAcosImageFilterIUC2IUC2_InputCovertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkAcosImageFilterPython.itkAcosImageFilterIUC2IUC2_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkAcosImageFilterPython.delete_itkAcosImageFilterIUC2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkAcosImageFilterIUC2IUC2"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUC2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAcosImageFilterIUC2IUC2"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUC2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAcosImageFilterIUC2IUC2
        
        Create a new object of the class itkAcosImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAcosImageFilterIUC2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAcosImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAcosImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAcosImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIUC2IUC2_GetPointer,None,itkAcosImageFilterIUC2IUC2)
itkAcosImageFilterIUC2IUC2_swigregister = _itkAcosImageFilterPython.itkAcosImageFilterIUC2IUC2_swigregister
itkAcosImageFilterIUC2IUC2_swigregister(itkAcosImageFilterIUC2IUC2)

def itkAcosImageFilterIUC2IUC2___New_orig__():
  """itkAcosImageFilterIUC2IUC2___New_orig__()"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIUC2IUC2___New_orig__()

def itkAcosImageFilterIUC2IUC2_cast(*args):
  """itkAcosImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkAcosImageFilterIUC2IUC2"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIUC2IUC2_cast(*args)

class itkAcosImageFilterIUC3IUC3(itkAcosImageFilterIUC3IUC3_Superclass):
    """Proxy of C++ itkAcosImageFilterIUC3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputCovertibleToDoubleCheck = _itkAcosImageFilterPython.itkAcosImageFilterIUC3IUC3_InputCovertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkAcosImageFilterPython.itkAcosImageFilterIUC3IUC3_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkAcosImageFilterPython.delete_itkAcosImageFilterIUC3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkAcosImageFilterIUC3IUC3"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUC3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAcosImageFilterIUC3IUC3"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUC3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAcosImageFilterIUC3IUC3
        
        Create a new object of the class itkAcosImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAcosImageFilterIUC3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAcosImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAcosImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAcosImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIUC3IUC3_GetPointer,None,itkAcosImageFilterIUC3IUC3)
itkAcosImageFilterIUC3IUC3_swigregister = _itkAcosImageFilterPython.itkAcosImageFilterIUC3IUC3_swigregister
itkAcosImageFilterIUC3IUC3_swigregister(itkAcosImageFilterIUC3IUC3)

def itkAcosImageFilterIUC3IUC3___New_orig__():
  """itkAcosImageFilterIUC3IUC3___New_orig__()"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIUC3IUC3___New_orig__()

def itkAcosImageFilterIUC3IUC3_cast(*args):
  """itkAcosImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkAcosImageFilterIUC3IUC3"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIUC3IUC3_cast(*args)

class itkAcosImageFilterIUL2IUL2(itkAcosImageFilterIUL2IUL2_Superclass):
    """Proxy of C++ itkAcosImageFilterIUL2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputCovertibleToDoubleCheck = _itkAcosImageFilterPython.itkAcosImageFilterIUL2IUL2_InputCovertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkAcosImageFilterPython.itkAcosImageFilterIUL2IUL2_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUL2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkAcosImageFilterPython.delete_itkAcosImageFilterIUL2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkAcosImageFilterIUL2IUL2"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUL2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAcosImageFilterIUL2IUL2"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUL2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAcosImageFilterIUL2IUL2
        
        Create a new object of the class itkAcosImageFilterIUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAcosImageFilterIUL2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAcosImageFilterIUL2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAcosImageFilterIUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAcosImageFilterIUL2IUL2.GetPointer = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIUL2IUL2_GetPointer,None,itkAcosImageFilterIUL2IUL2)
itkAcosImageFilterIUL2IUL2_swigregister = _itkAcosImageFilterPython.itkAcosImageFilterIUL2IUL2_swigregister
itkAcosImageFilterIUL2IUL2_swigregister(itkAcosImageFilterIUL2IUL2)

def itkAcosImageFilterIUL2IUL2___New_orig__():
  """itkAcosImageFilterIUL2IUL2___New_orig__()"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIUL2IUL2___New_orig__()

def itkAcosImageFilterIUL2IUL2_cast(*args):
  """itkAcosImageFilterIUL2IUL2_cast(itkLightObject obj) -> itkAcosImageFilterIUL2IUL2"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIUL2IUL2_cast(*args)

class itkAcosImageFilterIUL3IUL3(itkAcosImageFilterIUL3IUL3_Superclass):
    """Proxy of C++ itkAcosImageFilterIUL3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputCovertibleToDoubleCheck = _itkAcosImageFilterPython.itkAcosImageFilterIUL3IUL3_InputCovertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkAcosImageFilterPython.itkAcosImageFilterIUL3IUL3_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUL3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkAcosImageFilterPython.delete_itkAcosImageFilterIUL3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkAcosImageFilterIUL3IUL3"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUL3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAcosImageFilterIUL3IUL3"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUL3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAcosImageFilterIUL3IUL3
        
        Create a new object of the class itkAcosImageFilterIUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAcosImageFilterIUL3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAcosImageFilterIUL3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAcosImageFilterIUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAcosImageFilterIUL3IUL3.GetPointer = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIUL3IUL3_GetPointer,None,itkAcosImageFilterIUL3IUL3)
itkAcosImageFilterIUL3IUL3_swigregister = _itkAcosImageFilterPython.itkAcosImageFilterIUL3IUL3_swigregister
itkAcosImageFilterIUL3IUL3_swigregister(itkAcosImageFilterIUL3IUL3)

def itkAcosImageFilterIUL3IUL3___New_orig__():
  """itkAcosImageFilterIUL3IUL3___New_orig__()"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIUL3IUL3___New_orig__()

def itkAcosImageFilterIUL3IUL3_cast(*args):
  """itkAcosImageFilterIUL3IUL3_cast(itkLightObject obj) -> itkAcosImageFilterIUL3IUL3"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIUL3IUL3_cast(*args)

class itkAcosImageFilterIUS2IUS2(itkAcosImageFilterIUS2IUS2_Superclass):
    """Proxy of C++ itkAcosImageFilterIUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputCovertibleToDoubleCheck = _itkAcosImageFilterPython.itkAcosImageFilterIUS2IUS2_InputCovertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkAcosImageFilterPython.itkAcosImageFilterIUS2IUS2_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkAcosImageFilterPython.delete_itkAcosImageFilterIUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkAcosImageFilterIUS2IUS2"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAcosImageFilterIUS2IUS2"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAcosImageFilterIUS2IUS2
        
        Create a new object of the class itkAcosImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAcosImageFilterIUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAcosImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAcosImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAcosImageFilterIUS2IUS2.GetPointer = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIUS2IUS2_GetPointer,None,itkAcosImageFilterIUS2IUS2)
itkAcosImageFilterIUS2IUS2_swigregister = _itkAcosImageFilterPython.itkAcosImageFilterIUS2IUS2_swigregister
itkAcosImageFilterIUS2IUS2_swigregister(itkAcosImageFilterIUS2IUS2)

def itkAcosImageFilterIUS2IUS2___New_orig__():
  """itkAcosImageFilterIUS2IUS2___New_orig__()"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIUS2IUS2___New_orig__()

def itkAcosImageFilterIUS2IUS2_cast(*args):
  """itkAcosImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkAcosImageFilterIUS2IUS2"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIUS2IUS2_cast(*args)

class itkAcosImageFilterIUS3IUS3(itkAcosImageFilterIUS3IUS3_Superclass):
    """Proxy of C++ itkAcosImageFilterIUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputCovertibleToDoubleCheck = _itkAcosImageFilterPython.itkAcosImageFilterIUS3IUS3_InputCovertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkAcosImageFilterPython.itkAcosImageFilterIUS3IUS3_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkAcosImageFilterPython.delete_itkAcosImageFilterIUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkAcosImageFilterIUS3IUS3"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAcosImageFilterIUS3IUS3"""
        return _itkAcosImageFilterPython.itkAcosImageFilterIUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAcosImageFilterIUS3IUS3
        
        Create a new object of the class itkAcosImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAcosImageFilterIUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAcosImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAcosImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAcosImageFilterIUS3IUS3.GetPointer = new_instancemethod(_itkAcosImageFilterPython.itkAcosImageFilterIUS3IUS3_GetPointer,None,itkAcosImageFilterIUS3IUS3)
itkAcosImageFilterIUS3IUS3_swigregister = _itkAcosImageFilterPython.itkAcosImageFilterIUS3IUS3_swigregister
itkAcosImageFilterIUS3IUS3_swigregister(itkAcosImageFilterIUS3IUS3)

def itkAcosImageFilterIUS3IUS3___New_orig__():
  """itkAcosImageFilterIUS3IUS3___New_orig__()"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIUS3IUS3___New_orig__()

def itkAcosImageFilterIUS3IUS3_cast(*args):
  """itkAcosImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkAcosImageFilterIUS3IUS3"""
  return _itkAcosImageFilterPython.itkAcosImageFilterIUS3IUS3_cast(*args)



