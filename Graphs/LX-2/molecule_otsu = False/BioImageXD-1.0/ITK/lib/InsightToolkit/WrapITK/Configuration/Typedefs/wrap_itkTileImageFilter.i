// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkTileImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkTileImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkTileImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkTileImageFilterJava
#endif
#ifdef SWIGLUA
%module itkTileImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkTileImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkTileImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkTileImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkTileImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkTileImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkTileImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkTileImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkTileImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkTileImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkTileImageFilterPython
#endif
#ifdef SWIGR
%module itkTileImageFilterR
#endif
#ifdef SWIGRUBY
%module itkTileImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkTileImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkTileImageFilterTcl
#endif
#ifdef SWIGXML
%module itkTileImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Compose.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkFixedArray.i
%import wrap_itkImageToImageFilterA.i


%include itk.i
%include wrap_itkTileImageFilter_ext.i


 class itkTileImageFilterID2ID2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  SameTypeCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkTileImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetLayout(itkFixedArrayUI2 const _arg);
     virtual itkFixedArrayUI2 GetLayout() const;
     virtual void SetDefaultPixelValue(double const _arg);
     virtual double GetDefaultPixelValue() const;
   private:
     itkTileImageFilterID2ID2(itkTileImageFilterID2ID2 const & arg0);
     void operator=(itkTileImageFilterID2ID2 const & arg0);
   protected:
     itkTileImageFilterID2ID2();
     ~itkTileImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateOutputInformation();
     virtual void GenerateData();
 };


 class itkTileImageFilterID2ID2_Pointer {
   public:
     itkTileImageFilterID2ID2_Pointer();
     itkTileImageFilterID2ID2_Pointer(itkTileImageFilterID2ID2_Pointer const & p);
     itkTileImageFilterID2ID2_Pointer(itkTileImageFilterID2ID2 * p);
     ~itkTileImageFilterID2ID2_Pointer();
     itkTileImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkTileImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkTileImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkTileImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkTileImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkTileImageFilterID2ID2_Pointer const & r) const;
     itkTileImageFilterID2ID2_Pointer & operator=(itkTileImageFilterID2ID2_Pointer const & r);
     itkTileImageFilterID2ID2_Pointer & operator=(itkTileImageFilterID2ID2 * r);
     itkTileImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkTileImageFilterID3ID3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  SameTypeCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkTileImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetLayout(itkFixedArrayUI3 const _arg);
     virtual itkFixedArrayUI3 GetLayout() const;
     virtual void SetDefaultPixelValue(double const _arg);
     virtual double GetDefaultPixelValue() const;
   private:
     itkTileImageFilterID3ID3(itkTileImageFilterID3ID3 const & arg0);
     void operator=(itkTileImageFilterID3ID3 const & arg0);
   protected:
     itkTileImageFilterID3ID3();
     ~itkTileImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateOutputInformation();
     virtual void GenerateData();
 };


 class itkTileImageFilterID3ID3_Pointer {
   public:
     itkTileImageFilterID3ID3_Pointer();
     itkTileImageFilterID3ID3_Pointer(itkTileImageFilterID3ID3_Pointer const & p);
     itkTileImageFilterID3ID3_Pointer(itkTileImageFilterID3ID3 * p);
     ~itkTileImageFilterID3ID3_Pointer();
     itkTileImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkTileImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkTileImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkTileImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkTileImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkTileImageFilterID3ID3_Pointer const & r) const;
     itkTileImageFilterID3ID3_Pointer & operator=(itkTileImageFilterID3ID3_Pointer const & r);
     itkTileImageFilterID3ID3_Pointer & operator=(itkTileImageFilterID3ID3 * r);
     itkTileImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkTileImageFilterIF2IF2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  SameTypeCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkTileImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetLayout(itkFixedArrayUI2 const _arg);
     virtual itkFixedArrayUI2 GetLayout() const;
     virtual void SetDefaultPixelValue(float const _arg);
     virtual float GetDefaultPixelValue() const;
   private:
     itkTileImageFilterIF2IF2(itkTileImageFilterIF2IF2 const & arg0);
     void operator=(itkTileImageFilterIF2IF2 const & arg0);
   protected:
     itkTileImageFilterIF2IF2();
     ~itkTileImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateOutputInformation();
     virtual void GenerateData();
 };


 class itkTileImageFilterIF2IF2_Pointer {
   public:
     itkTileImageFilterIF2IF2_Pointer();
     itkTileImageFilterIF2IF2_Pointer(itkTileImageFilterIF2IF2_Pointer const & p);
     itkTileImageFilterIF2IF2_Pointer(itkTileImageFilterIF2IF2 * p);
     ~itkTileImageFilterIF2IF2_Pointer();
     itkTileImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkTileImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkTileImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkTileImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkTileImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkTileImageFilterIF2IF2_Pointer const & r) const;
     itkTileImageFilterIF2IF2_Pointer & operator=(itkTileImageFilterIF2IF2_Pointer const & r);
     itkTileImageFilterIF2IF2_Pointer & operator=(itkTileImageFilterIF2IF2 * r);
     itkTileImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkTileImageFilterIF3IF3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  SameTypeCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkTileImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetLayout(itkFixedArrayUI3 const _arg);
     virtual itkFixedArrayUI3 GetLayout() const;
     virtual void SetDefaultPixelValue(float const _arg);
     virtual float GetDefaultPixelValue() const;
   private:
     itkTileImageFilterIF3IF3(itkTileImageFilterIF3IF3 const & arg0);
     void operator=(itkTileImageFilterIF3IF3 const & arg0);
   protected:
     itkTileImageFilterIF3IF3();
     ~itkTileImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateOutputInformation();
     virtual void GenerateData();
 };


 class itkTileImageFilterIF3IF3_Pointer {
   public:
     itkTileImageFilterIF3IF3_Pointer();
     itkTileImageFilterIF3IF3_Pointer(itkTileImageFilterIF3IF3_Pointer const & p);
     itkTileImageFilterIF3IF3_Pointer(itkTileImageFilterIF3IF3 * p);
     ~itkTileImageFilterIF3IF3_Pointer();
     itkTileImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkTileImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkTileImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkTileImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkTileImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkTileImageFilterIF3IF3_Pointer const & r) const;
     itkTileImageFilterIF3IF3_Pointer & operator=(itkTileImageFilterIF3IF3_Pointer const & r);
     itkTileImageFilterIF3IF3_Pointer & operator=(itkTileImageFilterIF3IF3 * r);
     itkTileImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkTileImageFilterIUC2IUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  SameTypeCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkTileImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetLayout(itkFixedArrayUI2 const _arg);
     virtual itkFixedArrayUI2 GetLayout() const;
     virtual void SetDefaultPixelValue(unsigned char const _arg);
     virtual unsigned char GetDefaultPixelValue() const;
   private:
     itkTileImageFilterIUC2IUC2(itkTileImageFilterIUC2IUC2 const & arg0);
     void operator=(itkTileImageFilterIUC2IUC2 const & arg0);
   protected:
     itkTileImageFilterIUC2IUC2();
     ~itkTileImageFilterIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateOutputInformation();
     virtual void GenerateData();
 };


 class itkTileImageFilterIUC2IUC2_Pointer {
   public:
     itkTileImageFilterIUC2IUC2_Pointer();
     itkTileImageFilterIUC2IUC2_Pointer(itkTileImageFilterIUC2IUC2_Pointer const & p);
     itkTileImageFilterIUC2IUC2_Pointer(itkTileImageFilterIUC2IUC2 * p);
     ~itkTileImageFilterIUC2IUC2_Pointer();
     itkTileImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkTileImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkTileImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkTileImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkTileImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkTileImageFilterIUC2IUC2_Pointer const & r) const;
     itkTileImageFilterIUC2IUC2_Pointer & operator=(itkTileImageFilterIUC2IUC2_Pointer const & r);
     itkTileImageFilterIUC2IUC2_Pointer & operator=(itkTileImageFilterIUC2IUC2 * r);
     itkTileImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkTileImageFilterIUC3IUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  SameTypeCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkTileImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetLayout(itkFixedArrayUI3 const _arg);
     virtual itkFixedArrayUI3 GetLayout() const;
     virtual void SetDefaultPixelValue(unsigned char const _arg);
     virtual unsigned char GetDefaultPixelValue() const;
   private:
     itkTileImageFilterIUC3IUC3(itkTileImageFilterIUC3IUC3 const & arg0);
     void operator=(itkTileImageFilterIUC3IUC3 const & arg0);
   protected:
     itkTileImageFilterIUC3IUC3();
     ~itkTileImageFilterIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateOutputInformation();
     virtual void GenerateData();
 };


 class itkTileImageFilterIUC3IUC3_Pointer {
   public:
     itkTileImageFilterIUC3IUC3_Pointer();
     itkTileImageFilterIUC3IUC3_Pointer(itkTileImageFilterIUC3IUC3_Pointer const & p);
     itkTileImageFilterIUC3IUC3_Pointer(itkTileImageFilterIUC3IUC3 * p);
     ~itkTileImageFilterIUC3IUC3_Pointer();
     itkTileImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkTileImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkTileImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkTileImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkTileImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkTileImageFilterIUC3IUC3_Pointer const & r) const;
     itkTileImageFilterIUC3IUC3_Pointer & operator=(itkTileImageFilterIUC3IUC3_Pointer const & r);
     itkTileImageFilterIUC3IUC3_Pointer & operator=(itkTileImageFilterIUC3IUC3 * r);
     itkTileImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkTileImageFilterIUL2IUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  SameTypeCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkTileImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetLayout(itkFixedArrayUI2 const _arg);
     virtual itkFixedArrayUI2 GetLayout() const;
     virtual void SetDefaultPixelValue(unsigned long const _arg);
     virtual unsigned long GetDefaultPixelValue() const;
   private:
     itkTileImageFilterIUL2IUL2(itkTileImageFilterIUL2IUL2 const & arg0);
     void operator=(itkTileImageFilterIUL2IUL2 const & arg0);
   protected:
     itkTileImageFilterIUL2IUL2();
     ~itkTileImageFilterIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateOutputInformation();
     virtual void GenerateData();
 };


 class itkTileImageFilterIUL2IUL2_Pointer {
   public:
     itkTileImageFilterIUL2IUL2_Pointer();
     itkTileImageFilterIUL2IUL2_Pointer(itkTileImageFilterIUL2IUL2_Pointer const & p);
     itkTileImageFilterIUL2IUL2_Pointer(itkTileImageFilterIUL2IUL2 * p);
     ~itkTileImageFilterIUL2IUL2_Pointer();
     itkTileImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkTileImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkTileImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkTileImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkTileImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkTileImageFilterIUL2IUL2_Pointer const & r) const;
     itkTileImageFilterIUL2IUL2_Pointer & operator=(itkTileImageFilterIUL2IUL2_Pointer const & r);
     itkTileImageFilterIUL2IUL2_Pointer & operator=(itkTileImageFilterIUL2IUL2 * r);
     itkTileImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkTileImageFilterIUL3IUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  SameTypeCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkTileImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetLayout(itkFixedArrayUI3 const _arg);
     virtual itkFixedArrayUI3 GetLayout() const;
     virtual void SetDefaultPixelValue(unsigned long const _arg);
     virtual unsigned long GetDefaultPixelValue() const;
   private:
     itkTileImageFilterIUL3IUL3(itkTileImageFilterIUL3IUL3 const & arg0);
     void operator=(itkTileImageFilterIUL3IUL3 const & arg0);
   protected:
     itkTileImageFilterIUL3IUL3();
     ~itkTileImageFilterIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateOutputInformation();
     virtual void GenerateData();
 };


 class itkTileImageFilterIUL3IUL3_Pointer {
   public:
     itkTileImageFilterIUL3IUL3_Pointer();
     itkTileImageFilterIUL3IUL3_Pointer(itkTileImageFilterIUL3IUL3_Pointer const & p);
     itkTileImageFilterIUL3IUL3_Pointer(itkTileImageFilterIUL3IUL3 * p);
     ~itkTileImageFilterIUL3IUL3_Pointer();
     itkTileImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkTileImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkTileImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkTileImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkTileImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkTileImageFilterIUL3IUL3_Pointer const & r) const;
     itkTileImageFilterIUL3IUL3_Pointer & operator=(itkTileImageFilterIUL3IUL3_Pointer const & r);
     itkTileImageFilterIUL3IUL3_Pointer & operator=(itkTileImageFilterIUL3IUL3 * r);
     itkTileImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkTileImageFilterIUS2IUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  SameTypeCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkTileImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetLayout(itkFixedArrayUI2 const _arg);
     virtual itkFixedArrayUI2 GetLayout() const;
     virtual void SetDefaultPixelValue(unsigned short const _arg);
     virtual unsigned short GetDefaultPixelValue() const;
   private:
     itkTileImageFilterIUS2IUS2(itkTileImageFilterIUS2IUS2 const & arg0);
     void operator=(itkTileImageFilterIUS2IUS2 const & arg0);
   protected:
     itkTileImageFilterIUS2IUS2();
     ~itkTileImageFilterIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateOutputInformation();
     virtual void GenerateData();
 };


 class itkTileImageFilterIUS2IUS2_Pointer {
   public:
     itkTileImageFilterIUS2IUS2_Pointer();
     itkTileImageFilterIUS2IUS2_Pointer(itkTileImageFilterIUS2IUS2_Pointer const & p);
     itkTileImageFilterIUS2IUS2_Pointer(itkTileImageFilterIUS2IUS2 * p);
     ~itkTileImageFilterIUS2IUS2_Pointer();
     itkTileImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkTileImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkTileImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkTileImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkTileImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkTileImageFilterIUS2IUS2_Pointer const & r) const;
     itkTileImageFilterIUS2IUS2_Pointer & operator=(itkTileImageFilterIUS2IUS2_Pointer const & r);
     itkTileImageFilterIUS2IUS2_Pointer & operator=(itkTileImageFilterIUS2IUS2 * r);
     itkTileImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkTileImageFilterIUS3IUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  SameTypeCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkTileImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetLayout(itkFixedArrayUI3 const _arg);
     virtual itkFixedArrayUI3 GetLayout() const;
     virtual void SetDefaultPixelValue(unsigned short const _arg);
     virtual unsigned short GetDefaultPixelValue() const;
   private:
     itkTileImageFilterIUS3IUS3(itkTileImageFilterIUS3IUS3 const & arg0);
     void operator=(itkTileImageFilterIUS3IUS3 const & arg0);
   protected:
     itkTileImageFilterIUS3IUS3();
     ~itkTileImageFilterIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateOutputInformation();
     virtual void GenerateData();
 };


 class itkTileImageFilterIUS3IUS3_Pointer {
   public:
     itkTileImageFilterIUS3IUS3_Pointer();
     itkTileImageFilterIUS3IUS3_Pointer(itkTileImageFilterIUS3IUS3_Pointer const & p);
     itkTileImageFilterIUS3IUS3_Pointer(itkTileImageFilterIUS3IUS3 * p);
     ~itkTileImageFilterIUS3IUS3_Pointer();
     itkTileImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkTileImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkTileImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkTileImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkTileImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkTileImageFilterIUS3IUS3_Pointer const & r) const;
     itkTileImageFilterIUS3IUS3_Pointer & operator=(itkTileImageFilterIUS3IUS3_Pointer const & r);
     itkTileImageFilterIUS3IUS3_Pointer & operator=(itkTileImageFilterIUS3IUS3 * r);
     itkTileImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


