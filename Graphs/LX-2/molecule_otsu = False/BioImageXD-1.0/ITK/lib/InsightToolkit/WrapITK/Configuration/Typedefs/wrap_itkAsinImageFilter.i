// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkAsinImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkAsinImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkAsinImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkAsinImageFilterJava
#endif
#ifdef SWIGLUA
%module itkAsinImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkAsinImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkAsinImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkAsinImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkAsinImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkAsinImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkAsinImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkAsinImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkAsinImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkAsinImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkAsinImageFilterPython
#endif
#ifdef SWIGR
%module itkAsinImageFilterR
#endif
#ifdef SWIGRUBY
%module itkAsinImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkAsinImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkAsinImageFilterTcl
#endif
#ifdef SWIGXML
%module itkAsinImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "UnaryPixelMath.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkInPlaceImageFilterA.i
%import wrap_ITKRegions.i


%include itk.i
%include wrap_itkAsinImageFilter_ext.i


 class itkAsinImageFilterID2ID2_Pointer {
   public:
     itkAsinImageFilterID2ID2_Pointer();
     itkAsinImageFilterID2ID2_Pointer(itkAsinImageFilterID2ID2_Pointer const & p);
     itkAsinImageFilterID2ID2_Pointer(itkAsinImageFilterID2ID2 * p);
     ~itkAsinImageFilterID2ID2_Pointer();
     itkAsinImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAsinImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkAsinImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkAsinImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkAsinImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkAsinImageFilterID2ID2_Pointer const & r) const;
     itkAsinImageFilterID2ID2_Pointer & operator=(itkAsinImageFilterID2ID2_Pointer const & r);
     itkAsinImageFilterID2ID2_Pointer & operator=(itkAsinImageFilterID2ID2 * r);
     itkAsinImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAsinImageFilterID2ID2_Superclass : public itkInPlaceImageFilterID2ID2 {
   public:
     static itkAsinImageFilterID2ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::Asin< double, double > & GetFunctor();
     itk::Functor::Asin< double, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Asin< double, double > const & functor);
   private:
     itkAsinImageFilterID2ID2_Superclass(itkAsinImageFilterID2ID2_Superclass const & arg0);
     void operator=(itkAsinImageFilterID2ID2_Superclass const & arg0);
   protected:
     itkAsinImageFilterID2ID2_Superclass();
     ~itkAsinImageFilterID2ID2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkAsinImageFilterID2ID2_Superclass_Pointer {
   public:
     itkAsinImageFilterID2ID2_Superclass_Pointer();
     itkAsinImageFilterID2ID2_Superclass_Pointer(itkAsinImageFilterID2ID2_Superclass_Pointer const & p);
     itkAsinImageFilterID2ID2_Superclass_Pointer(itkAsinImageFilterID2ID2_Superclass * p);
     ~itkAsinImageFilterID2ID2_Superclass_Pointer();
     itkAsinImageFilterID2ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAsinImageFilterID2ID2_Superclass * GetPointer() const;
     bool operator<(itkAsinImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator>(itkAsinImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkAsinImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkAsinImageFilterID2ID2_Superclass_Pointer const & r) const;
     itkAsinImageFilterID2ID2_Superclass_Pointer & operator=(itkAsinImageFilterID2ID2_Superclass_Pointer const & r);
     itkAsinImageFilterID2ID2_Superclass_Pointer & operator=(itkAsinImageFilterID2ID2_Superclass * r);
     itkAsinImageFilterID2ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAsinImageFilterID3ID3_Pointer {
   public:
     itkAsinImageFilterID3ID3_Pointer();
     itkAsinImageFilterID3ID3_Pointer(itkAsinImageFilterID3ID3_Pointer const & p);
     itkAsinImageFilterID3ID3_Pointer(itkAsinImageFilterID3ID3 * p);
     ~itkAsinImageFilterID3ID3_Pointer();
     itkAsinImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAsinImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkAsinImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkAsinImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkAsinImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkAsinImageFilterID3ID3_Pointer const & r) const;
     itkAsinImageFilterID3ID3_Pointer & operator=(itkAsinImageFilterID3ID3_Pointer const & r);
     itkAsinImageFilterID3ID3_Pointer & operator=(itkAsinImageFilterID3ID3 * r);
     itkAsinImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAsinImageFilterID3ID3_Superclass : public itkInPlaceImageFilterID3ID3 {
   public:
     static itkAsinImageFilterID3ID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::Asin< double, double > & GetFunctor();
     itk::Functor::Asin< double, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Asin< double, double > const & functor);
   private:
     itkAsinImageFilterID3ID3_Superclass(itkAsinImageFilterID3ID3_Superclass const & arg0);
     void operator=(itkAsinImageFilterID3ID3_Superclass const & arg0);
   protected:
     itkAsinImageFilterID3ID3_Superclass();
     ~itkAsinImageFilterID3ID3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkAsinImageFilterID3ID3_Superclass_Pointer {
   public:
     itkAsinImageFilterID3ID3_Superclass_Pointer();
     itkAsinImageFilterID3ID3_Superclass_Pointer(itkAsinImageFilterID3ID3_Superclass_Pointer const & p);
     itkAsinImageFilterID3ID3_Superclass_Pointer(itkAsinImageFilterID3ID3_Superclass * p);
     ~itkAsinImageFilterID3ID3_Superclass_Pointer();
     itkAsinImageFilterID3ID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAsinImageFilterID3ID3_Superclass * GetPointer() const;
     bool operator<(itkAsinImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator>(itkAsinImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator<=(itkAsinImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator>=(itkAsinImageFilterID3ID3_Superclass_Pointer const & r) const;
     itkAsinImageFilterID3ID3_Superclass_Pointer & operator=(itkAsinImageFilterID3ID3_Superclass_Pointer const & r);
     itkAsinImageFilterID3ID3_Superclass_Pointer & operator=(itkAsinImageFilterID3ID3_Superclass * r);
     itkAsinImageFilterID3ID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAsinImageFilterIF2IF2_Pointer {
   public:
     itkAsinImageFilterIF2IF2_Pointer();
     itkAsinImageFilterIF2IF2_Pointer(itkAsinImageFilterIF2IF2_Pointer const & p);
     itkAsinImageFilterIF2IF2_Pointer(itkAsinImageFilterIF2IF2 * p);
     ~itkAsinImageFilterIF2IF2_Pointer();
     itkAsinImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAsinImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkAsinImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkAsinImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkAsinImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkAsinImageFilterIF2IF2_Pointer const & r) const;
     itkAsinImageFilterIF2IF2_Pointer & operator=(itkAsinImageFilterIF2IF2_Pointer const & r);
     itkAsinImageFilterIF2IF2_Pointer & operator=(itkAsinImageFilterIF2IF2 * r);
     itkAsinImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAsinImageFilterIF2IF2_Superclass : public itkInPlaceImageFilterIF2IF2 {
   public:
     static itkAsinImageFilterIF2IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::Asin< float, float > & GetFunctor();
     itk::Functor::Asin< float, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Asin< float, float > const & functor);
   private:
     itkAsinImageFilterIF2IF2_Superclass(itkAsinImageFilterIF2IF2_Superclass const & arg0);
     void operator=(itkAsinImageFilterIF2IF2_Superclass const & arg0);
   protected:
     itkAsinImageFilterIF2IF2_Superclass();
     ~itkAsinImageFilterIF2IF2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkAsinImageFilterIF2IF2_Superclass_Pointer {
   public:
     itkAsinImageFilterIF2IF2_Superclass_Pointer();
     itkAsinImageFilterIF2IF2_Superclass_Pointer(itkAsinImageFilterIF2IF2_Superclass_Pointer const & p);
     itkAsinImageFilterIF2IF2_Superclass_Pointer(itkAsinImageFilterIF2IF2_Superclass * p);
     ~itkAsinImageFilterIF2IF2_Superclass_Pointer();
     itkAsinImageFilterIF2IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAsinImageFilterIF2IF2_Superclass * GetPointer() const;
     bool operator<(itkAsinImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator>(itkAsinImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkAsinImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkAsinImageFilterIF2IF2_Superclass_Pointer const & r) const;
     itkAsinImageFilterIF2IF2_Superclass_Pointer & operator=(itkAsinImageFilterIF2IF2_Superclass_Pointer const & r);
     itkAsinImageFilterIF2IF2_Superclass_Pointer & operator=(itkAsinImageFilterIF2IF2_Superclass * r);
     itkAsinImageFilterIF2IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAsinImageFilterIF3IF3_Pointer {
   public:
     itkAsinImageFilterIF3IF3_Pointer();
     itkAsinImageFilterIF3IF3_Pointer(itkAsinImageFilterIF3IF3_Pointer const & p);
     itkAsinImageFilterIF3IF3_Pointer(itkAsinImageFilterIF3IF3 * p);
     ~itkAsinImageFilterIF3IF3_Pointer();
     itkAsinImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAsinImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkAsinImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkAsinImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkAsinImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkAsinImageFilterIF3IF3_Pointer const & r) const;
     itkAsinImageFilterIF3IF3_Pointer & operator=(itkAsinImageFilterIF3IF3_Pointer const & r);
     itkAsinImageFilterIF3IF3_Pointer & operator=(itkAsinImageFilterIF3IF3 * r);
     itkAsinImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAsinImageFilterIF3IF3_Superclass : public itkInPlaceImageFilterIF3IF3 {
   public:
     static itkAsinImageFilterIF3IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::Asin< float, float > & GetFunctor();
     itk::Functor::Asin< float, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Asin< float, float > const & functor);
   private:
     itkAsinImageFilterIF3IF3_Superclass(itkAsinImageFilterIF3IF3_Superclass const & arg0);
     void operator=(itkAsinImageFilterIF3IF3_Superclass const & arg0);
   protected:
     itkAsinImageFilterIF3IF3_Superclass();
     ~itkAsinImageFilterIF3IF3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkAsinImageFilterIF3IF3_Superclass_Pointer {
   public:
     itkAsinImageFilterIF3IF3_Superclass_Pointer();
     itkAsinImageFilterIF3IF3_Superclass_Pointer(itkAsinImageFilterIF3IF3_Superclass_Pointer const & p);
     itkAsinImageFilterIF3IF3_Superclass_Pointer(itkAsinImageFilterIF3IF3_Superclass * p);
     ~itkAsinImageFilterIF3IF3_Superclass_Pointer();
     itkAsinImageFilterIF3IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAsinImageFilterIF3IF3_Superclass * GetPointer() const;
     bool operator<(itkAsinImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator>(itkAsinImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkAsinImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkAsinImageFilterIF3IF3_Superclass_Pointer const & r) const;
     itkAsinImageFilterIF3IF3_Superclass_Pointer & operator=(itkAsinImageFilterIF3IF3_Superclass_Pointer const & r);
     itkAsinImageFilterIF3IF3_Superclass_Pointer & operator=(itkAsinImageFilterIF3IF3_Superclass * r);
     itkAsinImageFilterIF3IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAsinImageFilterIUC2IUC2_Pointer {
   public:
     itkAsinImageFilterIUC2IUC2_Pointer();
     itkAsinImageFilterIUC2IUC2_Pointer(itkAsinImageFilterIUC2IUC2_Pointer const & p);
     itkAsinImageFilterIUC2IUC2_Pointer(itkAsinImageFilterIUC2IUC2 * p);
     ~itkAsinImageFilterIUC2IUC2_Pointer();
     itkAsinImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAsinImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkAsinImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkAsinImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkAsinImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkAsinImageFilterIUC2IUC2_Pointer const & r) const;
     itkAsinImageFilterIUC2IUC2_Pointer & operator=(itkAsinImageFilterIUC2IUC2_Pointer const & r);
     itkAsinImageFilterIUC2IUC2_Pointer & operator=(itkAsinImageFilterIUC2IUC2 * r);
     itkAsinImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAsinImageFilterIUC2IUC2_Superclass : public itkInPlaceImageFilterIUC2IUC2 {
   public:
     static itkAsinImageFilterIUC2IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::Asin< unsigned char, unsigned char > & GetFunctor();
     itk::Functor::Asin< unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Asin< unsigned char, unsigned char > const & functor);
   private:
     itkAsinImageFilterIUC2IUC2_Superclass(itkAsinImageFilterIUC2IUC2_Superclass const & arg0);
     void operator=(itkAsinImageFilterIUC2IUC2_Superclass const & arg0);
   protected:
     itkAsinImageFilterIUC2IUC2_Superclass();
     ~itkAsinImageFilterIUC2IUC2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkAsinImageFilterIUC2IUC2_Superclass_Pointer {
   public:
     itkAsinImageFilterIUC2IUC2_Superclass_Pointer();
     itkAsinImageFilterIUC2IUC2_Superclass_Pointer(itkAsinImageFilterIUC2IUC2_Superclass_Pointer const & p);
     itkAsinImageFilterIUC2IUC2_Superclass_Pointer(itkAsinImageFilterIUC2IUC2_Superclass * p);
     ~itkAsinImageFilterIUC2IUC2_Superclass_Pointer();
     itkAsinImageFilterIUC2IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAsinImageFilterIUC2IUC2_Superclass * GetPointer() const;
     bool operator<(itkAsinImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkAsinImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkAsinImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkAsinImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     itkAsinImageFilterIUC2IUC2_Superclass_Pointer & operator=(itkAsinImageFilterIUC2IUC2_Superclass_Pointer const & r);
     itkAsinImageFilterIUC2IUC2_Superclass_Pointer & operator=(itkAsinImageFilterIUC2IUC2_Superclass * r);
     itkAsinImageFilterIUC2IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAsinImageFilterIUC3IUC3_Pointer {
   public:
     itkAsinImageFilterIUC3IUC3_Pointer();
     itkAsinImageFilterIUC3IUC3_Pointer(itkAsinImageFilterIUC3IUC3_Pointer const & p);
     itkAsinImageFilterIUC3IUC3_Pointer(itkAsinImageFilterIUC3IUC3 * p);
     ~itkAsinImageFilterIUC3IUC3_Pointer();
     itkAsinImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAsinImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkAsinImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkAsinImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkAsinImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkAsinImageFilterIUC3IUC3_Pointer const & r) const;
     itkAsinImageFilterIUC3IUC3_Pointer & operator=(itkAsinImageFilterIUC3IUC3_Pointer const & r);
     itkAsinImageFilterIUC3IUC3_Pointer & operator=(itkAsinImageFilterIUC3IUC3 * r);
     itkAsinImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAsinImageFilterIUC3IUC3_Superclass : public itkInPlaceImageFilterIUC3IUC3 {
   public:
     static itkAsinImageFilterIUC3IUC3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::Asin< unsigned char, unsigned char > & GetFunctor();
     itk::Functor::Asin< unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Asin< unsigned char, unsigned char > const & functor);
   private:
     itkAsinImageFilterIUC3IUC3_Superclass(itkAsinImageFilterIUC3IUC3_Superclass const & arg0);
     void operator=(itkAsinImageFilterIUC3IUC3_Superclass const & arg0);
   protected:
     itkAsinImageFilterIUC3IUC3_Superclass();
     ~itkAsinImageFilterIUC3IUC3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkAsinImageFilterIUC3IUC3_Superclass_Pointer {
   public:
     itkAsinImageFilterIUC3IUC3_Superclass_Pointer();
     itkAsinImageFilterIUC3IUC3_Superclass_Pointer(itkAsinImageFilterIUC3IUC3_Superclass_Pointer const & p);
     itkAsinImageFilterIUC3IUC3_Superclass_Pointer(itkAsinImageFilterIUC3IUC3_Superclass * p);
     ~itkAsinImageFilterIUC3IUC3_Superclass_Pointer();
     itkAsinImageFilterIUC3IUC3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAsinImageFilterIUC3IUC3_Superclass * GetPointer() const;
     bool operator<(itkAsinImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>(itkAsinImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator<=(itkAsinImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>=(itkAsinImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     itkAsinImageFilterIUC3IUC3_Superclass_Pointer & operator=(itkAsinImageFilterIUC3IUC3_Superclass_Pointer const & r);
     itkAsinImageFilterIUC3IUC3_Superclass_Pointer & operator=(itkAsinImageFilterIUC3IUC3_Superclass * r);
     itkAsinImageFilterIUC3IUC3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAsinImageFilterIUL2IUL2_Pointer {
   public:
     itkAsinImageFilterIUL2IUL2_Pointer();
     itkAsinImageFilterIUL2IUL2_Pointer(itkAsinImageFilterIUL2IUL2_Pointer const & p);
     itkAsinImageFilterIUL2IUL2_Pointer(itkAsinImageFilterIUL2IUL2 * p);
     ~itkAsinImageFilterIUL2IUL2_Pointer();
     itkAsinImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAsinImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkAsinImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkAsinImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkAsinImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkAsinImageFilterIUL2IUL2_Pointer const & r) const;
     itkAsinImageFilterIUL2IUL2_Pointer & operator=(itkAsinImageFilterIUL2IUL2_Pointer const & r);
     itkAsinImageFilterIUL2IUL2_Pointer & operator=(itkAsinImageFilterIUL2IUL2 * r);
     itkAsinImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAsinImageFilterIUL2IUL2_Superclass : public itkInPlaceImageFilterIUL2IUL2 {
   public:
     static itkAsinImageFilterIUL2IUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::Asin< unsigned long, unsigned long > & GetFunctor();
     itk::Functor::Asin< unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Asin< unsigned long, unsigned long > const & functor);
   private:
     itkAsinImageFilterIUL2IUL2_Superclass(itkAsinImageFilterIUL2IUL2_Superclass const & arg0);
     void operator=(itkAsinImageFilterIUL2IUL2_Superclass const & arg0);
   protected:
     itkAsinImageFilterIUL2IUL2_Superclass();
     ~itkAsinImageFilterIUL2IUL2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkAsinImageFilterIUL2IUL2_Superclass_Pointer {
   public:
     itkAsinImageFilterIUL2IUL2_Superclass_Pointer();
     itkAsinImageFilterIUL2IUL2_Superclass_Pointer(itkAsinImageFilterIUL2IUL2_Superclass_Pointer const & p);
     itkAsinImageFilterIUL2IUL2_Superclass_Pointer(itkAsinImageFilterIUL2IUL2_Superclass * p);
     ~itkAsinImageFilterIUL2IUL2_Superclass_Pointer();
     itkAsinImageFilterIUL2IUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAsinImageFilterIUL2IUL2_Superclass * GetPointer() const;
     bool operator<(itkAsinImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>(itkAsinImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkAsinImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkAsinImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     itkAsinImageFilterIUL2IUL2_Superclass_Pointer & operator=(itkAsinImageFilterIUL2IUL2_Superclass_Pointer const & r);
     itkAsinImageFilterIUL2IUL2_Superclass_Pointer & operator=(itkAsinImageFilterIUL2IUL2_Superclass * r);
     itkAsinImageFilterIUL2IUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAsinImageFilterIUL3IUL3_Pointer {
   public:
     itkAsinImageFilterIUL3IUL3_Pointer();
     itkAsinImageFilterIUL3IUL3_Pointer(itkAsinImageFilterIUL3IUL3_Pointer const & p);
     itkAsinImageFilterIUL3IUL3_Pointer(itkAsinImageFilterIUL3IUL3 * p);
     ~itkAsinImageFilterIUL3IUL3_Pointer();
     itkAsinImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAsinImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkAsinImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkAsinImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkAsinImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkAsinImageFilterIUL3IUL3_Pointer const & r) const;
     itkAsinImageFilterIUL3IUL3_Pointer & operator=(itkAsinImageFilterIUL3IUL3_Pointer const & r);
     itkAsinImageFilterIUL3IUL3_Pointer & operator=(itkAsinImageFilterIUL3IUL3 * r);
     itkAsinImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAsinImageFilterIUL3IUL3_Superclass : public itkInPlaceImageFilterIUL3IUL3 {
   public:
     static itkAsinImageFilterIUL3IUL3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::Asin< unsigned long, unsigned long > & GetFunctor();
     itk::Functor::Asin< unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Asin< unsigned long, unsigned long > const & functor);
   private:
     itkAsinImageFilterIUL3IUL3_Superclass(itkAsinImageFilterIUL3IUL3_Superclass const & arg0);
     void operator=(itkAsinImageFilterIUL3IUL3_Superclass const & arg0);
   protected:
     itkAsinImageFilterIUL3IUL3_Superclass();
     ~itkAsinImageFilterIUL3IUL3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkAsinImageFilterIUL3IUL3_Superclass_Pointer {
   public:
     itkAsinImageFilterIUL3IUL3_Superclass_Pointer();
     itkAsinImageFilterIUL3IUL3_Superclass_Pointer(itkAsinImageFilterIUL3IUL3_Superclass_Pointer const & p);
     itkAsinImageFilterIUL3IUL3_Superclass_Pointer(itkAsinImageFilterIUL3IUL3_Superclass * p);
     ~itkAsinImageFilterIUL3IUL3_Superclass_Pointer();
     itkAsinImageFilterIUL3IUL3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAsinImageFilterIUL3IUL3_Superclass * GetPointer() const;
     bool operator<(itkAsinImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>(itkAsinImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator<=(itkAsinImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>=(itkAsinImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     itkAsinImageFilterIUL3IUL3_Superclass_Pointer & operator=(itkAsinImageFilterIUL3IUL3_Superclass_Pointer const & r);
     itkAsinImageFilterIUL3IUL3_Superclass_Pointer & operator=(itkAsinImageFilterIUL3IUL3_Superclass * r);
     itkAsinImageFilterIUL3IUL3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAsinImageFilterIUS2IUS2_Pointer {
   public:
     itkAsinImageFilterIUS2IUS2_Pointer();
     itkAsinImageFilterIUS2IUS2_Pointer(itkAsinImageFilterIUS2IUS2_Pointer const & p);
     itkAsinImageFilterIUS2IUS2_Pointer(itkAsinImageFilterIUS2IUS2 * p);
     ~itkAsinImageFilterIUS2IUS2_Pointer();
     itkAsinImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAsinImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkAsinImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkAsinImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkAsinImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkAsinImageFilterIUS2IUS2_Pointer const & r) const;
     itkAsinImageFilterIUS2IUS2_Pointer & operator=(itkAsinImageFilterIUS2IUS2_Pointer const & r);
     itkAsinImageFilterIUS2IUS2_Pointer & operator=(itkAsinImageFilterIUS2IUS2 * r);
     itkAsinImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAsinImageFilterIUS2IUS2_Superclass : public itkInPlaceImageFilterIUS2IUS2 {
   public:
     static itkAsinImageFilterIUS2IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::Asin< unsigned short, unsigned short > & GetFunctor();
     itk::Functor::Asin< unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Asin< unsigned short, unsigned short > const & functor);
   private:
     itkAsinImageFilterIUS2IUS2_Superclass(itkAsinImageFilterIUS2IUS2_Superclass const & arg0);
     void operator=(itkAsinImageFilterIUS2IUS2_Superclass const & arg0);
   protected:
     itkAsinImageFilterIUS2IUS2_Superclass();
     ~itkAsinImageFilterIUS2IUS2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkAsinImageFilterIUS2IUS2_Superclass_Pointer {
   public:
     itkAsinImageFilterIUS2IUS2_Superclass_Pointer();
     itkAsinImageFilterIUS2IUS2_Superclass_Pointer(itkAsinImageFilterIUS2IUS2_Superclass_Pointer const & p);
     itkAsinImageFilterIUS2IUS2_Superclass_Pointer(itkAsinImageFilterIUS2IUS2_Superclass * p);
     ~itkAsinImageFilterIUS2IUS2_Superclass_Pointer();
     itkAsinImageFilterIUS2IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAsinImageFilterIUS2IUS2_Superclass * GetPointer() const;
     bool operator<(itkAsinImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkAsinImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkAsinImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkAsinImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     itkAsinImageFilterIUS2IUS2_Superclass_Pointer & operator=(itkAsinImageFilterIUS2IUS2_Superclass_Pointer const & r);
     itkAsinImageFilterIUS2IUS2_Superclass_Pointer & operator=(itkAsinImageFilterIUS2IUS2_Superclass * r);
     itkAsinImageFilterIUS2IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAsinImageFilterIUS3IUS3_Pointer {
   public:
     itkAsinImageFilterIUS3IUS3_Pointer();
     itkAsinImageFilterIUS3IUS3_Pointer(itkAsinImageFilterIUS3IUS3_Pointer const & p);
     itkAsinImageFilterIUS3IUS3_Pointer(itkAsinImageFilterIUS3IUS3 * p);
     ~itkAsinImageFilterIUS3IUS3_Pointer();
     itkAsinImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAsinImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkAsinImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkAsinImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkAsinImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkAsinImageFilterIUS3IUS3_Pointer const & r) const;
     itkAsinImageFilterIUS3IUS3_Pointer & operator=(itkAsinImageFilterIUS3IUS3_Pointer const & r);
     itkAsinImageFilterIUS3IUS3_Pointer & operator=(itkAsinImageFilterIUS3IUS3 * r);
     itkAsinImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAsinImageFilterIUS3IUS3_Superclass : public itkInPlaceImageFilterIUS3IUS3 {
   public:
     static itkAsinImageFilterIUS3IUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::Asin< unsigned short, unsigned short > & GetFunctor();
     itk::Functor::Asin< unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Asin< unsigned short, unsigned short > const & functor);
   private:
     itkAsinImageFilterIUS3IUS3_Superclass(itkAsinImageFilterIUS3IUS3_Superclass const & arg0);
     void operator=(itkAsinImageFilterIUS3IUS3_Superclass const & arg0);
   protected:
     itkAsinImageFilterIUS3IUS3_Superclass();
     ~itkAsinImageFilterIUS3IUS3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkAsinImageFilterIUS3IUS3_Superclass_Pointer {
   public:
     itkAsinImageFilterIUS3IUS3_Superclass_Pointer();
     itkAsinImageFilterIUS3IUS3_Superclass_Pointer(itkAsinImageFilterIUS3IUS3_Superclass_Pointer const & p);
     itkAsinImageFilterIUS3IUS3_Superclass_Pointer(itkAsinImageFilterIUS3IUS3_Superclass * p);
     ~itkAsinImageFilterIUS3IUS3_Superclass_Pointer();
     itkAsinImageFilterIUS3IUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAsinImageFilterIUS3IUS3_Superclass * GetPointer() const;
     bool operator<(itkAsinImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>(itkAsinImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkAsinImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkAsinImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     itkAsinImageFilterIUS3IUS3_Superclass_Pointer & operator=(itkAsinImageFilterIUS3IUS3_Superclass_Pointer const & r);
     itkAsinImageFilterIUS3IUS3_Superclass_Pointer & operator=(itkAsinImageFilterIUS3IUS3_Superclass * r);
     itkAsinImageFilterIUS3IUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAsinImageFilterID2ID2 : public itkAsinImageFilterID2ID2_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkAsinImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAsinImageFilterID2ID2(itkAsinImageFilterID2ID2 const & arg0);
     void operator=(itkAsinImageFilterID2ID2 const & arg0);
   protected:
     itkAsinImageFilterID2ID2();
     ~itkAsinImageFilterID2ID2();
 };


 class itkAsinImageFilterID3ID3 : public itkAsinImageFilterID3ID3_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkAsinImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAsinImageFilterID3ID3(itkAsinImageFilterID3ID3 const & arg0);
     void operator=(itkAsinImageFilterID3ID3 const & arg0);
   protected:
     itkAsinImageFilterID3ID3();
     ~itkAsinImageFilterID3ID3();
 };


 class itkAsinImageFilterIF2IF2 : public itkAsinImageFilterIF2IF2_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkAsinImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAsinImageFilterIF2IF2(itkAsinImageFilterIF2IF2 const & arg0);
     void operator=(itkAsinImageFilterIF2IF2 const & arg0);
   protected:
     itkAsinImageFilterIF2IF2();
     ~itkAsinImageFilterIF2IF2();
 };


 class itkAsinImageFilterIF3IF3 : public itkAsinImageFilterIF3IF3_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkAsinImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAsinImageFilterIF3IF3(itkAsinImageFilterIF3IF3 const & arg0);
     void operator=(itkAsinImageFilterIF3IF3 const & arg0);
   protected:
     itkAsinImageFilterIF3IF3();
     ~itkAsinImageFilterIF3IF3();
 };


 class itkAsinImageFilterIUC2IUC2 : public itkAsinImageFilterIUC2IUC2_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkAsinImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAsinImageFilterIUC2IUC2(itkAsinImageFilterIUC2IUC2 const & arg0);
     void operator=(itkAsinImageFilterIUC2IUC2 const & arg0);
   protected:
     itkAsinImageFilterIUC2IUC2();
     ~itkAsinImageFilterIUC2IUC2();
 };


 class itkAsinImageFilterIUC3IUC3 : public itkAsinImageFilterIUC3IUC3_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkAsinImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAsinImageFilterIUC3IUC3(itkAsinImageFilterIUC3IUC3 const & arg0);
     void operator=(itkAsinImageFilterIUC3IUC3 const & arg0);
   protected:
     itkAsinImageFilterIUC3IUC3();
     ~itkAsinImageFilterIUC3IUC3();
 };


 class itkAsinImageFilterIUL2IUL2 : public itkAsinImageFilterIUL2IUL2_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkAsinImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAsinImageFilterIUL2IUL2(itkAsinImageFilterIUL2IUL2 const & arg0);
     void operator=(itkAsinImageFilterIUL2IUL2 const & arg0);
   protected:
     itkAsinImageFilterIUL2IUL2();
     ~itkAsinImageFilterIUL2IUL2();
 };


 class itkAsinImageFilterIUL3IUL3 : public itkAsinImageFilterIUL3IUL3_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkAsinImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAsinImageFilterIUL3IUL3(itkAsinImageFilterIUL3IUL3 const & arg0);
     void operator=(itkAsinImageFilterIUL3IUL3 const & arg0);
   protected:
     itkAsinImageFilterIUL3IUL3();
     ~itkAsinImageFilterIUL3IUL3();
 };


 class itkAsinImageFilterIUS2IUS2 : public itkAsinImageFilterIUS2IUS2_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkAsinImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAsinImageFilterIUS2IUS2(itkAsinImageFilterIUS2IUS2 const & arg0);
     void operator=(itkAsinImageFilterIUS2IUS2 const & arg0);
   protected:
     itkAsinImageFilterIUS2IUS2();
     ~itkAsinImageFilterIUS2IUS2();
 };


 class itkAsinImageFilterIUS3IUS3 : public itkAsinImageFilterIUS3IUS3_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkAsinImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAsinImageFilterIUS3IUS3(itkAsinImageFilterIUS3IUS3 const & arg0);
     void operator=(itkAsinImageFilterIUS3IUS3 const & arg0);
   protected:
     itkAsinImageFilterIUS3IUS3();
     ~itkAsinImageFilterIUS3IUS3();
 };


