# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkVectorImagePython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkVectorImagePython', [dirname(__file__)])
        except ImportError:
            import _itkVectorImagePython
            return _itkVectorImagePython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkVectorImagePython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkVectorImagePython = swig_import_helper()
    del swig_import_helper
else:
    import _itkVectorImagePython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkVariableLengthVectorPython
import pyBasePython
import ITKRegionsPython
import ITKCommonBasePython
import itkEventObjectsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
def itkVectorImageD3_New():
  return itkVectorImageD3.New()

def itkVectorImageF3_New():
  return itkVectorImageF3.New()

def itkVectorImageUS3_New():
  return itkVectorImageUS3.New()

def itkVectorImageUL3_New():
  return itkVectorImageUL3.New()

def itkVectorImageUC3_New():
  return itkVectorImageUC3.New()

def itkVectorImageD2_New():
  return itkVectorImageD2.New()

def itkVectorImageF2_New():
  return itkVectorImageF2.New()

def itkVectorImageUS2_New():
  return itkVectorImageUS2.New()

def itkVectorImageUL2_New():
  return itkVectorImageUL2.New()

def itkVectorImageUC2_New():
  return itkVectorImageUC2.New()

class itkVectorImageD2(itkImagePython.itkImageBase2):
    """Proxy of C++ itkVectorImageD2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkVectorImagePython.itkVectorImageD2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkVectorImagePython.itkVectorImageD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion2 region)
        SetRegions(self, itkSize2 size)
        """
        return _itkVectorImagePython.itkVectorImageD2_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, itkVariableLengthVectorD value)"""
        return _itkVectorImagePython.itkVectorImageD2_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex2 index, itkVariableLengthVectorD value)"""
        return _itkVectorImagePython.itkVectorImageD2_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex2 index) -> itkVariableLengthVectorD
        GetPixel(self, itkIndex2 index) -> itkVariableLengthVectorD
        """
        return _itkVectorImagePython.itkVectorImageD2_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> double
        GetBufferPointer(self) -> double
        """
        return _itkVectorImagePython.itkVectorImageD2_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,double)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,double)>
        """
        return _itkVectorImagePython.itkVectorImageD2_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,double)> container)"""
        return _itkVectorImagePython.itkVectorImageD2_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultVectorPixelAccessor<(double)>
        GetPixelAccessor(self) -> itk::DefaultVectorPixelAccessor<(double)>
        """
        return _itkVectorImagePython.itkVectorImageD2_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::VectorImageNeighborhoodAccessorFunctor<(itk::VectorImage<(double,2u)>)>
        GetNeighborhoodAccessor(self) -> itk::VectorImageNeighborhoodAccessorFunctor<(itk::VectorImage<(double,2u)>)>
        """
        return _itkVectorImagePython.itkVectorImageD2_GetNeighborhoodAccessor(self, *args)

    def SetVectorLength(self, *args):
        """SetVectorLength(self, unsigned int _arg)"""
        return _itkVectorImagePython.itkVectorImageD2_SetVectorLength(self, *args)

    def GetVectorLength(self):
        """GetVectorLength(self) -> unsigned int"""
        return _itkVectorImagePython.itkVectorImageD2_GetVectorLength(self)

    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageD2
    def cast(*args):
        """cast(itkLightObject obj) -> itkVectorImageD2"""
        return _itkVectorImagePython.itkVectorImageD2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVectorImageD2"""
        return _itkVectorImagePython.itkVectorImageD2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVectorImageD2
        
        Create a new object of the class itkVectorImageD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVectorImageD2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVectorImageD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorImageD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorImageD2.SetRegions = new_instancemethod(_itkVectorImagePython.itkVectorImageD2_SetRegions,None,itkVectorImageD2)
itkVectorImageD2.FillBuffer = new_instancemethod(_itkVectorImagePython.itkVectorImageD2_FillBuffer,None,itkVectorImageD2)
itkVectorImageD2.SetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageD2_SetPixel,None,itkVectorImageD2)
itkVectorImageD2.GetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageD2_GetPixel,None,itkVectorImageD2)
itkVectorImageD2.GetBufferPointer = new_instancemethod(_itkVectorImagePython.itkVectorImageD2_GetBufferPointer,None,itkVectorImageD2)
itkVectorImageD2.GetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageD2_GetPixelContainer,None,itkVectorImageD2)
itkVectorImageD2.SetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageD2_SetPixelContainer,None,itkVectorImageD2)
itkVectorImageD2.GetPixelAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageD2_GetPixelAccessor,None,itkVectorImageD2)
itkVectorImageD2.GetNeighborhoodAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageD2_GetNeighborhoodAccessor,None,itkVectorImageD2)
itkVectorImageD2.SetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageD2_SetVectorLength,None,itkVectorImageD2)
itkVectorImageD2.GetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageD2_GetVectorLength,None,itkVectorImageD2)
itkVectorImageD2.GetPointer = new_instancemethod(_itkVectorImagePython.itkVectorImageD2_GetPointer,None,itkVectorImageD2)
itkVectorImageD2_swigregister = _itkVectorImagePython.itkVectorImageD2_swigregister
itkVectorImageD2_swigregister(itkVectorImageD2)

def itkVectorImageD2___New_orig__():
  """itkVectorImageD2___New_orig__()"""
  return _itkVectorImagePython.itkVectorImageD2___New_orig__()

def itkVectorImageD2_cast(*args):
  """itkVectorImageD2_cast(itkLightObject obj) -> itkVectorImageD2"""
  return _itkVectorImagePython.itkVectorImageD2_cast(*args)

class itkVectorImageD3(itkImagePython.itkImageBase3):
    """Proxy of C++ itkVectorImageD3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkVectorImagePython.itkVectorImageD3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkVectorImagePython.itkVectorImageD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion3 region)
        SetRegions(self, itkSize3 size)
        """
        return _itkVectorImagePython.itkVectorImageD3_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, itkVariableLengthVectorD value)"""
        return _itkVectorImagePython.itkVectorImageD3_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex3 index, itkVariableLengthVectorD value)"""
        return _itkVectorImagePython.itkVectorImageD3_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex3 index) -> itkVariableLengthVectorD
        GetPixel(self, itkIndex3 index) -> itkVariableLengthVectorD
        """
        return _itkVectorImagePython.itkVectorImageD3_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> double
        GetBufferPointer(self) -> double
        """
        return _itkVectorImagePython.itkVectorImageD3_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,double)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,double)>
        """
        return _itkVectorImagePython.itkVectorImageD3_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,double)> container)"""
        return _itkVectorImagePython.itkVectorImageD3_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultVectorPixelAccessor<(double)>
        GetPixelAccessor(self) -> itk::DefaultVectorPixelAccessor<(double)>
        """
        return _itkVectorImagePython.itkVectorImageD3_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::VectorImageNeighborhoodAccessorFunctor<(itk::VectorImage<(double,3u)>)>
        GetNeighborhoodAccessor(self) -> itk::VectorImageNeighborhoodAccessorFunctor<(itk::VectorImage<(double,3u)>)>
        """
        return _itkVectorImagePython.itkVectorImageD3_GetNeighborhoodAccessor(self, *args)

    def SetVectorLength(self, *args):
        """SetVectorLength(self, unsigned int _arg)"""
        return _itkVectorImagePython.itkVectorImageD3_SetVectorLength(self, *args)

    def GetVectorLength(self):
        """GetVectorLength(self) -> unsigned int"""
        return _itkVectorImagePython.itkVectorImageD3_GetVectorLength(self)

    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageD3
    def cast(*args):
        """cast(itkLightObject obj) -> itkVectorImageD3"""
        return _itkVectorImagePython.itkVectorImageD3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVectorImageD3"""
        return _itkVectorImagePython.itkVectorImageD3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVectorImageD3
        
        Create a new object of the class itkVectorImageD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVectorImageD3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVectorImageD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorImageD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorImageD3.SetRegions = new_instancemethod(_itkVectorImagePython.itkVectorImageD3_SetRegions,None,itkVectorImageD3)
itkVectorImageD3.FillBuffer = new_instancemethod(_itkVectorImagePython.itkVectorImageD3_FillBuffer,None,itkVectorImageD3)
itkVectorImageD3.SetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageD3_SetPixel,None,itkVectorImageD3)
itkVectorImageD3.GetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageD3_GetPixel,None,itkVectorImageD3)
itkVectorImageD3.GetBufferPointer = new_instancemethod(_itkVectorImagePython.itkVectorImageD3_GetBufferPointer,None,itkVectorImageD3)
itkVectorImageD3.GetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageD3_GetPixelContainer,None,itkVectorImageD3)
itkVectorImageD3.SetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageD3_SetPixelContainer,None,itkVectorImageD3)
itkVectorImageD3.GetPixelAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageD3_GetPixelAccessor,None,itkVectorImageD3)
itkVectorImageD3.GetNeighborhoodAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageD3_GetNeighborhoodAccessor,None,itkVectorImageD3)
itkVectorImageD3.SetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageD3_SetVectorLength,None,itkVectorImageD3)
itkVectorImageD3.GetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageD3_GetVectorLength,None,itkVectorImageD3)
itkVectorImageD3.GetPointer = new_instancemethod(_itkVectorImagePython.itkVectorImageD3_GetPointer,None,itkVectorImageD3)
itkVectorImageD3_swigregister = _itkVectorImagePython.itkVectorImageD3_swigregister
itkVectorImageD3_swigregister(itkVectorImageD3)

def itkVectorImageD3___New_orig__():
  """itkVectorImageD3___New_orig__()"""
  return _itkVectorImagePython.itkVectorImageD3___New_orig__()

def itkVectorImageD3_cast(*args):
  """itkVectorImageD3_cast(itkLightObject obj) -> itkVectorImageD3"""
  return _itkVectorImagePython.itkVectorImageD3_cast(*args)

class itkVectorImageF2(itkImagePython.itkImageBase2):
    """Proxy of C++ itkVectorImageF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkVectorImagePython.itkVectorImageF2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkVectorImagePython.itkVectorImageF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion2 region)
        SetRegions(self, itkSize2 size)
        """
        return _itkVectorImagePython.itkVectorImageF2_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, itkVariableLengthVectorF value)"""
        return _itkVectorImagePython.itkVectorImageF2_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex2 index, itkVariableLengthVectorF value)"""
        return _itkVectorImagePython.itkVectorImageF2_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex2 index) -> itkVariableLengthVectorF
        GetPixel(self, itkIndex2 index) -> itkVariableLengthVectorF
        """
        return _itkVectorImagePython.itkVectorImageF2_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> float
        GetBufferPointer(self) -> float
        """
        return _itkVectorImagePython.itkVectorImageF2_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,float)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,float)>
        """
        return _itkVectorImagePython.itkVectorImageF2_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,float)> container)"""
        return _itkVectorImagePython.itkVectorImageF2_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultVectorPixelAccessor<(float)>
        GetPixelAccessor(self) -> itk::DefaultVectorPixelAccessor<(float)>
        """
        return _itkVectorImagePython.itkVectorImageF2_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::VectorImageNeighborhoodAccessorFunctor<(itk::VectorImage<(float,2u)>)>
        GetNeighborhoodAccessor(self) -> itk::VectorImageNeighborhoodAccessorFunctor<(itk::VectorImage<(float,2u)>)>
        """
        return _itkVectorImagePython.itkVectorImageF2_GetNeighborhoodAccessor(self, *args)

    def SetVectorLength(self, *args):
        """SetVectorLength(self, unsigned int _arg)"""
        return _itkVectorImagePython.itkVectorImageF2_SetVectorLength(self, *args)

    def GetVectorLength(self):
        """GetVectorLength(self) -> unsigned int"""
        return _itkVectorImagePython.itkVectorImageF2_GetVectorLength(self)

    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkVectorImageF2"""
        return _itkVectorImagePython.itkVectorImageF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVectorImageF2"""
        return _itkVectorImagePython.itkVectorImageF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVectorImageF2
        
        Create a new object of the class itkVectorImageF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVectorImageF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVectorImageF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorImageF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorImageF2.SetRegions = new_instancemethod(_itkVectorImagePython.itkVectorImageF2_SetRegions,None,itkVectorImageF2)
itkVectorImageF2.FillBuffer = new_instancemethod(_itkVectorImagePython.itkVectorImageF2_FillBuffer,None,itkVectorImageF2)
itkVectorImageF2.SetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageF2_SetPixel,None,itkVectorImageF2)
itkVectorImageF2.GetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageF2_GetPixel,None,itkVectorImageF2)
itkVectorImageF2.GetBufferPointer = new_instancemethod(_itkVectorImagePython.itkVectorImageF2_GetBufferPointer,None,itkVectorImageF2)
itkVectorImageF2.GetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageF2_GetPixelContainer,None,itkVectorImageF2)
itkVectorImageF2.SetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageF2_SetPixelContainer,None,itkVectorImageF2)
itkVectorImageF2.GetPixelAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageF2_GetPixelAccessor,None,itkVectorImageF2)
itkVectorImageF2.GetNeighborhoodAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageF2_GetNeighborhoodAccessor,None,itkVectorImageF2)
itkVectorImageF2.SetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageF2_SetVectorLength,None,itkVectorImageF2)
itkVectorImageF2.GetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageF2_GetVectorLength,None,itkVectorImageF2)
itkVectorImageF2.GetPointer = new_instancemethod(_itkVectorImagePython.itkVectorImageF2_GetPointer,None,itkVectorImageF2)
itkVectorImageF2_swigregister = _itkVectorImagePython.itkVectorImageF2_swigregister
itkVectorImageF2_swigregister(itkVectorImageF2)

def itkVectorImageF2___New_orig__():
  """itkVectorImageF2___New_orig__()"""
  return _itkVectorImagePython.itkVectorImageF2___New_orig__()

def itkVectorImageF2_cast(*args):
  """itkVectorImageF2_cast(itkLightObject obj) -> itkVectorImageF2"""
  return _itkVectorImagePython.itkVectorImageF2_cast(*args)

class itkVectorImageF3(itkImagePython.itkImageBase3):
    """Proxy of C++ itkVectorImageF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkVectorImagePython.itkVectorImageF3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkVectorImagePython.itkVectorImageF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion3 region)
        SetRegions(self, itkSize3 size)
        """
        return _itkVectorImagePython.itkVectorImageF3_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, itkVariableLengthVectorF value)"""
        return _itkVectorImagePython.itkVectorImageF3_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex3 index, itkVariableLengthVectorF value)"""
        return _itkVectorImagePython.itkVectorImageF3_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex3 index) -> itkVariableLengthVectorF
        GetPixel(self, itkIndex3 index) -> itkVariableLengthVectorF
        """
        return _itkVectorImagePython.itkVectorImageF3_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> float
        GetBufferPointer(self) -> float
        """
        return _itkVectorImagePython.itkVectorImageF3_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,float)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,float)>
        """
        return _itkVectorImagePython.itkVectorImageF3_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,float)> container)"""
        return _itkVectorImagePython.itkVectorImageF3_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultVectorPixelAccessor<(float)>
        GetPixelAccessor(self) -> itk::DefaultVectorPixelAccessor<(float)>
        """
        return _itkVectorImagePython.itkVectorImageF3_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::VectorImageNeighborhoodAccessorFunctor<(itk::VectorImage<(float,3u)>)>
        GetNeighborhoodAccessor(self) -> itk::VectorImageNeighborhoodAccessorFunctor<(itk::VectorImage<(float,3u)>)>
        """
        return _itkVectorImagePython.itkVectorImageF3_GetNeighborhoodAccessor(self, *args)

    def SetVectorLength(self, *args):
        """SetVectorLength(self, unsigned int _arg)"""
        return _itkVectorImagePython.itkVectorImageF3_SetVectorLength(self, *args)

    def GetVectorLength(self):
        """GetVectorLength(self) -> unsigned int"""
        return _itkVectorImagePython.itkVectorImageF3_GetVectorLength(self)

    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkVectorImageF3"""
        return _itkVectorImagePython.itkVectorImageF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVectorImageF3"""
        return _itkVectorImagePython.itkVectorImageF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVectorImageF3
        
        Create a new object of the class itkVectorImageF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVectorImageF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVectorImageF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorImageF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorImageF3.SetRegions = new_instancemethod(_itkVectorImagePython.itkVectorImageF3_SetRegions,None,itkVectorImageF3)
itkVectorImageF3.FillBuffer = new_instancemethod(_itkVectorImagePython.itkVectorImageF3_FillBuffer,None,itkVectorImageF3)
itkVectorImageF3.SetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageF3_SetPixel,None,itkVectorImageF3)
itkVectorImageF3.GetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageF3_GetPixel,None,itkVectorImageF3)
itkVectorImageF3.GetBufferPointer = new_instancemethod(_itkVectorImagePython.itkVectorImageF3_GetBufferPointer,None,itkVectorImageF3)
itkVectorImageF3.GetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageF3_GetPixelContainer,None,itkVectorImageF3)
itkVectorImageF3.SetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageF3_SetPixelContainer,None,itkVectorImageF3)
itkVectorImageF3.GetPixelAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageF3_GetPixelAccessor,None,itkVectorImageF3)
itkVectorImageF3.GetNeighborhoodAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageF3_GetNeighborhoodAccessor,None,itkVectorImageF3)
itkVectorImageF3.SetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageF3_SetVectorLength,None,itkVectorImageF3)
itkVectorImageF3.GetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageF3_GetVectorLength,None,itkVectorImageF3)
itkVectorImageF3.GetPointer = new_instancemethod(_itkVectorImagePython.itkVectorImageF3_GetPointer,None,itkVectorImageF3)
itkVectorImageF3_swigregister = _itkVectorImagePython.itkVectorImageF3_swigregister
itkVectorImageF3_swigregister(itkVectorImageF3)

def itkVectorImageF3___New_orig__():
  """itkVectorImageF3___New_orig__()"""
  return _itkVectorImagePython.itkVectorImageF3___New_orig__()

def itkVectorImageF3_cast(*args):
  """itkVectorImageF3_cast(itkLightObject obj) -> itkVectorImageF3"""
  return _itkVectorImagePython.itkVectorImageF3_cast(*args)

class itkVectorImageUC2(itkImagePython.itkImageBase2):
    """Proxy of C++ itkVectorImageUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkVectorImagePython.itkVectorImageUC2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkVectorImagePython.itkVectorImageUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion2 region)
        SetRegions(self, itkSize2 size)
        """
        return _itkVectorImagePython.itkVectorImageUC2_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, itkVariableLengthVectorUC value)"""
        return _itkVectorImagePython.itkVectorImageUC2_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex2 index, itkVariableLengthVectorUC value)"""
        return _itkVectorImagePython.itkVectorImageUC2_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex2 index) -> itkVariableLengthVectorUC
        GetPixel(self, itkIndex2 index) -> itkVariableLengthVectorUC
        """
        return _itkVectorImagePython.itkVectorImageUC2_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> unsigned char
        GetBufferPointer(self) -> unsigned char
        """
        return _itkVectorImagePython.itkVectorImageUC2_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,unsigned char)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,unsigned char)>
        """
        return _itkVectorImagePython.itkVectorImageUC2_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,unsigned char)> container)"""
        return _itkVectorImagePython.itkVectorImageUC2_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultVectorPixelAccessor<(unsigned char)>
        GetPixelAccessor(self) -> itk::DefaultVectorPixelAccessor<(unsigned char)>
        """
        return _itkVectorImagePython.itkVectorImageUC2_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::VectorImageNeighborhoodAccessorFunctor<(itk::VectorImage<(unsigned char,2u)>)>
        GetNeighborhoodAccessor(self) -> itk::VectorImageNeighborhoodAccessorFunctor<(itk::VectorImage<(unsigned char,2u)>)>
        """
        return _itkVectorImagePython.itkVectorImageUC2_GetNeighborhoodAccessor(self, *args)

    def SetVectorLength(self, *args):
        """SetVectorLength(self, unsigned int _arg)"""
        return _itkVectorImagePython.itkVectorImageUC2_SetVectorLength(self, *args)

    def GetVectorLength(self):
        """GetVectorLength(self) -> unsigned int"""
        return _itkVectorImagePython.itkVectorImageUC2_GetVectorLength(self)

    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkVectorImageUC2"""
        return _itkVectorImagePython.itkVectorImageUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVectorImageUC2"""
        return _itkVectorImagePython.itkVectorImageUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVectorImageUC2
        
        Create a new object of the class itkVectorImageUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVectorImageUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVectorImageUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorImageUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorImageUC2.SetRegions = new_instancemethod(_itkVectorImagePython.itkVectorImageUC2_SetRegions,None,itkVectorImageUC2)
itkVectorImageUC2.FillBuffer = new_instancemethod(_itkVectorImagePython.itkVectorImageUC2_FillBuffer,None,itkVectorImageUC2)
itkVectorImageUC2.SetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageUC2_SetPixel,None,itkVectorImageUC2)
itkVectorImageUC2.GetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageUC2_GetPixel,None,itkVectorImageUC2)
itkVectorImageUC2.GetBufferPointer = new_instancemethod(_itkVectorImagePython.itkVectorImageUC2_GetBufferPointer,None,itkVectorImageUC2)
itkVectorImageUC2.GetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageUC2_GetPixelContainer,None,itkVectorImageUC2)
itkVectorImageUC2.SetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageUC2_SetPixelContainer,None,itkVectorImageUC2)
itkVectorImageUC2.GetPixelAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageUC2_GetPixelAccessor,None,itkVectorImageUC2)
itkVectorImageUC2.GetNeighborhoodAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageUC2_GetNeighborhoodAccessor,None,itkVectorImageUC2)
itkVectorImageUC2.SetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageUC2_SetVectorLength,None,itkVectorImageUC2)
itkVectorImageUC2.GetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageUC2_GetVectorLength,None,itkVectorImageUC2)
itkVectorImageUC2.GetPointer = new_instancemethod(_itkVectorImagePython.itkVectorImageUC2_GetPointer,None,itkVectorImageUC2)
itkVectorImageUC2_swigregister = _itkVectorImagePython.itkVectorImageUC2_swigregister
itkVectorImageUC2_swigregister(itkVectorImageUC2)

def itkVectorImageUC2___New_orig__():
  """itkVectorImageUC2___New_orig__()"""
  return _itkVectorImagePython.itkVectorImageUC2___New_orig__()

def itkVectorImageUC2_cast(*args):
  """itkVectorImageUC2_cast(itkLightObject obj) -> itkVectorImageUC2"""
  return _itkVectorImagePython.itkVectorImageUC2_cast(*args)

class itkVectorImageUC3(itkImagePython.itkImageBase3):
    """Proxy of C++ itkVectorImageUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkVectorImagePython.itkVectorImageUC3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkVectorImagePython.itkVectorImageUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion3 region)
        SetRegions(self, itkSize3 size)
        """
        return _itkVectorImagePython.itkVectorImageUC3_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, itkVariableLengthVectorUC value)"""
        return _itkVectorImagePython.itkVectorImageUC3_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex3 index, itkVariableLengthVectorUC value)"""
        return _itkVectorImagePython.itkVectorImageUC3_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex3 index) -> itkVariableLengthVectorUC
        GetPixel(self, itkIndex3 index) -> itkVariableLengthVectorUC
        """
        return _itkVectorImagePython.itkVectorImageUC3_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> unsigned char
        GetBufferPointer(self) -> unsigned char
        """
        return _itkVectorImagePython.itkVectorImageUC3_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,unsigned char)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,unsigned char)>
        """
        return _itkVectorImagePython.itkVectorImageUC3_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,unsigned char)> container)"""
        return _itkVectorImagePython.itkVectorImageUC3_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultVectorPixelAccessor<(unsigned char)>
        GetPixelAccessor(self) -> itk::DefaultVectorPixelAccessor<(unsigned char)>
        """
        return _itkVectorImagePython.itkVectorImageUC3_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::VectorImageNeighborhoodAccessorFunctor<(itk::VectorImage<(unsigned char,3u)>)>
        GetNeighborhoodAccessor(self) -> itk::VectorImageNeighborhoodAccessorFunctor<(itk::VectorImage<(unsigned char,3u)>)>
        """
        return _itkVectorImagePython.itkVectorImageUC3_GetNeighborhoodAccessor(self, *args)

    def SetVectorLength(self, *args):
        """SetVectorLength(self, unsigned int _arg)"""
        return _itkVectorImagePython.itkVectorImageUC3_SetVectorLength(self, *args)

    def GetVectorLength(self):
        """GetVectorLength(self) -> unsigned int"""
        return _itkVectorImagePython.itkVectorImageUC3_GetVectorLength(self)

    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkVectorImageUC3"""
        return _itkVectorImagePython.itkVectorImageUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVectorImageUC3"""
        return _itkVectorImagePython.itkVectorImageUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVectorImageUC3
        
        Create a new object of the class itkVectorImageUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVectorImageUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVectorImageUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorImageUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorImageUC3.SetRegions = new_instancemethod(_itkVectorImagePython.itkVectorImageUC3_SetRegions,None,itkVectorImageUC3)
itkVectorImageUC3.FillBuffer = new_instancemethod(_itkVectorImagePython.itkVectorImageUC3_FillBuffer,None,itkVectorImageUC3)
itkVectorImageUC3.SetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageUC3_SetPixel,None,itkVectorImageUC3)
itkVectorImageUC3.GetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageUC3_GetPixel,None,itkVectorImageUC3)
itkVectorImageUC3.GetBufferPointer = new_instancemethod(_itkVectorImagePython.itkVectorImageUC3_GetBufferPointer,None,itkVectorImageUC3)
itkVectorImageUC3.GetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageUC3_GetPixelContainer,None,itkVectorImageUC3)
itkVectorImageUC3.SetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageUC3_SetPixelContainer,None,itkVectorImageUC3)
itkVectorImageUC3.GetPixelAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageUC3_GetPixelAccessor,None,itkVectorImageUC3)
itkVectorImageUC3.GetNeighborhoodAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageUC3_GetNeighborhoodAccessor,None,itkVectorImageUC3)
itkVectorImageUC3.SetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageUC3_SetVectorLength,None,itkVectorImageUC3)
itkVectorImageUC3.GetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageUC3_GetVectorLength,None,itkVectorImageUC3)
itkVectorImageUC3.GetPointer = new_instancemethod(_itkVectorImagePython.itkVectorImageUC3_GetPointer,None,itkVectorImageUC3)
itkVectorImageUC3_swigregister = _itkVectorImagePython.itkVectorImageUC3_swigregister
itkVectorImageUC3_swigregister(itkVectorImageUC3)

def itkVectorImageUC3___New_orig__():
  """itkVectorImageUC3___New_orig__()"""
  return _itkVectorImagePython.itkVectorImageUC3___New_orig__()

def itkVectorImageUC3_cast(*args):
  """itkVectorImageUC3_cast(itkLightObject obj) -> itkVectorImageUC3"""
  return _itkVectorImagePython.itkVectorImageUC3_cast(*args)

class itkVectorImageUL2(itkImagePython.itkImageBase2):
    """Proxy of C++ itkVectorImageUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkVectorImagePython.itkVectorImageUL2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkVectorImagePython.itkVectorImageUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion2 region)
        SetRegions(self, itkSize2 size)
        """
        return _itkVectorImagePython.itkVectorImageUL2_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, itkVariableLengthVectorUL value)"""
        return _itkVectorImagePython.itkVectorImageUL2_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex2 index, itkVariableLengthVectorUL value)"""
        return _itkVectorImagePython.itkVectorImageUL2_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex2 index) -> itkVariableLengthVectorUL
        GetPixel(self, itkIndex2 index) -> itkVariableLengthVectorUL
        """
        return _itkVectorImagePython.itkVectorImageUL2_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> unsigned long
        GetBufferPointer(self) -> unsigned long
        """
        return _itkVectorImagePython.itkVectorImageUL2_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,unsigned long)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,unsigned long)>
        """
        return _itkVectorImagePython.itkVectorImageUL2_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,unsigned long)> container)"""
        return _itkVectorImagePython.itkVectorImageUL2_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultVectorPixelAccessor<(unsigned long)>
        GetPixelAccessor(self) -> itk::DefaultVectorPixelAccessor<(unsigned long)>
        """
        return _itkVectorImagePython.itkVectorImageUL2_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::VectorImageNeighborhoodAccessorFunctor<(itk::VectorImage<(unsigned long,2u)>)>
        GetNeighborhoodAccessor(self) -> itk::VectorImageNeighborhoodAccessorFunctor<(itk::VectorImage<(unsigned long,2u)>)>
        """
        return _itkVectorImagePython.itkVectorImageUL2_GetNeighborhoodAccessor(self, *args)

    def SetVectorLength(self, *args):
        """SetVectorLength(self, unsigned int _arg)"""
        return _itkVectorImagePython.itkVectorImageUL2_SetVectorLength(self, *args)

    def GetVectorLength(self):
        """GetVectorLength(self) -> unsigned int"""
        return _itkVectorImagePython.itkVectorImageUL2_GetVectorLength(self)

    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkVectorImageUL2"""
        return _itkVectorImagePython.itkVectorImageUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVectorImageUL2"""
        return _itkVectorImagePython.itkVectorImageUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVectorImageUL2
        
        Create a new object of the class itkVectorImageUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVectorImageUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVectorImageUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorImageUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorImageUL2.SetRegions = new_instancemethod(_itkVectorImagePython.itkVectorImageUL2_SetRegions,None,itkVectorImageUL2)
itkVectorImageUL2.FillBuffer = new_instancemethod(_itkVectorImagePython.itkVectorImageUL2_FillBuffer,None,itkVectorImageUL2)
itkVectorImageUL2.SetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageUL2_SetPixel,None,itkVectorImageUL2)
itkVectorImageUL2.GetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageUL2_GetPixel,None,itkVectorImageUL2)
itkVectorImageUL2.GetBufferPointer = new_instancemethod(_itkVectorImagePython.itkVectorImageUL2_GetBufferPointer,None,itkVectorImageUL2)
itkVectorImageUL2.GetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageUL2_GetPixelContainer,None,itkVectorImageUL2)
itkVectorImageUL2.SetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageUL2_SetPixelContainer,None,itkVectorImageUL2)
itkVectorImageUL2.GetPixelAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageUL2_GetPixelAccessor,None,itkVectorImageUL2)
itkVectorImageUL2.GetNeighborhoodAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageUL2_GetNeighborhoodAccessor,None,itkVectorImageUL2)
itkVectorImageUL2.SetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageUL2_SetVectorLength,None,itkVectorImageUL2)
itkVectorImageUL2.GetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageUL2_GetVectorLength,None,itkVectorImageUL2)
itkVectorImageUL2.GetPointer = new_instancemethod(_itkVectorImagePython.itkVectorImageUL2_GetPointer,None,itkVectorImageUL2)
itkVectorImageUL2_swigregister = _itkVectorImagePython.itkVectorImageUL2_swigregister
itkVectorImageUL2_swigregister(itkVectorImageUL2)

def itkVectorImageUL2___New_orig__():
  """itkVectorImageUL2___New_orig__()"""
  return _itkVectorImagePython.itkVectorImageUL2___New_orig__()

def itkVectorImageUL2_cast(*args):
  """itkVectorImageUL2_cast(itkLightObject obj) -> itkVectorImageUL2"""
  return _itkVectorImagePython.itkVectorImageUL2_cast(*args)

class itkVectorImageUL3(itkImagePython.itkImageBase3):
    """Proxy of C++ itkVectorImageUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkVectorImagePython.itkVectorImageUL3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkVectorImagePython.itkVectorImageUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion3 region)
        SetRegions(self, itkSize3 size)
        """
        return _itkVectorImagePython.itkVectorImageUL3_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, itkVariableLengthVectorUL value)"""
        return _itkVectorImagePython.itkVectorImageUL3_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex3 index, itkVariableLengthVectorUL value)"""
        return _itkVectorImagePython.itkVectorImageUL3_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex3 index) -> itkVariableLengthVectorUL
        GetPixel(self, itkIndex3 index) -> itkVariableLengthVectorUL
        """
        return _itkVectorImagePython.itkVectorImageUL3_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> unsigned long
        GetBufferPointer(self) -> unsigned long
        """
        return _itkVectorImagePython.itkVectorImageUL3_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,unsigned long)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,unsigned long)>
        """
        return _itkVectorImagePython.itkVectorImageUL3_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,unsigned long)> container)"""
        return _itkVectorImagePython.itkVectorImageUL3_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultVectorPixelAccessor<(unsigned long)>
        GetPixelAccessor(self) -> itk::DefaultVectorPixelAccessor<(unsigned long)>
        """
        return _itkVectorImagePython.itkVectorImageUL3_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::VectorImageNeighborhoodAccessorFunctor<(itk::VectorImage<(unsigned long,3u)>)>
        GetNeighborhoodAccessor(self) -> itk::VectorImageNeighborhoodAccessorFunctor<(itk::VectorImage<(unsigned long,3u)>)>
        """
        return _itkVectorImagePython.itkVectorImageUL3_GetNeighborhoodAccessor(self, *args)

    def SetVectorLength(self, *args):
        """SetVectorLength(self, unsigned int _arg)"""
        return _itkVectorImagePython.itkVectorImageUL3_SetVectorLength(self, *args)

    def GetVectorLength(self):
        """GetVectorLength(self) -> unsigned int"""
        return _itkVectorImagePython.itkVectorImageUL3_GetVectorLength(self)

    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkVectorImageUL3"""
        return _itkVectorImagePython.itkVectorImageUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVectorImageUL3"""
        return _itkVectorImagePython.itkVectorImageUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVectorImageUL3
        
        Create a new object of the class itkVectorImageUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVectorImageUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVectorImageUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorImageUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorImageUL3.SetRegions = new_instancemethod(_itkVectorImagePython.itkVectorImageUL3_SetRegions,None,itkVectorImageUL3)
itkVectorImageUL3.FillBuffer = new_instancemethod(_itkVectorImagePython.itkVectorImageUL3_FillBuffer,None,itkVectorImageUL3)
itkVectorImageUL3.SetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageUL3_SetPixel,None,itkVectorImageUL3)
itkVectorImageUL3.GetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageUL3_GetPixel,None,itkVectorImageUL3)
itkVectorImageUL3.GetBufferPointer = new_instancemethod(_itkVectorImagePython.itkVectorImageUL3_GetBufferPointer,None,itkVectorImageUL3)
itkVectorImageUL3.GetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageUL3_GetPixelContainer,None,itkVectorImageUL3)
itkVectorImageUL3.SetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageUL3_SetPixelContainer,None,itkVectorImageUL3)
itkVectorImageUL3.GetPixelAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageUL3_GetPixelAccessor,None,itkVectorImageUL3)
itkVectorImageUL3.GetNeighborhoodAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageUL3_GetNeighborhoodAccessor,None,itkVectorImageUL3)
itkVectorImageUL3.SetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageUL3_SetVectorLength,None,itkVectorImageUL3)
itkVectorImageUL3.GetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageUL3_GetVectorLength,None,itkVectorImageUL3)
itkVectorImageUL3.GetPointer = new_instancemethod(_itkVectorImagePython.itkVectorImageUL3_GetPointer,None,itkVectorImageUL3)
itkVectorImageUL3_swigregister = _itkVectorImagePython.itkVectorImageUL3_swigregister
itkVectorImageUL3_swigregister(itkVectorImageUL3)

def itkVectorImageUL3___New_orig__():
  """itkVectorImageUL3___New_orig__()"""
  return _itkVectorImagePython.itkVectorImageUL3___New_orig__()

def itkVectorImageUL3_cast(*args):
  """itkVectorImageUL3_cast(itkLightObject obj) -> itkVectorImageUL3"""
  return _itkVectorImagePython.itkVectorImageUL3_cast(*args)

class itkVectorImageUS2(itkImagePython.itkImageBase2):
    """Proxy of C++ itkVectorImageUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkVectorImagePython.itkVectorImageUS2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkVectorImagePython.itkVectorImageUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion2 region)
        SetRegions(self, itkSize2 size)
        """
        return _itkVectorImagePython.itkVectorImageUS2_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, itkVariableLengthVectorUS value)"""
        return _itkVectorImagePython.itkVectorImageUS2_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex2 index, itkVariableLengthVectorUS value)"""
        return _itkVectorImagePython.itkVectorImageUS2_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex2 index) -> itkVariableLengthVectorUS
        GetPixel(self, itkIndex2 index) -> itkVariableLengthVectorUS
        """
        return _itkVectorImagePython.itkVectorImageUS2_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> unsigned short
        GetBufferPointer(self) -> unsigned short
        """
        return _itkVectorImagePython.itkVectorImageUS2_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,unsigned short)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,unsigned short)>
        """
        return _itkVectorImagePython.itkVectorImageUS2_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,unsigned short)> container)"""
        return _itkVectorImagePython.itkVectorImageUS2_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultVectorPixelAccessor<(unsigned short)>
        GetPixelAccessor(self) -> itk::DefaultVectorPixelAccessor<(unsigned short)>
        """
        return _itkVectorImagePython.itkVectorImageUS2_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::VectorImageNeighborhoodAccessorFunctor<(itk::VectorImage<(unsigned short,2u)>)>
        GetNeighborhoodAccessor(self) -> itk::VectorImageNeighborhoodAccessorFunctor<(itk::VectorImage<(unsigned short,2u)>)>
        """
        return _itkVectorImagePython.itkVectorImageUS2_GetNeighborhoodAccessor(self, *args)

    def SetVectorLength(self, *args):
        """SetVectorLength(self, unsigned int _arg)"""
        return _itkVectorImagePython.itkVectorImageUS2_SetVectorLength(self, *args)

    def GetVectorLength(self):
        """GetVectorLength(self) -> unsigned int"""
        return _itkVectorImagePython.itkVectorImageUS2_GetVectorLength(self)

    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkVectorImageUS2"""
        return _itkVectorImagePython.itkVectorImageUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVectorImageUS2"""
        return _itkVectorImagePython.itkVectorImageUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVectorImageUS2
        
        Create a new object of the class itkVectorImageUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVectorImageUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVectorImageUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorImageUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorImageUS2.SetRegions = new_instancemethod(_itkVectorImagePython.itkVectorImageUS2_SetRegions,None,itkVectorImageUS2)
itkVectorImageUS2.FillBuffer = new_instancemethod(_itkVectorImagePython.itkVectorImageUS2_FillBuffer,None,itkVectorImageUS2)
itkVectorImageUS2.SetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageUS2_SetPixel,None,itkVectorImageUS2)
itkVectorImageUS2.GetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageUS2_GetPixel,None,itkVectorImageUS2)
itkVectorImageUS2.GetBufferPointer = new_instancemethod(_itkVectorImagePython.itkVectorImageUS2_GetBufferPointer,None,itkVectorImageUS2)
itkVectorImageUS2.GetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageUS2_GetPixelContainer,None,itkVectorImageUS2)
itkVectorImageUS2.SetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageUS2_SetPixelContainer,None,itkVectorImageUS2)
itkVectorImageUS2.GetPixelAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageUS2_GetPixelAccessor,None,itkVectorImageUS2)
itkVectorImageUS2.GetNeighborhoodAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageUS2_GetNeighborhoodAccessor,None,itkVectorImageUS2)
itkVectorImageUS2.SetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageUS2_SetVectorLength,None,itkVectorImageUS2)
itkVectorImageUS2.GetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageUS2_GetVectorLength,None,itkVectorImageUS2)
itkVectorImageUS2.GetPointer = new_instancemethod(_itkVectorImagePython.itkVectorImageUS2_GetPointer,None,itkVectorImageUS2)
itkVectorImageUS2_swigregister = _itkVectorImagePython.itkVectorImageUS2_swigregister
itkVectorImageUS2_swigregister(itkVectorImageUS2)

def itkVectorImageUS2___New_orig__():
  """itkVectorImageUS2___New_orig__()"""
  return _itkVectorImagePython.itkVectorImageUS2___New_orig__()

def itkVectorImageUS2_cast(*args):
  """itkVectorImageUS2_cast(itkLightObject obj) -> itkVectorImageUS2"""
  return _itkVectorImagePython.itkVectorImageUS2_cast(*args)

class itkVectorImageUS3(itkImagePython.itkImageBase3):
    """Proxy of C++ itkVectorImageUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkVectorImagePython.itkVectorImageUS3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkVectorImagePython.itkVectorImageUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion3 region)
        SetRegions(self, itkSize3 size)
        """
        return _itkVectorImagePython.itkVectorImageUS3_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, itkVariableLengthVectorUS value)"""
        return _itkVectorImagePython.itkVectorImageUS3_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex3 index, itkVariableLengthVectorUS value)"""
        return _itkVectorImagePython.itkVectorImageUS3_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex3 index) -> itkVariableLengthVectorUS
        GetPixel(self, itkIndex3 index) -> itkVariableLengthVectorUS
        """
        return _itkVectorImagePython.itkVectorImageUS3_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> unsigned short
        GetBufferPointer(self) -> unsigned short
        """
        return _itkVectorImagePython.itkVectorImageUS3_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,unsigned short)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,unsigned short)>
        """
        return _itkVectorImagePython.itkVectorImageUS3_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,unsigned short)> container)"""
        return _itkVectorImagePython.itkVectorImageUS3_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultVectorPixelAccessor<(unsigned short)>
        GetPixelAccessor(self) -> itk::DefaultVectorPixelAccessor<(unsigned short)>
        """
        return _itkVectorImagePython.itkVectorImageUS3_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::VectorImageNeighborhoodAccessorFunctor<(itk::VectorImage<(unsigned short,3u)>)>
        GetNeighborhoodAccessor(self) -> itk::VectorImageNeighborhoodAccessorFunctor<(itk::VectorImage<(unsigned short,3u)>)>
        """
        return _itkVectorImagePython.itkVectorImageUS3_GetNeighborhoodAccessor(self, *args)

    def SetVectorLength(self, *args):
        """SetVectorLength(self, unsigned int _arg)"""
        return _itkVectorImagePython.itkVectorImageUS3_SetVectorLength(self, *args)

    def GetVectorLength(self):
        """GetVectorLength(self) -> unsigned int"""
        return _itkVectorImagePython.itkVectorImageUS3_GetVectorLength(self)

    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkVectorImageUS3"""
        return _itkVectorImagePython.itkVectorImageUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVectorImageUS3"""
        return _itkVectorImagePython.itkVectorImageUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVectorImageUS3
        
        Create a new object of the class itkVectorImageUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVectorImageUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVectorImageUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVectorImageUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVectorImageUS3.SetRegions = new_instancemethod(_itkVectorImagePython.itkVectorImageUS3_SetRegions,None,itkVectorImageUS3)
itkVectorImageUS3.FillBuffer = new_instancemethod(_itkVectorImagePython.itkVectorImageUS3_FillBuffer,None,itkVectorImageUS3)
itkVectorImageUS3.SetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageUS3_SetPixel,None,itkVectorImageUS3)
itkVectorImageUS3.GetPixel = new_instancemethod(_itkVectorImagePython.itkVectorImageUS3_GetPixel,None,itkVectorImageUS3)
itkVectorImageUS3.GetBufferPointer = new_instancemethod(_itkVectorImagePython.itkVectorImageUS3_GetBufferPointer,None,itkVectorImageUS3)
itkVectorImageUS3.GetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageUS3_GetPixelContainer,None,itkVectorImageUS3)
itkVectorImageUS3.SetPixelContainer = new_instancemethod(_itkVectorImagePython.itkVectorImageUS3_SetPixelContainer,None,itkVectorImageUS3)
itkVectorImageUS3.GetPixelAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageUS3_GetPixelAccessor,None,itkVectorImageUS3)
itkVectorImageUS3.GetNeighborhoodAccessor = new_instancemethod(_itkVectorImagePython.itkVectorImageUS3_GetNeighborhoodAccessor,None,itkVectorImageUS3)
itkVectorImageUS3.SetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageUS3_SetVectorLength,None,itkVectorImageUS3)
itkVectorImageUS3.GetVectorLength = new_instancemethod(_itkVectorImagePython.itkVectorImageUS3_GetVectorLength,None,itkVectorImageUS3)
itkVectorImageUS3.GetPointer = new_instancemethod(_itkVectorImagePython.itkVectorImageUS3_GetPointer,None,itkVectorImageUS3)
itkVectorImageUS3_swigregister = _itkVectorImagePython.itkVectorImageUS3_swigregister
itkVectorImageUS3_swigregister(itkVectorImageUS3)

def itkVectorImageUS3___New_orig__():
  """itkVectorImageUS3___New_orig__()"""
  return _itkVectorImagePython.itkVectorImageUS3___New_orig__()

def itkVectorImageUS3_cast(*args):
  """itkVectorImageUS3_cast(itkLightObject obj) -> itkVectorImageUS3"""
  return _itkVectorImagePython.itkVectorImageUS3_cast(*args)



