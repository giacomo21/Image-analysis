// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkMaskImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkMaskImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkMaskImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkMaskImageFilterJava
#endif
#ifdef SWIGLUA
%module itkMaskImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkMaskImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkMaskImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkMaskImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkMaskImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkMaskImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkMaskImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkMaskImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkMaskImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkMaskImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkMaskImageFilterPython
#endif
#ifdef SWIGR
%module itkMaskImageFilterR
#endif
#ifdef SWIGRUBY
%module itkMaskImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkMaskImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkMaskImageFilterTcl
#endif
#ifdef SWIGXML
%module itkMaskImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Numerics.includes"
#include "IntensityFilters.includes"
%}


%{
%}




%import wrap_itkRGBAPixel.i
%import wrap_ITKRegions.i
%import wrap_itkImage.i
%import wrap_itkCovariantVector.i
%import wrap_itkInPlaceImageFilterB.i
%import wrap_itkVector.i
%import wrap_ITKCommonBase.i
%import wrap_itkInPlaceImageFilterA.i
%import wrap_vcl_complex.i
%import wrap_itkRGBPixel.i


%include itk.i
%include wrap_itkMaskImageFilter_ext.i


 class itkMaskImageFilterICF2IUC2ICF2_Pointer {
   public:
     itkMaskImageFilterICF2IUC2ICF2_Pointer();
     itkMaskImageFilterICF2IUC2ICF2_Pointer(itkMaskImageFilterICF2IUC2ICF2_Pointer const & p);
     itkMaskImageFilterICF2IUC2ICF2_Pointer(itkMaskImageFilterICF2IUC2ICF2 * p);
     ~itkMaskImageFilterICF2IUC2ICF2_Pointer();
     itkMaskImageFilterICF2IUC2ICF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterICF2IUC2ICF2 * GetPointer() const;
     bool operator<(itkMaskImageFilterICF2IUC2ICF2_Pointer const & r) const;
     bool operator>(itkMaskImageFilterICF2IUC2ICF2_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterICF2IUC2ICF2_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterICF2IUC2ICF2_Pointer const & r) const;
     itkMaskImageFilterICF2IUC2ICF2_Pointer & operator=(itkMaskImageFilterICF2IUC2ICF2_Pointer const & r);
     itkMaskImageFilterICF2IUC2ICF2_Pointer & operator=(itkMaskImageFilterICF2IUC2ICF2 * r);
     itkMaskImageFilterICF2IUC2ICF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterICF2IUC2ICF2_Superclass : public itkInPlaceImageFilterICF2ICF2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterICF2IUC2ICF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageCF2 const * image1);
     void SetInput2(itkImageUC2 const * image2);
     itk::Functor::MaskInput< std::complex< float >, unsigned char, std::complex< float > > & GetFunctor();
     itk::Functor::MaskInput< std::complex< float >, unsigned char, std::complex< float > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< std::complex< float >, unsigned char, std::complex< float > > const & functor);
   private:
     itkMaskImageFilterICF2IUC2ICF2_Superclass(itkMaskImageFilterICF2IUC2ICF2_Superclass const & arg0);
     void operator=(itkMaskImageFilterICF2IUC2ICF2_Superclass const & arg0);
   protected:
     itkMaskImageFilterICF2IUC2ICF2_Superclass();
     ~itkMaskImageFilterICF2IUC2ICF2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterICF2IUC2ICF2_Superclass_Pointer {
   public:
     itkMaskImageFilterICF2IUC2ICF2_Superclass_Pointer();
     itkMaskImageFilterICF2IUC2ICF2_Superclass_Pointer(itkMaskImageFilterICF2IUC2ICF2_Superclass_Pointer const & p);
     itkMaskImageFilterICF2IUC2ICF2_Superclass_Pointer(itkMaskImageFilterICF2IUC2ICF2_Superclass * p);
     ~itkMaskImageFilterICF2IUC2ICF2_Superclass_Pointer();
     itkMaskImageFilterICF2IUC2ICF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterICF2IUC2ICF2_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterICF2IUC2ICF2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterICF2IUC2ICF2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterICF2IUC2ICF2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterICF2IUC2ICF2_Superclass_Pointer const & r) const;
     itkMaskImageFilterICF2IUC2ICF2_Superclass_Pointer & operator=(itkMaskImageFilterICF2IUC2ICF2_Superclass_Pointer const & r);
     itkMaskImageFilterICF2IUC2ICF2_Superclass_Pointer & operator=(itkMaskImageFilterICF2IUC2ICF2_Superclass * r);
     itkMaskImageFilterICF2IUC2ICF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterICF2IUL2ICF2_Pointer {
   public:
     itkMaskImageFilterICF2IUL2ICF2_Pointer();
     itkMaskImageFilterICF2IUL2ICF2_Pointer(itkMaskImageFilterICF2IUL2ICF2_Pointer const & p);
     itkMaskImageFilterICF2IUL2ICF2_Pointer(itkMaskImageFilterICF2IUL2ICF2 * p);
     ~itkMaskImageFilterICF2IUL2ICF2_Pointer();
     itkMaskImageFilterICF2IUL2ICF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterICF2IUL2ICF2 * GetPointer() const;
     bool operator<(itkMaskImageFilterICF2IUL2ICF2_Pointer const & r) const;
     bool operator>(itkMaskImageFilterICF2IUL2ICF2_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterICF2IUL2ICF2_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterICF2IUL2ICF2_Pointer const & r) const;
     itkMaskImageFilterICF2IUL2ICF2_Pointer & operator=(itkMaskImageFilterICF2IUL2ICF2_Pointer const & r);
     itkMaskImageFilterICF2IUL2ICF2_Pointer & operator=(itkMaskImageFilterICF2IUL2ICF2 * r);
     itkMaskImageFilterICF2IUL2ICF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterICF2IUL2ICF2_Superclass : public itkInPlaceImageFilterICF2ICF2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterICF2IUL2ICF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageCF2 const * image1);
     void SetInput2(itkImageUL2 const * image2);
     itk::Functor::MaskInput< std::complex< float >, unsigned long, std::complex< float > > & GetFunctor();
     itk::Functor::MaskInput< std::complex< float >, unsigned long, std::complex< float > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< std::complex< float >, unsigned long, std::complex< float > > const & functor);
   private:
     itkMaskImageFilterICF2IUL2ICF2_Superclass(itkMaskImageFilterICF2IUL2ICF2_Superclass const & arg0);
     void operator=(itkMaskImageFilterICF2IUL2ICF2_Superclass const & arg0);
   protected:
     itkMaskImageFilterICF2IUL2ICF2_Superclass();
     ~itkMaskImageFilterICF2IUL2ICF2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterICF2IUL2ICF2_Superclass_Pointer {
   public:
     itkMaskImageFilterICF2IUL2ICF2_Superclass_Pointer();
     itkMaskImageFilterICF2IUL2ICF2_Superclass_Pointer(itkMaskImageFilterICF2IUL2ICF2_Superclass_Pointer const & p);
     itkMaskImageFilterICF2IUL2ICF2_Superclass_Pointer(itkMaskImageFilterICF2IUL2ICF2_Superclass * p);
     ~itkMaskImageFilterICF2IUL2ICF2_Superclass_Pointer();
     itkMaskImageFilterICF2IUL2ICF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterICF2IUL2ICF2_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterICF2IUL2ICF2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterICF2IUL2ICF2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterICF2IUL2ICF2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterICF2IUL2ICF2_Superclass_Pointer const & r) const;
     itkMaskImageFilterICF2IUL2ICF2_Superclass_Pointer & operator=(itkMaskImageFilterICF2IUL2ICF2_Superclass_Pointer const & r);
     itkMaskImageFilterICF2IUL2ICF2_Superclass_Pointer & operator=(itkMaskImageFilterICF2IUL2ICF2_Superclass * r);
     itkMaskImageFilterICF2IUL2ICF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterICF2IUS2ICF2_Pointer {
   public:
     itkMaskImageFilterICF2IUS2ICF2_Pointer();
     itkMaskImageFilterICF2IUS2ICF2_Pointer(itkMaskImageFilterICF2IUS2ICF2_Pointer const & p);
     itkMaskImageFilterICF2IUS2ICF2_Pointer(itkMaskImageFilterICF2IUS2ICF2 * p);
     ~itkMaskImageFilterICF2IUS2ICF2_Pointer();
     itkMaskImageFilterICF2IUS2ICF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterICF2IUS2ICF2 * GetPointer() const;
     bool operator<(itkMaskImageFilterICF2IUS2ICF2_Pointer const & r) const;
     bool operator>(itkMaskImageFilterICF2IUS2ICF2_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterICF2IUS2ICF2_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterICF2IUS2ICF2_Pointer const & r) const;
     itkMaskImageFilterICF2IUS2ICF2_Pointer & operator=(itkMaskImageFilterICF2IUS2ICF2_Pointer const & r);
     itkMaskImageFilterICF2IUS2ICF2_Pointer & operator=(itkMaskImageFilterICF2IUS2ICF2 * r);
     itkMaskImageFilterICF2IUS2ICF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterICF2IUS2ICF2_Superclass : public itkInPlaceImageFilterICF2ICF2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterICF2IUS2ICF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageCF2 const * image1);
     void SetInput2(itkImageUS2 const * image2);
     itk::Functor::MaskInput< std::complex< float >, unsigned short, std::complex< float > > & GetFunctor();
     itk::Functor::MaskInput< std::complex< float >, unsigned short, std::complex< float > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< std::complex< float >, unsigned short, std::complex< float > > const & functor);
   private:
     itkMaskImageFilterICF2IUS2ICF2_Superclass(itkMaskImageFilterICF2IUS2ICF2_Superclass const & arg0);
     void operator=(itkMaskImageFilterICF2IUS2ICF2_Superclass const & arg0);
   protected:
     itkMaskImageFilterICF2IUS2ICF2_Superclass();
     ~itkMaskImageFilterICF2IUS2ICF2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterICF2IUS2ICF2_Superclass_Pointer {
   public:
     itkMaskImageFilterICF2IUS2ICF2_Superclass_Pointer();
     itkMaskImageFilterICF2IUS2ICF2_Superclass_Pointer(itkMaskImageFilterICF2IUS2ICF2_Superclass_Pointer const & p);
     itkMaskImageFilterICF2IUS2ICF2_Superclass_Pointer(itkMaskImageFilterICF2IUS2ICF2_Superclass * p);
     ~itkMaskImageFilterICF2IUS2ICF2_Superclass_Pointer();
     itkMaskImageFilterICF2IUS2ICF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterICF2IUS2ICF2_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterICF2IUS2ICF2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterICF2IUS2ICF2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterICF2IUS2ICF2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterICF2IUS2ICF2_Superclass_Pointer const & r) const;
     itkMaskImageFilterICF2IUS2ICF2_Superclass_Pointer & operator=(itkMaskImageFilterICF2IUS2ICF2_Superclass_Pointer const & r);
     itkMaskImageFilterICF2IUS2ICF2_Superclass_Pointer & operator=(itkMaskImageFilterICF2IUS2ICF2_Superclass * r);
     itkMaskImageFilterICF2IUS2ICF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterICF3IUC3ICF3_Pointer {
   public:
     itkMaskImageFilterICF3IUC3ICF3_Pointer();
     itkMaskImageFilterICF3IUC3ICF3_Pointer(itkMaskImageFilterICF3IUC3ICF3_Pointer const & p);
     itkMaskImageFilterICF3IUC3ICF3_Pointer(itkMaskImageFilterICF3IUC3ICF3 * p);
     ~itkMaskImageFilterICF3IUC3ICF3_Pointer();
     itkMaskImageFilterICF3IUC3ICF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterICF3IUC3ICF3 * GetPointer() const;
     bool operator<(itkMaskImageFilterICF3IUC3ICF3_Pointer const & r) const;
     bool operator>(itkMaskImageFilterICF3IUC3ICF3_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterICF3IUC3ICF3_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterICF3IUC3ICF3_Pointer const & r) const;
     itkMaskImageFilterICF3IUC3ICF3_Pointer & operator=(itkMaskImageFilterICF3IUC3ICF3_Pointer const & r);
     itkMaskImageFilterICF3IUC3ICF3_Pointer & operator=(itkMaskImageFilterICF3IUC3ICF3 * r);
     itkMaskImageFilterICF3IUC3ICF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterICF3IUC3ICF3_Superclass : public itkInPlaceImageFilterICF3ICF3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterICF3IUC3ICF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageCF3 const * image1);
     void SetInput2(itkImageUC3 const * image2);
     itk::Functor::MaskInput< std::complex< float >, unsigned char, std::complex< float > > & GetFunctor();
     itk::Functor::MaskInput< std::complex< float >, unsigned char, std::complex< float > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< std::complex< float >, unsigned char, std::complex< float > > const & functor);
   private:
     itkMaskImageFilterICF3IUC3ICF3_Superclass(itkMaskImageFilterICF3IUC3ICF3_Superclass const & arg0);
     void operator=(itkMaskImageFilterICF3IUC3ICF3_Superclass const & arg0);
   protected:
     itkMaskImageFilterICF3IUC3ICF3_Superclass();
     ~itkMaskImageFilterICF3IUC3ICF3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterICF3IUC3ICF3_Superclass_Pointer {
   public:
     itkMaskImageFilterICF3IUC3ICF3_Superclass_Pointer();
     itkMaskImageFilterICF3IUC3ICF3_Superclass_Pointer(itkMaskImageFilterICF3IUC3ICF3_Superclass_Pointer const & p);
     itkMaskImageFilterICF3IUC3ICF3_Superclass_Pointer(itkMaskImageFilterICF3IUC3ICF3_Superclass * p);
     ~itkMaskImageFilterICF3IUC3ICF3_Superclass_Pointer();
     itkMaskImageFilterICF3IUC3ICF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterICF3IUC3ICF3_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterICF3IUC3ICF3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterICF3IUC3ICF3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterICF3IUC3ICF3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterICF3IUC3ICF3_Superclass_Pointer const & r) const;
     itkMaskImageFilterICF3IUC3ICF3_Superclass_Pointer & operator=(itkMaskImageFilterICF3IUC3ICF3_Superclass_Pointer const & r);
     itkMaskImageFilterICF3IUC3ICF3_Superclass_Pointer & operator=(itkMaskImageFilterICF3IUC3ICF3_Superclass * r);
     itkMaskImageFilterICF3IUC3ICF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterICF3IUL3ICF3_Pointer {
   public:
     itkMaskImageFilterICF3IUL3ICF3_Pointer();
     itkMaskImageFilterICF3IUL3ICF3_Pointer(itkMaskImageFilterICF3IUL3ICF3_Pointer const & p);
     itkMaskImageFilterICF3IUL3ICF3_Pointer(itkMaskImageFilterICF3IUL3ICF3 * p);
     ~itkMaskImageFilterICF3IUL3ICF3_Pointer();
     itkMaskImageFilterICF3IUL3ICF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterICF3IUL3ICF3 * GetPointer() const;
     bool operator<(itkMaskImageFilterICF3IUL3ICF3_Pointer const & r) const;
     bool operator>(itkMaskImageFilterICF3IUL3ICF3_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterICF3IUL3ICF3_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterICF3IUL3ICF3_Pointer const & r) const;
     itkMaskImageFilterICF3IUL3ICF3_Pointer & operator=(itkMaskImageFilterICF3IUL3ICF3_Pointer const & r);
     itkMaskImageFilterICF3IUL3ICF3_Pointer & operator=(itkMaskImageFilterICF3IUL3ICF3 * r);
     itkMaskImageFilterICF3IUL3ICF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterICF3IUL3ICF3_Superclass : public itkInPlaceImageFilterICF3ICF3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterICF3IUL3ICF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageCF3 const * image1);
     void SetInput2(itkImageUL3 const * image2);
     itk::Functor::MaskInput< std::complex< float >, unsigned long, std::complex< float > > & GetFunctor();
     itk::Functor::MaskInput< std::complex< float >, unsigned long, std::complex< float > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< std::complex< float >, unsigned long, std::complex< float > > const & functor);
   private:
     itkMaskImageFilterICF3IUL3ICF3_Superclass(itkMaskImageFilterICF3IUL3ICF3_Superclass const & arg0);
     void operator=(itkMaskImageFilterICF3IUL3ICF3_Superclass const & arg0);
   protected:
     itkMaskImageFilterICF3IUL3ICF3_Superclass();
     ~itkMaskImageFilterICF3IUL3ICF3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterICF3IUL3ICF3_Superclass_Pointer {
   public:
     itkMaskImageFilterICF3IUL3ICF3_Superclass_Pointer();
     itkMaskImageFilterICF3IUL3ICF3_Superclass_Pointer(itkMaskImageFilterICF3IUL3ICF3_Superclass_Pointer const & p);
     itkMaskImageFilterICF3IUL3ICF3_Superclass_Pointer(itkMaskImageFilterICF3IUL3ICF3_Superclass * p);
     ~itkMaskImageFilterICF3IUL3ICF3_Superclass_Pointer();
     itkMaskImageFilterICF3IUL3ICF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterICF3IUL3ICF3_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterICF3IUL3ICF3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterICF3IUL3ICF3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterICF3IUL3ICF3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterICF3IUL3ICF3_Superclass_Pointer const & r) const;
     itkMaskImageFilterICF3IUL3ICF3_Superclass_Pointer & operator=(itkMaskImageFilterICF3IUL3ICF3_Superclass_Pointer const & r);
     itkMaskImageFilterICF3IUL3ICF3_Superclass_Pointer & operator=(itkMaskImageFilterICF3IUL3ICF3_Superclass * r);
     itkMaskImageFilterICF3IUL3ICF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterICF3IUS3ICF3_Pointer {
   public:
     itkMaskImageFilterICF3IUS3ICF3_Pointer();
     itkMaskImageFilterICF3IUS3ICF3_Pointer(itkMaskImageFilterICF3IUS3ICF3_Pointer const & p);
     itkMaskImageFilterICF3IUS3ICF3_Pointer(itkMaskImageFilterICF3IUS3ICF3 * p);
     ~itkMaskImageFilterICF3IUS3ICF3_Pointer();
     itkMaskImageFilterICF3IUS3ICF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterICF3IUS3ICF3 * GetPointer() const;
     bool operator<(itkMaskImageFilterICF3IUS3ICF3_Pointer const & r) const;
     bool operator>(itkMaskImageFilterICF3IUS3ICF3_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterICF3IUS3ICF3_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterICF3IUS3ICF3_Pointer const & r) const;
     itkMaskImageFilterICF3IUS3ICF3_Pointer & operator=(itkMaskImageFilterICF3IUS3ICF3_Pointer const & r);
     itkMaskImageFilterICF3IUS3ICF3_Pointer & operator=(itkMaskImageFilterICF3IUS3ICF3 * r);
     itkMaskImageFilterICF3IUS3ICF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterICF3IUS3ICF3_Superclass : public itkInPlaceImageFilterICF3ICF3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterICF3IUS3ICF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageCF3 const * image1);
     void SetInput2(itkImageUS3 const * image2);
     itk::Functor::MaskInput< std::complex< float >, unsigned short, std::complex< float > > & GetFunctor();
     itk::Functor::MaskInput< std::complex< float >, unsigned short, std::complex< float > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< std::complex< float >, unsigned short, std::complex< float > > const & functor);
   private:
     itkMaskImageFilterICF3IUS3ICF3_Superclass(itkMaskImageFilterICF3IUS3ICF3_Superclass const & arg0);
     void operator=(itkMaskImageFilterICF3IUS3ICF3_Superclass const & arg0);
   protected:
     itkMaskImageFilterICF3IUS3ICF3_Superclass();
     ~itkMaskImageFilterICF3IUS3ICF3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterICF3IUS3ICF3_Superclass_Pointer {
   public:
     itkMaskImageFilterICF3IUS3ICF3_Superclass_Pointer();
     itkMaskImageFilterICF3IUS3ICF3_Superclass_Pointer(itkMaskImageFilterICF3IUS3ICF3_Superclass_Pointer const & p);
     itkMaskImageFilterICF3IUS3ICF3_Superclass_Pointer(itkMaskImageFilterICF3IUS3ICF3_Superclass * p);
     ~itkMaskImageFilterICF3IUS3ICF3_Superclass_Pointer();
     itkMaskImageFilterICF3IUS3ICF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterICF3IUS3ICF3_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterICF3IUS3ICF3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterICF3IUS3ICF3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterICF3IUS3ICF3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterICF3IUS3ICF3_Superclass_Pointer const & r) const;
     itkMaskImageFilterICF3IUS3ICF3_Superclass_Pointer & operator=(itkMaskImageFilterICF3IUS3ICF3_Superclass_Pointer const & r);
     itkMaskImageFilterICF3IUS3ICF3_Superclass_Pointer & operator=(itkMaskImageFilterICF3IUS3ICF3_Superclass * r);
     itkMaskImageFilterICF3IUS3ICF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterICVF22IUC2ICVF22_Pointer {
   public:
     itkMaskImageFilterICVF22IUC2ICVF22_Pointer();
     itkMaskImageFilterICVF22IUC2ICVF22_Pointer(itkMaskImageFilterICVF22IUC2ICVF22_Pointer const & p);
     itkMaskImageFilterICVF22IUC2ICVF22_Pointer(itkMaskImageFilterICVF22IUC2ICVF22 * p);
     ~itkMaskImageFilterICVF22IUC2ICVF22_Pointer();
     itkMaskImageFilterICVF22IUC2ICVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterICVF22IUC2ICVF22 * GetPointer() const;
     bool operator<(itkMaskImageFilterICVF22IUC2ICVF22_Pointer const & r) const;
     bool operator>(itkMaskImageFilterICVF22IUC2ICVF22_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterICVF22IUC2ICVF22_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterICVF22IUC2ICVF22_Pointer const & r) const;
     itkMaskImageFilterICVF22IUC2ICVF22_Pointer & operator=(itkMaskImageFilterICVF22IUC2ICVF22_Pointer const & r);
     itkMaskImageFilterICVF22IUC2ICVF22_Pointer & operator=(itkMaskImageFilterICVF22IUC2ICVF22 * r);
     itkMaskImageFilterICVF22IUC2ICVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterICVF22IUC2ICVF22_Superclass : public itkInPlaceImageFilterICVF22ICVF22 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterICVF22IUC2ICVF22_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageCVF22 const * image1);
     void SetInput2(itkImageUC2 const * image2);
     itk::Functor::MaskInput< itk::CovariantVector< float, 2u >, unsigned char, itk::CovariantVector< float, 2u > > & GetFunctor();
     itk::Functor::MaskInput< itk::CovariantVector< float, 2u >, unsigned char, itk::CovariantVector< float, 2u > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< itk::CovariantVector< float, 2u >, unsigned char, itk::CovariantVector< float, 2u > > const & functor);
   private:
     itkMaskImageFilterICVF22IUC2ICVF22_Superclass(itkMaskImageFilterICVF22IUC2ICVF22_Superclass const & arg0);
     void operator=(itkMaskImageFilterICVF22IUC2ICVF22_Superclass const & arg0);
   protected:
     itkMaskImageFilterICVF22IUC2ICVF22_Superclass();
     ~itkMaskImageFilterICVF22IUC2ICVF22_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterICVF22IUC2ICVF22_Superclass_Pointer {
   public:
     itkMaskImageFilterICVF22IUC2ICVF22_Superclass_Pointer();
     itkMaskImageFilterICVF22IUC2ICVF22_Superclass_Pointer(itkMaskImageFilterICVF22IUC2ICVF22_Superclass_Pointer const & p);
     itkMaskImageFilterICVF22IUC2ICVF22_Superclass_Pointer(itkMaskImageFilterICVF22IUC2ICVF22_Superclass * p);
     ~itkMaskImageFilterICVF22IUC2ICVF22_Superclass_Pointer();
     itkMaskImageFilterICVF22IUC2ICVF22_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterICVF22IUC2ICVF22_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterICVF22IUC2ICVF22_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterICVF22IUC2ICVF22_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterICVF22IUC2ICVF22_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterICVF22IUC2ICVF22_Superclass_Pointer const & r) const;
     itkMaskImageFilterICVF22IUC2ICVF22_Superclass_Pointer & operator=(itkMaskImageFilterICVF22IUC2ICVF22_Superclass_Pointer const & r);
     itkMaskImageFilterICVF22IUC2ICVF22_Superclass_Pointer & operator=(itkMaskImageFilterICVF22IUC2ICVF22_Superclass * r);
     itkMaskImageFilterICVF22IUC2ICVF22_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterICVF22IUL2ICVF22_Pointer {
   public:
     itkMaskImageFilterICVF22IUL2ICVF22_Pointer();
     itkMaskImageFilterICVF22IUL2ICVF22_Pointer(itkMaskImageFilterICVF22IUL2ICVF22_Pointer const & p);
     itkMaskImageFilterICVF22IUL2ICVF22_Pointer(itkMaskImageFilterICVF22IUL2ICVF22 * p);
     ~itkMaskImageFilterICVF22IUL2ICVF22_Pointer();
     itkMaskImageFilterICVF22IUL2ICVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterICVF22IUL2ICVF22 * GetPointer() const;
     bool operator<(itkMaskImageFilterICVF22IUL2ICVF22_Pointer const & r) const;
     bool operator>(itkMaskImageFilterICVF22IUL2ICVF22_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterICVF22IUL2ICVF22_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterICVF22IUL2ICVF22_Pointer const & r) const;
     itkMaskImageFilterICVF22IUL2ICVF22_Pointer & operator=(itkMaskImageFilterICVF22IUL2ICVF22_Pointer const & r);
     itkMaskImageFilterICVF22IUL2ICVF22_Pointer & operator=(itkMaskImageFilterICVF22IUL2ICVF22 * r);
     itkMaskImageFilterICVF22IUL2ICVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterICVF22IUL2ICVF22_Superclass : public itkInPlaceImageFilterICVF22ICVF22 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterICVF22IUL2ICVF22_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageCVF22 const * image1);
     void SetInput2(itkImageUL2 const * image2);
     itk::Functor::MaskInput< itk::CovariantVector< float, 2u >, unsigned long, itk::CovariantVector< float, 2u > > & GetFunctor();
     itk::Functor::MaskInput< itk::CovariantVector< float, 2u >, unsigned long, itk::CovariantVector< float, 2u > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< itk::CovariantVector< float, 2u >, unsigned long, itk::CovariantVector< float, 2u > > const & functor);
   private:
     itkMaskImageFilterICVF22IUL2ICVF22_Superclass(itkMaskImageFilterICVF22IUL2ICVF22_Superclass const & arg0);
     void operator=(itkMaskImageFilterICVF22IUL2ICVF22_Superclass const & arg0);
   protected:
     itkMaskImageFilterICVF22IUL2ICVF22_Superclass();
     ~itkMaskImageFilterICVF22IUL2ICVF22_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterICVF22IUL2ICVF22_Superclass_Pointer {
   public:
     itkMaskImageFilterICVF22IUL2ICVF22_Superclass_Pointer();
     itkMaskImageFilterICVF22IUL2ICVF22_Superclass_Pointer(itkMaskImageFilterICVF22IUL2ICVF22_Superclass_Pointer const & p);
     itkMaskImageFilterICVF22IUL2ICVF22_Superclass_Pointer(itkMaskImageFilterICVF22IUL2ICVF22_Superclass * p);
     ~itkMaskImageFilterICVF22IUL2ICVF22_Superclass_Pointer();
     itkMaskImageFilterICVF22IUL2ICVF22_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterICVF22IUL2ICVF22_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterICVF22IUL2ICVF22_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterICVF22IUL2ICVF22_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterICVF22IUL2ICVF22_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterICVF22IUL2ICVF22_Superclass_Pointer const & r) const;
     itkMaskImageFilterICVF22IUL2ICVF22_Superclass_Pointer & operator=(itkMaskImageFilterICVF22IUL2ICVF22_Superclass_Pointer const & r);
     itkMaskImageFilterICVF22IUL2ICVF22_Superclass_Pointer & operator=(itkMaskImageFilterICVF22IUL2ICVF22_Superclass * r);
     itkMaskImageFilterICVF22IUL2ICVF22_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterICVF22IUS2ICVF22_Pointer {
   public:
     itkMaskImageFilterICVF22IUS2ICVF22_Pointer();
     itkMaskImageFilterICVF22IUS2ICVF22_Pointer(itkMaskImageFilterICVF22IUS2ICVF22_Pointer const & p);
     itkMaskImageFilterICVF22IUS2ICVF22_Pointer(itkMaskImageFilterICVF22IUS2ICVF22 * p);
     ~itkMaskImageFilterICVF22IUS2ICVF22_Pointer();
     itkMaskImageFilterICVF22IUS2ICVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterICVF22IUS2ICVF22 * GetPointer() const;
     bool operator<(itkMaskImageFilterICVF22IUS2ICVF22_Pointer const & r) const;
     bool operator>(itkMaskImageFilterICVF22IUS2ICVF22_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterICVF22IUS2ICVF22_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterICVF22IUS2ICVF22_Pointer const & r) const;
     itkMaskImageFilterICVF22IUS2ICVF22_Pointer & operator=(itkMaskImageFilterICVF22IUS2ICVF22_Pointer const & r);
     itkMaskImageFilterICVF22IUS2ICVF22_Pointer & operator=(itkMaskImageFilterICVF22IUS2ICVF22 * r);
     itkMaskImageFilterICVF22IUS2ICVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterICVF22IUS2ICVF22_Superclass : public itkInPlaceImageFilterICVF22ICVF22 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterICVF22IUS2ICVF22_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageCVF22 const * image1);
     void SetInput2(itkImageUS2 const * image2);
     itk::Functor::MaskInput< itk::CovariantVector< float, 2u >, unsigned short, itk::CovariantVector< float, 2u > > & GetFunctor();
     itk::Functor::MaskInput< itk::CovariantVector< float, 2u >, unsigned short, itk::CovariantVector< float, 2u > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< itk::CovariantVector< float, 2u >, unsigned short, itk::CovariantVector< float, 2u > > const & functor);
   private:
     itkMaskImageFilterICVF22IUS2ICVF22_Superclass(itkMaskImageFilterICVF22IUS2ICVF22_Superclass const & arg0);
     void operator=(itkMaskImageFilterICVF22IUS2ICVF22_Superclass const & arg0);
   protected:
     itkMaskImageFilterICVF22IUS2ICVF22_Superclass();
     ~itkMaskImageFilterICVF22IUS2ICVF22_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterICVF22IUS2ICVF22_Superclass_Pointer {
   public:
     itkMaskImageFilterICVF22IUS2ICVF22_Superclass_Pointer();
     itkMaskImageFilterICVF22IUS2ICVF22_Superclass_Pointer(itkMaskImageFilterICVF22IUS2ICVF22_Superclass_Pointer const & p);
     itkMaskImageFilterICVF22IUS2ICVF22_Superclass_Pointer(itkMaskImageFilterICVF22IUS2ICVF22_Superclass * p);
     ~itkMaskImageFilterICVF22IUS2ICVF22_Superclass_Pointer();
     itkMaskImageFilterICVF22IUS2ICVF22_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterICVF22IUS2ICVF22_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterICVF22IUS2ICVF22_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterICVF22IUS2ICVF22_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterICVF22IUS2ICVF22_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterICVF22IUS2ICVF22_Superclass_Pointer const & r) const;
     itkMaskImageFilterICVF22IUS2ICVF22_Superclass_Pointer & operator=(itkMaskImageFilterICVF22IUS2ICVF22_Superclass_Pointer const & r);
     itkMaskImageFilterICVF22IUS2ICVF22_Superclass_Pointer & operator=(itkMaskImageFilterICVF22IUS2ICVF22_Superclass * r);
     itkMaskImageFilterICVF22IUS2ICVF22_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterICVF33IUC3ICVF33_Pointer {
   public:
     itkMaskImageFilterICVF33IUC3ICVF33_Pointer();
     itkMaskImageFilterICVF33IUC3ICVF33_Pointer(itkMaskImageFilterICVF33IUC3ICVF33_Pointer const & p);
     itkMaskImageFilterICVF33IUC3ICVF33_Pointer(itkMaskImageFilterICVF33IUC3ICVF33 * p);
     ~itkMaskImageFilterICVF33IUC3ICVF33_Pointer();
     itkMaskImageFilterICVF33IUC3ICVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterICVF33IUC3ICVF33 * GetPointer() const;
     bool operator<(itkMaskImageFilterICVF33IUC3ICVF33_Pointer const & r) const;
     bool operator>(itkMaskImageFilterICVF33IUC3ICVF33_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterICVF33IUC3ICVF33_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterICVF33IUC3ICVF33_Pointer const & r) const;
     itkMaskImageFilterICVF33IUC3ICVF33_Pointer & operator=(itkMaskImageFilterICVF33IUC3ICVF33_Pointer const & r);
     itkMaskImageFilterICVF33IUC3ICVF33_Pointer & operator=(itkMaskImageFilterICVF33IUC3ICVF33 * r);
     itkMaskImageFilterICVF33IUC3ICVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterICVF33IUC3ICVF33_Superclass : public itkInPlaceImageFilterICVF33ICVF33 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterICVF33IUC3ICVF33_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageCVF33 const * image1);
     void SetInput2(itkImageUC3 const * image2);
     itk::Functor::MaskInput< itk::CovariantVector< float, 3u >, unsigned char, itk::CovariantVector< float, 3u > > & GetFunctor();
     itk::Functor::MaskInput< itk::CovariantVector< float, 3u >, unsigned char, itk::CovariantVector< float, 3u > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< itk::CovariantVector< float, 3u >, unsigned char, itk::CovariantVector< float, 3u > > const & functor);
   private:
     itkMaskImageFilterICVF33IUC3ICVF33_Superclass(itkMaskImageFilterICVF33IUC3ICVF33_Superclass const & arg0);
     void operator=(itkMaskImageFilterICVF33IUC3ICVF33_Superclass const & arg0);
   protected:
     itkMaskImageFilterICVF33IUC3ICVF33_Superclass();
     ~itkMaskImageFilterICVF33IUC3ICVF33_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterICVF33IUC3ICVF33_Superclass_Pointer {
   public:
     itkMaskImageFilterICVF33IUC3ICVF33_Superclass_Pointer();
     itkMaskImageFilterICVF33IUC3ICVF33_Superclass_Pointer(itkMaskImageFilterICVF33IUC3ICVF33_Superclass_Pointer const & p);
     itkMaskImageFilterICVF33IUC3ICVF33_Superclass_Pointer(itkMaskImageFilterICVF33IUC3ICVF33_Superclass * p);
     ~itkMaskImageFilterICVF33IUC3ICVF33_Superclass_Pointer();
     itkMaskImageFilterICVF33IUC3ICVF33_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterICVF33IUC3ICVF33_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterICVF33IUC3ICVF33_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterICVF33IUC3ICVF33_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterICVF33IUC3ICVF33_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterICVF33IUC3ICVF33_Superclass_Pointer const & r) const;
     itkMaskImageFilterICVF33IUC3ICVF33_Superclass_Pointer & operator=(itkMaskImageFilterICVF33IUC3ICVF33_Superclass_Pointer const & r);
     itkMaskImageFilterICVF33IUC3ICVF33_Superclass_Pointer & operator=(itkMaskImageFilterICVF33IUC3ICVF33_Superclass * r);
     itkMaskImageFilterICVF33IUC3ICVF33_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterICVF33IUL3ICVF33_Pointer {
   public:
     itkMaskImageFilterICVF33IUL3ICVF33_Pointer();
     itkMaskImageFilterICVF33IUL3ICVF33_Pointer(itkMaskImageFilterICVF33IUL3ICVF33_Pointer const & p);
     itkMaskImageFilterICVF33IUL3ICVF33_Pointer(itkMaskImageFilterICVF33IUL3ICVF33 * p);
     ~itkMaskImageFilterICVF33IUL3ICVF33_Pointer();
     itkMaskImageFilterICVF33IUL3ICVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterICVF33IUL3ICVF33 * GetPointer() const;
     bool operator<(itkMaskImageFilterICVF33IUL3ICVF33_Pointer const & r) const;
     bool operator>(itkMaskImageFilterICVF33IUL3ICVF33_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterICVF33IUL3ICVF33_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterICVF33IUL3ICVF33_Pointer const & r) const;
     itkMaskImageFilterICVF33IUL3ICVF33_Pointer & operator=(itkMaskImageFilterICVF33IUL3ICVF33_Pointer const & r);
     itkMaskImageFilterICVF33IUL3ICVF33_Pointer & operator=(itkMaskImageFilterICVF33IUL3ICVF33 * r);
     itkMaskImageFilterICVF33IUL3ICVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterICVF33IUL3ICVF33_Superclass : public itkInPlaceImageFilterICVF33ICVF33 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterICVF33IUL3ICVF33_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageCVF33 const * image1);
     void SetInput2(itkImageUL3 const * image2);
     itk::Functor::MaskInput< itk::CovariantVector< float, 3u >, unsigned long, itk::CovariantVector< float, 3u > > & GetFunctor();
     itk::Functor::MaskInput< itk::CovariantVector< float, 3u >, unsigned long, itk::CovariantVector< float, 3u > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< itk::CovariantVector< float, 3u >, unsigned long, itk::CovariantVector< float, 3u > > const & functor);
   private:
     itkMaskImageFilterICVF33IUL3ICVF33_Superclass(itkMaskImageFilterICVF33IUL3ICVF33_Superclass const & arg0);
     void operator=(itkMaskImageFilterICVF33IUL3ICVF33_Superclass const & arg0);
   protected:
     itkMaskImageFilterICVF33IUL3ICVF33_Superclass();
     ~itkMaskImageFilterICVF33IUL3ICVF33_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterICVF33IUL3ICVF33_Superclass_Pointer {
   public:
     itkMaskImageFilterICVF33IUL3ICVF33_Superclass_Pointer();
     itkMaskImageFilterICVF33IUL3ICVF33_Superclass_Pointer(itkMaskImageFilterICVF33IUL3ICVF33_Superclass_Pointer const & p);
     itkMaskImageFilterICVF33IUL3ICVF33_Superclass_Pointer(itkMaskImageFilterICVF33IUL3ICVF33_Superclass * p);
     ~itkMaskImageFilterICVF33IUL3ICVF33_Superclass_Pointer();
     itkMaskImageFilterICVF33IUL3ICVF33_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterICVF33IUL3ICVF33_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterICVF33IUL3ICVF33_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterICVF33IUL3ICVF33_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterICVF33IUL3ICVF33_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterICVF33IUL3ICVF33_Superclass_Pointer const & r) const;
     itkMaskImageFilterICVF33IUL3ICVF33_Superclass_Pointer & operator=(itkMaskImageFilterICVF33IUL3ICVF33_Superclass_Pointer const & r);
     itkMaskImageFilterICVF33IUL3ICVF33_Superclass_Pointer & operator=(itkMaskImageFilterICVF33IUL3ICVF33_Superclass * r);
     itkMaskImageFilterICVF33IUL3ICVF33_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterICVF33IUS3ICVF33_Pointer {
   public:
     itkMaskImageFilterICVF33IUS3ICVF33_Pointer();
     itkMaskImageFilterICVF33IUS3ICVF33_Pointer(itkMaskImageFilterICVF33IUS3ICVF33_Pointer const & p);
     itkMaskImageFilterICVF33IUS3ICVF33_Pointer(itkMaskImageFilterICVF33IUS3ICVF33 * p);
     ~itkMaskImageFilterICVF33IUS3ICVF33_Pointer();
     itkMaskImageFilterICVF33IUS3ICVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterICVF33IUS3ICVF33 * GetPointer() const;
     bool operator<(itkMaskImageFilterICVF33IUS3ICVF33_Pointer const & r) const;
     bool operator>(itkMaskImageFilterICVF33IUS3ICVF33_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterICVF33IUS3ICVF33_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterICVF33IUS3ICVF33_Pointer const & r) const;
     itkMaskImageFilterICVF33IUS3ICVF33_Pointer & operator=(itkMaskImageFilterICVF33IUS3ICVF33_Pointer const & r);
     itkMaskImageFilterICVF33IUS3ICVF33_Pointer & operator=(itkMaskImageFilterICVF33IUS3ICVF33 * r);
     itkMaskImageFilterICVF33IUS3ICVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterICVF33IUS3ICVF33_Superclass : public itkInPlaceImageFilterICVF33ICVF33 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterICVF33IUS3ICVF33_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageCVF33 const * image1);
     void SetInput2(itkImageUS3 const * image2);
     itk::Functor::MaskInput< itk::CovariantVector< float, 3u >, unsigned short, itk::CovariantVector< float, 3u > > & GetFunctor();
     itk::Functor::MaskInput< itk::CovariantVector< float, 3u >, unsigned short, itk::CovariantVector< float, 3u > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< itk::CovariantVector< float, 3u >, unsigned short, itk::CovariantVector< float, 3u > > const & functor);
   private:
     itkMaskImageFilterICVF33IUS3ICVF33_Superclass(itkMaskImageFilterICVF33IUS3ICVF33_Superclass const & arg0);
     void operator=(itkMaskImageFilterICVF33IUS3ICVF33_Superclass const & arg0);
   protected:
     itkMaskImageFilterICVF33IUS3ICVF33_Superclass();
     ~itkMaskImageFilterICVF33IUS3ICVF33_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterICVF33IUS3ICVF33_Superclass_Pointer {
   public:
     itkMaskImageFilterICVF33IUS3ICVF33_Superclass_Pointer();
     itkMaskImageFilterICVF33IUS3ICVF33_Superclass_Pointer(itkMaskImageFilterICVF33IUS3ICVF33_Superclass_Pointer const & p);
     itkMaskImageFilterICVF33IUS3ICVF33_Superclass_Pointer(itkMaskImageFilterICVF33IUS3ICVF33_Superclass * p);
     ~itkMaskImageFilterICVF33IUS3ICVF33_Superclass_Pointer();
     itkMaskImageFilterICVF33IUS3ICVF33_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterICVF33IUS3ICVF33_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterICVF33IUS3ICVF33_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterICVF33IUS3ICVF33_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterICVF33IUS3ICVF33_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterICVF33IUS3ICVF33_Superclass_Pointer const & r) const;
     itkMaskImageFilterICVF33IUS3ICVF33_Superclass_Pointer & operator=(itkMaskImageFilterICVF33IUS3ICVF33_Superclass_Pointer const & r);
     itkMaskImageFilterICVF33IUS3ICVF33_Superclass_Pointer & operator=(itkMaskImageFilterICVF33IUS3ICVF33_Superclass * r);
     itkMaskImageFilterICVF33IUS3ICVF33_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterID2IUC2ID2_Pointer {
   public:
     itkMaskImageFilterID2IUC2ID2_Pointer();
     itkMaskImageFilterID2IUC2ID2_Pointer(itkMaskImageFilterID2IUC2ID2_Pointer const & p);
     itkMaskImageFilterID2IUC2ID2_Pointer(itkMaskImageFilterID2IUC2ID2 * p);
     ~itkMaskImageFilterID2IUC2ID2_Pointer();
     itkMaskImageFilterID2IUC2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterID2IUC2ID2 * GetPointer() const;
     bool operator<(itkMaskImageFilterID2IUC2ID2_Pointer const & r) const;
     bool operator>(itkMaskImageFilterID2IUC2ID2_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterID2IUC2ID2_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterID2IUC2ID2_Pointer const & r) const;
     itkMaskImageFilterID2IUC2ID2_Pointer & operator=(itkMaskImageFilterID2IUC2ID2_Pointer const & r);
     itkMaskImageFilterID2IUC2ID2_Pointer & operator=(itkMaskImageFilterID2IUC2ID2 * r);
     itkMaskImageFilterID2IUC2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterID2IUC2ID2_Superclass : public itkInPlaceImageFilterID2ID2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterID2IUC2ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageD2 const * image1);
     void SetInput2(itkImageUC2 const * image2);
     itk::Functor::MaskInput< double, unsigned char, double > & GetFunctor();
     itk::Functor::MaskInput< double, unsigned char, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< double, unsigned char, double > const & functor);
   private:
     itkMaskImageFilterID2IUC2ID2_Superclass(itkMaskImageFilterID2IUC2ID2_Superclass const & arg0);
     void operator=(itkMaskImageFilterID2IUC2ID2_Superclass const & arg0);
   protected:
     itkMaskImageFilterID2IUC2ID2_Superclass();
     ~itkMaskImageFilterID2IUC2ID2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterID2IUC2ID2_Superclass_Pointer {
   public:
     itkMaskImageFilterID2IUC2ID2_Superclass_Pointer();
     itkMaskImageFilterID2IUC2ID2_Superclass_Pointer(itkMaskImageFilterID2IUC2ID2_Superclass_Pointer const & p);
     itkMaskImageFilterID2IUC2ID2_Superclass_Pointer(itkMaskImageFilterID2IUC2ID2_Superclass * p);
     ~itkMaskImageFilterID2IUC2ID2_Superclass_Pointer();
     itkMaskImageFilterID2IUC2ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterID2IUC2ID2_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterID2IUC2ID2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterID2IUC2ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterID2IUC2ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterID2IUC2ID2_Superclass_Pointer const & r) const;
     itkMaskImageFilterID2IUC2ID2_Superclass_Pointer & operator=(itkMaskImageFilterID2IUC2ID2_Superclass_Pointer const & r);
     itkMaskImageFilterID2IUC2ID2_Superclass_Pointer & operator=(itkMaskImageFilterID2IUC2ID2_Superclass * r);
     itkMaskImageFilterID2IUC2ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterID2IUL2ID2_Pointer {
   public:
     itkMaskImageFilterID2IUL2ID2_Pointer();
     itkMaskImageFilterID2IUL2ID2_Pointer(itkMaskImageFilterID2IUL2ID2_Pointer const & p);
     itkMaskImageFilterID2IUL2ID2_Pointer(itkMaskImageFilterID2IUL2ID2 * p);
     ~itkMaskImageFilterID2IUL2ID2_Pointer();
     itkMaskImageFilterID2IUL2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterID2IUL2ID2 * GetPointer() const;
     bool operator<(itkMaskImageFilterID2IUL2ID2_Pointer const & r) const;
     bool operator>(itkMaskImageFilterID2IUL2ID2_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterID2IUL2ID2_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterID2IUL2ID2_Pointer const & r) const;
     itkMaskImageFilterID2IUL2ID2_Pointer & operator=(itkMaskImageFilterID2IUL2ID2_Pointer const & r);
     itkMaskImageFilterID2IUL2ID2_Pointer & operator=(itkMaskImageFilterID2IUL2ID2 * r);
     itkMaskImageFilterID2IUL2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterID2IUL2ID2_Superclass : public itkInPlaceImageFilterID2ID2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterID2IUL2ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageD2 const * image1);
     void SetInput2(itkImageUL2 const * image2);
     itk::Functor::MaskInput< double, unsigned long, double > & GetFunctor();
     itk::Functor::MaskInput< double, unsigned long, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< double, unsigned long, double > const & functor);
   private:
     itkMaskImageFilterID2IUL2ID2_Superclass(itkMaskImageFilterID2IUL2ID2_Superclass const & arg0);
     void operator=(itkMaskImageFilterID2IUL2ID2_Superclass const & arg0);
   protected:
     itkMaskImageFilterID2IUL2ID2_Superclass();
     ~itkMaskImageFilterID2IUL2ID2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterID2IUL2ID2_Superclass_Pointer {
   public:
     itkMaskImageFilterID2IUL2ID2_Superclass_Pointer();
     itkMaskImageFilterID2IUL2ID2_Superclass_Pointer(itkMaskImageFilterID2IUL2ID2_Superclass_Pointer const & p);
     itkMaskImageFilterID2IUL2ID2_Superclass_Pointer(itkMaskImageFilterID2IUL2ID2_Superclass * p);
     ~itkMaskImageFilterID2IUL2ID2_Superclass_Pointer();
     itkMaskImageFilterID2IUL2ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterID2IUL2ID2_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterID2IUL2ID2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterID2IUL2ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterID2IUL2ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterID2IUL2ID2_Superclass_Pointer const & r) const;
     itkMaskImageFilterID2IUL2ID2_Superclass_Pointer & operator=(itkMaskImageFilterID2IUL2ID2_Superclass_Pointer const & r);
     itkMaskImageFilterID2IUL2ID2_Superclass_Pointer & operator=(itkMaskImageFilterID2IUL2ID2_Superclass * r);
     itkMaskImageFilterID2IUL2ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterID2IUS2ID2_Pointer {
   public:
     itkMaskImageFilterID2IUS2ID2_Pointer();
     itkMaskImageFilterID2IUS2ID2_Pointer(itkMaskImageFilterID2IUS2ID2_Pointer const & p);
     itkMaskImageFilterID2IUS2ID2_Pointer(itkMaskImageFilterID2IUS2ID2 * p);
     ~itkMaskImageFilterID2IUS2ID2_Pointer();
     itkMaskImageFilterID2IUS2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterID2IUS2ID2 * GetPointer() const;
     bool operator<(itkMaskImageFilterID2IUS2ID2_Pointer const & r) const;
     bool operator>(itkMaskImageFilterID2IUS2ID2_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterID2IUS2ID2_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterID2IUS2ID2_Pointer const & r) const;
     itkMaskImageFilterID2IUS2ID2_Pointer & operator=(itkMaskImageFilterID2IUS2ID2_Pointer const & r);
     itkMaskImageFilterID2IUS2ID2_Pointer & operator=(itkMaskImageFilterID2IUS2ID2 * r);
     itkMaskImageFilterID2IUS2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterID2IUS2ID2_Superclass : public itkInPlaceImageFilterID2ID2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterID2IUS2ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageD2 const * image1);
     void SetInput2(itkImageUS2 const * image2);
     itk::Functor::MaskInput< double, unsigned short, double > & GetFunctor();
     itk::Functor::MaskInput< double, unsigned short, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< double, unsigned short, double > const & functor);
   private:
     itkMaskImageFilterID2IUS2ID2_Superclass(itkMaskImageFilterID2IUS2ID2_Superclass const & arg0);
     void operator=(itkMaskImageFilterID2IUS2ID2_Superclass const & arg0);
   protected:
     itkMaskImageFilterID2IUS2ID2_Superclass();
     ~itkMaskImageFilterID2IUS2ID2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterID2IUS2ID2_Superclass_Pointer {
   public:
     itkMaskImageFilterID2IUS2ID2_Superclass_Pointer();
     itkMaskImageFilterID2IUS2ID2_Superclass_Pointer(itkMaskImageFilterID2IUS2ID2_Superclass_Pointer const & p);
     itkMaskImageFilterID2IUS2ID2_Superclass_Pointer(itkMaskImageFilterID2IUS2ID2_Superclass * p);
     ~itkMaskImageFilterID2IUS2ID2_Superclass_Pointer();
     itkMaskImageFilterID2IUS2ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterID2IUS2ID2_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterID2IUS2ID2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterID2IUS2ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterID2IUS2ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterID2IUS2ID2_Superclass_Pointer const & r) const;
     itkMaskImageFilterID2IUS2ID2_Superclass_Pointer & operator=(itkMaskImageFilterID2IUS2ID2_Superclass_Pointer const & r);
     itkMaskImageFilterID2IUS2ID2_Superclass_Pointer & operator=(itkMaskImageFilterID2IUS2ID2_Superclass * r);
     itkMaskImageFilterID2IUS2ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterID3IUC3ID3_Pointer {
   public:
     itkMaskImageFilterID3IUC3ID3_Pointer();
     itkMaskImageFilterID3IUC3ID3_Pointer(itkMaskImageFilterID3IUC3ID3_Pointer const & p);
     itkMaskImageFilterID3IUC3ID3_Pointer(itkMaskImageFilterID3IUC3ID3 * p);
     ~itkMaskImageFilterID3IUC3ID3_Pointer();
     itkMaskImageFilterID3IUC3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterID3IUC3ID3 * GetPointer() const;
     bool operator<(itkMaskImageFilterID3IUC3ID3_Pointer const & r) const;
     bool operator>(itkMaskImageFilterID3IUC3ID3_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterID3IUC3ID3_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterID3IUC3ID3_Pointer const & r) const;
     itkMaskImageFilterID3IUC3ID3_Pointer & operator=(itkMaskImageFilterID3IUC3ID3_Pointer const & r);
     itkMaskImageFilterID3IUC3ID3_Pointer & operator=(itkMaskImageFilterID3IUC3ID3 * r);
     itkMaskImageFilterID3IUC3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterID3IUC3ID3_Superclass : public itkInPlaceImageFilterID3ID3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterID3IUC3ID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageD3 const * image1);
     void SetInput2(itkImageUC3 const * image2);
     itk::Functor::MaskInput< double, unsigned char, double > & GetFunctor();
     itk::Functor::MaskInput< double, unsigned char, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< double, unsigned char, double > const & functor);
   private:
     itkMaskImageFilterID3IUC3ID3_Superclass(itkMaskImageFilterID3IUC3ID3_Superclass const & arg0);
     void operator=(itkMaskImageFilterID3IUC3ID3_Superclass const & arg0);
   protected:
     itkMaskImageFilterID3IUC3ID3_Superclass();
     ~itkMaskImageFilterID3IUC3ID3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterID3IUC3ID3_Superclass_Pointer {
   public:
     itkMaskImageFilterID3IUC3ID3_Superclass_Pointer();
     itkMaskImageFilterID3IUC3ID3_Superclass_Pointer(itkMaskImageFilterID3IUC3ID3_Superclass_Pointer const & p);
     itkMaskImageFilterID3IUC3ID3_Superclass_Pointer(itkMaskImageFilterID3IUC3ID3_Superclass * p);
     ~itkMaskImageFilterID3IUC3ID3_Superclass_Pointer();
     itkMaskImageFilterID3IUC3ID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterID3IUC3ID3_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterID3IUC3ID3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterID3IUC3ID3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterID3IUC3ID3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterID3IUC3ID3_Superclass_Pointer const & r) const;
     itkMaskImageFilterID3IUC3ID3_Superclass_Pointer & operator=(itkMaskImageFilterID3IUC3ID3_Superclass_Pointer const & r);
     itkMaskImageFilterID3IUC3ID3_Superclass_Pointer & operator=(itkMaskImageFilterID3IUC3ID3_Superclass * r);
     itkMaskImageFilterID3IUC3ID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterID3IUL3ID3_Pointer {
   public:
     itkMaskImageFilterID3IUL3ID3_Pointer();
     itkMaskImageFilterID3IUL3ID3_Pointer(itkMaskImageFilterID3IUL3ID3_Pointer const & p);
     itkMaskImageFilterID3IUL3ID3_Pointer(itkMaskImageFilterID3IUL3ID3 * p);
     ~itkMaskImageFilterID3IUL3ID3_Pointer();
     itkMaskImageFilterID3IUL3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterID3IUL3ID3 * GetPointer() const;
     bool operator<(itkMaskImageFilterID3IUL3ID3_Pointer const & r) const;
     bool operator>(itkMaskImageFilterID3IUL3ID3_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterID3IUL3ID3_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterID3IUL3ID3_Pointer const & r) const;
     itkMaskImageFilterID3IUL3ID3_Pointer & operator=(itkMaskImageFilterID3IUL3ID3_Pointer const & r);
     itkMaskImageFilterID3IUL3ID3_Pointer & operator=(itkMaskImageFilterID3IUL3ID3 * r);
     itkMaskImageFilterID3IUL3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterID3IUL3ID3_Superclass : public itkInPlaceImageFilterID3ID3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterID3IUL3ID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageD3 const * image1);
     void SetInput2(itkImageUL3 const * image2);
     itk::Functor::MaskInput< double, unsigned long, double > & GetFunctor();
     itk::Functor::MaskInput< double, unsigned long, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< double, unsigned long, double > const & functor);
   private:
     itkMaskImageFilterID3IUL3ID3_Superclass(itkMaskImageFilterID3IUL3ID3_Superclass const & arg0);
     void operator=(itkMaskImageFilterID3IUL3ID3_Superclass const & arg0);
   protected:
     itkMaskImageFilterID3IUL3ID3_Superclass();
     ~itkMaskImageFilterID3IUL3ID3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterID3IUL3ID3_Superclass_Pointer {
   public:
     itkMaskImageFilterID3IUL3ID3_Superclass_Pointer();
     itkMaskImageFilterID3IUL3ID3_Superclass_Pointer(itkMaskImageFilterID3IUL3ID3_Superclass_Pointer const & p);
     itkMaskImageFilterID3IUL3ID3_Superclass_Pointer(itkMaskImageFilterID3IUL3ID3_Superclass * p);
     ~itkMaskImageFilterID3IUL3ID3_Superclass_Pointer();
     itkMaskImageFilterID3IUL3ID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterID3IUL3ID3_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterID3IUL3ID3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterID3IUL3ID3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterID3IUL3ID3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterID3IUL3ID3_Superclass_Pointer const & r) const;
     itkMaskImageFilterID3IUL3ID3_Superclass_Pointer & operator=(itkMaskImageFilterID3IUL3ID3_Superclass_Pointer const & r);
     itkMaskImageFilterID3IUL3ID3_Superclass_Pointer & operator=(itkMaskImageFilterID3IUL3ID3_Superclass * r);
     itkMaskImageFilterID3IUL3ID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterID3IUS3ID3_Pointer {
   public:
     itkMaskImageFilterID3IUS3ID3_Pointer();
     itkMaskImageFilterID3IUS3ID3_Pointer(itkMaskImageFilterID3IUS3ID3_Pointer const & p);
     itkMaskImageFilterID3IUS3ID3_Pointer(itkMaskImageFilterID3IUS3ID3 * p);
     ~itkMaskImageFilterID3IUS3ID3_Pointer();
     itkMaskImageFilterID3IUS3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterID3IUS3ID3 * GetPointer() const;
     bool operator<(itkMaskImageFilterID3IUS3ID3_Pointer const & r) const;
     bool operator>(itkMaskImageFilterID3IUS3ID3_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterID3IUS3ID3_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterID3IUS3ID3_Pointer const & r) const;
     itkMaskImageFilterID3IUS3ID3_Pointer & operator=(itkMaskImageFilterID3IUS3ID3_Pointer const & r);
     itkMaskImageFilterID3IUS3ID3_Pointer & operator=(itkMaskImageFilterID3IUS3ID3 * r);
     itkMaskImageFilterID3IUS3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterID3IUS3ID3_Superclass : public itkInPlaceImageFilterID3ID3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterID3IUS3ID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageD3 const * image1);
     void SetInput2(itkImageUS3 const * image2);
     itk::Functor::MaskInput< double, unsigned short, double > & GetFunctor();
     itk::Functor::MaskInput< double, unsigned short, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< double, unsigned short, double > const & functor);
   private:
     itkMaskImageFilterID3IUS3ID3_Superclass(itkMaskImageFilterID3IUS3ID3_Superclass const & arg0);
     void operator=(itkMaskImageFilterID3IUS3ID3_Superclass const & arg0);
   protected:
     itkMaskImageFilterID3IUS3ID3_Superclass();
     ~itkMaskImageFilterID3IUS3ID3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterID3IUS3ID3_Superclass_Pointer {
   public:
     itkMaskImageFilterID3IUS3ID3_Superclass_Pointer();
     itkMaskImageFilterID3IUS3ID3_Superclass_Pointer(itkMaskImageFilterID3IUS3ID3_Superclass_Pointer const & p);
     itkMaskImageFilterID3IUS3ID3_Superclass_Pointer(itkMaskImageFilterID3IUS3ID3_Superclass * p);
     ~itkMaskImageFilterID3IUS3ID3_Superclass_Pointer();
     itkMaskImageFilterID3IUS3ID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterID3IUS3ID3_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterID3IUS3ID3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterID3IUS3ID3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterID3IUS3ID3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterID3IUS3ID3_Superclass_Pointer const & r) const;
     itkMaskImageFilterID3IUS3ID3_Superclass_Pointer & operator=(itkMaskImageFilterID3IUS3ID3_Superclass_Pointer const & r);
     itkMaskImageFilterID3IUS3ID3_Superclass_Pointer & operator=(itkMaskImageFilterID3IUS3ID3_Superclass * r);
     itkMaskImageFilterID3IUS3ID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIF2IUC2IF2_Pointer {
   public:
     itkMaskImageFilterIF2IUC2IF2_Pointer();
     itkMaskImageFilterIF2IUC2IF2_Pointer(itkMaskImageFilterIF2IUC2IF2_Pointer const & p);
     itkMaskImageFilterIF2IUC2IF2_Pointer(itkMaskImageFilterIF2IUC2IF2 * p);
     ~itkMaskImageFilterIF2IUC2IF2_Pointer();
     itkMaskImageFilterIF2IUC2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIF2IUC2IF2 * GetPointer() const;
     bool operator<(itkMaskImageFilterIF2IUC2IF2_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIF2IUC2IF2_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIF2IUC2IF2_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIF2IUC2IF2_Pointer const & r) const;
     itkMaskImageFilterIF2IUC2IF2_Pointer & operator=(itkMaskImageFilterIF2IUC2IF2_Pointer const & r);
     itkMaskImageFilterIF2IUC2IF2_Pointer & operator=(itkMaskImageFilterIF2IUC2IF2 * r);
     itkMaskImageFilterIF2IUC2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIF2IUC2IF2_Superclass : public itkInPlaceImageFilterIF2IF2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIF2IUC2IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageF2 const * image1);
     void SetInput2(itkImageUC2 const * image2);
     itk::Functor::MaskInput< float, unsigned char, float > & GetFunctor();
     itk::Functor::MaskInput< float, unsigned char, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< float, unsigned char, float > const & functor);
   private:
     itkMaskImageFilterIF2IUC2IF2_Superclass(itkMaskImageFilterIF2IUC2IF2_Superclass const & arg0);
     void operator=(itkMaskImageFilterIF2IUC2IF2_Superclass const & arg0);
   protected:
     itkMaskImageFilterIF2IUC2IF2_Superclass();
     ~itkMaskImageFilterIF2IUC2IF2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIF2IUC2IF2_Superclass_Pointer {
   public:
     itkMaskImageFilterIF2IUC2IF2_Superclass_Pointer();
     itkMaskImageFilterIF2IUC2IF2_Superclass_Pointer(itkMaskImageFilterIF2IUC2IF2_Superclass_Pointer const & p);
     itkMaskImageFilterIF2IUC2IF2_Superclass_Pointer(itkMaskImageFilterIF2IUC2IF2_Superclass * p);
     ~itkMaskImageFilterIF2IUC2IF2_Superclass_Pointer();
     itkMaskImageFilterIF2IUC2IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIF2IUC2IF2_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIF2IUC2IF2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIF2IUC2IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIF2IUC2IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIF2IUC2IF2_Superclass_Pointer const & r) const;
     itkMaskImageFilterIF2IUC2IF2_Superclass_Pointer & operator=(itkMaskImageFilterIF2IUC2IF2_Superclass_Pointer const & r);
     itkMaskImageFilterIF2IUC2IF2_Superclass_Pointer & operator=(itkMaskImageFilterIF2IUC2IF2_Superclass * r);
     itkMaskImageFilterIF2IUC2IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIF2IUL2IF2_Pointer {
   public:
     itkMaskImageFilterIF2IUL2IF2_Pointer();
     itkMaskImageFilterIF2IUL2IF2_Pointer(itkMaskImageFilterIF2IUL2IF2_Pointer const & p);
     itkMaskImageFilterIF2IUL2IF2_Pointer(itkMaskImageFilterIF2IUL2IF2 * p);
     ~itkMaskImageFilterIF2IUL2IF2_Pointer();
     itkMaskImageFilterIF2IUL2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIF2IUL2IF2 * GetPointer() const;
     bool operator<(itkMaskImageFilterIF2IUL2IF2_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIF2IUL2IF2_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIF2IUL2IF2_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIF2IUL2IF2_Pointer const & r) const;
     itkMaskImageFilterIF2IUL2IF2_Pointer & operator=(itkMaskImageFilterIF2IUL2IF2_Pointer const & r);
     itkMaskImageFilterIF2IUL2IF2_Pointer & operator=(itkMaskImageFilterIF2IUL2IF2 * r);
     itkMaskImageFilterIF2IUL2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIF2IUL2IF2_Superclass : public itkInPlaceImageFilterIF2IF2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIF2IUL2IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageF2 const * image1);
     void SetInput2(itkImageUL2 const * image2);
     itk::Functor::MaskInput< float, unsigned long, float > & GetFunctor();
     itk::Functor::MaskInput< float, unsigned long, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< float, unsigned long, float > const & functor);
   private:
     itkMaskImageFilterIF2IUL2IF2_Superclass(itkMaskImageFilterIF2IUL2IF2_Superclass const & arg0);
     void operator=(itkMaskImageFilterIF2IUL2IF2_Superclass const & arg0);
   protected:
     itkMaskImageFilterIF2IUL2IF2_Superclass();
     ~itkMaskImageFilterIF2IUL2IF2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIF2IUL2IF2_Superclass_Pointer {
   public:
     itkMaskImageFilterIF2IUL2IF2_Superclass_Pointer();
     itkMaskImageFilterIF2IUL2IF2_Superclass_Pointer(itkMaskImageFilterIF2IUL2IF2_Superclass_Pointer const & p);
     itkMaskImageFilterIF2IUL2IF2_Superclass_Pointer(itkMaskImageFilterIF2IUL2IF2_Superclass * p);
     ~itkMaskImageFilterIF2IUL2IF2_Superclass_Pointer();
     itkMaskImageFilterIF2IUL2IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIF2IUL2IF2_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIF2IUL2IF2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIF2IUL2IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIF2IUL2IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIF2IUL2IF2_Superclass_Pointer const & r) const;
     itkMaskImageFilterIF2IUL2IF2_Superclass_Pointer & operator=(itkMaskImageFilterIF2IUL2IF2_Superclass_Pointer const & r);
     itkMaskImageFilterIF2IUL2IF2_Superclass_Pointer & operator=(itkMaskImageFilterIF2IUL2IF2_Superclass * r);
     itkMaskImageFilterIF2IUL2IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIF2IUS2IF2_Pointer {
   public:
     itkMaskImageFilterIF2IUS2IF2_Pointer();
     itkMaskImageFilterIF2IUS2IF2_Pointer(itkMaskImageFilterIF2IUS2IF2_Pointer const & p);
     itkMaskImageFilterIF2IUS2IF2_Pointer(itkMaskImageFilterIF2IUS2IF2 * p);
     ~itkMaskImageFilterIF2IUS2IF2_Pointer();
     itkMaskImageFilterIF2IUS2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIF2IUS2IF2 * GetPointer() const;
     bool operator<(itkMaskImageFilterIF2IUS2IF2_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIF2IUS2IF2_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIF2IUS2IF2_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIF2IUS2IF2_Pointer const & r) const;
     itkMaskImageFilterIF2IUS2IF2_Pointer & operator=(itkMaskImageFilterIF2IUS2IF2_Pointer const & r);
     itkMaskImageFilterIF2IUS2IF2_Pointer & operator=(itkMaskImageFilterIF2IUS2IF2 * r);
     itkMaskImageFilterIF2IUS2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIF2IUS2IF2_Superclass : public itkInPlaceImageFilterIF2IF2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIF2IUS2IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageF2 const * image1);
     void SetInput2(itkImageUS2 const * image2);
     itk::Functor::MaskInput< float, unsigned short, float > & GetFunctor();
     itk::Functor::MaskInput< float, unsigned short, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< float, unsigned short, float > const & functor);
   private:
     itkMaskImageFilterIF2IUS2IF2_Superclass(itkMaskImageFilterIF2IUS2IF2_Superclass const & arg0);
     void operator=(itkMaskImageFilterIF2IUS2IF2_Superclass const & arg0);
   protected:
     itkMaskImageFilterIF2IUS2IF2_Superclass();
     ~itkMaskImageFilterIF2IUS2IF2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIF2IUS2IF2_Superclass_Pointer {
   public:
     itkMaskImageFilterIF2IUS2IF2_Superclass_Pointer();
     itkMaskImageFilterIF2IUS2IF2_Superclass_Pointer(itkMaskImageFilterIF2IUS2IF2_Superclass_Pointer const & p);
     itkMaskImageFilterIF2IUS2IF2_Superclass_Pointer(itkMaskImageFilterIF2IUS2IF2_Superclass * p);
     ~itkMaskImageFilterIF2IUS2IF2_Superclass_Pointer();
     itkMaskImageFilterIF2IUS2IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIF2IUS2IF2_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIF2IUS2IF2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIF2IUS2IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIF2IUS2IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIF2IUS2IF2_Superclass_Pointer const & r) const;
     itkMaskImageFilterIF2IUS2IF2_Superclass_Pointer & operator=(itkMaskImageFilterIF2IUS2IF2_Superclass_Pointer const & r);
     itkMaskImageFilterIF2IUS2IF2_Superclass_Pointer & operator=(itkMaskImageFilterIF2IUS2IF2_Superclass * r);
     itkMaskImageFilterIF2IUS2IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIF3IUC3IF3_Pointer {
   public:
     itkMaskImageFilterIF3IUC3IF3_Pointer();
     itkMaskImageFilterIF3IUC3IF3_Pointer(itkMaskImageFilterIF3IUC3IF3_Pointer const & p);
     itkMaskImageFilterIF3IUC3IF3_Pointer(itkMaskImageFilterIF3IUC3IF3 * p);
     ~itkMaskImageFilterIF3IUC3IF3_Pointer();
     itkMaskImageFilterIF3IUC3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIF3IUC3IF3 * GetPointer() const;
     bool operator<(itkMaskImageFilterIF3IUC3IF3_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIF3IUC3IF3_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIF3IUC3IF3_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIF3IUC3IF3_Pointer const & r) const;
     itkMaskImageFilterIF3IUC3IF3_Pointer & operator=(itkMaskImageFilterIF3IUC3IF3_Pointer const & r);
     itkMaskImageFilterIF3IUC3IF3_Pointer & operator=(itkMaskImageFilterIF3IUC3IF3 * r);
     itkMaskImageFilterIF3IUC3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIF3IUC3IF3_Superclass : public itkInPlaceImageFilterIF3IF3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIF3IUC3IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageF3 const * image1);
     void SetInput2(itkImageUC3 const * image2);
     itk::Functor::MaskInput< float, unsigned char, float > & GetFunctor();
     itk::Functor::MaskInput< float, unsigned char, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< float, unsigned char, float > const & functor);
   private:
     itkMaskImageFilterIF3IUC3IF3_Superclass(itkMaskImageFilterIF3IUC3IF3_Superclass const & arg0);
     void operator=(itkMaskImageFilterIF3IUC3IF3_Superclass const & arg0);
   protected:
     itkMaskImageFilterIF3IUC3IF3_Superclass();
     ~itkMaskImageFilterIF3IUC3IF3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIF3IUC3IF3_Superclass_Pointer {
   public:
     itkMaskImageFilterIF3IUC3IF3_Superclass_Pointer();
     itkMaskImageFilterIF3IUC3IF3_Superclass_Pointer(itkMaskImageFilterIF3IUC3IF3_Superclass_Pointer const & p);
     itkMaskImageFilterIF3IUC3IF3_Superclass_Pointer(itkMaskImageFilterIF3IUC3IF3_Superclass * p);
     ~itkMaskImageFilterIF3IUC3IF3_Superclass_Pointer();
     itkMaskImageFilterIF3IUC3IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIF3IUC3IF3_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIF3IUC3IF3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIF3IUC3IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIF3IUC3IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIF3IUC3IF3_Superclass_Pointer const & r) const;
     itkMaskImageFilterIF3IUC3IF3_Superclass_Pointer & operator=(itkMaskImageFilterIF3IUC3IF3_Superclass_Pointer const & r);
     itkMaskImageFilterIF3IUC3IF3_Superclass_Pointer & operator=(itkMaskImageFilterIF3IUC3IF3_Superclass * r);
     itkMaskImageFilterIF3IUC3IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIF3IUL3IF3_Pointer {
   public:
     itkMaskImageFilterIF3IUL3IF3_Pointer();
     itkMaskImageFilterIF3IUL3IF3_Pointer(itkMaskImageFilterIF3IUL3IF3_Pointer const & p);
     itkMaskImageFilterIF3IUL3IF3_Pointer(itkMaskImageFilterIF3IUL3IF3 * p);
     ~itkMaskImageFilterIF3IUL3IF3_Pointer();
     itkMaskImageFilterIF3IUL3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIF3IUL3IF3 * GetPointer() const;
     bool operator<(itkMaskImageFilterIF3IUL3IF3_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIF3IUL3IF3_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIF3IUL3IF3_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIF3IUL3IF3_Pointer const & r) const;
     itkMaskImageFilterIF3IUL3IF3_Pointer & operator=(itkMaskImageFilterIF3IUL3IF3_Pointer const & r);
     itkMaskImageFilterIF3IUL3IF3_Pointer & operator=(itkMaskImageFilterIF3IUL3IF3 * r);
     itkMaskImageFilterIF3IUL3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIF3IUL3IF3_Superclass : public itkInPlaceImageFilterIF3IF3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIF3IUL3IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageF3 const * image1);
     void SetInput2(itkImageUL3 const * image2);
     itk::Functor::MaskInput< float, unsigned long, float > & GetFunctor();
     itk::Functor::MaskInput< float, unsigned long, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< float, unsigned long, float > const & functor);
   private:
     itkMaskImageFilterIF3IUL3IF3_Superclass(itkMaskImageFilterIF3IUL3IF3_Superclass const & arg0);
     void operator=(itkMaskImageFilterIF3IUL3IF3_Superclass const & arg0);
   protected:
     itkMaskImageFilterIF3IUL3IF3_Superclass();
     ~itkMaskImageFilterIF3IUL3IF3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIF3IUL3IF3_Superclass_Pointer {
   public:
     itkMaskImageFilterIF3IUL3IF3_Superclass_Pointer();
     itkMaskImageFilterIF3IUL3IF3_Superclass_Pointer(itkMaskImageFilterIF3IUL3IF3_Superclass_Pointer const & p);
     itkMaskImageFilterIF3IUL3IF3_Superclass_Pointer(itkMaskImageFilterIF3IUL3IF3_Superclass * p);
     ~itkMaskImageFilterIF3IUL3IF3_Superclass_Pointer();
     itkMaskImageFilterIF3IUL3IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIF3IUL3IF3_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIF3IUL3IF3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIF3IUL3IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIF3IUL3IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIF3IUL3IF3_Superclass_Pointer const & r) const;
     itkMaskImageFilterIF3IUL3IF3_Superclass_Pointer & operator=(itkMaskImageFilterIF3IUL3IF3_Superclass_Pointer const & r);
     itkMaskImageFilterIF3IUL3IF3_Superclass_Pointer & operator=(itkMaskImageFilterIF3IUL3IF3_Superclass * r);
     itkMaskImageFilterIF3IUL3IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIF3IUS3IF3_Pointer {
   public:
     itkMaskImageFilterIF3IUS3IF3_Pointer();
     itkMaskImageFilterIF3IUS3IF3_Pointer(itkMaskImageFilterIF3IUS3IF3_Pointer const & p);
     itkMaskImageFilterIF3IUS3IF3_Pointer(itkMaskImageFilterIF3IUS3IF3 * p);
     ~itkMaskImageFilterIF3IUS3IF3_Pointer();
     itkMaskImageFilterIF3IUS3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIF3IUS3IF3 * GetPointer() const;
     bool operator<(itkMaskImageFilterIF3IUS3IF3_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIF3IUS3IF3_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIF3IUS3IF3_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIF3IUS3IF3_Pointer const & r) const;
     itkMaskImageFilterIF3IUS3IF3_Pointer & operator=(itkMaskImageFilterIF3IUS3IF3_Pointer const & r);
     itkMaskImageFilterIF3IUS3IF3_Pointer & operator=(itkMaskImageFilterIF3IUS3IF3 * r);
     itkMaskImageFilterIF3IUS3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIF3IUS3IF3_Superclass : public itkInPlaceImageFilterIF3IF3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIF3IUS3IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageF3 const * image1);
     void SetInput2(itkImageUS3 const * image2);
     itk::Functor::MaskInput< float, unsigned short, float > & GetFunctor();
     itk::Functor::MaskInput< float, unsigned short, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< float, unsigned short, float > const & functor);
   private:
     itkMaskImageFilterIF3IUS3IF3_Superclass(itkMaskImageFilterIF3IUS3IF3_Superclass const & arg0);
     void operator=(itkMaskImageFilterIF3IUS3IF3_Superclass const & arg0);
   protected:
     itkMaskImageFilterIF3IUS3IF3_Superclass();
     ~itkMaskImageFilterIF3IUS3IF3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIF3IUS3IF3_Superclass_Pointer {
   public:
     itkMaskImageFilterIF3IUS3IF3_Superclass_Pointer();
     itkMaskImageFilterIF3IUS3IF3_Superclass_Pointer(itkMaskImageFilterIF3IUS3IF3_Superclass_Pointer const & p);
     itkMaskImageFilterIF3IUS3IF3_Superclass_Pointer(itkMaskImageFilterIF3IUS3IF3_Superclass * p);
     ~itkMaskImageFilterIF3IUS3IF3_Superclass_Pointer();
     itkMaskImageFilterIF3IUS3IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIF3IUS3IF3_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIF3IUS3IF3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIF3IUS3IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIF3IUS3IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIF3IUS3IF3_Superclass_Pointer const & r) const;
     itkMaskImageFilterIF3IUS3IF3_Superclass_Pointer & operator=(itkMaskImageFilterIF3IUS3IF3_Superclass_Pointer const & r);
     itkMaskImageFilterIF3IUS3IF3_Superclass_Pointer & operator=(itkMaskImageFilterIF3IUS3IF3_Superclass * r);
     itkMaskImageFilterIF3IUS3IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Pointer {
   public:
     itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Pointer();
     itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Pointer(itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Pointer const & p);
     itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Pointer(itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2 * p);
     ~itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Pointer();
     itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2 * GetPointer() const;
     bool operator<(itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Pointer const & r) const;
     itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Pointer & operator=(itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Pointer const & r);
     itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Pointer & operator=(itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2 * r);
     itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Superclass : public itkInPlaceImageFilterIRGBAUS2IRGBAUS2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageRGBAUS2 const * image1);
     void SetInput2(itkImageUC2 const * image2);
     itk::Functor::MaskInput< itk::RGBAPixel< unsigned short >, unsigned char, itk::RGBAPixel< unsigned short > > & GetFunctor();
     itk::Functor::MaskInput< itk::RGBAPixel< unsigned short >, unsigned char, itk::RGBAPixel< unsigned short > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< itk::RGBAPixel< unsigned short >, unsigned char, itk::RGBAPixel< unsigned short > > const & functor);
   private:
     itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Superclass(itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Superclass const & arg0);
     void operator=(itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Superclass const & arg0);
   protected:
     itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Superclass();
     ~itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Superclass_Pointer {
   public:
     itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Superclass_Pointer();
     itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Superclass_Pointer(itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Superclass_Pointer const & p);
     itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Superclass_Pointer(itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Superclass * p);
     ~itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Superclass_Pointer();
     itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Superclass_Pointer const & r) const;
     itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Superclass_Pointer & operator=(itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Superclass_Pointer const & r);
     itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Superclass_Pointer & operator=(itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Superclass * r);
     itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Pointer {
   public:
     itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Pointer();
     itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Pointer(itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Pointer const & p);
     itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Pointer(itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2 * p);
     ~itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Pointer();
     itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2 * GetPointer() const;
     bool operator<(itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Pointer const & r) const;
     itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Pointer & operator=(itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Pointer const & r);
     itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Pointer & operator=(itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2 * r);
     itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Superclass : public itkInPlaceImageFilterIRGBAUS2IRGBAUS2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageRGBAUS2 const * image1);
     void SetInput2(itkImageUL2 const * image2);
     itk::Functor::MaskInput< itk::RGBAPixel< unsigned short >, unsigned long, itk::RGBAPixel< unsigned short > > & GetFunctor();
     itk::Functor::MaskInput< itk::RGBAPixel< unsigned short >, unsigned long, itk::RGBAPixel< unsigned short > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< itk::RGBAPixel< unsigned short >, unsigned long, itk::RGBAPixel< unsigned short > > const & functor);
   private:
     itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Superclass(itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Superclass const & arg0);
     void operator=(itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Superclass const & arg0);
   protected:
     itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Superclass();
     ~itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Superclass_Pointer {
   public:
     itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Superclass_Pointer();
     itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Superclass_Pointer(itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Superclass_Pointer const & p);
     itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Superclass_Pointer(itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Superclass * p);
     ~itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Superclass_Pointer();
     itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Superclass_Pointer const & r) const;
     itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Superclass_Pointer & operator=(itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Superclass_Pointer const & r);
     itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Superclass_Pointer & operator=(itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Superclass * r);
     itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Pointer {
   public:
     itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Pointer();
     itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Pointer(itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Pointer const & p);
     itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Pointer(itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2 * p);
     ~itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Pointer();
     itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2 * GetPointer() const;
     bool operator<(itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Pointer const & r) const;
     itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Pointer & operator=(itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Pointer const & r);
     itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Pointer & operator=(itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2 * r);
     itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Superclass : public itkInPlaceImageFilterIRGBAUS2IRGBAUS2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageRGBAUS2 const * image1);
     void SetInput2(itkImageUS2 const * image2);
     itk::Functor::MaskInput< itk::RGBAPixel< unsigned short >, unsigned short, itk::RGBAPixel< unsigned short > > & GetFunctor();
     itk::Functor::MaskInput< itk::RGBAPixel< unsigned short >, unsigned short, itk::RGBAPixel< unsigned short > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< itk::RGBAPixel< unsigned short >, unsigned short, itk::RGBAPixel< unsigned short > > const & functor);
   private:
     itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Superclass(itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Superclass const & arg0);
     void operator=(itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Superclass const & arg0);
   protected:
     itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Superclass();
     ~itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Superclass_Pointer {
   public:
     itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Superclass_Pointer();
     itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Superclass_Pointer(itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Superclass_Pointer const & p);
     itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Superclass_Pointer(itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Superclass * p);
     ~itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Superclass_Pointer();
     itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Superclass_Pointer const & r) const;
     itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Superclass_Pointer & operator=(itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Superclass_Pointer const & r);
     itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Superclass_Pointer & operator=(itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Superclass * r);
     itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Pointer {
   public:
     itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Pointer();
     itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Pointer(itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Pointer const & p);
     itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Pointer(itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3 * p);
     ~itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Pointer();
     itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3 * GetPointer() const;
     bool operator<(itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Pointer const & r) const;
     itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Pointer & operator=(itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Pointer const & r);
     itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Pointer & operator=(itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3 * r);
     itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Superclass : public itkInPlaceImageFilterIRGBAUS3IRGBAUS3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageRGBAUS3 const * image1);
     void SetInput2(itkImageUC3 const * image2);
     itk::Functor::MaskInput< itk::RGBAPixel< unsigned short >, unsigned char, itk::RGBAPixel< unsigned short > > & GetFunctor();
     itk::Functor::MaskInput< itk::RGBAPixel< unsigned short >, unsigned char, itk::RGBAPixel< unsigned short > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< itk::RGBAPixel< unsigned short >, unsigned char, itk::RGBAPixel< unsigned short > > const & functor);
   private:
     itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Superclass(itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Superclass const & arg0);
     void operator=(itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Superclass const & arg0);
   protected:
     itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Superclass();
     ~itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Superclass_Pointer {
   public:
     itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Superclass_Pointer();
     itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Superclass_Pointer(itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Superclass_Pointer const & p);
     itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Superclass_Pointer(itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Superclass * p);
     ~itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Superclass_Pointer();
     itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Superclass_Pointer const & r) const;
     itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Superclass_Pointer & operator=(itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Superclass_Pointer const & r);
     itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Superclass_Pointer & operator=(itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Superclass * r);
     itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Pointer {
   public:
     itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Pointer();
     itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Pointer(itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Pointer const & p);
     itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Pointer(itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3 * p);
     ~itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Pointer();
     itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3 * GetPointer() const;
     bool operator<(itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Pointer const & r) const;
     itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Pointer & operator=(itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Pointer const & r);
     itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Pointer & operator=(itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3 * r);
     itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Superclass : public itkInPlaceImageFilterIRGBAUS3IRGBAUS3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageRGBAUS3 const * image1);
     void SetInput2(itkImageUL3 const * image2);
     itk::Functor::MaskInput< itk::RGBAPixel< unsigned short >, unsigned long, itk::RGBAPixel< unsigned short > > & GetFunctor();
     itk::Functor::MaskInput< itk::RGBAPixel< unsigned short >, unsigned long, itk::RGBAPixel< unsigned short > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< itk::RGBAPixel< unsigned short >, unsigned long, itk::RGBAPixel< unsigned short > > const & functor);
   private:
     itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Superclass(itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Superclass const & arg0);
     void operator=(itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Superclass const & arg0);
   protected:
     itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Superclass();
     ~itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Superclass_Pointer {
   public:
     itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Superclass_Pointer();
     itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Superclass_Pointer(itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Superclass_Pointer const & p);
     itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Superclass_Pointer(itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Superclass * p);
     ~itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Superclass_Pointer();
     itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Superclass_Pointer const & r) const;
     itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Superclass_Pointer & operator=(itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Superclass_Pointer const & r);
     itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Superclass_Pointer & operator=(itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Superclass * r);
     itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Pointer {
   public:
     itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Pointer();
     itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Pointer(itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Pointer const & p);
     itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Pointer(itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3 * p);
     ~itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Pointer();
     itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3 * GetPointer() const;
     bool operator<(itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Pointer const & r) const;
     itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Pointer & operator=(itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Pointer const & r);
     itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Pointer & operator=(itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3 * r);
     itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Superclass : public itkInPlaceImageFilterIRGBAUS3IRGBAUS3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageRGBAUS3 const * image1);
     void SetInput2(itkImageUS3 const * image2);
     itk::Functor::MaskInput< itk::RGBAPixel< unsigned short >, unsigned short, itk::RGBAPixel< unsigned short > > & GetFunctor();
     itk::Functor::MaskInput< itk::RGBAPixel< unsigned short >, unsigned short, itk::RGBAPixel< unsigned short > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< itk::RGBAPixel< unsigned short >, unsigned short, itk::RGBAPixel< unsigned short > > const & functor);
   private:
     itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Superclass(itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Superclass const & arg0);
     void operator=(itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Superclass const & arg0);
   protected:
     itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Superclass();
     ~itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Superclass_Pointer {
   public:
     itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Superclass_Pointer();
     itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Superclass_Pointer(itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Superclass_Pointer const & p);
     itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Superclass_Pointer(itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Superclass * p);
     ~itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Superclass_Pointer();
     itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Superclass_Pointer const & r) const;
     itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Superclass_Pointer & operator=(itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Superclass_Pointer const & r);
     itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Superclass_Pointer & operator=(itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Superclass * r);
     itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Pointer {
   public:
     itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Pointer();
     itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Pointer(itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Pointer const & p);
     itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Pointer(itkMaskImageFilterIRGBUS2IUC2IRGBUS2 * p);
     ~itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Pointer();
     itkMaskImageFilterIRGBUS2IUC2IRGBUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIRGBUS2IUC2IRGBUS2 * GetPointer() const;
     bool operator<(itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Pointer const & r) const;
     itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Pointer & operator=(itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Pointer const & r);
     itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Pointer & operator=(itkMaskImageFilterIRGBUS2IUC2IRGBUS2 * r);
     itkMaskImageFilterIRGBUS2IUC2IRGBUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Superclass : public itkInPlaceImageFilterIRGBUS2IRGBUS2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageRGBUS2 const * image1);
     void SetInput2(itkImageUC2 const * image2);
     itk::Functor::MaskInput< itk::RGBPixel< unsigned short >, unsigned char, itk::RGBPixel< unsigned short > > & GetFunctor();
     itk::Functor::MaskInput< itk::RGBPixel< unsigned short >, unsigned char, itk::RGBPixel< unsigned short > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< itk::RGBPixel< unsigned short >, unsigned char, itk::RGBPixel< unsigned short > > const & functor);
   private:
     itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Superclass(itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Superclass const & arg0);
     void operator=(itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Superclass const & arg0);
   protected:
     itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Superclass();
     ~itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Superclass_Pointer {
   public:
     itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Superclass_Pointer();
     itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Superclass_Pointer(itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Superclass_Pointer const & p);
     itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Superclass_Pointer(itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Superclass * p);
     ~itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Superclass_Pointer();
     itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Superclass_Pointer const & r) const;
     itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Superclass_Pointer & operator=(itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Superclass_Pointer const & r);
     itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Superclass_Pointer & operator=(itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Superclass * r);
     itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Pointer {
   public:
     itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Pointer();
     itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Pointer(itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Pointer const & p);
     itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Pointer(itkMaskImageFilterIRGBUS2IUL2IRGBUS2 * p);
     ~itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Pointer();
     itkMaskImageFilterIRGBUS2IUL2IRGBUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIRGBUS2IUL2IRGBUS2 * GetPointer() const;
     bool operator<(itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Pointer const & r) const;
     itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Pointer & operator=(itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Pointer const & r);
     itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Pointer & operator=(itkMaskImageFilterIRGBUS2IUL2IRGBUS2 * r);
     itkMaskImageFilterIRGBUS2IUL2IRGBUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Superclass : public itkInPlaceImageFilterIRGBUS2IRGBUS2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageRGBUS2 const * image1);
     void SetInput2(itkImageUL2 const * image2);
     itk::Functor::MaskInput< itk::RGBPixel< unsigned short >, unsigned long, itk::RGBPixel< unsigned short > > & GetFunctor();
     itk::Functor::MaskInput< itk::RGBPixel< unsigned short >, unsigned long, itk::RGBPixel< unsigned short > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< itk::RGBPixel< unsigned short >, unsigned long, itk::RGBPixel< unsigned short > > const & functor);
   private:
     itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Superclass(itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Superclass const & arg0);
     void operator=(itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Superclass const & arg0);
   protected:
     itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Superclass();
     ~itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Superclass_Pointer {
   public:
     itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Superclass_Pointer();
     itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Superclass_Pointer(itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Superclass_Pointer const & p);
     itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Superclass_Pointer(itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Superclass * p);
     ~itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Superclass_Pointer();
     itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Superclass_Pointer const & r) const;
     itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Superclass_Pointer & operator=(itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Superclass_Pointer const & r);
     itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Superclass_Pointer & operator=(itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Superclass * r);
     itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Pointer {
   public:
     itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Pointer();
     itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Pointer(itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Pointer const & p);
     itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Pointer(itkMaskImageFilterIRGBUS2IUS2IRGBUS2 * p);
     ~itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Pointer();
     itkMaskImageFilterIRGBUS2IUS2IRGBUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIRGBUS2IUS2IRGBUS2 * GetPointer() const;
     bool operator<(itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Pointer const & r) const;
     itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Pointer & operator=(itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Pointer const & r);
     itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Pointer & operator=(itkMaskImageFilterIRGBUS2IUS2IRGBUS2 * r);
     itkMaskImageFilterIRGBUS2IUS2IRGBUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Superclass : public itkInPlaceImageFilterIRGBUS2IRGBUS2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageRGBUS2 const * image1);
     void SetInput2(itkImageUS2 const * image2);
     itk::Functor::MaskInput< itk::RGBPixel< unsigned short >, unsigned short, itk::RGBPixel< unsigned short > > & GetFunctor();
     itk::Functor::MaskInput< itk::RGBPixel< unsigned short >, unsigned short, itk::RGBPixel< unsigned short > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< itk::RGBPixel< unsigned short >, unsigned short, itk::RGBPixel< unsigned short > > const & functor);
   private:
     itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Superclass(itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Superclass const & arg0);
     void operator=(itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Superclass const & arg0);
   protected:
     itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Superclass();
     ~itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Superclass_Pointer {
   public:
     itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Superclass_Pointer();
     itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Superclass_Pointer(itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Superclass_Pointer const & p);
     itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Superclass_Pointer(itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Superclass * p);
     ~itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Superclass_Pointer();
     itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Superclass_Pointer const & r) const;
     itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Superclass_Pointer & operator=(itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Superclass_Pointer const & r);
     itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Superclass_Pointer & operator=(itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Superclass * r);
     itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Pointer {
   public:
     itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Pointer();
     itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Pointer(itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Pointer const & p);
     itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Pointer(itkMaskImageFilterIRGBUS3IUC3IRGBUS3 * p);
     ~itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Pointer();
     itkMaskImageFilterIRGBUS3IUC3IRGBUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIRGBUS3IUC3IRGBUS3 * GetPointer() const;
     bool operator<(itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Pointer const & r) const;
     itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Pointer & operator=(itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Pointer const & r);
     itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Pointer & operator=(itkMaskImageFilterIRGBUS3IUC3IRGBUS3 * r);
     itkMaskImageFilterIRGBUS3IUC3IRGBUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Superclass : public itkInPlaceImageFilterIRGBUS3IRGBUS3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageRGBUS3 const * image1);
     void SetInput2(itkImageUC3 const * image2);
     itk::Functor::MaskInput< itk::RGBPixel< unsigned short >, unsigned char, itk::RGBPixel< unsigned short > > & GetFunctor();
     itk::Functor::MaskInput< itk::RGBPixel< unsigned short >, unsigned char, itk::RGBPixel< unsigned short > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< itk::RGBPixel< unsigned short >, unsigned char, itk::RGBPixel< unsigned short > > const & functor);
   private:
     itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Superclass(itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Superclass const & arg0);
     void operator=(itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Superclass const & arg0);
   protected:
     itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Superclass();
     ~itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Superclass_Pointer {
   public:
     itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Superclass_Pointer();
     itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Superclass_Pointer(itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Superclass_Pointer const & p);
     itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Superclass_Pointer(itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Superclass * p);
     ~itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Superclass_Pointer();
     itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Superclass_Pointer const & r) const;
     itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Superclass_Pointer & operator=(itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Superclass_Pointer const & r);
     itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Superclass_Pointer & operator=(itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Superclass * r);
     itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Pointer {
   public:
     itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Pointer();
     itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Pointer(itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Pointer const & p);
     itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Pointer(itkMaskImageFilterIRGBUS3IUL3IRGBUS3 * p);
     ~itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Pointer();
     itkMaskImageFilterIRGBUS3IUL3IRGBUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIRGBUS3IUL3IRGBUS3 * GetPointer() const;
     bool operator<(itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Pointer const & r) const;
     itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Pointer & operator=(itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Pointer const & r);
     itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Pointer & operator=(itkMaskImageFilterIRGBUS3IUL3IRGBUS3 * r);
     itkMaskImageFilterIRGBUS3IUL3IRGBUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Superclass : public itkInPlaceImageFilterIRGBUS3IRGBUS3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageRGBUS3 const * image1);
     void SetInput2(itkImageUL3 const * image2);
     itk::Functor::MaskInput< itk::RGBPixel< unsigned short >, unsigned long, itk::RGBPixel< unsigned short > > & GetFunctor();
     itk::Functor::MaskInput< itk::RGBPixel< unsigned short >, unsigned long, itk::RGBPixel< unsigned short > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< itk::RGBPixel< unsigned short >, unsigned long, itk::RGBPixel< unsigned short > > const & functor);
   private:
     itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Superclass(itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Superclass const & arg0);
     void operator=(itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Superclass const & arg0);
   protected:
     itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Superclass();
     ~itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Superclass_Pointer {
   public:
     itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Superclass_Pointer();
     itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Superclass_Pointer(itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Superclass_Pointer const & p);
     itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Superclass_Pointer(itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Superclass * p);
     ~itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Superclass_Pointer();
     itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Superclass_Pointer const & r) const;
     itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Superclass_Pointer & operator=(itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Superclass_Pointer const & r);
     itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Superclass_Pointer & operator=(itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Superclass * r);
     itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Pointer {
   public:
     itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Pointer();
     itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Pointer(itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Pointer const & p);
     itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Pointer(itkMaskImageFilterIRGBUS3IUS3IRGBUS3 * p);
     ~itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Pointer();
     itkMaskImageFilterIRGBUS3IUS3IRGBUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIRGBUS3IUS3IRGBUS3 * GetPointer() const;
     bool operator<(itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Pointer const & r) const;
     itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Pointer & operator=(itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Pointer const & r);
     itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Pointer & operator=(itkMaskImageFilterIRGBUS3IUS3IRGBUS3 * r);
     itkMaskImageFilterIRGBUS3IUS3IRGBUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Superclass : public itkInPlaceImageFilterIRGBUS3IRGBUS3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageRGBUS3 const * image1);
     void SetInput2(itkImageUS3 const * image2);
     itk::Functor::MaskInput< itk::RGBPixel< unsigned short >, unsigned short, itk::RGBPixel< unsigned short > > & GetFunctor();
     itk::Functor::MaskInput< itk::RGBPixel< unsigned short >, unsigned short, itk::RGBPixel< unsigned short > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< itk::RGBPixel< unsigned short >, unsigned short, itk::RGBPixel< unsigned short > > const & functor);
   private:
     itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Superclass(itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Superclass const & arg0);
     void operator=(itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Superclass const & arg0);
   protected:
     itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Superclass();
     ~itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Superclass_Pointer {
   public:
     itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Superclass_Pointer();
     itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Superclass_Pointer(itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Superclass_Pointer const & p);
     itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Superclass_Pointer(itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Superclass * p);
     ~itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Superclass_Pointer();
     itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Superclass_Pointer const & r) const;
     itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Superclass_Pointer & operator=(itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Superclass_Pointer const & r);
     itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Superclass_Pointer & operator=(itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Superclass * r);
     itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUC2IUC2IUC2_Pointer {
   public:
     itkMaskImageFilterIUC2IUC2IUC2_Pointer();
     itkMaskImageFilterIUC2IUC2IUC2_Pointer(itkMaskImageFilterIUC2IUC2IUC2_Pointer const & p);
     itkMaskImageFilterIUC2IUC2IUC2_Pointer(itkMaskImageFilterIUC2IUC2IUC2 * p);
     ~itkMaskImageFilterIUC2IUC2IUC2_Pointer();
     itkMaskImageFilterIUC2IUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUC2IUC2IUC2 * GetPointer() const;
     bool operator<(itkMaskImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     itkMaskImageFilterIUC2IUC2IUC2_Pointer & operator=(itkMaskImageFilterIUC2IUC2IUC2_Pointer const & r);
     itkMaskImageFilterIUC2IUC2IUC2_Pointer & operator=(itkMaskImageFilterIUC2IUC2IUC2 * r);
     itkMaskImageFilterIUC2IUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUC2IUC2IUC2_Superclass : public itkInPlaceImageFilterIUC2IUC2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIUC2IUC2IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUC2 const * image1);
     void SetInput2(itkImageUC2 const * image2);
     itk::Functor::MaskInput< unsigned char, unsigned char, unsigned char > & GetFunctor();
     itk::Functor::MaskInput< unsigned char, unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< unsigned char, unsigned char, unsigned char > const & functor);
   private:
     itkMaskImageFilterIUC2IUC2IUC2_Superclass(itkMaskImageFilterIUC2IUC2IUC2_Superclass const & arg0);
     void operator=(itkMaskImageFilterIUC2IUC2IUC2_Superclass const & arg0);
   protected:
     itkMaskImageFilterIUC2IUC2IUC2_Superclass();
     ~itkMaskImageFilterIUC2IUC2IUC2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIUC2IUC2IUC2_Superclass_Pointer {
   public:
     itkMaskImageFilterIUC2IUC2IUC2_Superclass_Pointer();
     itkMaskImageFilterIUC2IUC2IUC2_Superclass_Pointer(itkMaskImageFilterIUC2IUC2IUC2_Superclass_Pointer const & p);
     itkMaskImageFilterIUC2IUC2IUC2_Superclass_Pointer(itkMaskImageFilterIUC2IUC2IUC2_Superclass * p);
     ~itkMaskImageFilterIUC2IUC2IUC2_Superclass_Pointer();
     itkMaskImageFilterIUC2IUC2IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUC2IUC2IUC2_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     itkMaskImageFilterIUC2IUC2IUC2_Superclass_Pointer & operator=(itkMaskImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r);
     itkMaskImageFilterIUC2IUC2IUC2_Superclass_Pointer & operator=(itkMaskImageFilterIUC2IUC2IUC2_Superclass * r);
     itkMaskImageFilterIUC2IUC2IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUC2IUL2IUC2_Pointer {
   public:
     itkMaskImageFilterIUC2IUL2IUC2_Pointer();
     itkMaskImageFilterIUC2IUL2IUC2_Pointer(itkMaskImageFilterIUC2IUL2IUC2_Pointer const & p);
     itkMaskImageFilterIUC2IUL2IUC2_Pointer(itkMaskImageFilterIUC2IUL2IUC2 * p);
     ~itkMaskImageFilterIUC2IUL2IUC2_Pointer();
     itkMaskImageFilterIUC2IUL2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUC2IUL2IUC2 * GetPointer() const;
     bool operator<(itkMaskImageFilterIUC2IUL2IUC2_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUC2IUL2IUC2_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUC2IUL2IUC2_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUC2IUL2IUC2_Pointer const & r) const;
     itkMaskImageFilterIUC2IUL2IUC2_Pointer & operator=(itkMaskImageFilterIUC2IUL2IUC2_Pointer const & r);
     itkMaskImageFilterIUC2IUL2IUC2_Pointer & operator=(itkMaskImageFilterIUC2IUL2IUC2 * r);
     itkMaskImageFilterIUC2IUL2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUC2IUL2IUC2_Superclass : public itkInPlaceImageFilterIUC2IUC2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIUC2IUL2IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUC2 const * image1);
     void SetInput2(itkImageUL2 const * image2);
     itk::Functor::MaskInput< unsigned char, unsigned long, unsigned char > & GetFunctor();
     itk::Functor::MaskInput< unsigned char, unsigned long, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< unsigned char, unsigned long, unsigned char > const & functor);
   private:
     itkMaskImageFilterIUC2IUL2IUC2_Superclass(itkMaskImageFilterIUC2IUL2IUC2_Superclass const & arg0);
     void operator=(itkMaskImageFilterIUC2IUL2IUC2_Superclass const & arg0);
   protected:
     itkMaskImageFilterIUC2IUL2IUC2_Superclass();
     ~itkMaskImageFilterIUC2IUL2IUC2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIUC2IUL2IUC2_Superclass_Pointer {
   public:
     itkMaskImageFilterIUC2IUL2IUC2_Superclass_Pointer();
     itkMaskImageFilterIUC2IUL2IUC2_Superclass_Pointer(itkMaskImageFilterIUC2IUL2IUC2_Superclass_Pointer const & p);
     itkMaskImageFilterIUC2IUL2IUC2_Superclass_Pointer(itkMaskImageFilterIUC2IUL2IUC2_Superclass * p);
     ~itkMaskImageFilterIUC2IUL2IUC2_Superclass_Pointer();
     itkMaskImageFilterIUC2IUL2IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUC2IUL2IUC2_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIUC2IUL2IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUC2IUL2IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUC2IUL2IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUC2IUL2IUC2_Superclass_Pointer const & r) const;
     itkMaskImageFilterIUC2IUL2IUC2_Superclass_Pointer & operator=(itkMaskImageFilterIUC2IUL2IUC2_Superclass_Pointer const & r);
     itkMaskImageFilterIUC2IUL2IUC2_Superclass_Pointer & operator=(itkMaskImageFilterIUC2IUL2IUC2_Superclass * r);
     itkMaskImageFilterIUC2IUL2IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUC2IUS2IUC2_Pointer {
   public:
     itkMaskImageFilterIUC2IUS2IUC2_Pointer();
     itkMaskImageFilterIUC2IUS2IUC2_Pointer(itkMaskImageFilterIUC2IUS2IUC2_Pointer const & p);
     itkMaskImageFilterIUC2IUS2IUC2_Pointer(itkMaskImageFilterIUC2IUS2IUC2 * p);
     ~itkMaskImageFilterIUC2IUS2IUC2_Pointer();
     itkMaskImageFilterIUC2IUS2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUC2IUS2IUC2 * GetPointer() const;
     bool operator<(itkMaskImageFilterIUC2IUS2IUC2_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUC2IUS2IUC2_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUC2IUS2IUC2_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUC2IUS2IUC2_Pointer const & r) const;
     itkMaskImageFilterIUC2IUS2IUC2_Pointer & operator=(itkMaskImageFilterIUC2IUS2IUC2_Pointer const & r);
     itkMaskImageFilterIUC2IUS2IUC2_Pointer & operator=(itkMaskImageFilterIUC2IUS2IUC2 * r);
     itkMaskImageFilterIUC2IUS2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUC2IUS2IUC2_Superclass : public itkInPlaceImageFilterIUC2IUC2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIUC2IUS2IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUC2 const * image1);
     void SetInput2(itkImageUS2 const * image2);
     itk::Functor::MaskInput< unsigned char, unsigned short, unsigned char > & GetFunctor();
     itk::Functor::MaskInput< unsigned char, unsigned short, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< unsigned char, unsigned short, unsigned char > const & functor);
   private:
     itkMaskImageFilterIUC2IUS2IUC2_Superclass(itkMaskImageFilterIUC2IUS2IUC2_Superclass const & arg0);
     void operator=(itkMaskImageFilterIUC2IUS2IUC2_Superclass const & arg0);
   protected:
     itkMaskImageFilterIUC2IUS2IUC2_Superclass();
     ~itkMaskImageFilterIUC2IUS2IUC2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIUC2IUS2IUC2_Superclass_Pointer {
   public:
     itkMaskImageFilterIUC2IUS2IUC2_Superclass_Pointer();
     itkMaskImageFilterIUC2IUS2IUC2_Superclass_Pointer(itkMaskImageFilterIUC2IUS2IUC2_Superclass_Pointer const & p);
     itkMaskImageFilterIUC2IUS2IUC2_Superclass_Pointer(itkMaskImageFilterIUC2IUS2IUC2_Superclass * p);
     ~itkMaskImageFilterIUC2IUS2IUC2_Superclass_Pointer();
     itkMaskImageFilterIUC2IUS2IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUC2IUS2IUC2_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIUC2IUS2IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUC2IUS2IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUC2IUS2IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUC2IUS2IUC2_Superclass_Pointer const & r) const;
     itkMaskImageFilterIUC2IUS2IUC2_Superclass_Pointer & operator=(itkMaskImageFilterIUC2IUS2IUC2_Superclass_Pointer const & r);
     itkMaskImageFilterIUC2IUS2IUC2_Superclass_Pointer & operator=(itkMaskImageFilterIUC2IUS2IUC2_Superclass * r);
     itkMaskImageFilterIUC2IUS2IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUC3IUC3IUC3_Pointer {
   public:
     itkMaskImageFilterIUC3IUC3IUC3_Pointer();
     itkMaskImageFilterIUC3IUC3IUC3_Pointer(itkMaskImageFilterIUC3IUC3IUC3_Pointer const & p);
     itkMaskImageFilterIUC3IUC3IUC3_Pointer(itkMaskImageFilterIUC3IUC3IUC3 * p);
     ~itkMaskImageFilterIUC3IUC3IUC3_Pointer();
     itkMaskImageFilterIUC3IUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUC3IUC3IUC3 * GetPointer() const;
     bool operator<(itkMaskImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     itkMaskImageFilterIUC3IUC3IUC3_Pointer & operator=(itkMaskImageFilterIUC3IUC3IUC3_Pointer const & r);
     itkMaskImageFilterIUC3IUC3IUC3_Pointer & operator=(itkMaskImageFilterIUC3IUC3IUC3 * r);
     itkMaskImageFilterIUC3IUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUC3IUC3IUC3_Superclass : public itkInPlaceImageFilterIUC3IUC3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIUC3IUC3IUC3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUC3 const * image1);
     void SetInput2(itkImageUC3 const * image2);
     itk::Functor::MaskInput< unsigned char, unsigned char, unsigned char > & GetFunctor();
     itk::Functor::MaskInput< unsigned char, unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< unsigned char, unsigned char, unsigned char > const & functor);
   private:
     itkMaskImageFilterIUC3IUC3IUC3_Superclass(itkMaskImageFilterIUC3IUC3IUC3_Superclass const & arg0);
     void operator=(itkMaskImageFilterIUC3IUC3IUC3_Superclass const & arg0);
   protected:
     itkMaskImageFilterIUC3IUC3IUC3_Superclass();
     ~itkMaskImageFilterIUC3IUC3IUC3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIUC3IUC3IUC3_Superclass_Pointer {
   public:
     itkMaskImageFilterIUC3IUC3IUC3_Superclass_Pointer();
     itkMaskImageFilterIUC3IUC3IUC3_Superclass_Pointer(itkMaskImageFilterIUC3IUC3IUC3_Superclass_Pointer const & p);
     itkMaskImageFilterIUC3IUC3IUC3_Superclass_Pointer(itkMaskImageFilterIUC3IUC3IUC3_Superclass * p);
     ~itkMaskImageFilterIUC3IUC3IUC3_Superclass_Pointer();
     itkMaskImageFilterIUC3IUC3IUC3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUC3IUC3IUC3_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     itkMaskImageFilterIUC3IUC3IUC3_Superclass_Pointer & operator=(itkMaskImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r);
     itkMaskImageFilterIUC3IUC3IUC3_Superclass_Pointer & operator=(itkMaskImageFilterIUC3IUC3IUC3_Superclass * r);
     itkMaskImageFilterIUC3IUC3IUC3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUC3IUL3IUC3_Pointer {
   public:
     itkMaskImageFilterIUC3IUL3IUC3_Pointer();
     itkMaskImageFilterIUC3IUL3IUC3_Pointer(itkMaskImageFilterIUC3IUL3IUC3_Pointer const & p);
     itkMaskImageFilterIUC3IUL3IUC3_Pointer(itkMaskImageFilterIUC3IUL3IUC3 * p);
     ~itkMaskImageFilterIUC3IUL3IUC3_Pointer();
     itkMaskImageFilterIUC3IUL3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUC3IUL3IUC3 * GetPointer() const;
     bool operator<(itkMaskImageFilterIUC3IUL3IUC3_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUC3IUL3IUC3_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUC3IUL3IUC3_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUC3IUL3IUC3_Pointer const & r) const;
     itkMaskImageFilterIUC3IUL3IUC3_Pointer & operator=(itkMaskImageFilterIUC3IUL3IUC3_Pointer const & r);
     itkMaskImageFilterIUC3IUL3IUC3_Pointer & operator=(itkMaskImageFilterIUC3IUL3IUC3 * r);
     itkMaskImageFilterIUC3IUL3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUC3IUL3IUC3_Superclass : public itkInPlaceImageFilterIUC3IUC3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIUC3IUL3IUC3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUC3 const * image1);
     void SetInput2(itkImageUL3 const * image2);
     itk::Functor::MaskInput< unsigned char, unsigned long, unsigned char > & GetFunctor();
     itk::Functor::MaskInput< unsigned char, unsigned long, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< unsigned char, unsigned long, unsigned char > const & functor);
   private:
     itkMaskImageFilterIUC3IUL3IUC3_Superclass(itkMaskImageFilterIUC3IUL3IUC3_Superclass const & arg0);
     void operator=(itkMaskImageFilterIUC3IUL3IUC3_Superclass const & arg0);
   protected:
     itkMaskImageFilterIUC3IUL3IUC3_Superclass();
     ~itkMaskImageFilterIUC3IUL3IUC3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIUC3IUL3IUC3_Superclass_Pointer {
   public:
     itkMaskImageFilterIUC3IUL3IUC3_Superclass_Pointer();
     itkMaskImageFilterIUC3IUL3IUC3_Superclass_Pointer(itkMaskImageFilterIUC3IUL3IUC3_Superclass_Pointer const & p);
     itkMaskImageFilterIUC3IUL3IUC3_Superclass_Pointer(itkMaskImageFilterIUC3IUL3IUC3_Superclass * p);
     ~itkMaskImageFilterIUC3IUL3IUC3_Superclass_Pointer();
     itkMaskImageFilterIUC3IUL3IUC3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUC3IUL3IUC3_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIUC3IUL3IUC3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUC3IUL3IUC3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUC3IUL3IUC3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUC3IUL3IUC3_Superclass_Pointer const & r) const;
     itkMaskImageFilterIUC3IUL3IUC3_Superclass_Pointer & operator=(itkMaskImageFilterIUC3IUL3IUC3_Superclass_Pointer const & r);
     itkMaskImageFilterIUC3IUL3IUC3_Superclass_Pointer & operator=(itkMaskImageFilterIUC3IUL3IUC3_Superclass * r);
     itkMaskImageFilterIUC3IUL3IUC3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUC3IUS3IUC3_Pointer {
   public:
     itkMaskImageFilterIUC3IUS3IUC3_Pointer();
     itkMaskImageFilterIUC3IUS3IUC3_Pointer(itkMaskImageFilterIUC3IUS3IUC3_Pointer const & p);
     itkMaskImageFilterIUC3IUS3IUC3_Pointer(itkMaskImageFilterIUC3IUS3IUC3 * p);
     ~itkMaskImageFilterIUC3IUS3IUC3_Pointer();
     itkMaskImageFilterIUC3IUS3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUC3IUS3IUC3 * GetPointer() const;
     bool operator<(itkMaskImageFilterIUC3IUS3IUC3_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUC3IUS3IUC3_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUC3IUS3IUC3_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUC3IUS3IUC3_Pointer const & r) const;
     itkMaskImageFilterIUC3IUS3IUC3_Pointer & operator=(itkMaskImageFilterIUC3IUS3IUC3_Pointer const & r);
     itkMaskImageFilterIUC3IUS3IUC3_Pointer & operator=(itkMaskImageFilterIUC3IUS3IUC3 * r);
     itkMaskImageFilterIUC3IUS3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUC3IUS3IUC3_Superclass : public itkInPlaceImageFilterIUC3IUC3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIUC3IUS3IUC3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUC3 const * image1);
     void SetInput2(itkImageUS3 const * image2);
     itk::Functor::MaskInput< unsigned char, unsigned short, unsigned char > & GetFunctor();
     itk::Functor::MaskInput< unsigned char, unsigned short, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< unsigned char, unsigned short, unsigned char > const & functor);
   private:
     itkMaskImageFilterIUC3IUS3IUC3_Superclass(itkMaskImageFilterIUC3IUS3IUC3_Superclass const & arg0);
     void operator=(itkMaskImageFilterIUC3IUS3IUC3_Superclass const & arg0);
   protected:
     itkMaskImageFilterIUC3IUS3IUC3_Superclass();
     ~itkMaskImageFilterIUC3IUS3IUC3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIUC3IUS3IUC3_Superclass_Pointer {
   public:
     itkMaskImageFilterIUC3IUS3IUC3_Superclass_Pointer();
     itkMaskImageFilterIUC3IUS3IUC3_Superclass_Pointer(itkMaskImageFilterIUC3IUS3IUC3_Superclass_Pointer const & p);
     itkMaskImageFilterIUC3IUS3IUC3_Superclass_Pointer(itkMaskImageFilterIUC3IUS3IUC3_Superclass * p);
     ~itkMaskImageFilterIUC3IUS3IUC3_Superclass_Pointer();
     itkMaskImageFilterIUC3IUS3IUC3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUC3IUS3IUC3_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIUC3IUS3IUC3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUC3IUS3IUC3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUC3IUS3IUC3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUC3IUS3IUC3_Superclass_Pointer const & r) const;
     itkMaskImageFilterIUC3IUS3IUC3_Superclass_Pointer & operator=(itkMaskImageFilterIUC3IUS3IUC3_Superclass_Pointer const & r);
     itkMaskImageFilterIUC3IUS3IUC3_Superclass_Pointer & operator=(itkMaskImageFilterIUC3IUS3IUC3_Superclass * r);
     itkMaskImageFilterIUC3IUS3IUC3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUL2IUC2IUL2_Pointer {
   public:
     itkMaskImageFilterIUL2IUC2IUL2_Pointer();
     itkMaskImageFilterIUL2IUC2IUL2_Pointer(itkMaskImageFilterIUL2IUC2IUL2_Pointer const & p);
     itkMaskImageFilterIUL2IUC2IUL2_Pointer(itkMaskImageFilterIUL2IUC2IUL2 * p);
     ~itkMaskImageFilterIUL2IUC2IUL2_Pointer();
     itkMaskImageFilterIUL2IUC2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUL2IUC2IUL2 * GetPointer() const;
     bool operator<(itkMaskImageFilterIUL2IUC2IUL2_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUL2IUC2IUL2_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUL2IUC2IUL2_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUL2IUC2IUL2_Pointer const & r) const;
     itkMaskImageFilterIUL2IUC2IUL2_Pointer & operator=(itkMaskImageFilterIUL2IUC2IUL2_Pointer const & r);
     itkMaskImageFilterIUL2IUC2IUL2_Pointer & operator=(itkMaskImageFilterIUL2IUC2IUL2 * r);
     itkMaskImageFilterIUL2IUC2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUL2IUC2IUL2_Superclass : public itkInPlaceImageFilterIUL2IUL2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIUL2IUC2IUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUL2 const * image1);
     void SetInput2(itkImageUC2 const * image2);
     itk::Functor::MaskInput< unsigned long, unsigned char, unsigned long > & GetFunctor();
     itk::Functor::MaskInput< unsigned long, unsigned char, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< unsigned long, unsigned char, unsigned long > const & functor);
   private:
     itkMaskImageFilterIUL2IUC2IUL2_Superclass(itkMaskImageFilterIUL2IUC2IUL2_Superclass const & arg0);
     void operator=(itkMaskImageFilterIUL2IUC2IUL2_Superclass const & arg0);
   protected:
     itkMaskImageFilterIUL2IUC2IUL2_Superclass();
     ~itkMaskImageFilterIUL2IUC2IUL2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIUL2IUC2IUL2_Superclass_Pointer {
   public:
     itkMaskImageFilterIUL2IUC2IUL2_Superclass_Pointer();
     itkMaskImageFilterIUL2IUC2IUL2_Superclass_Pointer(itkMaskImageFilterIUL2IUC2IUL2_Superclass_Pointer const & p);
     itkMaskImageFilterIUL2IUC2IUL2_Superclass_Pointer(itkMaskImageFilterIUL2IUC2IUL2_Superclass * p);
     ~itkMaskImageFilterIUL2IUC2IUL2_Superclass_Pointer();
     itkMaskImageFilterIUL2IUC2IUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUL2IUC2IUL2_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIUL2IUC2IUL2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUL2IUC2IUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUL2IUC2IUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUL2IUC2IUL2_Superclass_Pointer const & r) const;
     itkMaskImageFilterIUL2IUC2IUL2_Superclass_Pointer & operator=(itkMaskImageFilterIUL2IUC2IUL2_Superclass_Pointer const & r);
     itkMaskImageFilterIUL2IUC2IUL2_Superclass_Pointer & operator=(itkMaskImageFilterIUL2IUC2IUL2_Superclass * r);
     itkMaskImageFilterIUL2IUC2IUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUL2IUL2IUL2_Pointer {
   public:
     itkMaskImageFilterIUL2IUL2IUL2_Pointer();
     itkMaskImageFilterIUL2IUL2IUL2_Pointer(itkMaskImageFilterIUL2IUL2IUL2_Pointer const & p);
     itkMaskImageFilterIUL2IUL2IUL2_Pointer(itkMaskImageFilterIUL2IUL2IUL2 * p);
     ~itkMaskImageFilterIUL2IUL2IUL2_Pointer();
     itkMaskImageFilterIUL2IUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUL2IUL2IUL2 * GetPointer() const;
     bool operator<(itkMaskImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     itkMaskImageFilterIUL2IUL2IUL2_Pointer & operator=(itkMaskImageFilterIUL2IUL2IUL2_Pointer const & r);
     itkMaskImageFilterIUL2IUL2IUL2_Pointer & operator=(itkMaskImageFilterIUL2IUL2IUL2 * r);
     itkMaskImageFilterIUL2IUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUL2IUL2IUL2_Superclass : public itkInPlaceImageFilterIUL2IUL2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIUL2IUL2IUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUL2 const * image1);
     void SetInput2(itkImageUL2 const * image2);
     itk::Functor::MaskInput< unsigned long, unsigned long, unsigned long > & GetFunctor();
     itk::Functor::MaskInput< unsigned long, unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< unsigned long, unsigned long, unsigned long > const & functor);
   private:
     itkMaskImageFilterIUL2IUL2IUL2_Superclass(itkMaskImageFilterIUL2IUL2IUL2_Superclass const & arg0);
     void operator=(itkMaskImageFilterIUL2IUL2IUL2_Superclass const & arg0);
   protected:
     itkMaskImageFilterIUL2IUL2IUL2_Superclass();
     ~itkMaskImageFilterIUL2IUL2IUL2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIUL2IUL2IUL2_Superclass_Pointer {
   public:
     itkMaskImageFilterIUL2IUL2IUL2_Superclass_Pointer();
     itkMaskImageFilterIUL2IUL2IUL2_Superclass_Pointer(itkMaskImageFilterIUL2IUL2IUL2_Superclass_Pointer const & p);
     itkMaskImageFilterIUL2IUL2IUL2_Superclass_Pointer(itkMaskImageFilterIUL2IUL2IUL2_Superclass * p);
     ~itkMaskImageFilterIUL2IUL2IUL2_Superclass_Pointer();
     itkMaskImageFilterIUL2IUL2IUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUL2IUL2IUL2_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     itkMaskImageFilterIUL2IUL2IUL2_Superclass_Pointer & operator=(itkMaskImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r);
     itkMaskImageFilterIUL2IUL2IUL2_Superclass_Pointer & operator=(itkMaskImageFilterIUL2IUL2IUL2_Superclass * r);
     itkMaskImageFilterIUL2IUL2IUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUL2IUS2IUL2_Pointer {
   public:
     itkMaskImageFilterIUL2IUS2IUL2_Pointer();
     itkMaskImageFilterIUL2IUS2IUL2_Pointer(itkMaskImageFilterIUL2IUS2IUL2_Pointer const & p);
     itkMaskImageFilterIUL2IUS2IUL2_Pointer(itkMaskImageFilterIUL2IUS2IUL2 * p);
     ~itkMaskImageFilterIUL2IUS2IUL2_Pointer();
     itkMaskImageFilterIUL2IUS2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUL2IUS2IUL2 * GetPointer() const;
     bool operator<(itkMaskImageFilterIUL2IUS2IUL2_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUL2IUS2IUL2_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUL2IUS2IUL2_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUL2IUS2IUL2_Pointer const & r) const;
     itkMaskImageFilterIUL2IUS2IUL2_Pointer & operator=(itkMaskImageFilterIUL2IUS2IUL2_Pointer const & r);
     itkMaskImageFilterIUL2IUS2IUL2_Pointer & operator=(itkMaskImageFilterIUL2IUS2IUL2 * r);
     itkMaskImageFilterIUL2IUS2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUL2IUS2IUL2_Superclass : public itkInPlaceImageFilterIUL2IUL2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIUL2IUS2IUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUL2 const * image1);
     void SetInput2(itkImageUS2 const * image2);
     itk::Functor::MaskInput< unsigned long, unsigned short, unsigned long > & GetFunctor();
     itk::Functor::MaskInput< unsigned long, unsigned short, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< unsigned long, unsigned short, unsigned long > const & functor);
   private:
     itkMaskImageFilterIUL2IUS2IUL2_Superclass(itkMaskImageFilterIUL2IUS2IUL2_Superclass const & arg0);
     void operator=(itkMaskImageFilterIUL2IUS2IUL2_Superclass const & arg0);
   protected:
     itkMaskImageFilterIUL2IUS2IUL2_Superclass();
     ~itkMaskImageFilterIUL2IUS2IUL2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIUL2IUS2IUL2_Superclass_Pointer {
   public:
     itkMaskImageFilterIUL2IUS2IUL2_Superclass_Pointer();
     itkMaskImageFilterIUL2IUS2IUL2_Superclass_Pointer(itkMaskImageFilterIUL2IUS2IUL2_Superclass_Pointer const & p);
     itkMaskImageFilterIUL2IUS2IUL2_Superclass_Pointer(itkMaskImageFilterIUL2IUS2IUL2_Superclass * p);
     ~itkMaskImageFilterIUL2IUS2IUL2_Superclass_Pointer();
     itkMaskImageFilterIUL2IUS2IUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUL2IUS2IUL2_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIUL2IUS2IUL2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUL2IUS2IUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUL2IUS2IUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUL2IUS2IUL2_Superclass_Pointer const & r) const;
     itkMaskImageFilterIUL2IUS2IUL2_Superclass_Pointer & operator=(itkMaskImageFilterIUL2IUS2IUL2_Superclass_Pointer const & r);
     itkMaskImageFilterIUL2IUS2IUL2_Superclass_Pointer & operator=(itkMaskImageFilterIUL2IUS2IUL2_Superclass * r);
     itkMaskImageFilterIUL2IUS2IUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUL3IUC3IUL3_Pointer {
   public:
     itkMaskImageFilterIUL3IUC3IUL3_Pointer();
     itkMaskImageFilterIUL3IUC3IUL3_Pointer(itkMaskImageFilterIUL3IUC3IUL3_Pointer const & p);
     itkMaskImageFilterIUL3IUC3IUL3_Pointer(itkMaskImageFilterIUL3IUC3IUL3 * p);
     ~itkMaskImageFilterIUL3IUC3IUL3_Pointer();
     itkMaskImageFilterIUL3IUC3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUL3IUC3IUL3 * GetPointer() const;
     bool operator<(itkMaskImageFilterIUL3IUC3IUL3_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUL3IUC3IUL3_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUL3IUC3IUL3_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUL3IUC3IUL3_Pointer const & r) const;
     itkMaskImageFilterIUL3IUC3IUL3_Pointer & operator=(itkMaskImageFilterIUL3IUC3IUL3_Pointer const & r);
     itkMaskImageFilterIUL3IUC3IUL3_Pointer & operator=(itkMaskImageFilterIUL3IUC3IUL3 * r);
     itkMaskImageFilterIUL3IUC3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUL3IUC3IUL3_Superclass : public itkInPlaceImageFilterIUL3IUL3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIUL3IUC3IUL3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUL3 const * image1);
     void SetInput2(itkImageUC3 const * image2);
     itk::Functor::MaskInput< unsigned long, unsigned char, unsigned long > & GetFunctor();
     itk::Functor::MaskInput< unsigned long, unsigned char, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< unsigned long, unsigned char, unsigned long > const & functor);
   private:
     itkMaskImageFilterIUL3IUC3IUL3_Superclass(itkMaskImageFilterIUL3IUC3IUL3_Superclass const & arg0);
     void operator=(itkMaskImageFilterIUL3IUC3IUL3_Superclass const & arg0);
   protected:
     itkMaskImageFilterIUL3IUC3IUL3_Superclass();
     ~itkMaskImageFilterIUL3IUC3IUL3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIUL3IUC3IUL3_Superclass_Pointer {
   public:
     itkMaskImageFilterIUL3IUC3IUL3_Superclass_Pointer();
     itkMaskImageFilterIUL3IUC3IUL3_Superclass_Pointer(itkMaskImageFilterIUL3IUC3IUL3_Superclass_Pointer const & p);
     itkMaskImageFilterIUL3IUC3IUL3_Superclass_Pointer(itkMaskImageFilterIUL3IUC3IUL3_Superclass * p);
     ~itkMaskImageFilterIUL3IUC3IUL3_Superclass_Pointer();
     itkMaskImageFilterIUL3IUC3IUL3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUL3IUC3IUL3_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIUL3IUC3IUL3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUL3IUC3IUL3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUL3IUC3IUL3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUL3IUC3IUL3_Superclass_Pointer const & r) const;
     itkMaskImageFilterIUL3IUC3IUL3_Superclass_Pointer & operator=(itkMaskImageFilterIUL3IUC3IUL3_Superclass_Pointer const & r);
     itkMaskImageFilterIUL3IUC3IUL3_Superclass_Pointer & operator=(itkMaskImageFilterIUL3IUC3IUL3_Superclass * r);
     itkMaskImageFilterIUL3IUC3IUL3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUL3IUL3IUL3_Pointer {
   public:
     itkMaskImageFilterIUL3IUL3IUL3_Pointer();
     itkMaskImageFilterIUL3IUL3IUL3_Pointer(itkMaskImageFilterIUL3IUL3IUL3_Pointer const & p);
     itkMaskImageFilterIUL3IUL3IUL3_Pointer(itkMaskImageFilterIUL3IUL3IUL3 * p);
     ~itkMaskImageFilterIUL3IUL3IUL3_Pointer();
     itkMaskImageFilterIUL3IUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUL3IUL3IUL3 * GetPointer() const;
     bool operator<(itkMaskImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     itkMaskImageFilterIUL3IUL3IUL3_Pointer & operator=(itkMaskImageFilterIUL3IUL3IUL3_Pointer const & r);
     itkMaskImageFilterIUL3IUL3IUL3_Pointer & operator=(itkMaskImageFilterIUL3IUL3IUL3 * r);
     itkMaskImageFilterIUL3IUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUL3IUL3IUL3_Superclass : public itkInPlaceImageFilterIUL3IUL3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIUL3IUL3IUL3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUL3 const * image1);
     void SetInput2(itkImageUL3 const * image2);
     itk::Functor::MaskInput< unsigned long, unsigned long, unsigned long > & GetFunctor();
     itk::Functor::MaskInput< unsigned long, unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< unsigned long, unsigned long, unsigned long > const & functor);
   private:
     itkMaskImageFilterIUL3IUL3IUL3_Superclass(itkMaskImageFilterIUL3IUL3IUL3_Superclass const & arg0);
     void operator=(itkMaskImageFilterIUL3IUL3IUL3_Superclass const & arg0);
   protected:
     itkMaskImageFilterIUL3IUL3IUL3_Superclass();
     ~itkMaskImageFilterIUL3IUL3IUL3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIUL3IUL3IUL3_Superclass_Pointer {
   public:
     itkMaskImageFilterIUL3IUL3IUL3_Superclass_Pointer();
     itkMaskImageFilterIUL3IUL3IUL3_Superclass_Pointer(itkMaskImageFilterIUL3IUL3IUL3_Superclass_Pointer const & p);
     itkMaskImageFilterIUL3IUL3IUL3_Superclass_Pointer(itkMaskImageFilterIUL3IUL3IUL3_Superclass * p);
     ~itkMaskImageFilterIUL3IUL3IUL3_Superclass_Pointer();
     itkMaskImageFilterIUL3IUL3IUL3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUL3IUL3IUL3_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     itkMaskImageFilterIUL3IUL3IUL3_Superclass_Pointer & operator=(itkMaskImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r);
     itkMaskImageFilterIUL3IUL3IUL3_Superclass_Pointer & operator=(itkMaskImageFilterIUL3IUL3IUL3_Superclass * r);
     itkMaskImageFilterIUL3IUL3IUL3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUL3IUS3IUL3_Pointer {
   public:
     itkMaskImageFilterIUL3IUS3IUL3_Pointer();
     itkMaskImageFilterIUL3IUS3IUL3_Pointer(itkMaskImageFilterIUL3IUS3IUL3_Pointer const & p);
     itkMaskImageFilterIUL3IUS3IUL3_Pointer(itkMaskImageFilterIUL3IUS3IUL3 * p);
     ~itkMaskImageFilterIUL3IUS3IUL3_Pointer();
     itkMaskImageFilterIUL3IUS3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUL3IUS3IUL3 * GetPointer() const;
     bool operator<(itkMaskImageFilterIUL3IUS3IUL3_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUL3IUS3IUL3_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUL3IUS3IUL3_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUL3IUS3IUL3_Pointer const & r) const;
     itkMaskImageFilterIUL3IUS3IUL3_Pointer & operator=(itkMaskImageFilterIUL3IUS3IUL3_Pointer const & r);
     itkMaskImageFilterIUL3IUS3IUL3_Pointer & operator=(itkMaskImageFilterIUL3IUS3IUL3 * r);
     itkMaskImageFilterIUL3IUS3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUL3IUS3IUL3_Superclass : public itkInPlaceImageFilterIUL3IUL3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIUL3IUS3IUL3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUL3 const * image1);
     void SetInput2(itkImageUS3 const * image2);
     itk::Functor::MaskInput< unsigned long, unsigned short, unsigned long > & GetFunctor();
     itk::Functor::MaskInput< unsigned long, unsigned short, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< unsigned long, unsigned short, unsigned long > const & functor);
   private:
     itkMaskImageFilterIUL3IUS3IUL3_Superclass(itkMaskImageFilterIUL3IUS3IUL3_Superclass const & arg0);
     void operator=(itkMaskImageFilterIUL3IUS3IUL3_Superclass const & arg0);
   protected:
     itkMaskImageFilterIUL3IUS3IUL3_Superclass();
     ~itkMaskImageFilterIUL3IUS3IUL3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIUL3IUS3IUL3_Superclass_Pointer {
   public:
     itkMaskImageFilterIUL3IUS3IUL3_Superclass_Pointer();
     itkMaskImageFilterIUL3IUS3IUL3_Superclass_Pointer(itkMaskImageFilterIUL3IUS3IUL3_Superclass_Pointer const & p);
     itkMaskImageFilterIUL3IUS3IUL3_Superclass_Pointer(itkMaskImageFilterIUL3IUS3IUL3_Superclass * p);
     ~itkMaskImageFilterIUL3IUS3IUL3_Superclass_Pointer();
     itkMaskImageFilterIUL3IUS3IUL3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUL3IUS3IUL3_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIUL3IUS3IUL3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUL3IUS3IUL3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUL3IUS3IUL3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUL3IUS3IUL3_Superclass_Pointer const & r) const;
     itkMaskImageFilterIUL3IUS3IUL3_Superclass_Pointer & operator=(itkMaskImageFilterIUL3IUS3IUL3_Superclass_Pointer const & r);
     itkMaskImageFilterIUL3IUS3IUL3_Superclass_Pointer & operator=(itkMaskImageFilterIUL3IUS3IUL3_Superclass * r);
     itkMaskImageFilterIUL3IUS3IUL3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUS2IUC2IUS2_Pointer {
   public:
     itkMaskImageFilterIUS2IUC2IUS2_Pointer();
     itkMaskImageFilterIUS2IUC2IUS2_Pointer(itkMaskImageFilterIUS2IUC2IUS2_Pointer const & p);
     itkMaskImageFilterIUS2IUC2IUS2_Pointer(itkMaskImageFilterIUS2IUC2IUS2 * p);
     ~itkMaskImageFilterIUS2IUC2IUS2_Pointer();
     itkMaskImageFilterIUS2IUC2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUS2IUC2IUS2 * GetPointer() const;
     bool operator<(itkMaskImageFilterIUS2IUC2IUS2_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUS2IUC2IUS2_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUS2IUC2IUS2_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUS2IUC2IUS2_Pointer const & r) const;
     itkMaskImageFilterIUS2IUC2IUS2_Pointer & operator=(itkMaskImageFilterIUS2IUC2IUS2_Pointer const & r);
     itkMaskImageFilterIUS2IUC2IUS2_Pointer & operator=(itkMaskImageFilterIUS2IUC2IUS2 * r);
     itkMaskImageFilterIUS2IUC2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUS2IUC2IUS2_Superclass : public itkInPlaceImageFilterIUS2IUS2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIUS2IUC2IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUS2 const * image1);
     void SetInput2(itkImageUC2 const * image2);
     itk::Functor::MaskInput< unsigned short, unsigned char, unsigned short > & GetFunctor();
     itk::Functor::MaskInput< unsigned short, unsigned char, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< unsigned short, unsigned char, unsigned short > const & functor);
   private:
     itkMaskImageFilterIUS2IUC2IUS2_Superclass(itkMaskImageFilterIUS2IUC2IUS2_Superclass const & arg0);
     void operator=(itkMaskImageFilterIUS2IUC2IUS2_Superclass const & arg0);
   protected:
     itkMaskImageFilterIUS2IUC2IUS2_Superclass();
     ~itkMaskImageFilterIUS2IUC2IUS2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIUS2IUC2IUS2_Superclass_Pointer {
   public:
     itkMaskImageFilterIUS2IUC2IUS2_Superclass_Pointer();
     itkMaskImageFilterIUS2IUC2IUS2_Superclass_Pointer(itkMaskImageFilterIUS2IUC2IUS2_Superclass_Pointer const & p);
     itkMaskImageFilterIUS2IUC2IUS2_Superclass_Pointer(itkMaskImageFilterIUS2IUC2IUS2_Superclass * p);
     ~itkMaskImageFilterIUS2IUC2IUS2_Superclass_Pointer();
     itkMaskImageFilterIUS2IUC2IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUS2IUC2IUS2_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIUS2IUC2IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUS2IUC2IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUS2IUC2IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUS2IUC2IUS2_Superclass_Pointer const & r) const;
     itkMaskImageFilterIUS2IUC2IUS2_Superclass_Pointer & operator=(itkMaskImageFilterIUS2IUC2IUS2_Superclass_Pointer const & r);
     itkMaskImageFilterIUS2IUC2IUS2_Superclass_Pointer & operator=(itkMaskImageFilterIUS2IUC2IUS2_Superclass * r);
     itkMaskImageFilterIUS2IUC2IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUS2IUL2IUS2_Pointer {
   public:
     itkMaskImageFilterIUS2IUL2IUS2_Pointer();
     itkMaskImageFilterIUS2IUL2IUS2_Pointer(itkMaskImageFilterIUS2IUL2IUS2_Pointer const & p);
     itkMaskImageFilterIUS2IUL2IUS2_Pointer(itkMaskImageFilterIUS2IUL2IUS2 * p);
     ~itkMaskImageFilterIUS2IUL2IUS2_Pointer();
     itkMaskImageFilterIUS2IUL2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUS2IUL2IUS2 * GetPointer() const;
     bool operator<(itkMaskImageFilterIUS2IUL2IUS2_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUS2IUL2IUS2_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUS2IUL2IUS2_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUS2IUL2IUS2_Pointer const & r) const;
     itkMaskImageFilterIUS2IUL2IUS2_Pointer & operator=(itkMaskImageFilterIUS2IUL2IUS2_Pointer const & r);
     itkMaskImageFilterIUS2IUL2IUS2_Pointer & operator=(itkMaskImageFilterIUS2IUL2IUS2 * r);
     itkMaskImageFilterIUS2IUL2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUS2IUL2IUS2_Superclass : public itkInPlaceImageFilterIUS2IUS2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIUS2IUL2IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUS2 const * image1);
     void SetInput2(itkImageUL2 const * image2);
     itk::Functor::MaskInput< unsigned short, unsigned long, unsigned short > & GetFunctor();
     itk::Functor::MaskInput< unsigned short, unsigned long, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< unsigned short, unsigned long, unsigned short > const & functor);
   private:
     itkMaskImageFilterIUS2IUL2IUS2_Superclass(itkMaskImageFilterIUS2IUL2IUS2_Superclass const & arg0);
     void operator=(itkMaskImageFilterIUS2IUL2IUS2_Superclass const & arg0);
   protected:
     itkMaskImageFilterIUS2IUL2IUS2_Superclass();
     ~itkMaskImageFilterIUS2IUL2IUS2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIUS2IUL2IUS2_Superclass_Pointer {
   public:
     itkMaskImageFilterIUS2IUL2IUS2_Superclass_Pointer();
     itkMaskImageFilterIUS2IUL2IUS2_Superclass_Pointer(itkMaskImageFilterIUS2IUL2IUS2_Superclass_Pointer const & p);
     itkMaskImageFilterIUS2IUL2IUS2_Superclass_Pointer(itkMaskImageFilterIUS2IUL2IUS2_Superclass * p);
     ~itkMaskImageFilterIUS2IUL2IUS2_Superclass_Pointer();
     itkMaskImageFilterIUS2IUL2IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUS2IUL2IUS2_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIUS2IUL2IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUS2IUL2IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUS2IUL2IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUS2IUL2IUS2_Superclass_Pointer const & r) const;
     itkMaskImageFilterIUS2IUL2IUS2_Superclass_Pointer & operator=(itkMaskImageFilterIUS2IUL2IUS2_Superclass_Pointer const & r);
     itkMaskImageFilterIUS2IUL2IUS2_Superclass_Pointer & operator=(itkMaskImageFilterIUS2IUL2IUS2_Superclass * r);
     itkMaskImageFilterIUS2IUL2IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUS2IUS2IUS2_Pointer {
   public:
     itkMaskImageFilterIUS2IUS2IUS2_Pointer();
     itkMaskImageFilterIUS2IUS2IUS2_Pointer(itkMaskImageFilterIUS2IUS2IUS2_Pointer const & p);
     itkMaskImageFilterIUS2IUS2IUS2_Pointer(itkMaskImageFilterIUS2IUS2IUS2 * p);
     ~itkMaskImageFilterIUS2IUS2IUS2_Pointer();
     itkMaskImageFilterIUS2IUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUS2IUS2IUS2 * GetPointer() const;
     bool operator<(itkMaskImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     itkMaskImageFilterIUS2IUS2IUS2_Pointer & operator=(itkMaskImageFilterIUS2IUS2IUS2_Pointer const & r);
     itkMaskImageFilterIUS2IUS2IUS2_Pointer & operator=(itkMaskImageFilterIUS2IUS2IUS2 * r);
     itkMaskImageFilterIUS2IUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUS2IUS2IUS2_Superclass : public itkInPlaceImageFilterIUS2IUS2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIUS2IUS2IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUS2 const * image1);
     void SetInput2(itkImageUS2 const * image2);
     itk::Functor::MaskInput< unsigned short, unsigned short, unsigned short > & GetFunctor();
     itk::Functor::MaskInput< unsigned short, unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< unsigned short, unsigned short, unsigned short > const & functor);
   private:
     itkMaskImageFilterIUS2IUS2IUS2_Superclass(itkMaskImageFilterIUS2IUS2IUS2_Superclass const & arg0);
     void operator=(itkMaskImageFilterIUS2IUS2IUS2_Superclass const & arg0);
   protected:
     itkMaskImageFilterIUS2IUS2IUS2_Superclass();
     ~itkMaskImageFilterIUS2IUS2IUS2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIUS2IUS2IUS2_Superclass_Pointer {
   public:
     itkMaskImageFilterIUS2IUS2IUS2_Superclass_Pointer();
     itkMaskImageFilterIUS2IUS2IUS2_Superclass_Pointer(itkMaskImageFilterIUS2IUS2IUS2_Superclass_Pointer const & p);
     itkMaskImageFilterIUS2IUS2IUS2_Superclass_Pointer(itkMaskImageFilterIUS2IUS2IUS2_Superclass * p);
     ~itkMaskImageFilterIUS2IUS2IUS2_Superclass_Pointer();
     itkMaskImageFilterIUS2IUS2IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUS2IUS2IUS2_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     itkMaskImageFilterIUS2IUS2IUS2_Superclass_Pointer & operator=(itkMaskImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r);
     itkMaskImageFilterIUS2IUS2IUS2_Superclass_Pointer & operator=(itkMaskImageFilterIUS2IUS2IUS2_Superclass * r);
     itkMaskImageFilterIUS2IUS2IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUS3IUC3IUS3_Pointer {
   public:
     itkMaskImageFilterIUS3IUC3IUS3_Pointer();
     itkMaskImageFilterIUS3IUC3IUS3_Pointer(itkMaskImageFilterIUS3IUC3IUS3_Pointer const & p);
     itkMaskImageFilterIUS3IUC3IUS3_Pointer(itkMaskImageFilterIUS3IUC3IUS3 * p);
     ~itkMaskImageFilterIUS3IUC3IUS3_Pointer();
     itkMaskImageFilterIUS3IUC3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUS3IUC3IUS3 * GetPointer() const;
     bool operator<(itkMaskImageFilterIUS3IUC3IUS3_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUS3IUC3IUS3_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUS3IUC3IUS3_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUS3IUC3IUS3_Pointer const & r) const;
     itkMaskImageFilterIUS3IUC3IUS3_Pointer & operator=(itkMaskImageFilterIUS3IUC3IUS3_Pointer const & r);
     itkMaskImageFilterIUS3IUC3IUS3_Pointer & operator=(itkMaskImageFilterIUS3IUC3IUS3 * r);
     itkMaskImageFilterIUS3IUC3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUS3IUC3IUS3_Superclass : public itkInPlaceImageFilterIUS3IUS3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIUS3IUC3IUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUS3 const * image1);
     void SetInput2(itkImageUC3 const * image2);
     itk::Functor::MaskInput< unsigned short, unsigned char, unsigned short > & GetFunctor();
     itk::Functor::MaskInput< unsigned short, unsigned char, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< unsigned short, unsigned char, unsigned short > const & functor);
   private:
     itkMaskImageFilterIUS3IUC3IUS3_Superclass(itkMaskImageFilterIUS3IUC3IUS3_Superclass const & arg0);
     void operator=(itkMaskImageFilterIUS3IUC3IUS3_Superclass const & arg0);
   protected:
     itkMaskImageFilterIUS3IUC3IUS3_Superclass();
     ~itkMaskImageFilterIUS3IUC3IUS3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIUS3IUC3IUS3_Superclass_Pointer {
   public:
     itkMaskImageFilterIUS3IUC3IUS3_Superclass_Pointer();
     itkMaskImageFilterIUS3IUC3IUS3_Superclass_Pointer(itkMaskImageFilterIUS3IUC3IUS3_Superclass_Pointer const & p);
     itkMaskImageFilterIUS3IUC3IUS3_Superclass_Pointer(itkMaskImageFilterIUS3IUC3IUS3_Superclass * p);
     ~itkMaskImageFilterIUS3IUC3IUS3_Superclass_Pointer();
     itkMaskImageFilterIUS3IUC3IUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUS3IUC3IUS3_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIUS3IUC3IUS3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUS3IUC3IUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUS3IUC3IUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUS3IUC3IUS3_Superclass_Pointer const & r) const;
     itkMaskImageFilterIUS3IUC3IUS3_Superclass_Pointer & operator=(itkMaskImageFilterIUS3IUC3IUS3_Superclass_Pointer const & r);
     itkMaskImageFilterIUS3IUC3IUS3_Superclass_Pointer & operator=(itkMaskImageFilterIUS3IUC3IUS3_Superclass * r);
     itkMaskImageFilterIUS3IUC3IUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUS3IUL3IUS3_Pointer {
   public:
     itkMaskImageFilterIUS3IUL3IUS3_Pointer();
     itkMaskImageFilterIUS3IUL3IUS3_Pointer(itkMaskImageFilterIUS3IUL3IUS3_Pointer const & p);
     itkMaskImageFilterIUS3IUL3IUS3_Pointer(itkMaskImageFilterIUS3IUL3IUS3 * p);
     ~itkMaskImageFilterIUS3IUL3IUS3_Pointer();
     itkMaskImageFilterIUS3IUL3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUS3IUL3IUS3 * GetPointer() const;
     bool operator<(itkMaskImageFilterIUS3IUL3IUS3_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUS3IUL3IUS3_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUS3IUL3IUS3_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUS3IUL3IUS3_Pointer const & r) const;
     itkMaskImageFilterIUS3IUL3IUS3_Pointer & operator=(itkMaskImageFilterIUS3IUL3IUS3_Pointer const & r);
     itkMaskImageFilterIUS3IUL3IUS3_Pointer & operator=(itkMaskImageFilterIUS3IUL3IUS3 * r);
     itkMaskImageFilterIUS3IUL3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUS3IUL3IUS3_Superclass : public itkInPlaceImageFilterIUS3IUS3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIUS3IUL3IUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUS3 const * image1);
     void SetInput2(itkImageUL3 const * image2);
     itk::Functor::MaskInput< unsigned short, unsigned long, unsigned short > & GetFunctor();
     itk::Functor::MaskInput< unsigned short, unsigned long, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< unsigned short, unsigned long, unsigned short > const & functor);
   private:
     itkMaskImageFilterIUS3IUL3IUS3_Superclass(itkMaskImageFilterIUS3IUL3IUS3_Superclass const & arg0);
     void operator=(itkMaskImageFilterIUS3IUL3IUS3_Superclass const & arg0);
   protected:
     itkMaskImageFilterIUS3IUL3IUS3_Superclass();
     ~itkMaskImageFilterIUS3IUL3IUS3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIUS3IUL3IUS3_Superclass_Pointer {
   public:
     itkMaskImageFilterIUS3IUL3IUS3_Superclass_Pointer();
     itkMaskImageFilterIUS3IUL3IUS3_Superclass_Pointer(itkMaskImageFilterIUS3IUL3IUS3_Superclass_Pointer const & p);
     itkMaskImageFilterIUS3IUL3IUS3_Superclass_Pointer(itkMaskImageFilterIUS3IUL3IUS3_Superclass * p);
     ~itkMaskImageFilterIUS3IUL3IUS3_Superclass_Pointer();
     itkMaskImageFilterIUS3IUL3IUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUS3IUL3IUS3_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIUS3IUL3IUS3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUS3IUL3IUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUS3IUL3IUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUS3IUL3IUS3_Superclass_Pointer const & r) const;
     itkMaskImageFilterIUS3IUL3IUS3_Superclass_Pointer & operator=(itkMaskImageFilterIUS3IUL3IUS3_Superclass_Pointer const & r);
     itkMaskImageFilterIUS3IUL3IUS3_Superclass_Pointer & operator=(itkMaskImageFilterIUS3IUL3IUS3_Superclass * r);
     itkMaskImageFilterIUS3IUL3IUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUS3IUS3IUS3_Pointer {
   public:
     itkMaskImageFilterIUS3IUS3IUS3_Pointer();
     itkMaskImageFilterIUS3IUS3IUS3_Pointer(itkMaskImageFilterIUS3IUS3IUS3_Pointer const & p);
     itkMaskImageFilterIUS3IUS3IUS3_Pointer(itkMaskImageFilterIUS3IUS3IUS3 * p);
     ~itkMaskImageFilterIUS3IUS3IUS3_Pointer();
     itkMaskImageFilterIUS3IUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUS3IUS3IUS3 * GetPointer() const;
     bool operator<(itkMaskImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     itkMaskImageFilterIUS3IUS3IUS3_Pointer & operator=(itkMaskImageFilterIUS3IUS3IUS3_Pointer const & r);
     itkMaskImageFilterIUS3IUS3IUS3_Pointer & operator=(itkMaskImageFilterIUS3IUS3IUS3 * r);
     itkMaskImageFilterIUS3IUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIUS3IUS3IUS3_Superclass : public itkInPlaceImageFilterIUS3IUS3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIUS3IUS3IUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUS3 const * image1);
     void SetInput2(itkImageUS3 const * image2);
     itk::Functor::MaskInput< unsigned short, unsigned short, unsigned short > & GetFunctor();
     itk::Functor::MaskInput< unsigned short, unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< unsigned short, unsigned short, unsigned short > const & functor);
   private:
     itkMaskImageFilterIUS3IUS3IUS3_Superclass(itkMaskImageFilterIUS3IUS3IUS3_Superclass const & arg0);
     void operator=(itkMaskImageFilterIUS3IUS3IUS3_Superclass const & arg0);
   protected:
     itkMaskImageFilterIUS3IUS3IUS3_Superclass();
     ~itkMaskImageFilterIUS3IUS3IUS3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIUS3IUS3IUS3_Superclass_Pointer {
   public:
     itkMaskImageFilterIUS3IUS3IUS3_Superclass_Pointer();
     itkMaskImageFilterIUS3IUS3IUS3_Superclass_Pointer(itkMaskImageFilterIUS3IUS3IUS3_Superclass_Pointer const & p);
     itkMaskImageFilterIUS3IUS3IUS3_Superclass_Pointer(itkMaskImageFilterIUS3IUS3IUS3_Superclass * p);
     ~itkMaskImageFilterIUS3IUS3IUS3_Superclass_Pointer();
     itkMaskImageFilterIUS3IUS3IUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIUS3IUS3IUS3_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     itkMaskImageFilterIUS3IUS3IUS3_Superclass_Pointer & operator=(itkMaskImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r);
     itkMaskImageFilterIUS3IUS3IUS3_Superclass_Pointer & operator=(itkMaskImageFilterIUS3IUS3IUS3_Superclass * r);
     itkMaskImageFilterIUS3IUS3IUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIVF22IUC2IVF22_Pointer {
   public:
     itkMaskImageFilterIVF22IUC2IVF22_Pointer();
     itkMaskImageFilterIVF22IUC2IVF22_Pointer(itkMaskImageFilterIVF22IUC2IVF22_Pointer const & p);
     itkMaskImageFilterIVF22IUC2IVF22_Pointer(itkMaskImageFilterIVF22IUC2IVF22 * p);
     ~itkMaskImageFilterIVF22IUC2IVF22_Pointer();
     itkMaskImageFilterIVF22IUC2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIVF22IUC2IVF22 * GetPointer() const;
     bool operator<(itkMaskImageFilterIVF22IUC2IVF22_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIVF22IUC2IVF22_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIVF22IUC2IVF22_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIVF22IUC2IVF22_Pointer const & r) const;
     itkMaskImageFilterIVF22IUC2IVF22_Pointer & operator=(itkMaskImageFilterIVF22IUC2IVF22_Pointer const & r);
     itkMaskImageFilterIVF22IUC2IVF22_Pointer & operator=(itkMaskImageFilterIVF22IUC2IVF22 * r);
     itkMaskImageFilterIVF22IUC2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIVF22IUC2IVF22_Superclass : public itkInPlaceImageFilterIVF22IVF22 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIVF22IUC2IVF22_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageVF22 const * image1);
     void SetInput2(itkImageUC2 const * image2);
     itk::Functor::MaskInput< itk::Vector< float, 2u >, unsigned char, itk::Vector< float, 2u > > & GetFunctor();
     itk::Functor::MaskInput< itk::Vector< float, 2u >, unsigned char, itk::Vector< float, 2u > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< itk::Vector< float, 2u >, unsigned char, itk::Vector< float, 2u > > const & functor);
   private:
     itkMaskImageFilterIVF22IUC2IVF22_Superclass(itkMaskImageFilterIVF22IUC2IVF22_Superclass const & arg0);
     void operator=(itkMaskImageFilterIVF22IUC2IVF22_Superclass const & arg0);
   protected:
     itkMaskImageFilterIVF22IUC2IVF22_Superclass();
     ~itkMaskImageFilterIVF22IUC2IVF22_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIVF22IUC2IVF22_Superclass_Pointer {
   public:
     itkMaskImageFilterIVF22IUC2IVF22_Superclass_Pointer();
     itkMaskImageFilterIVF22IUC2IVF22_Superclass_Pointer(itkMaskImageFilterIVF22IUC2IVF22_Superclass_Pointer const & p);
     itkMaskImageFilterIVF22IUC2IVF22_Superclass_Pointer(itkMaskImageFilterIVF22IUC2IVF22_Superclass * p);
     ~itkMaskImageFilterIVF22IUC2IVF22_Superclass_Pointer();
     itkMaskImageFilterIVF22IUC2IVF22_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIVF22IUC2IVF22_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIVF22IUC2IVF22_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIVF22IUC2IVF22_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIVF22IUC2IVF22_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIVF22IUC2IVF22_Superclass_Pointer const & r) const;
     itkMaskImageFilterIVF22IUC2IVF22_Superclass_Pointer & operator=(itkMaskImageFilterIVF22IUC2IVF22_Superclass_Pointer const & r);
     itkMaskImageFilterIVF22IUC2IVF22_Superclass_Pointer & operator=(itkMaskImageFilterIVF22IUC2IVF22_Superclass * r);
     itkMaskImageFilterIVF22IUC2IVF22_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIVF22IUL2IVF22_Pointer {
   public:
     itkMaskImageFilterIVF22IUL2IVF22_Pointer();
     itkMaskImageFilterIVF22IUL2IVF22_Pointer(itkMaskImageFilterIVF22IUL2IVF22_Pointer const & p);
     itkMaskImageFilterIVF22IUL2IVF22_Pointer(itkMaskImageFilterIVF22IUL2IVF22 * p);
     ~itkMaskImageFilterIVF22IUL2IVF22_Pointer();
     itkMaskImageFilterIVF22IUL2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIVF22IUL2IVF22 * GetPointer() const;
     bool operator<(itkMaskImageFilterIVF22IUL2IVF22_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIVF22IUL2IVF22_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIVF22IUL2IVF22_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIVF22IUL2IVF22_Pointer const & r) const;
     itkMaskImageFilterIVF22IUL2IVF22_Pointer & operator=(itkMaskImageFilterIVF22IUL2IVF22_Pointer const & r);
     itkMaskImageFilterIVF22IUL2IVF22_Pointer & operator=(itkMaskImageFilterIVF22IUL2IVF22 * r);
     itkMaskImageFilterIVF22IUL2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIVF22IUL2IVF22_Superclass : public itkInPlaceImageFilterIVF22IVF22 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIVF22IUL2IVF22_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageVF22 const * image1);
     void SetInput2(itkImageUL2 const * image2);
     itk::Functor::MaskInput< itk::Vector< float, 2u >, unsigned long, itk::Vector< float, 2u > > & GetFunctor();
     itk::Functor::MaskInput< itk::Vector< float, 2u >, unsigned long, itk::Vector< float, 2u > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< itk::Vector< float, 2u >, unsigned long, itk::Vector< float, 2u > > const & functor);
   private:
     itkMaskImageFilterIVF22IUL2IVF22_Superclass(itkMaskImageFilterIVF22IUL2IVF22_Superclass const & arg0);
     void operator=(itkMaskImageFilterIVF22IUL2IVF22_Superclass const & arg0);
   protected:
     itkMaskImageFilterIVF22IUL2IVF22_Superclass();
     ~itkMaskImageFilterIVF22IUL2IVF22_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIVF22IUL2IVF22_Superclass_Pointer {
   public:
     itkMaskImageFilterIVF22IUL2IVF22_Superclass_Pointer();
     itkMaskImageFilterIVF22IUL2IVF22_Superclass_Pointer(itkMaskImageFilterIVF22IUL2IVF22_Superclass_Pointer const & p);
     itkMaskImageFilterIVF22IUL2IVF22_Superclass_Pointer(itkMaskImageFilterIVF22IUL2IVF22_Superclass * p);
     ~itkMaskImageFilterIVF22IUL2IVF22_Superclass_Pointer();
     itkMaskImageFilterIVF22IUL2IVF22_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIVF22IUL2IVF22_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIVF22IUL2IVF22_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIVF22IUL2IVF22_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIVF22IUL2IVF22_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIVF22IUL2IVF22_Superclass_Pointer const & r) const;
     itkMaskImageFilterIVF22IUL2IVF22_Superclass_Pointer & operator=(itkMaskImageFilterIVF22IUL2IVF22_Superclass_Pointer const & r);
     itkMaskImageFilterIVF22IUL2IVF22_Superclass_Pointer & operator=(itkMaskImageFilterIVF22IUL2IVF22_Superclass * r);
     itkMaskImageFilterIVF22IUL2IVF22_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIVF22IUS2IVF22_Pointer {
   public:
     itkMaskImageFilterIVF22IUS2IVF22_Pointer();
     itkMaskImageFilterIVF22IUS2IVF22_Pointer(itkMaskImageFilterIVF22IUS2IVF22_Pointer const & p);
     itkMaskImageFilterIVF22IUS2IVF22_Pointer(itkMaskImageFilterIVF22IUS2IVF22 * p);
     ~itkMaskImageFilterIVF22IUS2IVF22_Pointer();
     itkMaskImageFilterIVF22IUS2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIVF22IUS2IVF22 * GetPointer() const;
     bool operator<(itkMaskImageFilterIVF22IUS2IVF22_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIVF22IUS2IVF22_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIVF22IUS2IVF22_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIVF22IUS2IVF22_Pointer const & r) const;
     itkMaskImageFilterIVF22IUS2IVF22_Pointer & operator=(itkMaskImageFilterIVF22IUS2IVF22_Pointer const & r);
     itkMaskImageFilterIVF22IUS2IVF22_Pointer & operator=(itkMaskImageFilterIVF22IUS2IVF22 * r);
     itkMaskImageFilterIVF22IUS2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIVF22IUS2IVF22_Superclass : public itkInPlaceImageFilterIVF22IVF22 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIVF22IUS2IVF22_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageVF22 const * image1);
     void SetInput2(itkImageUS2 const * image2);
     itk::Functor::MaskInput< itk::Vector< float, 2u >, unsigned short, itk::Vector< float, 2u > > & GetFunctor();
     itk::Functor::MaskInput< itk::Vector< float, 2u >, unsigned short, itk::Vector< float, 2u > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< itk::Vector< float, 2u >, unsigned short, itk::Vector< float, 2u > > const & functor);
   private:
     itkMaskImageFilterIVF22IUS2IVF22_Superclass(itkMaskImageFilterIVF22IUS2IVF22_Superclass const & arg0);
     void operator=(itkMaskImageFilterIVF22IUS2IVF22_Superclass const & arg0);
   protected:
     itkMaskImageFilterIVF22IUS2IVF22_Superclass();
     ~itkMaskImageFilterIVF22IUS2IVF22_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIVF22IUS2IVF22_Superclass_Pointer {
   public:
     itkMaskImageFilterIVF22IUS2IVF22_Superclass_Pointer();
     itkMaskImageFilterIVF22IUS2IVF22_Superclass_Pointer(itkMaskImageFilterIVF22IUS2IVF22_Superclass_Pointer const & p);
     itkMaskImageFilterIVF22IUS2IVF22_Superclass_Pointer(itkMaskImageFilterIVF22IUS2IVF22_Superclass * p);
     ~itkMaskImageFilterIVF22IUS2IVF22_Superclass_Pointer();
     itkMaskImageFilterIVF22IUS2IVF22_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIVF22IUS2IVF22_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIVF22IUS2IVF22_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIVF22IUS2IVF22_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIVF22IUS2IVF22_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIVF22IUS2IVF22_Superclass_Pointer const & r) const;
     itkMaskImageFilterIVF22IUS2IVF22_Superclass_Pointer & operator=(itkMaskImageFilterIVF22IUS2IVF22_Superclass_Pointer const & r);
     itkMaskImageFilterIVF22IUS2IVF22_Superclass_Pointer & operator=(itkMaskImageFilterIVF22IUS2IVF22_Superclass * r);
     itkMaskImageFilterIVF22IUS2IVF22_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIVF33IUC3IVF33_Pointer {
   public:
     itkMaskImageFilterIVF33IUC3IVF33_Pointer();
     itkMaskImageFilterIVF33IUC3IVF33_Pointer(itkMaskImageFilterIVF33IUC3IVF33_Pointer const & p);
     itkMaskImageFilterIVF33IUC3IVF33_Pointer(itkMaskImageFilterIVF33IUC3IVF33 * p);
     ~itkMaskImageFilterIVF33IUC3IVF33_Pointer();
     itkMaskImageFilterIVF33IUC3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIVF33IUC3IVF33 * GetPointer() const;
     bool operator<(itkMaskImageFilterIVF33IUC3IVF33_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIVF33IUC3IVF33_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIVF33IUC3IVF33_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIVF33IUC3IVF33_Pointer const & r) const;
     itkMaskImageFilterIVF33IUC3IVF33_Pointer & operator=(itkMaskImageFilterIVF33IUC3IVF33_Pointer const & r);
     itkMaskImageFilterIVF33IUC3IVF33_Pointer & operator=(itkMaskImageFilterIVF33IUC3IVF33 * r);
     itkMaskImageFilterIVF33IUC3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIVF33IUC3IVF33_Superclass : public itkInPlaceImageFilterIVF33IVF33 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIVF33IUC3IVF33_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageVF33 const * image1);
     void SetInput2(itkImageUC3 const * image2);
     itk::Functor::MaskInput< itk::Vector< float, 3u >, unsigned char, itk::Vector< float, 3u > > & GetFunctor();
     itk::Functor::MaskInput< itk::Vector< float, 3u >, unsigned char, itk::Vector< float, 3u > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< itk::Vector< float, 3u >, unsigned char, itk::Vector< float, 3u > > const & functor);
   private:
     itkMaskImageFilterIVF33IUC3IVF33_Superclass(itkMaskImageFilterIVF33IUC3IVF33_Superclass const & arg0);
     void operator=(itkMaskImageFilterIVF33IUC3IVF33_Superclass const & arg0);
   protected:
     itkMaskImageFilterIVF33IUC3IVF33_Superclass();
     ~itkMaskImageFilterIVF33IUC3IVF33_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIVF33IUC3IVF33_Superclass_Pointer {
   public:
     itkMaskImageFilterIVF33IUC3IVF33_Superclass_Pointer();
     itkMaskImageFilterIVF33IUC3IVF33_Superclass_Pointer(itkMaskImageFilterIVF33IUC3IVF33_Superclass_Pointer const & p);
     itkMaskImageFilterIVF33IUC3IVF33_Superclass_Pointer(itkMaskImageFilterIVF33IUC3IVF33_Superclass * p);
     ~itkMaskImageFilterIVF33IUC3IVF33_Superclass_Pointer();
     itkMaskImageFilterIVF33IUC3IVF33_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIVF33IUC3IVF33_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIVF33IUC3IVF33_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIVF33IUC3IVF33_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIVF33IUC3IVF33_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIVF33IUC3IVF33_Superclass_Pointer const & r) const;
     itkMaskImageFilterIVF33IUC3IVF33_Superclass_Pointer & operator=(itkMaskImageFilterIVF33IUC3IVF33_Superclass_Pointer const & r);
     itkMaskImageFilterIVF33IUC3IVF33_Superclass_Pointer & operator=(itkMaskImageFilterIVF33IUC3IVF33_Superclass * r);
     itkMaskImageFilterIVF33IUC3IVF33_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIVF33IUL3IVF33_Pointer {
   public:
     itkMaskImageFilterIVF33IUL3IVF33_Pointer();
     itkMaskImageFilterIVF33IUL3IVF33_Pointer(itkMaskImageFilterIVF33IUL3IVF33_Pointer const & p);
     itkMaskImageFilterIVF33IUL3IVF33_Pointer(itkMaskImageFilterIVF33IUL3IVF33 * p);
     ~itkMaskImageFilterIVF33IUL3IVF33_Pointer();
     itkMaskImageFilterIVF33IUL3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIVF33IUL3IVF33 * GetPointer() const;
     bool operator<(itkMaskImageFilterIVF33IUL3IVF33_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIVF33IUL3IVF33_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIVF33IUL3IVF33_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIVF33IUL3IVF33_Pointer const & r) const;
     itkMaskImageFilterIVF33IUL3IVF33_Pointer & operator=(itkMaskImageFilterIVF33IUL3IVF33_Pointer const & r);
     itkMaskImageFilterIVF33IUL3IVF33_Pointer & operator=(itkMaskImageFilterIVF33IUL3IVF33 * r);
     itkMaskImageFilterIVF33IUL3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIVF33IUL3IVF33_Superclass : public itkInPlaceImageFilterIVF33IVF33 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIVF33IUL3IVF33_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageVF33 const * image1);
     void SetInput2(itkImageUL3 const * image2);
     itk::Functor::MaskInput< itk::Vector< float, 3u >, unsigned long, itk::Vector< float, 3u > > & GetFunctor();
     itk::Functor::MaskInput< itk::Vector< float, 3u >, unsigned long, itk::Vector< float, 3u > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< itk::Vector< float, 3u >, unsigned long, itk::Vector< float, 3u > > const & functor);
   private:
     itkMaskImageFilterIVF33IUL3IVF33_Superclass(itkMaskImageFilterIVF33IUL3IVF33_Superclass const & arg0);
     void operator=(itkMaskImageFilterIVF33IUL3IVF33_Superclass const & arg0);
   protected:
     itkMaskImageFilterIVF33IUL3IVF33_Superclass();
     ~itkMaskImageFilterIVF33IUL3IVF33_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIVF33IUL3IVF33_Superclass_Pointer {
   public:
     itkMaskImageFilterIVF33IUL3IVF33_Superclass_Pointer();
     itkMaskImageFilterIVF33IUL3IVF33_Superclass_Pointer(itkMaskImageFilterIVF33IUL3IVF33_Superclass_Pointer const & p);
     itkMaskImageFilterIVF33IUL3IVF33_Superclass_Pointer(itkMaskImageFilterIVF33IUL3IVF33_Superclass * p);
     ~itkMaskImageFilterIVF33IUL3IVF33_Superclass_Pointer();
     itkMaskImageFilterIVF33IUL3IVF33_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIVF33IUL3IVF33_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIVF33IUL3IVF33_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIVF33IUL3IVF33_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIVF33IUL3IVF33_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIVF33IUL3IVF33_Superclass_Pointer const & r) const;
     itkMaskImageFilterIVF33IUL3IVF33_Superclass_Pointer & operator=(itkMaskImageFilterIVF33IUL3IVF33_Superclass_Pointer const & r);
     itkMaskImageFilterIVF33IUL3IVF33_Superclass_Pointer & operator=(itkMaskImageFilterIVF33IUL3IVF33_Superclass * r);
     itkMaskImageFilterIVF33IUL3IVF33_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIVF33IUS3IVF33_Pointer {
   public:
     itkMaskImageFilterIVF33IUS3IVF33_Pointer();
     itkMaskImageFilterIVF33IUS3IVF33_Pointer(itkMaskImageFilterIVF33IUS3IVF33_Pointer const & p);
     itkMaskImageFilterIVF33IUS3IVF33_Pointer(itkMaskImageFilterIVF33IUS3IVF33 * p);
     ~itkMaskImageFilterIVF33IUS3IVF33_Pointer();
     itkMaskImageFilterIVF33IUS3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIVF33IUS3IVF33 * GetPointer() const;
     bool operator<(itkMaskImageFilterIVF33IUS3IVF33_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIVF33IUS3IVF33_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIVF33IUS3IVF33_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIVF33IUS3IVF33_Pointer const & r) const;
     itkMaskImageFilterIVF33IUS3IVF33_Pointer & operator=(itkMaskImageFilterIVF33IUS3IVF33_Pointer const & r);
     itkMaskImageFilterIVF33IUS3IVF33_Pointer & operator=(itkMaskImageFilterIVF33IUS3IVF33 * r);
     itkMaskImageFilterIVF33IUS3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterIVF33IUS3IVF33_Superclass : public itkInPlaceImageFilterIVF33IVF33 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMaskImageFilterIVF33IUS3IVF33_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageVF33 const * image1);
     void SetInput2(itkImageUS3 const * image2);
     itk::Functor::MaskInput< itk::Vector< float, 3u >, unsigned short, itk::Vector< float, 3u > > & GetFunctor();
     itk::Functor::MaskInput< itk::Vector< float, 3u >, unsigned short, itk::Vector< float, 3u > > const & GetFunctor() const;
     void SetFunctor(itk::Functor::MaskInput< itk::Vector< float, 3u >, unsigned short, itk::Vector< float, 3u > > const & functor);
   private:
     itkMaskImageFilterIVF33IUS3IVF33_Superclass(itkMaskImageFilterIVF33IUS3IVF33_Superclass const & arg0);
     void operator=(itkMaskImageFilterIVF33IUS3IVF33_Superclass const & arg0);
   protected:
     itkMaskImageFilterIVF33IUS3IVF33_Superclass();
     ~itkMaskImageFilterIVF33IUS3IVF33_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMaskImageFilterIVF33IUS3IVF33_Superclass_Pointer {
   public:
     itkMaskImageFilterIVF33IUS3IVF33_Superclass_Pointer();
     itkMaskImageFilterIVF33IUS3IVF33_Superclass_Pointer(itkMaskImageFilterIVF33IUS3IVF33_Superclass_Pointer const & p);
     itkMaskImageFilterIVF33IUS3IVF33_Superclass_Pointer(itkMaskImageFilterIVF33IUS3IVF33_Superclass * p);
     ~itkMaskImageFilterIVF33IUS3IVF33_Superclass_Pointer();
     itkMaskImageFilterIVF33IUS3IVF33_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMaskImageFilterIVF33IUS3IVF33_Superclass * GetPointer() const;
     bool operator<(itkMaskImageFilterIVF33IUS3IVF33_Superclass_Pointer const & r) const;
     bool operator>(itkMaskImageFilterIVF33IUS3IVF33_Superclass_Pointer const & r) const;
     bool operator<=(itkMaskImageFilterIVF33IUS3IVF33_Superclass_Pointer const & r) const;
     bool operator>=(itkMaskImageFilterIVF33IUS3IVF33_Superclass_Pointer const & r) const;
     itkMaskImageFilterIVF33IUS3IVF33_Superclass_Pointer & operator=(itkMaskImageFilterIVF33IUS3IVF33_Superclass_Pointer const & r);
     itkMaskImageFilterIVF33IUS3IVF33_Superclass_Pointer & operator=(itkMaskImageFilterIVF33IUS3IVF33_Superclass * r);
     itkMaskImageFilterIVF33IUS3IVF33_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMaskImageFilterICF2IUC2ICF2 : public itkMaskImageFilterICF2IUC2ICF2_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterICF2IUC2ICF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(vcl_complexF const & outsideValue);
     vcl_complexF const & GetOutsideValue() const;
   private:
     itkMaskImageFilterICF2IUC2ICF2(itkMaskImageFilterICF2IUC2ICF2 const & arg0);
     void operator=(itkMaskImageFilterICF2IUC2ICF2 const & arg0);
   protected:
     itkMaskImageFilterICF2IUC2ICF2();
     ~itkMaskImageFilterICF2IUC2ICF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterICF2IUL2ICF2 : public itkMaskImageFilterICF2IUL2ICF2_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterICF2IUL2ICF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(vcl_complexF const & outsideValue);
     vcl_complexF const & GetOutsideValue() const;
   private:
     itkMaskImageFilterICF2IUL2ICF2(itkMaskImageFilterICF2IUL2ICF2 const & arg0);
     void operator=(itkMaskImageFilterICF2IUL2ICF2 const & arg0);
   protected:
     itkMaskImageFilterICF2IUL2ICF2();
     ~itkMaskImageFilterICF2IUL2ICF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterICF2IUS2ICF2 : public itkMaskImageFilterICF2IUS2ICF2_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterICF2IUS2ICF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(vcl_complexF const & outsideValue);
     vcl_complexF const & GetOutsideValue() const;
   private:
     itkMaskImageFilterICF2IUS2ICF2(itkMaskImageFilterICF2IUS2ICF2 const & arg0);
     void operator=(itkMaskImageFilterICF2IUS2ICF2 const & arg0);
   protected:
     itkMaskImageFilterICF2IUS2ICF2();
     ~itkMaskImageFilterICF2IUS2ICF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterICF3IUC3ICF3 : public itkMaskImageFilterICF3IUC3ICF3_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterICF3IUC3ICF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(vcl_complexF const & outsideValue);
     vcl_complexF const & GetOutsideValue() const;
   private:
     itkMaskImageFilterICF3IUC3ICF3(itkMaskImageFilterICF3IUC3ICF3 const & arg0);
     void operator=(itkMaskImageFilterICF3IUC3ICF3 const & arg0);
   protected:
     itkMaskImageFilterICF3IUC3ICF3();
     ~itkMaskImageFilterICF3IUC3ICF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterICF3IUL3ICF3 : public itkMaskImageFilterICF3IUL3ICF3_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterICF3IUL3ICF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(vcl_complexF const & outsideValue);
     vcl_complexF const & GetOutsideValue() const;
   private:
     itkMaskImageFilterICF3IUL3ICF3(itkMaskImageFilterICF3IUL3ICF3 const & arg0);
     void operator=(itkMaskImageFilterICF3IUL3ICF3 const & arg0);
   protected:
     itkMaskImageFilterICF3IUL3ICF3();
     ~itkMaskImageFilterICF3IUL3ICF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterICF3IUS3ICF3 : public itkMaskImageFilterICF3IUS3ICF3_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterICF3IUS3ICF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(vcl_complexF const & outsideValue);
     vcl_complexF const & GetOutsideValue() const;
   private:
     itkMaskImageFilterICF3IUS3ICF3(itkMaskImageFilterICF3IUS3ICF3 const & arg0);
     void operator=(itkMaskImageFilterICF3IUS3ICF3 const & arg0);
   protected:
     itkMaskImageFilterICF3IUS3ICF3();
     ~itkMaskImageFilterICF3IUS3ICF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterICVF22IUC2ICVF22 : public itkMaskImageFilterICVF22IUC2ICVF22_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterICVF22IUC2ICVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(itkCovariantVectorF2 const & outsideValue);
     itkCovariantVectorF2 const & GetOutsideValue() const;
   private:
     itkMaskImageFilterICVF22IUC2ICVF22(itkMaskImageFilterICVF22IUC2ICVF22 const & arg0);
     void operator=(itkMaskImageFilterICVF22IUC2ICVF22 const & arg0);
   protected:
     itkMaskImageFilterICVF22IUC2ICVF22();
     ~itkMaskImageFilterICVF22IUC2ICVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterICVF22IUL2ICVF22 : public itkMaskImageFilterICVF22IUL2ICVF22_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterICVF22IUL2ICVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(itkCovariantVectorF2 const & outsideValue);
     itkCovariantVectorF2 const & GetOutsideValue() const;
   private:
     itkMaskImageFilterICVF22IUL2ICVF22(itkMaskImageFilterICVF22IUL2ICVF22 const & arg0);
     void operator=(itkMaskImageFilterICVF22IUL2ICVF22 const & arg0);
   protected:
     itkMaskImageFilterICVF22IUL2ICVF22();
     ~itkMaskImageFilterICVF22IUL2ICVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterICVF22IUS2ICVF22 : public itkMaskImageFilterICVF22IUS2ICVF22_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterICVF22IUS2ICVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(itkCovariantVectorF2 const & outsideValue);
     itkCovariantVectorF2 const & GetOutsideValue() const;
   private:
     itkMaskImageFilterICVF22IUS2ICVF22(itkMaskImageFilterICVF22IUS2ICVF22 const & arg0);
     void operator=(itkMaskImageFilterICVF22IUS2ICVF22 const & arg0);
   protected:
     itkMaskImageFilterICVF22IUS2ICVF22();
     ~itkMaskImageFilterICVF22IUS2ICVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterICVF33IUC3ICVF33 : public itkMaskImageFilterICVF33IUC3ICVF33_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterICVF33IUC3ICVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(itkCovariantVectorF3 const & outsideValue);
     itkCovariantVectorF3 const & GetOutsideValue() const;
   private:
     itkMaskImageFilterICVF33IUC3ICVF33(itkMaskImageFilterICVF33IUC3ICVF33 const & arg0);
     void operator=(itkMaskImageFilterICVF33IUC3ICVF33 const & arg0);
   protected:
     itkMaskImageFilterICVF33IUC3ICVF33();
     ~itkMaskImageFilterICVF33IUC3ICVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterICVF33IUL3ICVF33 : public itkMaskImageFilterICVF33IUL3ICVF33_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterICVF33IUL3ICVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(itkCovariantVectorF3 const & outsideValue);
     itkCovariantVectorF3 const & GetOutsideValue() const;
   private:
     itkMaskImageFilterICVF33IUL3ICVF33(itkMaskImageFilterICVF33IUL3ICVF33 const & arg0);
     void operator=(itkMaskImageFilterICVF33IUL3ICVF33 const & arg0);
   protected:
     itkMaskImageFilterICVF33IUL3ICVF33();
     ~itkMaskImageFilterICVF33IUL3ICVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterICVF33IUS3ICVF33 : public itkMaskImageFilterICVF33IUS3ICVF33_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterICVF33IUS3ICVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(itkCovariantVectorF3 const & outsideValue);
     itkCovariantVectorF3 const & GetOutsideValue() const;
   private:
     itkMaskImageFilterICVF33IUS3ICVF33(itkMaskImageFilterICVF33IUS3ICVF33 const & arg0);
     void operator=(itkMaskImageFilterICVF33IUS3ICVF33 const & arg0);
   protected:
     itkMaskImageFilterICVF33IUS3ICVF33();
     ~itkMaskImageFilterICVF33IUS3ICVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterID2IUC2ID2 : public itkMaskImageFilterID2IUC2ID2_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterID2IUC2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(double const & outsideValue);
     double const & GetOutsideValue() const;
   private:
     itkMaskImageFilterID2IUC2ID2(itkMaskImageFilterID2IUC2ID2 const & arg0);
     void operator=(itkMaskImageFilterID2IUC2ID2 const & arg0);
   protected:
     itkMaskImageFilterID2IUC2ID2();
     ~itkMaskImageFilterID2IUC2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterID2IUL2ID2 : public itkMaskImageFilterID2IUL2ID2_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterID2IUL2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(double const & outsideValue);
     double const & GetOutsideValue() const;
   private:
     itkMaskImageFilterID2IUL2ID2(itkMaskImageFilterID2IUL2ID2 const & arg0);
     void operator=(itkMaskImageFilterID2IUL2ID2 const & arg0);
   protected:
     itkMaskImageFilterID2IUL2ID2();
     ~itkMaskImageFilterID2IUL2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterID2IUS2ID2 : public itkMaskImageFilterID2IUS2ID2_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterID2IUS2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(double const & outsideValue);
     double const & GetOutsideValue() const;
   private:
     itkMaskImageFilterID2IUS2ID2(itkMaskImageFilterID2IUS2ID2 const & arg0);
     void operator=(itkMaskImageFilterID2IUS2ID2 const & arg0);
   protected:
     itkMaskImageFilterID2IUS2ID2();
     ~itkMaskImageFilterID2IUS2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterID3IUC3ID3 : public itkMaskImageFilterID3IUC3ID3_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterID3IUC3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(double const & outsideValue);
     double const & GetOutsideValue() const;
   private:
     itkMaskImageFilterID3IUC3ID3(itkMaskImageFilterID3IUC3ID3 const & arg0);
     void operator=(itkMaskImageFilterID3IUC3ID3 const & arg0);
   protected:
     itkMaskImageFilterID3IUC3ID3();
     ~itkMaskImageFilterID3IUC3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterID3IUL3ID3 : public itkMaskImageFilterID3IUL3ID3_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterID3IUL3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(double const & outsideValue);
     double const & GetOutsideValue() const;
   private:
     itkMaskImageFilterID3IUL3ID3(itkMaskImageFilterID3IUL3ID3 const & arg0);
     void operator=(itkMaskImageFilterID3IUL3ID3 const & arg0);
   protected:
     itkMaskImageFilterID3IUL3ID3();
     ~itkMaskImageFilterID3IUL3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterID3IUS3ID3 : public itkMaskImageFilterID3IUS3ID3_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterID3IUS3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(double const & outsideValue);
     double const & GetOutsideValue() const;
   private:
     itkMaskImageFilterID3IUS3ID3(itkMaskImageFilterID3IUS3ID3 const & arg0);
     void operator=(itkMaskImageFilterID3IUS3ID3 const & arg0);
   protected:
     itkMaskImageFilterID3IUS3ID3();
     ~itkMaskImageFilterID3IUS3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIF2IUC2IF2 : public itkMaskImageFilterIF2IUC2IF2_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIF2IUC2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(float const & outsideValue);
     float const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIF2IUC2IF2(itkMaskImageFilterIF2IUC2IF2 const & arg0);
     void operator=(itkMaskImageFilterIF2IUC2IF2 const & arg0);
   protected:
     itkMaskImageFilterIF2IUC2IF2();
     ~itkMaskImageFilterIF2IUC2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIF2IUL2IF2 : public itkMaskImageFilterIF2IUL2IF2_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIF2IUL2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(float const & outsideValue);
     float const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIF2IUL2IF2(itkMaskImageFilterIF2IUL2IF2 const & arg0);
     void operator=(itkMaskImageFilterIF2IUL2IF2 const & arg0);
   protected:
     itkMaskImageFilterIF2IUL2IF2();
     ~itkMaskImageFilterIF2IUL2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIF2IUS2IF2 : public itkMaskImageFilterIF2IUS2IF2_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIF2IUS2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(float const & outsideValue);
     float const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIF2IUS2IF2(itkMaskImageFilterIF2IUS2IF2 const & arg0);
     void operator=(itkMaskImageFilterIF2IUS2IF2 const & arg0);
   protected:
     itkMaskImageFilterIF2IUS2IF2();
     ~itkMaskImageFilterIF2IUS2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIF3IUC3IF3 : public itkMaskImageFilterIF3IUC3IF3_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIF3IUC3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(float const & outsideValue);
     float const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIF3IUC3IF3(itkMaskImageFilterIF3IUC3IF3 const & arg0);
     void operator=(itkMaskImageFilterIF3IUC3IF3 const & arg0);
   protected:
     itkMaskImageFilterIF3IUC3IF3();
     ~itkMaskImageFilterIF3IUC3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIF3IUL3IF3 : public itkMaskImageFilterIF3IUL3IF3_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIF3IUL3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(float const & outsideValue);
     float const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIF3IUL3IF3(itkMaskImageFilterIF3IUL3IF3 const & arg0);
     void operator=(itkMaskImageFilterIF3IUL3IF3 const & arg0);
   protected:
     itkMaskImageFilterIF3IUL3IF3();
     ~itkMaskImageFilterIF3IUL3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIF3IUS3IF3 : public itkMaskImageFilterIF3IUS3IF3_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIF3IUS3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(float const & outsideValue);
     float const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIF3IUS3IF3(itkMaskImageFilterIF3IUS3IF3 const & arg0);
     void operator=(itkMaskImageFilterIF3IUS3IF3 const & arg0);
   protected:
     itkMaskImageFilterIF3IUS3IF3();
     ~itkMaskImageFilterIF3IUS3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2 : public itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(itkRGBAPixelUS const & outsideValue);
     itkRGBAPixelUS const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2(itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2 const & arg0);
     void operator=(itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2 const & arg0);
   protected:
     itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2();
     ~itkMaskImageFilterIRGBAUS2IUC2IRGBAUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2 : public itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(itkRGBAPixelUS const & outsideValue);
     itkRGBAPixelUS const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2(itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2 const & arg0);
     void operator=(itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2 const & arg0);
   protected:
     itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2();
     ~itkMaskImageFilterIRGBAUS2IUL2IRGBAUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2 : public itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(itkRGBAPixelUS const & outsideValue);
     itkRGBAPixelUS const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2(itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2 const & arg0);
     void operator=(itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2 const & arg0);
   protected:
     itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2();
     ~itkMaskImageFilterIRGBAUS2IUS2IRGBAUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3 : public itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(itkRGBAPixelUS const & outsideValue);
     itkRGBAPixelUS const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3(itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3 const & arg0);
     void operator=(itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3 const & arg0);
   protected:
     itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3();
     ~itkMaskImageFilterIRGBAUS3IUC3IRGBAUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3 : public itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(itkRGBAPixelUS const & outsideValue);
     itkRGBAPixelUS const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3(itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3 const & arg0);
     void operator=(itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3 const & arg0);
   protected:
     itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3();
     ~itkMaskImageFilterIRGBAUS3IUL3IRGBAUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3 : public itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(itkRGBAPixelUS const & outsideValue);
     itkRGBAPixelUS const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3(itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3 const & arg0);
     void operator=(itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3 const & arg0);
   protected:
     itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3();
     ~itkMaskImageFilterIRGBAUS3IUS3IRGBAUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIRGBUS2IUC2IRGBUS2 : public itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIRGBUS2IUC2IRGBUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(itkRGBPixelUS const & outsideValue);
     itkRGBPixelUS const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIRGBUS2IUC2IRGBUS2(itkMaskImageFilterIRGBUS2IUC2IRGBUS2 const & arg0);
     void operator=(itkMaskImageFilterIRGBUS2IUC2IRGBUS2 const & arg0);
   protected:
     itkMaskImageFilterIRGBUS2IUC2IRGBUS2();
     ~itkMaskImageFilterIRGBUS2IUC2IRGBUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIRGBUS2IUL2IRGBUS2 : public itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIRGBUS2IUL2IRGBUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(itkRGBPixelUS const & outsideValue);
     itkRGBPixelUS const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIRGBUS2IUL2IRGBUS2(itkMaskImageFilterIRGBUS2IUL2IRGBUS2 const & arg0);
     void operator=(itkMaskImageFilterIRGBUS2IUL2IRGBUS2 const & arg0);
   protected:
     itkMaskImageFilterIRGBUS2IUL2IRGBUS2();
     ~itkMaskImageFilterIRGBUS2IUL2IRGBUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIRGBUS2IUS2IRGBUS2 : public itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIRGBUS2IUS2IRGBUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(itkRGBPixelUS const & outsideValue);
     itkRGBPixelUS const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIRGBUS2IUS2IRGBUS2(itkMaskImageFilterIRGBUS2IUS2IRGBUS2 const & arg0);
     void operator=(itkMaskImageFilterIRGBUS2IUS2IRGBUS2 const & arg0);
   protected:
     itkMaskImageFilterIRGBUS2IUS2IRGBUS2();
     ~itkMaskImageFilterIRGBUS2IUS2IRGBUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIRGBUS3IUC3IRGBUS3 : public itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIRGBUS3IUC3IRGBUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(itkRGBPixelUS const & outsideValue);
     itkRGBPixelUS const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIRGBUS3IUC3IRGBUS3(itkMaskImageFilterIRGBUS3IUC3IRGBUS3 const & arg0);
     void operator=(itkMaskImageFilterIRGBUS3IUC3IRGBUS3 const & arg0);
   protected:
     itkMaskImageFilterIRGBUS3IUC3IRGBUS3();
     ~itkMaskImageFilterIRGBUS3IUC3IRGBUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIRGBUS3IUL3IRGBUS3 : public itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIRGBUS3IUL3IRGBUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(itkRGBPixelUS const & outsideValue);
     itkRGBPixelUS const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIRGBUS3IUL3IRGBUS3(itkMaskImageFilterIRGBUS3IUL3IRGBUS3 const & arg0);
     void operator=(itkMaskImageFilterIRGBUS3IUL3IRGBUS3 const & arg0);
   protected:
     itkMaskImageFilterIRGBUS3IUL3IRGBUS3();
     ~itkMaskImageFilterIRGBUS3IUL3IRGBUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIRGBUS3IUS3IRGBUS3 : public itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIRGBUS3IUS3IRGBUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(itkRGBPixelUS const & outsideValue);
     itkRGBPixelUS const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIRGBUS3IUS3IRGBUS3(itkMaskImageFilterIRGBUS3IUS3IRGBUS3 const & arg0);
     void operator=(itkMaskImageFilterIRGBUS3IUS3IRGBUS3 const & arg0);
   protected:
     itkMaskImageFilterIRGBUS3IUS3IRGBUS3();
     ~itkMaskImageFilterIRGBUS3IUS3IRGBUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIUC2IUC2IUC2 : public itkMaskImageFilterIUC2IUC2IUC2_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIUC2IUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(unsigned char const & outsideValue);
     unsigned char const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIUC2IUC2IUC2(itkMaskImageFilterIUC2IUC2IUC2 const & arg0);
     void operator=(itkMaskImageFilterIUC2IUC2IUC2 const & arg0);
   protected:
     itkMaskImageFilterIUC2IUC2IUC2();
     ~itkMaskImageFilterIUC2IUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIUC2IUL2IUC2 : public itkMaskImageFilterIUC2IUL2IUC2_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIUC2IUL2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(unsigned char const & outsideValue);
     unsigned char const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIUC2IUL2IUC2(itkMaskImageFilterIUC2IUL2IUC2 const & arg0);
     void operator=(itkMaskImageFilterIUC2IUL2IUC2 const & arg0);
   protected:
     itkMaskImageFilterIUC2IUL2IUC2();
     ~itkMaskImageFilterIUC2IUL2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIUC2IUS2IUC2 : public itkMaskImageFilterIUC2IUS2IUC2_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIUC2IUS2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(unsigned char const & outsideValue);
     unsigned char const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIUC2IUS2IUC2(itkMaskImageFilterIUC2IUS2IUC2 const & arg0);
     void operator=(itkMaskImageFilterIUC2IUS2IUC2 const & arg0);
   protected:
     itkMaskImageFilterIUC2IUS2IUC2();
     ~itkMaskImageFilterIUC2IUS2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIUC3IUC3IUC3 : public itkMaskImageFilterIUC3IUC3IUC3_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIUC3IUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(unsigned char const & outsideValue);
     unsigned char const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIUC3IUC3IUC3(itkMaskImageFilterIUC3IUC3IUC3 const & arg0);
     void operator=(itkMaskImageFilterIUC3IUC3IUC3 const & arg0);
   protected:
     itkMaskImageFilterIUC3IUC3IUC3();
     ~itkMaskImageFilterIUC3IUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIUC3IUL3IUC3 : public itkMaskImageFilterIUC3IUL3IUC3_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIUC3IUL3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(unsigned char const & outsideValue);
     unsigned char const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIUC3IUL3IUC3(itkMaskImageFilterIUC3IUL3IUC3 const & arg0);
     void operator=(itkMaskImageFilterIUC3IUL3IUC3 const & arg0);
   protected:
     itkMaskImageFilterIUC3IUL3IUC3();
     ~itkMaskImageFilterIUC3IUL3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIUC3IUS3IUC3 : public itkMaskImageFilterIUC3IUS3IUC3_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIUC3IUS3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(unsigned char const & outsideValue);
     unsigned char const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIUC3IUS3IUC3(itkMaskImageFilterIUC3IUS3IUC3 const & arg0);
     void operator=(itkMaskImageFilterIUC3IUS3IUC3 const & arg0);
   protected:
     itkMaskImageFilterIUC3IUS3IUC3();
     ~itkMaskImageFilterIUC3IUS3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIUL2IUC2IUL2 : public itkMaskImageFilterIUL2IUC2IUL2_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIUL2IUC2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(unsigned long const & outsideValue);
     unsigned long const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIUL2IUC2IUL2(itkMaskImageFilterIUL2IUC2IUL2 const & arg0);
     void operator=(itkMaskImageFilterIUL2IUC2IUL2 const & arg0);
   protected:
     itkMaskImageFilterIUL2IUC2IUL2();
     ~itkMaskImageFilterIUL2IUC2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIUL2IUL2IUL2 : public itkMaskImageFilterIUL2IUL2IUL2_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIUL2IUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(unsigned long const & outsideValue);
     unsigned long const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIUL2IUL2IUL2(itkMaskImageFilterIUL2IUL2IUL2 const & arg0);
     void operator=(itkMaskImageFilterIUL2IUL2IUL2 const & arg0);
   protected:
     itkMaskImageFilterIUL2IUL2IUL2();
     ~itkMaskImageFilterIUL2IUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIUL2IUS2IUL2 : public itkMaskImageFilterIUL2IUS2IUL2_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIUL2IUS2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(unsigned long const & outsideValue);
     unsigned long const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIUL2IUS2IUL2(itkMaskImageFilterIUL2IUS2IUL2 const & arg0);
     void operator=(itkMaskImageFilterIUL2IUS2IUL2 const & arg0);
   protected:
     itkMaskImageFilterIUL2IUS2IUL2();
     ~itkMaskImageFilterIUL2IUS2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIUL3IUC3IUL3 : public itkMaskImageFilterIUL3IUC3IUL3_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIUL3IUC3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(unsigned long const & outsideValue);
     unsigned long const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIUL3IUC3IUL3(itkMaskImageFilterIUL3IUC3IUL3 const & arg0);
     void operator=(itkMaskImageFilterIUL3IUC3IUL3 const & arg0);
   protected:
     itkMaskImageFilterIUL3IUC3IUL3();
     ~itkMaskImageFilterIUL3IUC3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIUL3IUL3IUL3 : public itkMaskImageFilterIUL3IUL3IUL3_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIUL3IUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(unsigned long const & outsideValue);
     unsigned long const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIUL3IUL3IUL3(itkMaskImageFilterIUL3IUL3IUL3 const & arg0);
     void operator=(itkMaskImageFilterIUL3IUL3IUL3 const & arg0);
   protected:
     itkMaskImageFilterIUL3IUL3IUL3();
     ~itkMaskImageFilterIUL3IUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIUL3IUS3IUL3 : public itkMaskImageFilterIUL3IUS3IUL3_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIUL3IUS3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(unsigned long const & outsideValue);
     unsigned long const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIUL3IUS3IUL3(itkMaskImageFilterIUL3IUS3IUL3 const & arg0);
     void operator=(itkMaskImageFilterIUL3IUS3IUL3 const & arg0);
   protected:
     itkMaskImageFilterIUL3IUS3IUL3();
     ~itkMaskImageFilterIUL3IUS3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIUS2IUC2IUS2 : public itkMaskImageFilterIUS2IUC2IUS2_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIUS2IUC2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(unsigned short const & outsideValue);
     unsigned short const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIUS2IUC2IUS2(itkMaskImageFilterIUS2IUC2IUS2 const & arg0);
     void operator=(itkMaskImageFilterIUS2IUC2IUS2 const & arg0);
   protected:
     itkMaskImageFilterIUS2IUC2IUS2();
     ~itkMaskImageFilterIUS2IUC2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIUS2IUL2IUS2 : public itkMaskImageFilterIUS2IUL2IUS2_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIUS2IUL2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(unsigned short const & outsideValue);
     unsigned short const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIUS2IUL2IUS2(itkMaskImageFilterIUS2IUL2IUS2 const & arg0);
     void operator=(itkMaskImageFilterIUS2IUL2IUS2 const & arg0);
   protected:
     itkMaskImageFilterIUS2IUL2IUS2();
     ~itkMaskImageFilterIUS2IUL2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIUS2IUS2IUS2 : public itkMaskImageFilterIUS2IUS2IUS2_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIUS2IUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(unsigned short const & outsideValue);
     unsigned short const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIUS2IUS2IUS2(itkMaskImageFilterIUS2IUS2IUS2 const & arg0);
     void operator=(itkMaskImageFilterIUS2IUS2IUS2 const & arg0);
   protected:
     itkMaskImageFilterIUS2IUS2IUS2();
     ~itkMaskImageFilterIUS2IUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIUS3IUC3IUS3 : public itkMaskImageFilterIUS3IUC3IUS3_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIUS3IUC3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(unsigned short const & outsideValue);
     unsigned short const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIUS3IUC3IUS3(itkMaskImageFilterIUS3IUC3IUS3 const & arg0);
     void operator=(itkMaskImageFilterIUS3IUC3IUS3 const & arg0);
   protected:
     itkMaskImageFilterIUS3IUC3IUS3();
     ~itkMaskImageFilterIUS3IUC3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIUS3IUL3IUS3 : public itkMaskImageFilterIUS3IUL3IUS3_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIUS3IUL3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(unsigned short const & outsideValue);
     unsigned short const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIUS3IUL3IUS3(itkMaskImageFilterIUS3IUL3IUS3 const & arg0);
     void operator=(itkMaskImageFilterIUS3IUL3IUS3 const & arg0);
   protected:
     itkMaskImageFilterIUS3IUL3IUS3();
     ~itkMaskImageFilterIUS3IUL3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIUS3IUS3IUS3 : public itkMaskImageFilterIUS3IUS3IUS3_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIUS3IUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(unsigned short const & outsideValue);
     unsigned short const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIUS3IUS3IUS3(itkMaskImageFilterIUS3IUS3IUS3 const & arg0);
     void operator=(itkMaskImageFilterIUS3IUS3IUS3 const & arg0);
   protected:
     itkMaskImageFilterIUS3IUS3IUS3();
     ~itkMaskImageFilterIUS3IUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIVF22IUC2IVF22 : public itkMaskImageFilterIVF22IUC2IVF22_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIVF22IUC2IVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(itkVectorF2 const & outsideValue);
     itkVectorF2 const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIVF22IUC2IVF22(itkMaskImageFilterIVF22IUC2IVF22 const & arg0);
     void operator=(itkMaskImageFilterIVF22IUC2IVF22 const & arg0);
   protected:
     itkMaskImageFilterIVF22IUC2IVF22();
     ~itkMaskImageFilterIVF22IUC2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIVF22IUL2IVF22 : public itkMaskImageFilterIVF22IUL2IVF22_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIVF22IUL2IVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(itkVectorF2 const & outsideValue);
     itkVectorF2 const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIVF22IUL2IVF22(itkMaskImageFilterIVF22IUL2IVF22 const & arg0);
     void operator=(itkMaskImageFilterIVF22IUL2IVF22 const & arg0);
   protected:
     itkMaskImageFilterIVF22IUL2IVF22();
     ~itkMaskImageFilterIVF22IUL2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIVF22IUS2IVF22 : public itkMaskImageFilterIVF22IUS2IVF22_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIVF22IUS2IVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(itkVectorF2 const & outsideValue);
     itkVectorF2 const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIVF22IUS2IVF22(itkMaskImageFilterIVF22IUS2IVF22 const & arg0);
     void operator=(itkMaskImageFilterIVF22IUS2IVF22 const & arg0);
   protected:
     itkMaskImageFilterIVF22IUS2IVF22();
     ~itkMaskImageFilterIVF22IUS2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIVF33IUC3IVF33 : public itkMaskImageFilterIVF33IUC3IVF33_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIVF33IUC3IVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(itkVectorF3 const & outsideValue);
     itkVectorF3 const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIVF33IUC3IVF33(itkMaskImageFilterIVF33IUC3IVF33 const & arg0);
     void operator=(itkMaskImageFilterIVF33IUC3IVF33 const & arg0);
   protected:
     itkMaskImageFilterIVF33IUC3IVF33();
     ~itkMaskImageFilterIVF33IUC3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIVF33IUL3IVF33 : public itkMaskImageFilterIVF33IUL3IVF33_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIVF33IUL3IVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(itkVectorF3 const & outsideValue);
     itkVectorF3 const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIVF33IUL3IVF33(itkMaskImageFilterIVF33IUL3IVF33 const & arg0);
     void operator=(itkMaskImageFilterIVF33IUL3IVF33 const & arg0);
   protected:
     itkMaskImageFilterIVF33IUL3IVF33();
     ~itkMaskImageFilterIVF33IUL3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMaskImageFilterIVF33IUS3IVF33 : public itkMaskImageFilterIVF33IUS3IVF33_Superclass {
   public:
     enum  {  MaskEqualityComparableCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     static itkMaskImageFilterIVF33IUS3IVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetOutsideValue(itkVectorF3 const & outsideValue);
     itkVectorF3 const & GetOutsideValue() const;
   private:
     itkMaskImageFilterIVF33IUS3IVF33(itkMaskImageFilterIVF33IUS3IVF33 const & arg0);
     void operator=(itkMaskImageFilterIVF33IUS3IVF33 const & arg0);
   protected:
     itkMaskImageFilterIVF33IUS3IVF33();
     ~itkMaskImageFilterIVF33IUS3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


