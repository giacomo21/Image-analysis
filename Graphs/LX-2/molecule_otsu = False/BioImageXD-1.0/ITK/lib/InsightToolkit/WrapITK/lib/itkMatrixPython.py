# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkMatrixPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkMatrixPython', [dirname(__file__)])
        except ImportError:
            import _itkMatrixPython
            return _itkMatrixPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkMatrixPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkMatrixPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkMatrixPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import pyBasePython
import vnl_matrixPython
import itkFixedArrayPython
import itkVectorPython
import vnl_vector_refPython
import vnl_matrix_fixedPython
import itkPointPython
class itkMatrixD22(object):
    """Proxy of C++ itkMatrixD22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    RowDimensions = _itkMatrixPython.itkMatrixD22_RowDimensions
    ColumnDimensions = _itkMatrixPython.itkMatrixD22_ColumnDimensions
    __swig_destroy__ = _itkMatrixPython.delete_itkMatrixD22
    def __add__(self, *args):
        """__add__(self, itkMatrixD22 matrix) -> itkMatrixD22"""
        return _itkMatrixPython.itkMatrixD22___add__(self, *args)

    def __iadd__(self, *args):
        """__iadd__(self, itkMatrixD22 matrix) -> itkMatrixD22"""
        return _itkMatrixPython.itkMatrixD22___iadd__(self, *args)

    def __sub__(self, *args):
        """__sub__(self, itkMatrixD22 matrix) -> itkMatrixD22"""
        return _itkMatrixPython.itkMatrixD22___sub__(self, *args)

    def __isub__(self, *args):
        """__isub__(self, itkMatrixD22 matrix) -> itkMatrixD22"""
        return _itkMatrixPython.itkMatrixD22___isub__(self, *args)

    def __imul__(self, *args):
        """
        __imul__(self, itkMatrixD22 matrix)
        __imul__(self, vnl_matrixD matrix)
        __imul__(self, double value)
        """
        return _itkMatrixPython.itkMatrixD22___imul__(self, *args)

    def __mul__(self, *args):
        """
        __mul__(self, itkVectorD2 vector) -> itkVectorD2
        __mul__(self, itkPointD2 vector) -> itkPointD2
        __mul__(self, itkCovariantVectorD2 vector) -> itkCovariantVectorD2
        __mul__(self, itkMatrixD22 matrix) -> itkMatrixD22
        __mul__(self, vnl_matrixD matrix) -> vnl_matrixD
        __mul__(self, vnl_vectorD matrix) -> vnl_vectorD
        __mul__(self, double value) -> itkMatrixD22
        """
        return _itkMatrixPython.itkMatrixD22___mul__(self, *args)

    def __idiv__(self, *args):
        """__idiv__(self, double value)"""
        return _itkMatrixPython.itkMatrixD22___idiv__(self, *args)

    def __div__(self, *args):
        """__div__(self, double value) -> itkMatrixD22"""
        return _itkMatrixPython.itkMatrixD22___div__(self, *args)

    def __call__(self, *args):
        """
        __call__(self, unsigned int row, unsigned int col) -> double
        __call__(self, unsigned int row, unsigned int col) -> double
        """
        return _itkMatrixPython.itkMatrixD22___call__(self, *args)

    def GetVnlMatrix(self, *args):
        """
        GetVnlMatrix(self) -> vnl_matrix_fixedD_2_2
        GetVnlMatrix(self) -> vnl_matrix_fixedD_2_2
        """
        return _itkMatrixPython.itkMatrixD22_GetVnlMatrix(self, *args)

    def SetIdentity(self):
        """SetIdentity(self)"""
        return _itkMatrixPython.itkMatrixD22_SetIdentity(self)

    def Fill(self, *args):
        """Fill(self, double value)"""
        return _itkMatrixPython.itkMatrixD22_Fill(self, *args)

    def __eq__(self, *args):
        """__eq__(self, itkMatrixD22 matrix) -> bool"""
        return _itkMatrixPython.itkMatrixD22___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(self, itkMatrixD22 matrix) -> bool"""
        return _itkMatrixPython.itkMatrixD22___ne__(self, *args)

    def GetInverse(self):
        """GetInverse(self) -> vnl_matrix_fixedD_2_2"""
        return _itkMatrixPython.itkMatrixD22_GetInverse(self)

    def GetTranspose(self):
        """GetTranspose(self) -> vnl_matrix_fixedD_2_2"""
        return _itkMatrixPython.itkMatrixD22_GetTranspose(self)

    def __init__(self, *args): 
        """
        __init__(self, vnl_matrixD matrix) -> itkMatrixD22
        __init__(self, vnl_matrix_fixedD_2_2 matrix) -> itkMatrixD22
        __init__(self) -> itkMatrixD22
        __init__(self, itkMatrixD22 matrix) -> itkMatrixD22
        """
        _itkMatrixPython.itkMatrixD22_swiginit(self,_itkMatrixPython.new_itkMatrixD22(*args))
itkMatrixD22.__add__ = new_instancemethod(_itkMatrixPython.itkMatrixD22___add__,None,itkMatrixD22)
itkMatrixD22.__iadd__ = new_instancemethod(_itkMatrixPython.itkMatrixD22___iadd__,None,itkMatrixD22)
itkMatrixD22.__sub__ = new_instancemethod(_itkMatrixPython.itkMatrixD22___sub__,None,itkMatrixD22)
itkMatrixD22.__isub__ = new_instancemethod(_itkMatrixPython.itkMatrixD22___isub__,None,itkMatrixD22)
itkMatrixD22.__imul__ = new_instancemethod(_itkMatrixPython.itkMatrixD22___imul__,None,itkMatrixD22)
itkMatrixD22.__mul__ = new_instancemethod(_itkMatrixPython.itkMatrixD22___mul__,None,itkMatrixD22)
itkMatrixD22.__idiv__ = new_instancemethod(_itkMatrixPython.itkMatrixD22___idiv__,None,itkMatrixD22)
itkMatrixD22.__div__ = new_instancemethod(_itkMatrixPython.itkMatrixD22___div__,None,itkMatrixD22)
itkMatrixD22.__call__ = new_instancemethod(_itkMatrixPython.itkMatrixD22___call__,None,itkMatrixD22)
itkMatrixD22.GetVnlMatrix = new_instancemethod(_itkMatrixPython.itkMatrixD22_GetVnlMatrix,None,itkMatrixD22)
itkMatrixD22.SetIdentity = new_instancemethod(_itkMatrixPython.itkMatrixD22_SetIdentity,None,itkMatrixD22)
itkMatrixD22.Fill = new_instancemethod(_itkMatrixPython.itkMatrixD22_Fill,None,itkMatrixD22)
itkMatrixD22.__eq__ = new_instancemethod(_itkMatrixPython.itkMatrixD22___eq__,None,itkMatrixD22)
itkMatrixD22.__ne__ = new_instancemethod(_itkMatrixPython.itkMatrixD22___ne__,None,itkMatrixD22)
itkMatrixD22.GetInverse = new_instancemethod(_itkMatrixPython.itkMatrixD22_GetInverse,None,itkMatrixD22)
itkMatrixD22.GetTranspose = new_instancemethod(_itkMatrixPython.itkMatrixD22_GetTranspose,None,itkMatrixD22)
itkMatrixD22_swigregister = _itkMatrixPython.itkMatrixD22_swigregister
itkMatrixD22_swigregister(itkMatrixD22)

class itkMatrixD33(object):
    """Proxy of C++ itkMatrixD33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    RowDimensions = _itkMatrixPython.itkMatrixD33_RowDimensions
    ColumnDimensions = _itkMatrixPython.itkMatrixD33_ColumnDimensions
    __swig_destroy__ = _itkMatrixPython.delete_itkMatrixD33
    def __add__(self, *args):
        """__add__(self, itkMatrixD33 matrix) -> itkMatrixD33"""
        return _itkMatrixPython.itkMatrixD33___add__(self, *args)

    def __iadd__(self, *args):
        """__iadd__(self, itkMatrixD33 matrix) -> itkMatrixD33"""
        return _itkMatrixPython.itkMatrixD33___iadd__(self, *args)

    def __sub__(self, *args):
        """__sub__(self, itkMatrixD33 matrix) -> itkMatrixD33"""
        return _itkMatrixPython.itkMatrixD33___sub__(self, *args)

    def __isub__(self, *args):
        """__isub__(self, itkMatrixD33 matrix) -> itkMatrixD33"""
        return _itkMatrixPython.itkMatrixD33___isub__(self, *args)

    def __imul__(self, *args):
        """
        __imul__(self, itkMatrixD33 matrix)
        __imul__(self, vnl_matrixD matrix)
        __imul__(self, double value)
        """
        return _itkMatrixPython.itkMatrixD33___imul__(self, *args)

    def __mul__(self, *args):
        """
        __mul__(self, itkVectorD3 vector) -> itkVectorD3
        __mul__(self, itkPointD3 vector) -> itkPointD3
        __mul__(self, itkCovariantVectorD3 vector) -> itkCovariantVectorD3
        __mul__(self, itkMatrixD33 matrix) -> itkMatrixD33
        __mul__(self, vnl_matrixD matrix) -> vnl_matrixD
        __mul__(self, vnl_vectorD matrix) -> vnl_vectorD
        __mul__(self, double value) -> itkMatrixD33
        """
        return _itkMatrixPython.itkMatrixD33___mul__(self, *args)

    def __idiv__(self, *args):
        """__idiv__(self, double value)"""
        return _itkMatrixPython.itkMatrixD33___idiv__(self, *args)

    def __div__(self, *args):
        """__div__(self, double value) -> itkMatrixD33"""
        return _itkMatrixPython.itkMatrixD33___div__(self, *args)

    def __call__(self, *args):
        """
        __call__(self, unsigned int row, unsigned int col) -> double
        __call__(self, unsigned int row, unsigned int col) -> double
        """
        return _itkMatrixPython.itkMatrixD33___call__(self, *args)

    def GetVnlMatrix(self, *args):
        """
        GetVnlMatrix(self) -> vnl_matrix_fixedD_3_3
        GetVnlMatrix(self) -> vnl_matrix_fixedD_3_3
        """
        return _itkMatrixPython.itkMatrixD33_GetVnlMatrix(self, *args)

    def SetIdentity(self):
        """SetIdentity(self)"""
        return _itkMatrixPython.itkMatrixD33_SetIdentity(self)

    def Fill(self, *args):
        """Fill(self, double value)"""
        return _itkMatrixPython.itkMatrixD33_Fill(self, *args)

    def __eq__(self, *args):
        """__eq__(self, itkMatrixD33 matrix) -> bool"""
        return _itkMatrixPython.itkMatrixD33___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(self, itkMatrixD33 matrix) -> bool"""
        return _itkMatrixPython.itkMatrixD33___ne__(self, *args)

    def GetInverse(self):
        """GetInverse(self) -> vnl_matrix_fixedD_3_3"""
        return _itkMatrixPython.itkMatrixD33_GetInverse(self)

    def GetTranspose(self):
        """GetTranspose(self) -> vnl_matrix_fixedD_3_3"""
        return _itkMatrixPython.itkMatrixD33_GetTranspose(self)

    def __init__(self, *args): 
        """
        __init__(self, vnl_matrixD matrix) -> itkMatrixD33
        __init__(self, vnl_matrix_fixedD_3_3 matrix) -> itkMatrixD33
        __init__(self) -> itkMatrixD33
        __init__(self, itkMatrixD33 matrix) -> itkMatrixD33
        """
        _itkMatrixPython.itkMatrixD33_swiginit(self,_itkMatrixPython.new_itkMatrixD33(*args))
itkMatrixD33.__add__ = new_instancemethod(_itkMatrixPython.itkMatrixD33___add__,None,itkMatrixD33)
itkMatrixD33.__iadd__ = new_instancemethod(_itkMatrixPython.itkMatrixD33___iadd__,None,itkMatrixD33)
itkMatrixD33.__sub__ = new_instancemethod(_itkMatrixPython.itkMatrixD33___sub__,None,itkMatrixD33)
itkMatrixD33.__isub__ = new_instancemethod(_itkMatrixPython.itkMatrixD33___isub__,None,itkMatrixD33)
itkMatrixD33.__imul__ = new_instancemethod(_itkMatrixPython.itkMatrixD33___imul__,None,itkMatrixD33)
itkMatrixD33.__mul__ = new_instancemethod(_itkMatrixPython.itkMatrixD33___mul__,None,itkMatrixD33)
itkMatrixD33.__idiv__ = new_instancemethod(_itkMatrixPython.itkMatrixD33___idiv__,None,itkMatrixD33)
itkMatrixD33.__div__ = new_instancemethod(_itkMatrixPython.itkMatrixD33___div__,None,itkMatrixD33)
itkMatrixD33.__call__ = new_instancemethod(_itkMatrixPython.itkMatrixD33___call__,None,itkMatrixD33)
itkMatrixD33.GetVnlMatrix = new_instancemethod(_itkMatrixPython.itkMatrixD33_GetVnlMatrix,None,itkMatrixD33)
itkMatrixD33.SetIdentity = new_instancemethod(_itkMatrixPython.itkMatrixD33_SetIdentity,None,itkMatrixD33)
itkMatrixD33.Fill = new_instancemethod(_itkMatrixPython.itkMatrixD33_Fill,None,itkMatrixD33)
itkMatrixD33.__eq__ = new_instancemethod(_itkMatrixPython.itkMatrixD33___eq__,None,itkMatrixD33)
itkMatrixD33.__ne__ = new_instancemethod(_itkMatrixPython.itkMatrixD33___ne__,None,itkMatrixD33)
itkMatrixD33.GetInverse = new_instancemethod(_itkMatrixPython.itkMatrixD33_GetInverse,None,itkMatrixD33)
itkMatrixD33.GetTranspose = new_instancemethod(_itkMatrixPython.itkMatrixD33_GetTranspose,None,itkMatrixD33)
itkMatrixD33_swigregister = _itkMatrixPython.itkMatrixD33_swigregister
itkMatrixD33_swigregister(itkMatrixD33)

class itkMatrixF22(object):
    """Proxy of C++ itkMatrixF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    RowDimensions = _itkMatrixPython.itkMatrixF22_RowDimensions
    ColumnDimensions = _itkMatrixPython.itkMatrixF22_ColumnDimensions
    __swig_destroy__ = _itkMatrixPython.delete_itkMatrixF22
    def __add__(self, *args):
        """__add__(self, itkMatrixF22 matrix) -> itkMatrixF22"""
        return _itkMatrixPython.itkMatrixF22___add__(self, *args)

    def __iadd__(self, *args):
        """__iadd__(self, itkMatrixF22 matrix) -> itkMatrixF22"""
        return _itkMatrixPython.itkMatrixF22___iadd__(self, *args)

    def __sub__(self, *args):
        """__sub__(self, itkMatrixF22 matrix) -> itkMatrixF22"""
        return _itkMatrixPython.itkMatrixF22___sub__(self, *args)

    def __isub__(self, *args):
        """__isub__(self, itkMatrixF22 matrix) -> itkMatrixF22"""
        return _itkMatrixPython.itkMatrixF22___isub__(self, *args)

    def __imul__(self, *args):
        """
        __imul__(self, itkMatrixF22 matrix)
        __imul__(self, vnl_matrixF matrix)
        __imul__(self, float value)
        """
        return _itkMatrixPython.itkMatrixF22___imul__(self, *args)

    def __mul__(self, *args):
        """
        __mul__(self, itkVectorF2 vector) -> itkVectorF2
        __mul__(self, itkPointF2 vector) -> itkPointF2
        __mul__(self, itkCovariantVectorF2 vector) -> itkCovariantVectorF2
        __mul__(self, itkMatrixF22 matrix) -> itkMatrixF22
        __mul__(self, vnl_matrixF matrix) -> vnl_matrixF
        __mul__(self, vnl_vectorF matrix) -> vnl_vectorF
        __mul__(self, float value) -> itkMatrixF22
        """
        return _itkMatrixPython.itkMatrixF22___mul__(self, *args)

    def __idiv__(self, *args):
        """__idiv__(self, float value)"""
        return _itkMatrixPython.itkMatrixF22___idiv__(self, *args)

    def __div__(self, *args):
        """__div__(self, float value) -> itkMatrixF22"""
        return _itkMatrixPython.itkMatrixF22___div__(self, *args)

    def __call__(self, *args):
        """
        __call__(self, unsigned int row, unsigned int col) -> float
        __call__(self, unsigned int row, unsigned int col) -> float
        """
        return _itkMatrixPython.itkMatrixF22___call__(self, *args)

    def GetVnlMatrix(self, *args):
        """
        GetVnlMatrix(self) -> vnl_matrix_fixed<(float,2u,2u)>
        GetVnlMatrix(self) -> vnl_matrix_fixed<(float,2u,2u)>
        """
        return _itkMatrixPython.itkMatrixF22_GetVnlMatrix(self, *args)

    def SetIdentity(self):
        """SetIdentity(self)"""
        return _itkMatrixPython.itkMatrixF22_SetIdentity(self)

    def Fill(self, *args):
        """Fill(self, float value)"""
        return _itkMatrixPython.itkMatrixF22_Fill(self, *args)

    def __eq__(self, *args):
        """__eq__(self, itkMatrixF22 matrix) -> bool"""
        return _itkMatrixPython.itkMatrixF22___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(self, itkMatrixF22 matrix) -> bool"""
        return _itkMatrixPython.itkMatrixF22___ne__(self, *args)

    def GetInverse(self):
        """GetInverse(self) -> vnl_matrix_fixed<(float,2u,2u)>"""
        return _itkMatrixPython.itkMatrixF22_GetInverse(self)

    def GetTranspose(self):
        """GetTranspose(self) -> vnl_matrix_fixed<(float,2u,2u)>"""
        return _itkMatrixPython.itkMatrixF22_GetTranspose(self)

    def __init__(self, *args): 
        """
        __init__(self, vnl_matrixF matrix) -> itkMatrixF22
        __init__(self, vnl_matrix_fixed<(float,2u,2u)> matrix) -> itkMatrixF22
        __init__(self) -> itkMatrixF22
        __init__(self, itkMatrixF22 matrix) -> itkMatrixF22
        """
        _itkMatrixPython.itkMatrixF22_swiginit(self,_itkMatrixPython.new_itkMatrixF22(*args))
itkMatrixF22.__add__ = new_instancemethod(_itkMatrixPython.itkMatrixF22___add__,None,itkMatrixF22)
itkMatrixF22.__iadd__ = new_instancemethod(_itkMatrixPython.itkMatrixF22___iadd__,None,itkMatrixF22)
itkMatrixF22.__sub__ = new_instancemethod(_itkMatrixPython.itkMatrixF22___sub__,None,itkMatrixF22)
itkMatrixF22.__isub__ = new_instancemethod(_itkMatrixPython.itkMatrixF22___isub__,None,itkMatrixF22)
itkMatrixF22.__imul__ = new_instancemethod(_itkMatrixPython.itkMatrixF22___imul__,None,itkMatrixF22)
itkMatrixF22.__mul__ = new_instancemethod(_itkMatrixPython.itkMatrixF22___mul__,None,itkMatrixF22)
itkMatrixF22.__idiv__ = new_instancemethod(_itkMatrixPython.itkMatrixF22___idiv__,None,itkMatrixF22)
itkMatrixF22.__div__ = new_instancemethod(_itkMatrixPython.itkMatrixF22___div__,None,itkMatrixF22)
itkMatrixF22.__call__ = new_instancemethod(_itkMatrixPython.itkMatrixF22___call__,None,itkMatrixF22)
itkMatrixF22.GetVnlMatrix = new_instancemethod(_itkMatrixPython.itkMatrixF22_GetVnlMatrix,None,itkMatrixF22)
itkMatrixF22.SetIdentity = new_instancemethod(_itkMatrixPython.itkMatrixF22_SetIdentity,None,itkMatrixF22)
itkMatrixF22.Fill = new_instancemethod(_itkMatrixPython.itkMatrixF22_Fill,None,itkMatrixF22)
itkMatrixF22.__eq__ = new_instancemethod(_itkMatrixPython.itkMatrixF22___eq__,None,itkMatrixF22)
itkMatrixF22.__ne__ = new_instancemethod(_itkMatrixPython.itkMatrixF22___ne__,None,itkMatrixF22)
itkMatrixF22.GetInverse = new_instancemethod(_itkMatrixPython.itkMatrixF22_GetInverse,None,itkMatrixF22)
itkMatrixF22.GetTranspose = new_instancemethod(_itkMatrixPython.itkMatrixF22_GetTranspose,None,itkMatrixF22)
itkMatrixF22_swigregister = _itkMatrixPython.itkMatrixF22_swigregister
itkMatrixF22_swigregister(itkMatrixF22)

class itkMatrixF33(object):
    """Proxy of C++ itkMatrixF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    RowDimensions = _itkMatrixPython.itkMatrixF33_RowDimensions
    ColumnDimensions = _itkMatrixPython.itkMatrixF33_ColumnDimensions
    __swig_destroy__ = _itkMatrixPython.delete_itkMatrixF33
    def __add__(self, *args):
        """__add__(self, itkMatrixF33 matrix) -> itkMatrixF33"""
        return _itkMatrixPython.itkMatrixF33___add__(self, *args)

    def __iadd__(self, *args):
        """__iadd__(self, itkMatrixF33 matrix) -> itkMatrixF33"""
        return _itkMatrixPython.itkMatrixF33___iadd__(self, *args)

    def __sub__(self, *args):
        """__sub__(self, itkMatrixF33 matrix) -> itkMatrixF33"""
        return _itkMatrixPython.itkMatrixF33___sub__(self, *args)

    def __isub__(self, *args):
        """__isub__(self, itkMatrixF33 matrix) -> itkMatrixF33"""
        return _itkMatrixPython.itkMatrixF33___isub__(self, *args)

    def __imul__(self, *args):
        """
        __imul__(self, itkMatrixF33 matrix)
        __imul__(self, vnl_matrixF matrix)
        __imul__(self, float value)
        """
        return _itkMatrixPython.itkMatrixF33___imul__(self, *args)

    def __mul__(self, *args):
        """
        __mul__(self, itkVectorF3 vector) -> itkVectorF3
        __mul__(self, itkPointF3 vector) -> itkPointF3
        __mul__(self, itkCovariantVectorF3 vector) -> itkCovariantVectorF3
        __mul__(self, itkMatrixF33 matrix) -> itkMatrixF33
        __mul__(self, vnl_matrixF matrix) -> vnl_matrixF
        __mul__(self, vnl_vectorF matrix) -> vnl_vectorF
        __mul__(self, float value) -> itkMatrixF33
        """
        return _itkMatrixPython.itkMatrixF33___mul__(self, *args)

    def __idiv__(self, *args):
        """__idiv__(self, float value)"""
        return _itkMatrixPython.itkMatrixF33___idiv__(self, *args)

    def __div__(self, *args):
        """__div__(self, float value) -> itkMatrixF33"""
        return _itkMatrixPython.itkMatrixF33___div__(self, *args)

    def __call__(self, *args):
        """
        __call__(self, unsigned int row, unsigned int col) -> float
        __call__(self, unsigned int row, unsigned int col) -> float
        """
        return _itkMatrixPython.itkMatrixF33___call__(self, *args)

    def GetVnlMatrix(self, *args):
        """
        GetVnlMatrix(self) -> vnl_matrix_fixedF_3_3
        GetVnlMatrix(self) -> vnl_matrix_fixedF_3_3
        """
        return _itkMatrixPython.itkMatrixF33_GetVnlMatrix(self, *args)

    def SetIdentity(self):
        """SetIdentity(self)"""
        return _itkMatrixPython.itkMatrixF33_SetIdentity(self)

    def Fill(self, *args):
        """Fill(self, float value)"""
        return _itkMatrixPython.itkMatrixF33_Fill(self, *args)

    def __eq__(self, *args):
        """__eq__(self, itkMatrixF33 matrix) -> bool"""
        return _itkMatrixPython.itkMatrixF33___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(self, itkMatrixF33 matrix) -> bool"""
        return _itkMatrixPython.itkMatrixF33___ne__(self, *args)

    def GetInverse(self):
        """GetInverse(self) -> vnl_matrix_fixedF_3_3"""
        return _itkMatrixPython.itkMatrixF33_GetInverse(self)

    def GetTranspose(self):
        """GetTranspose(self) -> vnl_matrix_fixedF_3_3"""
        return _itkMatrixPython.itkMatrixF33_GetTranspose(self)

    def __init__(self, *args): 
        """
        __init__(self, vnl_matrixF matrix) -> itkMatrixF33
        __init__(self, vnl_matrix_fixedF_3_3 matrix) -> itkMatrixF33
        __init__(self) -> itkMatrixF33
        __init__(self, itkMatrixF33 matrix) -> itkMatrixF33
        """
        _itkMatrixPython.itkMatrixF33_swiginit(self,_itkMatrixPython.new_itkMatrixF33(*args))
itkMatrixF33.__add__ = new_instancemethod(_itkMatrixPython.itkMatrixF33___add__,None,itkMatrixF33)
itkMatrixF33.__iadd__ = new_instancemethod(_itkMatrixPython.itkMatrixF33___iadd__,None,itkMatrixF33)
itkMatrixF33.__sub__ = new_instancemethod(_itkMatrixPython.itkMatrixF33___sub__,None,itkMatrixF33)
itkMatrixF33.__isub__ = new_instancemethod(_itkMatrixPython.itkMatrixF33___isub__,None,itkMatrixF33)
itkMatrixF33.__imul__ = new_instancemethod(_itkMatrixPython.itkMatrixF33___imul__,None,itkMatrixF33)
itkMatrixF33.__mul__ = new_instancemethod(_itkMatrixPython.itkMatrixF33___mul__,None,itkMatrixF33)
itkMatrixF33.__idiv__ = new_instancemethod(_itkMatrixPython.itkMatrixF33___idiv__,None,itkMatrixF33)
itkMatrixF33.__div__ = new_instancemethod(_itkMatrixPython.itkMatrixF33___div__,None,itkMatrixF33)
itkMatrixF33.__call__ = new_instancemethod(_itkMatrixPython.itkMatrixF33___call__,None,itkMatrixF33)
itkMatrixF33.GetVnlMatrix = new_instancemethod(_itkMatrixPython.itkMatrixF33_GetVnlMatrix,None,itkMatrixF33)
itkMatrixF33.SetIdentity = new_instancemethod(_itkMatrixPython.itkMatrixF33_SetIdentity,None,itkMatrixF33)
itkMatrixF33.Fill = new_instancemethod(_itkMatrixPython.itkMatrixF33_Fill,None,itkMatrixF33)
itkMatrixF33.__eq__ = new_instancemethod(_itkMatrixPython.itkMatrixF33___eq__,None,itkMatrixF33)
itkMatrixF33.__ne__ = new_instancemethod(_itkMatrixPython.itkMatrixF33___ne__,None,itkMatrixF33)
itkMatrixF33.GetInverse = new_instancemethod(_itkMatrixPython.itkMatrixF33_GetInverse,None,itkMatrixF33)
itkMatrixF33.GetTranspose = new_instancemethod(_itkMatrixPython.itkMatrixF33_GetTranspose,None,itkMatrixF33)
itkMatrixF33_swigregister = _itkMatrixPython.itkMatrixF33_swigregister
itkMatrixF33_swigregister(itkMatrixF33)



