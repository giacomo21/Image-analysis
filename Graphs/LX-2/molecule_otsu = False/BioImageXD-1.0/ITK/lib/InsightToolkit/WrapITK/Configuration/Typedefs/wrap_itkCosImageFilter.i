// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkCosImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkCosImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkCosImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkCosImageFilterJava
#endif
#ifdef SWIGLUA
%module itkCosImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkCosImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkCosImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkCosImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkCosImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkCosImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkCosImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkCosImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkCosImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkCosImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkCosImageFilterPython
#endif
#ifdef SWIGR
%module itkCosImageFilterR
#endif
#ifdef SWIGRUBY
%module itkCosImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkCosImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkCosImageFilterTcl
#endif
#ifdef SWIGXML
%module itkCosImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "UnaryPixelMath.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkInPlaceImageFilterA.i
%import wrap_ITKRegions.i


%include itk.i
%include wrap_itkCosImageFilter_ext.i


 class itkCosImageFilterID2ID2_Pointer {
   public:
     itkCosImageFilterID2ID2_Pointer();
     itkCosImageFilterID2ID2_Pointer(itkCosImageFilterID2ID2_Pointer const & p);
     itkCosImageFilterID2ID2_Pointer(itkCosImageFilterID2ID2 * p);
     ~itkCosImageFilterID2ID2_Pointer();
     itkCosImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkCosImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkCosImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkCosImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkCosImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkCosImageFilterID2ID2_Pointer const & r) const;
     itkCosImageFilterID2ID2_Pointer & operator=(itkCosImageFilterID2ID2_Pointer const & r);
     itkCosImageFilterID2ID2_Pointer & operator=(itkCosImageFilterID2ID2 * r);
     itkCosImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkCosImageFilterID2ID2_Superclass : public itkInPlaceImageFilterID2ID2 {
   public:
     static itkCosImageFilterID2ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::Cos< double, double > & GetFunctor();
     itk::Functor::Cos< double, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Cos< double, double > const & functor);
   private:
     itkCosImageFilterID2ID2_Superclass(itkCosImageFilterID2ID2_Superclass const & arg0);
     void operator=(itkCosImageFilterID2ID2_Superclass const & arg0);
   protected:
     itkCosImageFilterID2ID2_Superclass();
     ~itkCosImageFilterID2ID2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkCosImageFilterID2ID2_Superclass_Pointer {
   public:
     itkCosImageFilterID2ID2_Superclass_Pointer();
     itkCosImageFilterID2ID2_Superclass_Pointer(itkCosImageFilterID2ID2_Superclass_Pointer const & p);
     itkCosImageFilterID2ID2_Superclass_Pointer(itkCosImageFilterID2ID2_Superclass * p);
     ~itkCosImageFilterID2ID2_Superclass_Pointer();
     itkCosImageFilterID2ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkCosImageFilterID2ID2_Superclass * GetPointer() const;
     bool operator<(itkCosImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator>(itkCosImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkCosImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkCosImageFilterID2ID2_Superclass_Pointer const & r) const;
     itkCosImageFilterID2ID2_Superclass_Pointer & operator=(itkCosImageFilterID2ID2_Superclass_Pointer const & r);
     itkCosImageFilterID2ID2_Superclass_Pointer & operator=(itkCosImageFilterID2ID2_Superclass * r);
     itkCosImageFilterID2ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkCosImageFilterID3ID3_Pointer {
   public:
     itkCosImageFilterID3ID3_Pointer();
     itkCosImageFilterID3ID3_Pointer(itkCosImageFilterID3ID3_Pointer const & p);
     itkCosImageFilterID3ID3_Pointer(itkCosImageFilterID3ID3 * p);
     ~itkCosImageFilterID3ID3_Pointer();
     itkCosImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkCosImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkCosImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkCosImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkCosImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkCosImageFilterID3ID3_Pointer const & r) const;
     itkCosImageFilterID3ID3_Pointer & operator=(itkCosImageFilterID3ID3_Pointer const & r);
     itkCosImageFilterID3ID3_Pointer & operator=(itkCosImageFilterID3ID3 * r);
     itkCosImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkCosImageFilterID3ID3_Superclass : public itkInPlaceImageFilterID3ID3 {
   public:
     static itkCosImageFilterID3ID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::Cos< double, double > & GetFunctor();
     itk::Functor::Cos< double, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Cos< double, double > const & functor);
   private:
     itkCosImageFilterID3ID3_Superclass(itkCosImageFilterID3ID3_Superclass const & arg0);
     void operator=(itkCosImageFilterID3ID3_Superclass const & arg0);
   protected:
     itkCosImageFilterID3ID3_Superclass();
     ~itkCosImageFilterID3ID3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkCosImageFilterID3ID3_Superclass_Pointer {
   public:
     itkCosImageFilterID3ID3_Superclass_Pointer();
     itkCosImageFilterID3ID3_Superclass_Pointer(itkCosImageFilterID3ID3_Superclass_Pointer const & p);
     itkCosImageFilterID3ID3_Superclass_Pointer(itkCosImageFilterID3ID3_Superclass * p);
     ~itkCosImageFilterID3ID3_Superclass_Pointer();
     itkCosImageFilterID3ID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkCosImageFilterID3ID3_Superclass * GetPointer() const;
     bool operator<(itkCosImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator>(itkCosImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator<=(itkCosImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator>=(itkCosImageFilterID3ID3_Superclass_Pointer const & r) const;
     itkCosImageFilterID3ID3_Superclass_Pointer & operator=(itkCosImageFilterID3ID3_Superclass_Pointer const & r);
     itkCosImageFilterID3ID3_Superclass_Pointer & operator=(itkCosImageFilterID3ID3_Superclass * r);
     itkCosImageFilterID3ID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkCosImageFilterIF2IF2_Pointer {
   public:
     itkCosImageFilterIF2IF2_Pointer();
     itkCosImageFilterIF2IF2_Pointer(itkCosImageFilterIF2IF2_Pointer const & p);
     itkCosImageFilterIF2IF2_Pointer(itkCosImageFilterIF2IF2 * p);
     ~itkCosImageFilterIF2IF2_Pointer();
     itkCosImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkCosImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkCosImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkCosImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkCosImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkCosImageFilterIF2IF2_Pointer const & r) const;
     itkCosImageFilterIF2IF2_Pointer & operator=(itkCosImageFilterIF2IF2_Pointer const & r);
     itkCosImageFilterIF2IF2_Pointer & operator=(itkCosImageFilterIF2IF2 * r);
     itkCosImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkCosImageFilterIF2IF2_Superclass : public itkInPlaceImageFilterIF2IF2 {
   public:
     static itkCosImageFilterIF2IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::Cos< float, float > & GetFunctor();
     itk::Functor::Cos< float, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Cos< float, float > const & functor);
   private:
     itkCosImageFilterIF2IF2_Superclass(itkCosImageFilterIF2IF2_Superclass const & arg0);
     void operator=(itkCosImageFilterIF2IF2_Superclass const & arg0);
   protected:
     itkCosImageFilterIF2IF2_Superclass();
     ~itkCosImageFilterIF2IF2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkCosImageFilterIF2IF2_Superclass_Pointer {
   public:
     itkCosImageFilterIF2IF2_Superclass_Pointer();
     itkCosImageFilterIF2IF2_Superclass_Pointer(itkCosImageFilterIF2IF2_Superclass_Pointer const & p);
     itkCosImageFilterIF2IF2_Superclass_Pointer(itkCosImageFilterIF2IF2_Superclass * p);
     ~itkCosImageFilterIF2IF2_Superclass_Pointer();
     itkCosImageFilterIF2IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkCosImageFilterIF2IF2_Superclass * GetPointer() const;
     bool operator<(itkCosImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator>(itkCosImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkCosImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkCosImageFilterIF2IF2_Superclass_Pointer const & r) const;
     itkCosImageFilterIF2IF2_Superclass_Pointer & operator=(itkCosImageFilterIF2IF2_Superclass_Pointer const & r);
     itkCosImageFilterIF2IF2_Superclass_Pointer & operator=(itkCosImageFilterIF2IF2_Superclass * r);
     itkCosImageFilterIF2IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkCosImageFilterIF3IF3_Pointer {
   public:
     itkCosImageFilterIF3IF3_Pointer();
     itkCosImageFilterIF3IF3_Pointer(itkCosImageFilterIF3IF3_Pointer const & p);
     itkCosImageFilterIF3IF3_Pointer(itkCosImageFilterIF3IF3 * p);
     ~itkCosImageFilterIF3IF3_Pointer();
     itkCosImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkCosImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkCosImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkCosImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkCosImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkCosImageFilterIF3IF3_Pointer const & r) const;
     itkCosImageFilterIF3IF3_Pointer & operator=(itkCosImageFilterIF3IF3_Pointer const & r);
     itkCosImageFilterIF3IF3_Pointer & operator=(itkCosImageFilterIF3IF3 * r);
     itkCosImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkCosImageFilterIF3IF3_Superclass : public itkInPlaceImageFilterIF3IF3 {
   public:
     static itkCosImageFilterIF3IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::Cos< float, float > & GetFunctor();
     itk::Functor::Cos< float, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Cos< float, float > const & functor);
   private:
     itkCosImageFilterIF3IF3_Superclass(itkCosImageFilterIF3IF3_Superclass const & arg0);
     void operator=(itkCosImageFilterIF3IF3_Superclass const & arg0);
   protected:
     itkCosImageFilterIF3IF3_Superclass();
     ~itkCosImageFilterIF3IF3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkCosImageFilterIF3IF3_Superclass_Pointer {
   public:
     itkCosImageFilterIF3IF3_Superclass_Pointer();
     itkCosImageFilterIF3IF3_Superclass_Pointer(itkCosImageFilterIF3IF3_Superclass_Pointer const & p);
     itkCosImageFilterIF3IF3_Superclass_Pointer(itkCosImageFilterIF3IF3_Superclass * p);
     ~itkCosImageFilterIF3IF3_Superclass_Pointer();
     itkCosImageFilterIF3IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkCosImageFilterIF3IF3_Superclass * GetPointer() const;
     bool operator<(itkCosImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator>(itkCosImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkCosImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkCosImageFilterIF3IF3_Superclass_Pointer const & r) const;
     itkCosImageFilterIF3IF3_Superclass_Pointer & operator=(itkCosImageFilterIF3IF3_Superclass_Pointer const & r);
     itkCosImageFilterIF3IF3_Superclass_Pointer & operator=(itkCosImageFilterIF3IF3_Superclass * r);
     itkCosImageFilterIF3IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkCosImageFilterID2ID2 : public itkCosImageFilterID2ID2_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkCosImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkCosImageFilterID2ID2(itkCosImageFilterID2ID2 const & arg0);
     void operator=(itkCosImageFilterID2ID2 const & arg0);
   protected:
     itkCosImageFilterID2ID2();
     ~itkCosImageFilterID2ID2();
 };


 class itkCosImageFilterID3ID3 : public itkCosImageFilterID3ID3_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkCosImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkCosImageFilterID3ID3(itkCosImageFilterID3ID3 const & arg0);
     void operator=(itkCosImageFilterID3ID3 const & arg0);
   protected:
     itkCosImageFilterID3ID3();
     ~itkCosImageFilterID3ID3();
 };


 class itkCosImageFilterIF2IF2 : public itkCosImageFilterIF2IF2_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkCosImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkCosImageFilterIF2IF2(itkCosImageFilterIF2IF2 const & arg0);
     void operator=(itkCosImageFilterIF2IF2 const & arg0);
   protected:
     itkCosImageFilterIF2IF2();
     ~itkCosImageFilterIF2IF2();
 };


 class itkCosImageFilterIF3IF3 : public itkCosImageFilterIF3IF3_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkCosImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkCosImageFilterIF3IF3(itkCosImageFilterIF3IF3 const & arg0);
     void operator=(itkCosImageFilterIF3IF3 const & arg0);
   protected:
     itkCosImageFilterIF3IF3();
     ~itkCosImageFilterIF3IF3();
 };


