// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkMinimumImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkMinimumImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkMinimumImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkMinimumImageFilterJava
#endif
#ifdef SWIGLUA
%module itkMinimumImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkMinimumImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkMinimumImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkMinimumImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkMinimumImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkMinimumImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkMinimumImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkMinimumImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkMinimumImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkMinimumImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkMinimumImageFilterPython
#endif
#ifdef SWIGR
%module itkMinimumImageFilterR
#endif
#ifdef SWIGRUBY
%module itkMinimumImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkMinimumImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkMinimumImageFilterTcl
#endif
#ifdef SWIGXML
%module itkMinimumImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Numerics.includes"
#include "Calculators.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImage.i
%import wrap_itkInPlaceImageFilterA.i
%import wrap_ITKRegions.i


%include itk.i
%include wrap_itkMinimumImageFilter_ext.i


 class itkMinimumImageFilterID2ID2ID2_Pointer {
   public:
     itkMinimumImageFilterID2ID2ID2_Pointer();
     itkMinimumImageFilterID2ID2ID2_Pointer(itkMinimumImageFilterID2ID2ID2_Pointer const & p);
     itkMinimumImageFilterID2ID2ID2_Pointer(itkMinimumImageFilterID2ID2ID2 * p);
     ~itkMinimumImageFilterID2ID2ID2_Pointer();
     itkMinimumImageFilterID2ID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMinimumImageFilterID2ID2ID2 * GetPointer() const;
     bool operator<(itkMinimumImageFilterID2ID2ID2_Pointer const & r) const;
     bool operator>(itkMinimumImageFilterID2ID2ID2_Pointer const & r) const;
     bool operator<=(itkMinimumImageFilterID2ID2ID2_Pointer const & r) const;
     bool operator>=(itkMinimumImageFilterID2ID2ID2_Pointer const & r) const;
     itkMinimumImageFilterID2ID2ID2_Pointer & operator=(itkMinimumImageFilterID2ID2ID2_Pointer const & r);
     itkMinimumImageFilterID2ID2ID2_Pointer & operator=(itkMinimumImageFilterID2ID2ID2 * r);
     itkMinimumImageFilterID2ID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMinimumImageFilterID2ID2ID2_Superclass : public itkInPlaceImageFilterID2ID2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMinimumImageFilterID2ID2ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageD2 const * image1);
     void SetInput2(itkImageD2 const * image2);
     itk::Function::Minimum< double, double, double > & GetFunctor();
     itk::Function::Minimum< double, double, double > const & GetFunctor() const;
     void SetFunctor(itk::Function::Minimum< double, double, double > const & functor);
   private:
     itkMinimumImageFilterID2ID2ID2_Superclass(itkMinimumImageFilterID2ID2ID2_Superclass const & arg0);
     void operator=(itkMinimumImageFilterID2ID2ID2_Superclass const & arg0);
   protected:
     itkMinimumImageFilterID2ID2ID2_Superclass();
     ~itkMinimumImageFilterID2ID2ID2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMinimumImageFilterID2ID2ID2_Superclass_Pointer {
   public:
     itkMinimumImageFilterID2ID2ID2_Superclass_Pointer();
     itkMinimumImageFilterID2ID2ID2_Superclass_Pointer(itkMinimumImageFilterID2ID2ID2_Superclass_Pointer const & p);
     itkMinimumImageFilterID2ID2ID2_Superclass_Pointer(itkMinimumImageFilterID2ID2ID2_Superclass * p);
     ~itkMinimumImageFilterID2ID2ID2_Superclass_Pointer();
     itkMinimumImageFilterID2ID2ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMinimumImageFilterID2ID2ID2_Superclass * GetPointer() const;
     bool operator<(itkMinimumImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     bool operator>(itkMinimumImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkMinimumImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkMinimumImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     itkMinimumImageFilterID2ID2ID2_Superclass_Pointer & operator=(itkMinimumImageFilterID2ID2ID2_Superclass_Pointer const & r);
     itkMinimumImageFilterID2ID2ID2_Superclass_Pointer & operator=(itkMinimumImageFilterID2ID2ID2_Superclass * r);
     itkMinimumImageFilterID2ID2ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMinimumImageFilterID3ID3ID3_Pointer {
   public:
     itkMinimumImageFilterID3ID3ID3_Pointer();
     itkMinimumImageFilterID3ID3ID3_Pointer(itkMinimumImageFilterID3ID3ID3_Pointer const & p);
     itkMinimumImageFilterID3ID3ID3_Pointer(itkMinimumImageFilterID3ID3ID3 * p);
     ~itkMinimumImageFilterID3ID3ID3_Pointer();
     itkMinimumImageFilterID3ID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMinimumImageFilterID3ID3ID3 * GetPointer() const;
     bool operator<(itkMinimumImageFilterID3ID3ID3_Pointer const & r) const;
     bool operator>(itkMinimumImageFilterID3ID3ID3_Pointer const & r) const;
     bool operator<=(itkMinimumImageFilterID3ID3ID3_Pointer const & r) const;
     bool operator>=(itkMinimumImageFilterID3ID3ID3_Pointer const & r) const;
     itkMinimumImageFilterID3ID3ID3_Pointer & operator=(itkMinimumImageFilterID3ID3ID3_Pointer const & r);
     itkMinimumImageFilterID3ID3ID3_Pointer & operator=(itkMinimumImageFilterID3ID3ID3 * r);
     itkMinimumImageFilterID3ID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMinimumImageFilterID3ID3ID3_Superclass : public itkInPlaceImageFilterID3ID3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMinimumImageFilterID3ID3ID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageD3 const * image1);
     void SetInput2(itkImageD3 const * image2);
     itk::Function::Minimum< double, double, double > & GetFunctor();
     itk::Function::Minimum< double, double, double > const & GetFunctor() const;
     void SetFunctor(itk::Function::Minimum< double, double, double > const & functor);
   private:
     itkMinimumImageFilterID3ID3ID3_Superclass(itkMinimumImageFilterID3ID3ID3_Superclass const & arg0);
     void operator=(itkMinimumImageFilterID3ID3ID3_Superclass const & arg0);
   protected:
     itkMinimumImageFilterID3ID3ID3_Superclass();
     ~itkMinimumImageFilterID3ID3ID3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMinimumImageFilterID3ID3ID3_Superclass_Pointer {
   public:
     itkMinimumImageFilterID3ID3ID3_Superclass_Pointer();
     itkMinimumImageFilterID3ID3ID3_Superclass_Pointer(itkMinimumImageFilterID3ID3ID3_Superclass_Pointer const & p);
     itkMinimumImageFilterID3ID3ID3_Superclass_Pointer(itkMinimumImageFilterID3ID3ID3_Superclass * p);
     ~itkMinimumImageFilterID3ID3ID3_Superclass_Pointer();
     itkMinimumImageFilterID3ID3ID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMinimumImageFilterID3ID3ID3_Superclass * GetPointer() const;
     bool operator<(itkMinimumImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     bool operator>(itkMinimumImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     bool operator<=(itkMinimumImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     bool operator>=(itkMinimumImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     itkMinimumImageFilterID3ID3ID3_Superclass_Pointer & operator=(itkMinimumImageFilterID3ID3ID3_Superclass_Pointer const & r);
     itkMinimumImageFilterID3ID3ID3_Superclass_Pointer & operator=(itkMinimumImageFilterID3ID3ID3_Superclass * r);
     itkMinimumImageFilterID3ID3ID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMinimumImageFilterIF2IF2IF2_Pointer {
   public:
     itkMinimumImageFilterIF2IF2IF2_Pointer();
     itkMinimumImageFilterIF2IF2IF2_Pointer(itkMinimumImageFilterIF2IF2IF2_Pointer const & p);
     itkMinimumImageFilterIF2IF2IF2_Pointer(itkMinimumImageFilterIF2IF2IF2 * p);
     ~itkMinimumImageFilterIF2IF2IF2_Pointer();
     itkMinimumImageFilterIF2IF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMinimumImageFilterIF2IF2IF2 * GetPointer() const;
     bool operator<(itkMinimumImageFilterIF2IF2IF2_Pointer const & r) const;
     bool operator>(itkMinimumImageFilterIF2IF2IF2_Pointer const & r) const;
     bool operator<=(itkMinimumImageFilterIF2IF2IF2_Pointer const & r) const;
     bool operator>=(itkMinimumImageFilterIF2IF2IF2_Pointer const & r) const;
     itkMinimumImageFilterIF2IF2IF2_Pointer & operator=(itkMinimumImageFilterIF2IF2IF2_Pointer const & r);
     itkMinimumImageFilterIF2IF2IF2_Pointer & operator=(itkMinimumImageFilterIF2IF2IF2 * r);
     itkMinimumImageFilterIF2IF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMinimumImageFilterIF2IF2IF2_Superclass : public itkInPlaceImageFilterIF2IF2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMinimumImageFilterIF2IF2IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageF2 const * image1);
     void SetInput2(itkImageF2 const * image2);
     itk::Function::Minimum< float, float, float > & GetFunctor();
     itk::Function::Minimum< float, float, float > const & GetFunctor() const;
     void SetFunctor(itk::Function::Minimum< float, float, float > const & functor);
   private:
     itkMinimumImageFilterIF2IF2IF2_Superclass(itkMinimumImageFilterIF2IF2IF2_Superclass const & arg0);
     void operator=(itkMinimumImageFilterIF2IF2IF2_Superclass const & arg0);
   protected:
     itkMinimumImageFilterIF2IF2IF2_Superclass();
     ~itkMinimumImageFilterIF2IF2IF2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMinimumImageFilterIF2IF2IF2_Superclass_Pointer {
   public:
     itkMinimumImageFilterIF2IF2IF2_Superclass_Pointer();
     itkMinimumImageFilterIF2IF2IF2_Superclass_Pointer(itkMinimumImageFilterIF2IF2IF2_Superclass_Pointer const & p);
     itkMinimumImageFilterIF2IF2IF2_Superclass_Pointer(itkMinimumImageFilterIF2IF2IF2_Superclass * p);
     ~itkMinimumImageFilterIF2IF2IF2_Superclass_Pointer();
     itkMinimumImageFilterIF2IF2IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMinimumImageFilterIF2IF2IF2_Superclass * GetPointer() const;
     bool operator<(itkMinimumImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     bool operator>(itkMinimumImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkMinimumImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkMinimumImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     itkMinimumImageFilterIF2IF2IF2_Superclass_Pointer & operator=(itkMinimumImageFilterIF2IF2IF2_Superclass_Pointer const & r);
     itkMinimumImageFilterIF2IF2IF2_Superclass_Pointer & operator=(itkMinimumImageFilterIF2IF2IF2_Superclass * r);
     itkMinimumImageFilterIF2IF2IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMinimumImageFilterIF3IF3IF3_Pointer {
   public:
     itkMinimumImageFilterIF3IF3IF3_Pointer();
     itkMinimumImageFilterIF3IF3IF3_Pointer(itkMinimumImageFilterIF3IF3IF3_Pointer const & p);
     itkMinimumImageFilterIF3IF3IF3_Pointer(itkMinimumImageFilterIF3IF3IF3 * p);
     ~itkMinimumImageFilterIF3IF3IF3_Pointer();
     itkMinimumImageFilterIF3IF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMinimumImageFilterIF3IF3IF3 * GetPointer() const;
     bool operator<(itkMinimumImageFilterIF3IF3IF3_Pointer const & r) const;
     bool operator>(itkMinimumImageFilterIF3IF3IF3_Pointer const & r) const;
     bool operator<=(itkMinimumImageFilterIF3IF3IF3_Pointer const & r) const;
     bool operator>=(itkMinimumImageFilterIF3IF3IF3_Pointer const & r) const;
     itkMinimumImageFilterIF3IF3IF3_Pointer & operator=(itkMinimumImageFilterIF3IF3IF3_Pointer const & r);
     itkMinimumImageFilterIF3IF3IF3_Pointer & operator=(itkMinimumImageFilterIF3IF3IF3 * r);
     itkMinimumImageFilterIF3IF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMinimumImageFilterIF3IF3IF3_Superclass : public itkInPlaceImageFilterIF3IF3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMinimumImageFilterIF3IF3IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageF3 const * image1);
     void SetInput2(itkImageF3 const * image2);
     itk::Function::Minimum< float, float, float > & GetFunctor();
     itk::Function::Minimum< float, float, float > const & GetFunctor() const;
     void SetFunctor(itk::Function::Minimum< float, float, float > const & functor);
   private:
     itkMinimumImageFilterIF3IF3IF3_Superclass(itkMinimumImageFilterIF3IF3IF3_Superclass const & arg0);
     void operator=(itkMinimumImageFilterIF3IF3IF3_Superclass const & arg0);
   protected:
     itkMinimumImageFilterIF3IF3IF3_Superclass();
     ~itkMinimumImageFilterIF3IF3IF3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMinimumImageFilterIF3IF3IF3_Superclass_Pointer {
   public:
     itkMinimumImageFilterIF3IF3IF3_Superclass_Pointer();
     itkMinimumImageFilterIF3IF3IF3_Superclass_Pointer(itkMinimumImageFilterIF3IF3IF3_Superclass_Pointer const & p);
     itkMinimumImageFilterIF3IF3IF3_Superclass_Pointer(itkMinimumImageFilterIF3IF3IF3_Superclass * p);
     ~itkMinimumImageFilterIF3IF3IF3_Superclass_Pointer();
     itkMinimumImageFilterIF3IF3IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMinimumImageFilterIF3IF3IF3_Superclass * GetPointer() const;
     bool operator<(itkMinimumImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     bool operator>(itkMinimumImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkMinimumImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkMinimumImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     itkMinimumImageFilterIF3IF3IF3_Superclass_Pointer & operator=(itkMinimumImageFilterIF3IF3IF3_Superclass_Pointer const & r);
     itkMinimumImageFilterIF3IF3IF3_Superclass_Pointer & operator=(itkMinimumImageFilterIF3IF3IF3_Superclass * r);
     itkMinimumImageFilterIF3IF3IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMinimumImageFilterIUC2IUC2IUC2_Pointer {
   public:
     itkMinimumImageFilterIUC2IUC2IUC2_Pointer();
     itkMinimumImageFilterIUC2IUC2IUC2_Pointer(itkMinimumImageFilterIUC2IUC2IUC2_Pointer const & p);
     itkMinimumImageFilterIUC2IUC2IUC2_Pointer(itkMinimumImageFilterIUC2IUC2IUC2 * p);
     ~itkMinimumImageFilterIUC2IUC2IUC2_Pointer();
     itkMinimumImageFilterIUC2IUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMinimumImageFilterIUC2IUC2IUC2 * GetPointer() const;
     bool operator<(itkMinimumImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator>(itkMinimumImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator<=(itkMinimumImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator>=(itkMinimumImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     itkMinimumImageFilterIUC2IUC2IUC2_Pointer & operator=(itkMinimumImageFilterIUC2IUC2IUC2_Pointer const & r);
     itkMinimumImageFilterIUC2IUC2IUC2_Pointer & operator=(itkMinimumImageFilterIUC2IUC2IUC2 * r);
     itkMinimumImageFilterIUC2IUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMinimumImageFilterIUC2IUC2IUC2_Superclass : public itkInPlaceImageFilterIUC2IUC2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMinimumImageFilterIUC2IUC2IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUC2 const * image1);
     void SetInput2(itkImageUC2 const * image2);
     itk::Function::Minimum< unsigned char, unsigned char, unsigned char > & GetFunctor();
     itk::Function::Minimum< unsigned char, unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Function::Minimum< unsigned char, unsigned char, unsigned char > const & functor);
   private:
     itkMinimumImageFilterIUC2IUC2IUC2_Superclass(itkMinimumImageFilterIUC2IUC2IUC2_Superclass const & arg0);
     void operator=(itkMinimumImageFilterIUC2IUC2IUC2_Superclass const & arg0);
   protected:
     itkMinimumImageFilterIUC2IUC2IUC2_Superclass();
     ~itkMinimumImageFilterIUC2IUC2IUC2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMinimumImageFilterIUC2IUC2IUC2_Superclass_Pointer {
   public:
     itkMinimumImageFilterIUC2IUC2IUC2_Superclass_Pointer();
     itkMinimumImageFilterIUC2IUC2IUC2_Superclass_Pointer(itkMinimumImageFilterIUC2IUC2IUC2_Superclass_Pointer const & p);
     itkMinimumImageFilterIUC2IUC2IUC2_Superclass_Pointer(itkMinimumImageFilterIUC2IUC2IUC2_Superclass * p);
     ~itkMinimumImageFilterIUC2IUC2IUC2_Superclass_Pointer();
     itkMinimumImageFilterIUC2IUC2IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMinimumImageFilterIUC2IUC2IUC2_Superclass * GetPointer() const;
     bool operator<(itkMinimumImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkMinimumImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkMinimumImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkMinimumImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     itkMinimumImageFilterIUC2IUC2IUC2_Superclass_Pointer & operator=(itkMinimumImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r);
     itkMinimumImageFilterIUC2IUC2IUC2_Superclass_Pointer & operator=(itkMinimumImageFilterIUC2IUC2IUC2_Superclass * r);
     itkMinimumImageFilterIUC2IUC2IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMinimumImageFilterIUC3IUC3IUC3_Pointer {
   public:
     itkMinimumImageFilterIUC3IUC3IUC3_Pointer();
     itkMinimumImageFilterIUC3IUC3IUC3_Pointer(itkMinimumImageFilterIUC3IUC3IUC3_Pointer const & p);
     itkMinimumImageFilterIUC3IUC3IUC3_Pointer(itkMinimumImageFilterIUC3IUC3IUC3 * p);
     ~itkMinimumImageFilterIUC3IUC3IUC3_Pointer();
     itkMinimumImageFilterIUC3IUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMinimumImageFilterIUC3IUC3IUC3 * GetPointer() const;
     bool operator<(itkMinimumImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     bool operator>(itkMinimumImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     bool operator<=(itkMinimumImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     bool operator>=(itkMinimumImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     itkMinimumImageFilterIUC3IUC3IUC3_Pointer & operator=(itkMinimumImageFilterIUC3IUC3IUC3_Pointer const & r);
     itkMinimumImageFilterIUC3IUC3IUC3_Pointer & operator=(itkMinimumImageFilterIUC3IUC3IUC3 * r);
     itkMinimumImageFilterIUC3IUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMinimumImageFilterIUC3IUC3IUC3_Superclass : public itkInPlaceImageFilterIUC3IUC3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMinimumImageFilterIUC3IUC3IUC3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUC3 const * image1);
     void SetInput2(itkImageUC3 const * image2);
     itk::Function::Minimum< unsigned char, unsigned char, unsigned char > & GetFunctor();
     itk::Function::Minimum< unsigned char, unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Function::Minimum< unsigned char, unsigned char, unsigned char > const & functor);
   private:
     itkMinimumImageFilterIUC3IUC3IUC3_Superclass(itkMinimumImageFilterIUC3IUC3IUC3_Superclass const & arg0);
     void operator=(itkMinimumImageFilterIUC3IUC3IUC3_Superclass const & arg0);
   protected:
     itkMinimumImageFilterIUC3IUC3IUC3_Superclass();
     ~itkMinimumImageFilterIUC3IUC3IUC3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMinimumImageFilterIUC3IUC3IUC3_Superclass_Pointer {
   public:
     itkMinimumImageFilterIUC3IUC3IUC3_Superclass_Pointer();
     itkMinimumImageFilterIUC3IUC3IUC3_Superclass_Pointer(itkMinimumImageFilterIUC3IUC3IUC3_Superclass_Pointer const & p);
     itkMinimumImageFilterIUC3IUC3IUC3_Superclass_Pointer(itkMinimumImageFilterIUC3IUC3IUC3_Superclass * p);
     ~itkMinimumImageFilterIUC3IUC3IUC3_Superclass_Pointer();
     itkMinimumImageFilterIUC3IUC3IUC3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMinimumImageFilterIUC3IUC3IUC3_Superclass * GetPointer() const;
     bool operator<(itkMinimumImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>(itkMinimumImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     bool operator<=(itkMinimumImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>=(itkMinimumImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     itkMinimumImageFilterIUC3IUC3IUC3_Superclass_Pointer & operator=(itkMinimumImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r);
     itkMinimumImageFilterIUC3IUC3IUC3_Superclass_Pointer & operator=(itkMinimumImageFilterIUC3IUC3IUC3_Superclass * r);
     itkMinimumImageFilterIUC3IUC3IUC3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMinimumImageFilterIUL2IUL2IUL2_Pointer {
   public:
     itkMinimumImageFilterIUL2IUL2IUL2_Pointer();
     itkMinimumImageFilterIUL2IUL2IUL2_Pointer(itkMinimumImageFilterIUL2IUL2IUL2_Pointer const & p);
     itkMinimumImageFilterIUL2IUL2IUL2_Pointer(itkMinimumImageFilterIUL2IUL2IUL2 * p);
     ~itkMinimumImageFilterIUL2IUL2IUL2_Pointer();
     itkMinimumImageFilterIUL2IUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMinimumImageFilterIUL2IUL2IUL2 * GetPointer() const;
     bool operator<(itkMinimumImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator>(itkMinimumImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator<=(itkMinimumImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator>=(itkMinimumImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     itkMinimumImageFilterIUL2IUL2IUL2_Pointer & operator=(itkMinimumImageFilterIUL2IUL2IUL2_Pointer const & r);
     itkMinimumImageFilterIUL2IUL2IUL2_Pointer & operator=(itkMinimumImageFilterIUL2IUL2IUL2 * r);
     itkMinimumImageFilterIUL2IUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMinimumImageFilterIUL2IUL2IUL2_Superclass : public itkInPlaceImageFilterIUL2IUL2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMinimumImageFilterIUL2IUL2IUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUL2 const * image1);
     void SetInput2(itkImageUL2 const * image2);
     itk::Function::Minimum< unsigned long, unsigned long, unsigned long > & GetFunctor();
     itk::Function::Minimum< unsigned long, unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Function::Minimum< unsigned long, unsigned long, unsigned long > const & functor);
   private:
     itkMinimumImageFilterIUL2IUL2IUL2_Superclass(itkMinimumImageFilterIUL2IUL2IUL2_Superclass const & arg0);
     void operator=(itkMinimumImageFilterIUL2IUL2IUL2_Superclass const & arg0);
   protected:
     itkMinimumImageFilterIUL2IUL2IUL2_Superclass();
     ~itkMinimumImageFilterIUL2IUL2IUL2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMinimumImageFilterIUL2IUL2IUL2_Superclass_Pointer {
   public:
     itkMinimumImageFilterIUL2IUL2IUL2_Superclass_Pointer();
     itkMinimumImageFilterIUL2IUL2IUL2_Superclass_Pointer(itkMinimumImageFilterIUL2IUL2IUL2_Superclass_Pointer const & p);
     itkMinimumImageFilterIUL2IUL2IUL2_Superclass_Pointer(itkMinimumImageFilterIUL2IUL2IUL2_Superclass * p);
     ~itkMinimumImageFilterIUL2IUL2IUL2_Superclass_Pointer();
     itkMinimumImageFilterIUL2IUL2IUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMinimumImageFilterIUL2IUL2IUL2_Superclass * GetPointer() const;
     bool operator<(itkMinimumImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>(itkMinimumImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkMinimumImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkMinimumImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     itkMinimumImageFilterIUL2IUL2IUL2_Superclass_Pointer & operator=(itkMinimumImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r);
     itkMinimumImageFilterIUL2IUL2IUL2_Superclass_Pointer & operator=(itkMinimumImageFilterIUL2IUL2IUL2_Superclass * r);
     itkMinimumImageFilterIUL2IUL2IUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMinimumImageFilterIUL3IUL3IUL3_Pointer {
   public:
     itkMinimumImageFilterIUL3IUL3IUL3_Pointer();
     itkMinimumImageFilterIUL3IUL3IUL3_Pointer(itkMinimumImageFilterIUL3IUL3IUL3_Pointer const & p);
     itkMinimumImageFilterIUL3IUL3IUL3_Pointer(itkMinimumImageFilterIUL3IUL3IUL3 * p);
     ~itkMinimumImageFilterIUL3IUL3IUL3_Pointer();
     itkMinimumImageFilterIUL3IUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMinimumImageFilterIUL3IUL3IUL3 * GetPointer() const;
     bool operator<(itkMinimumImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     bool operator>(itkMinimumImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     bool operator<=(itkMinimumImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     bool operator>=(itkMinimumImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     itkMinimumImageFilterIUL3IUL3IUL3_Pointer & operator=(itkMinimumImageFilterIUL3IUL3IUL3_Pointer const & r);
     itkMinimumImageFilterIUL3IUL3IUL3_Pointer & operator=(itkMinimumImageFilterIUL3IUL3IUL3 * r);
     itkMinimumImageFilterIUL3IUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMinimumImageFilterIUL3IUL3IUL3_Superclass : public itkInPlaceImageFilterIUL3IUL3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMinimumImageFilterIUL3IUL3IUL3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUL3 const * image1);
     void SetInput2(itkImageUL3 const * image2);
     itk::Function::Minimum< unsigned long, unsigned long, unsigned long > & GetFunctor();
     itk::Function::Minimum< unsigned long, unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Function::Minimum< unsigned long, unsigned long, unsigned long > const & functor);
   private:
     itkMinimumImageFilterIUL3IUL3IUL3_Superclass(itkMinimumImageFilterIUL3IUL3IUL3_Superclass const & arg0);
     void operator=(itkMinimumImageFilterIUL3IUL3IUL3_Superclass const & arg0);
   protected:
     itkMinimumImageFilterIUL3IUL3IUL3_Superclass();
     ~itkMinimumImageFilterIUL3IUL3IUL3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMinimumImageFilterIUL3IUL3IUL3_Superclass_Pointer {
   public:
     itkMinimumImageFilterIUL3IUL3IUL3_Superclass_Pointer();
     itkMinimumImageFilterIUL3IUL3IUL3_Superclass_Pointer(itkMinimumImageFilterIUL3IUL3IUL3_Superclass_Pointer const & p);
     itkMinimumImageFilterIUL3IUL3IUL3_Superclass_Pointer(itkMinimumImageFilterIUL3IUL3IUL3_Superclass * p);
     ~itkMinimumImageFilterIUL3IUL3IUL3_Superclass_Pointer();
     itkMinimumImageFilterIUL3IUL3IUL3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMinimumImageFilterIUL3IUL3IUL3_Superclass * GetPointer() const;
     bool operator<(itkMinimumImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>(itkMinimumImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     bool operator<=(itkMinimumImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>=(itkMinimumImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     itkMinimumImageFilterIUL3IUL3IUL3_Superclass_Pointer & operator=(itkMinimumImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r);
     itkMinimumImageFilterIUL3IUL3IUL3_Superclass_Pointer & operator=(itkMinimumImageFilterIUL3IUL3IUL3_Superclass * r);
     itkMinimumImageFilterIUL3IUL3IUL3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMinimumImageFilterIUS2IUS2IUS2_Pointer {
   public:
     itkMinimumImageFilterIUS2IUS2IUS2_Pointer();
     itkMinimumImageFilterIUS2IUS2IUS2_Pointer(itkMinimumImageFilterIUS2IUS2IUS2_Pointer const & p);
     itkMinimumImageFilterIUS2IUS2IUS2_Pointer(itkMinimumImageFilterIUS2IUS2IUS2 * p);
     ~itkMinimumImageFilterIUS2IUS2IUS2_Pointer();
     itkMinimumImageFilterIUS2IUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMinimumImageFilterIUS2IUS2IUS2 * GetPointer() const;
     bool operator<(itkMinimumImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator>(itkMinimumImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator<=(itkMinimumImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator>=(itkMinimumImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     itkMinimumImageFilterIUS2IUS2IUS2_Pointer & operator=(itkMinimumImageFilterIUS2IUS2IUS2_Pointer const & r);
     itkMinimumImageFilterIUS2IUS2IUS2_Pointer & operator=(itkMinimumImageFilterIUS2IUS2IUS2 * r);
     itkMinimumImageFilterIUS2IUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMinimumImageFilterIUS2IUS2IUS2_Superclass : public itkInPlaceImageFilterIUS2IUS2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMinimumImageFilterIUS2IUS2IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUS2 const * image1);
     void SetInput2(itkImageUS2 const * image2);
     itk::Function::Minimum< unsigned short, unsigned short, unsigned short > & GetFunctor();
     itk::Function::Minimum< unsigned short, unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Function::Minimum< unsigned short, unsigned short, unsigned short > const & functor);
   private:
     itkMinimumImageFilterIUS2IUS2IUS2_Superclass(itkMinimumImageFilterIUS2IUS2IUS2_Superclass const & arg0);
     void operator=(itkMinimumImageFilterIUS2IUS2IUS2_Superclass const & arg0);
   protected:
     itkMinimumImageFilterIUS2IUS2IUS2_Superclass();
     ~itkMinimumImageFilterIUS2IUS2IUS2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMinimumImageFilterIUS2IUS2IUS2_Superclass_Pointer {
   public:
     itkMinimumImageFilterIUS2IUS2IUS2_Superclass_Pointer();
     itkMinimumImageFilterIUS2IUS2IUS2_Superclass_Pointer(itkMinimumImageFilterIUS2IUS2IUS2_Superclass_Pointer const & p);
     itkMinimumImageFilterIUS2IUS2IUS2_Superclass_Pointer(itkMinimumImageFilterIUS2IUS2IUS2_Superclass * p);
     ~itkMinimumImageFilterIUS2IUS2IUS2_Superclass_Pointer();
     itkMinimumImageFilterIUS2IUS2IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMinimumImageFilterIUS2IUS2IUS2_Superclass * GetPointer() const;
     bool operator<(itkMinimumImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkMinimumImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkMinimumImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkMinimumImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     itkMinimumImageFilterIUS2IUS2IUS2_Superclass_Pointer & operator=(itkMinimumImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r);
     itkMinimumImageFilterIUS2IUS2IUS2_Superclass_Pointer & operator=(itkMinimumImageFilterIUS2IUS2IUS2_Superclass * r);
     itkMinimumImageFilterIUS2IUS2IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMinimumImageFilterIUS3IUS3IUS3_Pointer {
   public:
     itkMinimumImageFilterIUS3IUS3IUS3_Pointer();
     itkMinimumImageFilterIUS3IUS3IUS3_Pointer(itkMinimumImageFilterIUS3IUS3IUS3_Pointer const & p);
     itkMinimumImageFilterIUS3IUS3IUS3_Pointer(itkMinimumImageFilterIUS3IUS3IUS3 * p);
     ~itkMinimumImageFilterIUS3IUS3IUS3_Pointer();
     itkMinimumImageFilterIUS3IUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMinimumImageFilterIUS3IUS3IUS3 * GetPointer() const;
     bool operator<(itkMinimumImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     bool operator>(itkMinimumImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     bool operator<=(itkMinimumImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     bool operator>=(itkMinimumImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     itkMinimumImageFilterIUS3IUS3IUS3_Pointer & operator=(itkMinimumImageFilterIUS3IUS3IUS3_Pointer const & r);
     itkMinimumImageFilterIUS3IUS3IUS3_Pointer & operator=(itkMinimumImageFilterIUS3IUS3IUS3 * r);
     itkMinimumImageFilterIUS3IUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMinimumImageFilterIUS3IUS3IUS3_Superclass : public itkInPlaceImageFilterIUS3IUS3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMinimumImageFilterIUS3IUS3IUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUS3 const * image1);
     void SetInput2(itkImageUS3 const * image2);
     itk::Function::Minimum< unsigned short, unsigned short, unsigned short > & GetFunctor();
     itk::Function::Minimum< unsigned short, unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Function::Minimum< unsigned short, unsigned short, unsigned short > const & functor);
   private:
     itkMinimumImageFilterIUS3IUS3IUS3_Superclass(itkMinimumImageFilterIUS3IUS3IUS3_Superclass const & arg0);
     void operator=(itkMinimumImageFilterIUS3IUS3IUS3_Superclass const & arg0);
   protected:
     itkMinimumImageFilterIUS3IUS3IUS3_Superclass();
     ~itkMinimumImageFilterIUS3IUS3IUS3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMinimumImageFilterIUS3IUS3IUS3_Superclass_Pointer {
   public:
     itkMinimumImageFilterIUS3IUS3IUS3_Superclass_Pointer();
     itkMinimumImageFilterIUS3IUS3IUS3_Superclass_Pointer(itkMinimumImageFilterIUS3IUS3IUS3_Superclass_Pointer const & p);
     itkMinimumImageFilterIUS3IUS3IUS3_Superclass_Pointer(itkMinimumImageFilterIUS3IUS3IUS3_Superclass * p);
     ~itkMinimumImageFilterIUS3IUS3IUS3_Superclass_Pointer();
     itkMinimumImageFilterIUS3IUS3IUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMinimumImageFilterIUS3IUS3IUS3_Superclass * GetPointer() const;
     bool operator<(itkMinimumImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>(itkMinimumImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkMinimumImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkMinimumImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     itkMinimumImageFilterIUS3IUS3IUS3_Superclass_Pointer & operator=(itkMinimumImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r);
     itkMinimumImageFilterIUS3IUS3IUS3_Superclass_Pointer & operator=(itkMinimumImageFilterIUS3IUS3IUS3_Superclass * r);
     itkMinimumImageFilterIUS3IUS3IUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMinimumImageFilterID2ID2ID2 : public itkMinimumImageFilterID2ID2ID2_Superclass {
   public:
     enum  {  Input1ConvertibleToInput2Check = 1 };
     enum  {  Input2ConvertibleToOutputCheck = 1 };
     enum  {  Input1LessThanInput2Check = 1 };
     static itkMinimumImageFilterID2ID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkMinimumImageFilterID2ID2ID2(itkMinimumImageFilterID2ID2ID2 const & arg0);
     void operator=(itkMinimumImageFilterID2ID2ID2 const & arg0);
   protected:
     itkMinimumImageFilterID2ID2ID2();
     ~itkMinimumImageFilterID2ID2ID2();
 };


 class itkMinimumImageFilterID3ID3ID3 : public itkMinimumImageFilterID3ID3ID3_Superclass {
   public:
     enum  {  Input1ConvertibleToInput2Check = 1 };
     enum  {  Input2ConvertibleToOutputCheck = 1 };
     enum  {  Input1LessThanInput2Check = 1 };
     static itkMinimumImageFilterID3ID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkMinimumImageFilterID3ID3ID3(itkMinimumImageFilterID3ID3ID3 const & arg0);
     void operator=(itkMinimumImageFilterID3ID3ID3 const & arg0);
   protected:
     itkMinimumImageFilterID3ID3ID3();
     ~itkMinimumImageFilterID3ID3ID3();
 };


 class itkMinimumImageFilterIF2IF2IF2 : public itkMinimumImageFilterIF2IF2IF2_Superclass {
   public:
     enum  {  Input1ConvertibleToInput2Check = 1 };
     enum  {  Input2ConvertibleToOutputCheck = 1 };
     enum  {  Input1LessThanInput2Check = 1 };
     static itkMinimumImageFilterIF2IF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkMinimumImageFilterIF2IF2IF2(itkMinimumImageFilterIF2IF2IF2 const & arg0);
     void operator=(itkMinimumImageFilterIF2IF2IF2 const & arg0);
   protected:
     itkMinimumImageFilterIF2IF2IF2();
     ~itkMinimumImageFilterIF2IF2IF2();
 };


 class itkMinimumImageFilterIF3IF3IF3 : public itkMinimumImageFilterIF3IF3IF3_Superclass {
   public:
     enum  {  Input1ConvertibleToInput2Check = 1 };
     enum  {  Input2ConvertibleToOutputCheck = 1 };
     enum  {  Input1LessThanInput2Check = 1 };
     static itkMinimumImageFilterIF3IF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkMinimumImageFilterIF3IF3IF3(itkMinimumImageFilterIF3IF3IF3 const & arg0);
     void operator=(itkMinimumImageFilterIF3IF3IF3 const & arg0);
   protected:
     itkMinimumImageFilterIF3IF3IF3();
     ~itkMinimumImageFilterIF3IF3IF3();
 };


 class itkMinimumImageFilterIUC2IUC2IUC2 : public itkMinimumImageFilterIUC2IUC2IUC2_Superclass {
   public:
     enum  {  Input1ConvertibleToInput2Check = 1 };
     enum  {  Input2ConvertibleToOutputCheck = 1 };
     enum  {  Input1LessThanInput2Check = 1 };
     static itkMinimumImageFilterIUC2IUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkMinimumImageFilterIUC2IUC2IUC2(itkMinimumImageFilterIUC2IUC2IUC2 const & arg0);
     void operator=(itkMinimumImageFilterIUC2IUC2IUC2 const & arg0);
   protected:
     itkMinimumImageFilterIUC2IUC2IUC2();
     ~itkMinimumImageFilterIUC2IUC2IUC2();
 };


 class itkMinimumImageFilterIUC3IUC3IUC3 : public itkMinimumImageFilterIUC3IUC3IUC3_Superclass {
   public:
     enum  {  Input1ConvertibleToInput2Check = 1 };
     enum  {  Input2ConvertibleToOutputCheck = 1 };
     enum  {  Input1LessThanInput2Check = 1 };
     static itkMinimumImageFilterIUC3IUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkMinimumImageFilterIUC3IUC3IUC3(itkMinimumImageFilterIUC3IUC3IUC3 const & arg0);
     void operator=(itkMinimumImageFilterIUC3IUC3IUC3 const & arg0);
   protected:
     itkMinimumImageFilterIUC3IUC3IUC3();
     ~itkMinimumImageFilterIUC3IUC3IUC3();
 };


 class itkMinimumImageFilterIUL2IUL2IUL2 : public itkMinimumImageFilterIUL2IUL2IUL2_Superclass {
   public:
     enum  {  Input1ConvertibleToInput2Check = 1 };
     enum  {  Input2ConvertibleToOutputCheck = 1 };
     enum  {  Input1LessThanInput2Check = 1 };
     static itkMinimumImageFilterIUL2IUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkMinimumImageFilterIUL2IUL2IUL2(itkMinimumImageFilterIUL2IUL2IUL2 const & arg0);
     void operator=(itkMinimumImageFilterIUL2IUL2IUL2 const & arg0);
   protected:
     itkMinimumImageFilterIUL2IUL2IUL2();
     ~itkMinimumImageFilterIUL2IUL2IUL2();
 };


 class itkMinimumImageFilterIUL3IUL3IUL3 : public itkMinimumImageFilterIUL3IUL3IUL3_Superclass {
   public:
     enum  {  Input1ConvertibleToInput2Check = 1 };
     enum  {  Input2ConvertibleToOutputCheck = 1 };
     enum  {  Input1LessThanInput2Check = 1 };
     static itkMinimumImageFilterIUL3IUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkMinimumImageFilterIUL3IUL3IUL3(itkMinimumImageFilterIUL3IUL3IUL3 const & arg0);
     void operator=(itkMinimumImageFilterIUL3IUL3IUL3 const & arg0);
   protected:
     itkMinimumImageFilterIUL3IUL3IUL3();
     ~itkMinimumImageFilterIUL3IUL3IUL3();
 };


 class itkMinimumImageFilterIUS2IUS2IUS2 : public itkMinimumImageFilterIUS2IUS2IUS2_Superclass {
   public:
     enum  {  Input1ConvertibleToInput2Check = 1 };
     enum  {  Input2ConvertibleToOutputCheck = 1 };
     enum  {  Input1LessThanInput2Check = 1 };
     static itkMinimumImageFilterIUS2IUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkMinimumImageFilterIUS2IUS2IUS2(itkMinimumImageFilterIUS2IUS2IUS2 const & arg0);
     void operator=(itkMinimumImageFilterIUS2IUS2IUS2 const & arg0);
   protected:
     itkMinimumImageFilterIUS2IUS2IUS2();
     ~itkMinimumImageFilterIUS2IUS2IUS2();
 };


 class itkMinimumImageFilterIUS3IUS3IUS3 : public itkMinimumImageFilterIUS3IUS3IUS3_Superclass {
   public:
     enum  {  Input1ConvertibleToInput2Check = 1 };
     enum  {  Input2ConvertibleToOutputCheck = 1 };
     enum  {  Input1LessThanInput2Check = 1 };
     static itkMinimumImageFilterIUS3IUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkMinimumImageFilterIUS3IUS3IUS3(itkMinimumImageFilterIUS3IUS3IUS3 const & arg0);
     void operator=(itkMinimumImageFilterIUS3IUS3IUS3 const & arg0);
   protected:
     itkMinimumImageFilterIUS3IUS3IUS3();
     ~itkMinimumImageFilterIUS3IUS3IUS3();
 };


