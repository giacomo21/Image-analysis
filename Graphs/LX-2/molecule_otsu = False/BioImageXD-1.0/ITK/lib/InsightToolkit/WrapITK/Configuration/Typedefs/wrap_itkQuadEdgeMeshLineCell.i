// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkQuadEdgeMeshLineCellChicken
#endif
#ifdef SWIGCSHARP
%module itkQuadEdgeMeshLineCellCsharp
#endif
#ifdef SWIGGUILE
%module itkQuadEdgeMeshLineCellGuile
#endif
#ifdef SWIGJAVA
%module itkQuadEdgeMeshLineCellJava
#endif
#ifdef SWIGLUA
%module itkQuadEdgeMeshLineCellLua
#endif
#ifdef SWIGMODULA3
%module itkQuadEdgeMeshLineCellModula3
#endif
#ifdef SWIGMZSCHEME
%module itkQuadEdgeMeshLineCellMzscheme
#endif
#ifdef SWIGOCAML
%module itkQuadEdgeMeshLineCellOcaml
#endif
#ifdef SWIGPERL
%module itkQuadEdgeMeshLineCellPerl
#endif
#ifdef SWIGPERL5
%module itkQuadEdgeMeshLineCellPerl5
#endif
#ifdef SWIGPHP
%module itkQuadEdgeMeshLineCellPhp
#endif
#ifdef SWIGPHP4
%module itkQuadEdgeMeshLineCellPhp4
#endif
#ifdef SWIGPHP5
%module itkQuadEdgeMeshLineCellPhp5
#endif
#ifdef SWIGPIKE
%module itkQuadEdgeMeshLineCellPike
#endif
#ifdef SWIGPYTHON
%module itkQuadEdgeMeshLineCellPython
#endif
#ifdef SWIGR
%module itkQuadEdgeMeshLineCellR
#endif
#ifdef SWIGRUBY
%module itkQuadEdgeMeshLineCellRuby
#endif
#ifdef SWIGSEXP
%module itkQuadEdgeMeshLineCellSexp
#endif
#ifdef SWIGTCL
%module itkQuadEdgeMeshLineCellTcl
#endif
#ifdef SWIGXML
%module itkQuadEdgeMeshLineCellXml
#endif

%{
#include "Base.includes"
#include "Mesh.includes"
%}


%{
%}




%import wrap_itkCellInterface.i
%import wrap_itkGeometricalQuadEdge.i


%include itk.i
%include wrap_itkQuadEdgeMeshLineCell_ext.i


 class itkQuadEdgeMeshLineCellCIDQEMCTIF2 : public itkCellInterfaceDQEMCTI2, public itkGeometricalQuadEdgeULULBBF {
   public:
     enum  {  PointDimension = 2 };
     enum  {  CellDimension = 2 };
     virtual char const * GetNameOfClass() const;
     itkGeometricalQuadEdgeULULBBF * GetQEGeom() const;
     itkQuadEdgeMeshLineCellCIDQEMCTIF2();
     ~itkQuadEdgeMeshLineCellCIDQEMCTIF2();
     void SetIdent(unsigned long cid);
     unsigned long GetIdent();
     virtual void Accept(unsigned long cellId, itkCellInterfaceDQEMCTI2::MultiVisitor * mv);
     virtual itkCellInterfaceDQEMCTI2::CellGeometry GetType() const;
     static int GetTopologyId();
     virtual unsigned int GetDimension() const;
     virtual unsigned int GetNumberOfPoints() const;
     virtual unsigned char GetNumberOfBoundaryFeatures(int dimension) const;
     virtual bool GetBoundaryFeature(int dimension, unsigned char cellId, itkCellInterfaceDQEMCTI2_AutoPointer & cell);
     virtual void MakeCopy(itkCellInterfaceDQEMCTI2_AutoPointer & cell) const;
     virtual void SetPointIds(unsigned long const * first);
     virtual void SetPointIds(unsigned long const * first, unsigned long const * last);
     virtual void SetPointId(int localId, unsigned long pId);
     virtual unsigned long * PointIdsBegin();
     virtual unsigned long * PointIdsEnd();
     virtual unsigned long const * GetPointIds() const;
     virtual unsigned long const * PointIdsBegin() const;
     virtual unsigned long const * PointIdsEnd() const;
     void SynchronizePointsAPI() const;
     virtual void InternalSetPointIds(itk::QuadEdgeMeshConstIteratorGeom< itk::GeometricalQuadEdge< unsigned long, unsigned long, bool, bool, true > > first);
     virtual void InternalSetPointIds(itk::QuadEdgeMeshConstIteratorGeom< itk::GeometricalQuadEdge< unsigned long, unsigned long, bool, bool, true > > first, itk::QuadEdgeMeshConstIteratorGeom< itk::GeometricalQuadEdge< unsigned long, unsigned long, bool, bool, true > > last);
     virtual itk::QuadEdgeMeshIteratorGeom< itk::GeometricalQuadEdge< unsigned long, unsigned long, bool, bool, true > > InternalPointIdsBegin();
     virtual itk::QuadEdgeMeshIteratorGeom< itk::GeometricalQuadEdge< unsigned long, unsigned long, bool, bool, true > > InternalPointIdsEnd();
     virtual itk::QuadEdgeMeshConstIteratorGeom< itk::GeometricalQuadEdge< unsigned long, unsigned long, bool, bool, true > > InternalGetPointIds() const;
     virtual itk::QuadEdgeMeshConstIteratorGeom< itk::GeometricalQuadEdge< unsigned long, unsigned long, bool, bool, true > > InternalPointIdsBegin() const;
     virtual itk::QuadEdgeMeshConstIteratorGeom< itk::GeometricalQuadEdge< unsigned long, unsigned long, bool, bool, true > > InternalPointIdsEnd() const;
   private:
     itkQuadEdgeMeshLineCellCIDQEMCTIF2(itkQuadEdgeMeshLineCellCIDQEMCTIF2 const & arg0);
     void operator=(itkQuadEdgeMeshLineCellCIDQEMCTIF2 const & arg0);
   protected:
 };


 class itkQuadEdgeMeshLineCellCIDQEMCTIF2_AutoPointer {
   public:
     itkQuadEdgeMeshLineCellCIDQEMCTIF2_AutoPointer();
     itkQuadEdgeMeshLineCellCIDQEMCTIF2_AutoPointer(itkQuadEdgeMeshLineCellCIDQEMCTIF2_AutoPointer & p);
     itkQuadEdgeMeshLineCellCIDQEMCTIF2_AutoPointer(itkQuadEdgeMeshLineCellCIDQEMCTIF2 * p, bool takeOwnership);
     ~itkQuadEdgeMeshLineCellCIDQEMCTIF2_AutoPointer();
     itkQuadEdgeMeshLineCellCIDQEMCTIF2 * operator->() const;
     void Reset();
     void TakeOwnership();
     void TakeOwnership(itkQuadEdgeMeshLineCellCIDQEMCTIF2 * objectptr);
     void TakeNoOwnership(itkQuadEdgeMeshLineCellCIDQEMCTIF2 * objectptr);
     bool IsOwner() const;
     itkQuadEdgeMeshLineCellCIDQEMCTIF2 * ReleaseOwnership();
     itkQuadEdgeMeshLineCellCIDQEMCTIF2 * GetPointer() const;
     bool operator==(itkQuadEdgeMeshLineCellCIDQEMCTIF2_AutoPointer const & r) const;
     bool operator!=(itkQuadEdgeMeshLineCellCIDQEMCTIF2_AutoPointer const & r) const;
     bool operator<(itkQuadEdgeMeshLineCellCIDQEMCTIF2_AutoPointer const & r) const;
     bool operator>(itkQuadEdgeMeshLineCellCIDQEMCTIF2_AutoPointer const & r) const;
     bool operator<=(itkQuadEdgeMeshLineCellCIDQEMCTIF2_AutoPointer const & r) const;
     bool operator>=(itkQuadEdgeMeshLineCellCIDQEMCTIF2_AutoPointer const & r) const;
     itkQuadEdgeMeshLineCellCIDQEMCTIF2_AutoPointer & operator=(itkQuadEdgeMeshLineCellCIDQEMCTIF2_AutoPointer & r);
   private:
     void Swap(itkQuadEdgeMeshLineCellCIDQEMCTIF2_AutoPointer & r);
   protected:
 };


 class itkQuadEdgeMeshLineCellCIDQEMCTIF3 : public itkCellInterfaceDQEMCTI3, public itkGeometricalQuadEdgeULULBBF {
   public:
     enum  {  PointDimension = 3 };
     enum  {  CellDimension = 2 };
     virtual char const * GetNameOfClass() const;
     itkGeometricalQuadEdgeULULBBF * GetQEGeom() const;
     itkQuadEdgeMeshLineCellCIDQEMCTIF3();
     ~itkQuadEdgeMeshLineCellCIDQEMCTIF3();
     void SetIdent(unsigned long cid);
     unsigned long GetIdent();
     virtual void Accept(unsigned long cellId, itkCellInterfaceDQEMCTI3::MultiVisitor * mv);
     virtual itkCellInterfaceDQEMCTI3::CellGeometry GetType() const;
     static int GetTopologyId();
     virtual unsigned int GetDimension() const;
     virtual unsigned int GetNumberOfPoints() const;
     virtual unsigned char GetNumberOfBoundaryFeatures(int dimension) const;
     virtual bool GetBoundaryFeature(int dimension, unsigned char cellId, itkCellInterfaceDQEMCTI3_AutoPointer & cell);
     virtual void MakeCopy(itkCellInterfaceDQEMCTI3_AutoPointer & cell) const;
     virtual void SetPointIds(unsigned long const * first);
     virtual void SetPointIds(unsigned long const * first, unsigned long const * last);
     virtual void SetPointId(int localId, unsigned long pId);
     virtual unsigned long * PointIdsBegin();
     virtual unsigned long * PointIdsEnd();
     virtual unsigned long const * GetPointIds() const;
     virtual unsigned long const * PointIdsBegin() const;
     virtual unsigned long const * PointIdsEnd() const;
     void SynchronizePointsAPI() const;
     virtual void InternalSetPointIds(itk::QuadEdgeMeshConstIteratorGeom< itk::GeometricalQuadEdge< unsigned long, unsigned long, bool, bool, true > > first);
     virtual void InternalSetPointIds(itk::QuadEdgeMeshConstIteratorGeom< itk::GeometricalQuadEdge< unsigned long, unsigned long, bool, bool, true > > first, itk::QuadEdgeMeshConstIteratorGeom< itk::GeometricalQuadEdge< unsigned long, unsigned long, bool, bool, true > > last);
     virtual itk::QuadEdgeMeshIteratorGeom< itk::GeometricalQuadEdge< unsigned long, unsigned long, bool, bool, true > > InternalPointIdsBegin();
     virtual itk::QuadEdgeMeshIteratorGeom< itk::GeometricalQuadEdge< unsigned long, unsigned long, bool, bool, true > > InternalPointIdsEnd();
     virtual itk::QuadEdgeMeshConstIteratorGeom< itk::GeometricalQuadEdge< unsigned long, unsigned long, bool, bool, true > > InternalGetPointIds() const;
     virtual itk::QuadEdgeMeshConstIteratorGeom< itk::GeometricalQuadEdge< unsigned long, unsigned long, bool, bool, true > > InternalPointIdsBegin() const;
     virtual itk::QuadEdgeMeshConstIteratorGeom< itk::GeometricalQuadEdge< unsigned long, unsigned long, bool, bool, true > > InternalPointIdsEnd() const;
   private:
     itkQuadEdgeMeshLineCellCIDQEMCTIF3(itkQuadEdgeMeshLineCellCIDQEMCTIF3 const & arg0);
     void operator=(itkQuadEdgeMeshLineCellCIDQEMCTIF3 const & arg0);
   protected:
 };


 class itkQuadEdgeMeshLineCellCIDQEMCTIF3_AutoPointer {
   public:
     itkQuadEdgeMeshLineCellCIDQEMCTIF3_AutoPointer();
     itkQuadEdgeMeshLineCellCIDQEMCTIF3_AutoPointer(itkQuadEdgeMeshLineCellCIDQEMCTIF3_AutoPointer & p);
     itkQuadEdgeMeshLineCellCIDQEMCTIF3_AutoPointer(itkQuadEdgeMeshLineCellCIDQEMCTIF3 * p, bool takeOwnership);
     ~itkQuadEdgeMeshLineCellCIDQEMCTIF3_AutoPointer();
     itkQuadEdgeMeshLineCellCIDQEMCTIF3 * operator->() const;
     void Reset();
     void TakeOwnership();
     void TakeOwnership(itkQuadEdgeMeshLineCellCIDQEMCTIF3 * objectptr);
     void TakeNoOwnership(itkQuadEdgeMeshLineCellCIDQEMCTIF3 * objectptr);
     bool IsOwner() const;
     itkQuadEdgeMeshLineCellCIDQEMCTIF3 * ReleaseOwnership();
     itkQuadEdgeMeshLineCellCIDQEMCTIF3 * GetPointer() const;
     bool operator==(itkQuadEdgeMeshLineCellCIDQEMCTIF3_AutoPointer const & r) const;
     bool operator!=(itkQuadEdgeMeshLineCellCIDQEMCTIF3_AutoPointer const & r) const;
     bool operator<(itkQuadEdgeMeshLineCellCIDQEMCTIF3_AutoPointer const & r) const;
     bool operator>(itkQuadEdgeMeshLineCellCIDQEMCTIF3_AutoPointer const & r) const;
     bool operator<=(itkQuadEdgeMeshLineCellCIDQEMCTIF3_AutoPointer const & r) const;
     bool operator>=(itkQuadEdgeMeshLineCellCIDQEMCTIF3_AutoPointer const & r) const;
     itkQuadEdgeMeshLineCellCIDQEMCTIF3_AutoPointer & operator=(itkQuadEdgeMeshLineCellCIDQEMCTIF3_AutoPointer & r);
   private:
     void Swap(itkQuadEdgeMeshLineCellCIDQEMCTIF3_AutoPointer & r);
   protected:
 };


