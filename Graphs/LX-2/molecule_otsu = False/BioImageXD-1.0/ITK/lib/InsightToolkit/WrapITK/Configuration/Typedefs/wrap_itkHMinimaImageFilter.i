// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkHMinimaImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkHMinimaImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkHMinimaImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkHMinimaImageFilterJava
#endif
#ifdef SWIGLUA
%module itkHMinimaImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkHMinimaImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkHMinimaImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkHMinimaImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkHMinimaImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkHMinimaImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkHMinimaImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkHMinimaImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkHMinimaImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkHMinimaImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkHMinimaImageFilterPython
#endif
#ifdef SWIGR
%module itkHMinimaImageFilterR
#endif
#ifdef SWIGRUBY
%module itkHMinimaImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkHMinimaImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkHMinimaImageFilterTcl
#endif
#ifdef SWIGXML
%module itkHMinimaImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Morphology.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImageToImageFilterA.i


%include itk.i
%include wrap_itkHMinimaImageFilter_ext.i


 class itkHMinimaImageFilterID2ID2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkHMinimaImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetHeight(double const _arg);
     virtual double GetHeight() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkHMinimaImageFilterID2ID2(itkHMinimaImageFilterID2ID2 const & arg0);
     void operator=(itkHMinimaImageFilterID2ID2 const & arg0);
   protected:
     itkHMinimaImageFilterID2ID2();
     ~itkHMinimaImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkHMinimaImageFilterID2ID2_Pointer {
   public:
     itkHMinimaImageFilterID2ID2_Pointer();
     itkHMinimaImageFilterID2ID2_Pointer(itkHMinimaImageFilterID2ID2_Pointer const & p);
     itkHMinimaImageFilterID2ID2_Pointer(itkHMinimaImageFilterID2ID2 * p);
     ~itkHMinimaImageFilterID2ID2_Pointer();
     itkHMinimaImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHMinimaImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkHMinimaImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkHMinimaImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkHMinimaImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkHMinimaImageFilterID2ID2_Pointer const & r) const;
     itkHMinimaImageFilterID2ID2_Pointer & operator=(itkHMinimaImageFilterID2ID2_Pointer const & r);
     itkHMinimaImageFilterID2ID2_Pointer & operator=(itkHMinimaImageFilterID2ID2 * r);
     itkHMinimaImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHMinimaImageFilterID3ID3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkHMinimaImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetHeight(double const _arg);
     virtual double GetHeight() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkHMinimaImageFilterID3ID3(itkHMinimaImageFilterID3ID3 const & arg0);
     void operator=(itkHMinimaImageFilterID3ID3 const & arg0);
   protected:
     itkHMinimaImageFilterID3ID3();
     ~itkHMinimaImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkHMinimaImageFilterID3ID3_Pointer {
   public:
     itkHMinimaImageFilterID3ID3_Pointer();
     itkHMinimaImageFilterID3ID3_Pointer(itkHMinimaImageFilterID3ID3_Pointer const & p);
     itkHMinimaImageFilterID3ID3_Pointer(itkHMinimaImageFilterID3ID3 * p);
     ~itkHMinimaImageFilterID3ID3_Pointer();
     itkHMinimaImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHMinimaImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkHMinimaImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkHMinimaImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkHMinimaImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkHMinimaImageFilterID3ID3_Pointer const & r) const;
     itkHMinimaImageFilterID3ID3_Pointer & operator=(itkHMinimaImageFilterID3ID3_Pointer const & r);
     itkHMinimaImageFilterID3ID3_Pointer & operator=(itkHMinimaImageFilterID3ID3 * r);
     itkHMinimaImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHMinimaImageFilterIF2IF2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkHMinimaImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetHeight(float const _arg);
     virtual float GetHeight() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkHMinimaImageFilterIF2IF2(itkHMinimaImageFilterIF2IF2 const & arg0);
     void operator=(itkHMinimaImageFilterIF2IF2 const & arg0);
   protected:
     itkHMinimaImageFilterIF2IF2();
     ~itkHMinimaImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkHMinimaImageFilterIF2IF2_Pointer {
   public:
     itkHMinimaImageFilterIF2IF2_Pointer();
     itkHMinimaImageFilterIF2IF2_Pointer(itkHMinimaImageFilterIF2IF2_Pointer const & p);
     itkHMinimaImageFilterIF2IF2_Pointer(itkHMinimaImageFilterIF2IF2 * p);
     ~itkHMinimaImageFilterIF2IF2_Pointer();
     itkHMinimaImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHMinimaImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkHMinimaImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkHMinimaImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkHMinimaImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkHMinimaImageFilterIF2IF2_Pointer const & r) const;
     itkHMinimaImageFilterIF2IF2_Pointer & operator=(itkHMinimaImageFilterIF2IF2_Pointer const & r);
     itkHMinimaImageFilterIF2IF2_Pointer & operator=(itkHMinimaImageFilterIF2IF2 * r);
     itkHMinimaImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHMinimaImageFilterIF3IF3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkHMinimaImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetHeight(float const _arg);
     virtual float GetHeight() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkHMinimaImageFilterIF3IF3(itkHMinimaImageFilterIF3IF3 const & arg0);
     void operator=(itkHMinimaImageFilterIF3IF3 const & arg0);
   protected:
     itkHMinimaImageFilterIF3IF3();
     ~itkHMinimaImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkHMinimaImageFilterIF3IF3_Pointer {
   public:
     itkHMinimaImageFilterIF3IF3_Pointer();
     itkHMinimaImageFilterIF3IF3_Pointer(itkHMinimaImageFilterIF3IF3_Pointer const & p);
     itkHMinimaImageFilterIF3IF3_Pointer(itkHMinimaImageFilterIF3IF3 * p);
     ~itkHMinimaImageFilterIF3IF3_Pointer();
     itkHMinimaImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHMinimaImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkHMinimaImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkHMinimaImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkHMinimaImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkHMinimaImageFilterIF3IF3_Pointer const & r) const;
     itkHMinimaImageFilterIF3IF3_Pointer & operator=(itkHMinimaImageFilterIF3IF3_Pointer const & r);
     itkHMinimaImageFilterIF3IF3_Pointer & operator=(itkHMinimaImageFilterIF3IF3 * r);
     itkHMinimaImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHMinimaImageFilterIUC2IUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkHMinimaImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetHeight(unsigned char const _arg);
     virtual unsigned char GetHeight() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkHMinimaImageFilterIUC2IUC2(itkHMinimaImageFilterIUC2IUC2 const & arg0);
     void operator=(itkHMinimaImageFilterIUC2IUC2 const & arg0);
   protected:
     itkHMinimaImageFilterIUC2IUC2();
     ~itkHMinimaImageFilterIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkHMinimaImageFilterIUC2IUC2_Pointer {
   public:
     itkHMinimaImageFilterIUC2IUC2_Pointer();
     itkHMinimaImageFilterIUC2IUC2_Pointer(itkHMinimaImageFilterIUC2IUC2_Pointer const & p);
     itkHMinimaImageFilterIUC2IUC2_Pointer(itkHMinimaImageFilterIUC2IUC2 * p);
     ~itkHMinimaImageFilterIUC2IUC2_Pointer();
     itkHMinimaImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHMinimaImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkHMinimaImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkHMinimaImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkHMinimaImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkHMinimaImageFilterIUC2IUC2_Pointer const & r) const;
     itkHMinimaImageFilterIUC2IUC2_Pointer & operator=(itkHMinimaImageFilterIUC2IUC2_Pointer const & r);
     itkHMinimaImageFilterIUC2IUC2_Pointer & operator=(itkHMinimaImageFilterIUC2IUC2 * r);
     itkHMinimaImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHMinimaImageFilterIUC3IUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkHMinimaImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetHeight(unsigned char const _arg);
     virtual unsigned char GetHeight() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkHMinimaImageFilterIUC3IUC3(itkHMinimaImageFilterIUC3IUC3 const & arg0);
     void operator=(itkHMinimaImageFilterIUC3IUC3 const & arg0);
   protected:
     itkHMinimaImageFilterIUC3IUC3();
     ~itkHMinimaImageFilterIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkHMinimaImageFilterIUC3IUC3_Pointer {
   public:
     itkHMinimaImageFilterIUC3IUC3_Pointer();
     itkHMinimaImageFilterIUC3IUC3_Pointer(itkHMinimaImageFilterIUC3IUC3_Pointer const & p);
     itkHMinimaImageFilterIUC3IUC3_Pointer(itkHMinimaImageFilterIUC3IUC3 * p);
     ~itkHMinimaImageFilterIUC3IUC3_Pointer();
     itkHMinimaImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHMinimaImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkHMinimaImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkHMinimaImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkHMinimaImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkHMinimaImageFilterIUC3IUC3_Pointer const & r) const;
     itkHMinimaImageFilterIUC3IUC3_Pointer & operator=(itkHMinimaImageFilterIUC3IUC3_Pointer const & r);
     itkHMinimaImageFilterIUC3IUC3_Pointer & operator=(itkHMinimaImageFilterIUC3IUC3 * r);
     itkHMinimaImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHMinimaImageFilterIUL2IUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkHMinimaImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetHeight(unsigned long const _arg);
     virtual unsigned long GetHeight() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkHMinimaImageFilterIUL2IUL2(itkHMinimaImageFilterIUL2IUL2 const & arg0);
     void operator=(itkHMinimaImageFilterIUL2IUL2 const & arg0);
   protected:
     itkHMinimaImageFilterIUL2IUL2();
     ~itkHMinimaImageFilterIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkHMinimaImageFilterIUL2IUL2_Pointer {
   public:
     itkHMinimaImageFilterIUL2IUL2_Pointer();
     itkHMinimaImageFilterIUL2IUL2_Pointer(itkHMinimaImageFilterIUL2IUL2_Pointer const & p);
     itkHMinimaImageFilterIUL2IUL2_Pointer(itkHMinimaImageFilterIUL2IUL2 * p);
     ~itkHMinimaImageFilterIUL2IUL2_Pointer();
     itkHMinimaImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHMinimaImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkHMinimaImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkHMinimaImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkHMinimaImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkHMinimaImageFilterIUL2IUL2_Pointer const & r) const;
     itkHMinimaImageFilterIUL2IUL2_Pointer & operator=(itkHMinimaImageFilterIUL2IUL2_Pointer const & r);
     itkHMinimaImageFilterIUL2IUL2_Pointer & operator=(itkHMinimaImageFilterIUL2IUL2 * r);
     itkHMinimaImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHMinimaImageFilterIUL3IUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkHMinimaImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetHeight(unsigned long const _arg);
     virtual unsigned long GetHeight() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkHMinimaImageFilterIUL3IUL3(itkHMinimaImageFilterIUL3IUL3 const & arg0);
     void operator=(itkHMinimaImageFilterIUL3IUL3 const & arg0);
   protected:
     itkHMinimaImageFilterIUL3IUL3();
     ~itkHMinimaImageFilterIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkHMinimaImageFilterIUL3IUL3_Pointer {
   public:
     itkHMinimaImageFilterIUL3IUL3_Pointer();
     itkHMinimaImageFilterIUL3IUL3_Pointer(itkHMinimaImageFilterIUL3IUL3_Pointer const & p);
     itkHMinimaImageFilterIUL3IUL3_Pointer(itkHMinimaImageFilterIUL3IUL3 * p);
     ~itkHMinimaImageFilterIUL3IUL3_Pointer();
     itkHMinimaImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHMinimaImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkHMinimaImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkHMinimaImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkHMinimaImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkHMinimaImageFilterIUL3IUL3_Pointer const & r) const;
     itkHMinimaImageFilterIUL3IUL3_Pointer & operator=(itkHMinimaImageFilterIUL3IUL3_Pointer const & r);
     itkHMinimaImageFilterIUL3IUL3_Pointer & operator=(itkHMinimaImageFilterIUL3IUL3 * r);
     itkHMinimaImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHMinimaImageFilterIUS2IUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkHMinimaImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetHeight(unsigned short const _arg);
     virtual unsigned short GetHeight() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkHMinimaImageFilterIUS2IUS2(itkHMinimaImageFilterIUS2IUS2 const & arg0);
     void operator=(itkHMinimaImageFilterIUS2IUS2 const & arg0);
   protected:
     itkHMinimaImageFilterIUS2IUS2();
     ~itkHMinimaImageFilterIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkHMinimaImageFilterIUS2IUS2_Pointer {
   public:
     itkHMinimaImageFilterIUS2IUS2_Pointer();
     itkHMinimaImageFilterIUS2IUS2_Pointer(itkHMinimaImageFilterIUS2IUS2_Pointer const & p);
     itkHMinimaImageFilterIUS2IUS2_Pointer(itkHMinimaImageFilterIUS2IUS2 * p);
     ~itkHMinimaImageFilterIUS2IUS2_Pointer();
     itkHMinimaImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHMinimaImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkHMinimaImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkHMinimaImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkHMinimaImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkHMinimaImageFilterIUS2IUS2_Pointer const & r) const;
     itkHMinimaImageFilterIUS2IUS2_Pointer & operator=(itkHMinimaImageFilterIUS2IUS2_Pointer const & r);
     itkHMinimaImageFilterIUS2IUS2_Pointer & operator=(itkHMinimaImageFilterIUS2IUS2 * r);
     itkHMinimaImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHMinimaImageFilterIUS3IUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkHMinimaImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetHeight(unsigned short const _arg);
     virtual unsigned short GetHeight() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkHMinimaImageFilterIUS3IUS3(itkHMinimaImageFilterIUS3IUS3 const & arg0);
     void operator=(itkHMinimaImageFilterIUS3IUS3 const & arg0);
   protected:
     itkHMinimaImageFilterIUS3IUS3();
     ~itkHMinimaImageFilterIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkHMinimaImageFilterIUS3IUS3_Pointer {
   public:
     itkHMinimaImageFilterIUS3IUS3_Pointer();
     itkHMinimaImageFilterIUS3IUS3_Pointer(itkHMinimaImageFilterIUS3IUS3_Pointer const & p);
     itkHMinimaImageFilterIUS3IUS3_Pointer(itkHMinimaImageFilterIUS3IUS3 * p);
     ~itkHMinimaImageFilterIUS3IUS3_Pointer();
     itkHMinimaImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHMinimaImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkHMinimaImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkHMinimaImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkHMinimaImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkHMinimaImageFilterIUS3IUS3_Pointer const & r) const;
     itkHMinimaImageFilterIUS3IUS3_Pointer & operator=(itkHMinimaImageFilterIUS3IUS3_Pointer const & r);
     itkHMinimaImageFilterIUS3IUS3_Pointer & operator=(itkHMinimaImageFilterIUS3IUS3 * r);
     itkHMinimaImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


