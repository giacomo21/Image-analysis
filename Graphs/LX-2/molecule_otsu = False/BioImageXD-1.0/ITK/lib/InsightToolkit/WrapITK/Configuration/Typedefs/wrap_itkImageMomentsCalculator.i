// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkImageMomentsCalculatorChicken
#endif
#ifdef SWIGCSHARP
%module itkImageMomentsCalculatorCsharp
#endif
#ifdef SWIGGUILE
%module itkImageMomentsCalculatorGuile
#endif
#ifdef SWIGJAVA
%module itkImageMomentsCalculatorJava
#endif
#ifdef SWIGLUA
%module itkImageMomentsCalculatorLua
#endif
#ifdef SWIGMODULA3
%module itkImageMomentsCalculatorModula3
#endif
#ifdef SWIGMZSCHEME
%module itkImageMomentsCalculatorMzscheme
#endif
#ifdef SWIGOCAML
%module itkImageMomentsCalculatorOcaml
#endif
#ifdef SWIGPERL
%module itkImageMomentsCalculatorPerl
#endif
#ifdef SWIGPERL5
%module itkImageMomentsCalculatorPerl5
#endif
#ifdef SWIGPHP
%module itkImageMomentsCalculatorPhp
#endif
#ifdef SWIGPHP4
%module itkImageMomentsCalculatorPhp4
#endif
#ifdef SWIGPHP5
%module itkImageMomentsCalculatorPhp5
#endif
#ifdef SWIGPIKE
%module itkImageMomentsCalculatorPike
#endif
#ifdef SWIGPYTHON
%module itkImageMomentsCalculatorPython
#endif
#ifdef SWIGR
%module itkImageMomentsCalculatorR
#endif
#ifdef SWIGRUBY
%module itkImageMomentsCalculatorRuby
#endif
#ifdef SWIGSEXP
%module itkImageMomentsCalculatorSexp
#endif
#ifdef SWIGTCL
%module itkImageMomentsCalculatorTcl
#endif
#ifdef SWIGXML
%module itkImageMomentsCalculatorXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "Calculators.includes"
#include "SpatialObject.includes"
%}


%{
%}




%import wrap_itkAffineTransform.i
%import wrap_itkImage.i
%import wrap_itkSpatialObjectBase.i
%import wrap_itkVector.i
%import wrap_itkMatrix.i
%import wrap_ITKCommonBase.i


%include itk.i
%include wrap_itkImageMomentsCalculator_ext.i


 class itkImageMomentsCalculatorID2 : public itkObject {
   public:
     enum  {  ImageDimension = 2 };
     static itkImageMomentsCalculatorID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetImage(itkImageD2 const * image);
     virtual void SetSpatialObjectMask(itkSpatialObject2 const * so);
     void Compute();
     double GetTotalMass() const;
     itkVectorD2 GetFirstMoments() const;
     itkMatrixD22 GetSecondMoments() const;
     itkVectorD2 GetCenterOfGravity() const;
     itkMatrixD22 GetCentralMoments() const;
     itkVectorD2 GetPrincipalMoments() const;
     itkMatrixD22 GetPrincipalAxes() const;
     itkAffineTransformD2_Pointer GetPrincipalAxesToPhysicalAxesTransform() const;
     itkAffineTransformD2_Pointer GetPhysicalAxesToPrincipalAxesTransform() const;
   private:
     itkImageMomentsCalculatorID2(itkImageMomentsCalculatorID2 const & arg0);
     void operator=(itkImageMomentsCalculatorID2 const & arg0);
   protected:
     itkImageMomentsCalculatorID2();
     ~itkImageMomentsCalculatorID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageMomentsCalculatorID2_Pointer {
   public:
     itkImageMomentsCalculatorID2_Pointer();
     itkImageMomentsCalculatorID2_Pointer(itkImageMomentsCalculatorID2_Pointer const & p);
     itkImageMomentsCalculatorID2_Pointer(itkImageMomentsCalculatorID2 * p);
     ~itkImageMomentsCalculatorID2_Pointer();
     itkImageMomentsCalculatorID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageMomentsCalculatorID2 * GetPointer() const;
     bool operator<(itkImageMomentsCalculatorID2_Pointer const & r) const;
     bool operator>(itkImageMomentsCalculatorID2_Pointer const & r) const;
     bool operator<=(itkImageMomentsCalculatorID2_Pointer const & r) const;
     bool operator>=(itkImageMomentsCalculatorID2_Pointer const & r) const;
     itkImageMomentsCalculatorID2_Pointer & operator=(itkImageMomentsCalculatorID2_Pointer const & r);
     itkImageMomentsCalculatorID2_Pointer & operator=(itkImageMomentsCalculatorID2 * r);
     itkImageMomentsCalculatorID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageMomentsCalculatorID3 : public itkObject {
   public:
     enum  {  ImageDimension = 3 };
     static itkImageMomentsCalculatorID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetImage(itkImageD3 const * image);
     virtual void SetSpatialObjectMask(itkSpatialObject3 const * so);
     void Compute();
     double GetTotalMass() const;
     itkVectorD3 GetFirstMoments() const;
     itkMatrixD33 GetSecondMoments() const;
     itkVectorD3 GetCenterOfGravity() const;
     itkMatrixD33 GetCentralMoments() const;
     itkVectorD3 GetPrincipalMoments() const;
     itkMatrixD33 GetPrincipalAxes() const;
     itkAffineTransformD3_Pointer GetPrincipalAxesToPhysicalAxesTransform() const;
     itkAffineTransformD3_Pointer GetPhysicalAxesToPrincipalAxesTransform() const;
   private:
     itkImageMomentsCalculatorID3(itkImageMomentsCalculatorID3 const & arg0);
     void operator=(itkImageMomentsCalculatorID3 const & arg0);
   protected:
     itkImageMomentsCalculatorID3();
     ~itkImageMomentsCalculatorID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageMomentsCalculatorID3_Pointer {
   public:
     itkImageMomentsCalculatorID3_Pointer();
     itkImageMomentsCalculatorID3_Pointer(itkImageMomentsCalculatorID3_Pointer const & p);
     itkImageMomentsCalculatorID3_Pointer(itkImageMomentsCalculatorID3 * p);
     ~itkImageMomentsCalculatorID3_Pointer();
     itkImageMomentsCalculatorID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageMomentsCalculatorID3 * GetPointer() const;
     bool operator<(itkImageMomentsCalculatorID3_Pointer const & r) const;
     bool operator>(itkImageMomentsCalculatorID3_Pointer const & r) const;
     bool operator<=(itkImageMomentsCalculatorID3_Pointer const & r) const;
     bool operator>=(itkImageMomentsCalculatorID3_Pointer const & r) const;
     itkImageMomentsCalculatorID3_Pointer & operator=(itkImageMomentsCalculatorID3_Pointer const & r);
     itkImageMomentsCalculatorID3_Pointer & operator=(itkImageMomentsCalculatorID3 * r);
     itkImageMomentsCalculatorID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageMomentsCalculatorIF2 : public itkObject {
   public:
     enum  {  ImageDimension = 2 };
     static itkImageMomentsCalculatorIF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetImage(itkImageF2 const * image);
     virtual void SetSpatialObjectMask(itkSpatialObject2 const * so);
     void Compute();
     double GetTotalMass() const;
     itkVectorD2 GetFirstMoments() const;
     itkMatrixD22 GetSecondMoments() const;
     itkVectorD2 GetCenterOfGravity() const;
     itkMatrixD22 GetCentralMoments() const;
     itkVectorD2 GetPrincipalMoments() const;
     itkMatrixD22 GetPrincipalAxes() const;
     itkAffineTransformD2_Pointer GetPrincipalAxesToPhysicalAxesTransform() const;
     itkAffineTransformD2_Pointer GetPhysicalAxesToPrincipalAxesTransform() const;
   private:
     itkImageMomentsCalculatorIF2(itkImageMomentsCalculatorIF2 const & arg0);
     void operator=(itkImageMomentsCalculatorIF2 const & arg0);
   protected:
     itkImageMomentsCalculatorIF2();
     ~itkImageMomentsCalculatorIF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageMomentsCalculatorIF2_Pointer {
   public:
     itkImageMomentsCalculatorIF2_Pointer();
     itkImageMomentsCalculatorIF2_Pointer(itkImageMomentsCalculatorIF2_Pointer const & p);
     itkImageMomentsCalculatorIF2_Pointer(itkImageMomentsCalculatorIF2 * p);
     ~itkImageMomentsCalculatorIF2_Pointer();
     itkImageMomentsCalculatorIF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageMomentsCalculatorIF2 * GetPointer() const;
     bool operator<(itkImageMomentsCalculatorIF2_Pointer const & r) const;
     bool operator>(itkImageMomentsCalculatorIF2_Pointer const & r) const;
     bool operator<=(itkImageMomentsCalculatorIF2_Pointer const & r) const;
     bool operator>=(itkImageMomentsCalculatorIF2_Pointer const & r) const;
     itkImageMomentsCalculatorIF2_Pointer & operator=(itkImageMomentsCalculatorIF2_Pointer const & r);
     itkImageMomentsCalculatorIF2_Pointer & operator=(itkImageMomentsCalculatorIF2 * r);
     itkImageMomentsCalculatorIF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageMomentsCalculatorIF3 : public itkObject {
   public:
     enum  {  ImageDimension = 3 };
     static itkImageMomentsCalculatorIF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetImage(itkImageF3 const * image);
     virtual void SetSpatialObjectMask(itkSpatialObject3 const * so);
     void Compute();
     double GetTotalMass() const;
     itkVectorD3 GetFirstMoments() const;
     itkMatrixD33 GetSecondMoments() const;
     itkVectorD3 GetCenterOfGravity() const;
     itkMatrixD33 GetCentralMoments() const;
     itkVectorD3 GetPrincipalMoments() const;
     itkMatrixD33 GetPrincipalAxes() const;
     itkAffineTransformD3_Pointer GetPrincipalAxesToPhysicalAxesTransform() const;
     itkAffineTransformD3_Pointer GetPhysicalAxesToPrincipalAxesTransform() const;
   private:
     itkImageMomentsCalculatorIF3(itkImageMomentsCalculatorIF3 const & arg0);
     void operator=(itkImageMomentsCalculatorIF3 const & arg0);
   protected:
     itkImageMomentsCalculatorIF3();
     ~itkImageMomentsCalculatorIF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageMomentsCalculatorIF3_Pointer {
   public:
     itkImageMomentsCalculatorIF3_Pointer();
     itkImageMomentsCalculatorIF3_Pointer(itkImageMomentsCalculatorIF3_Pointer const & p);
     itkImageMomentsCalculatorIF3_Pointer(itkImageMomentsCalculatorIF3 * p);
     ~itkImageMomentsCalculatorIF3_Pointer();
     itkImageMomentsCalculatorIF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageMomentsCalculatorIF3 * GetPointer() const;
     bool operator<(itkImageMomentsCalculatorIF3_Pointer const & r) const;
     bool operator>(itkImageMomentsCalculatorIF3_Pointer const & r) const;
     bool operator<=(itkImageMomentsCalculatorIF3_Pointer const & r) const;
     bool operator>=(itkImageMomentsCalculatorIF3_Pointer const & r) const;
     itkImageMomentsCalculatorIF3_Pointer & operator=(itkImageMomentsCalculatorIF3_Pointer const & r);
     itkImageMomentsCalculatorIF3_Pointer & operator=(itkImageMomentsCalculatorIF3 * r);
     itkImageMomentsCalculatorIF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageMomentsCalculatorIUC2 : public itkObject {
   public:
     enum  {  ImageDimension = 2 };
     static itkImageMomentsCalculatorIUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetImage(itkImageUC2 const * image);
     virtual void SetSpatialObjectMask(itkSpatialObject2 const * so);
     void Compute();
     double GetTotalMass() const;
     itkVectorD2 GetFirstMoments() const;
     itkMatrixD22 GetSecondMoments() const;
     itkVectorD2 GetCenterOfGravity() const;
     itkMatrixD22 GetCentralMoments() const;
     itkVectorD2 GetPrincipalMoments() const;
     itkMatrixD22 GetPrincipalAxes() const;
     itkAffineTransformD2_Pointer GetPrincipalAxesToPhysicalAxesTransform() const;
     itkAffineTransformD2_Pointer GetPhysicalAxesToPrincipalAxesTransform() const;
   private:
     itkImageMomentsCalculatorIUC2(itkImageMomentsCalculatorIUC2 const & arg0);
     void operator=(itkImageMomentsCalculatorIUC2 const & arg0);
   protected:
     itkImageMomentsCalculatorIUC2();
     ~itkImageMomentsCalculatorIUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageMomentsCalculatorIUC2_Pointer {
   public:
     itkImageMomentsCalculatorIUC2_Pointer();
     itkImageMomentsCalculatorIUC2_Pointer(itkImageMomentsCalculatorIUC2_Pointer const & p);
     itkImageMomentsCalculatorIUC2_Pointer(itkImageMomentsCalculatorIUC2 * p);
     ~itkImageMomentsCalculatorIUC2_Pointer();
     itkImageMomentsCalculatorIUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageMomentsCalculatorIUC2 * GetPointer() const;
     bool operator<(itkImageMomentsCalculatorIUC2_Pointer const & r) const;
     bool operator>(itkImageMomentsCalculatorIUC2_Pointer const & r) const;
     bool operator<=(itkImageMomentsCalculatorIUC2_Pointer const & r) const;
     bool operator>=(itkImageMomentsCalculatorIUC2_Pointer const & r) const;
     itkImageMomentsCalculatorIUC2_Pointer & operator=(itkImageMomentsCalculatorIUC2_Pointer const & r);
     itkImageMomentsCalculatorIUC2_Pointer & operator=(itkImageMomentsCalculatorIUC2 * r);
     itkImageMomentsCalculatorIUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageMomentsCalculatorIUC3 : public itkObject {
   public:
     enum  {  ImageDimension = 3 };
     static itkImageMomentsCalculatorIUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetImage(itkImageUC3 const * image);
     virtual void SetSpatialObjectMask(itkSpatialObject3 const * so);
     void Compute();
     double GetTotalMass() const;
     itkVectorD3 GetFirstMoments() const;
     itkMatrixD33 GetSecondMoments() const;
     itkVectorD3 GetCenterOfGravity() const;
     itkMatrixD33 GetCentralMoments() const;
     itkVectorD3 GetPrincipalMoments() const;
     itkMatrixD33 GetPrincipalAxes() const;
     itkAffineTransformD3_Pointer GetPrincipalAxesToPhysicalAxesTransform() const;
     itkAffineTransformD3_Pointer GetPhysicalAxesToPrincipalAxesTransform() const;
   private:
     itkImageMomentsCalculatorIUC3(itkImageMomentsCalculatorIUC3 const & arg0);
     void operator=(itkImageMomentsCalculatorIUC3 const & arg0);
   protected:
     itkImageMomentsCalculatorIUC3();
     ~itkImageMomentsCalculatorIUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageMomentsCalculatorIUC3_Pointer {
   public:
     itkImageMomentsCalculatorIUC3_Pointer();
     itkImageMomentsCalculatorIUC3_Pointer(itkImageMomentsCalculatorIUC3_Pointer const & p);
     itkImageMomentsCalculatorIUC3_Pointer(itkImageMomentsCalculatorIUC3 * p);
     ~itkImageMomentsCalculatorIUC3_Pointer();
     itkImageMomentsCalculatorIUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageMomentsCalculatorIUC3 * GetPointer() const;
     bool operator<(itkImageMomentsCalculatorIUC3_Pointer const & r) const;
     bool operator>(itkImageMomentsCalculatorIUC3_Pointer const & r) const;
     bool operator<=(itkImageMomentsCalculatorIUC3_Pointer const & r) const;
     bool operator>=(itkImageMomentsCalculatorIUC3_Pointer const & r) const;
     itkImageMomentsCalculatorIUC3_Pointer & operator=(itkImageMomentsCalculatorIUC3_Pointer const & r);
     itkImageMomentsCalculatorIUC3_Pointer & operator=(itkImageMomentsCalculatorIUC3 * r);
     itkImageMomentsCalculatorIUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageMomentsCalculatorIUL2 : public itkObject {
   public:
     enum  {  ImageDimension = 2 };
     static itkImageMomentsCalculatorIUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetImage(itkImageUL2 const * image);
     virtual void SetSpatialObjectMask(itkSpatialObject2 const * so);
     void Compute();
     double GetTotalMass() const;
     itkVectorD2 GetFirstMoments() const;
     itkMatrixD22 GetSecondMoments() const;
     itkVectorD2 GetCenterOfGravity() const;
     itkMatrixD22 GetCentralMoments() const;
     itkVectorD2 GetPrincipalMoments() const;
     itkMatrixD22 GetPrincipalAxes() const;
     itkAffineTransformD2_Pointer GetPrincipalAxesToPhysicalAxesTransform() const;
     itkAffineTransformD2_Pointer GetPhysicalAxesToPrincipalAxesTransform() const;
   private:
     itkImageMomentsCalculatorIUL2(itkImageMomentsCalculatorIUL2 const & arg0);
     void operator=(itkImageMomentsCalculatorIUL2 const & arg0);
   protected:
     itkImageMomentsCalculatorIUL2();
     ~itkImageMomentsCalculatorIUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageMomentsCalculatorIUL2_Pointer {
   public:
     itkImageMomentsCalculatorIUL2_Pointer();
     itkImageMomentsCalculatorIUL2_Pointer(itkImageMomentsCalculatorIUL2_Pointer const & p);
     itkImageMomentsCalculatorIUL2_Pointer(itkImageMomentsCalculatorIUL2 * p);
     ~itkImageMomentsCalculatorIUL2_Pointer();
     itkImageMomentsCalculatorIUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageMomentsCalculatorIUL2 * GetPointer() const;
     bool operator<(itkImageMomentsCalculatorIUL2_Pointer const & r) const;
     bool operator>(itkImageMomentsCalculatorIUL2_Pointer const & r) const;
     bool operator<=(itkImageMomentsCalculatorIUL2_Pointer const & r) const;
     bool operator>=(itkImageMomentsCalculatorIUL2_Pointer const & r) const;
     itkImageMomentsCalculatorIUL2_Pointer & operator=(itkImageMomentsCalculatorIUL2_Pointer const & r);
     itkImageMomentsCalculatorIUL2_Pointer & operator=(itkImageMomentsCalculatorIUL2 * r);
     itkImageMomentsCalculatorIUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageMomentsCalculatorIUL3 : public itkObject {
   public:
     enum  {  ImageDimension = 3 };
     static itkImageMomentsCalculatorIUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetImage(itkImageUL3 const * image);
     virtual void SetSpatialObjectMask(itkSpatialObject3 const * so);
     void Compute();
     double GetTotalMass() const;
     itkVectorD3 GetFirstMoments() const;
     itkMatrixD33 GetSecondMoments() const;
     itkVectorD3 GetCenterOfGravity() const;
     itkMatrixD33 GetCentralMoments() const;
     itkVectorD3 GetPrincipalMoments() const;
     itkMatrixD33 GetPrincipalAxes() const;
     itkAffineTransformD3_Pointer GetPrincipalAxesToPhysicalAxesTransform() const;
     itkAffineTransformD3_Pointer GetPhysicalAxesToPrincipalAxesTransform() const;
   private:
     itkImageMomentsCalculatorIUL3(itkImageMomentsCalculatorIUL3 const & arg0);
     void operator=(itkImageMomentsCalculatorIUL3 const & arg0);
   protected:
     itkImageMomentsCalculatorIUL3();
     ~itkImageMomentsCalculatorIUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageMomentsCalculatorIUL3_Pointer {
   public:
     itkImageMomentsCalculatorIUL3_Pointer();
     itkImageMomentsCalculatorIUL3_Pointer(itkImageMomentsCalculatorIUL3_Pointer const & p);
     itkImageMomentsCalculatorIUL3_Pointer(itkImageMomentsCalculatorIUL3 * p);
     ~itkImageMomentsCalculatorIUL3_Pointer();
     itkImageMomentsCalculatorIUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageMomentsCalculatorIUL3 * GetPointer() const;
     bool operator<(itkImageMomentsCalculatorIUL3_Pointer const & r) const;
     bool operator>(itkImageMomentsCalculatorIUL3_Pointer const & r) const;
     bool operator<=(itkImageMomentsCalculatorIUL3_Pointer const & r) const;
     bool operator>=(itkImageMomentsCalculatorIUL3_Pointer const & r) const;
     itkImageMomentsCalculatorIUL3_Pointer & operator=(itkImageMomentsCalculatorIUL3_Pointer const & r);
     itkImageMomentsCalculatorIUL3_Pointer & operator=(itkImageMomentsCalculatorIUL3 * r);
     itkImageMomentsCalculatorIUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageMomentsCalculatorIUS2 : public itkObject {
   public:
     enum  {  ImageDimension = 2 };
     static itkImageMomentsCalculatorIUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetImage(itkImageUS2 const * image);
     virtual void SetSpatialObjectMask(itkSpatialObject2 const * so);
     void Compute();
     double GetTotalMass() const;
     itkVectorD2 GetFirstMoments() const;
     itkMatrixD22 GetSecondMoments() const;
     itkVectorD2 GetCenterOfGravity() const;
     itkMatrixD22 GetCentralMoments() const;
     itkVectorD2 GetPrincipalMoments() const;
     itkMatrixD22 GetPrincipalAxes() const;
     itkAffineTransformD2_Pointer GetPrincipalAxesToPhysicalAxesTransform() const;
     itkAffineTransformD2_Pointer GetPhysicalAxesToPrincipalAxesTransform() const;
   private:
     itkImageMomentsCalculatorIUS2(itkImageMomentsCalculatorIUS2 const & arg0);
     void operator=(itkImageMomentsCalculatorIUS2 const & arg0);
   protected:
     itkImageMomentsCalculatorIUS2();
     ~itkImageMomentsCalculatorIUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageMomentsCalculatorIUS2_Pointer {
   public:
     itkImageMomentsCalculatorIUS2_Pointer();
     itkImageMomentsCalculatorIUS2_Pointer(itkImageMomentsCalculatorIUS2_Pointer const & p);
     itkImageMomentsCalculatorIUS2_Pointer(itkImageMomentsCalculatorIUS2 * p);
     ~itkImageMomentsCalculatorIUS2_Pointer();
     itkImageMomentsCalculatorIUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageMomentsCalculatorIUS2 * GetPointer() const;
     bool operator<(itkImageMomentsCalculatorIUS2_Pointer const & r) const;
     bool operator>(itkImageMomentsCalculatorIUS2_Pointer const & r) const;
     bool operator<=(itkImageMomentsCalculatorIUS2_Pointer const & r) const;
     bool operator>=(itkImageMomentsCalculatorIUS2_Pointer const & r) const;
     itkImageMomentsCalculatorIUS2_Pointer & operator=(itkImageMomentsCalculatorIUS2_Pointer const & r);
     itkImageMomentsCalculatorIUS2_Pointer & operator=(itkImageMomentsCalculatorIUS2 * r);
     itkImageMomentsCalculatorIUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageMomentsCalculatorIUS3 : public itkObject {
   public:
     enum  {  ImageDimension = 3 };
     static itkImageMomentsCalculatorIUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetImage(itkImageUS3 const * image);
     virtual void SetSpatialObjectMask(itkSpatialObject3 const * so);
     void Compute();
     double GetTotalMass() const;
     itkVectorD3 GetFirstMoments() const;
     itkMatrixD33 GetSecondMoments() const;
     itkVectorD3 GetCenterOfGravity() const;
     itkMatrixD33 GetCentralMoments() const;
     itkVectorD3 GetPrincipalMoments() const;
     itkMatrixD33 GetPrincipalAxes() const;
     itkAffineTransformD3_Pointer GetPrincipalAxesToPhysicalAxesTransform() const;
     itkAffineTransformD3_Pointer GetPhysicalAxesToPrincipalAxesTransform() const;
   private:
     itkImageMomentsCalculatorIUS3(itkImageMomentsCalculatorIUS3 const & arg0);
     void operator=(itkImageMomentsCalculatorIUS3 const & arg0);
   protected:
     itkImageMomentsCalculatorIUS3();
     ~itkImageMomentsCalculatorIUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageMomentsCalculatorIUS3_Pointer {
   public:
     itkImageMomentsCalculatorIUS3_Pointer();
     itkImageMomentsCalculatorIUS3_Pointer(itkImageMomentsCalculatorIUS3_Pointer const & p);
     itkImageMomentsCalculatorIUS3_Pointer(itkImageMomentsCalculatorIUS3 * p);
     ~itkImageMomentsCalculatorIUS3_Pointer();
     itkImageMomentsCalculatorIUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageMomentsCalculatorIUS3 * GetPointer() const;
     bool operator<(itkImageMomentsCalculatorIUS3_Pointer const & r) const;
     bool operator>(itkImageMomentsCalculatorIUS3_Pointer const & r) const;
     bool operator<=(itkImageMomentsCalculatorIUS3_Pointer const & r) const;
     bool operator>=(itkImageMomentsCalculatorIUS3_Pointer const & r) const;
     itkImageMomentsCalculatorIUS3_Pointer & operator=(itkImageMomentsCalculatorIUS3_Pointer const & r);
     itkImageMomentsCalculatorIUS3_Pointer & operator=(itkImageMomentsCalculatorIUS3 * r);
     itkImageMomentsCalculatorIUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


