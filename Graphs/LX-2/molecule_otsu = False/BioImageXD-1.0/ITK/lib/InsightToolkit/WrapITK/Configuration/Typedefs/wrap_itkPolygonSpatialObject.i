// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkPolygonSpatialObjectChicken
#endif
#ifdef SWIGCSHARP
%module itkPolygonSpatialObjectCsharp
#endif
#ifdef SWIGGUILE
%module itkPolygonSpatialObjectGuile
#endif
#ifdef SWIGJAVA
%module itkPolygonSpatialObjectJava
#endif
#ifdef SWIGLUA
%module itkPolygonSpatialObjectLua
#endif
#ifdef SWIGMODULA3
%module itkPolygonSpatialObjectModula3
#endif
#ifdef SWIGMZSCHEME
%module itkPolygonSpatialObjectMzscheme
#endif
#ifdef SWIGOCAML
%module itkPolygonSpatialObjectOcaml
#endif
#ifdef SWIGPERL
%module itkPolygonSpatialObjectPerl
#endif
#ifdef SWIGPERL5
%module itkPolygonSpatialObjectPerl5
#endif
#ifdef SWIGPHP
%module itkPolygonSpatialObjectPhp
#endif
#ifdef SWIGPHP4
%module itkPolygonSpatialObjectPhp4
#endif
#ifdef SWIGPHP5
%module itkPolygonSpatialObjectPhp5
#endif
#ifdef SWIGPIKE
%module itkPolygonSpatialObjectPike
#endif
#ifdef SWIGPYTHON
%module itkPolygonSpatialObjectPython
#endif
#ifdef SWIGR
%module itkPolygonSpatialObjectR
#endif
#ifdef SWIGRUBY
%module itkPolygonSpatialObjectRuby
#endif
#ifdef SWIGSEXP
%module itkPolygonSpatialObjectSexp
#endif
#ifdef SWIGTCL
%module itkPolygonSpatialObjectTcl
#endif
#ifdef SWIGXML
%module itkPolygonSpatialObjectXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "Calculators.includes"
#include "SpatialObject.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkPoint.i
%import wrap_itkPolygonGroupOrientation.i
%import wrap_itkBlobSpatialObject.i


%include itk.i
%include wrap_itkPolygonSpatialObject_ext.i


 class itkPolygonSpatialObject2 : public itkBlobSpatialObject2 {
   public:
     static itkPolygonSpatialObject2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itkPolygonGroupOrientation Plane() const;
     virtual void SetThickness(double const _arg);
     virtual double GetThickness();
     bool IsClosed() const;
     unsigned int NumberOfPoints() const;
     itkPointD2 ClosestPoint(itkPointD2 const & curPoint) const;
     double MeasureArea() const;
     double MeasureVolume() const;
     double MeasurePerimeter() const;
     bool DeletePoint(itkPointD2 const & pointToDelete);
     bool AddPoint(itkPointD2 const & pointToAdd);
     bool InsertPoint(itkPointD2 const & point1, itkPointD2 const & pointToAdd);
     bool ReplacePoint(itkPointD2 const & oldpoint, itkPointD2 const & newPoint);
     bool RemoveSegment(itkPointD2 const & startpoint, itkPointD2 const & endPoint);
     virtual bool IsInside(itkPointD2 const & point, unsigned int depth, char * name) const;
     virtual bool IsInside(itkPointD2 const & point) const;
     ~itkPolygonSpatialObject2();
   private:
     itkPolygonSpatialObject2(itkPolygonSpatialObject2 const & arg0);
     void operator=(itkPolygonSpatialObject2 const & arg0);
     itkPolygonSpatialObject2();
   protected:
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkPolygonSpatialObject2_Pointer {
   public:
     itkPolygonSpatialObject2_Pointer();
     itkPolygonSpatialObject2_Pointer(itkPolygonSpatialObject2_Pointer const & p);
     itkPolygonSpatialObject2_Pointer(itkPolygonSpatialObject2 * p);
     ~itkPolygonSpatialObject2_Pointer();
     itkPolygonSpatialObject2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkPolygonSpatialObject2 * GetPointer() const;
     bool operator<(itkPolygonSpatialObject2_Pointer const & r) const;
     bool operator>(itkPolygonSpatialObject2_Pointer const & r) const;
     bool operator<=(itkPolygonSpatialObject2_Pointer const & r) const;
     bool operator>=(itkPolygonSpatialObject2_Pointer const & r) const;
     itkPolygonSpatialObject2_Pointer & operator=(itkPolygonSpatialObject2_Pointer const & r);
     itkPolygonSpatialObject2_Pointer & operator=(itkPolygonSpatialObject2 * r);
     itkPolygonSpatialObject2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkPolygonSpatialObject3 : public itkBlobSpatialObject3 {
   public:
     static itkPolygonSpatialObject3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itkPolygonGroupOrientation Plane() const;
     virtual void SetThickness(double const _arg);
     virtual double GetThickness();
     bool IsClosed() const;
     unsigned int NumberOfPoints() const;
     itkPointD3 ClosestPoint(itkPointD3 const & curPoint) const;
     double MeasureArea() const;
     double MeasureVolume() const;
     double MeasurePerimeter() const;
     bool DeletePoint(itkPointD3 const & pointToDelete);
     bool AddPoint(itkPointD3 const & pointToAdd);
     bool InsertPoint(itkPointD3 const & point1, itkPointD3 const & pointToAdd);
     bool ReplacePoint(itkPointD3 const & oldpoint, itkPointD3 const & newPoint);
     bool RemoveSegment(itkPointD3 const & startpoint, itkPointD3 const & endPoint);
     virtual bool IsInside(itkPointD3 const & point, unsigned int depth, char * name) const;
     virtual bool IsInside(itkPointD3 const & point) const;
     ~itkPolygonSpatialObject3();
   private:
     itkPolygonSpatialObject3(itkPolygonSpatialObject3 const & arg0);
     void operator=(itkPolygonSpatialObject3 const & arg0);
     itkPolygonSpatialObject3();
   protected:
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkPolygonSpatialObject3_Pointer {
   public:
     itkPolygonSpatialObject3_Pointer();
     itkPolygonSpatialObject3_Pointer(itkPolygonSpatialObject3_Pointer const & p);
     itkPolygonSpatialObject3_Pointer(itkPolygonSpatialObject3 * p);
     ~itkPolygonSpatialObject3_Pointer();
     itkPolygonSpatialObject3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkPolygonSpatialObject3 * GetPointer() const;
     bool operator<(itkPolygonSpatialObject3_Pointer const & r) const;
     bool operator>(itkPolygonSpatialObject3_Pointer const & r) const;
     bool operator<=(itkPolygonSpatialObject3_Pointer const & r) const;
     bool operator>=(itkPolygonSpatialObject3_Pointer const & r) const;
     itkPolygonSpatialObject3_Pointer & operator=(itkPolygonSpatialObject3_Pointer const & r);
     itkPolygonSpatialObject3_Pointer & operator=(itkPolygonSpatialObject3 * r);
     itkPolygonSpatialObject3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


