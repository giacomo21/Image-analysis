// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkMergeLabelMapFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkMergeLabelMapFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkMergeLabelMapFilterGuile
#endif
#ifdef SWIGJAVA
%module itkMergeLabelMapFilterJava
#endif
#ifdef SWIGLUA
%module itkMergeLabelMapFilterLua
#endif
#ifdef SWIGMODULA3
%module itkMergeLabelMapFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkMergeLabelMapFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkMergeLabelMapFilterOcaml
#endif
#ifdef SWIGPERL
%module itkMergeLabelMapFilterPerl
#endif
#ifdef SWIGPERL5
%module itkMergeLabelMapFilterPerl5
#endif
#ifdef SWIGPHP
%module itkMergeLabelMapFilterPhp
#endif
#ifdef SWIGPHP4
%module itkMergeLabelMapFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkMergeLabelMapFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkMergeLabelMapFilterPike
#endif
#ifdef SWIGPYTHON
%module itkMergeLabelMapFilterPython
#endif
#ifdef SWIGR
%module itkMergeLabelMapFilterR
#endif
#ifdef SWIGRUBY
%module itkMergeLabelMapFilterRuby
#endif
#ifdef SWIGSEXP
%module itkMergeLabelMapFilterSexp
#endif
#ifdef SWIGTCL
%module itkMergeLabelMapFilterTcl
#endif
#ifdef SWIGXML
%module itkMergeLabelMapFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "Numerics.includes"
#include "BinaryMorphology.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkInPlaceLabelMapFilter.i


%include itk.i
%include wrap_itkMergeLabelMapFilter_ext.i


 class itkMergeLabelMapFilterLM2 : public itkInPlaceLabelMapFilterLM2 {
   public:
     enum  {  ImageDimension = 2 };
     enum MethodChoice {  KEEP = 0,  AGGREGATE = 1,  PACK = 2,  STRICT = 3 };
     static itkMergeLabelMapFilterLM2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetMethod(itkMergeLabelMapFilterLM2::MethodChoice const _arg);
     virtual itkMergeLabelMapFilterLM2::MethodChoice const & GetMethod() const;
   private:
     itkMergeLabelMapFilterLM2(itkMergeLabelMapFilterLM2 const & arg0);
     void operator=(itkMergeLabelMapFilterLM2 const & arg0);
     void MergeWithKeep();
     void MergeWithAggregate();
     void MergeWithPack();
     void MergeWithStrict();
   protected:
     itkMergeLabelMapFilterLM2();
     ~itkMergeLabelMapFilterLM2();
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMergeLabelMapFilterLM2_Pointer {
   public:
     itkMergeLabelMapFilterLM2_Pointer();
     itkMergeLabelMapFilterLM2_Pointer(itkMergeLabelMapFilterLM2_Pointer const & p);
     itkMergeLabelMapFilterLM2_Pointer(itkMergeLabelMapFilterLM2 * p);
     ~itkMergeLabelMapFilterLM2_Pointer();
     itkMergeLabelMapFilterLM2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMergeLabelMapFilterLM2 * GetPointer() const;
     bool operator<(itkMergeLabelMapFilterLM2_Pointer const & r) const;
     bool operator>(itkMergeLabelMapFilterLM2_Pointer const & r) const;
     bool operator<=(itkMergeLabelMapFilterLM2_Pointer const & r) const;
     bool operator>=(itkMergeLabelMapFilterLM2_Pointer const & r) const;
     itkMergeLabelMapFilterLM2_Pointer & operator=(itkMergeLabelMapFilterLM2_Pointer const & r);
     itkMergeLabelMapFilterLM2_Pointer & operator=(itkMergeLabelMapFilterLM2 * r);
     itkMergeLabelMapFilterLM2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMergeLabelMapFilterLM3 : public itkInPlaceLabelMapFilterLM3 {
   public:
     enum  {  ImageDimension = 3 };
     enum MethodChoice {  KEEP = 0,  AGGREGATE = 1,  PACK = 2,  STRICT = 3 };
     static itkMergeLabelMapFilterLM3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetMethod(itkMergeLabelMapFilterLM3::MethodChoice const _arg);
     virtual itkMergeLabelMapFilterLM3::MethodChoice const & GetMethod() const;
   private:
     itkMergeLabelMapFilterLM3(itkMergeLabelMapFilterLM3 const & arg0);
     void operator=(itkMergeLabelMapFilterLM3 const & arg0);
     void MergeWithKeep();
     void MergeWithAggregate();
     void MergeWithPack();
     void MergeWithStrict();
   protected:
     itkMergeLabelMapFilterLM3();
     ~itkMergeLabelMapFilterLM3();
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMergeLabelMapFilterLM3_Pointer {
   public:
     itkMergeLabelMapFilterLM3_Pointer();
     itkMergeLabelMapFilterLM3_Pointer(itkMergeLabelMapFilterLM3_Pointer const & p);
     itkMergeLabelMapFilterLM3_Pointer(itkMergeLabelMapFilterLM3 * p);
     ~itkMergeLabelMapFilterLM3_Pointer();
     itkMergeLabelMapFilterLM3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMergeLabelMapFilterLM3 * GetPointer() const;
     bool operator<(itkMergeLabelMapFilterLM3_Pointer const & r) const;
     bool operator>(itkMergeLabelMapFilterLM3_Pointer const & r) const;
     bool operator<=(itkMergeLabelMapFilterLM3_Pointer const & r) const;
     bool operator>=(itkMergeLabelMapFilterLM3_Pointer const & r) const;
     itkMergeLabelMapFilterLM3_Pointer & operator=(itkMergeLabelMapFilterLM3_Pointer const & r);
     itkMergeLabelMapFilterLM3_Pointer & operator=(itkMergeLabelMapFilterLM3 * r);
     itkMergeLabelMapFilterLM3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


