# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkReflectImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkReflectImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkReflectImageFilterPython
            return _itkReflectImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkReflectImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkReflectImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkReflectImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkImageToImageFilterAPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
def itkReflectImageFilterID3ID3_New():
  return itkReflectImageFilterID3ID3.New()

def itkReflectImageFilterID2ID2_New():
  return itkReflectImageFilterID2ID2.New()

def itkReflectImageFilterIF3IF3_New():
  return itkReflectImageFilterIF3IF3.New()

def itkReflectImageFilterIF2IF2_New():
  return itkReflectImageFilterIF2IF2.New()

def itkReflectImageFilterIUS3IUS3_New():
  return itkReflectImageFilterIUS3IUS3.New()

def itkReflectImageFilterIUS2IUS2_New():
  return itkReflectImageFilterIUS2IUS2.New()

def itkReflectImageFilterIUL3IUL3_New():
  return itkReflectImageFilterIUL3IUL3.New()

def itkReflectImageFilterIUL2IUL2_New():
  return itkReflectImageFilterIUL2IUL2.New()

def itkReflectImageFilterIUC3IUC3_New():
  return itkReflectImageFilterIUC3IUC3.New()

def itkReflectImageFilterIUC2IUC2_New():
  return itkReflectImageFilterIUC2IUC2.New()

class itkReflectImageFilterID2ID2(itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    """Proxy of C++ itkReflectImageFilterID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkReflectImageFilterPython.itkReflectImageFilterID2ID2_InputImageDimension
    OutputImageDimension = _itkReflectImageFilterPython.itkReflectImageFilterID2ID2_OutputImageDimension
    SameDimensionCheck = _itkReflectImageFilterPython.itkReflectImageFilterID2ID2_SameDimensionCheck
    InputConvertibleToOutputCheck = _itkReflectImageFilterPython.itkReflectImageFilterID2ID2_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkReflectImageFilterPython.itkReflectImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetDirection(self):
        """GetDirection(self) -> unsigned int"""
        return _itkReflectImageFilterPython.itkReflectImageFilterID2ID2_GetDirection(self)

    def SetDirection(self, *args):
        """SetDirection(self, unsigned int _arg)"""
        return _itkReflectImageFilterPython.itkReflectImageFilterID2ID2_SetDirection(self, *args)

    __swig_destroy__ = _itkReflectImageFilterPython.delete_itkReflectImageFilterID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkReflectImageFilterID2ID2"""
        return _itkReflectImageFilterPython.itkReflectImageFilterID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkReflectImageFilterID2ID2"""
        return _itkReflectImageFilterPython.itkReflectImageFilterID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkReflectImageFilterID2ID2
        
        Create a new object of the class itkReflectImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkReflectImageFilterID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkReflectImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkReflectImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkReflectImageFilterID2ID2.GetDirection = new_instancemethod(_itkReflectImageFilterPython.itkReflectImageFilterID2ID2_GetDirection,None,itkReflectImageFilterID2ID2)
itkReflectImageFilterID2ID2.SetDirection = new_instancemethod(_itkReflectImageFilterPython.itkReflectImageFilterID2ID2_SetDirection,None,itkReflectImageFilterID2ID2)
itkReflectImageFilterID2ID2.GetPointer = new_instancemethod(_itkReflectImageFilterPython.itkReflectImageFilterID2ID2_GetPointer,None,itkReflectImageFilterID2ID2)
itkReflectImageFilterID2ID2_swigregister = _itkReflectImageFilterPython.itkReflectImageFilterID2ID2_swigregister
itkReflectImageFilterID2ID2_swigregister(itkReflectImageFilterID2ID2)

def itkReflectImageFilterID2ID2___New_orig__():
  """itkReflectImageFilterID2ID2___New_orig__()"""
  return _itkReflectImageFilterPython.itkReflectImageFilterID2ID2___New_orig__()

def itkReflectImageFilterID2ID2_cast(*args):
  """itkReflectImageFilterID2ID2_cast(itkLightObject obj) -> itkReflectImageFilterID2ID2"""
  return _itkReflectImageFilterPython.itkReflectImageFilterID2ID2_cast(*args)

class itkReflectImageFilterID3ID3(itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    """Proxy of C++ itkReflectImageFilterID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkReflectImageFilterPython.itkReflectImageFilterID3ID3_InputImageDimension
    OutputImageDimension = _itkReflectImageFilterPython.itkReflectImageFilterID3ID3_OutputImageDimension
    SameDimensionCheck = _itkReflectImageFilterPython.itkReflectImageFilterID3ID3_SameDimensionCheck
    InputConvertibleToOutputCheck = _itkReflectImageFilterPython.itkReflectImageFilterID3ID3_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkReflectImageFilterPython.itkReflectImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetDirection(self):
        """GetDirection(self) -> unsigned int"""
        return _itkReflectImageFilterPython.itkReflectImageFilterID3ID3_GetDirection(self)

    def SetDirection(self, *args):
        """SetDirection(self, unsigned int _arg)"""
        return _itkReflectImageFilterPython.itkReflectImageFilterID3ID3_SetDirection(self, *args)

    __swig_destroy__ = _itkReflectImageFilterPython.delete_itkReflectImageFilterID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkReflectImageFilterID3ID3"""
        return _itkReflectImageFilterPython.itkReflectImageFilterID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkReflectImageFilterID3ID3"""
        return _itkReflectImageFilterPython.itkReflectImageFilterID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkReflectImageFilterID3ID3
        
        Create a new object of the class itkReflectImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkReflectImageFilterID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkReflectImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkReflectImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkReflectImageFilterID3ID3.GetDirection = new_instancemethod(_itkReflectImageFilterPython.itkReflectImageFilterID3ID3_GetDirection,None,itkReflectImageFilterID3ID3)
itkReflectImageFilterID3ID3.SetDirection = new_instancemethod(_itkReflectImageFilterPython.itkReflectImageFilterID3ID3_SetDirection,None,itkReflectImageFilterID3ID3)
itkReflectImageFilterID3ID3.GetPointer = new_instancemethod(_itkReflectImageFilterPython.itkReflectImageFilterID3ID3_GetPointer,None,itkReflectImageFilterID3ID3)
itkReflectImageFilterID3ID3_swigregister = _itkReflectImageFilterPython.itkReflectImageFilterID3ID3_swigregister
itkReflectImageFilterID3ID3_swigregister(itkReflectImageFilterID3ID3)

def itkReflectImageFilterID3ID3___New_orig__():
  """itkReflectImageFilterID3ID3___New_orig__()"""
  return _itkReflectImageFilterPython.itkReflectImageFilterID3ID3___New_orig__()

def itkReflectImageFilterID3ID3_cast(*args):
  """itkReflectImageFilterID3ID3_cast(itkLightObject obj) -> itkReflectImageFilterID3ID3"""
  return _itkReflectImageFilterPython.itkReflectImageFilterID3ID3_cast(*args)

class itkReflectImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkReflectImageFilterIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkReflectImageFilterPython.itkReflectImageFilterIF2IF2_InputImageDimension
    OutputImageDimension = _itkReflectImageFilterPython.itkReflectImageFilterIF2IF2_OutputImageDimension
    SameDimensionCheck = _itkReflectImageFilterPython.itkReflectImageFilterIF2IF2_SameDimensionCheck
    InputConvertibleToOutputCheck = _itkReflectImageFilterPython.itkReflectImageFilterIF2IF2_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetDirection(self):
        """GetDirection(self) -> unsigned int"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIF2IF2_GetDirection(self)

    def SetDirection(self, *args):
        """SetDirection(self, unsigned int _arg)"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIF2IF2_SetDirection(self, *args)

    __swig_destroy__ = _itkReflectImageFilterPython.delete_itkReflectImageFilterIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkReflectImageFilterIF2IF2"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkReflectImageFilterIF2IF2"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkReflectImageFilterIF2IF2
        
        Create a new object of the class itkReflectImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkReflectImageFilterIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkReflectImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkReflectImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkReflectImageFilterIF2IF2.GetDirection = new_instancemethod(_itkReflectImageFilterPython.itkReflectImageFilterIF2IF2_GetDirection,None,itkReflectImageFilterIF2IF2)
itkReflectImageFilterIF2IF2.SetDirection = new_instancemethod(_itkReflectImageFilterPython.itkReflectImageFilterIF2IF2_SetDirection,None,itkReflectImageFilterIF2IF2)
itkReflectImageFilterIF2IF2.GetPointer = new_instancemethod(_itkReflectImageFilterPython.itkReflectImageFilterIF2IF2_GetPointer,None,itkReflectImageFilterIF2IF2)
itkReflectImageFilterIF2IF2_swigregister = _itkReflectImageFilterPython.itkReflectImageFilterIF2IF2_swigregister
itkReflectImageFilterIF2IF2_swigregister(itkReflectImageFilterIF2IF2)

def itkReflectImageFilterIF2IF2___New_orig__():
  """itkReflectImageFilterIF2IF2___New_orig__()"""
  return _itkReflectImageFilterPython.itkReflectImageFilterIF2IF2___New_orig__()

def itkReflectImageFilterIF2IF2_cast(*args):
  """itkReflectImageFilterIF2IF2_cast(itkLightObject obj) -> itkReflectImageFilterIF2IF2"""
  return _itkReflectImageFilterPython.itkReflectImageFilterIF2IF2_cast(*args)

class itkReflectImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkReflectImageFilterIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkReflectImageFilterPython.itkReflectImageFilterIF3IF3_InputImageDimension
    OutputImageDimension = _itkReflectImageFilterPython.itkReflectImageFilterIF3IF3_OutputImageDimension
    SameDimensionCheck = _itkReflectImageFilterPython.itkReflectImageFilterIF3IF3_SameDimensionCheck
    InputConvertibleToOutputCheck = _itkReflectImageFilterPython.itkReflectImageFilterIF3IF3_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetDirection(self):
        """GetDirection(self) -> unsigned int"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIF3IF3_GetDirection(self)

    def SetDirection(self, *args):
        """SetDirection(self, unsigned int _arg)"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIF3IF3_SetDirection(self, *args)

    __swig_destroy__ = _itkReflectImageFilterPython.delete_itkReflectImageFilterIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkReflectImageFilterIF3IF3"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkReflectImageFilterIF3IF3"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkReflectImageFilterIF3IF3
        
        Create a new object of the class itkReflectImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkReflectImageFilterIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkReflectImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkReflectImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkReflectImageFilterIF3IF3.GetDirection = new_instancemethod(_itkReflectImageFilterPython.itkReflectImageFilterIF3IF3_GetDirection,None,itkReflectImageFilterIF3IF3)
itkReflectImageFilterIF3IF3.SetDirection = new_instancemethod(_itkReflectImageFilterPython.itkReflectImageFilterIF3IF3_SetDirection,None,itkReflectImageFilterIF3IF3)
itkReflectImageFilterIF3IF3.GetPointer = new_instancemethod(_itkReflectImageFilterPython.itkReflectImageFilterIF3IF3_GetPointer,None,itkReflectImageFilterIF3IF3)
itkReflectImageFilterIF3IF3_swigregister = _itkReflectImageFilterPython.itkReflectImageFilterIF3IF3_swigregister
itkReflectImageFilterIF3IF3_swigregister(itkReflectImageFilterIF3IF3)

def itkReflectImageFilterIF3IF3___New_orig__():
  """itkReflectImageFilterIF3IF3___New_orig__()"""
  return _itkReflectImageFilterPython.itkReflectImageFilterIF3IF3___New_orig__()

def itkReflectImageFilterIF3IF3_cast(*args):
  """itkReflectImageFilterIF3IF3_cast(itkLightObject obj) -> itkReflectImageFilterIF3IF3"""
  return _itkReflectImageFilterPython.itkReflectImageFilterIF3IF3_cast(*args)

class itkReflectImageFilterIUC2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """Proxy of C++ itkReflectImageFilterIUC2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkReflectImageFilterPython.itkReflectImageFilterIUC2IUC2_InputImageDimension
    OutputImageDimension = _itkReflectImageFilterPython.itkReflectImageFilterIUC2IUC2_OutputImageDimension
    SameDimensionCheck = _itkReflectImageFilterPython.itkReflectImageFilterIUC2IUC2_SameDimensionCheck
    InputConvertibleToOutputCheck = _itkReflectImageFilterPython.itkReflectImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetDirection(self):
        """GetDirection(self) -> unsigned int"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIUC2IUC2_GetDirection(self)

    def SetDirection(self, *args):
        """SetDirection(self, unsigned int _arg)"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIUC2IUC2_SetDirection(self, *args)

    __swig_destroy__ = _itkReflectImageFilterPython.delete_itkReflectImageFilterIUC2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkReflectImageFilterIUC2IUC2"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIUC2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkReflectImageFilterIUC2IUC2"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIUC2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkReflectImageFilterIUC2IUC2
        
        Create a new object of the class itkReflectImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkReflectImageFilterIUC2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkReflectImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkReflectImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkReflectImageFilterIUC2IUC2.GetDirection = new_instancemethod(_itkReflectImageFilterPython.itkReflectImageFilterIUC2IUC2_GetDirection,None,itkReflectImageFilterIUC2IUC2)
itkReflectImageFilterIUC2IUC2.SetDirection = new_instancemethod(_itkReflectImageFilterPython.itkReflectImageFilterIUC2IUC2_SetDirection,None,itkReflectImageFilterIUC2IUC2)
itkReflectImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkReflectImageFilterPython.itkReflectImageFilterIUC2IUC2_GetPointer,None,itkReflectImageFilterIUC2IUC2)
itkReflectImageFilterIUC2IUC2_swigregister = _itkReflectImageFilterPython.itkReflectImageFilterIUC2IUC2_swigregister
itkReflectImageFilterIUC2IUC2_swigregister(itkReflectImageFilterIUC2IUC2)

def itkReflectImageFilterIUC2IUC2___New_orig__():
  """itkReflectImageFilterIUC2IUC2___New_orig__()"""
  return _itkReflectImageFilterPython.itkReflectImageFilterIUC2IUC2___New_orig__()

def itkReflectImageFilterIUC2IUC2_cast(*args):
  """itkReflectImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkReflectImageFilterIUC2IUC2"""
  return _itkReflectImageFilterPython.itkReflectImageFilterIUC2IUC2_cast(*args)

class itkReflectImageFilterIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """Proxy of C++ itkReflectImageFilterIUC3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkReflectImageFilterPython.itkReflectImageFilterIUC3IUC3_InputImageDimension
    OutputImageDimension = _itkReflectImageFilterPython.itkReflectImageFilterIUC3IUC3_OutputImageDimension
    SameDimensionCheck = _itkReflectImageFilterPython.itkReflectImageFilterIUC3IUC3_SameDimensionCheck
    InputConvertibleToOutputCheck = _itkReflectImageFilterPython.itkReflectImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetDirection(self):
        """GetDirection(self) -> unsigned int"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIUC3IUC3_GetDirection(self)

    def SetDirection(self, *args):
        """SetDirection(self, unsigned int _arg)"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIUC3IUC3_SetDirection(self, *args)

    __swig_destroy__ = _itkReflectImageFilterPython.delete_itkReflectImageFilterIUC3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkReflectImageFilterIUC3IUC3"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIUC3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkReflectImageFilterIUC3IUC3"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIUC3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkReflectImageFilterIUC3IUC3
        
        Create a new object of the class itkReflectImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkReflectImageFilterIUC3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkReflectImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkReflectImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkReflectImageFilterIUC3IUC3.GetDirection = new_instancemethod(_itkReflectImageFilterPython.itkReflectImageFilterIUC3IUC3_GetDirection,None,itkReflectImageFilterIUC3IUC3)
itkReflectImageFilterIUC3IUC3.SetDirection = new_instancemethod(_itkReflectImageFilterPython.itkReflectImageFilterIUC3IUC3_SetDirection,None,itkReflectImageFilterIUC3IUC3)
itkReflectImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkReflectImageFilterPython.itkReflectImageFilterIUC3IUC3_GetPointer,None,itkReflectImageFilterIUC3IUC3)
itkReflectImageFilterIUC3IUC3_swigregister = _itkReflectImageFilterPython.itkReflectImageFilterIUC3IUC3_swigregister
itkReflectImageFilterIUC3IUC3_swigregister(itkReflectImageFilterIUC3IUC3)

def itkReflectImageFilterIUC3IUC3___New_orig__():
  """itkReflectImageFilterIUC3IUC3___New_orig__()"""
  return _itkReflectImageFilterPython.itkReflectImageFilterIUC3IUC3___New_orig__()

def itkReflectImageFilterIUC3IUC3_cast(*args):
  """itkReflectImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkReflectImageFilterIUC3IUC3"""
  return _itkReflectImageFilterPython.itkReflectImageFilterIUC3IUC3_cast(*args)

class itkReflectImageFilterIUL2IUL2(itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2):
    """Proxy of C++ itkReflectImageFilterIUL2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkReflectImageFilterPython.itkReflectImageFilterIUL2IUL2_InputImageDimension
    OutputImageDimension = _itkReflectImageFilterPython.itkReflectImageFilterIUL2IUL2_OutputImageDimension
    SameDimensionCheck = _itkReflectImageFilterPython.itkReflectImageFilterIUL2IUL2_SameDimensionCheck
    InputConvertibleToOutputCheck = _itkReflectImageFilterPython.itkReflectImageFilterIUL2IUL2_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIUL2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetDirection(self):
        """GetDirection(self) -> unsigned int"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIUL2IUL2_GetDirection(self)

    def SetDirection(self, *args):
        """SetDirection(self, unsigned int _arg)"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIUL2IUL2_SetDirection(self, *args)

    __swig_destroy__ = _itkReflectImageFilterPython.delete_itkReflectImageFilterIUL2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkReflectImageFilterIUL2IUL2"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIUL2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkReflectImageFilterIUL2IUL2"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIUL2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkReflectImageFilterIUL2IUL2
        
        Create a new object of the class itkReflectImageFilterIUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkReflectImageFilterIUL2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkReflectImageFilterIUL2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkReflectImageFilterIUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkReflectImageFilterIUL2IUL2.GetDirection = new_instancemethod(_itkReflectImageFilterPython.itkReflectImageFilterIUL2IUL2_GetDirection,None,itkReflectImageFilterIUL2IUL2)
itkReflectImageFilterIUL2IUL2.SetDirection = new_instancemethod(_itkReflectImageFilterPython.itkReflectImageFilterIUL2IUL2_SetDirection,None,itkReflectImageFilterIUL2IUL2)
itkReflectImageFilterIUL2IUL2.GetPointer = new_instancemethod(_itkReflectImageFilterPython.itkReflectImageFilterIUL2IUL2_GetPointer,None,itkReflectImageFilterIUL2IUL2)
itkReflectImageFilterIUL2IUL2_swigregister = _itkReflectImageFilterPython.itkReflectImageFilterIUL2IUL2_swigregister
itkReflectImageFilterIUL2IUL2_swigregister(itkReflectImageFilterIUL2IUL2)

def itkReflectImageFilterIUL2IUL2___New_orig__():
  """itkReflectImageFilterIUL2IUL2___New_orig__()"""
  return _itkReflectImageFilterPython.itkReflectImageFilterIUL2IUL2___New_orig__()

def itkReflectImageFilterIUL2IUL2_cast(*args):
  """itkReflectImageFilterIUL2IUL2_cast(itkLightObject obj) -> itkReflectImageFilterIUL2IUL2"""
  return _itkReflectImageFilterPython.itkReflectImageFilterIUL2IUL2_cast(*args)

class itkReflectImageFilterIUL3IUL3(itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3):
    """Proxy of C++ itkReflectImageFilterIUL3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkReflectImageFilterPython.itkReflectImageFilterIUL3IUL3_InputImageDimension
    OutputImageDimension = _itkReflectImageFilterPython.itkReflectImageFilterIUL3IUL3_OutputImageDimension
    SameDimensionCheck = _itkReflectImageFilterPython.itkReflectImageFilterIUL3IUL3_SameDimensionCheck
    InputConvertibleToOutputCheck = _itkReflectImageFilterPython.itkReflectImageFilterIUL3IUL3_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIUL3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetDirection(self):
        """GetDirection(self) -> unsigned int"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIUL3IUL3_GetDirection(self)

    def SetDirection(self, *args):
        """SetDirection(self, unsigned int _arg)"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIUL3IUL3_SetDirection(self, *args)

    __swig_destroy__ = _itkReflectImageFilterPython.delete_itkReflectImageFilterIUL3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkReflectImageFilterIUL3IUL3"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIUL3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkReflectImageFilterIUL3IUL3"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIUL3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkReflectImageFilterIUL3IUL3
        
        Create a new object of the class itkReflectImageFilterIUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkReflectImageFilterIUL3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkReflectImageFilterIUL3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkReflectImageFilterIUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkReflectImageFilterIUL3IUL3.GetDirection = new_instancemethod(_itkReflectImageFilterPython.itkReflectImageFilterIUL3IUL3_GetDirection,None,itkReflectImageFilterIUL3IUL3)
itkReflectImageFilterIUL3IUL3.SetDirection = new_instancemethod(_itkReflectImageFilterPython.itkReflectImageFilterIUL3IUL3_SetDirection,None,itkReflectImageFilterIUL3IUL3)
itkReflectImageFilterIUL3IUL3.GetPointer = new_instancemethod(_itkReflectImageFilterPython.itkReflectImageFilterIUL3IUL3_GetPointer,None,itkReflectImageFilterIUL3IUL3)
itkReflectImageFilterIUL3IUL3_swigregister = _itkReflectImageFilterPython.itkReflectImageFilterIUL3IUL3_swigregister
itkReflectImageFilterIUL3IUL3_swigregister(itkReflectImageFilterIUL3IUL3)

def itkReflectImageFilterIUL3IUL3___New_orig__():
  """itkReflectImageFilterIUL3IUL3___New_orig__()"""
  return _itkReflectImageFilterPython.itkReflectImageFilterIUL3IUL3___New_orig__()

def itkReflectImageFilterIUL3IUL3_cast(*args):
  """itkReflectImageFilterIUL3IUL3_cast(itkLightObject obj) -> itkReflectImageFilterIUL3IUL3"""
  return _itkReflectImageFilterPython.itkReflectImageFilterIUL3IUL3_cast(*args)

class itkReflectImageFilterIUS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """Proxy of C++ itkReflectImageFilterIUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkReflectImageFilterPython.itkReflectImageFilterIUS2IUS2_InputImageDimension
    OutputImageDimension = _itkReflectImageFilterPython.itkReflectImageFilterIUS2IUS2_OutputImageDimension
    SameDimensionCheck = _itkReflectImageFilterPython.itkReflectImageFilterIUS2IUS2_SameDimensionCheck
    InputConvertibleToOutputCheck = _itkReflectImageFilterPython.itkReflectImageFilterIUS2IUS2_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetDirection(self):
        """GetDirection(self) -> unsigned int"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIUS2IUS2_GetDirection(self)

    def SetDirection(self, *args):
        """SetDirection(self, unsigned int _arg)"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIUS2IUS2_SetDirection(self, *args)

    __swig_destroy__ = _itkReflectImageFilterPython.delete_itkReflectImageFilterIUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkReflectImageFilterIUS2IUS2"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkReflectImageFilterIUS2IUS2"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkReflectImageFilterIUS2IUS2
        
        Create a new object of the class itkReflectImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkReflectImageFilterIUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkReflectImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkReflectImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkReflectImageFilterIUS2IUS2.GetDirection = new_instancemethod(_itkReflectImageFilterPython.itkReflectImageFilterIUS2IUS2_GetDirection,None,itkReflectImageFilterIUS2IUS2)
itkReflectImageFilterIUS2IUS2.SetDirection = new_instancemethod(_itkReflectImageFilterPython.itkReflectImageFilterIUS2IUS2_SetDirection,None,itkReflectImageFilterIUS2IUS2)
itkReflectImageFilterIUS2IUS2.GetPointer = new_instancemethod(_itkReflectImageFilterPython.itkReflectImageFilterIUS2IUS2_GetPointer,None,itkReflectImageFilterIUS2IUS2)
itkReflectImageFilterIUS2IUS2_swigregister = _itkReflectImageFilterPython.itkReflectImageFilterIUS2IUS2_swigregister
itkReflectImageFilterIUS2IUS2_swigregister(itkReflectImageFilterIUS2IUS2)

def itkReflectImageFilterIUS2IUS2___New_orig__():
  """itkReflectImageFilterIUS2IUS2___New_orig__()"""
  return _itkReflectImageFilterPython.itkReflectImageFilterIUS2IUS2___New_orig__()

def itkReflectImageFilterIUS2IUS2_cast(*args):
  """itkReflectImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkReflectImageFilterIUS2IUS2"""
  return _itkReflectImageFilterPython.itkReflectImageFilterIUS2IUS2_cast(*args)

class itkReflectImageFilterIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """Proxy of C++ itkReflectImageFilterIUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkReflectImageFilterPython.itkReflectImageFilterIUS3IUS3_InputImageDimension
    OutputImageDimension = _itkReflectImageFilterPython.itkReflectImageFilterIUS3IUS3_OutputImageDimension
    SameDimensionCheck = _itkReflectImageFilterPython.itkReflectImageFilterIUS3IUS3_SameDimensionCheck
    InputConvertibleToOutputCheck = _itkReflectImageFilterPython.itkReflectImageFilterIUS3IUS3_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetDirection(self):
        """GetDirection(self) -> unsigned int"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIUS3IUS3_GetDirection(self)

    def SetDirection(self, *args):
        """SetDirection(self, unsigned int _arg)"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIUS3IUS3_SetDirection(self, *args)

    __swig_destroy__ = _itkReflectImageFilterPython.delete_itkReflectImageFilterIUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkReflectImageFilterIUS3IUS3"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkReflectImageFilterIUS3IUS3"""
        return _itkReflectImageFilterPython.itkReflectImageFilterIUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkReflectImageFilterIUS3IUS3
        
        Create a new object of the class itkReflectImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkReflectImageFilterIUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkReflectImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkReflectImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkReflectImageFilterIUS3IUS3.GetDirection = new_instancemethod(_itkReflectImageFilterPython.itkReflectImageFilterIUS3IUS3_GetDirection,None,itkReflectImageFilterIUS3IUS3)
itkReflectImageFilterIUS3IUS3.SetDirection = new_instancemethod(_itkReflectImageFilterPython.itkReflectImageFilterIUS3IUS3_SetDirection,None,itkReflectImageFilterIUS3IUS3)
itkReflectImageFilterIUS3IUS3.GetPointer = new_instancemethod(_itkReflectImageFilterPython.itkReflectImageFilterIUS3IUS3_GetPointer,None,itkReflectImageFilterIUS3IUS3)
itkReflectImageFilterIUS3IUS3_swigregister = _itkReflectImageFilterPython.itkReflectImageFilterIUS3IUS3_swigregister
itkReflectImageFilterIUS3IUS3_swigregister(itkReflectImageFilterIUS3IUS3)

def itkReflectImageFilterIUS3IUS3___New_orig__():
  """itkReflectImageFilterIUS3IUS3___New_orig__()"""
  return _itkReflectImageFilterPython.itkReflectImageFilterIUS3IUS3___New_orig__()

def itkReflectImageFilterIUS3IUS3_cast(*args):
  """itkReflectImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkReflectImageFilterIUS3IUS3"""
  return _itkReflectImageFilterPython.itkReflectImageFilterIUS3IUS3_cast(*args)



