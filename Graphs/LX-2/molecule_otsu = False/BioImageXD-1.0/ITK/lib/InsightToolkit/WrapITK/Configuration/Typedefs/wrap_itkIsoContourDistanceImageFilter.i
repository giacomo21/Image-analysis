// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkIsoContourDistanceImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkIsoContourDistanceImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkIsoContourDistanceImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkIsoContourDistanceImageFilterJava
#endif
#ifdef SWIGLUA
%module itkIsoContourDistanceImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkIsoContourDistanceImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkIsoContourDistanceImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkIsoContourDistanceImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkIsoContourDistanceImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkIsoContourDistanceImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkIsoContourDistanceImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkIsoContourDistanceImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkIsoContourDistanceImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkIsoContourDistanceImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkIsoContourDistanceImageFilterPython
#endif
#ifdef SWIGR
%module itkIsoContourDistanceImageFilterR
#endif
#ifdef SWIGRUBY
%module itkIsoContourDistanceImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkIsoContourDistanceImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkIsoContourDistanceImageFilterTcl
#endif
#ifdef SWIGXML
%module itkIsoContourDistanceImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Numerics.includes"
#include "LevelSet.includes"
%}


%{
%}




%import wrap_itkNarrowBand.i
%import wrap_ITKCommonBase.i
%import wrap_ITKRegions.i
%import wrap_itkImageToImageFilterA.i


%include itk.i
%include wrap_itkIsoContourDistanceImageFilter_ext.i


 class itkIsoContourDistanceImageFilterID2ID2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  OutputAdditiveOperatorsCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkIsoContourDistanceImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetLevelSetValue(double const _arg);
     virtual double GetLevelSetValue() const;
     virtual void SetFarValue(double const _arg);
     virtual double GetFarValue() const;
     virtual void SetNarrowBanding(bool const _arg);
     virtual bool GetNarrowBanding() const;
     virtual void NarrowBandingOn();
     virtual void NarrowBandingOff();
     void SetNarrowBand(itkNarrowBandBNI2D * ptr);
     itkNarrowBandBNI2D_Pointer GetNarrowBand() const;
   private:
     itkIsoContourDistanceImageFilterID2ID2(itkIsoContourDistanceImageFilterID2ID2 const & arg0);
     void operator=(itkIsoContourDistanceImageFilterID2ID2 const & arg0);
   protected:
     itkIsoContourDistanceImageFilterID2ID2();
     ~itkIsoContourDistanceImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     void ThreadedGenerateDataFull(itkImageRegion2 const & outputRegionForThread, int threadId);
     void ThreadedGenerateDataBand(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkIsoContourDistanceImageFilterID2ID2_Pointer {
   public:
     itkIsoContourDistanceImageFilterID2ID2_Pointer();
     itkIsoContourDistanceImageFilterID2ID2_Pointer(itkIsoContourDistanceImageFilterID2ID2_Pointer const & p);
     itkIsoContourDistanceImageFilterID2ID2_Pointer(itkIsoContourDistanceImageFilterID2ID2 * p);
     ~itkIsoContourDistanceImageFilterID2ID2_Pointer();
     itkIsoContourDistanceImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIsoContourDistanceImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkIsoContourDistanceImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkIsoContourDistanceImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkIsoContourDistanceImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkIsoContourDistanceImageFilterID2ID2_Pointer const & r) const;
     itkIsoContourDistanceImageFilterID2ID2_Pointer & operator=(itkIsoContourDistanceImageFilterID2ID2_Pointer const & r);
     itkIsoContourDistanceImageFilterID2ID2_Pointer & operator=(itkIsoContourDistanceImageFilterID2ID2 * r);
     itkIsoContourDistanceImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIsoContourDistanceImageFilterID3ID3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  OutputAdditiveOperatorsCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkIsoContourDistanceImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetLevelSetValue(double const _arg);
     virtual double GetLevelSetValue() const;
     virtual void SetFarValue(double const _arg);
     virtual double GetFarValue() const;
     virtual void SetNarrowBanding(bool const _arg);
     virtual bool GetNarrowBanding() const;
     virtual void NarrowBandingOn();
     virtual void NarrowBandingOff();
     void SetNarrowBand(itkNarrowBandBNI3D * ptr);
     itkNarrowBandBNI3D_Pointer GetNarrowBand() const;
   private:
     itkIsoContourDistanceImageFilterID3ID3(itkIsoContourDistanceImageFilterID3ID3 const & arg0);
     void operator=(itkIsoContourDistanceImageFilterID3ID3 const & arg0);
   protected:
     itkIsoContourDistanceImageFilterID3ID3();
     ~itkIsoContourDistanceImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     void ThreadedGenerateDataFull(itkImageRegion3 const & outputRegionForThread, int threadId);
     void ThreadedGenerateDataBand(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkIsoContourDistanceImageFilterID3ID3_Pointer {
   public:
     itkIsoContourDistanceImageFilterID3ID3_Pointer();
     itkIsoContourDistanceImageFilterID3ID3_Pointer(itkIsoContourDistanceImageFilterID3ID3_Pointer const & p);
     itkIsoContourDistanceImageFilterID3ID3_Pointer(itkIsoContourDistanceImageFilterID3ID3 * p);
     ~itkIsoContourDistanceImageFilterID3ID3_Pointer();
     itkIsoContourDistanceImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIsoContourDistanceImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkIsoContourDistanceImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkIsoContourDistanceImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkIsoContourDistanceImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkIsoContourDistanceImageFilterID3ID3_Pointer const & r) const;
     itkIsoContourDistanceImageFilterID3ID3_Pointer & operator=(itkIsoContourDistanceImageFilterID3ID3_Pointer const & r);
     itkIsoContourDistanceImageFilterID3ID3_Pointer & operator=(itkIsoContourDistanceImageFilterID3ID3 * r);
     itkIsoContourDistanceImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIsoContourDistanceImageFilterIF2IF2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  OutputAdditiveOperatorsCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkIsoContourDistanceImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetLevelSetValue(float const _arg);
     virtual float GetLevelSetValue() const;
     virtual void SetFarValue(float const _arg);
     virtual float GetFarValue() const;
     virtual void SetNarrowBanding(bool const _arg);
     virtual bool GetNarrowBanding() const;
     virtual void NarrowBandingOn();
     virtual void NarrowBandingOff();
     void SetNarrowBand(itkNarrowBandBNI2F * ptr);
     itkNarrowBandBNI2F_Pointer GetNarrowBand() const;
   private:
     itkIsoContourDistanceImageFilterIF2IF2(itkIsoContourDistanceImageFilterIF2IF2 const & arg0);
     void operator=(itkIsoContourDistanceImageFilterIF2IF2 const & arg0);
   protected:
     itkIsoContourDistanceImageFilterIF2IF2();
     ~itkIsoContourDistanceImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     void ThreadedGenerateDataFull(itkImageRegion2 const & outputRegionForThread, int threadId);
     void ThreadedGenerateDataBand(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkIsoContourDistanceImageFilterIF2IF2_Pointer {
   public:
     itkIsoContourDistanceImageFilterIF2IF2_Pointer();
     itkIsoContourDistanceImageFilterIF2IF2_Pointer(itkIsoContourDistanceImageFilterIF2IF2_Pointer const & p);
     itkIsoContourDistanceImageFilterIF2IF2_Pointer(itkIsoContourDistanceImageFilterIF2IF2 * p);
     ~itkIsoContourDistanceImageFilterIF2IF2_Pointer();
     itkIsoContourDistanceImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIsoContourDistanceImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkIsoContourDistanceImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkIsoContourDistanceImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkIsoContourDistanceImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkIsoContourDistanceImageFilterIF2IF2_Pointer const & r) const;
     itkIsoContourDistanceImageFilterIF2IF2_Pointer & operator=(itkIsoContourDistanceImageFilterIF2IF2_Pointer const & r);
     itkIsoContourDistanceImageFilterIF2IF2_Pointer & operator=(itkIsoContourDistanceImageFilterIF2IF2 * r);
     itkIsoContourDistanceImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkIsoContourDistanceImageFilterIF3IF3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  OutputAdditiveOperatorsCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkIsoContourDistanceImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetLevelSetValue(float const _arg);
     virtual float GetLevelSetValue() const;
     virtual void SetFarValue(float const _arg);
     virtual float GetFarValue() const;
     virtual void SetNarrowBanding(bool const _arg);
     virtual bool GetNarrowBanding() const;
     virtual void NarrowBandingOn();
     virtual void NarrowBandingOff();
     void SetNarrowBand(itkNarrowBandBNI3F * ptr);
     itkNarrowBandBNI3F_Pointer GetNarrowBand() const;
   private:
     itkIsoContourDistanceImageFilterIF3IF3(itkIsoContourDistanceImageFilterIF3IF3 const & arg0);
     void operator=(itkIsoContourDistanceImageFilterIF3IF3 const & arg0);
   protected:
     itkIsoContourDistanceImageFilterIF3IF3();
     ~itkIsoContourDistanceImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     void ThreadedGenerateDataFull(itkImageRegion3 const & outputRegionForThread, int threadId);
     void ThreadedGenerateDataBand(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkIsoContourDistanceImageFilterIF3IF3_Pointer {
   public:
     itkIsoContourDistanceImageFilterIF3IF3_Pointer();
     itkIsoContourDistanceImageFilterIF3IF3_Pointer(itkIsoContourDistanceImageFilterIF3IF3_Pointer const & p);
     itkIsoContourDistanceImageFilterIF3IF3_Pointer(itkIsoContourDistanceImageFilterIF3IF3 * p);
     ~itkIsoContourDistanceImageFilterIF3IF3_Pointer();
     itkIsoContourDistanceImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkIsoContourDistanceImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkIsoContourDistanceImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkIsoContourDistanceImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkIsoContourDistanceImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkIsoContourDistanceImageFilterIF3IF3_Pointer const & r) const;
     itkIsoContourDistanceImageFilterIF3IF3_Pointer & operator=(itkIsoContourDistanceImageFilterIF3IF3_Pointer const & r);
     itkIsoContourDistanceImageFilterIF3IF3_Pointer & operator=(itkIsoContourDistanceImageFilterIF3IF3 * r);
     itkIsoContourDistanceImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


