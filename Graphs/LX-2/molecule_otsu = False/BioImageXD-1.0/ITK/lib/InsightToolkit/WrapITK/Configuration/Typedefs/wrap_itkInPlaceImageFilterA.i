// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkInPlaceImageFilterAChicken
#endif
#ifdef SWIGCSHARP
%module itkInPlaceImageFilterACsharp
#endif
#ifdef SWIGGUILE
%module itkInPlaceImageFilterAGuile
#endif
#ifdef SWIGJAVA
%module itkInPlaceImageFilterAJava
#endif
#ifdef SWIGLUA
%module itkInPlaceImageFilterALua
#endif
#ifdef SWIGMODULA3
%module itkInPlaceImageFilterAModula3
#endif
#ifdef SWIGMZSCHEME
%module itkInPlaceImageFilterAMzscheme
#endif
#ifdef SWIGOCAML
%module itkInPlaceImageFilterAOcaml
#endif
#ifdef SWIGPERL
%module itkInPlaceImageFilterAPerl
#endif
#ifdef SWIGPERL5
%module itkInPlaceImageFilterAPerl5
#endif
#ifdef SWIGPHP
%module itkInPlaceImageFilterAPhp
#endif
#ifdef SWIGPHP4
%module itkInPlaceImageFilterAPhp4
#endif
#ifdef SWIGPHP5
%module itkInPlaceImageFilterAPhp5
#endif
#ifdef SWIGPIKE
%module itkInPlaceImageFilterAPike
#endif
#ifdef SWIGPYTHON
%module itkInPlaceImageFilterAPython
#endif
#ifdef SWIGR
%module itkInPlaceImageFilterAR
#endif
#ifdef SWIGRUBY
%module itkInPlaceImageFilterARuby
#endif
#ifdef SWIGSEXP
%module itkInPlaceImageFilterASexp
#endif
#ifdef SWIGTCL
%module itkInPlaceImageFilterATcl
#endif
#ifdef SWIGXML
%module itkInPlaceImageFilterAXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImageToImageFilterB.i
%import wrap_itkImageToImageFilterA.i


%include itk.i
%include wrap_itkInPlaceImageFilterA_ext.i


 class itkInPlaceImageFilterICVF22ICVF22 : public itkImageToImageFilterICVF22ICVF22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterICVF22ICVF22(itkInPlaceImageFilterICVF22ICVF22 const & arg0);
     void operator=(itkInPlaceImageFilterICVF22ICVF22 const & arg0);
   protected:
     itkInPlaceImageFilterICVF22ICVF22();
     ~itkInPlaceImageFilterICVF22ICVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterICVF22ICVF22_Pointer {
   public:
     itkInPlaceImageFilterICVF22ICVF22_Pointer();
     itkInPlaceImageFilterICVF22ICVF22_Pointer(itkInPlaceImageFilterICVF22ICVF22_Pointer const & p);
     itkInPlaceImageFilterICVF22ICVF22_Pointer(itkInPlaceImageFilterICVF22ICVF22 * p);
     ~itkInPlaceImageFilterICVF22ICVF22_Pointer();
     itkInPlaceImageFilterICVF22ICVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterICVF22ICVF22 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterICVF22ICVF22_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterICVF22ICVF22_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterICVF22ICVF22_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterICVF22ICVF22_Pointer const & r) const;
     itkInPlaceImageFilterICVF22ICVF22_Pointer & operator=(itkInPlaceImageFilterICVF22ICVF22_Pointer const & r);
     itkInPlaceImageFilterICVF22ICVF22_Pointer & operator=(itkInPlaceImageFilterICVF22ICVF22 * r);
     itkInPlaceImageFilterICVF22ICVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterICVF22IVF22 : public itkImageToImageFilterICVF22IVF22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterICVF22IVF22(itkInPlaceImageFilterICVF22IVF22 const & arg0);
     void operator=(itkInPlaceImageFilterICVF22IVF22 const & arg0);
   protected:
     itkInPlaceImageFilterICVF22IVF22();
     ~itkInPlaceImageFilterICVF22IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterICVF22IVF22_Pointer {
   public:
     itkInPlaceImageFilterICVF22IVF22_Pointer();
     itkInPlaceImageFilterICVF22IVF22_Pointer(itkInPlaceImageFilterICVF22IVF22_Pointer const & p);
     itkInPlaceImageFilterICVF22IVF22_Pointer(itkInPlaceImageFilterICVF22IVF22 * p);
     ~itkInPlaceImageFilterICVF22IVF22_Pointer();
     itkInPlaceImageFilterICVF22IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterICVF22IVF22 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterICVF22IVF22_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterICVF22IVF22_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterICVF22IVF22_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterICVF22IVF22_Pointer const & r) const;
     itkInPlaceImageFilterICVF22IVF22_Pointer & operator=(itkInPlaceImageFilterICVF22IVF22_Pointer const & r);
     itkInPlaceImageFilterICVF22IVF22_Pointer & operator=(itkInPlaceImageFilterICVF22IVF22 * r);
     itkInPlaceImageFilterICVF22IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterICVF33ICVF33 : public itkImageToImageFilterICVF33ICVF33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterICVF33ICVF33(itkInPlaceImageFilterICVF33ICVF33 const & arg0);
     void operator=(itkInPlaceImageFilterICVF33ICVF33 const & arg0);
   protected:
     itkInPlaceImageFilterICVF33ICVF33();
     ~itkInPlaceImageFilterICVF33ICVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterICVF33ICVF33_Pointer {
   public:
     itkInPlaceImageFilterICVF33ICVF33_Pointer();
     itkInPlaceImageFilterICVF33ICVF33_Pointer(itkInPlaceImageFilterICVF33ICVF33_Pointer const & p);
     itkInPlaceImageFilterICVF33ICVF33_Pointer(itkInPlaceImageFilterICVF33ICVF33 * p);
     ~itkInPlaceImageFilterICVF33ICVF33_Pointer();
     itkInPlaceImageFilterICVF33ICVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterICVF33ICVF33 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterICVF33ICVF33_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterICVF33ICVF33_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterICVF33ICVF33_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterICVF33ICVF33_Pointer const & r) const;
     itkInPlaceImageFilterICVF33ICVF33_Pointer & operator=(itkInPlaceImageFilterICVF33ICVF33_Pointer const & r);
     itkInPlaceImageFilterICVF33ICVF33_Pointer & operator=(itkInPlaceImageFilterICVF33ICVF33 * r);
     itkInPlaceImageFilterICVF33ICVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterICVF33IVF33 : public itkImageToImageFilterICVF33IVF33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterICVF33IVF33(itkInPlaceImageFilterICVF33IVF33 const & arg0);
     void operator=(itkInPlaceImageFilterICVF33IVF33 const & arg0);
   protected:
     itkInPlaceImageFilterICVF33IVF33();
     ~itkInPlaceImageFilterICVF33IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterICVF33IVF33_Pointer {
   public:
     itkInPlaceImageFilterICVF33IVF33_Pointer();
     itkInPlaceImageFilterICVF33IVF33_Pointer(itkInPlaceImageFilterICVF33IVF33_Pointer const & p);
     itkInPlaceImageFilterICVF33IVF33_Pointer(itkInPlaceImageFilterICVF33IVF33 * p);
     ~itkInPlaceImageFilterICVF33IVF33_Pointer();
     itkInPlaceImageFilterICVF33IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterICVF33IVF33 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterICVF33IVF33_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterICVF33IVF33_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterICVF33IVF33_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterICVF33IVF33_Pointer const & r) const;
     itkInPlaceImageFilterICVF33IVF33_Pointer & operator=(itkInPlaceImageFilterICVF33IVF33_Pointer const & r);
     itkInPlaceImageFilterICVF33IVF33_Pointer & operator=(itkInPlaceImageFilterICVF33IVF33 * r);
     itkInPlaceImageFilterICVF33IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterID2ID2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterID2ID2(itkInPlaceImageFilterID2ID2 const & arg0);
     void operator=(itkInPlaceImageFilterID2ID2 const & arg0);
   protected:
     itkInPlaceImageFilterID2ID2();
     ~itkInPlaceImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterID2ID2_Pointer {
   public:
     itkInPlaceImageFilterID2ID2_Pointer();
     itkInPlaceImageFilterID2ID2_Pointer(itkInPlaceImageFilterID2ID2_Pointer const & p);
     itkInPlaceImageFilterID2ID2_Pointer(itkInPlaceImageFilterID2ID2 * p);
     ~itkInPlaceImageFilterID2ID2_Pointer();
     itkInPlaceImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterID2ID2_Pointer const & r) const;
     itkInPlaceImageFilterID2ID2_Pointer & operator=(itkInPlaceImageFilterID2ID2_Pointer const & r);
     itkInPlaceImageFilterID2ID2_Pointer & operator=(itkInPlaceImageFilterID2ID2 * r);
     itkInPlaceImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterID2IF2 : public itkImageToImageFilterID2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterID2IF2(itkInPlaceImageFilterID2IF2 const & arg0);
     void operator=(itkInPlaceImageFilterID2IF2 const & arg0);
   protected:
     itkInPlaceImageFilterID2IF2();
     ~itkInPlaceImageFilterID2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterID2IF2_Pointer {
   public:
     itkInPlaceImageFilterID2IF2_Pointer();
     itkInPlaceImageFilterID2IF2_Pointer(itkInPlaceImageFilterID2IF2_Pointer const & p);
     itkInPlaceImageFilterID2IF2_Pointer(itkInPlaceImageFilterID2IF2 * p);
     ~itkInPlaceImageFilterID2IF2_Pointer();
     itkInPlaceImageFilterID2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterID2IF2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterID2IF2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterID2IF2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterID2IF2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterID2IF2_Pointer const & r) const;
     itkInPlaceImageFilterID2IF2_Pointer & operator=(itkInPlaceImageFilterID2IF2_Pointer const & r);
     itkInPlaceImageFilterID2IF2_Pointer & operator=(itkInPlaceImageFilterID2IF2 * r);
     itkInPlaceImageFilterID2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterID2IRGBAUS2 : public itkImageToImageFilterID2IRGBAUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterID2IRGBAUS2(itkInPlaceImageFilterID2IRGBAUS2 const & arg0);
     void operator=(itkInPlaceImageFilterID2IRGBAUS2 const & arg0);
   protected:
     itkInPlaceImageFilterID2IRGBAUS2();
     ~itkInPlaceImageFilterID2IRGBAUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterID2IRGBAUS2_Pointer {
   public:
     itkInPlaceImageFilterID2IRGBAUS2_Pointer();
     itkInPlaceImageFilterID2IRGBAUS2_Pointer(itkInPlaceImageFilterID2IRGBAUS2_Pointer const & p);
     itkInPlaceImageFilterID2IRGBAUS2_Pointer(itkInPlaceImageFilterID2IRGBAUS2 * p);
     ~itkInPlaceImageFilterID2IRGBAUS2_Pointer();
     itkInPlaceImageFilterID2IRGBAUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterID2IRGBAUS2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterID2IRGBAUS2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterID2IRGBAUS2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterID2IRGBAUS2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterID2IRGBAUS2_Pointer const & r) const;
     itkInPlaceImageFilterID2IRGBAUS2_Pointer & operator=(itkInPlaceImageFilterID2IRGBAUS2_Pointer const & r);
     itkInPlaceImageFilterID2IRGBAUS2_Pointer & operator=(itkInPlaceImageFilterID2IRGBAUS2 * r);
     itkInPlaceImageFilterID2IRGBAUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterID2IRGBUS2 : public itkImageToImageFilterID2IRGBUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterID2IRGBUS2(itkInPlaceImageFilterID2IRGBUS2 const & arg0);
     void operator=(itkInPlaceImageFilterID2IRGBUS2 const & arg0);
   protected:
     itkInPlaceImageFilterID2IRGBUS2();
     ~itkInPlaceImageFilterID2IRGBUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterID2IRGBUS2_Pointer {
   public:
     itkInPlaceImageFilterID2IRGBUS2_Pointer();
     itkInPlaceImageFilterID2IRGBUS2_Pointer(itkInPlaceImageFilterID2IRGBUS2_Pointer const & p);
     itkInPlaceImageFilterID2IRGBUS2_Pointer(itkInPlaceImageFilterID2IRGBUS2 * p);
     ~itkInPlaceImageFilterID2IRGBUS2_Pointer();
     itkInPlaceImageFilterID2IRGBUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterID2IRGBUS2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterID2IRGBUS2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterID2IRGBUS2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterID2IRGBUS2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterID2IRGBUS2_Pointer const & r) const;
     itkInPlaceImageFilterID2IRGBUS2_Pointer & operator=(itkInPlaceImageFilterID2IRGBUS2_Pointer const & r);
     itkInPlaceImageFilterID2IRGBUS2_Pointer & operator=(itkInPlaceImageFilterID2IRGBUS2 * r);
     itkInPlaceImageFilterID2IRGBUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterID2IUC2 : public itkImageToImageFilterID2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterID2IUC2(itkInPlaceImageFilterID2IUC2 const & arg0);
     void operator=(itkInPlaceImageFilterID2IUC2 const & arg0);
   protected:
     itkInPlaceImageFilterID2IUC2();
     ~itkInPlaceImageFilterID2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterID2IUC2_Pointer {
   public:
     itkInPlaceImageFilterID2IUC2_Pointer();
     itkInPlaceImageFilterID2IUC2_Pointer(itkInPlaceImageFilterID2IUC2_Pointer const & p);
     itkInPlaceImageFilterID2IUC2_Pointer(itkInPlaceImageFilterID2IUC2 * p);
     ~itkInPlaceImageFilterID2IUC2_Pointer();
     itkInPlaceImageFilterID2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterID2IUC2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterID2IUC2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterID2IUC2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterID2IUC2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterID2IUC2_Pointer const & r) const;
     itkInPlaceImageFilterID2IUC2_Pointer & operator=(itkInPlaceImageFilterID2IUC2_Pointer const & r);
     itkInPlaceImageFilterID2IUC2_Pointer & operator=(itkInPlaceImageFilterID2IUC2 * r);
     itkInPlaceImageFilterID2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterID2IUL2 : public itkImageToImageFilterID2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterID2IUL2(itkInPlaceImageFilterID2IUL2 const & arg0);
     void operator=(itkInPlaceImageFilterID2IUL2 const & arg0);
   protected:
     itkInPlaceImageFilterID2IUL2();
     ~itkInPlaceImageFilterID2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterID2IUL2_Pointer {
   public:
     itkInPlaceImageFilterID2IUL2_Pointer();
     itkInPlaceImageFilterID2IUL2_Pointer(itkInPlaceImageFilterID2IUL2_Pointer const & p);
     itkInPlaceImageFilterID2IUL2_Pointer(itkInPlaceImageFilterID2IUL2 * p);
     ~itkInPlaceImageFilterID2IUL2_Pointer();
     itkInPlaceImageFilterID2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterID2IUL2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterID2IUL2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterID2IUL2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterID2IUL2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterID2IUL2_Pointer const & r) const;
     itkInPlaceImageFilterID2IUL2_Pointer & operator=(itkInPlaceImageFilterID2IUL2_Pointer const & r);
     itkInPlaceImageFilterID2IUL2_Pointer & operator=(itkInPlaceImageFilterID2IUL2 * r);
     itkInPlaceImageFilterID2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterID2IUS2 : public itkImageToImageFilterID2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterID2IUS2(itkInPlaceImageFilterID2IUS2 const & arg0);
     void operator=(itkInPlaceImageFilterID2IUS2 const & arg0);
   protected:
     itkInPlaceImageFilterID2IUS2();
     ~itkInPlaceImageFilterID2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterID2IUS2_Pointer {
   public:
     itkInPlaceImageFilterID2IUS2_Pointer();
     itkInPlaceImageFilterID2IUS2_Pointer(itkInPlaceImageFilterID2IUS2_Pointer const & p);
     itkInPlaceImageFilterID2IUS2_Pointer(itkInPlaceImageFilterID2IUS2 * p);
     ~itkInPlaceImageFilterID2IUS2_Pointer();
     itkInPlaceImageFilterID2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterID2IUS2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterID2IUS2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterID2IUS2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterID2IUS2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterID2IUS2_Pointer const & r) const;
     itkInPlaceImageFilterID2IUS2_Pointer & operator=(itkInPlaceImageFilterID2IUS2_Pointer const & r);
     itkInPlaceImageFilterID2IUS2_Pointer & operator=(itkInPlaceImageFilterID2IUS2 * r);
     itkInPlaceImageFilterID2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterID3ID3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterID3ID3(itkInPlaceImageFilterID3ID3 const & arg0);
     void operator=(itkInPlaceImageFilterID3ID3 const & arg0);
   protected:
     itkInPlaceImageFilterID3ID3();
     ~itkInPlaceImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterID3ID3_Pointer {
   public:
     itkInPlaceImageFilterID3ID3_Pointer();
     itkInPlaceImageFilterID3ID3_Pointer(itkInPlaceImageFilterID3ID3_Pointer const & p);
     itkInPlaceImageFilterID3ID3_Pointer(itkInPlaceImageFilterID3ID3 * p);
     ~itkInPlaceImageFilterID3ID3_Pointer();
     itkInPlaceImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterID3ID3_Pointer const & r) const;
     itkInPlaceImageFilterID3ID3_Pointer & operator=(itkInPlaceImageFilterID3ID3_Pointer const & r);
     itkInPlaceImageFilterID3ID3_Pointer & operator=(itkInPlaceImageFilterID3ID3 * r);
     itkInPlaceImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterID3IF3 : public itkImageToImageFilterID3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterID3IF3(itkInPlaceImageFilterID3IF3 const & arg0);
     void operator=(itkInPlaceImageFilterID3IF3 const & arg0);
   protected:
     itkInPlaceImageFilterID3IF3();
     ~itkInPlaceImageFilterID3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterID3IF3_Pointer {
   public:
     itkInPlaceImageFilterID3IF3_Pointer();
     itkInPlaceImageFilterID3IF3_Pointer(itkInPlaceImageFilterID3IF3_Pointer const & p);
     itkInPlaceImageFilterID3IF3_Pointer(itkInPlaceImageFilterID3IF3 * p);
     ~itkInPlaceImageFilterID3IF3_Pointer();
     itkInPlaceImageFilterID3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterID3IF3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterID3IF3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterID3IF3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterID3IF3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterID3IF3_Pointer const & r) const;
     itkInPlaceImageFilterID3IF3_Pointer & operator=(itkInPlaceImageFilterID3IF3_Pointer const & r);
     itkInPlaceImageFilterID3IF3_Pointer & operator=(itkInPlaceImageFilterID3IF3 * r);
     itkInPlaceImageFilterID3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterID3IRGBAUS3 : public itkImageToImageFilterID3IRGBAUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterID3IRGBAUS3(itkInPlaceImageFilterID3IRGBAUS3 const & arg0);
     void operator=(itkInPlaceImageFilterID3IRGBAUS3 const & arg0);
   protected:
     itkInPlaceImageFilterID3IRGBAUS3();
     ~itkInPlaceImageFilterID3IRGBAUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterID3IRGBAUS3_Pointer {
   public:
     itkInPlaceImageFilterID3IRGBAUS3_Pointer();
     itkInPlaceImageFilterID3IRGBAUS3_Pointer(itkInPlaceImageFilterID3IRGBAUS3_Pointer const & p);
     itkInPlaceImageFilterID3IRGBAUS3_Pointer(itkInPlaceImageFilterID3IRGBAUS3 * p);
     ~itkInPlaceImageFilterID3IRGBAUS3_Pointer();
     itkInPlaceImageFilterID3IRGBAUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterID3IRGBAUS3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterID3IRGBAUS3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterID3IRGBAUS3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterID3IRGBAUS3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterID3IRGBAUS3_Pointer const & r) const;
     itkInPlaceImageFilterID3IRGBAUS3_Pointer & operator=(itkInPlaceImageFilterID3IRGBAUS3_Pointer const & r);
     itkInPlaceImageFilterID3IRGBAUS3_Pointer & operator=(itkInPlaceImageFilterID3IRGBAUS3 * r);
     itkInPlaceImageFilterID3IRGBAUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterID3IRGBUS3 : public itkImageToImageFilterID3IRGBUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterID3IRGBUS3(itkInPlaceImageFilterID3IRGBUS3 const & arg0);
     void operator=(itkInPlaceImageFilterID3IRGBUS3 const & arg0);
   protected:
     itkInPlaceImageFilterID3IRGBUS3();
     ~itkInPlaceImageFilterID3IRGBUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterID3IRGBUS3_Pointer {
   public:
     itkInPlaceImageFilterID3IRGBUS3_Pointer();
     itkInPlaceImageFilterID3IRGBUS3_Pointer(itkInPlaceImageFilterID3IRGBUS3_Pointer const & p);
     itkInPlaceImageFilterID3IRGBUS3_Pointer(itkInPlaceImageFilterID3IRGBUS3 * p);
     ~itkInPlaceImageFilterID3IRGBUS3_Pointer();
     itkInPlaceImageFilterID3IRGBUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterID3IRGBUS3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterID3IRGBUS3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterID3IRGBUS3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterID3IRGBUS3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterID3IRGBUS3_Pointer const & r) const;
     itkInPlaceImageFilterID3IRGBUS3_Pointer & operator=(itkInPlaceImageFilterID3IRGBUS3_Pointer const & r);
     itkInPlaceImageFilterID3IRGBUS3_Pointer & operator=(itkInPlaceImageFilterID3IRGBUS3 * r);
     itkInPlaceImageFilterID3IRGBUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterID3IUC3 : public itkImageToImageFilterID3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterID3IUC3(itkInPlaceImageFilterID3IUC3 const & arg0);
     void operator=(itkInPlaceImageFilterID3IUC3 const & arg0);
   protected:
     itkInPlaceImageFilterID3IUC3();
     ~itkInPlaceImageFilterID3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterID3IUC3_Pointer {
   public:
     itkInPlaceImageFilterID3IUC3_Pointer();
     itkInPlaceImageFilterID3IUC3_Pointer(itkInPlaceImageFilterID3IUC3_Pointer const & p);
     itkInPlaceImageFilterID3IUC3_Pointer(itkInPlaceImageFilterID3IUC3 * p);
     ~itkInPlaceImageFilterID3IUC3_Pointer();
     itkInPlaceImageFilterID3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterID3IUC3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterID3IUC3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterID3IUC3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterID3IUC3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterID3IUC3_Pointer const & r) const;
     itkInPlaceImageFilterID3IUC3_Pointer & operator=(itkInPlaceImageFilterID3IUC3_Pointer const & r);
     itkInPlaceImageFilterID3IUC3_Pointer & operator=(itkInPlaceImageFilterID3IUC3 * r);
     itkInPlaceImageFilterID3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterID3IUL3 : public itkImageToImageFilterID3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterID3IUL3(itkInPlaceImageFilterID3IUL3 const & arg0);
     void operator=(itkInPlaceImageFilterID3IUL3 const & arg0);
   protected:
     itkInPlaceImageFilterID3IUL3();
     ~itkInPlaceImageFilterID3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterID3IUL3_Pointer {
   public:
     itkInPlaceImageFilterID3IUL3_Pointer();
     itkInPlaceImageFilterID3IUL3_Pointer(itkInPlaceImageFilterID3IUL3_Pointer const & p);
     itkInPlaceImageFilterID3IUL3_Pointer(itkInPlaceImageFilterID3IUL3 * p);
     ~itkInPlaceImageFilterID3IUL3_Pointer();
     itkInPlaceImageFilterID3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterID3IUL3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterID3IUL3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterID3IUL3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterID3IUL3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterID3IUL3_Pointer const & r) const;
     itkInPlaceImageFilterID3IUL3_Pointer & operator=(itkInPlaceImageFilterID3IUL3_Pointer const & r);
     itkInPlaceImageFilterID3IUL3_Pointer & operator=(itkInPlaceImageFilterID3IUL3 * r);
     itkInPlaceImageFilterID3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterID3IUS3 : public itkImageToImageFilterID3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterID3IUS3(itkInPlaceImageFilterID3IUS3 const & arg0);
     void operator=(itkInPlaceImageFilterID3IUS3 const & arg0);
   protected:
     itkInPlaceImageFilterID3IUS3();
     ~itkInPlaceImageFilterID3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterID3IUS3_Pointer {
   public:
     itkInPlaceImageFilterID3IUS3_Pointer();
     itkInPlaceImageFilterID3IUS3_Pointer(itkInPlaceImageFilterID3IUS3_Pointer const & p);
     itkInPlaceImageFilterID3IUS3_Pointer(itkInPlaceImageFilterID3IUS3 * p);
     ~itkInPlaceImageFilterID3IUS3_Pointer();
     itkInPlaceImageFilterID3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterID3IUS3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterID3IUS3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterID3IUS3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterID3IUS3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterID3IUS3_Pointer const & r) const;
     itkInPlaceImageFilterID3IUS3_Pointer & operator=(itkInPlaceImageFilterID3IUS3_Pointer const & r);
     itkInPlaceImageFilterID3IUS3_Pointer & operator=(itkInPlaceImageFilterID3IUS3 * r);
     itkInPlaceImageFilterID3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIF2ID2 : public itkImageToImageFilterIF2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIF2ID2(itkInPlaceImageFilterIF2ID2 const & arg0);
     void operator=(itkInPlaceImageFilterIF2ID2 const & arg0);
   protected:
     itkInPlaceImageFilterIF2ID2();
     ~itkInPlaceImageFilterIF2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIF2ID2_Pointer {
   public:
     itkInPlaceImageFilterIF2ID2_Pointer();
     itkInPlaceImageFilterIF2ID2_Pointer(itkInPlaceImageFilterIF2ID2_Pointer const & p);
     itkInPlaceImageFilterIF2ID2_Pointer(itkInPlaceImageFilterIF2ID2 * p);
     ~itkInPlaceImageFilterIF2ID2_Pointer();
     itkInPlaceImageFilterIF2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIF2ID2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIF2ID2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIF2ID2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIF2ID2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIF2ID2_Pointer const & r) const;
     itkInPlaceImageFilterIF2ID2_Pointer & operator=(itkInPlaceImageFilterIF2ID2_Pointer const & r);
     itkInPlaceImageFilterIF2ID2_Pointer & operator=(itkInPlaceImageFilterIF2ID2 * r);
     itkInPlaceImageFilterIF2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIF2IF2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIF2IF2(itkInPlaceImageFilterIF2IF2 const & arg0);
     void operator=(itkInPlaceImageFilterIF2IF2 const & arg0);
   protected:
     itkInPlaceImageFilterIF2IF2();
     ~itkInPlaceImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIF2IF2_Pointer {
   public:
     itkInPlaceImageFilterIF2IF2_Pointer();
     itkInPlaceImageFilterIF2IF2_Pointer(itkInPlaceImageFilterIF2IF2_Pointer const & p);
     itkInPlaceImageFilterIF2IF2_Pointer(itkInPlaceImageFilterIF2IF2 * p);
     ~itkInPlaceImageFilterIF2IF2_Pointer();
     itkInPlaceImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIF2IF2_Pointer const & r) const;
     itkInPlaceImageFilterIF2IF2_Pointer & operator=(itkInPlaceImageFilterIF2IF2_Pointer const & r);
     itkInPlaceImageFilterIF2IF2_Pointer & operator=(itkInPlaceImageFilterIF2IF2 * r);
     itkInPlaceImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIF2IRGBAUS2 : public itkImageToImageFilterIF2IRGBAUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIF2IRGBAUS2(itkInPlaceImageFilterIF2IRGBAUS2 const & arg0);
     void operator=(itkInPlaceImageFilterIF2IRGBAUS2 const & arg0);
   protected:
     itkInPlaceImageFilterIF2IRGBAUS2();
     ~itkInPlaceImageFilterIF2IRGBAUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIF2IRGBAUS2_Pointer {
   public:
     itkInPlaceImageFilterIF2IRGBAUS2_Pointer();
     itkInPlaceImageFilterIF2IRGBAUS2_Pointer(itkInPlaceImageFilterIF2IRGBAUS2_Pointer const & p);
     itkInPlaceImageFilterIF2IRGBAUS2_Pointer(itkInPlaceImageFilterIF2IRGBAUS2 * p);
     ~itkInPlaceImageFilterIF2IRGBAUS2_Pointer();
     itkInPlaceImageFilterIF2IRGBAUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIF2IRGBAUS2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIF2IRGBAUS2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIF2IRGBAUS2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIF2IRGBAUS2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIF2IRGBAUS2_Pointer const & r) const;
     itkInPlaceImageFilterIF2IRGBAUS2_Pointer & operator=(itkInPlaceImageFilterIF2IRGBAUS2_Pointer const & r);
     itkInPlaceImageFilterIF2IRGBAUS2_Pointer & operator=(itkInPlaceImageFilterIF2IRGBAUS2 * r);
     itkInPlaceImageFilterIF2IRGBAUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIF2IRGBUS2 : public itkImageToImageFilterIF2IRGBUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIF2IRGBUS2(itkInPlaceImageFilterIF2IRGBUS2 const & arg0);
     void operator=(itkInPlaceImageFilterIF2IRGBUS2 const & arg0);
   protected:
     itkInPlaceImageFilterIF2IRGBUS2();
     ~itkInPlaceImageFilterIF2IRGBUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIF2IRGBUS2_Pointer {
   public:
     itkInPlaceImageFilterIF2IRGBUS2_Pointer();
     itkInPlaceImageFilterIF2IRGBUS2_Pointer(itkInPlaceImageFilterIF2IRGBUS2_Pointer const & p);
     itkInPlaceImageFilterIF2IRGBUS2_Pointer(itkInPlaceImageFilterIF2IRGBUS2 * p);
     ~itkInPlaceImageFilterIF2IRGBUS2_Pointer();
     itkInPlaceImageFilterIF2IRGBUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIF2IRGBUS2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIF2IRGBUS2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIF2IRGBUS2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIF2IRGBUS2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIF2IRGBUS2_Pointer const & r) const;
     itkInPlaceImageFilterIF2IRGBUS2_Pointer & operator=(itkInPlaceImageFilterIF2IRGBUS2_Pointer const & r);
     itkInPlaceImageFilterIF2IRGBUS2_Pointer & operator=(itkInPlaceImageFilterIF2IRGBUS2 * r);
     itkInPlaceImageFilterIF2IRGBUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIF2IUC2 : public itkImageToImageFilterIF2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIF2IUC2(itkInPlaceImageFilterIF2IUC2 const & arg0);
     void operator=(itkInPlaceImageFilterIF2IUC2 const & arg0);
   protected:
     itkInPlaceImageFilterIF2IUC2();
     ~itkInPlaceImageFilterIF2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIF2IUC2_Pointer {
   public:
     itkInPlaceImageFilterIF2IUC2_Pointer();
     itkInPlaceImageFilterIF2IUC2_Pointer(itkInPlaceImageFilterIF2IUC2_Pointer const & p);
     itkInPlaceImageFilterIF2IUC2_Pointer(itkInPlaceImageFilterIF2IUC2 * p);
     ~itkInPlaceImageFilterIF2IUC2_Pointer();
     itkInPlaceImageFilterIF2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIF2IUC2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIF2IUC2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIF2IUC2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIF2IUC2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIF2IUC2_Pointer const & r) const;
     itkInPlaceImageFilterIF2IUC2_Pointer & operator=(itkInPlaceImageFilterIF2IUC2_Pointer const & r);
     itkInPlaceImageFilterIF2IUC2_Pointer & operator=(itkInPlaceImageFilterIF2IUC2 * r);
     itkInPlaceImageFilterIF2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIF2IUL2 : public itkImageToImageFilterIF2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIF2IUL2(itkInPlaceImageFilterIF2IUL2 const & arg0);
     void operator=(itkInPlaceImageFilterIF2IUL2 const & arg0);
   protected:
     itkInPlaceImageFilterIF2IUL2();
     ~itkInPlaceImageFilterIF2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIF2IUL2_Pointer {
   public:
     itkInPlaceImageFilterIF2IUL2_Pointer();
     itkInPlaceImageFilterIF2IUL2_Pointer(itkInPlaceImageFilterIF2IUL2_Pointer const & p);
     itkInPlaceImageFilterIF2IUL2_Pointer(itkInPlaceImageFilterIF2IUL2 * p);
     ~itkInPlaceImageFilterIF2IUL2_Pointer();
     itkInPlaceImageFilterIF2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIF2IUL2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIF2IUL2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIF2IUL2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIF2IUL2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIF2IUL2_Pointer const & r) const;
     itkInPlaceImageFilterIF2IUL2_Pointer & operator=(itkInPlaceImageFilterIF2IUL2_Pointer const & r);
     itkInPlaceImageFilterIF2IUL2_Pointer & operator=(itkInPlaceImageFilterIF2IUL2 * r);
     itkInPlaceImageFilterIF2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIF2IUS2 : public itkImageToImageFilterIF2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIF2IUS2(itkInPlaceImageFilterIF2IUS2 const & arg0);
     void operator=(itkInPlaceImageFilterIF2IUS2 const & arg0);
   protected:
     itkInPlaceImageFilterIF2IUS2();
     ~itkInPlaceImageFilterIF2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIF2IUS2_Pointer {
   public:
     itkInPlaceImageFilterIF2IUS2_Pointer();
     itkInPlaceImageFilterIF2IUS2_Pointer(itkInPlaceImageFilterIF2IUS2_Pointer const & p);
     itkInPlaceImageFilterIF2IUS2_Pointer(itkInPlaceImageFilterIF2IUS2 * p);
     ~itkInPlaceImageFilterIF2IUS2_Pointer();
     itkInPlaceImageFilterIF2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIF2IUS2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIF2IUS2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIF2IUS2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIF2IUS2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIF2IUS2_Pointer const & r) const;
     itkInPlaceImageFilterIF2IUS2_Pointer & operator=(itkInPlaceImageFilterIF2IUS2_Pointer const & r);
     itkInPlaceImageFilterIF2IUS2_Pointer & operator=(itkInPlaceImageFilterIF2IUS2 * r);
     itkInPlaceImageFilterIF2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIF3ID3 : public itkImageToImageFilterIF3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIF3ID3(itkInPlaceImageFilterIF3ID3 const & arg0);
     void operator=(itkInPlaceImageFilterIF3ID3 const & arg0);
   protected:
     itkInPlaceImageFilterIF3ID3();
     ~itkInPlaceImageFilterIF3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIF3ID3_Pointer {
   public:
     itkInPlaceImageFilterIF3ID3_Pointer();
     itkInPlaceImageFilterIF3ID3_Pointer(itkInPlaceImageFilterIF3ID3_Pointer const & p);
     itkInPlaceImageFilterIF3ID3_Pointer(itkInPlaceImageFilterIF3ID3 * p);
     ~itkInPlaceImageFilterIF3ID3_Pointer();
     itkInPlaceImageFilterIF3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIF3ID3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIF3ID3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIF3ID3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIF3ID3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIF3ID3_Pointer const & r) const;
     itkInPlaceImageFilterIF3ID3_Pointer & operator=(itkInPlaceImageFilterIF3ID3_Pointer const & r);
     itkInPlaceImageFilterIF3ID3_Pointer & operator=(itkInPlaceImageFilterIF3ID3 * r);
     itkInPlaceImageFilterIF3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIF3IF3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIF3IF3(itkInPlaceImageFilterIF3IF3 const & arg0);
     void operator=(itkInPlaceImageFilterIF3IF3 const & arg0);
   protected:
     itkInPlaceImageFilterIF3IF3();
     ~itkInPlaceImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIF3IF3_Pointer {
   public:
     itkInPlaceImageFilterIF3IF3_Pointer();
     itkInPlaceImageFilterIF3IF3_Pointer(itkInPlaceImageFilterIF3IF3_Pointer const & p);
     itkInPlaceImageFilterIF3IF3_Pointer(itkInPlaceImageFilterIF3IF3 * p);
     ~itkInPlaceImageFilterIF3IF3_Pointer();
     itkInPlaceImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIF3IF3_Pointer const & r) const;
     itkInPlaceImageFilterIF3IF3_Pointer & operator=(itkInPlaceImageFilterIF3IF3_Pointer const & r);
     itkInPlaceImageFilterIF3IF3_Pointer & operator=(itkInPlaceImageFilterIF3IF3 * r);
     itkInPlaceImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIF3IRGBAUS3 : public itkImageToImageFilterIF3IRGBAUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIF3IRGBAUS3(itkInPlaceImageFilterIF3IRGBAUS3 const & arg0);
     void operator=(itkInPlaceImageFilterIF3IRGBAUS3 const & arg0);
   protected:
     itkInPlaceImageFilterIF3IRGBAUS3();
     ~itkInPlaceImageFilterIF3IRGBAUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIF3IRGBAUS3_Pointer {
   public:
     itkInPlaceImageFilterIF3IRGBAUS3_Pointer();
     itkInPlaceImageFilterIF3IRGBAUS3_Pointer(itkInPlaceImageFilterIF3IRGBAUS3_Pointer const & p);
     itkInPlaceImageFilterIF3IRGBAUS3_Pointer(itkInPlaceImageFilterIF3IRGBAUS3 * p);
     ~itkInPlaceImageFilterIF3IRGBAUS3_Pointer();
     itkInPlaceImageFilterIF3IRGBAUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIF3IRGBAUS3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIF3IRGBAUS3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIF3IRGBAUS3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIF3IRGBAUS3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIF3IRGBAUS3_Pointer const & r) const;
     itkInPlaceImageFilterIF3IRGBAUS3_Pointer & operator=(itkInPlaceImageFilterIF3IRGBAUS3_Pointer const & r);
     itkInPlaceImageFilterIF3IRGBAUS3_Pointer & operator=(itkInPlaceImageFilterIF3IRGBAUS3 * r);
     itkInPlaceImageFilterIF3IRGBAUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIF3IRGBUS3 : public itkImageToImageFilterIF3IRGBUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIF3IRGBUS3(itkInPlaceImageFilterIF3IRGBUS3 const & arg0);
     void operator=(itkInPlaceImageFilterIF3IRGBUS3 const & arg0);
   protected:
     itkInPlaceImageFilterIF3IRGBUS3();
     ~itkInPlaceImageFilterIF3IRGBUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIF3IRGBUS3_Pointer {
   public:
     itkInPlaceImageFilterIF3IRGBUS3_Pointer();
     itkInPlaceImageFilterIF3IRGBUS3_Pointer(itkInPlaceImageFilterIF3IRGBUS3_Pointer const & p);
     itkInPlaceImageFilterIF3IRGBUS3_Pointer(itkInPlaceImageFilterIF3IRGBUS3 * p);
     ~itkInPlaceImageFilterIF3IRGBUS3_Pointer();
     itkInPlaceImageFilterIF3IRGBUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIF3IRGBUS3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIF3IRGBUS3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIF3IRGBUS3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIF3IRGBUS3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIF3IRGBUS3_Pointer const & r) const;
     itkInPlaceImageFilterIF3IRGBUS3_Pointer & operator=(itkInPlaceImageFilterIF3IRGBUS3_Pointer const & r);
     itkInPlaceImageFilterIF3IRGBUS3_Pointer & operator=(itkInPlaceImageFilterIF3IRGBUS3 * r);
     itkInPlaceImageFilterIF3IRGBUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIF3IUC3 : public itkImageToImageFilterIF3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIF3IUC3(itkInPlaceImageFilterIF3IUC3 const & arg0);
     void operator=(itkInPlaceImageFilterIF3IUC3 const & arg0);
   protected:
     itkInPlaceImageFilterIF3IUC3();
     ~itkInPlaceImageFilterIF3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIF3IUC3_Pointer {
   public:
     itkInPlaceImageFilterIF3IUC3_Pointer();
     itkInPlaceImageFilterIF3IUC3_Pointer(itkInPlaceImageFilterIF3IUC3_Pointer const & p);
     itkInPlaceImageFilterIF3IUC3_Pointer(itkInPlaceImageFilterIF3IUC3 * p);
     ~itkInPlaceImageFilterIF3IUC3_Pointer();
     itkInPlaceImageFilterIF3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIF3IUC3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIF3IUC3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIF3IUC3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIF3IUC3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIF3IUC3_Pointer const & r) const;
     itkInPlaceImageFilterIF3IUC3_Pointer & operator=(itkInPlaceImageFilterIF3IUC3_Pointer const & r);
     itkInPlaceImageFilterIF3IUC3_Pointer & operator=(itkInPlaceImageFilterIF3IUC3 * r);
     itkInPlaceImageFilterIF3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIF3IUL3 : public itkImageToImageFilterIF3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIF3IUL3(itkInPlaceImageFilterIF3IUL3 const & arg0);
     void operator=(itkInPlaceImageFilterIF3IUL3 const & arg0);
   protected:
     itkInPlaceImageFilterIF3IUL3();
     ~itkInPlaceImageFilterIF3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIF3IUL3_Pointer {
   public:
     itkInPlaceImageFilterIF3IUL3_Pointer();
     itkInPlaceImageFilterIF3IUL3_Pointer(itkInPlaceImageFilterIF3IUL3_Pointer const & p);
     itkInPlaceImageFilterIF3IUL3_Pointer(itkInPlaceImageFilterIF3IUL3 * p);
     ~itkInPlaceImageFilterIF3IUL3_Pointer();
     itkInPlaceImageFilterIF3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIF3IUL3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIF3IUL3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIF3IUL3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIF3IUL3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIF3IUL3_Pointer const & r) const;
     itkInPlaceImageFilterIF3IUL3_Pointer & operator=(itkInPlaceImageFilterIF3IUL3_Pointer const & r);
     itkInPlaceImageFilterIF3IUL3_Pointer & operator=(itkInPlaceImageFilterIF3IUL3 * r);
     itkInPlaceImageFilterIF3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIF3IUS3 : public itkImageToImageFilterIF3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIF3IUS3(itkInPlaceImageFilterIF3IUS3 const & arg0);
     void operator=(itkInPlaceImageFilterIF3IUS3 const & arg0);
   protected:
     itkInPlaceImageFilterIF3IUS3();
     ~itkInPlaceImageFilterIF3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIF3IUS3_Pointer {
   public:
     itkInPlaceImageFilterIF3IUS3_Pointer();
     itkInPlaceImageFilterIF3IUS3_Pointer(itkInPlaceImageFilterIF3IUS3_Pointer const & p);
     itkInPlaceImageFilterIF3IUS3_Pointer(itkInPlaceImageFilterIF3IUS3 * p);
     ~itkInPlaceImageFilterIF3IUS3_Pointer();
     itkInPlaceImageFilterIF3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIF3IUS3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIF3IUS3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIF3IUS3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIF3IUS3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIF3IUS3_Pointer const & r) const;
     itkInPlaceImageFilterIF3IUS3_Pointer & operator=(itkInPlaceImageFilterIF3IUS3_Pointer const & r);
     itkInPlaceImageFilterIF3IUS3_Pointer & operator=(itkInPlaceImageFilterIF3IUS3 * r);
     itkInPlaceImageFilterIF3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIRGBAUC2IRGBAUC2 : public itkImageToImageFilterIRGBAUC2IRGBAUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIRGBAUC2IRGBAUC2(itkInPlaceImageFilterIRGBAUC2IRGBAUC2 const & arg0);
     void operator=(itkInPlaceImageFilterIRGBAUC2IRGBAUC2 const & arg0);
   protected:
     itkInPlaceImageFilterIRGBAUC2IRGBAUC2();
     ~itkInPlaceImageFilterIRGBAUC2IRGBAUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIRGBAUC2IRGBAUC2_Pointer {
   public:
     itkInPlaceImageFilterIRGBAUC2IRGBAUC2_Pointer();
     itkInPlaceImageFilterIRGBAUC2IRGBAUC2_Pointer(itkInPlaceImageFilterIRGBAUC2IRGBAUC2_Pointer const & p);
     itkInPlaceImageFilterIRGBAUC2IRGBAUC2_Pointer(itkInPlaceImageFilterIRGBAUC2IRGBAUC2 * p);
     ~itkInPlaceImageFilterIRGBAUC2IRGBAUC2_Pointer();
     itkInPlaceImageFilterIRGBAUC2IRGBAUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIRGBAUC2IRGBAUC2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIRGBAUC2IRGBAUC2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIRGBAUC2IRGBAUC2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIRGBAUC2IRGBAUC2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIRGBAUC2IRGBAUC2_Pointer const & r) const;
     itkInPlaceImageFilterIRGBAUC2IRGBAUC2_Pointer & operator=(itkInPlaceImageFilterIRGBAUC2IRGBAUC2_Pointer const & r);
     itkInPlaceImageFilterIRGBAUC2IRGBAUC2_Pointer & operator=(itkInPlaceImageFilterIRGBAUC2IRGBAUC2 * r);
     itkInPlaceImageFilterIRGBAUC2IRGBAUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIRGBAUC2IRGBAUS2 : public itkImageToImageFilterIRGBAUC2IRGBAUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIRGBAUC2IRGBAUS2(itkInPlaceImageFilterIRGBAUC2IRGBAUS2 const & arg0);
     void operator=(itkInPlaceImageFilterIRGBAUC2IRGBAUS2 const & arg0);
   protected:
     itkInPlaceImageFilterIRGBAUC2IRGBAUS2();
     ~itkInPlaceImageFilterIRGBAUC2IRGBAUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIRGBAUC2IRGBAUS2_Pointer {
   public:
     itkInPlaceImageFilterIRGBAUC2IRGBAUS2_Pointer();
     itkInPlaceImageFilterIRGBAUC2IRGBAUS2_Pointer(itkInPlaceImageFilterIRGBAUC2IRGBAUS2_Pointer const & p);
     itkInPlaceImageFilterIRGBAUC2IRGBAUS2_Pointer(itkInPlaceImageFilterIRGBAUC2IRGBAUS2 * p);
     ~itkInPlaceImageFilterIRGBAUC2IRGBAUS2_Pointer();
     itkInPlaceImageFilterIRGBAUC2IRGBAUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIRGBAUC2IRGBAUS2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIRGBAUC2IRGBAUS2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIRGBAUC2IRGBAUS2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIRGBAUC2IRGBAUS2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIRGBAUC2IRGBAUS2_Pointer const & r) const;
     itkInPlaceImageFilterIRGBAUC2IRGBAUS2_Pointer & operator=(itkInPlaceImageFilterIRGBAUC2IRGBAUS2_Pointer const & r);
     itkInPlaceImageFilterIRGBAUC2IRGBAUS2_Pointer & operator=(itkInPlaceImageFilterIRGBAUC2IRGBAUS2 * r);
     itkInPlaceImageFilterIRGBAUC2IRGBAUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIRGBAUC3IRGBAUC3 : public itkImageToImageFilterIRGBAUC3IRGBAUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIRGBAUC3IRGBAUC3(itkInPlaceImageFilterIRGBAUC3IRGBAUC3 const & arg0);
     void operator=(itkInPlaceImageFilterIRGBAUC3IRGBAUC3 const & arg0);
   protected:
     itkInPlaceImageFilterIRGBAUC3IRGBAUC3();
     ~itkInPlaceImageFilterIRGBAUC3IRGBAUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIRGBAUC3IRGBAUC3_Pointer {
   public:
     itkInPlaceImageFilterIRGBAUC3IRGBAUC3_Pointer();
     itkInPlaceImageFilterIRGBAUC3IRGBAUC3_Pointer(itkInPlaceImageFilterIRGBAUC3IRGBAUC3_Pointer const & p);
     itkInPlaceImageFilterIRGBAUC3IRGBAUC3_Pointer(itkInPlaceImageFilterIRGBAUC3IRGBAUC3 * p);
     ~itkInPlaceImageFilterIRGBAUC3IRGBAUC3_Pointer();
     itkInPlaceImageFilterIRGBAUC3IRGBAUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIRGBAUC3IRGBAUC3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIRGBAUC3IRGBAUC3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIRGBAUC3IRGBAUC3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIRGBAUC3IRGBAUC3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIRGBAUC3IRGBAUC3_Pointer const & r) const;
     itkInPlaceImageFilterIRGBAUC3IRGBAUC3_Pointer & operator=(itkInPlaceImageFilterIRGBAUC3IRGBAUC3_Pointer const & r);
     itkInPlaceImageFilterIRGBAUC3IRGBAUC3_Pointer & operator=(itkInPlaceImageFilterIRGBAUC3IRGBAUC3 * r);
     itkInPlaceImageFilterIRGBAUC3IRGBAUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIRGBAUC3IRGBAUS3 : public itkImageToImageFilterIRGBAUC3IRGBAUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIRGBAUC3IRGBAUS3(itkInPlaceImageFilterIRGBAUC3IRGBAUS3 const & arg0);
     void operator=(itkInPlaceImageFilterIRGBAUC3IRGBAUS3 const & arg0);
   protected:
     itkInPlaceImageFilterIRGBAUC3IRGBAUS3();
     ~itkInPlaceImageFilterIRGBAUC3IRGBAUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIRGBAUC3IRGBAUS3_Pointer {
   public:
     itkInPlaceImageFilterIRGBAUC3IRGBAUS3_Pointer();
     itkInPlaceImageFilterIRGBAUC3IRGBAUS3_Pointer(itkInPlaceImageFilterIRGBAUC3IRGBAUS3_Pointer const & p);
     itkInPlaceImageFilterIRGBAUC3IRGBAUS3_Pointer(itkInPlaceImageFilterIRGBAUC3IRGBAUS3 * p);
     ~itkInPlaceImageFilterIRGBAUC3IRGBAUS3_Pointer();
     itkInPlaceImageFilterIRGBAUC3IRGBAUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIRGBAUC3IRGBAUS3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIRGBAUC3IRGBAUS3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIRGBAUC3IRGBAUS3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIRGBAUC3IRGBAUS3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIRGBAUC3IRGBAUS3_Pointer const & r) const;
     itkInPlaceImageFilterIRGBAUC3IRGBAUS3_Pointer & operator=(itkInPlaceImageFilterIRGBAUC3IRGBAUS3_Pointer const & r);
     itkInPlaceImageFilterIRGBAUC3IRGBAUS3_Pointer & operator=(itkInPlaceImageFilterIRGBAUC3IRGBAUS3 * r);
     itkInPlaceImageFilterIRGBAUC3IRGBAUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIRGBAUS2IRGBAUC2 : public itkImageToImageFilterIRGBAUS2IRGBAUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIRGBAUS2IRGBAUC2(itkInPlaceImageFilterIRGBAUS2IRGBAUC2 const & arg0);
     void operator=(itkInPlaceImageFilterIRGBAUS2IRGBAUC2 const & arg0);
   protected:
     itkInPlaceImageFilterIRGBAUS2IRGBAUC2();
     ~itkInPlaceImageFilterIRGBAUS2IRGBAUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIRGBAUS2IRGBAUC2_Pointer {
   public:
     itkInPlaceImageFilterIRGBAUS2IRGBAUC2_Pointer();
     itkInPlaceImageFilterIRGBAUS2IRGBAUC2_Pointer(itkInPlaceImageFilterIRGBAUS2IRGBAUC2_Pointer const & p);
     itkInPlaceImageFilterIRGBAUS2IRGBAUC2_Pointer(itkInPlaceImageFilterIRGBAUS2IRGBAUC2 * p);
     ~itkInPlaceImageFilterIRGBAUS2IRGBAUC2_Pointer();
     itkInPlaceImageFilterIRGBAUS2IRGBAUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIRGBAUS2IRGBAUC2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIRGBAUS2IRGBAUC2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIRGBAUS2IRGBAUC2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIRGBAUS2IRGBAUC2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIRGBAUS2IRGBAUC2_Pointer const & r) const;
     itkInPlaceImageFilterIRGBAUS2IRGBAUC2_Pointer & operator=(itkInPlaceImageFilterIRGBAUS2IRGBAUC2_Pointer const & r);
     itkInPlaceImageFilterIRGBAUS2IRGBAUC2_Pointer & operator=(itkInPlaceImageFilterIRGBAUS2IRGBAUC2 * r);
     itkInPlaceImageFilterIRGBAUS2IRGBAUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIRGBAUS2IRGBAUS2 : public itkImageToImageFilterIRGBAUS2IRGBAUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIRGBAUS2IRGBAUS2(itkInPlaceImageFilterIRGBAUS2IRGBAUS2 const & arg0);
     void operator=(itkInPlaceImageFilterIRGBAUS2IRGBAUS2 const & arg0);
   protected:
     itkInPlaceImageFilterIRGBAUS2IRGBAUS2();
     ~itkInPlaceImageFilterIRGBAUS2IRGBAUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIRGBAUS2IRGBAUS2_Pointer {
   public:
     itkInPlaceImageFilterIRGBAUS2IRGBAUS2_Pointer();
     itkInPlaceImageFilterIRGBAUS2IRGBAUS2_Pointer(itkInPlaceImageFilterIRGBAUS2IRGBAUS2_Pointer const & p);
     itkInPlaceImageFilterIRGBAUS2IRGBAUS2_Pointer(itkInPlaceImageFilterIRGBAUS2IRGBAUS2 * p);
     ~itkInPlaceImageFilterIRGBAUS2IRGBAUS2_Pointer();
     itkInPlaceImageFilterIRGBAUS2IRGBAUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIRGBAUS2IRGBAUS2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIRGBAUS2IRGBAUS2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIRGBAUS2IRGBAUS2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIRGBAUS2IRGBAUS2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIRGBAUS2IRGBAUS2_Pointer const & r) const;
     itkInPlaceImageFilterIRGBAUS2IRGBAUS2_Pointer & operator=(itkInPlaceImageFilterIRGBAUS2IRGBAUS2_Pointer const & r);
     itkInPlaceImageFilterIRGBAUS2IRGBAUS2_Pointer & operator=(itkInPlaceImageFilterIRGBAUS2IRGBAUS2 * r);
     itkInPlaceImageFilterIRGBAUS2IRGBAUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIRGBAUS2IUS2 : public itkImageToImageFilterIRGBAUS2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIRGBAUS2IUS2(itkInPlaceImageFilterIRGBAUS2IUS2 const & arg0);
     void operator=(itkInPlaceImageFilterIRGBAUS2IUS2 const & arg0);
   protected:
     itkInPlaceImageFilterIRGBAUS2IUS2();
     ~itkInPlaceImageFilterIRGBAUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIRGBAUS2IUS2_Pointer {
   public:
     itkInPlaceImageFilterIRGBAUS2IUS2_Pointer();
     itkInPlaceImageFilterIRGBAUS2IUS2_Pointer(itkInPlaceImageFilterIRGBAUS2IUS2_Pointer const & p);
     itkInPlaceImageFilterIRGBAUS2IUS2_Pointer(itkInPlaceImageFilterIRGBAUS2IUS2 * p);
     ~itkInPlaceImageFilterIRGBAUS2IUS2_Pointer();
     itkInPlaceImageFilterIRGBAUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIRGBAUS2IUS2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIRGBAUS2IUS2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIRGBAUS2IUS2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIRGBAUS2IUS2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIRGBAUS2IUS2_Pointer const & r) const;
     itkInPlaceImageFilterIRGBAUS2IUS2_Pointer & operator=(itkInPlaceImageFilterIRGBAUS2IUS2_Pointer const & r);
     itkInPlaceImageFilterIRGBAUS2IUS2_Pointer & operator=(itkInPlaceImageFilterIRGBAUS2IUS2 * r);
     itkInPlaceImageFilterIRGBAUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIRGBAUS3IRGBAUC3 : public itkImageToImageFilterIRGBAUS3IRGBAUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIRGBAUS3IRGBAUC3(itkInPlaceImageFilterIRGBAUS3IRGBAUC3 const & arg0);
     void operator=(itkInPlaceImageFilterIRGBAUS3IRGBAUC3 const & arg0);
   protected:
     itkInPlaceImageFilterIRGBAUS3IRGBAUC3();
     ~itkInPlaceImageFilterIRGBAUS3IRGBAUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIRGBAUS3IRGBAUC3_Pointer {
   public:
     itkInPlaceImageFilterIRGBAUS3IRGBAUC3_Pointer();
     itkInPlaceImageFilterIRGBAUS3IRGBAUC3_Pointer(itkInPlaceImageFilterIRGBAUS3IRGBAUC3_Pointer const & p);
     itkInPlaceImageFilterIRGBAUS3IRGBAUC3_Pointer(itkInPlaceImageFilterIRGBAUS3IRGBAUC3 * p);
     ~itkInPlaceImageFilterIRGBAUS3IRGBAUC3_Pointer();
     itkInPlaceImageFilterIRGBAUS3IRGBAUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIRGBAUS3IRGBAUC3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIRGBAUS3IRGBAUC3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIRGBAUS3IRGBAUC3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIRGBAUS3IRGBAUC3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIRGBAUS3IRGBAUC3_Pointer const & r) const;
     itkInPlaceImageFilterIRGBAUS3IRGBAUC3_Pointer & operator=(itkInPlaceImageFilterIRGBAUS3IRGBAUC3_Pointer const & r);
     itkInPlaceImageFilterIRGBAUS3IRGBAUC3_Pointer & operator=(itkInPlaceImageFilterIRGBAUS3IRGBAUC3 * r);
     itkInPlaceImageFilterIRGBAUS3IRGBAUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIRGBAUS3IRGBAUS3 : public itkImageToImageFilterIRGBAUS3IRGBAUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIRGBAUS3IRGBAUS3(itkInPlaceImageFilterIRGBAUS3IRGBAUS3 const & arg0);
     void operator=(itkInPlaceImageFilterIRGBAUS3IRGBAUS3 const & arg0);
   protected:
     itkInPlaceImageFilterIRGBAUS3IRGBAUS3();
     ~itkInPlaceImageFilterIRGBAUS3IRGBAUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIRGBAUS3IRGBAUS3_Pointer {
   public:
     itkInPlaceImageFilterIRGBAUS3IRGBAUS3_Pointer();
     itkInPlaceImageFilterIRGBAUS3IRGBAUS3_Pointer(itkInPlaceImageFilterIRGBAUS3IRGBAUS3_Pointer const & p);
     itkInPlaceImageFilterIRGBAUS3IRGBAUS3_Pointer(itkInPlaceImageFilterIRGBAUS3IRGBAUS3 * p);
     ~itkInPlaceImageFilterIRGBAUS3IRGBAUS3_Pointer();
     itkInPlaceImageFilterIRGBAUS3IRGBAUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIRGBAUS3IRGBAUS3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIRGBAUS3IRGBAUS3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIRGBAUS3IRGBAUS3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIRGBAUS3IRGBAUS3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIRGBAUS3IRGBAUS3_Pointer const & r) const;
     itkInPlaceImageFilterIRGBAUS3IRGBAUS3_Pointer & operator=(itkInPlaceImageFilterIRGBAUS3IRGBAUS3_Pointer const & r);
     itkInPlaceImageFilterIRGBAUS3IRGBAUS3_Pointer & operator=(itkInPlaceImageFilterIRGBAUS3IRGBAUS3 * r);
     itkInPlaceImageFilterIRGBAUS3IRGBAUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIRGBAUS3IUS3 : public itkImageToImageFilterIRGBAUS3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIRGBAUS3IUS3(itkInPlaceImageFilterIRGBAUS3IUS3 const & arg0);
     void operator=(itkInPlaceImageFilterIRGBAUS3IUS3 const & arg0);
   protected:
     itkInPlaceImageFilterIRGBAUS3IUS3();
     ~itkInPlaceImageFilterIRGBAUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIRGBAUS3IUS3_Pointer {
   public:
     itkInPlaceImageFilterIRGBAUS3IUS3_Pointer();
     itkInPlaceImageFilterIRGBAUS3IUS3_Pointer(itkInPlaceImageFilterIRGBAUS3IUS3_Pointer const & p);
     itkInPlaceImageFilterIRGBAUS3IUS3_Pointer(itkInPlaceImageFilterIRGBAUS3IUS3 * p);
     ~itkInPlaceImageFilterIRGBAUS3IUS3_Pointer();
     itkInPlaceImageFilterIRGBAUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIRGBAUS3IUS3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIRGBAUS3IUS3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIRGBAUS3IUS3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIRGBAUS3IUS3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIRGBAUS3IUS3_Pointer const & r) const;
     itkInPlaceImageFilterIRGBAUS3IUS3_Pointer & operator=(itkInPlaceImageFilterIRGBAUS3IUS3_Pointer const & r);
     itkInPlaceImageFilterIRGBAUS3IUS3_Pointer & operator=(itkInPlaceImageFilterIRGBAUS3IUS3 * r);
     itkInPlaceImageFilterIRGBAUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIRGBUC2IRGBUC2 : public itkImageToImageFilterIRGBUC2IRGBUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIRGBUC2IRGBUC2(itkInPlaceImageFilterIRGBUC2IRGBUC2 const & arg0);
     void operator=(itkInPlaceImageFilterIRGBUC2IRGBUC2 const & arg0);
   protected:
     itkInPlaceImageFilterIRGBUC2IRGBUC2();
     ~itkInPlaceImageFilterIRGBUC2IRGBUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIRGBUC2IRGBUC2_Pointer {
   public:
     itkInPlaceImageFilterIRGBUC2IRGBUC2_Pointer();
     itkInPlaceImageFilterIRGBUC2IRGBUC2_Pointer(itkInPlaceImageFilterIRGBUC2IRGBUC2_Pointer const & p);
     itkInPlaceImageFilterIRGBUC2IRGBUC2_Pointer(itkInPlaceImageFilterIRGBUC2IRGBUC2 * p);
     ~itkInPlaceImageFilterIRGBUC2IRGBUC2_Pointer();
     itkInPlaceImageFilterIRGBUC2IRGBUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIRGBUC2IRGBUC2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIRGBUC2IRGBUC2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIRGBUC2IRGBUC2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIRGBUC2IRGBUC2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIRGBUC2IRGBUC2_Pointer const & r) const;
     itkInPlaceImageFilterIRGBUC2IRGBUC2_Pointer & operator=(itkInPlaceImageFilterIRGBUC2IRGBUC2_Pointer const & r);
     itkInPlaceImageFilterIRGBUC2IRGBUC2_Pointer & operator=(itkInPlaceImageFilterIRGBUC2IRGBUC2 * r);
     itkInPlaceImageFilterIRGBUC2IRGBUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIRGBUC2IRGBUS2 : public itkImageToImageFilterIRGBUC2IRGBUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIRGBUC2IRGBUS2(itkInPlaceImageFilterIRGBUC2IRGBUS2 const & arg0);
     void operator=(itkInPlaceImageFilterIRGBUC2IRGBUS2 const & arg0);
   protected:
     itkInPlaceImageFilterIRGBUC2IRGBUS2();
     ~itkInPlaceImageFilterIRGBUC2IRGBUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIRGBUC2IRGBUS2_Pointer {
   public:
     itkInPlaceImageFilterIRGBUC2IRGBUS2_Pointer();
     itkInPlaceImageFilterIRGBUC2IRGBUS2_Pointer(itkInPlaceImageFilterIRGBUC2IRGBUS2_Pointer const & p);
     itkInPlaceImageFilterIRGBUC2IRGBUS2_Pointer(itkInPlaceImageFilterIRGBUC2IRGBUS2 * p);
     ~itkInPlaceImageFilterIRGBUC2IRGBUS2_Pointer();
     itkInPlaceImageFilterIRGBUC2IRGBUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIRGBUC2IRGBUS2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIRGBUC2IRGBUS2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIRGBUC2IRGBUS2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIRGBUC2IRGBUS2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIRGBUC2IRGBUS2_Pointer const & r) const;
     itkInPlaceImageFilterIRGBUC2IRGBUS2_Pointer & operator=(itkInPlaceImageFilterIRGBUC2IRGBUS2_Pointer const & r);
     itkInPlaceImageFilterIRGBUC2IRGBUS2_Pointer & operator=(itkInPlaceImageFilterIRGBUC2IRGBUS2 * r);
     itkInPlaceImageFilterIRGBUC2IRGBUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIRGBUC3IRGBUC3 : public itkImageToImageFilterIRGBUC3IRGBUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIRGBUC3IRGBUC3(itkInPlaceImageFilterIRGBUC3IRGBUC3 const & arg0);
     void operator=(itkInPlaceImageFilterIRGBUC3IRGBUC3 const & arg0);
   protected:
     itkInPlaceImageFilterIRGBUC3IRGBUC3();
     ~itkInPlaceImageFilterIRGBUC3IRGBUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIRGBUC3IRGBUC3_Pointer {
   public:
     itkInPlaceImageFilterIRGBUC3IRGBUC3_Pointer();
     itkInPlaceImageFilterIRGBUC3IRGBUC3_Pointer(itkInPlaceImageFilterIRGBUC3IRGBUC3_Pointer const & p);
     itkInPlaceImageFilterIRGBUC3IRGBUC3_Pointer(itkInPlaceImageFilterIRGBUC3IRGBUC3 * p);
     ~itkInPlaceImageFilterIRGBUC3IRGBUC3_Pointer();
     itkInPlaceImageFilterIRGBUC3IRGBUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIRGBUC3IRGBUC3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIRGBUC3IRGBUC3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIRGBUC3IRGBUC3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIRGBUC3IRGBUC3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIRGBUC3IRGBUC3_Pointer const & r) const;
     itkInPlaceImageFilterIRGBUC3IRGBUC3_Pointer & operator=(itkInPlaceImageFilterIRGBUC3IRGBUC3_Pointer const & r);
     itkInPlaceImageFilterIRGBUC3IRGBUC3_Pointer & operator=(itkInPlaceImageFilterIRGBUC3IRGBUC3 * r);
     itkInPlaceImageFilterIRGBUC3IRGBUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIRGBUC3IRGBUS3 : public itkImageToImageFilterIRGBUC3IRGBUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIRGBUC3IRGBUS3(itkInPlaceImageFilterIRGBUC3IRGBUS3 const & arg0);
     void operator=(itkInPlaceImageFilterIRGBUC3IRGBUS3 const & arg0);
   protected:
     itkInPlaceImageFilterIRGBUC3IRGBUS3();
     ~itkInPlaceImageFilterIRGBUC3IRGBUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIRGBUC3IRGBUS3_Pointer {
   public:
     itkInPlaceImageFilterIRGBUC3IRGBUS3_Pointer();
     itkInPlaceImageFilterIRGBUC3IRGBUS3_Pointer(itkInPlaceImageFilterIRGBUC3IRGBUS3_Pointer const & p);
     itkInPlaceImageFilterIRGBUC3IRGBUS3_Pointer(itkInPlaceImageFilterIRGBUC3IRGBUS3 * p);
     ~itkInPlaceImageFilterIRGBUC3IRGBUS3_Pointer();
     itkInPlaceImageFilterIRGBUC3IRGBUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIRGBUC3IRGBUS3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIRGBUC3IRGBUS3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIRGBUC3IRGBUS3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIRGBUC3IRGBUS3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIRGBUC3IRGBUS3_Pointer const & r) const;
     itkInPlaceImageFilterIRGBUC3IRGBUS3_Pointer & operator=(itkInPlaceImageFilterIRGBUC3IRGBUS3_Pointer const & r);
     itkInPlaceImageFilterIRGBUC3IRGBUS3_Pointer & operator=(itkInPlaceImageFilterIRGBUC3IRGBUS3 * r);
     itkInPlaceImageFilterIRGBUC3IRGBUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIRGBUS2IRGBUC2 : public itkImageToImageFilterIRGBUS2IRGBUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIRGBUS2IRGBUC2(itkInPlaceImageFilterIRGBUS2IRGBUC2 const & arg0);
     void operator=(itkInPlaceImageFilterIRGBUS2IRGBUC2 const & arg0);
   protected:
     itkInPlaceImageFilterIRGBUS2IRGBUC2();
     ~itkInPlaceImageFilterIRGBUS2IRGBUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIRGBUS2IRGBUC2_Pointer {
   public:
     itkInPlaceImageFilterIRGBUS2IRGBUC2_Pointer();
     itkInPlaceImageFilterIRGBUS2IRGBUC2_Pointer(itkInPlaceImageFilterIRGBUS2IRGBUC2_Pointer const & p);
     itkInPlaceImageFilterIRGBUS2IRGBUC2_Pointer(itkInPlaceImageFilterIRGBUS2IRGBUC2 * p);
     ~itkInPlaceImageFilterIRGBUS2IRGBUC2_Pointer();
     itkInPlaceImageFilterIRGBUS2IRGBUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIRGBUS2IRGBUC2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIRGBUS2IRGBUC2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIRGBUS2IRGBUC2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIRGBUS2IRGBUC2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIRGBUS2IRGBUC2_Pointer const & r) const;
     itkInPlaceImageFilterIRGBUS2IRGBUC2_Pointer & operator=(itkInPlaceImageFilterIRGBUS2IRGBUC2_Pointer const & r);
     itkInPlaceImageFilterIRGBUS2IRGBUC2_Pointer & operator=(itkInPlaceImageFilterIRGBUS2IRGBUC2 * r);
     itkInPlaceImageFilterIRGBUS2IRGBUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIRGBUS2IRGBUS2 : public itkImageToImageFilterIRGBUS2IRGBUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIRGBUS2IRGBUS2(itkInPlaceImageFilterIRGBUS2IRGBUS2 const & arg0);
     void operator=(itkInPlaceImageFilterIRGBUS2IRGBUS2 const & arg0);
   protected:
     itkInPlaceImageFilterIRGBUS2IRGBUS2();
     ~itkInPlaceImageFilterIRGBUS2IRGBUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIRGBUS2IRGBUS2_Pointer {
   public:
     itkInPlaceImageFilterIRGBUS2IRGBUS2_Pointer();
     itkInPlaceImageFilterIRGBUS2IRGBUS2_Pointer(itkInPlaceImageFilterIRGBUS2IRGBUS2_Pointer const & p);
     itkInPlaceImageFilterIRGBUS2IRGBUS2_Pointer(itkInPlaceImageFilterIRGBUS2IRGBUS2 * p);
     ~itkInPlaceImageFilterIRGBUS2IRGBUS2_Pointer();
     itkInPlaceImageFilterIRGBUS2IRGBUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIRGBUS2IRGBUS2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIRGBUS2IRGBUS2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIRGBUS2IRGBUS2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIRGBUS2IRGBUS2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIRGBUS2IRGBUS2_Pointer const & r) const;
     itkInPlaceImageFilterIRGBUS2IRGBUS2_Pointer & operator=(itkInPlaceImageFilterIRGBUS2IRGBUS2_Pointer const & r);
     itkInPlaceImageFilterIRGBUS2IRGBUS2_Pointer & operator=(itkInPlaceImageFilterIRGBUS2IRGBUS2 * r);
     itkInPlaceImageFilterIRGBUS2IRGBUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIRGBUS2IUS2 : public itkImageToImageFilterIRGBUS2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIRGBUS2IUS2(itkInPlaceImageFilterIRGBUS2IUS2 const & arg0);
     void operator=(itkInPlaceImageFilterIRGBUS2IUS2 const & arg0);
   protected:
     itkInPlaceImageFilterIRGBUS2IUS2();
     ~itkInPlaceImageFilterIRGBUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIRGBUS2IUS2_Pointer {
   public:
     itkInPlaceImageFilterIRGBUS2IUS2_Pointer();
     itkInPlaceImageFilterIRGBUS2IUS2_Pointer(itkInPlaceImageFilterIRGBUS2IUS2_Pointer const & p);
     itkInPlaceImageFilterIRGBUS2IUS2_Pointer(itkInPlaceImageFilterIRGBUS2IUS2 * p);
     ~itkInPlaceImageFilterIRGBUS2IUS2_Pointer();
     itkInPlaceImageFilterIRGBUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIRGBUS2IUS2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIRGBUS2IUS2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIRGBUS2IUS2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIRGBUS2IUS2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIRGBUS2IUS2_Pointer const & r) const;
     itkInPlaceImageFilterIRGBUS2IUS2_Pointer & operator=(itkInPlaceImageFilterIRGBUS2IUS2_Pointer const & r);
     itkInPlaceImageFilterIRGBUS2IUS2_Pointer & operator=(itkInPlaceImageFilterIRGBUS2IUS2 * r);
     itkInPlaceImageFilterIRGBUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIRGBUS3IRGBUC3 : public itkImageToImageFilterIRGBUS3IRGBUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIRGBUS3IRGBUC3(itkInPlaceImageFilterIRGBUS3IRGBUC3 const & arg0);
     void operator=(itkInPlaceImageFilterIRGBUS3IRGBUC3 const & arg0);
   protected:
     itkInPlaceImageFilterIRGBUS3IRGBUC3();
     ~itkInPlaceImageFilterIRGBUS3IRGBUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIRGBUS3IRGBUC3_Pointer {
   public:
     itkInPlaceImageFilterIRGBUS3IRGBUC3_Pointer();
     itkInPlaceImageFilterIRGBUS3IRGBUC3_Pointer(itkInPlaceImageFilterIRGBUS3IRGBUC3_Pointer const & p);
     itkInPlaceImageFilterIRGBUS3IRGBUC3_Pointer(itkInPlaceImageFilterIRGBUS3IRGBUC3 * p);
     ~itkInPlaceImageFilterIRGBUS3IRGBUC3_Pointer();
     itkInPlaceImageFilterIRGBUS3IRGBUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIRGBUS3IRGBUC3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIRGBUS3IRGBUC3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIRGBUS3IRGBUC3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIRGBUS3IRGBUC3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIRGBUS3IRGBUC3_Pointer const & r) const;
     itkInPlaceImageFilterIRGBUS3IRGBUC3_Pointer & operator=(itkInPlaceImageFilterIRGBUS3IRGBUC3_Pointer const & r);
     itkInPlaceImageFilterIRGBUS3IRGBUC3_Pointer & operator=(itkInPlaceImageFilterIRGBUS3IRGBUC3 * r);
     itkInPlaceImageFilterIRGBUS3IRGBUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIRGBUS3IRGBUS3 : public itkImageToImageFilterIRGBUS3IRGBUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIRGBUS3IRGBUS3(itkInPlaceImageFilterIRGBUS3IRGBUS3 const & arg0);
     void operator=(itkInPlaceImageFilterIRGBUS3IRGBUS3 const & arg0);
   protected:
     itkInPlaceImageFilterIRGBUS3IRGBUS3();
     ~itkInPlaceImageFilterIRGBUS3IRGBUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIRGBUS3IRGBUS3_Pointer {
   public:
     itkInPlaceImageFilterIRGBUS3IRGBUS3_Pointer();
     itkInPlaceImageFilterIRGBUS3IRGBUS3_Pointer(itkInPlaceImageFilterIRGBUS3IRGBUS3_Pointer const & p);
     itkInPlaceImageFilterIRGBUS3IRGBUS3_Pointer(itkInPlaceImageFilterIRGBUS3IRGBUS3 * p);
     ~itkInPlaceImageFilterIRGBUS3IRGBUS3_Pointer();
     itkInPlaceImageFilterIRGBUS3IRGBUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIRGBUS3IRGBUS3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIRGBUS3IRGBUS3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIRGBUS3IRGBUS3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIRGBUS3IRGBUS3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIRGBUS3IRGBUS3_Pointer const & r) const;
     itkInPlaceImageFilterIRGBUS3IRGBUS3_Pointer & operator=(itkInPlaceImageFilterIRGBUS3IRGBUS3_Pointer const & r);
     itkInPlaceImageFilterIRGBUS3IRGBUS3_Pointer & operator=(itkInPlaceImageFilterIRGBUS3IRGBUS3 * r);
     itkInPlaceImageFilterIRGBUS3IRGBUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIRGBUS3IUS3 : public itkImageToImageFilterIRGBUS3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIRGBUS3IUS3(itkInPlaceImageFilterIRGBUS3IUS3 const & arg0);
     void operator=(itkInPlaceImageFilterIRGBUS3IUS3 const & arg0);
   protected:
     itkInPlaceImageFilterIRGBUS3IUS3();
     ~itkInPlaceImageFilterIRGBUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIRGBUS3IUS3_Pointer {
   public:
     itkInPlaceImageFilterIRGBUS3IUS3_Pointer();
     itkInPlaceImageFilterIRGBUS3IUS3_Pointer(itkInPlaceImageFilterIRGBUS3IUS3_Pointer const & p);
     itkInPlaceImageFilterIRGBUS3IUS3_Pointer(itkInPlaceImageFilterIRGBUS3IUS3 * p);
     ~itkInPlaceImageFilterIRGBUS3IUS3_Pointer();
     itkInPlaceImageFilterIRGBUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIRGBUS3IUS3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIRGBUS3IUS3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIRGBUS3IUS3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIRGBUS3IUS3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIRGBUS3IUS3_Pointer const & r) const;
     itkInPlaceImageFilterIRGBUS3IUS3_Pointer & operator=(itkInPlaceImageFilterIRGBUS3IUS3_Pointer const & r);
     itkInPlaceImageFilterIRGBUS3IUS3_Pointer & operator=(itkInPlaceImageFilterIRGBUS3IUS3 * r);
     itkInPlaceImageFilterIRGBUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUC2ID2 : public itkImageToImageFilterIUC2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUC2ID2(itkInPlaceImageFilterIUC2ID2 const & arg0);
     void operator=(itkInPlaceImageFilterIUC2ID2 const & arg0);
   protected:
     itkInPlaceImageFilterIUC2ID2();
     ~itkInPlaceImageFilterIUC2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUC2ID2_Pointer {
   public:
     itkInPlaceImageFilterIUC2ID2_Pointer();
     itkInPlaceImageFilterIUC2ID2_Pointer(itkInPlaceImageFilterIUC2ID2_Pointer const & p);
     itkInPlaceImageFilterIUC2ID2_Pointer(itkInPlaceImageFilterIUC2ID2 * p);
     ~itkInPlaceImageFilterIUC2ID2_Pointer();
     itkInPlaceImageFilterIUC2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUC2ID2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUC2ID2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUC2ID2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUC2ID2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUC2ID2_Pointer const & r) const;
     itkInPlaceImageFilterIUC2ID2_Pointer & operator=(itkInPlaceImageFilterIUC2ID2_Pointer const & r);
     itkInPlaceImageFilterIUC2ID2_Pointer & operator=(itkInPlaceImageFilterIUC2ID2 * r);
     itkInPlaceImageFilterIUC2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUC2IF2 : public itkImageToImageFilterIUC2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUC2IF2(itkInPlaceImageFilterIUC2IF2 const & arg0);
     void operator=(itkInPlaceImageFilterIUC2IF2 const & arg0);
   protected:
     itkInPlaceImageFilterIUC2IF2();
     ~itkInPlaceImageFilterIUC2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUC2IF2_Pointer {
   public:
     itkInPlaceImageFilterIUC2IF2_Pointer();
     itkInPlaceImageFilterIUC2IF2_Pointer(itkInPlaceImageFilterIUC2IF2_Pointer const & p);
     itkInPlaceImageFilterIUC2IF2_Pointer(itkInPlaceImageFilterIUC2IF2 * p);
     ~itkInPlaceImageFilterIUC2IF2_Pointer();
     itkInPlaceImageFilterIUC2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUC2IF2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUC2IF2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUC2IF2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUC2IF2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUC2IF2_Pointer const & r) const;
     itkInPlaceImageFilterIUC2IF2_Pointer & operator=(itkInPlaceImageFilterIUC2IF2_Pointer const & r);
     itkInPlaceImageFilterIUC2IF2_Pointer & operator=(itkInPlaceImageFilterIUC2IF2 * r);
     itkInPlaceImageFilterIUC2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUC2IRGBAUS2 : public itkImageToImageFilterIUC2IRGBAUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUC2IRGBAUS2(itkInPlaceImageFilterIUC2IRGBAUS2 const & arg0);
     void operator=(itkInPlaceImageFilterIUC2IRGBAUS2 const & arg0);
   protected:
     itkInPlaceImageFilterIUC2IRGBAUS2();
     ~itkInPlaceImageFilterIUC2IRGBAUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUC2IRGBAUS2_Pointer {
   public:
     itkInPlaceImageFilterIUC2IRGBAUS2_Pointer();
     itkInPlaceImageFilterIUC2IRGBAUS2_Pointer(itkInPlaceImageFilterIUC2IRGBAUS2_Pointer const & p);
     itkInPlaceImageFilterIUC2IRGBAUS2_Pointer(itkInPlaceImageFilterIUC2IRGBAUS2 * p);
     ~itkInPlaceImageFilterIUC2IRGBAUS2_Pointer();
     itkInPlaceImageFilterIUC2IRGBAUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUC2IRGBAUS2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUC2IRGBAUS2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUC2IRGBAUS2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUC2IRGBAUS2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUC2IRGBAUS2_Pointer const & r) const;
     itkInPlaceImageFilterIUC2IRGBAUS2_Pointer & operator=(itkInPlaceImageFilterIUC2IRGBAUS2_Pointer const & r);
     itkInPlaceImageFilterIUC2IRGBAUS2_Pointer & operator=(itkInPlaceImageFilterIUC2IRGBAUS2 * r);
     itkInPlaceImageFilterIUC2IRGBAUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUC2IRGBUS2 : public itkImageToImageFilterIUC2IRGBUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUC2IRGBUS2(itkInPlaceImageFilterIUC2IRGBUS2 const & arg0);
     void operator=(itkInPlaceImageFilterIUC2IRGBUS2 const & arg0);
   protected:
     itkInPlaceImageFilterIUC2IRGBUS2();
     ~itkInPlaceImageFilterIUC2IRGBUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUC2IRGBUS2_Pointer {
   public:
     itkInPlaceImageFilterIUC2IRGBUS2_Pointer();
     itkInPlaceImageFilterIUC2IRGBUS2_Pointer(itkInPlaceImageFilterIUC2IRGBUS2_Pointer const & p);
     itkInPlaceImageFilterIUC2IRGBUS2_Pointer(itkInPlaceImageFilterIUC2IRGBUS2 * p);
     ~itkInPlaceImageFilterIUC2IRGBUS2_Pointer();
     itkInPlaceImageFilterIUC2IRGBUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUC2IRGBUS2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUC2IRGBUS2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUC2IRGBUS2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUC2IRGBUS2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUC2IRGBUS2_Pointer const & r) const;
     itkInPlaceImageFilterIUC2IRGBUS2_Pointer & operator=(itkInPlaceImageFilterIUC2IRGBUS2_Pointer const & r);
     itkInPlaceImageFilterIUC2IRGBUS2_Pointer & operator=(itkInPlaceImageFilterIUC2IRGBUS2 * r);
     itkInPlaceImageFilterIUC2IRGBUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUC2IUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUC2IUC2(itkInPlaceImageFilterIUC2IUC2 const & arg0);
     void operator=(itkInPlaceImageFilterIUC2IUC2 const & arg0);
   protected:
     itkInPlaceImageFilterIUC2IUC2();
     ~itkInPlaceImageFilterIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUC2IUC2_Pointer {
   public:
     itkInPlaceImageFilterIUC2IUC2_Pointer();
     itkInPlaceImageFilterIUC2IUC2_Pointer(itkInPlaceImageFilterIUC2IUC2_Pointer const & p);
     itkInPlaceImageFilterIUC2IUC2_Pointer(itkInPlaceImageFilterIUC2IUC2 * p);
     ~itkInPlaceImageFilterIUC2IUC2_Pointer();
     itkInPlaceImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUC2IUC2_Pointer const & r) const;
     itkInPlaceImageFilterIUC2IUC2_Pointer & operator=(itkInPlaceImageFilterIUC2IUC2_Pointer const & r);
     itkInPlaceImageFilterIUC2IUC2_Pointer & operator=(itkInPlaceImageFilterIUC2IUC2 * r);
     itkInPlaceImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUC2IUL2 : public itkImageToImageFilterIUC2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUC2IUL2(itkInPlaceImageFilterIUC2IUL2 const & arg0);
     void operator=(itkInPlaceImageFilterIUC2IUL2 const & arg0);
   protected:
     itkInPlaceImageFilterIUC2IUL2();
     ~itkInPlaceImageFilterIUC2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUC2IUL2_Pointer {
   public:
     itkInPlaceImageFilterIUC2IUL2_Pointer();
     itkInPlaceImageFilterIUC2IUL2_Pointer(itkInPlaceImageFilterIUC2IUL2_Pointer const & p);
     itkInPlaceImageFilterIUC2IUL2_Pointer(itkInPlaceImageFilterIUC2IUL2 * p);
     ~itkInPlaceImageFilterIUC2IUL2_Pointer();
     itkInPlaceImageFilterIUC2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUC2IUL2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUC2IUL2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUC2IUL2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUC2IUL2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUC2IUL2_Pointer const & r) const;
     itkInPlaceImageFilterIUC2IUL2_Pointer & operator=(itkInPlaceImageFilterIUC2IUL2_Pointer const & r);
     itkInPlaceImageFilterIUC2IUL2_Pointer & operator=(itkInPlaceImageFilterIUC2IUL2 * r);
     itkInPlaceImageFilterIUC2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUC2IUS2 : public itkImageToImageFilterIUC2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUC2IUS2(itkInPlaceImageFilterIUC2IUS2 const & arg0);
     void operator=(itkInPlaceImageFilterIUC2IUS2 const & arg0);
   protected:
     itkInPlaceImageFilterIUC2IUS2();
     ~itkInPlaceImageFilterIUC2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUC2IUS2_Pointer {
   public:
     itkInPlaceImageFilterIUC2IUS2_Pointer();
     itkInPlaceImageFilterIUC2IUS2_Pointer(itkInPlaceImageFilterIUC2IUS2_Pointer const & p);
     itkInPlaceImageFilterIUC2IUS2_Pointer(itkInPlaceImageFilterIUC2IUS2 * p);
     ~itkInPlaceImageFilterIUC2IUS2_Pointer();
     itkInPlaceImageFilterIUC2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUC2IUS2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUC2IUS2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUC2IUS2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUC2IUS2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUC2IUS2_Pointer const & r) const;
     itkInPlaceImageFilterIUC2IUS2_Pointer & operator=(itkInPlaceImageFilterIUC2IUS2_Pointer const & r);
     itkInPlaceImageFilterIUC2IUS2_Pointer & operator=(itkInPlaceImageFilterIUC2IUS2 * r);
     itkInPlaceImageFilterIUC2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUC3ID3 : public itkImageToImageFilterIUC3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUC3ID3(itkInPlaceImageFilterIUC3ID3 const & arg0);
     void operator=(itkInPlaceImageFilterIUC3ID3 const & arg0);
   protected:
     itkInPlaceImageFilterIUC3ID3();
     ~itkInPlaceImageFilterIUC3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUC3ID3_Pointer {
   public:
     itkInPlaceImageFilterIUC3ID3_Pointer();
     itkInPlaceImageFilterIUC3ID3_Pointer(itkInPlaceImageFilterIUC3ID3_Pointer const & p);
     itkInPlaceImageFilterIUC3ID3_Pointer(itkInPlaceImageFilterIUC3ID3 * p);
     ~itkInPlaceImageFilterIUC3ID3_Pointer();
     itkInPlaceImageFilterIUC3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUC3ID3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUC3ID3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUC3ID3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUC3ID3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUC3ID3_Pointer const & r) const;
     itkInPlaceImageFilterIUC3ID3_Pointer & operator=(itkInPlaceImageFilterIUC3ID3_Pointer const & r);
     itkInPlaceImageFilterIUC3ID3_Pointer & operator=(itkInPlaceImageFilterIUC3ID3 * r);
     itkInPlaceImageFilterIUC3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUC3IF3 : public itkImageToImageFilterIUC3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUC3IF3(itkInPlaceImageFilterIUC3IF3 const & arg0);
     void operator=(itkInPlaceImageFilterIUC3IF3 const & arg0);
   protected:
     itkInPlaceImageFilterIUC3IF3();
     ~itkInPlaceImageFilterIUC3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUC3IF3_Pointer {
   public:
     itkInPlaceImageFilterIUC3IF3_Pointer();
     itkInPlaceImageFilterIUC3IF3_Pointer(itkInPlaceImageFilterIUC3IF3_Pointer const & p);
     itkInPlaceImageFilterIUC3IF3_Pointer(itkInPlaceImageFilterIUC3IF3 * p);
     ~itkInPlaceImageFilterIUC3IF3_Pointer();
     itkInPlaceImageFilterIUC3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUC3IF3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUC3IF3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUC3IF3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUC3IF3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUC3IF3_Pointer const & r) const;
     itkInPlaceImageFilterIUC3IF3_Pointer & operator=(itkInPlaceImageFilterIUC3IF3_Pointer const & r);
     itkInPlaceImageFilterIUC3IF3_Pointer & operator=(itkInPlaceImageFilterIUC3IF3 * r);
     itkInPlaceImageFilterIUC3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUC3IRGBAUS3 : public itkImageToImageFilterIUC3IRGBAUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUC3IRGBAUS3(itkInPlaceImageFilterIUC3IRGBAUS3 const & arg0);
     void operator=(itkInPlaceImageFilterIUC3IRGBAUS3 const & arg0);
   protected:
     itkInPlaceImageFilterIUC3IRGBAUS3();
     ~itkInPlaceImageFilterIUC3IRGBAUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUC3IRGBAUS3_Pointer {
   public:
     itkInPlaceImageFilterIUC3IRGBAUS3_Pointer();
     itkInPlaceImageFilterIUC3IRGBAUS3_Pointer(itkInPlaceImageFilterIUC3IRGBAUS3_Pointer const & p);
     itkInPlaceImageFilterIUC3IRGBAUS3_Pointer(itkInPlaceImageFilterIUC3IRGBAUS3 * p);
     ~itkInPlaceImageFilterIUC3IRGBAUS3_Pointer();
     itkInPlaceImageFilterIUC3IRGBAUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUC3IRGBAUS3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUC3IRGBAUS3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUC3IRGBAUS3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUC3IRGBAUS3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUC3IRGBAUS3_Pointer const & r) const;
     itkInPlaceImageFilterIUC3IRGBAUS3_Pointer & operator=(itkInPlaceImageFilterIUC3IRGBAUS3_Pointer const & r);
     itkInPlaceImageFilterIUC3IRGBAUS3_Pointer & operator=(itkInPlaceImageFilterIUC3IRGBAUS3 * r);
     itkInPlaceImageFilterIUC3IRGBAUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUC3IRGBUS3 : public itkImageToImageFilterIUC3IRGBUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUC3IRGBUS3(itkInPlaceImageFilterIUC3IRGBUS3 const & arg0);
     void operator=(itkInPlaceImageFilterIUC3IRGBUS3 const & arg0);
   protected:
     itkInPlaceImageFilterIUC3IRGBUS3();
     ~itkInPlaceImageFilterIUC3IRGBUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUC3IRGBUS3_Pointer {
   public:
     itkInPlaceImageFilterIUC3IRGBUS3_Pointer();
     itkInPlaceImageFilterIUC3IRGBUS3_Pointer(itkInPlaceImageFilterIUC3IRGBUS3_Pointer const & p);
     itkInPlaceImageFilterIUC3IRGBUS3_Pointer(itkInPlaceImageFilterIUC3IRGBUS3 * p);
     ~itkInPlaceImageFilterIUC3IRGBUS3_Pointer();
     itkInPlaceImageFilterIUC3IRGBUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUC3IRGBUS3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUC3IRGBUS3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUC3IRGBUS3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUC3IRGBUS3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUC3IRGBUS3_Pointer const & r) const;
     itkInPlaceImageFilterIUC3IRGBUS3_Pointer & operator=(itkInPlaceImageFilterIUC3IRGBUS3_Pointer const & r);
     itkInPlaceImageFilterIUC3IRGBUS3_Pointer & operator=(itkInPlaceImageFilterIUC3IRGBUS3 * r);
     itkInPlaceImageFilterIUC3IRGBUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUC3IUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUC3IUC3(itkInPlaceImageFilterIUC3IUC3 const & arg0);
     void operator=(itkInPlaceImageFilterIUC3IUC3 const & arg0);
   protected:
     itkInPlaceImageFilterIUC3IUC3();
     ~itkInPlaceImageFilterIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUC3IUC3_Pointer {
   public:
     itkInPlaceImageFilterIUC3IUC3_Pointer();
     itkInPlaceImageFilterIUC3IUC3_Pointer(itkInPlaceImageFilterIUC3IUC3_Pointer const & p);
     itkInPlaceImageFilterIUC3IUC3_Pointer(itkInPlaceImageFilterIUC3IUC3 * p);
     ~itkInPlaceImageFilterIUC3IUC3_Pointer();
     itkInPlaceImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUC3IUC3_Pointer const & r) const;
     itkInPlaceImageFilterIUC3IUC3_Pointer & operator=(itkInPlaceImageFilterIUC3IUC3_Pointer const & r);
     itkInPlaceImageFilterIUC3IUC3_Pointer & operator=(itkInPlaceImageFilterIUC3IUC3 * r);
     itkInPlaceImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUC3IUL3 : public itkImageToImageFilterIUC3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUC3IUL3(itkInPlaceImageFilterIUC3IUL3 const & arg0);
     void operator=(itkInPlaceImageFilterIUC3IUL3 const & arg0);
   protected:
     itkInPlaceImageFilterIUC3IUL3();
     ~itkInPlaceImageFilterIUC3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUC3IUL3_Pointer {
   public:
     itkInPlaceImageFilterIUC3IUL3_Pointer();
     itkInPlaceImageFilterIUC3IUL3_Pointer(itkInPlaceImageFilterIUC3IUL3_Pointer const & p);
     itkInPlaceImageFilterIUC3IUL3_Pointer(itkInPlaceImageFilterIUC3IUL3 * p);
     ~itkInPlaceImageFilterIUC3IUL3_Pointer();
     itkInPlaceImageFilterIUC3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUC3IUL3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUC3IUL3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUC3IUL3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUC3IUL3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUC3IUL3_Pointer const & r) const;
     itkInPlaceImageFilterIUC3IUL3_Pointer & operator=(itkInPlaceImageFilterIUC3IUL3_Pointer const & r);
     itkInPlaceImageFilterIUC3IUL3_Pointer & operator=(itkInPlaceImageFilterIUC3IUL3 * r);
     itkInPlaceImageFilterIUC3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUC3IUS3 : public itkImageToImageFilterIUC3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUC3IUS3(itkInPlaceImageFilterIUC3IUS3 const & arg0);
     void operator=(itkInPlaceImageFilterIUC3IUS3 const & arg0);
   protected:
     itkInPlaceImageFilterIUC3IUS3();
     ~itkInPlaceImageFilterIUC3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUC3IUS3_Pointer {
   public:
     itkInPlaceImageFilterIUC3IUS3_Pointer();
     itkInPlaceImageFilterIUC3IUS3_Pointer(itkInPlaceImageFilterIUC3IUS3_Pointer const & p);
     itkInPlaceImageFilterIUC3IUS3_Pointer(itkInPlaceImageFilterIUC3IUS3 * p);
     ~itkInPlaceImageFilterIUC3IUS3_Pointer();
     itkInPlaceImageFilterIUC3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUC3IUS3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUC3IUS3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUC3IUS3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUC3IUS3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUC3IUS3_Pointer const & r) const;
     itkInPlaceImageFilterIUC3IUS3_Pointer & operator=(itkInPlaceImageFilterIUC3IUS3_Pointer const & r);
     itkInPlaceImageFilterIUC3IUS3_Pointer & operator=(itkInPlaceImageFilterIUC3IUS3 * r);
     itkInPlaceImageFilterIUC3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUL2ID2 : public itkImageToImageFilterIUL2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUL2ID2(itkInPlaceImageFilterIUL2ID2 const & arg0);
     void operator=(itkInPlaceImageFilterIUL2ID2 const & arg0);
   protected:
     itkInPlaceImageFilterIUL2ID2();
     ~itkInPlaceImageFilterIUL2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUL2ID2_Pointer {
   public:
     itkInPlaceImageFilterIUL2ID2_Pointer();
     itkInPlaceImageFilterIUL2ID2_Pointer(itkInPlaceImageFilterIUL2ID2_Pointer const & p);
     itkInPlaceImageFilterIUL2ID2_Pointer(itkInPlaceImageFilterIUL2ID2 * p);
     ~itkInPlaceImageFilterIUL2ID2_Pointer();
     itkInPlaceImageFilterIUL2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUL2ID2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUL2ID2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUL2ID2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUL2ID2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUL2ID2_Pointer const & r) const;
     itkInPlaceImageFilterIUL2ID2_Pointer & operator=(itkInPlaceImageFilterIUL2ID2_Pointer const & r);
     itkInPlaceImageFilterIUL2ID2_Pointer & operator=(itkInPlaceImageFilterIUL2ID2 * r);
     itkInPlaceImageFilterIUL2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUL2IF2 : public itkImageToImageFilterIUL2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUL2IF2(itkInPlaceImageFilterIUL2IF2 const & arg0);
     void operator=(itkInPlaceImageFilterIUL2IF2 const & arg0);
   protected:
     itkInPlaceImageFilterIUL2IF2();
     ~itkInPlaceImageFilterIUL2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUL2IF2_Pointer {
   public:
     itkInPlaceImageFilterIUL2IF2_Pointer();
     itkInPlaceImageFilterIUL2IF2_Pointer(itkInPlaceImageFilterIUL2IF2_Pointer const & p);
     itkInPlaceImageFilterIUL2IF2_Pointer(itkInPlaceImageFilterIUL2IF2 * p);
     ~itkInPlaceImageFilterIUL2IF2_Pointer();
     itkInPlaceImageFilterIUL2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUL2IF2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUL2IF2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUL2IF2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUL2IF2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUL2IF2_Pointer const & r) const;
     itkInPlaceImageFilterIUL2IF2_Pointer & operator=(itkInPlaceImageFilterIUL2IF2_Pointer const & r);
     itkInPlaceImageFilterIUL2IF2_Pointer & operator=(itkInPlaceImageFilterIUL2IF2 * r);
     itkInPlaceImageFilterIUL2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUL2IRGBAUS2 : public itkImageToImageFilterIUL2IRGBAUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUL2IRGBAUS2(itkInPlaceImageFilterIUL2IRGBAUS2 const & arg0);
     void operator=(itkInPlaceImageFilterIUL2IRGBAUS2 const & arg0);
   protected:
     itkInPlaceImageFilterIUL2IRGBAUS2();
     ~itkInPlaceImageFilterIUL2IRGBAUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUL2IRGBAUS2_Pointer {
   public:
     itkInPlaceImageFilterIUL2IRGBAUS2_Pointer();
     itkInPlaceImageFilterIUL2IRGBAUS2_Pointer(itkInPlaceImageFilterIUL2IRGBAUS2_Pointer const & p);
     itkInPlaceImageFilterIUL2IRGBAUS2_Pointer(itkInPlaceImageFilterIUL2IRGBAUS2 * p);
     ~itkInPlaceImageFilterIUL2IRGBAUS2_Pointer();
     itkInPlaceImageFilterIUL2IRGBAUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUL2IRGBAUS2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUL2IRGBAUS2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUL2IRGBAUS2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUL2IRGBAUS2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUL2IRGBAUS2_Pointer const & r) const;
     itkInPlaceImageFilterIUL2IRGBAUS2_Pointer & operator=(itkInPlaceImageFilterIUL2IRGBAUS2_Pointer const & r);
     itkInPlaceImageFilterIUL2IRGBAUS2_Pointer & operator=(itkInPlaceImageFilterIUL2IRGBAUS2 * r);
     itkInPlaceImageFilterIUL2IRGBAUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUL2IRGBUS2 : public itkImageToImageFilterIUL2IRGBUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUL2IRGBUS2(itkInPlaceImageFilterIUL2IRGBUS2 const & arg0);
     void operator=(itkInPlaceImageFilterIUL2IRGBUS2 const & arg0);
   protected:
     itkInPlaceImageFilterIUL2IRGBUS2();
     ~itkInPlaceImageFilterIUL2IRGBUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUL2IRGBUS2_Pointer {
   public:
     itkInPlaceImageFilterIUL2IRGBUS2_Pointer();
     itkInPlaceImageFilterIUL2IRGBUS2_Pointer(itkInPlaceImageFilterIUL2IRGBUS2_Pointer const & p);
     itkInPlaceImageFilterIUL2IRGBUS2_Pointer(itkInPlaceImageFilterIUL2IRGBUS2 * p);
     ~itkInPlaceImageFilterIUL2IRGBUS2_Pointer();
     itkInPlaceImageFilterIUL2IRGBUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUL2IRGBUS2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUL2IRGBUS2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUL2IRGBUS2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUL2IRGBUS2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUL2IRGBUS2_Pointer const & r) const;
     itkInPlaceImageFilterIUL2IRGBUS2_Pointer & operator=(itkInPlaceImageFilterIUL2IRGBUS2_Pointer const & r);
     itkInPlaceImageFilterIUL2IRGBUS2_Pointer & operator=(itkInPlaceImageFilterIUL2IRGBUS2 * r);
     itkInPlaceImageFilterIUL2IRGBUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUL2IUC2 : public itkImageToImageFilterIUL2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUL2IUC2(itkInPlaceImageFilterIUL2IUC2 const & arg0);
     void operator=(itkInPlaceImageFilterIUL2IUC2 const & arg0);
   protected:
     itkInPlaceImageFilterIUL2IUC2();
     ~itkInPlaceImageFilterIUL2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUL2IUC2_Pointer {
   public:
     itkInPlaceImageFilterIUL2IUC2_Pointer();
     itkInPlaceImageFilterIUL2IUC2_Pointer(itkInPlaceImageFilterIUL2IUC2_Pointer const & p);
     itkInPlaceImageFilterIUL2IUC2_Pointer(itkInPlaceImageFilterIUL2IUC2 * p);
     ~itkInPlaceImageFilterIUL2IUC2_Pointer();
     itkInPlaceImageFilterIUL2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUL2IUC2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUL2IUC2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUL2IUC2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUL2IUC2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUL2IUC2_Pointer const & r) const;
     itkInPlaceImageFilterIUL2IUC2_Pointer & operator=(itkInPlaceImageFilterIUL2IUC2_Pointer const & r);
     itkInPlaceImageFilterIUL2IUC2_Pointer & operator=(itkInPlaceImageFilterIUL2IUC2 * r);
     itkInPlaceImageFilterIUL2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUL2IUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUL2IUL2(itkInPlaceImageFilterIUL2IUL2 const & arg0);
     void operator=(itkInPlaceImageFilterIUL2IUL2 const & arg0);
   protected:
     itkInPlaceImageFilterIUL2IUL2();
     ~itkInPlaceImageFilterIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUL2IUL2_Pointer {
   public:
     itkInPlaceImageFilterIUL2IUL2_Pointer();
     itkInPlaceImageFilterIUL2IUL2_Pointer(itkInPlaceImageFilterIUL2IUL2_Pointer const & p);
     itkInPlaceImageFilterIUL2IUL2_Pointer(itkInPlaceImageFilterIUL2IUL2 * p);
     ~itkInPlaceImageFilterIUL2IUL2_Pointer();
     itkInPlaceImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUL2IUL2_Pointer const & r) const;
     itkInPlaceImageFilterIUL2IUL2_Pointer & operator=(itkInPlaceImageFilterIUL2IUL2_Pointer const & r);
     itkInPlaceImageFilterIUL2IUL2_Pointer & operator=(itkInPlaceImageFilterIUL2IUL2 * r);
     itkInPlaceImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUL2IUS2 : public itkImageToImageFilterIUL2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUL2IUS2(itkInPlaceImageFilterIUL2IUS2 const & arg0);
     void operator=(itkInPlaceImageFilterIUL2IUS2 const & arg0);
   protected:
     itkInPlaceImageFilterIUL2IUS2();
     ~itkInPlaceImageFilterIUL2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUL2IUS2_Pointer {
   public:
     itkInPlaceImageFilterIUL2IUS2_Pointer();
     itkInPlaceImageFilterIUL2IUS2_Pointer(itkInPlaceImageFilterIUL2IUS2_Pointer const & p);
     itkInPlaceImageFilterIUL2IUS2_Pointer(itkInPlaceImageFilterIUL2IUS2 * p);
     ~itkInPlaceImageFilterIUL2IUS2_Pointer();
     itkInPlaceImageFilterIUL2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUL2IUS2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUL2IUS2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUL2IUS2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUL2IUS2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUL2IUS2_Pointer const & r) const;
     itkInPlaceImageFilterIUL2IUS2_Pointer & operator=(itkInPlaceImageFilterIUL2IUS2_Pointer const & r);
     itkInPlaceImageFilterIUL2IUS2_Pointer & operator=(itkInPlaceImageFilterIUL2IUS2 * r);
     itkInPlaceImageFilterIUL2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUL3ID3 : public itkImageToImageFilterIUL3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUL3ID3(itkInPlaceImageFilterIUL3ID3 const & arg0);
     void operator=(itkInPlaceImageFilterIUL3ID3 const & arg0);
   protected:
     itkInPlaceImageFilterIUL3ID3();
     ~itkInPlaceImageFilterIUL3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUL3ID3_Pointer {
   public:
     itkInPlaceImageFilterIUL3ID3_Pointer();
     itkInPlaceImageFilterIUL3ID3_Pointer(itkInPlaceImageFilterIUL3ID3_Pointer const & p);
     itkInPlaceImageFilterIUL3ID3_Pointer(itkInPlaceImageFilterIUL3ID3 * p);
     ~itkInPlaceImageFilterIUL3ID3_Pointer();
     itkInPlaceImageFilterIUL3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUL3ID3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUL3ID3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUL3ID3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUL3ID3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUL3ID3_Pointer const & r) const;
     itkInPlaceImageFilterIUL3ID3_Pointer & operator=(itkInPlaceImageFilterIUL3ID3_Pointer const & r);
     itkInPlaceImageFilterIUL3ID3_Pointer & operator=(itkInPlaceImageFilterIUL3ID3 * r);
     itkInPlaceImageFilterIUL3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUL3IF3 : public itkImageToImageFilterIUL3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUL3IF3(itkInPlaceImageFilterIUL3IF3 const & arg0);
     void operator=(itkInPlaceImageFilterIUL3IF3 const & arg0);
   protected:
     itkInPlaceImageFilterIUL3IF3();
     ~itkInPlaceImageFilterIUL3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUL3IF3_Pointer {
   public:
     itkInPlaceImageFilterIUL3IF3_Pointer();
     itkInPlaceImageFilterIUL3IF3_Pointer(itkInPlaceImageFilterIUL3IF3_Pointer const & p);
     itkInPlaceImageFilterIUL3IF3_Pointer(itkInPlaceImageFilterIUL3IF3 * p);
     ~itkInPlaceImageFilterIUL3IF3_Pointer();
     itkInPlaceImageFilterIUL3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUL3IF3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUL3IF3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUL3IF3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUL3IF3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUL3IF3_Pointer const & r) const;
     itkInPlaceImageFilterIUL3IF3_Pointer & operator=(itkInPlaceImageFilterIUL3IF3_Pointer const & r);
     itkInPlaceImageFilterIUL3IF3_Pointer & operator=(itkInPlaceImageFilterIUL3IF3 * r);
     itkInPlaceImageFilterIUL3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUL3IRGBAUS3 : public itkImageToImageFilterIUL3IRGBAUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUL3IRGBAUS3(itkInPlaceImageFilterIUL3IRGBAUS3 const & arg0);
     void operator=(itkInPlaceImageFilterIUL3IRGBAUS3 const & arg0);
   protected:
     itkInPlaceImageFilterIUL3IRGBAUS3();
     ~itkInPlaceImageFilterIUL3IRGBAUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUL3IRGBAUS3_Pointer {
   public:
     itkInPlaceImageFilterIUL3IRGBAUS3_Pointer();
     itkInPlaceImageFilterIUL3IRGBAUS3_Pointer(itkInPlaceImageFilterIUL3IRGBAUS3_Pointer const & p);
     itkInPlaceImageFilterIUL3IRGBAUS3_Pointer(itkInPlaceImageFilterIUL3IRGBAUS3 * p);
     ~itkInPlaceImageFilterIUL3IRGBAUS3_Pointer();
     itkInPlaceImageFilterIUL3IRGBAUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUL3IRGBAUS3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUL3IRGBAUS3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUL3IRGBAUS3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUL3IRGBAUS3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUL3IRGBAUS3_Pointer const & r) const;
     itkInPlaceImageFilterIUL3IRGBAUS3_Pointer & operator=(itkInPlaceImageFilterIUL3IRGBAUS3_Pointer const & r);
     itkInPlaceImageFilterIUL3IRGBAUS3_Pointer & operator=(itkInPlaceImageFilterIUL3IRGBAUS3 * r);
     itkInPlaceImageFilterIUL3IRGBAUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUL3IRGBUS3 : public itkImageToImageFilterIUL3IRGBUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUL3IRGBUS3(itkInPlaceImageFilterIUL3IRGBUS3 const & arg0);
     void operator=(itkInPlaceImageFilterIUL3IRGBUS3 const & arg0);
   protected:
     itkInPlaceImageFilterIUL3IRGBUS3();
     ~itkInPlaceImageFilterIUL3IRGBUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUL3IRGBUS3_Pointer {
   public:
     itkInPlaceImageFilterIUL3IRGBUS3_Pointer();
     itkInPlaceImageFilterIUL3IRGBUS3_Pointer(itkInPlaceImageFilterIUL3IRGBUS3_Pointer const & p);
     itkInPlaceImageFilterIUL3IRGBUS3_Pointer(itkInPlaceImageFilterIUL3IRGBUS3 * p);
     ~itkInPlaceImageFilterIUL3IRGBUS3_Pointer();
     itkInPlaceImageFilterIUL3IRGBUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUL3IRGBUS3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUL3IRGBUS3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUL3IRGBUS3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUL3IRGBUS3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUL3IRGBUS3_Pointer const & r) const;
     itkInPlaceImageFilterIUL3IRGBUS3_Pointer & operator=(itkInPlaceImageFilterIUL3IRGBUS3_Pointer const & r);
     itkInPlaceImageFilterIUL3IRGBUS3_Pointer & operator=(itkInPlaceImageFilterIUL3IRGBUS3 * r);
     itkInPlaceImageFilterIUL3IRGBUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUL3IUC3 : public itkImageToImageFilterIUL3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUL3IUC3(itkInPlaceImageFilterIUL3IUC3 const & arg0);
     void operator=(itkInPlaceImageFilterIUL3IUC3 const & arg0);
   protected:
     itkInPlaceImageFilterIUL3IUC3();
     ~itkInPlaceImageFilterIUL3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUL3IUC3_Pointer {
   public:
     itkInPlaceImageFilterIUL3IUC3_Pointer();
     itkInPlaceImageFilterIUL3IUC3_Pointer(itkInPlaceImageFilterIUL3IUC3_Pointer const & p);
     itkInPlaceImageFilterIUL3IUC3_Pointer(itkInPlaceImageFilterIUL3IUC3 * p);
     ~itkInPlaceImageFilterIUL3IUC3_Pointer();
     itkInPlaceImageFilterIUL3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUL3IUC3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUL3IUC3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUL3IUC3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUL3IUC3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUL3IUC3_Pointer const & r) const;
     itkInPlaceImageFilterIUL3IUC3_Pointer & operator=(itkInPlaceImageFilterIUL3IUC3_Pointer const & r);
     itkInPlaceImageFilterIUL3IUC3_Pointer & operator=(itkInPlaceImageFilterIUL3IUC3 * r);
     itkInPlaceImageFilterIUL3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUL3IUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUL3IUL3(itkInPlaceImageFilterIUL3IUL3 const & arg0);
     void operator=(itkInPlaceImageFilterIUL3IUL3 const & arg0);
   protected:
     itkInPlaceImageFilterIUL3IUL3();
     ~itkInPlaceImageFilterIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUL3IUL3_Pointer {
   public:
     itkInPlaceImageFilterIUL3IUL3_Pointer();
     itkInPlaceImageFilterIUL3IUL3_Pointer(itkInPlaceImageFilterIUL3IUL3_Pointer const & p);
     itkInPlaceImageFilterIUL3IUL3_Pointer(itkInPlaceImageFilterIUL3IUL3 * p);
     ~itkInPlaceImageFilterIUL3IUL3_Pointer();
     itkInPlaceImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUL3IUL3_Pointer const & r) const;
     itkInPlaceImageFilterIUL3IUL3_Pointer & operator=(itkInPlaceImageFilterIUL3IUL3_Pointer const & r);
     itkInPlaceImageFilterIUL3IUL3_Pointer & operator=(itkInPlaceImageFilterIUL3IUL3 * r);
     itkInPlaceImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUL3IUS3 : public itkImageToImageFilterIUL3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUL3IUS3(itkInPlaceImageFilterIUL3IUS3 const & arg0);
     void operator=(itkInPlaceImageFilterIUL3IUS3 const & arg0);
   protected:
     itkInPlaceImageFilterIUL3IUS3();
     ~itkInPlaceImageFilterIUL3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUL3IUS3_Pointer {
   public:
     itkInPlaceImageFilterIUL3IUS3_Pointer();
     itkInPlaceImageFilterIUL3IUS3_Pointer(itkInPlaceImageFilterIUL3IUS3_Pointer const & p);
     itkInPlaceImageFilterIUL3IUS3_Pointer(itkInPlaceImageFilterIUL3IUS3 * p);
     ~itkInPlaceImageFilterIUL3IUS3_Pointer();
     itkInPlaceImageFilterIUL3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUL3IUS3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUL3IUS3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUL3IUS3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUL3IUS3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUL3IUS3_Pointer const & r) const;
     itkInPlaceImageFilterIUL3IUS3_Pointer & operator=(itkInPlaceImageFilterIUL3IUS3_Pointer const & r);
     itkInPlaceImageFilterIUL3IUS3_Pointer & operator=(itkInPlaceImageFilterIUL3IUS3 * r);
     itkInPlaceImageFilterIUL3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUS2ID2 : public itkImageToImageFilterIUS2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUS2ID2(itkInPlaceImageFilterIUS2ID2 const & arg0);
     void operator=(itkInPlaceImageFilterIUS2ID2 const & arg0);
   protected:
     itkInPlaceImageFilterIUS2ID2();
     ~itkInPlaceImageFilterIUS2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUS2ID2_Pointer {
   public:
     itkInPlaceImageFilterIUS2ID2_Pointer();
     itkInPlaceImageFilterIUS2ID2_Pointer(itkInPlaceImageFilterIUS2ID2_Pointer const & p);
     itkInPlaceImageFilterIUS2ID2_Pointer(itkInPlaceImageFilterIUS2ID2 * p);
     ~itkInPlaceImageFilterIUS2ID2_Pointer();
     itkInPlaceImageFilterIUS2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUS2ID2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUS2ID2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUS2ID2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUS2ID2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUS2ID2_Pointer const & r) const;
     itkInPlaceImageFilterIUS2ID2_Pointer & operator=(itkInPlaceImageFilterIUS2ID2_Pointer const & r);
     itkInPlaceImageFilterIUS2ID2_Pointer & operator=(itkInPlaceImageFilterIUS2ID2 * r);
     itkInPlaceImageFilterIUS2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUS2IF2 : public itkImageToImageFilterIUS2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUS2IF2(itkInPlaceImageFilterIUS2IF2 const & arg0);
     void operator=(itkInPlaceImageFilterIUS2IF2 const & arg0);
   protected:
     itkInPlaceImageFilterIUS2IF2();
     ~itkInPlaceImageFilterIUS2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUS2IF2_Pointer {
   public:
     itkInPlaceImageFilterIUS2IF2_Pointer();
     itkInPlaceImageFilterIUS2IF2_Pointer(itkInPlaceImageFilterIUS2IF2_Pointer const & p);
     itkInPlaceImageFilterIUS2IF2_Pointer(itkInPlaceImageFilterIUS2IF2 * p);
     ~itkInPlaceImageFilterIUS2IF2_Pointer();
     itkInPlaceImageFilterIUS2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUS2IF2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUS2IF2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUS2IF2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUS2IF2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUS2IF2_Pointer const & r) const;
     itkInPlaceImageFilterIUS2IF2_Pointer & operator=(itkInPlaceImageFilterIUS2IF2_Pointer const & r);
     itkInPlaceImageFilterIUS2IF2_Pointer & operator=(itkInPlaceImageFilterIUS2IF2 * r);
     itkInPlaceImageFilterIUS2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUS2IRGBAUS2 : public itkImageToImageFilterIUS2IRGBAUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUS2IRGBAUS2(itkInPlaceImageFilterIUS2IRGBAUS2 const & arg0);
     void operator=(itkInPlaceImageFilterIUS2IRGBAUS2 const & arg0);
   protected:
     itkInPlaceImageFilterIUS2IRGBAUS2();
     ~itkInPlaceImageFilterIUS2IRGBAUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUS2IRGBAUS2_Pointer {
   public:
     itkInPlaceImageFilterIUS2IRGBAUS2_Pointer();
     itkInPlaceImageFilterIUS2IRGBAUS2_Pointer(itkInPlaceImageFilterIUS2IRGBAUS2_Pointer const & p);
     itkInPlaceImageFilterIUS2IRGBAUS2_Pointer(itkInPlaceImageFilterIUS2IRGBAUS2 * p);
     ~itkInPlaceImageFilterIUS2IRGBAUS2_Pointer();
     itkInPlaceImageFilterIUS2IRGBAUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUS2IRGBAUS2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUS2IRGBAUS2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUS2IRGBAUS2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUS2IRGBAUS2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUS2IRGBAUS2_Pointer const & r) const;
     itkInPlaceImageFilterIUS2IRGBAUS2_Pointer & operator=(itkInPlaceImageFilterIUS2IRGBAUS2_Pointer const & r);
     itkInPlaceImageFilterIUS2IRGBAUS2_Pointer & operator=(itkInPlaceImageFilterIUS2IRGBAUS2 * r);
     itkInPlaceImageFilterIUS2IRGBAUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUS2IRGBUS2 : public itkImageToImageFilterIUS2IRGBUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUS2IRGBUS2(itkInPlaceImageFilterIUS2IRGBUS2 const & arg0);
     void operator=(itkInPlaceImageFilterIUS2IRGBUS2 const & arg0);
   protected:
     itkInPlaceImageFilterIUS2IRGBUS2();
     ~itkInPlaceImageFilterIUS2IRGBUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUS2IRGBUS2_Pointer {
   public:
     itkInPlaceImageFilterIUS2IRGBUS2_Pointer();
     itkInPlaceImageFilterIUS2IRGBUS2_Pointer(itkInPlaceImageFilterIUS2IRGBUS2_Pointer const & p);
     itkInPlaceImageFilterIUS2IRGBUS2_Pointer(itkInPlaceImageFilterIUS2IRGBUS2 * p);
     ~itkInPlaceImageFilterIUS2IRGBUS2_Pointer();
     itkInPlaceImageFilterIUS2IRGBUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUS2IRGBUS2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUS2IRGBUS2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUS2IRGBUS2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUS2IRGBUS2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUS2IRGBUS2_Pointer const & r) const;
     itkInPlaceImageFilterIUS2IRGBUS2_Pointer & operator=(itkInPlaceImageFilterIUS2IRGBUS2_Pointer const & r);
     itkInPlaceImageFilterIUS2IRGBUS2_Pointer & operator=(itkInPlaceImageFilterIUS2IRGBUS2 * r);
     itkInPlaceImageFilterIUS2IRGBUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUS2IUC2 : public itkImageToImageFilterIUS2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUS2IUC2(itkInPlaceImageFilterIUS2IUC2 const & arg0);
     void operator=(itkInPlaceImageFilterIUS2IUC2 const & arg0);
   protected:
     itkInPlaceImageFilterIUS2IUC2();
     ~itkInPlaceImageFilterIUS2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUS2IUC2_Pointer {
   public:
     itkInPlaceImageFilterIUS2IUC2_Pointer();
     itkInPlaceImageFilterIUS2IUC2_Pointer(itkInPlaceImageFilterIUS2IUC2_Pointer const & p);
     itkInPlaceImageFilterIUS2IUC2_Pointer(itkInPlaceImageFilterIUS2IUC2 * p);
     ~itkInPlaceImageFilterIUS2IUC2_Pointer();
     itkInPlaceImageFilterIUS2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUS2IUC2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUS2IUC2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUS2IUC2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUS2IUC2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUS2IUC2_Pointer const & r) const;
     itkInPlaceImageFilterIUS2IUC2_Pointer & operator=(itkInPlaceImageFilterIUS2IUC2_Pointer const & r);
     itkInPlaceImageFilterIUS2IUC2_Pointer & operator=(itkInPlaceImageFilterIUS2IUC2 * r);
     itkInPlaceImageFilterIUS2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUS2IUL2 : public itkImageToImageFilterIUS2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUS2IUL2(itkInPlaceImageFilterIUS2IUL2 const & arg0);
     void operator=(itkInPlaceImageFilterIUS2IUL2 const & arg0);
   protected:
     itkInPlaceImageFilterIUS2IUL2();
     ~itkInPlaceImageFilterIUS2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUS2IUL2_Pointer {
   public:
     itkInPlaceImageFilterIUS2IUL2_Pointer();
     itkInPlaceImageFilterIUS2IUL2_Pointer(itkInPlaceImageFilterIUS2IUL2_Pointer const & p);
     itkInPlaceImageFilterIUS2IUL2_Pointer(itkInPlaceImageFilterIUS2IUL2 * p);
     ~itkInPlaceImageFilterIUS2IUL2_Pointer();
     itkInPlaceImageFilterIUS2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUS2IUL2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUS2IUL2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUS2IUL2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUS2IUL2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUS2IUL2_Pointer const & r) const;
     itkInPlaceImageFilterIUS2IUL2_Pointer & operator=(itkInPlaceImageFilterIUS2IUL2_Pointer const & r);
     itkInPlaceImageFilterIUS2IUL2_Pointer & operator=(itkInPlaceImageFilterIUS2IUL2 * r);
     itkInPlaceImageFilterIUS2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUS2IUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUS2IUS2(itkInPlaceImageFilterIUS2IUS2 const & arg0);
     void operator=(itkInPlaceImageFilterIUS2IUS2 const & arg0);
   protected:
     itkInPlaceImageFilterIUS2IUS2();
     ~itkInPlaceImageFilterIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUS2IUS2_Pointer {
   public:
     itkInPlaceImageFilterIUS2IUS2_Pointer();
     itkInPlaceImageFilterIUS2IUS2_Pointer(itkInPlaceImageFilterIUS2IUS2_Pointer const & p);
     itkInPlaceImageFilterIUS2IUS2_Pointer(itkInPlaceImageFilterIUS2IUS2 * p);
     ~itkInPlaceImageFilterIUS2IUS2_Pointer();
     itkInPlaceImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUS2IUS2_Pointer const & r) const;
     itkInPlaceImageFilterIUS2IUS2_Pointer & operator=(itkInPlaceImageFilterIUS2IUS2_Pointer const & r);
     itkInPlaceImageFilterIUS2IUS2_Pointer & operator=(itkInPlaceImageFilterIUS2IUS2 * r);
     itkInPlaceImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUS3ID3 : public itkImageToImageFilterIUS3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUS3ID3(itkInPlaceImageFilterIUS3ID3 const & arg0);
     void operator=(itkInPlaceImageFilterIUS3ID3 const & arg0);
   protected:
     itkInPlaceImageFilterIUS3ID3();
     ~itkInPlaceImageFilterIUS3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUS3ID3_Pointer {
   public:
     itkInPlaceImageFilterIUS3ID3_Pointer();
     itkInPlaceImageFilterIUS3ID3_Pointer(itkInPlaceImageFilterIUS3ID3_Pointer const & p);
     itkInPlaceImageFilterIUS3ID3_Pointer(itkInPlaceImageFilterIUS3ID3 * p);
     ~itkInPlaceImageFilterIUS3ID3_Pointer();
     itkInPlaceImageFilterIUS3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUS3ID3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUS3ID3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUS3ID3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUS3ID3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUS3ID3_Pointer const & r) const;
     itkInPlaceImageFilterIUS3ID3_Pointer & operator=(itkInPlaceImageFilterIUS3ID3_Pointer const & r);
     itkInPlaceImageFilterIUS3ID3_Pointer & operator=(itkInPlaceImageFilterIUS3ID3 * r);
     itkInPlaceImageFilterIUS3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUS3IF3 : public itkImageToImageFilterIUS3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUS3IF3(itkInPlaceImageFilterIUS3IF3 const & arg0);
     void operator=(itkInPlaceImageFilterIUS3IF3 const & arg0);
   protected:
     itkInPlaceImageFilterIUS3IF3();
     ~itkInPlaceImageFilterIUS3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUS3IF3_Pointer {
   public:
     itkInPlaceImageFilterIUS3IF3_Pointer();
     itkInPlaceImageFilterIUS3IF3_Pointer(itkInPlaceImageFilterIUS3IF3_Pointer const & p);
     itkInPlaceImageFilterIUS3IF3_Pointer(itkInPlaceImageFilterIUS3IF3 * p);
     ~itkInPlaceImageFilterIUS3IF3_Pointer();
     itkInPlaceImageFilterIUS3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUS3IF3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUS3IF3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUS3IF3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUS3IF3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUS3IF3_Pointer const & r) const;
     itkInPlaceImageFilterIUS3IF3_Pointer & operator=(itkInPlaceImageFilterIUS3IF3_Pointer const & r);
     itkInPlaceImageFilterIUS3IF3_Pointer & operator=(itkInPlaceImageFilterIUS3IF3 * r);
     itkInPlaceImageFilterIUS3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUS3IRGBAUS3 : public itkImageToImageFilterIUS3IRGBAUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUS3IRGBAUS3(itkInPlaceImageFilterIUS3IRGBAUS3 const & arg0);
     void operator=(itkInPlaceImageFilterIUS3IRGBAUS3 const & arg0);
   protected:
     itkInPlaceImageFilterIUS3IRGBAUS3();
     ~itkInPlaceImageFilterIUS3IRGBAUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUS3IRGBAUS3_Pointer {
   public:
     itkInPlaceImageFilterIUS3IRGBAUS3_Pointer();
     itkInPlaceImageFilterIUS3IRGBAUS3_Pointer(itkInPlaceImageFilterIUS3IRGBAUS3_Pointer const & p);
     itkInPlaceImageFilterIUS3IRGBAUS3_Pointer(itkInPlaceImageFilterIUS3IRGBAUS3 * p);
     ~itkInPlaceImageFilterIUS3IRGBAUS3_Pointer();
     itkInPlaceImageFilterIUS3IRGBAUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUS3IRGBAUS3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUS3IRGBAUS3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUS3IRGBAUS3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUS3IRGBAUS3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUS3IRGBAUS3_Pointer const & r) const;
     itkInPlaceImageFilterIUS3IRGBAUS3_Pointer & operator=(itkInPlaceImageFilterIUS3IRGBAUS3_Pointer const & r);
     itkInPlaceImageFilterIUS3IRGBAUS3_Pointer & operator=(itkInPlaceImageFilterIUS3IRGBAUS3 * r);
     itkInPlaceImageFilterIUS3IRGBAUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUS3IRGBUS3 : public itkImageToImageFilterIUS3IRGBUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUS3IRGBUS3(itkInPlaceImageFilterIUS3IRGBUS3 const & arg0);
     void operator=(itkInPlaceImageFilterIUS3IRGBUS3 const & arg0);
   protected:
     itkInPlaceImageFilterIUS3IRGBUS3();
     ~itkInPlaceImageFilterIUS3IRGBUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUS3IRGBUS3_Pointer {
   public:
     itkInPlaceImageFilterIUS3IRGBUS3_Pointer();
     itkInPlaceImageFilterIUS3IRGBUS3_Pointer(itkInPlaceImageFilterIUS3IRGBUS3_Pointer const & p);
     itkInPlaceImageFilterIUS3IRGBUS3_Pointer(itkInPlaceImageFilterIUS3IRGBUS3 * p);
     ~itkInPlaceImageFilterIUS3IRGBUS3_Pointer();
     itkInPlaceImageFilterIUS3IRGBUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUS3IRGBUS3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUS3IRGBUS3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUS3IRGBUS3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUS3IRGBUS3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUS3IRGBUS3_Pointer const & r) const;
     itkInPlaceImageFilterIUS3IRGBUS3_Pointer & operator=(itkInPlaceImageFilterIUS3IRGBUS3_Pointer const & r);
     itkInPlaceImageFilterIUS3IRGBUS3_Pointer & operator=(itkInPlaceImageFilterIUS3IRGBUS3 * r);
     itkInPlaceImageFilterIUS3IRGBUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUS3IUC3 : public itkImageToImageFilterIUS3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUS3IUC3(itkInPlaceImageFilterIUS3IUC3 const & arg0);
     void operator=(itkInPlaceImageFilterIUS3IUC3 const & arg0);
   protected:
     itkInPlaceImageFilterIUS3IUC3();
     ~itkInPlaceImageFilterIUS3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUS3IUC3_Pointer {
   public:
     itkInPlaceImageFilterIUS3IUC3_Pointer();
     itkInPlaceImageFilterIUS3IUC3_Pointer(itkInPlaceImageFilterIUS3IUC3_Pointer const & p);
     itkInPlaceImageFilterIUS3IUC3_Pointer(itkInPlaceImageFilterIUS3IUC3 * p);
     ~itkInPlaceImageFilterIUS3IUC3_Pointer();
     itkInPlaceImageFilterIUS3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUS3IUC3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUS3IUC3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUS3IUC3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUS3IUC3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUS3IUC3_Pointer const & r) const;
     itkInPlaceImageFilterIUS3IUC3_Pointer & operator=(itkInPlaceImageFilterIUS3IUC3_Pointer const & r);
     itkInPlaceImageFilterIUS3IUC3_Pointer & operator=(itkInPlaceImageFilterIUS3IUC3 * r);
     itkInPlaceImageFilterIUS3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUS3IUL3 : public itkImageToImageFilterIUS3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUS3IUL3(itkInPlaceImageFilterIUS3IUL3 const & arg0);
     void operator=(itkInPlaceImageFilterIUS3IUL3 const & arg0);
   protected:
     itkInPlaceImageFilterIUS3IUL3();
     ~itkInPlaceImageFilterIUS3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUS3IUL3_Pointer {
   public:
     itkInPlaceImageFilterIUS3IUL3_Pointer();
     itkInPlaceImageFilterIUS3IUL3_Pointer(itkInPlaceImageFilterIUS3IUL3_Pointer const & p);
     itkInPlaceImageFilterIUS3IUL3_Pointer(itkInPlaceImageFilterIUS3IUL3 * p);
     ~itkInPlaceImageFilterIUS3IUL3_Pointer();
     itkInPlaceImageFilterIUS3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUS3IUL3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUS3IUL3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUS3IUL3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUS3IUL3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUS3IUL3_Pointer const & r) const;
     itkInPlaceImageFilterIUS3IUL3_Pointer & operator=(itkInPlaceImageFilterIUS3IUL3_Pointer const & r);
     itkInPlaceImageFilterIUS3IUL3_Pointer & operator=(itkInPlaceImageFilterIUS3IUL3 * r);
     itkInPlaceImageFilterIUS3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIUS3IUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIUS3IUS3(itkInPlaceImageFilterIUS3IUS3 const & arg0);
     void operator=(itkInPlaceImageFilterIUS3IUS3 const & arg0);
   protected:
     itkInPlaceImageFilterIUS3IUS3();
     ~itkInPlaceImageFilterIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIUS3IUS3_Pointer {
   public:
     itkInPlaceImageFilterIUS3IUS3_Pointer();
     itkInPlaceImageFilterIUS3IUS3_Pointer(itkInPlaceImageFilterIUS3IUS3_Pointer const & p);
     itkInPlaceImageFilterIUS3IUS3_Pointer(itkInPlaceImageFilterIUS3IUS3 * p);
     ~itkInPlaceImageFilterIUS3IUS3_Pointer();
     itkInPlaceImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIUS3IUS3_Pointer const & r) const;
     itkInPlaceImageFilterIUS3IUS3_Pointer & operator=(itkInPlaceImageFilterIUS3IUS3_Pointer const & r);
     itkInPlaceImageFilterIUS3IUS3_Pointer & operator=(itkInPlaceImageFilterIUS3IUS3 * r);
     itkInPlaceImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIVF22ICVF22 : public itkImageToImageFilterIVF22ICVF22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIVF22ICVF22(itkInPlaceImageFilterIVF22ICVF22 const & arg0);
     void operator=(itkInPlaceImageFilterIVF22ICVF22 const & arg0);
   protected:
     itkInPlaceImageFilterIVF22ICVF22();
     ~itkInPlaceImageFilterIVF22ICVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIVF22ICVF22_Pointer {
   public:
     itkInPlaceImageFilterIVF22ICVF22_Pointer();
     itkInPlaceImageFilterIVF22ICVF22_Pointer(itkInPlaceImageFilterIVF22ICVF22_Pointer const & p);
     itkInPlaceImageFilterIVF22ICVF22_Pointer(itkInPlaceImageFilterIVF22ICVF22 * p);
     ~itkInPlaceImageFilterIVF22ICVF22_Pointer();
     itkInPlaceImageFilterIVF22ICVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIVF22ICVF22 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIVF22ICVF22_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIVF22ICVF22_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIVF22ICVF22_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIVF22ICVF22_Pointer const & r) const;
     itkInPlaceImageFilterIVF22ICVF22_Pointer & operator=(itkInPlaceImageFilterIVF22ICVF22_Pointer const & r);
     itkInPlaceImageFilterIVF22ICVF22_Pointer & operator=(itkInPlaceImageFilterIVF22ICVF22 * r);
     itkInPlaceImageFilterIVF22ICVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIVF22IVF22 : public itkImageToImageFilterIVF22IVF22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIVF22IVF22(itkInPlaceImageFilterIVF22IVF22 const & arg0);
     void operator=(itkInPlaceImageFilterIVF22IVF22 const & arg0);
   protected:
     itkInPlaceImageFilterIVF22IVF22();
     ~itkInPlaceImageFilterIVF22IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIVF22IVF22_Pointer {
   public:
     itkInPlaceImageFilterIVF22IVF22_Pointer();
     itkInPlaceImageFilterIVF22IVF22_Pointer(itkInPlaceImageFilterIVF22IVF22_Pointer const & p);
     itkInPlaceImageFilterIVF22IVF22_Pointer(itkInPlaceImageFilterIVF22IVF22 * p);
     ~itkInPlaceImageFilterIVF22IVF22_Pointer();
     itkInPlaceImageFilterIVF22IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIVF22IVF22 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIVF22IVF22_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIVF22IVF22_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIVF22IVF22_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIVF22IVF22_Pointer const & r) const;
     itkInPlaceImageFilterIVF22IVF22_Pointer & operator=(itkInPlaceImageFilterIVF22IVF22_Pointer const & r);
     itkInPlaceImageFilterIVF22IVF22_Pointer & operator=(itkInPlaceImageFilterIVF22IVF22 * r);
     itkInPlaceImageFilterIVF22IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIVF33ICVF33 : public itkImageToImageFilterIVF33ICVF33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIVF33ICVF33(itkInPlaceImageFilterIVF33ICVF33 const & arg0);
     void operator=(itkInPlaceImageFilterIVF33ICVF33 const & arg0);
   protected:
     itkInPlaceImageFilterIVF33ICVF33();
     ~itkInPlaceImageFilterIVF33ICVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIVF33ICVF33_Pointer {
   public:
     itkInPlaceImageFilterIVF33ICVF33_Pointer();
     itkInPlaceImageFilterIVF33ICVF33_Pointer(itkInPlaceImageFilterIVF33ICVF33_Pointer const & p);
     itkInPlaceImageFilterIVF33ICVF33_Pointer(itkInPlaceImageFilterIVF33ICVF33 * p);
     ~itkInPlaceImageFilterIVF33ICVF33_Pointer();
     itkInPlaceImageFilterIVF33ICVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIVF33ICVF33 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIVF33ICVF33_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIVF33ICVF33_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIVF33ICVF33_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIVF33ICVF33_Pointer const & r) const;
     itkInPlaceImageFilterIVF33ICVF33_Pointer & operator=(itkInPlaceImageFilterIVF33ICVF33_Pointer const & r);
     itkInPlaceImageFilterIVF33ICVF33_Pointer & operator=(itkInPlaceImageFilterIVF33ICVF33 * r);
     itkInPlaceImageFilterIVF33ICVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkInPlaceImageFilterIVF33IVF33 : public itkImageToImageFilterIVF33IVF33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInPlace(bool const _arg);
     virtual bool GetInPlace() const;
     virtual void InPlaceOn();
     virtual void InPlaceOff();
     virtual bool CanRunInPlace() const;
   private:
     itkInPlaceImageFilterIVF33IVF33(itkInPlaceImageFilterIVF33IVF33 const & arg0);
     void operator=(itkInPlaceImageFilterIVF33IVF33 const & arg0);
   protected:
     itkInPlaceImageFilterIVF33IVF33();
     ~itkInPlaceImageFilterIVF33IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void AllocateOutputs();
     virtual void ReleaseInputs();
 };


 class itkInPlaceImageFilterIVF33IVF33_Pointer {
   public:
     itkInPlaceImageFilterIVF33IVF33_Pointer();
     itkInPlaceImageFilterIVF33IVF33_Pointer(itkInPlaceImageFilterIVF33IVF33_Pointer const & p);
     itkInPlaceImageFilterIVF33IVF33_Pointer(itkInPlaceImageFilterIVF33IVF33 * p);
     ~itkInPlaceImageFilterIVF33IVF33_Pointer();
     itkInPlaceImageFilterIVF33IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkInPlaceImageFilterIVF33IVF33 * GetPointer() const;
     bool operator<(itkInPlaceImageFilterIVF33IVF33_Pointer const & r) const;
     bool operator>(itkInPlaceImageFilterIVF33IVF33_Pointer const & r) const;
     bool operator<=(itkInPlaceImageFilterIVF33IVF33_Pointer const & r) const;
     bool operator>=(itkInPlaceImageFilterIVF33IVF33_Pointer const & r) const;
     itkInPlaceImageFilterIVF33IVF33_Pointer & operator=(itkInPlaceImageFilterIVF33IVF33_Pointer const & r);
     itkInPlaceImageFilterIVF33IVF33_Pointer & operator=(itkInPlaceImageFilterIVF33IVF33 * r);
     itkInPlaceImageFilterIVF33IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


