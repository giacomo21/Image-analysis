# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkSmoothingRecursiveGaussianImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkSmoothingRecursiveGaussianImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkSmoothingRecursiveGaussianImageFilterPython
            return _itkSmoothingRecursiveGaussianImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkSmoothingRecursiveGaussianImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkSmoothingRecursiveGaussianImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkSmoothingRecursiveGaussianImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkFixedArrayPython
import itkImageToImageFilterAPython
import itkImagePython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
def itkSmoothingRecursiveGaussianImageFilterID3ID3_New():
  return itkSmoothingRecursiveGaussianImageFilterID3ID3.New()

def itkSmoothingRecursiveGaussianImageFilterID2ID2_New():
  return itkSmoothingRecursiveGaussianImageFilterID2ID2.New()

def itkSmoothingRecursiveGaussianImageFilterIF3IF3_New():
  return itkSmoothingRecursiveGaussianImageFilterIF3IF3.New()

def itkSmoothingRecursiveGaussianImageFilterIF2IF2_New():
  return itkSmoothingRecursiveGaussianImageFilterIF2IF2.New()

def itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_New():
  return itkSmoothingRecursiveGaussianImageFilterIUS3IUS3.New()

def itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_New():
  return itkSmoothingRecursiveGaussianImageFilterIUS2IUS2.New()

def itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_New():
  return itkSmoothingRecursiveGaussianImageFilterIUL3IUL3.New()

def itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_New():
  return itkSmoothingRecursiveGaussianImageFilterIUL2IUL2.New()

def itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_New():
  return itkSmoothingRecursiveGaussianImageFilterIUC3IUC3.New()

def itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_New():
  return itkSmoothingRecursiveGaussianImageFilterIUC2IUC2.New()

class itkSmoothingRecursiveGaussianImageFilterID2ID2(itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    """Proxy of C++ itkSmoothingRecursiveGaussianImageFilterID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID2ID2_ImageDimension
    InputHasNumericTraitsCheck = _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID2ID2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSigmaArray(self, *args):
        """SetSigmaArray(self, itkFixedArrayD2 sigmas)"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID2ID2_SetSigmaArray(self, *args)

    def SetSigma(self, *args):
        """SetSigma(self, double sigma)"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID2ID2_SetSigma(self, *args)

    def GetSigmaArray(self):
        """GetSigmaArray(self) -> itkFixedArrayD2"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID2ID2_GetSigmaArray(self)

    def GetSigma(self):
        """GetSigma(self) -> double"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID2ID2_GetSigma(self)

    def SetNormalizeAcrossScale(self, *args):
        """SetNormalizeAcrossScale(self, bool normalizeInScaleSpace)"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID2ID2_SetNormalizeAcrossScale(self, *args)

    def GetNormalizeAcrossScale(self):
        """GetNormalizeAcrossScale(self) -> bool"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID2ID2_GetNormalizeAcrossScale(self)

    __swig_destroy__ = _itkSmoothingRecursiveGaussianImageFilterPython.delete_itkSmoothingRecursiveGaussianImageFilterID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSmoothingRecursiveGaussianImageFilterID2ID2"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSmoothingRecursiveGaussianImageFilterID2ID2"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSmoothingRecursiveGaussianImageFilterID2ID2
        
        Create a new object of the class itkSmoothingRecursiveGaussianImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSmoothingRecursiveGaussianImageFilterID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSmoothingRecursiveGaussianImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSmoothingRecursiveGaussianImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSmoothingRecursiveGaussianImageFilterID2ID2.SetSigmaArray = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID2ID2_SetSigmaArray,None,itkSmoothingRecursiveGaussianImageFilterID2ID2)
itkSmoothingRecursiveGaussianImageFilterID2ID2.SetSigma = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID2ID2_SetSigma,None,itkSmoothingRecursiveGaussianImageFilterID2ID2)
itkSmoothingRecursiveGaussianImageFilterID2ID2.GetSigmaArray = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID2ID2_GetSigmaArray,None,itkSmoothingRecursiveGaussianImageFilterID2ID2)
itkSmoothingRecursiveGaussianImageFilterID2ID2.GetSigma = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID2ID2_GetSigma,None,itkSmoothingRecursiveGaussianImageFilterID2ID2)
itkSmoothingRecursiveGaussianImageFilterID2ID2.SetNormalizeAcrossScale = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID2ID2_SetNormalizeAcrossScale,None,itkSmoothingRecursiveGaussianImageFilterID2ID2)
itkSmoothingRecursiveGaussianImageFilterID2ID2.GetNormalizeAcrossScale = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID2ID2_GetNormalizeAcrossScale,None,itkSmoothingRecursiveGaussianImageFilterID2ID2)
itkSmoothingRecursiveGaussianImageFilterID2ID2.GetPointer = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID2ID2_GetPointer,None,itkSmoothingRecursiveGaussianImageFilterID2ID2)
itkSmoothingRecursiveGaussianImageFilterID2ID2_swigregister = _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID2ID2_swigregister
itkSmoothingRecursiveGaussianImageFilterID2ID2_swigregister(itkSmoothingRecursiveGaussianImageFilterID2ID2)

def itkSmoothingRecursiveGaussianImageFilterID2ID2___New_orig__():
  """itkSmoothingRecursiveGaussianImageFilterID2ID2___New_orig__()"""
  return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID2ID2___New_orig__()

def itkSmoothingRecursiveGaussianImageFilterID2ID2_cast(*args):
  """itkSmoothingRecursiveGaussianImageFilterID2ID2_cast(itkLightObject obj) -> itkSmoothingRecursiveGaussianImageFilterID2ID2"""
  return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID2ID2_cast(*args)

class itkSmoothingRecursiveGaussianImageFilterID3ID3(itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    """Proxy of C++ itkSmoothingRecursiveGaussianImageFilterID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID3ID3_ImageDimension
    InputHasNumericTraitsCheck = _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID3ID3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSigmaArray(self, *args):
        """SetSigmaArray(self, itkFixedArrayD3 sigmas)"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID3ID3_SetSigmaArray(self, *args)

    def SetSigma(self, *args):
        """SetSigma(self, double sigma)"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID3ID3_SetSigma(self, *args)

    def GetSigmaArray(self):
        """GetSigmaArray(self) -> itkFixedArrayD3"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID3ID3_GetSigmaArray(self)

    def GetSigma(self):
        """GetSigma(self) -> double"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID3ID3_GetSigma(self)

    def SetNormalizeAcrossScale(self, *args):
        """SetNormalizeAcrossScale(self, bool normalizeInScaleSpace)"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID3ID3_SetNormalizeAcrossScale(self, *args)

    def GetNormalizeAcrossScale(self):
        """GetNormalizeAcrossScale(self) -> bool"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID3ID3_GetNormalizeAcrossScale(self)

    __swig_destroy__ = _itkSmoothingRecursiveGaussianImageFilterPython.delete_itkSmoothingRecursiveGaussianImageFilterID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkSmoothingRecursiveGaussianImageFilterID3ID3"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSmoothingRecursiveGaussianImageFilterID3ID3"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSmoothingRecursiveGaussianImageFilterID3ID3
        
        Create a new object of the class itkSmoothingRecursiveGaussianImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSmoothingRecursiveGaussianImageFilterID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSmoothingRecursiveGaussianImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSmoothingRecursiveGaussianImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSmoothingRecursiveGaussianImageFilterID3ID3.SetSigmaArray = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID3ID3_SetSigmaArray,None,itkSmoothingRecursiveGaussianImageFilterID3ID3)
itkSmoothingRecursiveGaussianImageFilterID3ID3.SetSigma = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID3ID3_SetSigma,None,itkSmoothingRecursiveGaussianImageFilterID3ID3)
itkSmoothingRecursiveGaussianImageFilterID3ID3.GetSigmaArray = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID3ID3_GetSigmaArray,None,itkSmoothingRecursiveGaussianImageFilterID3ID3)
itkSmoothingRecursiveGaussianImageFilterID3ID3.GetSigma = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID3ID3_GetSigma,None,itkSmoothingRecursiveGaussianImageFilterID3ID3)
itkSmoothingRecursiveGaussianImageFilterID3ID3.SetNormalizeAcrossScale = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID3ID3_SetNormalizeAcrossScale,None,itkSmoothingRecursiveGaussianImageFilterID3ID3)
itkSmoothingRecursiveGaussianImageFilterID3ID3.GetNormalizeAcrossScale = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID3ID3_GetNormalizeAcrossScale,None,itkSmoothingRecursiveGaussianImageFilterID3ID3)
itkSmoothingRecursiveGaussianImageFilterID3ID3.GetPointer = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID3ID3_GetPointer,None,itkSmoothingRecursiveGaussianImageFilterID3ID3)
itkSmoothingRecursiveGaussianImageFilterID3ID3_swigregister = _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID3ID3_swigregister
itkSmoothingRecursiveGaussianImageFilterID3ID3_swigregister(itkSmoothingRecursiveGaussianImageFilterID3ID3)

def itkSmoothingRecursiveGaussianImageFilterID3ID3___New_orig__():
  """itkSmoothingRecursiveGaussianImageFilterID3ID3___New_orig__()"""
  return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID3ID3___New_orig__()

def itkSmoothingRecursiveGaussianImageFilterID3ID3_cast(*args):
  """itkSmoothingRecursiveGaussianImageFilterID3ID3_cast(itkLightObject obj) -> itkSmoothingRecursiveGaussianImageFilterID3ID3"""
  return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterID3ID3_cast(*args)

class itkSmoothingRecursiveGaussianImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkSmoothingRecursiveGaussianImageFilterIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF2IF2_ImageDimension
    InputHasNumericTraitsCheck = _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF2IF2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSigmaArray(self, *args):
        """SetSigmaArray(self, itkFixedArrayD2 sigmas)"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF2IF2_SetSigmaArray(self, *args)

    def SetSigma(self, *args):
        """SetSigma(self, double sigma)"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF2IF2_SetSigma(self, *args)

    def GetSigmaArray(self):
        """GetSigmaArray(self) -> itkFixedArrayD2"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF2IF2_GetSigmaArray(self)

    def GetSigma(self):
        """GetSigma(self) -> double"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF2IF2_GetSigma(self)

    def SetNormalizeAcrossScale(self, *args):
        """SetNormalizeAcrossScale(self, bool normalizeInScaleSpace)"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF2IF2_SetNormalizeAcrossScale(self, *args)

    def GetNormalizeAcrossScale(self):
        """GetNormalizeAcrossScale(self) -> bool"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF2IF2_GetNormalizeAcrossScale(self)

    __swig_destroy__ = _itkSmoothingRecursiveGaussianImageFilterPython.delete_itkSmoothingRecursiveGaussianImageFilterIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSmoothingRecursiveGaussianImageFilterIF2IF2"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSmoothingRecursiveGaussianImageFilterIF2IF2"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSmoothingRecursiveGaussianImageFilterIF2IF2
        
        Create a new object of the class itkSmoothingRecursiveGaussianImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSmoothingRecursiveGaussianImageFilterIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSmoothingRecursiveGaussianImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSmoothingRecursiveGaussianImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSmoothingRecursiveGaussianImageFilterIF2IF2.SetSigmaArray = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF2IF2_SetSigmaArray,None,itkSmoothingRecursiveGaussianImageFilterIF2IF2)
itkSmoothingRecursiveGaussianImageFilterIF2IF2.SetSigma = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF2IF2_SetSigma,None,itkSmoothingRecursiveGaussianImageFilterIF2IF2)
itkSmoothingRecursiveGaussianImageFilterIF2IF2.GetSigmaArray = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF2IF2_GetSigmaArray,None,itkSmoothingRecursiveGaussianImageFilterIF2IF2)
itkSmoothingRecursiveGaussianImageFilterIF2IF2.GetSigma = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF2IF2_GetSigma,None,itkSmoothingRecursiveGaussianImageFilterIF2IF2)
itkSmoothingRecursiveGaussianImageFilterIF2IF2.SetNormalizeAcrossScale = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF2IF2_SetNormalizeAcrossScale,None,itkSmoothingRecursiveGaussianImageFilterIF2IF2)
itkSmoothingRecursiveGaussianImageFilterIF2IF2.GetNormalizeAcrossScale = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF2IF2_GetNormalizeAcrossScale,None,itkSmoothingRecursiveGaussianImageFilterIF2IF2)
itkSmoothingRecursiveGaussianImageFilterIF2IF2.GetPointer = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF2IF2_GetPointer,None,itkSmoothingRecursiveGaussianImageFilterIF2IF2)
itkSmoothingRecursiveGaussianImageFilterIF2IF2_swigregister = _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF2IF2_swigregister
itkSmoothingRecursiveGaussianImageFilterIF2IF2_swigregister(itkSmoothingRecursiveGaussianImageFilterIF2IF2)

def itkSmoothingRecursiveGaussianImageFilterIF2IF2___New_orig__():
  """itkSmoothingRecursiveGaussianImageFilterIF2IF2___New_orig__()"""
  return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF2IF2___New_orig__()

def itkSmoothingRecursiveGaussianImageFilterIF2IF2_cast(*args):
  """itkSmoothingRecursiveGaussianImageFilterIF2IF2_cast(itkLightObject obj) -> itkSmoothingRecursiveGaussianImageFilterIF2IF2"""
  return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF2IF2_cast(*args)

class itkSmoothingRecursiveGaussianImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkSmoothingRecursiveGaussianImageFilterIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF3IF3_ImageDimension
    InputHasNumericTraitsCheck = _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF3IF3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSigmaArray(self, *args):
        """SetSigmaArray(self, itkFixedArrayD3 sigmas)"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF3IF3_SetSigmaArray(self, *args)

    def SetSigma(self, *args):
        """SetSigma(self, double sigma)"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF3IF3_SetSigma(self, *args)

    def GetSigmaArray(self):
        """GetSigmaArray(self) -> itkFixedArrayD3"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF3IF3_GetSigmaArray(self)

    def GetSigma(self):
        """GetSigma(self) -> double"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF3IF3_GetSigma(self)

    def SetNormalizeAcrossScale(self, *args):
        """SetNormalizeAcrossScale(self, bool normalizeInScaleSpace)"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF3IF3_SetNormalizeAcrossScale(self, *args)

    def GetNormalizeAcrossScale(self):
        """GetNormalizeAcrossScale(self) -> bool"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF3IF3_GetNormalizeAcrossScale(self)

    __swig_destroy__ = _itkSmoothingRecursiveGaussianImageFilterPython.delete_itkSmoothingRecursiveGaussianImageFilterIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkSmoothingRecursiveGaussianImageFilterIF3IF3"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSmoothingRecursiveGaussianImageFilterIF3IF3"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSmoothingRecursiveGaussianImageFilterIF3IF3
        
        Create a new object of the class itkSmoothingRecursiveGaussianImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSmoothingRecursiveGaussianImageFilterIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSmoothingRecursiveGaussianImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSmoothingRecursiveGaussianImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSmoothingRecursiveGaussianImageFilterIF3IF3.SetSigmaArray = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF3IF3_SetSigmaArray,None,itkSmoothingRecursiveGaussianImageFilterIF3IF3)
itkSmoothingRecursiveGaussianImageFilterIF3IF3.SetSigma = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF3IF3_SetSigma,None,itkSmoothingRecursiveGaussianImageFilterIF3IF3)
itkSmoothingRecursiveGaussianImageFilterIF3IF3.GetSigmaArray = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF3IF3_GetSigmaArray,None,itkSmoothingRecursiveGaussianImageFilterIF3IF3)
itkSmoothingRecursiveGaussianImageFilterIF3IF3.GetSigma = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF3IF3_GetSigma,None,itkSmoothingRecursiveGaussianImageFilterIF3IF3)
itkSmoothingRecursiveGaussianImageFilterIF3IF3.SetNormalizeAcrossScale = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF3IF3_SetNormalizeAcrossScale,None,itkSmoothingRecursiveGaussianImageFilterIF3IF3)
itkSmoothingRecursiveGaussianImageFilterIF3IF3.GetNormalizeAcrossScale = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF3IF3_GetNormalizeAcrossScale,None,itkSmoothingRecursiveGaussianImageFilterIF3IF3)
itkSmoothingRecursiveGaussianImageFilterIF3IF3.GetPointer = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF3IF3_GetPointer,None,itkSmoothingRecursiveGaussianImageFilterIF3IF3)
itkSmoothingRecursiveGaussianImageFilterIF3IF3_swigregister = _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF3IF3_swigregister
itkSmoothingRecursiveGaussianImageFilterIF3IF3_swigregister(itkSmoothingRecursiveGaussianImageFilterIF3IF3)

def itkSmoothingRecursiveGaussianImageFilterIF3IF3___New_orig__():
  """itkSmoothingRecursiveGaussianImageFilterIF3IF3___New_orig__()"""
  return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF3IF3___New_orig__()

def itkSmoothingRecursiveGaussianImageFilterIF3IF3_cast(*args):
  """itkSmoothingRecursiveGaussianImageFilterIF3IF3_cast(itkLightObject obj) -> itkSmoothingRecursiveGaussianImageFilterIF3IF3"""
  return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIF3IF3_cast(*args)

class itkSmoothingRecursiveGaussianImageFilterIUC2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """Proxy of C++ itkSmoothingRecursiveGaussianImageFilterIUC2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_ImageDimension
    InputHasNumericTraitsCheck = _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSigmaArray(self, *args):
        """SetSigmaArray(self, itkFixedArrayD2 sigmas)"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_SetSigmaArray(self, *args)

    def SetSigma(self, *args):
        """SetSigma(self, double sigma)"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_SetSigma(self, *args)

    def GetSigmaArray(self):
        """GetSigmaArray(self) -> itkFixedArrayD2"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_GetSigmaArray(self)

    def GetSigma(self):
        """GetSigma(self) -> double"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_GetSigma(self)

    def SetNormalizeAcrossScale(self, *args):
        """SetNormalizeAcrossScale(self, bool normalizeInScaleSpace)"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_SetNormalizeAcrossScale(self, *args)

    def GetNormalizeAcrossScale(self):
        """GetNormalizeAcrossScale(self) -> bool"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_GetNormalizeAcrossScale(self)

    __swig_destroy__ = _itkSmoothingRecursiveGaussianImageFilterPython.delete_itkSmoothingRecursiveGaussianImageFilterIUC2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSmoothingRecursiveGaussianImageFilterIUC2IUC2"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSmoothingRecursiveGaussianImageFilterIUC2IUC2"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSmoothingRecursiveGaussianImageFilterIUC2IUC2
        
        Create a new object of the class itkSmoothingRecursiveGaussianImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSmoothingRecursiveGaussianImageFilterIUC2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSmoothingRecursiveGaussianImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSmoothingRecursiveGaussianImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSmoothingRecursiveGaussianImageFilterIUC2IUC2.SetSigmaArray = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_SetSigmaArray,None,itkSmoothingRecursiveGaussianImageFilterIUC2IUC2)
itkSmoothingRecursiveGaussianImageFilterIUC2IUC2.SetSigma = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_SetSigma,None,itkSmoothingRecursiveGaussianImageFilterIUC2IUC2)
itkSmoothingRecursiveGaussianImageFilterIUC2IUC2.GetSigmaArray = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_GetSigmaArray,None,itkSmoothingRecursiveGaussianImageFilterIUC2IUC2)
itkSmoothingRecursiveGaussianImageFilterIUC2IUC2.GetSigma = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_GetSigma,None,itkSmoothingRecursiveGaussianImageFilterIUC2IUC2)
itkSmoothingRecursiveGaussianImageFilterIUC2IUC2.SetNormalizeAcrossScale = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_SetNormalizeAcrossScale,None,itkSmoothingRecursiveGaussianImageFilterIUC2IUC2)
itkSmoothingRecursiveGaussianImageFilterIUC2IUC2.GetNormalizeAcrossScale = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_GetNormalizeAcrossScale,None,itkSmoothingRecursiveGaussianImageFilterIUC2IUC2)
itkSmoothingRecursiveGaussianImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_GetPointer,None,itkSmoothingRecursiveGaussianImageFilterIUC2IUC2)
itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_swigregister = _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_swigregister
itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_swigregister(itkSmoothingRecursiveGaussianImageFilterIUC2IUC2)

def itkSmoothingRecursiveGaussianImageFilterIUC2IUC2___New_orig__():
  """itkSmoothingRecursiveGaussianImageFilterIUC2IUC2___New_orig__()"""
  return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC2IUC2___New_orig__()

def itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_cast(*args):
  """itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkSmoothingRecursiveGaussianImageFilterIUC2IUC2"""
  return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_cast(*args)

class itkSmoothingRecursiveGaussianImageFilterIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """Proxy of C++ itkSmoothingRecursiveGaussianImageFilterIUC3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_ImageDimension
    InputHasNumericTraitsCheck = _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSigmaArray(self, *args):
        """SetSigmaArray(self, itkFixedArrayD3 sigmas)"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_SetSigmaArray(self, *args)

    def SetSigma(self, *args):
        """SetSigma(self, double sigma)"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_SetSigma(self, *args)

    def GetSigmaArray(self):
        """GetSigmaArray(self) -> itkFixedArrayD3"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_GetSigmaArray(self)

    def GetSigma(self):
        """GetSigma(self) -> double"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_GetSigma(self)

    def SetNormalizeAcrossScale(self, *args):
        """SetNormalizeAcrossScale(self, bool normalizeInScaleSpace)"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_SetNormalizeAcrossScale(self, *args)

    def GetNormalizeAcrossScale(self):
        """GetNormalizeAcrossScale(self) -> bool"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_GetNormalizeAcrossScale(self)

    __swig_destroy__ = _itkSmoothingRecursiveGaussianImageFilterPython.delete_itkSmoothingRecursiveGaussianImageFilterIUC3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkSmoothingRecursiveGaussianImageFilterIUC3IUC3"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSmoothingRecursiveGaussianImageFilterIUC3IUC3"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSmoothingRecursiveGaussianImageFilterIUC3IUC3
        
        Create a new object of the class itkSmoothingRecursiveGaussianImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSmoothingRecursiveGaussianImageFilterIUC3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSmoothingRecursiveGaussianImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSmoothingRecursiveGaussianImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSmoothingRecursiveGaussianImageFilterIUC3IUC3.SetSigmaArray = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_SetSigmaArray,None,itkSmoothingRecursiveGaussianImageFilterIUC3IUC3)
itkSmoothingRecursiveGaussianImageFilterIUC3IUC3.SetSigma = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_SetSigma,None,itkSmoothingRecursiveGaussianImageFilterIUC3IUC3)
itkSmoothingRecursiveGaussianImageFilterIUC3IUC3.GetSigmaArray = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_GetSigmaArray,None,itkSmoothingRecursiveGaussianImageFilterIUC3IUC3)
itkSmoothingRecursiveGaussianImageFilterIUC3IUC3.GetSigma = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_GetSigma,None,itkSmoothingRecursiveGaussianImageFilterIUC3IUC3)
itkSmoothingRecursiveGaussianImageFilterIUC3IUC3.SetNormalizeAcrossScale = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_SetNormalizeAcrossScale,None,itkSmoothingRecursiveGaussianImageFilterIUC3IUC3)
itkSmoothingRecursiveGaussianImageFilterIUC3IUC3.GetNormalizeAcrossScale = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_GetNormalizeAcrossScale,None,itkSmoothingRecursiveGaussianImageFilterIUC3IUC3)
itkSmoothingRecursiveGaussianImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_GetPointer,None,itkSmoothingRecursiveGaussianImageFilterIUC3IUC3)
itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_swigregister = _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_swigregister
itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_swigregister(itkSmoothingRecursiveGaussianImageFilterIUC3IUC3)

def itkSmoothingRecursiveGaussianImageFilterIUC3IUC3___New_orig__():
  """itkSmoothingRecursiveGaussianImageFilterIUC3IUC3___New_orig__()"""
  return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC3IUC3___New_orig__()

def itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_cast(*args):
  """itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkSmoothingRecursiveGaussianImageFilterIUC3IUC3"""
  return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_cast(*args)

class itkSmoothingRecursiveGaussianImageFilterIUL2IUL2(itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2):
    """Proxy of C++ itkSmoothingRecursiveGaussianImageFilterIUL2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_ImageDimension
    InputHasNumericTraitsCheck = _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSigmaArray(self, *args):
        """SetSigmaArray(self, itkFixedArrayD2 sigmas)"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_SetSigmaArray(self, *args)

    def SetSigma(self, *args):
        """SetSigma(self, double sigma)"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_SetSigma(self, *args)

    def GetSigmaArray(self):
        """GetSigmaArray(self) -> itkFixedArrayD2"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_GetSigmaArray(self)

    def GetSigma(self):
        """GetSigma(self) -> double"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_GetSigma(self)

    def SetNormalizeAcrossScale(self, *args):
        """SetNormalizeAcrossScale(self, bool normalizeInScaleSpace)"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_SetNormalizeAcrossScale(self, *args)

    def GetNormalizeAcrossScale(self):
        """GetNormalizeAcrossScale(self) -> bool"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_GetNormalizeAcrossScale(self)

    __swig_destroy__ = _itkSmoothingRecursiveGaussianImageFilterPython.delete_itkSmoothingRecursiveGaussianImageFilterIUL2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSmoothingRecursiveGaussianImageFilterIUL2IUL2"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSmoothingRecursiveGaussianImageFilterIUL2IUL2"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSmoothingRecursiveGaussianImageFilterIUL2IUL2
        
        Create a new object of the class itkSmoothingRecursiveGaussianImageFilterIUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSmoothingRecursiveGaussianImageFilterIUL2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSmoothingRecursiveGaussianImageFilterIUL2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSmoothingRecursiveGaussianImageFilterIUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSmoothingRecursiveGaussianImageFilterIUL2IUL2.SetSigmaArray = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_SetSigmaArray,None,itkSmoothingRecursiveGaussianImageFilterIUL2IUL2)
itkSmoothingRecursiveGaussianImageFilterIUL2IUL2.SetSigma = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_SetSigma,None,itkSmoothingRecursiveGaussianImageFilterIUL2IUL2)
itkSmoothingRecursiveGaussianImageFilterIUL2IUL2.GetSigmaArray = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_GetSigmaArray,None,itkSmoothingRecursiveGaussianImageFilterIUL2IUL2)
itkSmoothingRecursiveGaussianImageFilterIUL2IUL2.GetSigma = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_GetSigma,None,itkSmoothingRecursiveGaussianImageFilterIUL2IUL2)
itkSmoothingRecursiveGaussianImageFilterIUL2IUL2.SetNormalizeAcrossScale = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_SetNormalizeAcrossScale,None,itkSmoothingRecursiveGaussianImageFilterIUL2IUL2)
itkSmoothingRecursiveGaussianImageFilterIUL2IUL2.GetNormalizeAcrossScale = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_GetNormalizeAcrossScale,None,itkSmoothingRecursiveGaussianImageFilterIUL2IUL2)
itkSmoothingRecursiveGaussianImageFilterIUL2IUL2.GetPointer = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_GetPointer,None,itkSmoothingRecursiveGaussianImageFilterIUL2IUL2)
itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_swigregister = _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_swigregister
itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_swigregister(itkSmoothingRecursiveGaussianImageFilterIUL2IUL2)

def itkSmoothingRecursiveGaussianImageFilterIUL2IUL2___New_orig__():
  """itkSmoothingRecursiveGaussianImageFilterIUL2IUL2___New_orig__()"""
  return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL2IUL2___New_orig__()

def itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_cast(*args):
  """itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_cast(itkLightObject obj) -> itkSmoothingRecursiveGaussianImageFilterIUL2IUL2"""
  return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_cast(*args)

class itkSmoothingRecursiveGaussianImageFilterIUL3IUL3(itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3):
    """Proxy of C++ itkSmoothingRecursiveGaussianImageFilterIUL3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_ImageDimension
    InputHasNumericTraitsCheck = _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSigmaArray(self, *args):
        """SetSigmaArray(self, itkFixedArrayD3 sigmas)"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_SetSigmaArray(self, *args)

    def SetSigma(self, *args):
        """SetSigma(self, double sigma)"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_SetSigma(self, *args)

    def GetSigmaArray(self):
        """GetSigmaArray(self) -> itkFixedArrayD3"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_GetSigmaArray(self)

    def GetSigma(self):
        """GetSigma(self) -> double"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_GetSigma(self)

    def SetNormalizeAcrossScale(self, *args):
        """SetNormalizeAcrossScale(self, bool normalizeInScaleSpace)"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_SetNormalizeAcrossScale(self, *args)

    def GetNormalizeAcrossScale(self):
        """GetNormalizeAcrossScale(self) -> bool"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_GetNormalizeAcrossScale(self)

    __swig_destroy__ = _itkSmoothingRecursiveGaussianImageFilterPython.delete_itkSmoothingRecursiveGaussianImageFilterIUL3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkSmoothingRecursiveGaussianImageFilterIUL3IUL3"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSmoothingRecursiveGaussianImageFilterIUL3IUL3"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSmoothingRecursiveGaussianImageFilterIUL3IUL3
        
        Create a new object of the class itkSmoothingRecursiveGaussianImageFilterIUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSmoothingRecursiveGaussianImageFilterIUL3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSmoothingRecursiveGaussianImageFilterIUL3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSmoothingRecursiveGaussianImageFilterIUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSmoothingRecursiveGaussianImageFilterIUL3IUL3.SetSigmaArray = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_SetSigmaArray,None,itkSmoothingRecursiveGaussianImageFilterIUL3IUL3)
itkSmoothingRecursiveGaussianImageFilterIUL3IUL3.SetSigma = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_SetSigma,None,itkSmoothingRecursiveGaussianImageFilterIUL3IUL3)
itkSmoothingRecursiveGaussianImageFilterIUL3IUL3.GetSigmaArray = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_GetSigmaArray,None,itkSmoothingRecursiveGaussianImageFilterIUL3IUL3)
itkSmoothingRecursiveGaussianImageFilterIUL3IUL3.GetSigma = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_GetSigma,None,itkSmoothingRecursiveGaussianImageFilterIUL3IUL3)
itkSmoothingRecursiveGaussianImageFilterIUL3IUL3.SetNormalizeAcrossScale = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_SetNormalizeAcrossScale,None,itkSmoothingRecursiveGaussianImageFilterIUL3IUL3)
itkSmoothingRecursiveGaussianImageFilterIUL3IUL3.GetNormalizeAcrossScale = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_GetNormalizeAcrossScale,None,itkSmoothingRecursiveGaussianImageFilterIUL3IUL3)
itkSmoothingRecursiveGaussianImageFilterIUL3IUL3.GetPointer = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_GetPointer,None,itkSmoothingRecursiveGaussianImageFilterIUL3IUL3)
itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_swigregister = _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_swigregister
itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_swigregister(itkSmoothingRecursiveGaussianImageFilterIUL3IUL3)

def itkSmoothingRecursiveGaussianImageFilterIUL3IUL3___New_orig__():
  """itkSmoothingRecursiveGaussianImageFilterIUL3IUL3___New_orig__()"""
  return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL3IUL3___New_orig__()

def itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_cast(*args):
  """itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_cast(itkLightObject obj) -> itkSmoothingRecursiveGaussianImageFilterIUL3IUL3"""
  return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_cast(*args)

class itkSmoothingRecursiveGaussianImageFilterIUS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """Proxy of C++ itkSmoothingRecursiveGaussianImageFilterIUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_ImageDimension
    InputHasNumericTraitsCheck = _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSigmaArray(self, *args):
        """SetSigmaArray(self, itkFixedArrayD2 sigmas)"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_SetSigmaArray(self, *args)

    def SetSigma(self, *args):
        """SetSigma(self, double sigma)"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_SetSigma(self, *args)

    def GetSigmaArray(self):
        """GetSigmaArray(self) -> itkFixedArrayD2"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_GetSigmaArray(self)

    def GetSigma(self):
        """GetSigma(self) -> double"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_GetSigma(self)

    def SetNormalizeAcrossScale(self, *args):
        """SetNormalizeAcrossScale(self, bool normalizeInScaleSpace)"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_SetNormalizeAcrossScale(self, *args)

    def GetNormalizeAcrossScale(self):
        """GetNormalizeAcrossScale(self) -> bool"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_GetNormalizeAcrossScale(self)

    __swig_destroy__ = _itkSmoothingRecursiveGaussianImageFilterPython.delete_itkSmoothingRecursiveGaussianImageFilterIUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSmoothingRecursiveGaussianImageFilterIUS2IUS2"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSmoothingRecursiveGaussianImageFilterIUS2IUS2"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSmoothingRecursiveGaussianImageFilterIUS2IUS2
        
        Create a new object of the class itkSmoothingRecursiveGaussianImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSmoothingRecursiveGaussianImageFilterIUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSmoothingRecursiveGaussianImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSmoothingRecursiveGaussianImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSmoothingRecursiveGaussianImageFilterIUS2IUS2.SetSigmaArray = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_SetSigmaArray,None,itkSmoothingRecursiveGaussianImageFilterIUS2IUS2)
itkSmoothingRecursiveGaussianImageFilterIUS2IUS2.SetSigma = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_SetSigma,None,itkSmoothingRecursiveGaussianImageFilterIUS2IUS2)
itkSmoothingRecursiveGaussianImageFilterIUS2IUS2.GetSigmaArray = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_GetSigmaArray,None,itkSmoothingRecursiveGaussianImageFilterIUS2IUS2)
itkSmoothingRecursiveGaussianImageFilterIUS2IUS2.GetSigma = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_GetSigma,None,itkSmoothingRecursiveGaussianImageFilterIUS2IUS2)
itkSmoothingRecursiveGaussianImageFilterIUS2IUS2.SetNormalizeAcrossScale = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_SetNormalizeAcrossScale,None,itkSmoothingRecursiveGaussianImageFilterIUS2IUS2)
itkSmoothingRecursiveGaussianImageFilterIUS2IUS2.GetNormalizeAcrossScale = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_GetNormalizeAcrossScale,None,itkSmoothingRecursiveGaussianImageFilterIUS2IUS2)
itkSmoothingRecursiveGaussianImageFilterIUS2IUS2.GetPointer = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_GetPointer,None,itkSmoothingRecursiveGaussianImageFilterIUS2IUS2)
itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_swigregister = _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_swigregister
itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_swigregister(itkSmoothingRecursiveGaussianImageFilterIUS2IUS2)

def itkSmoothingRecursiveGaussianImageFilterIUS2IUS2___New_orig__():
  """itkSmoothingRecursiveGaussianImageFilterIUS2IUS2___New_orig__()"""
  return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS2IUS2___New_orig__()

def itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_cast(*args):
  """itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkSmoothingRecursiveGaussianImageFilterIUS2IUS2"""
  return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_cast(*args)

class itkSmoothingRecursiveGaussianImageFilterIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """Proxy of C++ itkSmoothingRecursiveGaussianImageFilterIUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_ImageDimension
    InputHasNumericTraitsCheck = _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSigmaArray(self, *args):
        """SetSigmaArray(self, itkFixedArrayD3 sigmas)"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_SetSigmaArray(self, *args)

    def SetSigma(self, *args):
        """SetSigma(self, double sigma)"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_SetSigma(self, *args)

    def GetSigmaArray(self):
        """GetSigmaArray(self) -> itkFixedArrayD3"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_GetSigmaArray(self)

    def GetSigma(self):
        """GetSigma(self) -> double"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_GetSigma(self)

    def SetNormalizeAcrossScale(self, *args):
        """SetNormalizeAcrossScale(self, bool normalizeInScaleSpace)"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_SetNormalizeAcrossScale(self, *args)

    def GetNormalizeAcrossScale(self):
        """GetNormalizeAcrossScale(self) -> bool"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_GetNormalizeAcrossScale(self)

    __swig_destroy__ = _itkSmoothingRecursiveGaussianImageFilterPython.delete_itkSmoothingRecursiveGaussianImageFilterIUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkSmoothingRecursiveGaussianImageFilterIUS3IUS3"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSmoothingRecursiveGaussianImageFilterIUS3IUS3"""
        return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSmoothingRecursiveGaussianImageFilterIUS3IUS3
        
        Create a new object of the class itkSmoothingRecursiveGaussianImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSmoothingRecursiveGaussianImageFilterIUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSmoothingRecursiveGaussianImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSmoothingRecursiveGaussianImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSmoothingRecursiveGaussianImageFilterIUS3IUS3.SetSigmaArray = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_SetSigmaArray,None,itkSmoothingRecursiveGaussianImageFilterIUS3IUS3)
itkSmoothingRecursiveGaussianImageFilterIUS3IUS3.SetSigma = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_SetSigma,None,itkSmoothingRecursiveGaussianImageFilterIUS3IUS3)
itkSmoothingRecursiveGaussianImageFilterIUS3IUS3.GetSigmaArray = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_GetSigmaArray,None,itkSmoothingRecursiveGaussianImageFilterIUS3IUS3)
itkSmoothingRecursiveGaussianImageFilterIUS3IUS3.GetSigma = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_GetSigma,None,itkSmoothingRecursiveGaussianImageFilterIUS3IUS3)
itkSmoothingRecursiveGaussianImageFilterIUS3IUS3.SetNormalizeAcrossScale = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_SetNormalizeAcrossScale,None,itkSmoothingRecursiveGaussianImageFilterIUS3IUS3)
itkSmoothingRecursiveGaussianImageFilterIUS3IUS3.GetNormalizeAcrossScale = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_GetNormalizeAcrossScale,None,itkSmoothingRecursiveGaussianImageFilterIUS3IUS3)
itkSmoothingRecursiveGaussianImageFilterIUS3IUS3.GetPointer = new_instancemethod(_itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_GetPointer,None,itkSmoothingRecursiveGaussianImageFilterIUS3IUS3)
itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_swigregister = _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_swigregister
itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_swigregister(itkSmoothingRecursiveGaussianImageFilterIUS3IUS3)

def itkSmoothingRecursiveGaussianImageFilterIUS3IUS3___New_orig__():
  """itkSmoothingRecursiveGaussianImageFilterIUS3IUS3___New_orig__()"""
  return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS3IUS3___New_orig__()

def itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_cast(*args):
  """itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkSmoothingRecursiveGaussianImageFilterIUS3IUS3"""
  return _itkSmoothingRecursiveGaussianImageFilterPython.itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_cast(*args)



