# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkBSplineDeformableTransformPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkBSplineDeformableTransformPython', [dirname(__file__)])
        except ImportError:
            import _itkBSplineDeformableTransformPython
            return _itkBSplineDeformableTransformPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkBSplineDeformableTransformPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkBSplineDeformableTransformPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkBSplineDeformableTransformPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkPointPython
import vnl_vectorPython
import vcl_complexPython
import pyBasePython
import vnl_matrixPython
import itkFixedArrayPython
import itkVectorPython
import vnl_vector_refPython
import itkImagePython
import itkCovariantVectorPython
import ITKRegionsPython
import ITKCommonBasePython
import itkEventObjectsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkTransformPython
import itkArray2DPython
import itkArrayPython
import itkContinuousIndexPython
import itkBSplineInterpolationWeightFunctionPython
import itkFunctionBasePython
def itkBSplineDeformableTransformD33_New():
  return itkBSplineDeformableTransformD33.New()

def itkBSplineDeformableTransformD22_New():
  return itkBSplineDeformableTransformD22.New()

class itkBSplineDeformableTransformD22(itkTransformPython.itkTransformD22):
    """Proxy of C++ itkBSplineDeformableTransformD22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SpaceDimension = _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_SpaceDimension
    SplineOrder = _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_SplineOrder
    def __New_orig__():
        """__New_orig__()"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetIdentity(self):
        """SetIdentity(self)"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_SetIdentity(self)

    def GetCoefficientImage(self, *args):
        """
        GetCoefficientImage(self)
        GetCoefficientImage(self)
        """
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_GetCoefficientImage(self, *args)

    def SetCoefficientImage(self, *args):
        """SetCoefficientImage(self,  images)"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_SetCoefficientImage(self, *args)

    def SetGridRegion(self, *args):
        """SetGridRegion(self, itkImageRegion2 region)"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_SetGridRegion(self, *args)

    def GetGridRegion(self):
        """GetGridRegion(self) -> itkImageRegion2"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_GetGridRegion(self)

    def SetGridSpacing(self, *args):
        """SetGridSpacing(self, itkVectorD2 spacing)"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_SetGridSpacing(self, *args)

    def GetGridSpacing(self):
        """GetGridSpacing(self) -> itkVectorD2"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_GetGridSpacing(self)

    def SetGridDirection(self, *args):
        """SetGridDirection(self, itkMatrixD22 spacing)"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_SetGridDirection(self, *args)

    def GetGridDirection(self):
        """GetGridDirection(self) -> itkMatrixD22"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_GetGridDirection(self)

    def SetGridOrigin(self, *args):
        """SetGridOrigin(self, itkPointD2 origin)"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_SetGridOrigin(self, *args)

    def GetGridOrigin(self):
        """GetGridOrigin(self) -> itkPointD2"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_GetGridOrigin(self)

    def SetBulkTransform(self, *args):
        """SetBulkTransform(self, itkTransformD22 _arg)"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_SetBulkTransform(self, *args)

    def GetBulkTransform(self):
        """GetBulkTransform(self) -> itkTransformD22"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_GetBulkTransform(self)

    def TransformPoint(self, *args):
        """
        TransformPoint(self, itkPointD2 point) -> itkPointD2
        TransformPoint(self, itkPointD2 inputPoint, itkPointD2 outputPoint, itkArrayD weights, 
            itkArrayUL indices, bool inside)
        """
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_TransformPoint(self, *args)

    def GetNumberOfWeights(self):
        """GetNumberOfWeights(self) -> unsigned long"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_GetNumberOfWeights(self)

    def TransformVector(self, *args):
        """
        TransformVector(self, itkVectorD2 arg0) -> itkVectorD2
        TransformVector(self, vnl_vector_fixed<(double,2u)> arg0) -> vnl_vector_fixed<(double,2u)>
        """
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_TransformVector(self, *args)

    def GetJacobian(self, *args):
        """
        GetJacobian(self, itkPointD2 inputPoint, itkArrayD weights, itkArrayUL indices)
        GetJacobian(self, itkPointD2 point) -> itkArray2DD
        """
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_GetJacobian(self, *args)

    def GetNumberOfParametersPerDimension(self):
        """GetNumberOfParametersPerDimension(self) -> unsigned int"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_GetNumberOfParametersPerDimension(self)

    def GetValidRegion(self):
        """GetValidRegion(self) -> itkImageRegion2"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_GetValidRegion(self)

    def GetNumberOfAffectedWeights(self):
        """GetNumberOfAffectedWeights(self) -> unsigned int"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_GetNumberOfAffectedWeights(self)

    __swig_destroy__ = _itkBSplineDeformableTransformPython.delete_itkBSplineDeformableTransformD22
    def cast(*args):
        """cast(itkLightObject obj) -> itkBSplineDeformableTransformD22"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBSplineDeformableTransformD22"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBSplineDeformableTransformD22
        
        Create a new object of the class itkBSplineDeformableTransformD22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBSplineDeformableTransformD22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBSplineDeformableTransformD22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBSplineDeformableTransformD22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBSplineDeformableTransformD22.SetIdentity = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_SetIdentity,None,itkBSplineDeformableTransformD22)
itkBSplineDeformableTransformD22.GetCoefficientImage = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_GetCoefficientImage,None,itkBSplineDeformableTransformD22)
itkBSplineDeformableTransformD22.SetCoefficientImage = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_SetCoefficientImage,None,itkBSplineDeformableTransformD22)
itkBSplineDeformableTransformD22.SetGridRegion = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_SetGridRegion,None,itkBSplineDeformableTransformD22)
itkBSplineDeformableTransformD22.GetGridRegion = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_GetGridRegion,None,itkBSplineDeformableTransformD22)
itkBSplineDeformableTransformD22.SetGridSpacing = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_SetGridSpacing,None,itkBSplineDeformableTransformD22)
itkBSplineDeformableTransformD22.GetGridSpacing = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_GetGridSpacing,None,itkBSplineDeformableTransformD22)
itkBSplineDeformableTransformD22.SetGridDirection = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_SetGridDirection,None,itkBSplineDeformableTransformD22)
itkBSplineDeformableTransformD22.GetGridDirection = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_GetGridDirection,None,itkBSplineDeformableTransformD22)
itkBSplineDeformableTransformD22.SetGridOrigin = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_SetGridOrigin,None,itkBSplineDeformableTransformD22)
itkBSplineDeformableTransformD22.GetGridOrigin = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_GetGridOrigin,None,itkBSplineDeformableTransformD22)
itkBSplineDeformableTransformD22.SetBulkTransform = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_SetBulkTransform,None,itkBSplineDeformableTransformD22)
itkBSplineDeformableTransformD22.GetBulkTransform = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_GetBulkTransform,None,itkBSplineDeformableTransformD22)
itkBSplineDeformableTransformD22.TransformPoint = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_TransformPoint,None,itkBSplineDeformableTransformD22)
itkBSplineDeformableTransformD22.GetNumberOfWeights = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_GetNumberOfWeights,None,itkBSplineDeformableTransformD22)
itkBSplineDeformableTransformD22.TransformVector = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_TransformVector,None,itkBSplineDeformableTransformD22)
itkBSplineDeformableTransformD22.GetJacobian = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_GetJacobian,None,itkBSplineDeformableTransformD22)
itkBSplineDeformableTransformD22.GetNumberOfParametersPerDimension = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_GetNumberOfParametersPerDimension,None,itkBSplineDeformableTransformD22)
itkBSplineDeformableTransformD22.GetValidRegion = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_GetValidRegion,None,itkBSplineDeformableTransformD22)
itkBSplineDeformableTransformD22.GetNumberOfAffectedWeights = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_GetNumberOfAffectedWeights,None,itkBSplineDeformableTransformD22)
itkBSplineDeformableTransformD22.GetPointer = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_GetPointer,None,itkBSplineDeformableTransformD22)
itkBSplineDeformableTransformD22_swigregister = _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_swigregister
itkBSplineDeformableTransformD22_swigregister(itkBSplineDeformableTransformD22)

def itkBSplineDeformableTransformD22___New_orig__():
  """itkBSplineDeformableTransformD22___New_orig__()"""
  return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22___New_orig__()

def itkBSplineDeformableTransformD22_cast(*args):
  """itkBSplineDeformableTransformD22_cast(itkLightObject obj) -> itkBSplineDeformableTransformD22"""
  return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD22_cast(*args)

class itkBSplineDeformableTransformD33(itkTransformPython.itkTransformD33):
    """Proxy of C++ itkBSplineDeformableTransformD33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SpaceDimension = _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_SpaceDimension
    SplineOrder = _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_SplineOrder
    def __New_orig__():
        """__New_orig__()"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetIdentity(self):
        """SetIdentity(self)"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_SetIdentity(self)

    def GetCoefficientImage(self, *args):
        """
        GetCoefficientImage(self)
        GetCoefficientImage(self)
        """
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_GetCoefficientImage(self, *args)

    def SetCoefficientImage(self, *args):
        """SetCoefficientImage(self,  images)"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_SetCoefficientImage(self, *args)

    def SetGridRegion(self, *args):
        """SetGridRegion(self, itkImageRegion3 region)"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_SetGridRegion(self, *args)

    def GetGridRegion(self):
        """GetGridRegion(self) -> itkImageRegion3"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_GetGridRegion(self)

    def SetGridSpacing(self, *args):
        """SetGridSpacing(self, itkVectorD3 spacing)"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_SetGridSpacing(self, *args)

    def GetGridSpacing(self):
        """GetGridSpacing(self) -> itkVectorD3"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_GetGridSpacing(self)

    def SetGridDirection(self, *args):
        """SetGridDirection(self, itkMatrixD33 spacing)"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_SetGridDirection(self, *args)

    def GetGridDirection(self):
        """GetGridDirection(self) -> itkMatrixD33"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_GetGridDirection(self)

    def SetGridOrigin(self, *args):
        """SetGridOrigin(self, itkPointD3 origin)"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_SetGridOrigin(self, *args)

    def GetGridOrigin(self):
        """GetGridOrigin(self) -> itkPointD3"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_GetGridOrigin(self)

    def SetBulkTransform(self, *args):
        """SetBulkTransform(self, itkTransformD33 _arg)"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_SetBulkTransform(self, *args)

    def GetBulkTransform(self):
        """GetBulkTransform(self) -> itkTransformD33"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_GetBulkTransform(self)

    def TransformPoint(self, *args):
        """
        TransformPoint(self, itkPointD3 point) -> itkPointD3
        TransformPoint(self, itkPointD3 inputPoint, itkPointD3 outputPoint, itkArrayD weights, 
            itkArrayUL indices, bool inside)
        """
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_TransformPoint(self, *args)

    def GetNumberOfWeights(self):
        """GetNumberOfWeights(self) -> unsigned long"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_GetNumberOfWeights(self)

    def TransformVector(self, *args):
        """
        TransformVector(self, itkVectorD3 arg0) -> itkVectorD3
        TransformVector(self, vnl_vector_fixed<(double,3u)> arg0) -> vnl_vector_fixed<(double,3u)>
        """
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_TransformVector(self, *args)

    def GetJacobian(self, *args):
        """
        GetJacobian(self, itkPointD3 inputPoint, itkArrayD weights, itkArrayUL indices)
        GetJacobian(self, itkPointD3 point) -> itkArray2DD
        """
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_GetJacobian(self, *args)

    def GetNumberOfParametersPerDimension(self):
        """GetNumberOfParametersPerDimension(self) -> unsigned int"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_GetNumberOfParametersPerDimension(self)

    def GetValidRegion(self):
        """GetValidRegion(self) -> itkImageRegion3"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_GetValidRegion(self)

    def GetNumberOfAffectedWeights(self):
        """GetNumberOfAffectedWeights(self) -> unsigned int"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_GetNumberOfAffectedWeights(self)

    __swig_destroy__ = _itkBSplineDeformableTransformPython.delete_itkBSplineDeformableTransformD33
    def cast(*args):
        """cast(itkLightObject obj) -> itkBSplineDeformableTransformD33"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBSplineDeformableTransformD33"""
        return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBSplineDeformableTransformD33
        
        Create a new object of the class itkBSplineDeformableTransformD33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBSplineDeformableTransformD33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBSplineDeformableTransformD33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBSplineDeformableTransformD33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBSplineDeformableTransformD33.SetIdentity = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_SetIdentity,None,itkBSplineDeformableTransformD33)
itkBSplineDeformableTransformD33.GetCoefficientImage = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_GetCoefficientImage,None,itkBSplineDeformableTransformD33)
itkBSplineDeformableTransformD33.SetCoefficientImage = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_SetCoefficientImage,None,itkBSplineDeformableTransformD33)
itkBSplineDeformableTransformD33.SetGridRegion = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_SetGridRegion,None,itkBSplineDeformableTransformD33)
itkBSplineDeformableTransformD33.GetGridRegion = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_GetGridRegion,None,itkBSplineDeformableTransformD33)
itkBSplineDeformableTransformD33.SetGridSpacing = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_SetGridSpacing,None,itkBSplineDeformableTransformD33)
itkBSplineDeformableTransformD33.GetGridSpacing = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_GetGridSpacing,None,itkBSplineDeformableTransformD33)
itkBSplineDeformableTransformD33.SetGridDirection = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_SetGridDirection,None,itkBSplineDeformableTransformD33)
itkBSplineDeformableTransformD33.GetGridDirection = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_GetGridDirection,None,itkBSplineDeformableTransformD33)
itkBSplineDeformableTransformD33.SetGridOrigin = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_SetGridOrigin,None,itkBSplineDeformableTransformD33)
itkBSplineDeformableTransformD33.GetGridOrigin = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_GetGridOrigin,None,itkBSplineDeformableTransformD33)
itkBSplineDeformableTransformD33.SetBulkTransform = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_SetBulkTransform,None,itkBSplineDeformableTransformD33)
itkBSplineDeformableTransformD33.GetBulkTransform = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_GetBulkTransform,None,itkBSplineDeformableTransformD33)
itkBSplineDeformableTransformD33.TransformPoint = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_TransformPoint,None,itkBSplineDeformableTransformD33)
itkBSplineDeformableTransformD33.GetNumberOfWeights = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_GetNumberOfWeights,None,itkBSplineDeformableTransformD33)
itkBSplineDeformableTransformD33.TransformVector = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_TransformVector,None,itkBSplineDeformableTransformD33)
itkBSplineDeformableTransformD33.GetJacobian = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_GetJacobian,None,itkBSplineDeformableTransformD33)
itkBSplineDeformableTransformD33.GetNumberOfParametersPerDimension = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_GetNumberOfParametersPerDimension,None,itkBSplineDeformableTransformD33)
itkBSplineDeformableTransformD33.GetValidRegion = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_GetValidRegion,None,itkBSplineDeformableTransformD33)
itkBSplineDeformableTransformD33.GetNumberOfAffectedWeights = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_GetNumberOfAffectedWeights,None,itkBSplineDeformableTransformD33)
itkBSplineDeformableTransformD33.GetPointer = new_instancemethod(_itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_GetPointer,None,itkBSplineDeformableTransformD33)
itkBSplineDeformableTransformD33_swigregister = _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_swigregister
itkBSplineDeformableTransformD33_swigregister(itkBSplineDeformableTransformD33)

def itkBSplineDeformableTransformD33___New_orig__():
  """itkBSplineDeformableTransformD33___New_orig__()"""
  return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33___New_orig__()

def itkBSplineDeformableTransformD33_cast(*args):
  """itkBSplineDeformableTransformD33_cast(itkLightObject obj) -> itkBSplineDeformableTransformD33"""
  return _itkBSplineDeformableTransformPython.itkBSplineDeformableTransformD33_cast(*args)



