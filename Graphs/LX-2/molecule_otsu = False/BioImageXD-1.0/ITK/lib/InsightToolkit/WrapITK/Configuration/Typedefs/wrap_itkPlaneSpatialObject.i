// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkPlaneSpatialObjectChicken
#endif
#ifdef SWIGCSHARP
%module itkPlaneSpatialObjectCsharp
#endif
#ifdef SWIGGUILE
%module itkPlaneSpatialObjectGuile
#endif
#ifdef SWIGJAVA
%module itkPlaneSpatialObjectJava
#endif
#ifdef SWIGLUA
%module itkPlaneSpatialObjectLua
#endif
#ifdef SWIGMODULA3
%module itkPlaneSpatialObjectModula3
#endif
#ifdef SWIGMZSCHEME
%module itkPlaneSpatialObjectMzscheme
#endif
#ifdef SWIGOCAML
%module itkPlaneSpatialObjectOcaml
#endif
#ifdef SWIGPERL
%module itkPlaneSpatialObjectPerl
#endif
#ifdef SWIGPERL5
%module itkPlaneSpatialObjectPerl5
#endif
#ifdef SWIGPHP
%module itkPlaneSpatialObjectPhp
#endif
#ifdef SWIGPHP4
%module itkPlaneSpatialObjectPhp4
#endif
#ifdef SWIGPHP5
%module itkPlaneSpatialObjectPhp5
#endif
#ifdef SWIGPIKE
%module itkPlaneSpatialObjectPike
#endif
#ifdef SWIGPYTHON
%module itkPlaneSpatialObjectPython
#endif
#ifdef SWIGR
%module itkPlaneSpatialObjectR
#endif
#ifdef SWIGRUBY
%module itkPlaneSpatialObjectRuby
#endif
#ifdef SWIGSEXP
%module itkPlaneSpatialObjectSexp
#endif
#ifdef SWIGTCL
%module itkPlaneSpatialObjectTcl
#endif
#ifdef SWIGXML
%module itkPlaneSpatialObjectXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "Calculators.includes"
#include "SpatialObject.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkSpatialObjectBase.i
%import wrap_itkPoint.i


%include itk.i
%include wrap_itkPlaneSpatialObject_ext.i


 class itkPlaneSpatialObject2 : public itkSpatialObject2 {
   public:
     enum  {  NumberOfDimension = 2 };
     static itkPlaneSpatialObject2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual bool ValueAt(itkPointD2 const & point, double & value, unsigned int depth = 0, char * name = 0l) const;
     virtual bool IsEvaluableAt(itkPointD2 const & point, unsigned int depth = 0, char * name = 0l) const;
     virtual bool IsInside(itkPointD2 const & point, unsigned int depth, char * name) const;
     virtual bool IsInside(itkPointD2 const & point) const;
     virtual bool ComputeLocalBoundingBox() const;
     virtual void SetLowerPoint(itkPointD2 const _arg);
     virtual void SetUpperPoint(itkPointD2 const _arg);
     virtual itkPointD2 GetLowerPoint();
     virtual itkPointD2 GetUpperPoint();
   private:
   protected:
     itkPlaneSpatialObject2(itkPlaneSpatialObject2 const & arg0);
     void operator=(itkPlaneSpatialObject2 const & arg0);
     itkPlaneSpatialObject2();
     ~itkPlaneSpatialObject2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkPlaneSpatialObject2_Pointer {
   public:
     itkPlaneSpatialObject2_Pointer();
     itkPlaneSpatialObject2_Pointer(itkPlaneSpatialObject2_Pointer const & p);
     itkPlaneSpatialObject2_Pointer(itkPlaneSpatialObject2 * p);
     ~itkPlaneSpatialObject2_Pointer();
     itkPlaneSpatialObject2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkPlaneSpatialObject2 * GetPointer() const;
     bool operator<(itkPlaneSpatialObject2_Pointer const & r) const;
     bool operator>(itkPlaneSpatialObject2_Pointer const & r) const;
     bool operator<=(itkPlaneSpatialObject2_Pointer const & r) const;
     bool operator>=(itkPlaneSpatialObject2_Pointer const & r) const;
     itkPlaneSpatialObject2_Pointer & operator=(itkPlaneSpatialObject2_Pointer const & r);
     itkPlaneSpatialObject2_Pointer & operator=(itkPlaneSpatialObject2 * r);
     itkPlaneSpatialObject2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkPlaneSpatialObject3 : public itkSpatialObject3 {
   public:
     enum  {  NumberOfDimension = 3 };
     static itkPlaneSpatialObject3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual bool ValueAt(itkPointD3 const & point, double & value, unsigned int depth = 0, char * name = 0l) const;
     virtual bool IsEvaluableAt(itkPointD3 const & point, unsigned int depth = 0, char * name = 0l) const;
     virtual bool IsInside(itkPointD3 const & point, unsigned int depth, char * name) const;
     virtual bool IsInside(itkPointD3 const & point) const;
     virtual bool ComputeLocalBoundingBox() const;
     virtual void SetLowerPoint(itkPointD3 const _arg);
     virtual void SetUpperPoint(itkPointD3 const _arg);
     virtual itkPointD3 GetLowerPoint();
     virtual itkPointD3 GetUpperPoint();
   private:
   protected:
     itkPlaneSpatialObject3(itkPlaneSpatialObject3 const & arg0);
     void operator=(itkPlaneSpatialObject3 const & arg0);
     itkPlaneSpatialObject3();
     ~itkPlaneSpatialObject3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkPlaneSpatialObject3_Pointer {
   public:
     itkPlaneSpatialObject3_Pointer();
     itkPlaneSpatialObject3_Pointer(itkPlaneSpatialObject3_Pointer const & p);
     itkPlaneSpatialObject3_Pointer(itkPlaneSpatialObject3 * p);
     ~itkPlaneSpatialObject3_Pointer();
     itkPlaneSpatialObject3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkPlaneSpatialObject3 * GetPointer() const;
     bool operator<(itkPlaneSpatialObject3_Pointer const & r) const;
     bool operator>(itkPlaneSpatialObject3_Pointer const & r) const;
     bool operator<=(itkPlaneSpatialObject3_Pointer const & r) const;
     bool operator>=(itkPlaneSpatialObject3_Pointer const & r) const;
     itkPlaneSpatialObject3_Pointer & operator=(itkPlaneSpatialObject3_Pointer const & r);
     itkPlaneSpatialObject3_Pointer & operator=(itkPlaneSpatialObject3 * r);
     itkPlaneSpatialObject3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


