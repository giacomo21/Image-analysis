# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkRecursiveMultiResolutionPyramidImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkRecursiveMultiResolutionPyramidImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkRecursiveMultiResolutionPyramidImageFilterPython
            return _itkRecursiveMultiResolutionPyramidImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkRecursiveMultiResolutionPyramidImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkRecursiveMultiResolutionPyramidImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkRecursiveMultiResolutionPyramidImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkMultiResolutionPyramidImageFilterPython
import itkArray2DPython
import vnl_matrixPython
import vcl_complexPython
import vnl_vectorPython
import itkImageToImageFilterAPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import itkVectorPython
import vnl_vector_refPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
def itkRecursiveMultiResolutionPyramidImageFilterID3ID3_New():
  return itkRecursiveMultiResolutionPyramidImageFilterID3ID3.New()

def itkRecursiveMultiResolutionPyramidImageFilterID2ID2_New():
  return itkRecursiveMultiResolutionPyramidImageFilterID2ID2.New()

def itkRecursiveMultiResolutionPyramidImageFilterIF3IF3_New():
  return itkRecursiveMultiResolutionPyramidImageFilterIF3IF3.New()

def itkRecursiveMultiResolutionPyramidImageFilterIF2IF2_New():
  return itkRecursiveMultiResolutionPyramidImageFilterIF2IF2.New()

def itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3_New():
  return itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3.New()

def itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2_New():
  return itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2.New()

def itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3_New():
  return itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3.New()

def itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2_New():
  return itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2.New()

def itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3_New():
  return itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3.New()

def itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2_New():
  return itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2.New()

class itkRecursiveMultiResolutionPyramidImageFilterID2ID2(itkMultiResolutionPyramidImageFilterPython.itkMultiResolutionPyramidImageFilterID2ID2):
    """Proxy of C++ itkRecursiveMultiResolutionPyramidImageFilterID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterID2ID2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkRecursiveMultiResolutionPyramidImageFilterPython.delete_itkRecursiveMultiResolutionPyramidImageFilterID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkRecursiveMultiResolutionPyramidImageFilterID2ID2"""
        return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkRecursiveMultiResolutionPyramidImageFilterID2ID2"""
        return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkRecursiveMultiResolutionPyramidImageFilterID2ID2
        
        Create a new object of the class itkRecursiveMultiResolutionPyramidImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkRecursiveMultiResolutionPyramidImageFilterID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkRecursiveMultiResolutionPyramidImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRecursiveMultiResolutionPyramidImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRecursiveMultiResolutionPyramidImageFilterID2ID2.GetPointer = new_instancemethod(_itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterID2ID2_GetPointer,None,itkRecursiveMultiResolutionPyramidImageFilterID2ID2)
itkRecursiveMultiResolutionPyramidImageFilterID2ID2_swigregister = _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterID2ID2_swigregister
itkRecursiveMultiResolutionPyramidImageFilterID2ID2_swigregister(itkRecursiveMultiResolutionPyramidImageFilterID2ID2)

def itkRecursiveMultiResolutionPyramidImageFilterID2ID2___New_orig__():
  """itkRecursiveMultiResolutionPyramidImageFilterID2ID2___New_orig__()"""
  return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterID2ID2___New_orig__()

def itkRecursiveMultiResolutionPyramidImageFilterID2ID2_cast(*args):
  """itkRecursiveMultiResolutionPyramidImageFilterID2ID2_cast(itkLightObject obj) -> itkRecursiveMultiResolutionPyramidImageFilterID2ID2"""
  return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterID2ID2_cast(*args)

class itkRecursiveMultiResolutionPyramidImageFilterID3ID3(itkMultiResolutionPyramidImageFilterPython.itkMultiResolutionPyramidImageFilterID3ID3):
    """Proxy of C++ itkRecursiveMultiResolutionPyramidImageFilterID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterID3ID3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkRecursiveMultiResolutionPyramidImageFilterPython.delete_itkRecursiveMultiResolutionPyramidImageFilterID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkRecursiveMultiResolutionPyramidImageFilterID3ID3"""
        return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkRecursiveMultiResolutionPyramidImageFilterID3ID3"""
        return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkRecursiveMultiResolutionPyramidImageFilterID3ID3
        
        Create a new object of the class itkRecursiveMultiResolutionPyramidImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkRecursiveMultiResolutionPyramidImageFilterID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkRecursiveMultiResolutionPyramidImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRecursiveMultiResolutionPyramidImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRecursiveMultiResolutionPyramidImageFilterID3ID3.GetPointer = new_instancemethod(_itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterID3ID3_GetPointer,None,itkRecursiveMultiResolutionPyramidImageFilterID3ID3)
itkRecursiveMultiResolutionPyramidImageFilterID3ID3_swigregister = _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterID3ID3_swigregister
itkRecursiveMultiResolutionPyramidImageFilterID3ID3_swigregister(itkRecursiveMultiResolutionPyramidImageFilterID3ID3)

def itkRecursiveMultiResolutionPyramidImageFilterID3ID3___New_orig__():
  """itkRecursiveMultiResolutionPyramidImageFilterID3ID3___New_orig__()"""
  return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterID3ID3___New_orig__()

def itkRecursiveMultiResolutionPyramidImageFilterID3ID3_cast(*args):
  """itkRecursiveMultiResolutionPyramidImageFilterID3ID3_cast(itkLightObject obj) -> itkRecursiveMultiResolutionPyramidImageFilterID3ID3"""
  return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterID3ID3_cast(*args)

class itkRecursiveMultiResolutionPyramidImageFilterIF2IF2(itkMultiResolutionPyramidImageFilterPython.itkMultiResolutionPyramidImageFilterIF2IF2):
    """Proxy of C++ itkRecursiveMultiResolutionPyramidImageFilterIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIF2IF2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkRecursiveMultiResolutionPyramidImageFilterPython.delete_itkRecursiveMultiResolutionPyramidImageFilterIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkRecursiveMultiResolutionPyramidImageFilterIF2IF2"""
        return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkRecursiveMultiResolutionPyramidImageFilterIF2IF2"""
        return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkRecursiveMultiResolutionPyramidImageFilterIF2IF2
        
        Create a new object of the class itkRecursiveMultiResolutionPyramidImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkRecursiveMultiResolutionPyramidImageFilterIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkRecursiveMultiResolutionPyramidImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRecursiveMultiResolutionPyramidImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRecursiveMultiResolutionPyramidImageFilterIF2IF2.GetPointer = new_instancemethod(_itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIF2IF2_GetPointer,None,itkRecursiveMultiResolutionPyramidImageFilterIF2IF2)
itkRecursiveMultiResolutionPyramidImageFilterIF2IF2_swigregister = _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIF2IF2_swigregister
itkRecursiveMultiResolutionPyramidImageFilterIF2IF2_swigregister(itkRecursiveMultiResolutionPyramidImageFilterIF2IF2)

def itkRecursiveMultiResolutionPyramidImageFilterIF2IF2___New_orig__():
  """itkRecursiveMultiResolutionPyramidImageFilterIF2IF2___New_orig__()"""
  return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIF2IF2___New_orig__()

def itkRecursiveMultiResolutionPyramidImageFilterIF2IF2_cast(*args):
  """itkRecursiveMultiResolutionPyramidImageFilterIF2IF2_cast(itkLightObject obj) -> itkRecursiveMultiResolutionPyramidImageFilterIF2IF2"""
  return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIF2IF2_cast(*args)

class itkRecursiveMultiResolutionPyramidImageFilterIF3IF3(itkMultiResolutionPyramidImageFilterPython.itkMultiResolutionPyramidImageFilterIF3IF3):
    """Proxy of C++ itkRecursiveMultiResolutionPyramidImageFilterIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIF3IF3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkRecursiveMultiResolutionPyramidImageFilterPython.delete_itkRecursiveMultiResolutionPyramidImageFilterIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkRecursiveMultiResolutionPyramidImageFilterIF3IF3"""
        return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkRecursiveMultiResolutionPyramidImageFilterIF3IF3"""
        return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkRecursiveMultiResolutionPyramidImageFilterIF3IF3
        
        Create a new object of the class itkRecursiveMultiResolutionPyramidImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkRecursiveMultiResolutionPyramidImageFilterIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkRecursiveMultiResolutionPyramidImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRecursiveMultiResolutionPyramidImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRecursiveMultiResolutionPyramidImageFilterIF3IF3.GetPointer = new_instancemethod(_itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIF3IF3_GetPointer,None,itkRecursiveMultiResolutionPyramidImageFilterIF3IF3)
itkRecursiveMultiResolutionPyramidImageFilterIF3IF3_swigregister = _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIF3IF3_swigregister
itkRecursiveMultiResolutionPyramidImageFilterIF3IF3_swigregister(itkRecursiveMultiResolutionPyramidImageFilterIF3IF3)

def itkRecursiveMultiResolutionPyramidImageFilterIF3IF3___New_orig__():
  """itkRecursiveMultiResolutionPyramidImageFilterIF3IF3___New_orig__()"""
  return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIF3IF3___New_orig__()

def itkRecursiveMultiResolutionPyramidImageFilterIF3IF3_cast(*args):
  """itkRecursiveMultiResolutionPyramidImageFilterIF3IF3_cast(itkLightObject obj) -> itkRecursiveMultiResolutionPyramidImageFilterIF3IF3"""
  return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIF3IF3_cast(*args)

class itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2(itkMultiResolutionPyramidImageFilterPython.itkMultiResolutionPyramidImageFilterIUC2IUC2):
    """Proxy of C++ itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkRecursiveMultiResolutionPyramidImageFilterPython.delete_itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2"""
        return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2"""
        return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2
        
        Create a new object of the class itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2_GetPointer,None,itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2)
itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2_swigregister = _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2_swigregister
itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2_swigregister(itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2)

def itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2___New_orig__():
  """itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2___New_orig__()"""
  return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2___New_orig__()

def itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2_cast(*args):
  """itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2"""
  return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2_cast(*args)

class itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3(itkMultiResolutionPyramidImageFilterPython.itkMultiResolutionPyramidImageFilterIUC3IUC3):
    """Proxy of C++ itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkRecursiveMultiResolutionPyramidImageFilterPython.delete_itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3"""
        return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3"""
        return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3
        
        Create a new object of the class itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3_GetPointer,None,itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3)
itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3_swigregister = _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3_swigregister
itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3_swigregister(itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3)

def itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3___New_orig__():
  """itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3___New_orig__()"""
  return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3___New_orig__()

def itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3_cast(*args):
  """itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3"""
  return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3_cast(*args)

class itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2(itkMultiResolutionPyramidImageFilterPython.itkMultiResolutionPyramidImageFilterIUL2IUL2):
    """Proxy of C++ itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkRecursiveMultiResolutionPyramidImageFilterPython.delete_itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2"""
        return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2"""
        return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2
        
        Create a new object of the class itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2.GetPointer = new_instancemethod(_itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2_GetPointer,None,itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2)
itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2_swigregister = _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2_swigregister
itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2_swigregister(itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2)

def itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2___New_orig__():
  """itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2___New_orig__()"""
  return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2___New_orig__()

def itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2_cast(*args):
  """itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2_cast(itkLightObject obj) -> itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2"""
  return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2_cast(*args)

class itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3(itkMultiResolutionPyramidImageFilterPython.itkMultiResolutionPyramidImageFilterIUL3IUL3):
    """Proxy of C++ itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkRecursiveMultiResolutionPyramidImageFilterPython.delete_itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3"""
        return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3"""
        return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3
        
        Create a new object of the class itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3.GetPointer = new_instancemethod(_itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3_GetPointer,None,itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3)
itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3_swigregister = _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3_swigregister
itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3_swigregister(itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3)

def itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3___New_orig__():
  """itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3___New_orig__()"""
  return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3___New_orig__()

def itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3_cast(*args):
  """itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3_cast(itkLightObject obj) -> itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3"""
  return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3_cast(*args)

class itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2(itkMultiResolutionPyramidImageFilterPython.itkMultiResolutionPyramidImageFilterIUS2IUS2):
    """Proxy of C++ itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkRecursiveMultiResolutionPyramidImageFilterPython.delete_itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2"""
        return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2"""
        return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2
        
        Create a new object of the class itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2.GetPointer = new_instancemethod(_itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2_GetPointer,None,itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2)
itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2_swigregister = _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2_swigregister
itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2_swigregister(itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2)

def itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2___New_orig__():
  """itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2___New_orig__()"""
  return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2___New_orig__()

def itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2_cast(*args):
  """itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2"""
  return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2_cast(*args)

class itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3(itkMultiResolutionPyramidImageFilterPython.itkMultiResolutionPyramidImageFilterIUS3IUS3):
    """Proxy of C++ itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkRecursiveMultiResolutionPyramidImageFilterPython.delete_itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3"""
        return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3"""
        return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3
        
        Create a new object of the class itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3.GetPointer = new_instancemethod(_itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3_GetPointer,None,itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3)
itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3_swigregister = _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3_swigregister
itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3_swigregister(itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3)

def itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3___New_orig__():
  """itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3___New_orig__()"""
  return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3___New_orig__()

def itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3_cast(*args):
  """itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3"""
  return _itkRecursiveMultiResolutionPyramidImageFilterPython.itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3_cast(*args)



