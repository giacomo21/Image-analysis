# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkPointPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkPointPython', [dirname(__file__)])
        except ImportError:
            import _itkPointPython
            return _itkPointPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkPointPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkPointPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkPointPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import vnl_vectorPython
import vcl_complexPython
import pyBasePython
import vnl_matrixPython
import itkFixedArrayPython
import itkVectorPython
import vnl_vector_refPython
class itkPointD2(itkFixedArrayPython.itkFixedArrayD2):
    """Proxy of C++ itkPointD2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    PointDimension = _itkPointPython.itkPointD2_PointDimension
    __swig_destroy__ = _itkPointPython.delete_itkPointD2
    def GetPointDimension():
        """GetPointDimension() -> unsigned int"""
        return _itkPointPython.itkPointD2_GetPointDimension()

    GetPointDimension = staticmethod(GetPointDimension)
    def __init__(self, *args): 
        """
        __init__(self, itkPointD2 arg0) -> itkPointD2
        __init__(self) -> itkPointD2
        __init__(self, double r) -> itkPointD2
        """
        _itkPointPython.itkPointD2_swiginit(self,_itkPointPython.new_itkPointD2(*args))
    def __eq__(self, *args):
        """__eq__(self, itkPointD2 pt) -> bool"""
        return _itkPointPython.itkPointD2___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(self, itkPointD2 pt) -> bool"""
        return _itkPointPython.itkPointD2___ne__(self, *args)

    def __iadd__(self, *args):
        """__iadd__(self, itkVectorD2 vec) -> itkPointD2"""
        return _itkPointPython.itkPointD2___iadd__(self, *args)

    def __isub__(self, *args):
        """__isub__(self, itkVectorD2 vec) -> itkPointD2"""
        return _itkPointPython.itkPointD2___isub__(self, *args)

    def __add__(self, *args):
        """__add__(self, itkVectorD2 vec) -> itkPointD2"""
        return _itkPointPython.itkPointD2___add__(self, *args)

    def __sub__(self, *args):
        """
        __sub__(self, itkPointD2 pnt) -> itkVectorD2
        __sub__(self, itkVectorD2 vec) -> itkPointD2
        """
        return _itkPointPython.itkPointD2___sub__(self, *args)

    def GetVectorFromOrigin(self):
        """GetVectorFromOrigin(self) -> itkVectorD2"""
        return _itkPointPython.itkPointD2_GetVectorFromOrigin(self)

    def GetVnlVector(self, *args):
        """
        GetVnlVector(self) -> vnl_vector_refD
        GetVnlVector(self) -> vnl_vectorD
        """
        return _itkPointPython.itkPointD2_GetVnlVector(self, *args)

    def Get_vnl_vector(self, *args):
        """
        Get_vnl_vector(self) -> vnl_vector_refD
        Get_vnl_vector(self) -> vnl_vectorD
        """
        return _itkPointPython.itkPointD2_Get_vnl_vector(self, *args)

    def SetToMidPoint(self, *args):
        """SetToMidPoint(self, itkPointD2 arg0, itkPointD2 arg1)"""
        return _itkPointPython.itkPointD2_SetToMidPoint(self, *args)

    def SetToBarycentricCombination(self, *args):
        """
        SetToBarycentricCombination(self, itkPointD2 A, itkPointD2 B, double alpha)
        SetToBarycentricCombination(self, itkPointD2 A, itkPointD2 B, itkPointD2 C, double weightA, 
            double weightB)
        SetToBarycentricCombination(self, itkPointD2 P, double weights, unsigned int N)
        """
        return _itkPointPython.itkPointD2_SetToBarycentricCombination(self, *args)

    def __getitem__(self, *args):
        """__getitem__(self, unsigned long dim) -> double"""
        return _itkPointPython.itkPointD2___getitem__(self, *args)

    def __setitem__(self, *args):
        """__setitem__(self, unsigned long dim, double v)"""
        return _itkPointPython.itkPointD2___setitem__(self, *args)

    def __len__(self):
        """__len__(self) -> unsigned int"""
        return _itkPointPython.itkPointD2___len__(self)

    def __repr__(self):
        """__repr__(self) -> string"""
        return _itkPointPython.itkPointD2___repr__(self)

itkPointD2.__eq__ = new_instancemethod(_itkPointPython.itkPointD2___eq__,None,itkPointD2)
itkPointD2.__ne__ = new_instancemethod(_itkPointPython.itkPointD2___ne__,None,itkPointD2)
itkPointD2.__iadd__ = new_instancemethod(_itkPointPython.itkPointD2___iadd__,None,itkPointD2)
itkPointD2.__isub__ = new_instancemethod(_itkPointPython.itkPointD2___isub__,None,itkPointD2)
itkPointD2.__add__ = new_instancemethod(_itkPointPython.itkPointD2___add__,None,itkPointD2)
itkPointD2.__sub__ = new_instancemethod(_itkPointPython.itkPointD2___sub__,None,itkPointD2)
itkPointD2.GetVectorFromOrigin = new_instancemethod(_itkPointPython.itkPointD2_GetVectorFromOrigin,None,itkPointD2)
itkPointD2.GetVnlVector = new_instancemethod(_itkPointPython.itkPointD2_GetVnlVector,None,itkPointD2)
itkPointD2.Get_vnl_vector = new_instancemethod(_itkPointPython.itkPointD2_Get_vnl_vector,None,itkPointD2)
itkPointD2.SetToMidPoint = new_instancemethod(_itkPointPython.itkPointD2_SetToMidPoint,None,itkPointD2)
itkPointD2.SetToBarycentricCombination = new_instancemethod(_itkPointPython.itkPointD2_SetToBarycentricCombination,None,itkPointD2)
itkPointD2.__getitem__ = new_instancemethod(_itkPointPython.itkPointD2___getitem__,None,itkPointD2)
itkPointD2.__setitem__ = new_instancemethod(_itkPointPython.itkPointD2___setitem__,None,itkPointD2)
itkPointD2.__len__ = new_instancemethod(_itkPointPython.itkPointD2___len__,None,itkPointD2)
itkPointD2.__repr__ = new_instancemethod(_itkPointPython.itkPointD2___repr__,None,itkPointD2)
itkPointD2_swigregister = _itkPointPython.itkPointD2_swigregister
itkPointD2_swigregister(itkPointD2)

def itkPointD2_GetPointDimension():
  """itkPointD2_GetPointDimension() -> unsigned int"""
  return _itkPointPython.itkPointD2_GetPointDimension()

class itkPointD3(itkFixedArrayPython.itkFixedArrayD3):
    """Proxy of C++ itkPointD3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    PointDimension = _itkPointPython.itkPointD3_PointDimension
    __swig_destroy__ = _itkPointPython.delete_itkPointD3
    def GetPointDimension():
        """GetPointDimension() -> unsigned int"""
        return _itkPointPython.itkPointD3_GetPointDimension()

    GetPointDimension = staticmethod(GetPointDimension)
    def __init__(self, *args): 
        """
        __init__(self, itkPointD3 arg0) -> itkPointD3
        __init__(self) -> itkPointD3
        __init__(self, double r) -> itkPointD3
        """
        _itkPointPython.itkPointD3_swiginit(self,_itkPointPython.new_itkPointD3(*args))
    def __eq__(self, *args):
        """__eq__(self, itkPointD3 pt) -> bool"""
        return _itkPointPython.itkPointD3___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(self, itkPointD3 pt) -> bool"""
        return _itkPointPython.itkPointD3___ne__(self, *args)

    def __iadd__(self, *args):
        """__iadd__(self, itkVectorD3 vec) -> itkPointD3"""
        return _itkPointPython.itkPointD3___iadd__(self, *args)

    def __isub__(self, *args):
        """__isub__(self, itkVectorD3 vec) -> itkPointD3"""
        return _itkPointPython.itkPointD3___isub__(self, *args)

    def __add__(self, *args):
        """__add__(self, itkVectorD3 vec) -> itkPointD3"""
        return _itkPointPython.itkPointD3___add__(self, *args)

    def __sub__(self, *args):
        """
        __sub__(self, itkPointD3 pnt) -> itkVectorD3
        __sub__(self, itkVectorD3 vec) -> itkPointD3
        """
        return _itkPointPython.itkPointD3___sub__(self, *args)

    def GetVectorFromOrigin(self):
        """GetVectorFromOrigin(self) -> itkVectorD3"""
        return _itkPointPython.itkPointD3_GetVectorFromOrigin(self)

    def GetVnlVector(self, *args):
        """
        GetVnlVector(self) -> vnl_vector_refD
        GetVnlVector(self) -> vnl_vectorD
        """
        return _itkPointPython.itkPointD3_GetVnlVector(self, *args)

    def Get_vnl_vector(self, *args):
        """
        Get_vnl_vector(self) -> vnl_vector_refD
        Get_vnl_vector(self) -> vnl_vectorD
        """
        return _itkPointPython.itkPointD3_Get_vnl_vector(self, *args)

    def SetToMidPoint(self, *args):
        """SetToMidPoint(self, itkPointD3 arg0, itkPointD3 arg1)"""
        return _itkPointPython.itkPointD3_SetToMidPoint(self, *args)

    def SetToBarycentricCombination(self, *args):
        """
        SetToBarycentricCombination(self, itkPointD3 A, itkPointD3 B, double alpha)
        SetToBarycentricCombination(self, itkPointD3 A, itkPointD3 B, itkPointD3 C, double weightA, 
            double weightB)
        SetToBarycentricCombination(self, itkPointD3 P, double weights, unsigned int N)
        """
        return _itkPointPython.itkPointD3_SetToBarycentricCombination(self, *args)

    def __getitem__(self, *args):
        """__getitem__(self, unsigned long dim) -> double"""
        return _itkPointPython.itkPointD3___getitem__(self, *args)

    def __setitem__(self, *args):
        """__setitem__(self, unsigned long dim, double v)"""
        return _itkPointPython.itkPointD3___setitem__(self, *args)

    def __len__(self):
        """__len__(self) -> unsigned int"""
        return _itkPointPython.itkPointD3___len__(self)

    def __repr__(self):
        """__repr__(self) -> string"""
        return _itkPointPython.itkPointD3___repr__(self)

itkPointD3.__eq__ = new_instancemethod(_itkPointPython.itkPointD3___eq__,None,itkPointD3)
itkPointD3.__ne__ = new_instancemethod(_itkPointPython.itkPointD3___ne__,None,itkPointD3)
itkPointD3.__iadd__ = new_instancemethod(_itkPointPython.itkPointD3___iadd__,None,itkPointD3)
itkPointD3.__isub__ = new_instancemethod(_itkPointPython.itkPointD3___isub__,None,itkPointD3)
itkPointD3.__add__ = new_instancemethod(_itkPointPython.itkPointD3___add__,None,itkPointD3)
itkPointD3.__sub__ = new_instancemethod(_itkPointPython.itkPointD3___sub__,None,itkPointD3)
itkPointD3.GetVectorFromOrigin = new_instancemethod(_itkPointPython.itkPointD3_GetVectorFromOrigin,None,itkPointD3)
itkPointD3.GetVnlVector = new_instancemethod(_itkPointPython.itkPointD3_GetVnlVector,None,itkPointD3)
itkPointD3.Get_vnl_vector = new_instancemethod(_itkPointPython.itkPointD3_Get_vnl_vector,None,itkPointD3)
itkPointD3.SetToMidPoint = new_instancemethod(_itkPointPython.itkPointD3_SetToMidPoint,None,itkPointD3)
itkPointD3.SetToBarycentricCombination = new_instancemethod(_itkPointPython.itkPointD3_SetToBarycentricCombination,None,itkPointD3)
itkPointD3.__getitem__ = new_instancemethod(_itkPointPython.itkPointD3___getitem__,None,itkPointD3)
itkPointD3.__setitem__ = new_instancemethod(_itkPointPython.itkPointD3___setitem__,None,itkPointD3)
itkPointD3.__len__ = new_instancemethod(_itkPointPython.itkPointD3___len__,None,itkPointD3)
itkPointD3.__repr__ = new_instancemethod(_itkPointPython.itkPointD3___repr__,None,itkPointD3)
itkPointD3_swigregister = _itkPointPython.itkPointD3_swigregister
itkPointD3_swigregister(itkPointD3)

def itkPointD3_GetPointDimension():
  """itkPointD3_GetPointDimension() -> unsigned int"""
  return _itkPointPython.itkPointD3_GetPointDimension()

class itkPointF2(itkFixedArrayPython.itkFixedArrayF2):
    """Proxy of C++ itkPointF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    PointDimension = _itkPointPython.itkPointF2_PointDimension
    __swig_destroy__ = _itkPointPython.delete_itkPointF2
    def GetPointDimension():
        """GetPointDimension() -> unsigned int"""
        return _itkPointPython.itkPointF2_GetPointDimension()

    GetPointDimension = staticmethod(GetPointDimension)
    def __init__(self, *args): 
        """
        __init__(self, itkPointF2 arg0) -> itkPointF2
        __init__(self) -> itkPointF2
        __init__(self, float r) -> itkPointF2
        """
        _itkPointPython.itkPointF2_swiginit(self,_itkPointPython.new_itkPointF2(*args))
    def __eq__(self, *args):
        """__eq__(self, itkPointF2 pt) -> bool"""
        return _itkPointPython.itkPointF2___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(self, itkPointF2 pt) -> bool"""
        return _itkPointPython.itkPointF2___ne__(self, *args)

    def __iadd__(self, *args):
        """__iadd__(self, itkVectorF2 vec) -> itkPointF2"""
        return _itkPointPython.itkPointF2___iadd__(self, *args)

    def __isub__(self, *args):
        """__isub__(self, itkVectorF2 vec) -> itkPointF2"""
        return _itkPointPython.itkPointF2___isub__(self, *args)

    def __add__(self, *args):
        """__add__(self, itkVectorF2 vec) -> itkPointF2"""
        return _itkPointPython.itkPointF2___add__(self, *args)

    def __sub__(self, *args):
        """
        __sub__(self, itkPointF2 pnt) -> itkVectorF2
        __sub__(self, itkVectorF2 vec) -> itkPointF2
        """
        return _itkPointPython.itkPointF2___sub__(self, *args)

    def GetVectorFromOrigin(self):
        """GetVectorFromOrigin(self) -> itkVectorF2"""
        return _itkPointPython.itkPointF2_GetVectorFromOrigin(self)

    def GetVnlVector(self, *args):
        """
        GetVnlVector(self) -> vnl_vector_refF
        GetVnlVector(self) -> vnl_vectorF
        """
        return _itkPointPython.itkPointF2_GetVnlVector(self, *args)

    def Get_vnl_vector(self, *args):
        """
        Get_vnl_vector(self) -> vnl_vector_refF
        Get_vnl_vector(self) -> vnl_vectorF
        """
        return _itkPointPython.itkPointF2_Get_vnl_vector(self, *args)

    def SetToMidPoint(self, *args):
        """SetToMidPoint(self, itkPointF2 arg0, itkPointF2 arg1)"""
        return _itkPointPython.itkPointF2_SetToMidPoint(self, *args)

    def SetToBarycentricCombination(self, *args):
        """
        SetToBarycentricCombination(self, itkPointF2 A, itkPointF2 B, double alpha)
        SetToBarycentricCombination(self, itkPointF2 A, itkPointF2 B, itkPointF2 C, double weightA, 
            double weightB)
        SetToBarycentricCombination(self, itkPointF2 P, double weights, unsigned int N)
        """
        return _itkPointPython.itkPointF2_SetToBarycentricCombination(self, *args)

    def __getitem__(self, *args):
        """__getitem__(self, unsigned long dim) -> float"""
        return _itkPointPython.itkPointF2___getitem__(self, *args)

    def __setitem__(self, *args):
        """__setitem__(self, unsigned long dim, float v)"""
        return _itkPointPython.itkPointF2___setitem__(self, *args)

    def __len__(self):
        """__len__(self) -> unsigned int"""
        return _itkPointPython.itkPointF2___len__(self)

    def __repr__(self):
        """__repr__(self) -> string"""
        return _itkPointPython.itkPointF2___repr__(self)

itkPointF2.__eq__ = new_instancemethod(_itkPointPython.itkPointF2___eq__,None,itkPointF2)
itkPointF2.__ne__ = new_instancemethod(_itkPointPython.itkPointF2___ne__,None,itkPointF2)
itkPointF2.__iadd__ = new_instancemethod(_itkPointPython.itkPointF2___iadd__,None,itkPointF2)
itkPointF2.__isub__ = new_instancemethod(_itkPointPython.itkPointF2___isub__,None,itkPointF2)
itkPointF2.__add__ = new_instancemethod(_itkPointPython.itkPointF2___add__,None,itkPointF2)
itkPointF2.__sub__ = new_instancemethod(_itkPointPython.itkPointF2___sub__,None,itkPointF2)
itkPointF2.GetVectorFromOrigin = new_instancemethod(_itkPointPython.itkPointF2_GetVectorFromOrigin,None,itkPointF2)
itkPointF2.GetVnlVector = new_instancemethod(_itkPointPython.itkPointF2_GetVnlVector,None,itkPointF2)
itkPointF2.Get_vnl_vector = new_instancemethod(_itkPointPython.itkPointF2_Get_vnl_vector,None,itkPointF2)
itkPointF2.SetToMidPoint = new_instancemethod(_itkPointPython.itkPointF2_SetToMidPoint,None,itkPointF2)
itkPointF2.SetToBarycentricCombination = new_instancemethod(_itkPointPython.itkPointF2_SetToBarycentricCombination,None,itkPointF2)
itkPointF2.__getitem__ = new_instancemethod(_itkPointPython.itkPointF2___getitem__,None,itkPointF2)
itkPointF2.__setitem__ = new_instancemethod(_itkPointPython.itkPointF2___setitem__,None,itkPointF2)
itkPointF2.__len__ = new_instancemethod(_itkPointPython.itkPointF2___len__,None,itkPointF2)
itkPointF2.__repr__ = new_instancemethod(_itkPointPython.itkPointF2___repr__,None,itkPointF2)
itkPointF2_swigregister = _itkPointPython.itkPointF2_swigregister
itkPointF2_swigregister(itkPointF2)

def itkPointF2_GetPointDimension():
  """itkPointF2_GetPointDimension() -> unsigned int"""
  return _itkPointPython.itkPointF2_GetPointDimension()

class itkPointF3(itkFixedArrayPython.itkFixedArrayF3):
    """Proxy of C++ itkPointF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    PointDimension = _itkPointPython.itkPointF3_PointDimension
    __swig_destroy__ = _itkPointPython.delete_itkPointF3
    def GetPointDimension():
        """GetPointDimension() -> unsigned int"""
        return _itkPointPython.itkPointF3_GetPointDimension()

    GetPointDimension = staticmethod(GetPointDimension)
    def __init__(self, *args): 
        """
        __init__(self, itkPointF3 arg0) -> itkPointF3
        __init__(self) -> itkPointF3
        __init__(self, float r) -> itkPointF3
        """
        _itkPointPython.itkPointF3_swiginit(self,_itkPointPython.new_itkPointF3(*args))
    def __eq__(self, *args):
        """__eq__(self, itkPointF3 pt) -> bool"""
        return _itkPointPython.itkPointF3___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(self, itkPointF3 pt) -> bool"""
        return _itkPointPython.itkPointF3___ne__(self, *args)

    def __iadd__(self, *args):
        """__iadd__(self, itkVectorF3 vec) -> itkPointF3"""
        return _itkPointPython.itkPointF3___iadd__(self, *args)

    def __isub__(self, *args):
        """__isub__(self, itkVectorF3 vec) -> itkPointF3"""
        return _itkPointPython.itkPointF3___isub__(self, *args)

    def __add__(self, *args):
        """__add__(self, itkVectorF3 vec) -> itkPointF3"""
        return _itkPointPython.itkPointF3___add__(self, *args)

    def __sub__(self, *args):
        """
        __sub__(self, itkPointF3 pnt) -> itkVectorF3
        __sub__(self, itkVectorF3 vec) -> itkPointF3
        """
        return _itkPointPython.itkPointF3___sub__(self, *args)

    def GetVectorFromOrigin(self):
        """GetVectorFromOrigin(self) -> itkVectorF3"""
        return _itkPointPython.itkPointF3_GetVectorFromOrigin(self)

    def GetVnlVector(self, *args):
        """
        GetVnlVector(self) -> vnl_vector_refF
        GetVnlVector(self) -> vnl_vectorF
        """
        return _itkPointPython.itkPointF3_GetVnlVector(self, *args)

    def Get_vnl_vector(self, *args):
        """
        Get_vnl_vector(self) -> vnl_vector_refF
        Get_vnl_vector(self) -> vnl_vectorF
        """
        return _itkPointPython.itkPointF3_Get_vnl_vector(self, *args)

    def SetToMidPoint(self, *args):
        """SetToMidPoint(self, itkPointF3 arg0, itkPointF3 arg1)"""
        return _itkPointPython.itkPointF3_SetToMidPoint(self, *args)

    def SetToBarycentricCombination(self, *args):
        """
        SetToBarycentricCombination(self, itkPointF3 A, itkPointF3 B, double alpha)
        SetToBarycentricCombination(self, itkPointF3 A, itkPointF3 B, itkPointF3 C, double weightA, 
            double weightB)
        SetToBarycentricCombination(self, itkPointF3 P, double weights, unsigned int N)
        """
        return _itkPointPython.itkPointF3_SetToBarycentricCombination(self, *args)

    def __getitem__(self, *args):
        """__getitem__(self, unsigned long dim) -> float"""
        return _itkPointPython.itkPointF3___getitem__(self, *args)

    def __setitem__(self, *args):
        """__setitem__(self, unsigned long dim, float v)"""
        return _itkPointPython.itkPointF3___setitem__(self, *args)

    def __len__(self):
        """__len__(self) -> unsigned int"""
        return _itkPointPython.itkPointF3___len__(self)

    def __repr__(self):
        """__repr__(self) -> string"""
        return _itkPointPython.itkPointF3___repr__(self)

itkPointF3.__eq__ = new_instancemethod(_itkPointPython.itkPointF3___eq__,None,itkPointF3)
itkPointF3.__ne__ = new_instancemethod(_itkPointPython.itkPointF3___ne__,None,itkPointF3)
itkPointF3.__iadd__ = new_instancemethod(_itkPointPython.itkPointF3___iadd__,None,itkPointF3)
itkPointF3.__isub__ = new_instancemethod(_itkPointPython.itkPointF3___isub__,None,itkPointF3)
itkPointF3.__add__ = new_instancemethod(_itkPointPython.itkPointF3___add__,None,itkPointF3)
itkPointF3.__sub__ = new_instancemethod(_itkPointPython.itkPointF3___sub__,None,itkPointF3)
itkPointF3.GetVectorFromOrigin = new_instancemethod(_itkPointPython.itkPointF3_GetVectorFromOrigin,None,itkPointF3)
itkPointF3.GetVnlVector = new_instancemethod(_itkPointPython.itkPointF3_GetVnlVector,None,itkPointF3)
itkPointF3.Get_vnl_vector = new_instancemethod(_itkPointPython.itkPointF3_Get_vnl_vector,None,itkPointF3)
itkPointF3.SetToMidPoint = new_instancemethod(_itkPointPython.itkPointF3_SetToMidPoint,None,itkPointF3)
itkPointF3.SetToBarycentricCombination = new_instancemethod(_itkPointPython.itkPointF3_SetToBarycentricCombination,None,itkPointF3)
itkPointF3.__getitem__ = new_instancemethod(_itkPointPython.itkPointF3___getitem__,None,itkPointF3)
itkPointF3.__setitem__ = new_instancemethod(_itkPointPython.itkPointF3___setitem__,None,itkPointF3)
itkPointF3.__len__ = new_instancemethod(_itkPointPython.itkPointF3___len__,None,itkPointF3)
itkPointF3.__repr__ = new_instancemethod(_itkPointPython.itkPointF3___repr__,None,itkPointF3)
itkPointF3_swigregister = _itkPointPython.itkPointF3_swigregister
itkPointF3_swigregister(itkPointF3)

def itkPointF3_GetPointDimension():
  """itkPointF3_GetPointDimension() -> unsigned int"""
  return _itkPointPython.itkPointF3_GetPointDimension()



